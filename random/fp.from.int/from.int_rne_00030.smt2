(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNE rounded_int)
(declare-const x Int)
(assert (= x 40551614179738943764555997433296579039452608213724836668842462563072125181746306385120002484866560169456744560575229761752339506010599113663948929489341012884744315563120939912431690381575023996776216312220926301266983662792584730280393281651757417364192332557825280932738411016375074819972209646217695379536))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FCCDFAB4F2CBE50 [Rational(40551614179738941377450632531251369418332565221886850502175332491850122895409999144189198361331289795668252252119670758319988715103038460006805415805716059033304853105317779499552523307952303345843608992519352307227519393695302875410417737426957830087499240265482187907395858615255305866813467721108081868800), 40551614179738941377450632531251369418332565221886850502175332491850122895409999144189198361331289795668252252119670758319988715103038460006805415805716059033304853105317779499552523307952303345843608992519352307227519393695302875410417737426957830087499240265482187907395858615255305866813467721108081868800.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111100 #b1100110111111010101101001111001011001011111001010000)))
(assert (not (= y z)))
