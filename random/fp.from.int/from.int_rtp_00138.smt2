(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTP inf)
(declare-const x Int)
(assert (= x (- 248643275764900588074618719734850659788767536917223933177247457708550917510866632598622388677929566571967510833474723458790724410291384709455968220082580096561571280388140532068386496066654422678194189743941673226838172734230805583393313307219334224462323756631362404941803161101881212789236231424346123758977)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEFFFFFFFFFFFFF [Rational(-179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368), -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFEFFFFFFFFFFFFF)))
(assert (= y z))
