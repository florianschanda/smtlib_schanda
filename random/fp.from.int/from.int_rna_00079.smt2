(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNA rounded_int)
(declare-const x Int)
(assert (= x (- 168264015692589271051092422993023406845884014444784067541997169947398125471912367906470460498262831040291968321094438538170529457930005930563958289281940810022108405923807218384706029581345126903788176621403635931143095481905857445178586195592185674835620952706913256085386575949294584758429668353277153130882)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEDF3B58D46FB75 [Rational(-168264015692589261484228178924154433218858961038537912290514059368978841548248818604233115771225846646850987969142028553019649870154665602132438060508900599942874966147868596926126597423443122573422010488166171638757076684321716067890579458130610547119828101453594629989153764337889953158122044444315448508416), -168264015692589261484228178924154433218858961038537912290514059368978841548248818604233115771225846646850987969142028553019649870154665602132438060508900599942874966147868596926126597423443122573422010488166171638757076684321716067890579458130610547119828101453594629989153764337889953158122044444315448508416.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFEDF3B58D46FB75)))
(assert (not (= y z)))
