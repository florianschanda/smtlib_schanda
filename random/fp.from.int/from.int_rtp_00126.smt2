(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTP rounded_int)
(declare-const x Int)
(assert (= x (- 157145467486602223029511213201704584004750700914802526322503562172138039501619824704422700627451581071057179131925801265907126921444572017020823455009573176681903693838927981172867050570270913232864326625584326481901349145734225941623298108984787189616104826394553802992450733945589510608644111381132342410155)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEBF90AD8609AF1 [Rational(-157145467486602217693501609024673542556926588874715155280886586266952713083524156681298832038478487070892865686121353160243961415228133288317548419477260046110810543973370031804792935897768046727813611542192610776308458768238856079595384532669874176489516740972809744229572739477579179195499104720341857992704), -157145467486602217693501609024673542556926588874715155280886586266952713083524156681298832038478487070892865686121353160243961415228133288317548419477260046110810543973370031804792935897768046727813611542192610776308458768238856079595384532669874176489516740972809744229572739477579179195499104720341857992704.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b1011111110010000101011011000011000001001101011110001)))
(assert (not (= y z)))
