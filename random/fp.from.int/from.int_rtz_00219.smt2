(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTZ halfpoint_int)
(declare-const x Int)
(assert (= x (- 90005051020089202814612022454911793604583514109029591702549248188992083537937211447689095135697078415683675006413476421350270415450989458488006847060101755122813518996513103501349371064713908928118713399976270065919126317587990680318121143379638708333446582537824122788423390438568081856034768658387771064320)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFE0057C7EB72722 [Rational(-90005051020089192835410474781312735322719948924836761365292946011704376025200999261629635790876749490893847543234970974638036194488513238625816905092133451426954527572356001901321006309285526340430106178161334152652342594868370713664068867775286763889170240297603335252818856059787873644242292506667721424896), -90005051020089192835410474781312735322719948924836761365292946011704376025200999261629635790876749490893847543234970974638036194488513238625816905092133451426954527572356001901321006309285526340430106178161334152652342594868370713664068867775286763889170240297603335252818856059787873644242292506667721424896.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b0000000001010111110001111110101101110010011100100010)))
(assert (not (= y z)))
