(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNE halfpoint_int)
(declare-const x Int)
(assert (= x (- 115752131872276399881960935089593026527212579972166519037112787528966993478546275010127937546653189882013339449379656916181423307711485840149693868959649939731155752914497832655837207310393759020608842811359912570319368128302615986900831099572853515300174462428419737153654403765825249424679901119313606606848)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFE49AC4AB028670 [Rational(-115752131872276409861162482763192084809076145156359349374369089706254700991282487196187396891473518806803166912558162362893657528673962060011883810927618243427014744338654934255865572065822141608297450033174848483586151851022235953554883375177205459744450804668640524689258938144605457636472377271033656246272), -115752131872276409861162482763192084809076145156359349374369089706254700991282487196187396891473518806803166912558162362893657528673962060011883810927618243427014744338654934255865572065822141608297450033174848483586151851022235953554883375177205459744450804668640524689258938144605457636472377271033656246272.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b0100100110101100010010101011000000101000011001110000)))
(assert (not (= y z)))
