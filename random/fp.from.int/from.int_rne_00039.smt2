(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RNE halfpoint_int)
(declare-const x Int)
(assert (= x (- 61857592053570746700706068503364384769963243183920838089351519622306674858295335006680523353368590609812594804274519530523095689594403152381255532470258541251899182324643075910816480490128932592821934636803658837549602028216432593276072020200246913948190083488573260183155335870675051359839843602980394762240)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFD605A4013A4388 [Rational(-61857592053570751690306842340163913910895025776017253257979670710950528614663441099710253025778755072207508535863772253879212800075641262312350503454242693099828678036721626710830662867843123886666238247711126794182993889576242576603098158002422886170328254608683653950957603060065155465736081678840419581952), -61857592053570751690306842340163913910895025776017253257979670710950528614663441099710253025778755072207508535863772253879212800075641262312350503454242693099828678036721626710830662867843123886666238247711126794182993889576242576603098158002422886170328254608683653950957603060065155465736081678840419581952.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111101 #b0110000001011010010000000001001110100100001110001000)))
(assert (= y z))
