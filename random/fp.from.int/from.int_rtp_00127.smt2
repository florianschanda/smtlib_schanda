(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTP halfpoint_int)
(declare-const x Int)
(assert (= x 42931490153634902344137064055513454576165796084779679828620216595036952353090868743427133548450863186152340805746455877839416353992044427274069098276565358374967934796622549186376311673328276206143950784018199296551604341095108654406380008408647301168659316694664979014204028653776792864574076255773067837440))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FCE9177E47604EF [Rational(42931490153634904838937450973913219146631687380827887412934292139358879231274921789941998384655945417349797671541082239517474909232663482239616583768557434298932682652661824586383402862185371853066102589471933274868300271775013646069893077309735287279728402254720175898105162248471844917522195293703080247296), 42931490153634904838937450973913219146631687380827887412934292139358879231274921789941998384655945417349797671541082239517474909232663482239616583768557434298932682652661824586383402862185371853066102589471933274868300271775013646069893077309735287279728402254720175898105162248471844917522195293703080247296.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111100 #b1110100100010111011111100100011101100000010011101111)))
(assert (not (= y z)))
