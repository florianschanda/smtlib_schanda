(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNA halfpoint_int)
(declare-const x Int)
(assert (= x 122023745381518191427010663972586464680849893732477751391284524552111213079491644101120321365053688855409391687363050655555282853623441263693228882352022648772335653788736603150291486725273729423950334925258060050893374129142317334219980492800489302994833663941434738293600328516064657394524812919178407182336))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FE5B89006E7E451 [Rational(122023745381518201406212211646185522962713458916670581728540826729398920592227856287179780709874017780199219150541556102267517074585917483555418824319990952468194645212893704750319851480702112011638942147072995964160157851861937300874032768404841247439110006181655525829204862894844865606317289070898456821760), 122023745381518201406212211646185522962713458916670581728540826729398920592227856287179780709874017780199219150541556102267517074585917483555418824319990952468194645212893704750319851480702112011638942147072995964160157851861937300874032768404841247439110006181655525829204862894844865606317289070898456821760.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #x7FE5B89006E7E451)))
(assert (not (= y z)))
