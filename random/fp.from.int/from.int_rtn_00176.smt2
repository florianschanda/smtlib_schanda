(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTN halfpoint_int)
(declare-const x Int)
(assert (= x 150114455801576807805750349739673787077399456726056386739888891507528621544247235598548834468769365180805687317287063716287669108363630487285352866309552517750984352992761929980454210166398446985474144468405769370084537952691615680742504946928133637152686747468763200633711955697962521987925440474769621254144))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FEAB8A480ACDE54 [Rational(150114455801576797826548802066074728795535891541863556402632589330240914031511023412489375123949036256015859854108558269575434887401154267423162924341584214055125361568604828380425845410970064397785537246590833456817754229971995714088452671323781692708410405228542413098107421319182313776132964323049571614720), 150114455801576797826548802066074728795535891541863556402632589330240914031511023412489375123949036256015859854108558269575434887401154267423162924341584214055125361568604828380425845410970064397785537246590833456817754229971995714088452671323781692708410405228542413098107421319182313776132964323049571614720.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111110 #b1010101110001010010010000000101011001101111001010100)))
(assert (not (= y z)))
