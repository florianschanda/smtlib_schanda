(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RNE rounded_int)
(declare-const x Int)
(assert (= x (- 78128591762321449969593528121952533732878334899282770150416320535608706736176444323539132276567203236280081105891813932125737394573284917966974183426048127569957730299103986621331186109672539542651929467023648203276829735734478911365714995450706974521563529416480840187099751295846591065547951015108728480496)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFDBD0904E7151DC [Rational(-78128591762321449626601296776826389566626223519640537235435504453309437987434521025107988118362872254100414651171519288588493680876898373542463494259341876109912866999206312582602863451032982902497071398059920825042866436339548786676161257351756046050527278561984179117186750201741249234946612339451241693184), -78128591762321449626601296776826389566626223519640537235435504453309437987434521025107988118362872254100414651171519288588493680876898373542463494259341876109912866999206312582602863451032982902497071398059920825042866436339548786676161257351756046050527278561984179117186750201741249234946612339451241693184.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFDBD0904E7151DC)))
(assert (= y z))
