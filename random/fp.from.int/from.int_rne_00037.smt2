(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RNE halfpoint_int)
(declare-const x Int)
(assert (= x 156617558453645044779423105560632020894580571328433567040174581562845222470861569519511246588360737661548817313590754495505088342535601647289257190815894469558128720839059361628704529599899457728792182543747614244231564700151522059819019950568582787058072728467544854687736883676043624903785405173492418084864))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FEBE0FC5DD5E228 [Rational(156617558453645034800221557887032962612717006144240736702918279385557514958125357333451787243540408736758989850412249048792854121573125427427067248847926165862269729414902260028676164844471075141103575321932678330964780977431902093164967674964230842613796386227324067152132349297263416691992929021772368445440), 156617558453645034800221557887032962612717006144240736702918279385557514958125357333451787243540408736758989850412249048792854121573125427427067248847926165862269729414902260028676164844471075141103575321932678330964780977431902093164967674964230842613796386227324067152132349297263416691992929021772368445440.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111110 #b1011111000001111110001011101110101011110001000101000)))
(assert (= y z))
