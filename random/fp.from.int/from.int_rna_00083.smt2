(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RNA halfpoint_int)
(declare-const x Int)
(assert (= x (- 176649804004789128856224947177666390036076645055601336660545148975232274045283448785528146581716888401031211816510597633996771445009007845560579060290225882341226225777027153021872210810889328995785237076994399438168752332982156819486251230423489827598900172720546030692142686613977840398061255805572365680640)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEF71D870F0592A [Rational(-176649804004789138835426494851265448317940210239794166997801451152519981558019660971587605926537217325821039279689103080709005665971484065422769002258194186037085217201184254621900575566317711583473844298809335351435536055701776786140303506027841772043176514960766818227747220992758048609853731957292415320064), -176649804004789138835426494851265448317940210239794166997801451152519981558019660971587605926537217325821039279689103080709005665971484065422769002258194186037085217201184254621900575566317711583473844298809335351435536055701776786140303506027841772043176514960766818227747220992758048609853731957292415320064.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFEF71D870F0592A)))
(assert (= y z))
