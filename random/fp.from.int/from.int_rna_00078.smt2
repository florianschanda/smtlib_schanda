(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNA rounded_int)
(declare-const x Int)
(assert (= x (- 152168738870741854037346214340662905954609430640328963144030076898975963917747687402141481823868356990496523384097337434148731407805276872247272671875629771338923708705566340640716999879282082499325195234769718370979442889257981374434872294396823725397751081894277279947848059777893939078016775138249453370381)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEB1641592834D0 [Rational(-152168738870741849097031496700475983744934111174762270363508783718723811775664306408686640223797639281206136477420970424534281808970625564613310625814720015535502949374016287563155904029081971815140893695755642865637584496523599695594965876177944270384301305724576567599297605711029619331042372803622426640384), -152168738870741849097031496700475983744934111174762270363508783718723811775664306408686640223797639281206136477420970424534281808970625564613310625814720015535502949374016287563155904029081971815140893695755642865637584496523599695594965876177944270384301305724576567599297605711029619331042372803622426640384.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFEB1641592834D0)))
(assert (not (= y z)))
