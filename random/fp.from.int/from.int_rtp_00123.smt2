(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTP rounded_int)
(declare-const x Int)
(assert (= x 133672109531386524122623515004276877988634088722811678624148061553461273777601033557068660691946206811212580342462618257313810981880864535747033575808812496439094490457924572711015500264603360481698402696723575980382887837315769253334149031161897278796742277686943275517126509332729169800134097927560168715072))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FE7CB5F753AC0DC [Rational(133672109531386529740896333490992847692567221760788512397761029564360963019289396966397981476172160319103392173991013261263857762212142506994015596808203554012560883408224576180500953581543735686854745368037743302551122750314360135519828688091966327137074583640374566631269359274353869657069874209693435428864), 133672109531386529740896333490992847692567221760788512397761029564360963019289396966397981476172160319103392173991013261263857762212142506994015596808203554012560883408224576180500953581543735686854745368037743302551122750314360135519828688091966327137074583640374566631269359274353869657069874209693435428864.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111110 #b0111110010110101111101110101001110101100000011011100)))
(assert (= y z))
