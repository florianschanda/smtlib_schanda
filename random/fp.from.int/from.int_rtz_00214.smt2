(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTZ rounded_int)
(declare-const x Int)
(assert (= x (- 143666699946047310351577727118523947887764540271191868567223525290914153667800698377471046197880536827833202864843395154912522735808600868019779287183311974918696521575672740451075167867977607313481776063852677236360387933393953237078618903812319455453114468763431157849616043876109244092463770600442594248566)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFE992D24D99A716 [Rational(-143666699946047302431194278007995159874634118308810432434922969319371446063665067458486700824892073247812018187867084976095307642796981574061679243539014102541984529114534490563268504072322514033276883585248031641000618976954014053113488910593829367003689638510460890723322000392781245227085398307261865000960), -143666699946047302431194278007995159874634118308810432434922969319371446063665067458486700824892073247812018187867084976095307642796981574061679243539014102541984529114534490563268504072322514033276883585248031641000618976954014053113488910593829367003689638510460890723322000392781245227085398307261865000960.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b1001100100101101001001001101100110011010011100010110)))
(assert (not (= y z)))
