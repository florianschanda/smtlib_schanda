(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTN rounded_int)
(declare-const x Int)
(assert (= x 124191945112909047957424933394676499359535252286148567514397008632159322712701438361956304012584830647802707025725431407258619665658546117444803877857481332357558985561694941442142272677540452577677862810911237320720620654138604870851046693595335993807168519620843510832488426997013932960930496826353946504618))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FE61B5DCD12742E [Rational(124191945112909043852781425452909386811436739582922256593421765340020870416257935947076678266361342992802080551552712115508700949060586533205566884691738126365749680327729095107713658413719023116105944268258569039621128652053822990783871870880005715442804143654465438578114889637117746460303900079770918977536), 124191945112909043852781425452909386811436739582922256593421765340020870416257935947076678266361342992802080551552712115508700949060586533205566884691738126365749680327729095107713658413719023116105944268258569039621128652053822990783871870880005715442804143654465438578114889637117746460303900079770918977536.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111110 #b0110000110110101110111001101000100100111010000101110)))
(assert (= y z))
