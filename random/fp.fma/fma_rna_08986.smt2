(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000001 #b00000000000000000000000)))
;; x should be Float32(0x00800000 [Rational(1, 85070591730234615865843651857942052864), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #xD8C1BE1B)))
;; y should be Float32(0xD8C1BE1B [Rational(-1704177927454720), -1704177927454720.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x80128368)))
;; z should be Float32(0x80128368 [Rational(-151661, 89202980794122492566142873090593446023921664), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b1 #b00110011 #b10000011011111000011011)))
(check-sat)
(exit)
