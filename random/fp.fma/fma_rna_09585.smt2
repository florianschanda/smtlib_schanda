(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00111100 #b11011101101000000011001)))
;; x should be Float32(0x1E6ED019 [Rational(15650841, 1237940039285380274899124224), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b10010101 #b10011101010000010001001)))
;; y should be Float32(0xCACEA089 [Rational(-13541513, 2), -6770756.500000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b01000010000110010001000)))
;; z should be Float32(0x00210C88 [Rational(270737, 89202980794122492566142873090593446023921664), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b1 #b01010011 #b10000001100000100110110)))
(check-sat)
(exit)
