(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b11111100 #b10100110000001101100110)))
;; x should be Float32(0x7E530366 [Rational(70121188201743106533993030956942884864), 70121188201743106533993030956942884864.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x807FFFFF)))
;; y should be Float32(0x807FFFFF [Rational(-8388607, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00101000 #b11111001100011100000001)))
;; z should be Float32(0x947CC701 [Rational(-16566017, 1298074214633706907132624082305024), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTZ x y z)))
(assert (not (= result (fp #b1 #b01111110 #b10100110000001101100100))))
(check-sat)
(exit)
