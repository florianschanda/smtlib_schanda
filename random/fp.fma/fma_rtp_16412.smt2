(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b11010001 #b11011100110110010001111)))
;; x should be Float32(0x68EE6C8F [Rational(9007406204151068929032192), 9007406204151068929032192.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x000E3E00)))
;; y should be Float32(0x000E3E00 [Rational(1823, 1393796574908163946345982392040522594123776), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000001 #b00000000000000000000000)))
;; z should be Float32(0x80800000 [Rational(-1, 85070591730234615865843651857942052864), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result (fp #b0 #b01010000 #b10101000011101011100010))))
(check-sat)
(exit)
