(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b10010101 #b01011111111100001011011)))
;; x should be Float32(0xCAAFF85B [Rational(-11532379, 2), -5766189.500000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x7B036203)))
;; y should be Float32(0x7B036203 [Rational(682178802293707825832054630385713152), 682178802293707825832054630385713152.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000011 #b11011100100100101110110)))
;; z should be Float32(0x81EE4976 [Rational(-7808187, 89202980794122492566142873090593446023921664), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result (fp #b1 #b11111110 #b11111111111111111111111))))
(check-sat)
(exit)
