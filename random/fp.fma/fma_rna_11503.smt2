(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #xFF7FFFFF)))
;; x should be Float32(0xFF7FFFFF [Rational(-340282346638528859811704183484516925440), -340282346638528859811704183484516925440.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00011101 #b01110101011010001110010)))
;; y should be Float32(0x8EBAB472 [Rational(-6117945, 1329227995784915872903807060280344576), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b11111011 #b01110100010111100100000)))
;; z should be Float32(0x7DBA2F20 [Rational(30935136775681600764012826606457323520), 30935136775681600764012826606457323520.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b0 #b11111011 #b01110100010111100100000))))
(check-sat)
(exit)
