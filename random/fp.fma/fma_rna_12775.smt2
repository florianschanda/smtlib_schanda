(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b11001111 #b11100100100110100011000)))
;; x should be Float32(0xE7F24D18 [Rational(-2288469635060773374918656), -2288469635060773374918656.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b00110101 #b10101011100000010101001)))
;; y should be Float32(0x1AD5C0A9 [Rational(14008489, 158456325028528675187087900672), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b00000000000000000000001)))
;; z should be Float32(0x00000001 [Rational(1, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #xC34A507F))))
(check-sat)
(exit)
