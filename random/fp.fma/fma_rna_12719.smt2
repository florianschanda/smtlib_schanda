(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x886CECE6)))
;; x should be Float32(0x886CECE6 [Rational(-7763571, 10889035741470030830827987437816582766592), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b00000000 #b11111111111111111111111)))
;; y should be Float32(0x007FFFFF [Rational(8388607, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b10010111 #b11001110011111001101110)))
;; z should be Float32(0x4BE73E6E [Rational(30309596), 30309596.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b0 #b10010111 #b11001110011111001101110))))
(check-sat)
(exit)
