(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #xFA96D749)))
;; x should be Float32(0xFA96D749 [Rational(-391605515250436397358683718558941184), -391605515250436397358683718558941184.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x0007D217)))
;; y should be Float32(0x0007D217 [Rational(512535, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #xF4E7D7C4)))
;; z should be Float32(0xF4E7D7C4 [Rational(-146947854138938365129621782921216), -146947854138938365129621782921216.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b1 #b11101001 #b11001111101011111000100)))
(check-sat)
(exit)
