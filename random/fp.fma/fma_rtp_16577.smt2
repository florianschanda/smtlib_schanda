(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b11110101 #b11000100001111011011110)))
;; x should be Float32(0x7AE21EDE [Rational(587042575484529380421778177349648384), 587042575484529380421778177349648384.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x806E2183)))
;; y should be Float32(0x806E2183 [Rational(-7217539, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b11000111000111101101010)))
;; z should be Float32(0x00638F6A [Rational(3262389, 356811923176489970264571492362373784095686656), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result ((_ to_fp 8 24) #xBBC28DBA))))
(check-sat)
(exit)
