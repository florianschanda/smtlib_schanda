(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00110110 #b00011010011110101110011)))
;; x should be Float32(0x1B0D3D73 [Rational(9256307, 79228162514264337593543950336), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x80800000)))
;; y should be Float32(0x80800000 [Rational(-1, 85070591730234615865843651857942052864), -0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #xFAB2A0E6)))
;; z should be Float32(0xFAB2A0E6 [Rational(-463746124416580932971953210957758464), -463746124416580932971953210957758464.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b1 #b11110101 #b01100101010000011100110)))
(check-sat)
(exit)
