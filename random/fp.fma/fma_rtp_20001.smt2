(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00000000 #b11000100110010101100011)))
;; x should be Float32(0x80626563 [Rational(-6448483, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b11010110 #b00011010011100101110001)))
;; y should be Float32(0x6B0D3971 [Rational(170729799937266612590084096), 170729799937266612590084096.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #xFF7FFFFF)))
;; z should be Float32(0xFF7FFFFF [Rational(-340282346638528859811704183484516925440), -340282346638528859811704183484516925440.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result (fp #b1 #b11111110 #b11111111111111111111111))))
(check-sat)
(exit)
