(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x7F7FFFFF)))
;; x should be Float32(0x7F7FFFFF [Rational(340282346638528859811704183484516925440), 340282346638528859811704183484516925440.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b11111000 #b10100011111011111011110)))
;; y should be Float32(0x7C51F7DE [Rational(4360869549031836414562137882526482432), 4360869549031836414562137882526482432.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b10010011 #b01001000001011011110100)))
;; z should be Float32(0x49A416F4 [Rational(2688445, 2), 1344222.500000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result (fp #b0 #b11111111 #b00000000000000000000000))))
(check-sat)
(exit)
