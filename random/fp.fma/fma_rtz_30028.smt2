(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00001001 #b01001000101100011010011)))
;; x should be Float32(0x04A458D3 [Rational(10770643, 2787593149816327892691964784081045188247552), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x7F7FFFFF)))
;; y should be Float32(0x7F7FFFFF [Rational(340282346638528859811704183484516925440), 340282346638528859811704183484516925440.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b11011010 #b10101000001001101100011)))
;; z should be Float32(0x6D541363 [Rational(4102141199186227288678072320), 4102141199186227288678072320.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTZ x y z)))
(assert (not (= result (fp #b0 #b11011010 #b10101000001001101100011))))
(check-sat)
(exit)
