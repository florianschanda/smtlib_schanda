(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b10100100101011110000101)))
;; x should be Float32(0x00525785 [Rational(5396357, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b10101110 #b10001000110010001100101)))
;; y should be Float32(0xD7446465 [Rational(-215935470272512), -215935470272512.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b00000000000000000000001)))
;; z should be Float32(0x00000001 [Rational(1, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #x97FCAD32))))
(check-sat)
(exit)
