(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b10010101 #b00110111011001001111101)))
;; x should be Float32(0xCA9BB27D [Rational(-10203773, 2), -5101886.500000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x003AEEDA)))
;; y should be Float32(0x003AEEDA [Rational(1931117, 356811923176489970264571492362373784095686656), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b10010101 #b01110011111000110110111)))
;; z should be Float32(0x4AB9F1B7 [Rational(12186039, 2), 6093019.500000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b0 #b10010101 #b01110011111000110110111))))
(check-sat)
(exit)
