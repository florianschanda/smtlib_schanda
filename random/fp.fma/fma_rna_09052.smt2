(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b00000000000000000000001)))
;; x should be Float32(0x00000001 [Rational(1, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x4AC1D541)))
;; y should be Float32(0x4AC1D541 [Rational(12703041, 2), 6351520.500000])

(declare-const z Float32)
(assert (= z (fp #b0 #b11100111 #b10110010010001100111100)))
;; z should be Float32(0x73D9233C [Rational(34406831552976570425909773860864), 34406831552976570425909773860864.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #x73D9233C))))
(check-sat)
(exit)
