(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x007FFFFF)))
;; x should be Float32(0x007FFFFF [Rational(8388607, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b11111010 #b00111101111111111001000)))
;; y should be Float32(0xFD1EFFC8 [Rational(-13209132219678988706135098846156423168), -13209132219678988706135098846156423168.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000000 #b00111111000111101100101)))
;; z should be Float32(0x801F8F65 [Rational(-2068325, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b1 #b01111100 #b00111101111111111000111)))
(check-sat)
(exit)
