(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x70F15054)))
;; x should be Float32(0x70F15054 [Rational(597463984890383143574773432320), 597463984890383143574773432320.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b00001101 #b10000111101010011001101)))
;; y should be Float32(0x06C3D4CD [Rational(12833997, 174224571863520493293247799005065324265472), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000000 #b10000101101101101011000)))
;; z should be Float32(0x8042DB58 [Rational(-547691, 89202980794122492566142873090593446023921664), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b0 #b01110000 #b01110001001100011001000)))
(check-sat)
(exit)
