(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b00110011111101101100101)))
;; x should be Float32(0x0019FB65 [Rational(1702757, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x0BA5EFB9)))
;; y should be Float32(0x0BA5EFB9 [Rational(10874809, 170141183460469231731687303715884105728), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b10111011110100010001111)))
;; z should be Float32(0x005DE88F [Rational(6154383, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (= result (fp #b0 #b00000000 #b10111011110100010010000)))
(check-sat)
(exit)
