(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00101011 #b10011011010100010101010)))
;; x should be Float32(0x15CDA8AA [Rational(6739029, 81129638414606681695789005144064), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b10010101 #b00010001100000011110011)))
;; y should be Float32(0x4A88C0F3 [Rational(8962291, 2), 4481145.500000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x0F01E2B3)))
;; z should be Float32(0x0F01E2B3 [Rational(8512179, 1329227995784915872903807060280344576), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b0 #b01000001 #b10110111011100100111000))))
(check-sat)
(exit)
