(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x6EE25057)))
;; x should be Float32(0x6EE25057 [Rational(35020368565538582762455302144), 35020368565538582762455302144.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b10010011 #b00010110001100101111100)))
;; y should be Float32(0xC98B197C [Rational(-2279007, 2), -1139503.500000])

(declare-const z Float32)
(assert (= z (fp #b1 #b11111111 #b00000000000000000000000)))
;; z should be Float32(-oo)

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b1 #b11111111 #b00000000000000000000000))))
(check-sat)
(exit)
