(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000110 #b10110001000000010000000)))
;; x should be Float32(0x03588080 [Rational(110849, 174224571863520493293247799005065324265472), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x807FFFFF)))
;; y should be Float32(0x807FFFFF [Rational(-8388607, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b01000101 #b10101100100011110101011)))
;; z should be Float32(0xA2D647AB [Rational(-14043051, 2417851639229258349412352), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b1 #b01000101 #b10101100100011110101011))))
(check-sat)
(exit)
