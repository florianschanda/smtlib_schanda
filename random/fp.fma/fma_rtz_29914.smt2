(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x00000001)))
;; x should be Float32(0x00000001 [Rational(1, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00010110 #b11001111010110001110110)))
;; y should be Float32(0x8B67AC76 [Rational(-7591483, 170141183460469231731687303715884105728), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b11111100 #b11101111100000001000010)))
;; z should be Float32(0x7E77C042 [Rational(82329393648686687130541544925760061440), 82329393648686687130541544925760061440.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTZ x y z)))
(assert (not (= result (fp #b0 #b11111100 #b11101111100000001000001))))
(check-sat)
(exit)
