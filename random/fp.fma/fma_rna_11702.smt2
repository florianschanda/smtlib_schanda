(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x807FFFFF)))
;; x should be Float32(0x807FFFFF [Rational(-8388607, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b11000001 #b11111111101000110010101)))
;; y should be Float32(0x60FFD195 [Rational(147469428616293515264), 147469428616293515264.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b11100111 #b00010111101011111010010)))
;; z should be Float32(0xF38BD7D2 [Rational(-22159015482032902374810250641408), -22159015482032902374810250641408.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #xF38BD7D2))))
(check-sat)
(exit)
