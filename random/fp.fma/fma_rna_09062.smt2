(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x00000001)))
;; x should be Float32(0x00000001 [Rational(1, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b10010101 #b01000010110111010001101)))
;; y should be Float32(0x4AA16E8D [Rational(10579597, 2), 5289798.500000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000000 #b00000011101101010110111)))
;; z should be Float32(0x8001DAB7 [Rational(-121527, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #x004EDC90))))
(check-sat)
(exit)
