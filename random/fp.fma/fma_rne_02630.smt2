(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b11111001 #b10100111101001011100011)))
;; x should be Float32(0x7CD3D2E3 [Rational(8798815423684049747308779061697839104), 8798815423684049747308779061697839104.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b00000001 #b00000000000000000000000)))
;; y should be Float32(0x00800000 [Rational(1, 85070591730234615865843651857942052864), 0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x08324C59)))
;; z should be Float32(0x08324C59 [Rational(11684953, 21778071482940061661655974875633165533184), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNE x y z)))
(assert (not (= result (fp #b0 #b01111011 #b10100111101001011100011))))
(check-sat)
(exit)
