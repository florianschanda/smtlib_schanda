(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b10010100 #b11001000000000111010110)))
;; x should be Float32(0x4A6401D6 [Rational(7471339, 2), 3735669.500000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #xCAB14FF5)))
;; y should be Float32(0xCAB14FF5 [Rational(-11620341, 2), -5810170.500000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x0699ED1D)))
;; z should be Float32(0x0699ED1D [Rational(10087709, 174224571863520493293247799005065324265472), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b1 #b10101011 #b00111011110110001111100))))
(check-sat)
(exit)
