(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b10110111 #b11101011000011110010000)))
;; x should be Float32(0xDBF58790 [Rational(-138220843678302208), -138220843678302208.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x80598CE7)))
;; y should be Float32(0x80598CE7 [Rational(-5868775, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x00248044)))
;; z should be Float32(0x00248044 [Rational(598033, 178405961588244985132285746181186892047843328), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b0 #b00111001 #b01010111100011010001010))))
(check-sat)
(exit)
