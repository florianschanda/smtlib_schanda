(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b10000010100101000000001)))
;; x should be Float32(0x00414A01 [Rational(4278785, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x00278068)))
;; y should be Float32(0x00278068 [Rational(323597, 89202980794122492566142873090593446023921664), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b11110101 #b11110100110010110100001)))
;; z should be Float32(0xFAFA65A1 [Rational(-650067746868920261201897657630457856), -650067746868920261201897657630457856.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b1 #b11110101 #b11110100110010110100001)))
(check-sat)
(exit)
