(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b11101110 #b10110011111101110001100)))
;; x should be Float32(0xF759FB8C [Rational(-4421212480684867819042154529947648), -4421212480684867819042154529947648.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b01101111 #b01001100101110111010101)))
;; y should be Float32(0x37A65DD5 [Rational(10902997, 549755813888), 0.000020])

(declare-const z Float32)
(assert (= z (fp #b0 #b11011010 #b10101000110001001010100)))
;; z should be Float32(0x6D546254 [Rational(4108105843201996829935796224), 4108105843201996829935796224.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #xEF8705F0))))
(check-sat)
(exit)
