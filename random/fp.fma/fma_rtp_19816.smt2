(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00011101 #b11001010001010011111001)))
;; x should be Float32(0x8EE514F9 [Rational(-15013113, 2658455991569831745807614120560689152), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b11110010 #b01100000010100101111101)))
;; y should be Float32(0xF930297D [Rational(-57167858088512104009434274014953472), -57167858088512104009434274014953472.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000000 #b11111101101101110010110)))
;; z should be Float32(0x807EDB96 [Rational(-4156875, 356811923176489970264571492362373784095686656), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result (fp #b0 #b10010001 #b00111011010001110001100))))
(check-sat)
(exit)
