(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b01100111110010101010110)))
;; x should be Float32(0x0033E556 [Rational(1700523, 356811923176489970264571492362373784095686656), 0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x001FFD9B)))
;; y should be Float32(0x001FFD9B [Rational(2096539, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x7E36A16D)))
;; z should be Float32(0x7E36A16D [Rational(60689416452431398537190626282604331008), 60689416452431398537190626282604331008.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTZ x y z)))
(assert (not (= result (fp #b0 #b11111100 #b01101101010000101101101))))
(check-sat)
(exit)
