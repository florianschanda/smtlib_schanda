(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b10010100 #b01000110011010111000010)))
;; x should be Float32(0xCA2335C2 [Rational(-5348065, 2), -2674032.500000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00000000 #b10011111011111101000001)))
;; y should be Float32(0x804FBF41 [Rational(-5226305, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000000 #b00111011001101111000001)))
;; z should be Float32(0x801D9BC1 [Rational(-1940417, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #x0ACB5E14))))
(check-sat)
(exit)
