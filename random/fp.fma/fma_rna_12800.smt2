(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b1 #b11101001 #b00111110111110000000110)))
;; x should be Float32(0xF49F7C06 [Rational(-101085289876326353229363273531392), -101085289876326353229363273531392.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b00000000 #b01000111010001110010110)))
;; y should be Float32(0x0023A396 [Rational(1167819, 356811923176489970264571492362373784095686656), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b11111110 #b11111111111111111111111)))
;; z should be Float32(0xFF7FFFFF [Rational(-340282346638528859811704183484516925440), -340282346638528859811704183484516925440.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result ((_ to_fp 8 24) #xFF7FFFFF)))
(check-sat)
(exit)
