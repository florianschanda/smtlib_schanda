(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00000001 #b00000000000000000000000)))
;; x should be Float32(0x80800000 [Rational(-1, 85070591730234615865843651857942052864), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b11100111 #b01001011010111011100110)))
;; y should be Float32(0x73A5AEE6 [Rational(26253550519002082219206092259328), 26253550519002082219206092259328.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b10010100 #b00001101000000111001110)))
;; z should be Float32(0xCA0681CE [Rational(-4407527, 2), -2203763.500000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #xCA0681CE))))
(check-sat)
(exit)
