(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b0 #b10010011 #b00000010111110011011100)))
;; x should be Float32(0x49817CDC [Rational(2121527, 2), 1060763.500000])

(declare-const y Float32)
(assert (= y (fp #b0 #b00011101 #b01100010111100011000110)))
;; y should be Float32(0x0EB178C6 [Rational(5815395, 1329227995784915872903807060280344576), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000000 #b11111111111111111111111)))
;; z should be Float32(0x807FFFFF [Rational(-8388607, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result ((_ to_fp 8 24) #x18B388D6)))
(check-sat)
(exit)
