(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b11100010001000110100000)))
;; x should be Float32(0x007111A0 [Rational(231565, 22300745198530623141535718272648361505980416), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00000000 #b00100011111011011001110)))
;; y should be Float32(0x8011F6CE [Rational(-588647, 356811923176489970264571492362373784095686656), -0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x7C641398)))
;; z should be Float32(0x7C641398 [Rational(4736964368836448996889289518068269056), 4736964368836448996889289518068269056.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result ((_ to_fp 8 24) #x7C641398))))
(check-sat)
(exit)
