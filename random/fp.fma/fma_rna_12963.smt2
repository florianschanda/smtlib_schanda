(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b11011101 #b00111110111011110011110)))
;; x should be Float32(0xEE9F779E [Rational(-24676362434016150101486993408), -24676362434016150101486993408.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00000000 #b00110101100100100001111)))
;; y should be Float32(0x801AC90F [Rational(-1755407, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b11111111111111111111111)))
;; z should be Float32(0x007FFFFF [Rational(8388607, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b0 #b01011101 #b00001010111101100100010))))
(check-sat)
(exit)
