(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00001011 #b01010101110101011000100)))
;; x should be Float32(0x85AAEAC4 [Rational(-2800305, 174224571863520493293247799005065324265472), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b11110000 #b00001000100010011010111)))
;; y should be Float32(0x780444D7 [Rational(10730928488040408240428695945216000), 10730928488040408240428695945216000.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b11111111111111111111111)))
;; z should be Float32(0x007FFFFF [Rational(8388607, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result ((_ to_fp 8 24) #xBE309E06)))
(check-sat)
(exit)
