(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00111001 #b01010011111010100110011)))
;; x should be Float32(0x9CA9F533 [Rational(-11138355, 9903520314283042199192993792), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00101100 #b00001000110111011101001)))
;; y should be Float32(0x96046EE9 [Rational(-8679145, 81129638414606681695789005144064), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b10000011001100101011100)))
;; z should be Float32(0x0041995C [Rational(1074775, 178405961588244985132285746181186892047843328), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b0 #b00000000 #b10000011001100101011100)))
(check-sat)
(exit)
