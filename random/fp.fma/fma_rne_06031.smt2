(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b11110010 #b01000011111001011110111)))
;; x should be Float32(0xF921F2F7 [Rational(-52555481669020748482961921823211520), -52555481669020748482961921823211520.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00000000 #b11111111111111111111111)))
;; y should be Float32(0x807FFFFF [Rational(-8388607, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x7D0F7C83)))
;; z should be Float32(0x7D0F7C83 [Rational(11920381575209960426250483015926939648), 11920381575209960426250483015926939648.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNE x y z)))
(assert (not (= result (fp #b0 #b11111010 #b00011110111110010000011))))
(check-sat)
(exit)
