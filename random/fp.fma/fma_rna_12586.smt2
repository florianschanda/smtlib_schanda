(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00000000 #b00000000000000000000001)))
;; x should be Float32(0x80000001 [Rational(-1, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b11011110 #b00011101001100100111101)))
;; y should be Float32(0xEF0E993D [Rational(-44132125109387493071006990336), -44132125109387493071006990336.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b01010111 #b01011011001010010011101)))
;; z should be Float32(0x2BAD949D [Rational(11375773, 9223372036854775808), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #x2BAD96D7))))
(check-sat)
(exit)
