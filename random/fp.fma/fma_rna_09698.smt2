(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b11110000 #b10011010011101010001110)))
;; x should be Float32(0x784D3A8E [Rational(16650132596183257597957483926650880), 16650132596183257597957483926650880.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b10100111 #b01010111010010001111010)))
;; y should be Float32(0xD3ABA47A [Rational(-1474397732864), -1474397732864.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b11100011 #b00000110101010100011100)))
;; z should be Float32(0x7183551C [Rational(1300653670640798970651594457088), 1300653670640798970651594457088.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #xFF800000))))
(check-sat)
(exit)
