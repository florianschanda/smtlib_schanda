(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b01110101011011010100001)))
;; x should be Float32(0x003AB6A1 [Rational(3847841, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00010100 #b11010100100111001001000)))
;; y should be Float32(0x8A6A4E48 [Rational(-1919433, 170141183460469231731687303715884105728), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b11100010 #b00110111001011101010101)))
;; z should be Float32(0xF11B9755 [Rational(-770450011555541417241037766656), -770450011555541417241037766656.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result ((_ to_fp 8 24) #xF11B9755))))
(check-sat)
(exit)
