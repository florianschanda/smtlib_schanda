(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b0 #b00000000 #b10011001100011000001000)))
;; x should be Float32(0x004CC608 [Rational(628929, 89202980794122492566142873090593446023921664), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b10010100 #b10101011111011001111110)))
;; y should be Float32(0xCA55F67E [Rational(-7011135, 2), -3505567.500000])

(declare-const z Float32)
(assert (= z (fp #b0 #b11111111 #b11010001000001010100110)))
;; z should be Float32(NaN)

(declare-const result Float32)
(assert (= result (fp.fma RTZ x y z)))
(assert (not (= result ((_ to_fp 8 24) #xFFFFFFFF))))
(check-sat)
(exit)
