(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x80800000)))
;; x should be Float32(0x80800000 [Rational(-1, 85070591730234615865843651857942052864), -0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x0A42C2EE)))
;; y should be Float32(0x0A42C2EE [Rational(6381943, 680564733841876926926749214863536422912), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b11001001 #b01100010001100011000110)))
;; z should be Float32(0xE4B118C6 [Rational(-26134870522791116931072), -26134870522791116931072.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result ((_ to_fp 8 24) #xE4B118C6))))
(check-sat)
(exit)
