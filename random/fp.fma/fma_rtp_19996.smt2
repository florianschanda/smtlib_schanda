(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00000000 #b00010100100110000000011)))
;; x should be Float32(0x800A4C03 [Rational(-674819, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b10101111 #b00110010110101011100001)))
;; y should be Float32(0x57996AE1 [Rational(337368640913408), 337368640913408.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b10111110 #b00010100111010011011000)))
;; z should be Float32(0x5F0A74D8 [Rational(9976836569044090880), 9976836569044090880.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (= result ((_ to_fp 8 24) #x5F0A74D8)))
(check-sat)
(exit)
