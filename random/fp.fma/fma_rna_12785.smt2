(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x9CA9D3C3)))
;; x should be Float32(0x9CA9D3C3 [Rational(-11129795, 9903520314283042199192993792), -0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b10000010 #b00100110101111111010000)))
;; y should be Float32(0x41135FD0 [Rational(603645, 65536), 9.210892])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #xFB4FE6AC)))
;; z should be Float32(0xFB4FE6AC [Rational(-1079484031169501656769386697503801344), -1079484031169501656769386697503801344.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b1 #b11110110 #b10011111110011010101100))))
(check-sat)
(exit)
