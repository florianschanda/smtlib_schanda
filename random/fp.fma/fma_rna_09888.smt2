(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x00074E01)))
;; x should be Float32(0x00074E01 [Rational(478721, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b00001111 #b11110011101111010011101)))
;; y should be Float32(0x07F9DE9D [Rational(16375453, 43556142965880123323311949751266331066368), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00011101 #b11110101101100111011011)))
;; z should be Float32(0x0EFAD9DB [Rational(16439771, 2658455991569831745807614120560689152), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b0 #b00011101 #b11110101101100111011011)))
(check-sat)
(exit)
