(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b1 #b00000000 #b00000000000000000000001)))
;; x should be Float32(0x80000001 [Rational(-1, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x86AF624B)))
;; y should be Float32(0x86AF624B [Rational(-11493963, 174224571863520493293247799005065324265472), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b00110000100010100010011)))
;; z should be Float32(0x00184513 [Rational(1590547, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b0 #b00000000 #b00110000100010100010011)))
(check-sat)
(exit)
