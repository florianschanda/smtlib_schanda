(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x4A74B316)))
;; x should be Float32(0x4A74B316 [Rational(8018315, 2), 4009157.500000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00000000 #b10001100010100101101000)))
;; y should be Float32(0x80462968 [Rational(-574765, 89202980794122492566142873090593446023921664), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b00000000 #b11111111111111111111111)))
;; z should be Float32(0x807FFFFF [Rational(-8388607, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (= result (fp #b1 #b00010110 #b00001100010000100011100)))
(check-sat)
(exit)
