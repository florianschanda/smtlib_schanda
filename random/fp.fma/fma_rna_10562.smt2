(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b10010101 #b10001010011111011110101)))
;; x should be Float32(0xCAC53EF5 [Rational(-12926709, 2), -6463354.500000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x007FFFFF)))
;; y should be Float32(0x007FFFFF [Rational(8388607, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const z Float32)
(assert (= z (fp #b1 #b11001001 #b11011110010010001101110)))
;; z should be Float32(0xE4EF246E [Rational(-35291174953995091312640), -35291174953995091312640.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b1 #b11001001 #b11011110010010001101110))))
(check-sat)
(exit)
