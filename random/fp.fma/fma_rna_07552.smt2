(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x4A843C1D)))
;; x should be Float32(0x4A843C1D [Rational(8666141, 2), 4333070.500000])

(declare-const y Float32)
(assert (= y (fp #b1 #b00000000 #b11110110011110111010110)))
;; y should be Float32(0x807B3DD6 [Rational(-4038379, 356811923176489970264571492362373784095686656), -0.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b01110100101100100111001)))
;; z should be Float32(0x003A5939 [Rational(3823929, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b1 #b00010110 #b11111101010001101001001))))
(check-sat)
(exit)
