(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
(declare-const x Float32)
(assert (= x (fp #b1 #b11111000 #b00110100110111111110110)))
;; x should be Float32(0xFC1A6FF6 [Rational(-3207538215233389196951210365617700864), -3207538215233389196951210365617700864.000000])

(declare-const y Float32)
(assert (= y (fp #b0 #b11010011 #b10110111000100100000111)))
;; y should be Float32(0x69DB8907 [Rational(33175230978870680827723776), 33175230978870680827723776.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b11100100 #b11000001011100110000000)))
;; z should be Float32(0x7260B980 [Rational(4451129468129267782800572940288), 4451129468129267782800572940288.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (= result ((_ to_fp 8 24) #xFF7FFFFF)))
(check-sat)
(exit)
