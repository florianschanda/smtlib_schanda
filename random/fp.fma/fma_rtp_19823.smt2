(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x (fp #b1 #b11111010 #b11000011111001111010010)))
;; x should be Float32(0xFD61F3D2 [Rational(-18771392905890425085492408005865504768), -18771392905890425085492408005865504768.000000])

(declare-const y Float32)
(assert (= y ((_ to_fp 8 24) #x8055BBF1)))
;; y should be Float32(0x8055BBF1 [Rational(-5618673, 713623846352979940529142984724747568191373312), -0.000000])

(declare-const z Float32)
(assert (= z ((_ to_fp 8 24) #x00800000)))
;; z should be Float32(0x00800000 [Rational(1, 85070591730234615865843651857942052864), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RTP x y z)))
(assert (not (= result ((_ to_fp 8 24) #x3E1757AE))))
(check-sat)
(exit)
