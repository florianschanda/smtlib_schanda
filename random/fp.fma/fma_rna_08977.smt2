(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
(declare-const x Float32)
(assert (= x ((_ to_fp 8 24) #x00800000)))
;; x should be Float32(0x00800000 [Rational(1, 85070591730234615865843651857942052864), 0.000000])

(declare-const y Float32)
(assert (= y (fp #b1 #b10111011 #b11000110111101100000010)))
;; y should be Float32(0xDDE37B02 [Rational(-2048962183471038464), -2048962183471038464.000000])

(declare-const z Float32)
(assert (= z (fp #b0 #b00000000 #b11110100000111101110101)))
;; z should be Float32(0x007A0F75 [Rational(7999349, 713623846352979940529142984724747568191373312), 0.000000])

(declare-const result Float32)
(assert (= result (fp.fma RNA x y z)))
(assert (not (= result (fp #b1 #b00111101 #b11000110111101100000010))))
(check-sat)
(exit)
