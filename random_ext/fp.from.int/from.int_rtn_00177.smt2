(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTN halfpoint_int)
(declare-const x Int)
(assert (= x (- 88431895023347524675112808506107450752828343452582599193128827219501506241513759096543283570742042279508863811712706869333122795020350069829087125224842339044987294316739533080405105749510967881931174546827775570752267980354079788202445063137363146791074528266940662119472607968081983260231870639191002972160)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFDF7B98C22E042B [Rational(-88431895023347529664713582342906979893760126044679014361756978308145359997881865189573013243152206741903777543301959592689239905501588179760182096208826490892916790028818083880419288127225159175775478157735243527385659841713889771529471200939539119013212699387051055887274875157472087366128108715051027791872), -88431895023347529664713582342906979893760126044679014361756978308145359997881865189573013243152206741903777543301959592689239905501588179760182096208826490892916790028818083880419288127225159175775478157735243527385659841713889771529471200939539119013212699387051055887274875157472087366128108715051027791872.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111101 #b1111011110111001100011000010001011100000010000101011)))
(assert (= y z))
