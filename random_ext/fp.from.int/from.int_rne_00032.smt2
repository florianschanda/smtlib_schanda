(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNE rounded_int)
(declare-const x Int)
(assert (= x (- 157210955494391034620257857731607140734068834710076624186316739474305509088414983582631268752219266757582475119029437938077078312368187290903737061944481661243859988889743672057953712492689898794511607708327793086161145162435272407427866401325110270089956204848995337807438215321575996479150003537865189165701)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEBFC06D09E243C [Rational(-157210955494391030600738954886606678229199807066246151666022648661771509302213414141170396589919827726814153340425862328279787741552006975665379902614815648250472435064143740179728835279925700446268475751851917769839307195858759160295624425700463590452523028925817144948141384332053721732397619292379688206336), -157210955494391030600738954886606678229199807066246151666022648661771509302213414141170396589919827726814153340425862328279787741552006975665379902614815648250472435064143740179728835279925700446268475751851917769839307195858759160295624425700463590452523028925817144948141384332053721732397619292379688206336.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFEBFC06D09E243C)))
(assert (not (= y z)))
