(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTP halfpoint_int)
(declare-const x Int)
(assert (= x 124589054813963129360254630376328734970465937004588230741683083490926584483192912508343103457833350675316120791449510079716687807511261969801240133558953343150974828283836171160980821262705228960997349413779978943671502854370400239594213383955615328562199732735056326554704991074725062745116817558693163827200))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FE62D7666C9FE8D [Rational(124589054813963139339456178049927793252329502188781061078939385668214291995929124694402562802653679600105948254628015526428922028473738189663430075526921646846833819707993272761009186018133611548685956635594914856938286577090020206248265659559967273006476074975277114090309525453505270956909293710413213466624), 124589054813963139339456178049927793252329502188781061078939385668214291995929124694402562802653679600105948254628015526428922028473738189663430075526921646846833819707993272761009186018133611548685956635594914856938286577090020206248265659559967273006476074975277114090309525453505270956909293710413213466624.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #x7FE62D7666C9FE8D)))
(assert (not (= y z)))
