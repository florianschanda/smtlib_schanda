(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTP halfpoint_int)
(declare-const x Int)
(assert (= x (- 147707172945249587878300572525599677148158990113748284063033708110505951028772401218442052958257236739950148393334780521798450025599829116348092131859462501012359739212513144403172703914635609308142667556448232247261962053062754712633144352033489490352989151147436324437445426666831243267964202188622262173696)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEA4AF1A23EE2A8 [Rational(-147707172945249577899099024852000618866295424929555453725777405933218243516036189032382593613436907815160320930156275075086215804637352896485902189891494197316500747788356042803144339159207226720454060334633296333995178330343134745979092076429137545908712808907215536901840892288051035056171726036902212534272), -147707172945249577899099024852000618866295424929555453725777405933218243516036189032382593613436907815160320930156275075086215804637352896485902189891494197316500747788356042803144339159207226720454060334633296333995178330343134745979092076429137545908712808907215536901840892288051035056171726036902212534272.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b1010010010101111000110100010001111101110001010101000)))
(assert (= y z))
