(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTN halfpoint_int)
(declare-const x Int)
(assert (= x (- 87099106880331764667866274348683955315392756135042457271694471263644598285327467612565345354411171100844958063040344658435440578747113083681709558097139893482841646493851799834147313490738837976853440307922202533435199948385897417936919184598116373206035104665067798290247358453191492192994146475802256998400)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFDF0220B0FED4F6 [Rational(-87099106880331769657467048185483484456324538727138872440322622352288452041695573705595075026821335563239871794629597381791557689228351193612804529081124045330771142205930350634161495868453029270697743918829670490068591809745707401263945322400292345428173275785178192058049625642581596298890384551662281818112), -87099106880331769657467048185483484456324538727138872440322622352288452041695573705595075026821335563239871794629597381791557689228351193612804529081124045330771142205930350634161495868453029270697743918829670490068591809745707401263945322400292345428173275785178192058049625642581596298890384551662281818112.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFDF0220B0FED4F6)))
(assert (= y z))
