(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTN halfpoint_int)
(declare-const x Int)
(assert (= x (- 107186964641399176245949737348651957285560711691409893822015590522043170497746772252175885995694520367029040733162432844363455817201713936461748724261010744869848977892511759483630654906984790885734287597092394982836798168281286767056719117804779420441137106716656718257497190099787427503107769121530957529088)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFE314752E540E9F [Rational(-107186964641399186225151285022251015567424276875602724159271892699330878010482984438235345340514849291818868196340938291075690038164190156323938666228979048565707969316668861083659019662413173473422894818907330896103581891000906733710771393409131364885413448956877505793101724478567635714900245273251007168512), -107186964641399186225151285022251015567424276875602724159271892699330878010482984438235345340514849291818868196340938291075690038164190156323938666228979048565707969316668861083659019662413173473422894818907330896103581891000906733710771393409131364885413448956877505793101724478567635714900245273251007168512.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b0011000101000111010100101110010101000000111010011111)))
(assert (not (= y z)))
