(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTN rounded_int)
(declare-const x Int)
(assert (= x 147923211713272867028889714851842688991514589695030782212064986530836150858705514177797793155819294643017895395513681716039117266468690397810930146079084383354551254122810402945369870285371573815965638776612466292538563893401944491165308599090850650272839744827561971668706825216989578905527540008744881191565))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FEA54C9E5D6574D [Rational(147923211713272849922062192723334472984521644054574629570412803455771051905583613929800166280708592743919943202384837909342638552634161816858748594587948309788690912985878291323652727295827702101006836248798262038021142810566084817979328130232166426165878955156165404509185177001138082235311302870671550316544), 147923211713272849922062192723334472984521644054574629570412803455771051905583613929800166280708592743919943202384837909342638552634161816858748594587948309788690912985878291323652727295827702101006836248798262038021142810566084817979328130232166426165878955156165404509185177001138082235311302870671550316544.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #x7FEA54C9E5D6574D)))
(assert (not (= y z)))
