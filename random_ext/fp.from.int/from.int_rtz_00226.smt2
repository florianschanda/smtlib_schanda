(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTZ inf)
(declare-const x Int)
(assert (= x 192557229057430921645056993858770225217563951922395875771468872317052440976124572863301107341284829852766867873953736653595842522247405859353150213070628391421732750448855632798853673173996248969356002921690275398969005532413974091254448214854505441917626727858958054705000672991599558552966199995689396820510))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FEFFFFFFFFFFFFF [Rational(179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368), 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (not (= y z)))
