(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNE rounded_int)
(declare-const x Int)
(assert (= x (- 149971101851112528366689520413040023067760474569836194811889842518525254404931980819853845383552460367831913743984374265378635265937867168123645758393555678671377804561424837144678187805639945477076123104367397614072705582644027812946600962358849983198450293262808914332835616111709134395756118907112856897465)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEAB21C2A30BAB6 [Rational(-149971101851112519607513541495039509171069847446453837038325007863377045424509880997335488781623019158021444188153923677599584239523732760570839977907155686145791093453999160699056684694575723307231598734554236157151070857054033216198461848148787901606847758164165366909469948934580733592475864425272033935360), -149971101851112519607513541495039509171069847446453837038325007863377045424509880997335488781623019158021444188153923677599584239523732760570839977907155686145791093453999160699056684694575723307231598734554236157151070857054033216198461848148787901606847758164165366909469948934580733592475864425272033935360.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b1010101100100001110000101010001100001011101010110110)))
(assert (not (= y z)))
