(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTP inf)
(declare-const x Int)
(assert (= x (- 242185390257756725523862219750900602880594335782443093314160409732290432462074052160182285299368471182260282212148240324040900528619866227483822607254941871947859484924891936592523187073203950005781690662902403884814462725007860187189622633215893958143098673443300038898172288989210081978790378490515905292189)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEFFFFFFFFFFFFF [Rational(-179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368), -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (not (= y z)))
