(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTN halfpoint_int)
(declare-const x Int)
(assert (= x (- 173907957012041833905597754340429409445408736637488145254370545687519771158055179748518049058569006102915288078191051262165631214815428274237723552609549975582725943562560778404917487469374363991916834825645797361011097899649477057663153351806854745252399876482379838688543714346569571309938787612145099997184)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFEEF4E69D9799FB [Rational(-173907957012041843884799302014028467727272301821680975591626847864807478670791391934577508403389335027705115541369556708877865435777904494099913494577518279278584934986717880004945852224802746579605442047460733274277881622369097024317205627411206689696676218722600626224148248725349779521731263763865149636608), -173907957012041843884799302014028467727272301821680975591626847864807478670791391934577508403389335027705115541369556708877865435777904494099913494577518279278584934986717880004945852224802746579605442047460733274277881622369097024317205627411206689696676218722600626224148248725349779521731263763865149636608.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFEEF4E69D9799FB)))
(assert (= y z))
