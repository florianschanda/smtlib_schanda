(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTP rounded_int)
(declare-const x Int)
(assert (= x 164733255650381196221164812653109148550528349628285193617951371924383211922984923862017671028499117812145741892457599009855084886152954933420964232468273303229385820650741399845297338249434795094138859776897976510038811314450458934537033359184616911419621525170582742088628564120827362006536481417805825078156))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FED52D06D9E96E4 [Rational(164733255650381211021848991344241013364844807106409499515049193594809839652311351957421935731951589924985256383125969444196813038320761955684322591362749728099744991594162419409545954648388715244030968921334286670049107745364485315352570472556161036707046753097912770805034711921516550326151030258134765535232), 164733255650381211021848991344241013364844807106409499515049193594809839652311351957421935731951589924985256383125969444196813038320761955684322591362749728099744991594162419409545954648388715244030968921334286670049107745364485315352570472556161036707046753097912770805034711921516550326151030258134765535232.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111110 #b1101010100101101000001101101100111101001011011100100)))
(assert (not (= y z)))
