(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RNA halfpoint_int)
(declare-const x Int)
(assert (= x 120504581200014233906665553947980747749240503480124219393428983912518278619385839446450501957176426340843733980439691641249375469368894408282756127334110169548994664585733542161433311991426678870932576046044520463876214496707163080348197001198841544695314690856419812288322648465693517565253710126228275462144))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FE57355C4CA4B20 [Rational(120504581200014243885867101621579806031104068664317049730685286089805986132122051632509961301996755265633561443618197087961609690331370628144946069302078473244853656009890643761461676746855061458621183267859456377142998219426783047002249276803193489139591033096640599823927182844473725777046186277948325101568), 120504581200014243885867101621579806031104068664317049730685286089805986132122051632509961301996755265633561443618197087961609690331370628144946069302078473244853656009890643761461676746855061458621183267859456377142998219426783047002249276803193489139591033096640599823927182844473725777046186277948325101568.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111110 #b0101011100110101010111000100110010100100101100100000)))
(assert (= y z))
