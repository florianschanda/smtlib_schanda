(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTZ rounded_int)
(declare-const x Int)
(assert (= x 9624984295079208950041643596433858429583562103464365635106431992148913334104849483535191780696288806701578771233127398869074629617236252629086697077942294362591137296761564909333055561208806683481615412761789472788521746343976295286096491149595778392621865668431740743965190326918622512134880542073673461135))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FAB69B188C4C4D6 [Rational(9624984295079207892846002079283194577285189265724340328171073987141746643438365350490782065454093210897762727801442060556051149083091926132167530515003939982218399974988125543711615611367850089671279701794068911367110887248106110870101820386370571254700210975622785011254763422424193656186081097863573536768), 9624984295079207892846002079283194577285189265724340328171073987141746643438365350490782065454093210897762727801442060556051149083091926132167530515003939982218399974988125543711615611367850089671279701794068911367110887248106110870101820386370571254700210975622785011254763422424193656186081097863573536768.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #x7FAB69B188C4C4D6)))
(assert (not (= y z)))
