(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RNA rounded_int)
(declare-const x Int)
(assert (= x (- 121389520776448497105961630401619967389078994932704089747246953078835640401142338427136058425179982825277560807045150451373833940521640788520219590940548526347334303964742484654326082663674228665715935870895140559987187040869780665243594916182033070404657623863758041809684966859628203599811712231449852912566)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFE59BA94AE7FF58 [Rational(-121389520776448500952793697308946723644059445470764297970921409486507056511710051193244623329662642163025753987293369145500272013521178262972822404416803283959594936124094771563833136870421044331494314248858797698189844003807161185022441517776573159240853321558798736804665546571184310509723430724103049314304), -121389520776448500952793697308946723644059445470764297970921409486507056511710051193244623329662642163025753987293369145500272013521178262972822404416803283959594936124094771563833136870421044331494314248858797698189844003807161185022441517776573159240853321558798736804665546571184310509723430724103049314304.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFE59BA94AE7FF58)))
(assert (= y z))
