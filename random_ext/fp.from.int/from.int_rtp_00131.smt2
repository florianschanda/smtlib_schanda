(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTP halfpoint_int)
(declare-const x Int)
(assert (= x (- 121049510696327942036758000929934559436702788802960500043138264640034667108137053229934193857026322173761112416929100677755844344433176824661675334154313874296387246456113809485220693580007707802998678041934729896988873974610577991737583669700233039205144922902956451951790474286654843978723506652211016892416)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFE58C2ACDFC5018 [Rational(-121049510696327932057556453256335501154839223618767669705881962462746959595400841043874734512205993248971284953750595231043610123470700604799485392186345570600528255031956707885192328824579325215310070820119793983722090251890958025083531394095881094760868580662735664416185939907874635766931030500490967252992), -121049510696327932057556453256335501154839223618767669705881962462746959595400841043874734512205993248971284953750595231043610123470700604799485392186345570600528255031956707885192328824579325215310070820119793983722090251890958025083531394095881094760868580662735664416185939907874635766931030500490967252992.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #xFFE58C2ACDFC5018)))
(assert (= y z))
