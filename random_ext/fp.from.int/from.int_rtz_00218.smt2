(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RTZ rounded_int)
(declare-const x Int)
(assert (= x 74409733351126096133073147779729202179353971266602015332447842116556408888018120199374135330461431951464354153142388659040962108136800680117482572005474582439662913827216402925778190458206753444470142128777857399713739857622167067478773496345354535198762238211502968948857054667114678149727303632614532459017))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FDA7DA16CCB608F [Rational(74409733351126089018734308536073973558813255711564408431660672329583465149867539358862876171617309987845631273552067180504452100078550604344414053089735000144780193261176933040684648926449602920903219768464358472635642132903842316802882795693493649007246933556812315784424985156962343611048358560717925777408), 74409733351126089018734308536073973558813255711564408431660672329583465149867539358862876171617309987845631273552067180504452100078550604344414053089735000144780193261176933040684648926449602920903219768464358472635642132903842316802882795693493649007246933556812315784424985156962343611048358560717925777408.000000])

(declare-const z Float64)
(assert (= z ((_ to_fp 11 53) #x7FDA7DA16CCB608F)))
(assert (not (= y z)))
