(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNE halfpoint_int)
(declare-const x Int)
(assert (= x 52672863629954605254934342570629915112710685141016826347010006394469820489728004010715210069349488676241321897190028475091870436637887975378639185498502418483149283459008215673141115315813832760168943131365617174626796412193755898221470624553576908224178532800304843189369105387208786241891318404910487175168))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FD2C08DAEC5C8D0 [Rational(52672863629954610244535116407429444253642467733113241515638157483113674246096110103744939741759653138636235628779281198447987547119126085309734156482486570331078779171086766473155297693528024054013246742273085131260188273553565881548496762355752880446316703920415236957171372576598890347787556480770511994880), 52672863629954610244535116407429444253642467733113241515638157483113674246096110103744939741759653138636235628779281198447987547119126085309734156482486570331078779171086766473155297693528024054013246742273085131260188273553565881548496762355752880446316703920415236957171372576598890347787556480770511994880.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111101 #b0010110000001000110110101110110001011100100011010000)))
(assert (not (= y z)))
