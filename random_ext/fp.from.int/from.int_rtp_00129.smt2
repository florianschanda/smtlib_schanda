(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RTP halfpoint_int)
(declare-const x Int)
(assert (= x 83221728751138033085934814317003499614466912477460857105346926061316113213325237336160282597480153171175566879049112161419520648252044967195046082128954899956956008305180601655714841127152649520242555480138246569883369543736390966606487652600854198593186566269861472166881001491657824727970372352688592519168))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FDDA0BF4AF5906B [Rational(83221728751138038075535588153803028755398695069557272273975077149959966969693343429190012269890317633570480610638364884775637758733283077126141053112939051804885504017259152455729023504866840814086859091045714526516761405096200949933513790403030170815324737389971865934683268681047928833866610428548617338880), 83221728751138038075535588153803028755398695069557272273975077149959966969693343429190012269890317633570480610638364884775637758733283077126141053112939051804885504017259152455729023504866840814086859091045714526516761405096200949933513790403030170815324737389971865934683268681047928833866610428548617338880.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111101 #b1101101000001011111101001010111101011001000001101011)))
(assert (= y z))
