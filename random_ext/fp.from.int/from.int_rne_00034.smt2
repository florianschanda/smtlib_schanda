(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status unsat)
;; (fp.from.int RNE rounded_int)
(declare-const x Int)
(assert (= x (- 110075594170892998013550875164748811821962138932113801405480503496858542259303672633631453297255271169839432455829558831119136966871836228120356811435665265367072234312435629963079775737926291052031146954945783350214297583715312598258753091503699637087510935791644694409832502443477491459900982165613218840638)))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0xFFE3981757707DF9 [Rational(-110075594170893006279529775409195009329302644077256323538103610369322834402701859587584485723037484971167180537983790527446681585442230435203039809166103576683290426770904188579416419443395173365894653227244624535010872177534978131063753549207942047092678955283790890709267122551080779101333155034409107193856), -110075594170893006279529775409195009329302644077256323538103610369322834402701859587584485723037484971167180537983790527446681585442230435203039809166103576683290426770904188579416419443395173365894653227244624535010872177534978131063753549207942047092678955283790890709267122551080779101333155034409107193856.000000])

(declare-const z Float64)
(assert (= z (fp #b1 #b11111111110 #b0011100110000001011101010111011100000111110111111001)))
(assert (not (= y z)))
