(set-info :smt-lib-version 2.6)
(set-logic QF_FPLIA)
(set-option :produce-models true)
(set-info :source |Random FP created by PyMPF|)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :category random)
(set-info :status sat)
;; (fp.from.int RNA halfpoint_int)
(declare-const x Int)
(assert (= x 52801687692370122128121278223070523537871115179280448741627520001584844500576557164619137360887834054764298913454601497593911547565350052214074755493411390734038428106323170552738352168705089255744615634183586332776381388715857093658869135980266493508807152041687796154410079652365758080019635397953604026368))
(declare-const y Float64)
(assert (= y ((_ to_fp 11 53) x)))
;; y should be Float64(0x7FD2CC4B5A5C565A [Rational(52801687692370127117722052059870052678802897771376863910255671090228698256944663257648867033297998517159212645043854220950028658046588162145169726477395542581967923818401721352752534546419280549588919245091054289409773250075667076985895273782442465730945323161798189922212346841755862185915873473813628846080), 52801687692370127117722052059870052678802897771376863910255671090228698256944663257648867033297998517159212645043854220950028658046588162145169726477395542581967923818401721352752534546419280549588919245091054289409773250075667076985895273782442465730945323161798189922212346841755862185915873473813628846080.000000])

(declare-const z Float64)
(assert (= z (fp #b0 #b11111111101 #b0010110011000100101101011010010111000101011001011010)))
(assert (= y z))
