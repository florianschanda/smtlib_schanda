(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_ALIA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun spoon_1 ((kitten_1 Int)) Bool (or (= kitten_1 0) (= kitten_1 1)))
(define-fun spoon_2 ((kitten_2 Int)) Bool (and (<= 0 kitten_2) (<= kitten_2 999)))
(declare-const cat_3 Int)
(declare-const cat_4 Int)
(assert (<= 0 cat_3))
(assert (<= 0 cat_4))
(declare-const cat_5 Int)
(declare-const cat_6 Int)
(declare-const cat_7 Int)
(assert (<= 0 cat_5))
(assert (< cat_5 cat_6))
(assert (<= 0 cat_7))
(declare-const cat_8 Int)
(declare-const cat_9 Int)
(declare-const cat_10 Int)
(assert (<= 0 cat_8))
(assert (< cat_8 cat_9))
(assert (<= 0 cat_10))
(declare-const cat_11 Int)
(declare-const cat_12 Bool)
(define-fun spoon_13 ((kitten_3 (Array Int Bool)) (kitten_4 Int) (kitten_5 Int) (kitten_6 (Array Int Bool)) (kitten_7 Int) (kitten_8 Int)) Bool (ite (and (ite (<= kitten_4 kitten_5) (and (<= kitten_7 kitten_8) (= (- kitten_5 kitten_4) (- kitten_8 kitten_7))) (< kitten_8 kitten_7)) cat_12) true false))
(declare-const cat_14 (Array Int Bool))
(declare-const cat_15 Int)
(declare-const cat_16 Int)
(declare-const cat_17 Int)
(define-fun spoon_18 ((kitten_9 Int) (kitten_10 Bool) (kitten_11 Bool) (kitten_12 Bool) (kitten_13 Bool)) Bool (=> (or (= kitten_10 true) (<= 0 999)) (spoon_2 kitten_9)))
(declare-const cat_19 Bool)
(declare-const cat_20 Int)
(declare-const cat_21 Bool)
(declare-const cat_22 Bool)
(declare-const cat_23 Int)
(declare-const cat_24 Int)
(declare-const cat_25 Bool)
(declare-const cat_26 Int)
(declare-const cat_27 Bool)
(declare-const cat_28 Int)
(declare-const cat_29 Int)
(assert (= cat_21 cat_19))
(assert (= cat_23 cat_20))
(assert (= cat_24 999))
(assert (<= 0 cat_24))
(assert (<= cat_24 999))
(assert (not (= cat_25 true)))
(assert (and (=> (<= 0 999) (spoon_2 cat_26)) (and (<= 0 cat_26) (<= cat_26 999))))
(assert (not (= (select cat_14 cat_26) true)))
(assert (not (= cat_26 0)))
(assert (= cat_28 cat_26))
(assert (= cat_29 (- cat_26 1)))
(assert (not (not (= cat_27 true))))
(check-sat)
