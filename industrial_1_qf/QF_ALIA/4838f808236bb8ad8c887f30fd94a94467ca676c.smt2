(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_ALIA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun spoon_1 ((kitten_1 Bool)) Int (ite (= kitten_1 true) 1 0))
(define-fun spoon_2 ((kitten_2 Int)) Bool (ite (= kitten_2 0) false true))
(define-fun spoon_3 ((kitten_3 Int)) Bool (or (= kitten_3 0) (= kitten_3 1)))
(define-fun spoon_4 ((kitten_4 Int)) Bool (and (<= 0 kitten_4) (<= kitten_4 999)))
(declare-const cat_5 Int)
(declare-const cat_6 Int)
(assert (<= 0 cat_5))
(assert (<= 0 cat_6))
(declare-const cat_7 Int)
(declare-const cat_8 Int)
(declare-const cat_9 Int)
(assert (<= 0 cat_7))
(assert (< cat_7 cat_8))
(assert (<= 0 cat_9))
(declare-const cat_10 Int)
(declare-const cat_11 Int)
(declare-const cat_12 Int)
(assert (<= 0 cat_10))
(assert (< cat_10 cat_11))
(assert (<= 0 cat_12))
(declare-const cat_13 Int)
(declare-const cat_14 Bool)
(define-fun spoon_15 ((kitten_5 (Array Int Bool)) (kitten_6 Int) (kitten_7 Int) (kitten_8 (Array Int Bool)) (kitten_9 Int) (kitten_10 Int)) Bool (ite (and (ite (<= kitten_6 kitten_7) (and (<= kitten_9 kitten_10) (= (- kitten_7 kitten_6) (- kitten_10 kitten_9))) (< kitten_10 kitten_9)) cat_14) true false))
(declare-const cat_16 (Array Int Bool))
(declare-const cat_17 Int)
(declare-const cat_18 Int)
(declare-const cat_19 Int)
(define-fun spoon_20 ((kitten_11 Int) (kitten_12 Bool) (kitten_13 Bool) (kitten_14 Bool)) Bool (=> (or (= kitten_12 true) (<= 0 999)) (spoon_4 kitten_11)))
(declare-const cat_21 Bool)
(declare-const cat_22 Int)
(declare-const cat_23 Bool)
(declare-const cat_24 Bool)
(declare-const cat_25 Bool)
(declare-const cat_26 Bool)
(declare-const cat_27 Int)
(declare-const cat_28 Int)
(declare-const cat_29 Bool)
(declare-const cat_30 Int)
(declare-const cat_31 Bool)
(declare-const cat_32 Int)
(declare-const cat_33 Int)
(assert (= (spoon_2 0) cat_23))
(assert (= cat_24 cat_23))
(assert (= cat_25 cat_21))
(assert (= cat_27 cat_22))
(assert (= cat_28 0))
(assert (<= 0 cat_28))
(assert (<= cat_28 999))
(assert (not (not (= cat_26 true))))
(check-sat)
