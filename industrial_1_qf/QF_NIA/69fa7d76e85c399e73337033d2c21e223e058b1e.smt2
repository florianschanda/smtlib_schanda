(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_NIA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun spoon_1 ((kitten_1 Int) (kitten_2 Int)) Int (ite (< 0 kitten_2) (mod kitten_1 kitten_2) (+ (mod kitten_1 kitten_2) kitten_2)))
(define-fun spoon_2 ((kitten_3 Int)) Bool (and (<= 0 kitten_3) (<= kitten_3 999)))
(define-fun spoon_3 ((kitten_4 Int) (kitten_5 Bool) (kitten_6 Bool) (kitten_7 Bool)) Bool (=> (or (= kitten_5 true) (<= 0 999)) (spoon_2 kitten_4)))
(define-fun spoon_4 ((kitten_8 Int)) Bool (and (<= 0 kitten_8) (<= kitten_8 99)))
(declare-const cat_5 Int)
(declare-const cat_6 Int)
(define-fun spoon_7 ((kitten_9 Int) (kitten_10 Bool) (kitten_11 Bool) (kitten_12 Bool)) Bool (=> (or (= kitten_10 true) (<= 0 99)) (spoon_4 kitten_9)))
(declare-const cat_8 Int)
(declare-const cat_9 Int)
(declare-const cat_10 Int)
(assert (spoon_2 cat_5))
(declare-const cat_11 Int)
(assert (and (= cat_8 cat_11) (and (spoon_2 cat_8) (= (spoon_1 cat_8 10) 0))))
(assert (not (not (= 10 0))))
(check-sat)
