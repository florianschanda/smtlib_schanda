(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_NIA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun spoon_1 ((kitten_1 Int)) Bool (and (<= 0 kitten_1) (<= kitten_1 150000)))
(define-fun spoon_2 ((kitten_2 Int) (kitten_3 Bool) (kitten_4 Bool) (kitten_5 Bool) (kitten_6 Bool)) Bool (=> (or (= kitten_3 true) (<= 0 150000)) (spoon_1 kitten_2)))
(define-fun spoon_3 ((kitten_7 Int)) Bool (and (<= 0 kitten_7) (<= kitten_7 999)))
(define-fun spoon_4 ((kitten_8 Int) (kitten_9 Bool) (kitten_10 Bool) (kitten_11 Bool) (kitten_12 Bool)) Bool (=> (or (= kitten_9 true) (<= 0 999)) (spoon_3 kitten_8)))
(define-fun spoon_5 ((kitten_13 Int)) Bool (and (<= (- 2147483648) kitten_13) (<= kitten_13 2147483647)))
(define-fun spoon_6 ((kitten_14 Int)) Bool (and (<= 0 kitten_14) (<= kitten_14 500000)))
(declare-const cat_7 Int)
(declare-const cat_8 Int)
(declare-const cat_9 Int)
(declare-const cat_10 Int)
(define-fun spoon_11 ((kitten_15 Int) (kitten_16 Bool) (kitten_17 Bool) (kitten_18 Bool) (kitten_19 Bool)) Bool (=> (or (= kitten_16 true) (<= 0 500000)) (spoon_6 kitten_15)))
(declare-const cat_12 Int)
(declare-const cat_13 Int)
(declare-const cat_14 Int)
(declare-const cat_15 Int)
(declare-const cat_16 Int)
(assert (spoon_3 cat_7))
(assert (spoon_1 cat_9))
(declare-const cat_17 Int)
(assert (and (= cat_12 cat_17) (and (spoon_1 cat_12) (= cat_12 (* cat_7 100)))))
(assert (= cat_13 (- cat_12 cat_9)))
(assert (= cat_14 (abs cat_13)))
(assert (and (= cat_15 cat_14) (spoon_5 cat_14)))
(assert (not (spoon_6 cat_15)))
(check-sat)
