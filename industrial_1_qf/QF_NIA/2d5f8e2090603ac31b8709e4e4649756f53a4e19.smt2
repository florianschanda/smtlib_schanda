(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_NIA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun spoon_1 ((kitten_1 Int) (kitten_2 Int)) Int (ite (< 0 kitten_2) (mod kitten_1 kitten_2) (+ (mod kitten_1 kitten_2) kitten_2)))
(define-fun spoon_2 ((kitten_3 Int)) Bool (and (<= (- 32768) kitten_3) (<= kitten_3 32767)))
(define-fun spoon_3 ((kitten_4 Int)) Bool (and (<= 0 kitten_4) (<= kitten_4 999)))
(define-fun spoon_4 ((kitten_5 Int) (kitten_6 Bool) (kitten_7 Bool) (kitten_8 Bool)) Bool (=> (or (= kitten_6 true) (<= 0 999)) (spoon_3 kitten_5)))
(declare-const cat_5 Int)
(declare-const cat_6 Int)
(declare-const cat_7 Int)
(declare-const cat_8 Int)
(declare-const cat_9 Int)
(declare-const cat_10 Int)
(declare-const cat_11 Int)
(declare-const cat_12 Int)
(declare-const cat_13 Int)
(declare-const cat_14 Int)
(declare-const cat_15 Bool)
(declare-const cat_16 Int)
(declare-const cat_17 Int)
(declare-const cat_18 Int)
(declare-const cat_19 Int)
(declare-const cat_20 Int)
(declare-const cat_21 Int)
(declare-const cat_22 Int)
(declare-const cat_23 Int)
(declare-const cat_24 Int)
(declare-const cat_25 Int)
(declare-const cat_26 Int)
(declare-const cat_27 Int)
(assert (spoon_3 cat_5))
(assert (=> (<= 0 999) (spoon_3 cat_8)))
(assert (= cat_14 cat_5))
(assert (not (= (spoon_1 cat_5 10) 0)))
(declare-const cat_28 Int)
(assert (and (= cat_10 (* cat_28 10)) (spoon_2 (* cat_28 10))))
(assert (= cat_15 (ite (< 999 cat_10) true false)))
(assert (not (= cat_15 true)))
(assert (and (= cat_11 (* cat_28 10)) (spoon_2 (* cat_28 10))))
(assert (not (spoon_3 cat_11)))
(check-sat)
