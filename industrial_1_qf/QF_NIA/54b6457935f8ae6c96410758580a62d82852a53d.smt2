(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_NIA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun spoon_1 ((kitten_1 Int) (kitten_2 Int)) Int (ite (< 0 kitten_2) (mod kitten_1 kitten_2) (+ (mod kitten_1 kitten_2) kitten_2)))
(define-fun spoon_2 ((kitten_3 Int)) Bool (and (<= 0 kitten_3) (<= kitten_3 999)))
(declare-const cat_3 Int)
(declare-const cat_4 Int)
(assert (<= 0 cat_3))
(assert (<= 0 cat_4))
(declare-const cat_5 Int)
(declare-const cat_6 Int)
(declare-const cat_7 Int)
(assert (<= 0 cat_5))
(assert (< cat_5 cat_6))
(assert (<= 0 cat_7))
(declare-const cat_8 Int)
(declare-const cat_9 Int)
(declare-const cat_10 Int)
(assert (<= 0 cat_8))
(assert (< cat_8 cat_9))
(assert (<= 0 cat_10))
(define-fun spoon_11 ((kitten_4 Int)) Bool (and (<= 0 kitten_4) (<= kitten_4 150000)))
(declare-const cat_12 Int)
(declare-const cat_13 Int)
(assert (<= 0 cat_12))
(assert (<= 0 cat_13))
(declare-const cat_14 Int)
(declare-const cat_15 Int)
(declare-const cat_16 Int)
(assert (<= 0 cat_14))
(assert (< cat_14 cat_15))
(assert (<= 0 cat_16))
(declare-const cat_17 Int)
(declare-const cat_18 Int)
(declare-const cat_19 Int)
(assert (<= 0 cat_17))
(assert (< cat_17 cat_18))
(assert (<= 0 cat_19))
(declare-const cat_20 Int)
(declare-const cat_21 Int)
(define-fun spoon_22 ((kitten_5 Int) (kitten_6 Bool) (kitten_7 Bool) (kitten_8 Bool) (kitten_9 Bool)) Bool (=> (or (= kitten_6 true) (<= 0 150000)) (spoon_11 kitten_5)))
(define-fun spoon_23 ((kitten_10 Int) (kitten_11 Bool) (kitten_12 Bool) (kitten_13 Bool) (kitten_14 Bool)) Bool (=> (or (= kitten_11 true) (<= 0 999)) (spoon_2 kitten_10)))
(declare-const cat_24 Int)
(declare-const cat_25 Int)
(assert (not false))
(check-sat)
