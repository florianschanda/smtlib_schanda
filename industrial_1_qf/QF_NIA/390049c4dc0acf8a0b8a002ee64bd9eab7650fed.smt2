(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_NIA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun spoon_1 ((kitten_1 Int) (kitten_2 Int)) Int (ite (< 0 kitten_2) (mod kitten_1 kitten_2) (+ (mod kitten_1 kitten_2) kitten_2)))
(define-fun spoon_2 ((kitten_3 Int)) Bool (and (<= 0 kitten_3) (<= kitten_3 999)))
(define-fun spoon_3 ((kitten_4 Int) (kitten_5 Bool) (kitten_6 Bool) (kitten_7 Bool) (kitten_8 Bool)) Bool (=> (or (= kitten_5 true) (<= 0 999)) (spoon_2 kitten_4)))
(define-fun spoon_4 ((kitten_9 Int)) Bool (and (<= 0 kitten_9) (<= kitten_9 99900)))
(define-fun spoon_5 ((kitten_10 Int) (kitten_11 Bool) (kitten_12 Bool) (kitten_13 Bool) (kitten_14 Bool)) Bool (=> (or (= kitten_11 true) (<= 0 99900)) (spoon_4 kitten_10)))
(define-fun spoon_6 ((kitten_15 Int)) Bool (and (<= (- 32768) kitten_15) (<= kitten_15 32767)))
(declare-const cat_7 Int)
(declare-const cat_8 Int)
(define-fun spoon_9 ((kitten_16 Int)) Bool (and (<= 0 kitten_16) (<= kitten_16 1000)))
(define-fun spoon_10 ((kitten_17 Int) (kitten_18 Bool) (kitten_19 Bool) (kitten_20 Bool) (kitten_21 Bool)) Bool (=> (or (= kitten_18 true) (<= 0 1000)) (spoon_9 kitten_17)))
(declare-const cat_11 Int)
(declare-const cat_12 Int)
(declare-const cat_13 Int)
(declare-const cat_14 Int)
(declare-const cat_15 Int)
(declare-const cat_16 Int)
(declare-const cat_17 Int)
(declare-const cat_18 Int)
(declare-const cat_19 Int)
(declare-const cat_20 Int)
(declare-const cat_21 Int)
(declare-const cat_22 Int)
(declare-const cat_23 Int)
(declare-const cat_24 Int)
(declare-const cat_25 Int)
(declare-const cat_26 Int)
(declare-const cat_27 Int)
(declare-const cat_28 Int)
(declare-const cat_29 Int)
(declare-const cat_30 Int)
(declare-const cat_31 Int)
(declare-const cat_32 Int)
(declare-const cat_33 Int)
(declare-const cat_34 Int)
(declare-const cat_35 Int)
(declare-const cat_36 Int)
(declare-const cat_37 Int)
(declare-const cat_38 Int)
(declare-const cat_39 Int)
(declare-const cat_40 Int)
(declare-const cat_41 Int)
(declare-const cat_42 Int)
(declare-const cat_43 Int)
(declare-const cat_44 Int)
(declare-const cat_45 Int)
(declare-const cat_46 Bool)
(assert (spoon_4 cat_7))
(assert (=> (<= 0 999) (spoon_2 cat_13)))
(assert (=> (<= 0 1000) (spoon_9 cat_14)))
(declare-const cat_47 Int)
(declare-const cat_48 Int)
(assert (and (= cat_16 cat_48) (and (spoon_2 cat_16) (= cat_16 cat_47))))
(assert (= cat_17 (+ cat_16 5)))
(declare-const cat_49 Int)
(assert (= cat_18 cat_49))
(assert (= cat_19 (* cat_18 10)))
(assert (and (= cat_20 cat_19) (spoon_6 cat_19)))
(assert (and (= cat_21 cat_20) (spoon_9 cat_20)))
(assert (= cat_31 cat_21))
(assert (=> (< 990 cat_31) (= cat_33 990)))
(assert (=> (not (< 990 cat_31)) (and (= cat_22 cat_31) (spoon_2 cat_31))))
(assert (=> (not (< 990 cat_31)) (= cat_35 cat_22)))
(assert (=> (not (< 990 cat_31)) (= cat_33 cat_35)))
(assert (= cat_37 cat_38))
(assert (= cat_39 cat_37))
(assert (= cat_37 cat_33))
(assert (= cat_31 cat_41))
(assert (= cat_33 cat_40))
(assert (= cat_45 cat_39))
(assert (= cat_44 cat_31))
(assert (= cat_43 cat_33))
(assert (and (= cat_23 cat_47) (spoon_2 cat_47)))
(assert (= cat_24 (+ cat_23 5)))
(assert (not (not (= 10 0))))
(check-sat)
