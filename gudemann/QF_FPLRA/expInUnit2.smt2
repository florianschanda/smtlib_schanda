(set-info :smt-lib-version 2.6)
(set-logic QF_FPLRA)
(set-info :source |
Generated by: Matthias GÃ¼demann
Generated on: 2019-03-10
Generator: SBV
Application: Numerical Approximation of Elementary Functions
Target Solver: z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
; --- uninterpreted sorts ---
; --- literal constants ---
(define-fun s_2 () Bool false)
(define-fun s_1 () Bool true)
(define-fun s2 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 4722366482869645.0 4722366482869645213696.0)))
(define-fun s5 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 1.0 1.0)))
(define-fun s12 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 120.0 1.0)))
(define-fun s13 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 60.0 1.0)))
(define-fun s15 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 6.0 1.0)))
(define-fun s16 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 1725329017245637.0 2251799813685248.0)))
(define-fun s20 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 6743802672015265.0 1125899906842624.0)))
(define-fun s21 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 8479827738375907.0 2251799813685248.0)))
(define-fun s28 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 12.0 1.0)))
(define-fun s39 () (_ FloatingPoint 11 53) (_ +zero 11 53))
; --- skolem constants ---
(declare-fun s0 () (_ FloatingPoint 11 53))
(declare-fun s1 () (_ FloatingPoint 11 53))
; --- constant tables ---
; --- skolemized tables ---
; --- arrays ---
; --- uninterpreted constants ---
; --- user given axioms ---
; --- formula ---
(define-fun s3 () Bool (fp.gt s0 s2))
(define-fun s4 () Bool (fp.gt s1 s2))
(define-fun s6 () Bool (fp.lt s0 s5))
(define-fun s7 () Bool (fp.lt s1 s5))
(define-fun s8 () Bool (and s6 s7))
(define-fun s9 () Bool (and s4 s8))
(define-fun s10 () Bool (and s3 s9))
(define-fun s11 () Bool (not s10))
(define-fun s14 () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven s0 s5))
(define-fun s17 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s14 s16))
(define-fun s18 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s15 s17))
(define-fun s19 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s14 s18))
(define-fun s22 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s14 s21))
(define-fun s23 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s20 s22))
(define-fun s24 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s19 s23))
(define-fun s25 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s1 s24))
(define-fun s26 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s13 s25))
(define-fun s27 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s12 s26))
(define-fun s29 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s25 s28))
(define-fun s30 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s25 s29))
(define-fun s31 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s27 s30))
(define-fun s32 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s25 s25))
(define-fun s33 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s25 s32))
(define-fun s34 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s31 s33))
(define-fun s35 () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven s12 s26))
(define-fun s36 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s30 s35))
(define-fun s37 () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven s36 s33))
(define-fun s38 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s34 s37))
(define-fun s40 () Bool (fp.geq s38 s39))
(define-fun s41 () Bool (fp.leq s38 s5))
(define-fun s42 () Bool (and s40 s41))
(define-fun s43 () Bool (or s11 s42))
(assert (not s43))
(check-sat)
(exit)
