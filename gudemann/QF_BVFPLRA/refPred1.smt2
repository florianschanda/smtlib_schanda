(set-info :smt-lib-version 2.6)
(set-logic QF_BVFPLRA)
(set-info :source |
Generated by: Matthias GÃ¼demann
Generated on: 2019-03-10
Generator: SBV
Application: Numerical Approximation of Elementary Functions
Target Solver: z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
; --- uninterpreted sorts ---
; --- literal constants ---
(define-fun s_2 () Bool false)
(define-fun s_1 () Bool true)
(define-fun s4 () (_ BitVec 64) #x0000000000000000)
(define-fun s6 () (_ BitVec 64) #x0000000000000064)
(define-fun s19 () (_ BitVec 64) #x0000000000000001)
(define-fun s21 () (_ BitVec 64) #x000000000000000a)
(define-fun s34 () RoundingMode roundNearestTiesToEven)
(define-fun s9 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 1.0 2.0)))
(define-fun s11 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 1.0 1.0)))
(define-fun s14 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 5764607523034235.0 576460752303423488.0)))
(define-fun s16 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 10.0 1.0)))
(define-fun s41 () (_ FloatingPoint 11 53) (_ +zero 11 53))
(define-fun s48 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 2.0 1.0)))
(define-fun s52 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 6.0 1.0)))
(define-fun s56 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 24.0 1.0)))
(define-fun s60 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 120.0 1.0)))
(define-fun s64 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 720.0 1.0)))
(define-fun s68 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 5040.0 1.0)))
(define-fun s72 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 40320.0 1.0)))
(define-fun s76 () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven (/ 362880.0 1.0)))
; --- skolem constants ---
(declare-fun s0 () (_ BitVec 64))
(declare-fun s1 () (_ FloatingPoint 11 53))
(declare-fun s2 () (_ FloatingPoint 11 53))
(declare-fun s3 () (_ BitVec 64))
; --- constant tables ---
; --- skolemized tables ---
; --- arrays ---
; --- uninterpreted constants ---
; --- user given axioms ---
; --- formula ---
(define-fun s5 () Bool (bvugt s0 s4))
(define-fun s7 () Bool (bvule s0 s6))
(define-fun s8 () Bool (and s5 s7))
(define-fun s10 () Bool (fp.geq s1 s9))
(define-fun s12 () Bool (fp.lt s1 s11))
(define-fun s13 () Bool (and s10 s12))
(define-fun s15 () Bool (fp.gt s2 s14))
(define-fun s17 () Bool (fp.lt s2 s16))
(define-fun s18 () Bool (and s15 s17))
(define-fun s20 () Bool (bvuge s3 s19))
(define-fun s22 () Bool (bvule s3 s21))
(define-fun s23 () Bool (and s20 s22))
(define-fun s24 () Bool (and s18 s23))
(define-fun s25 () Bool (and s13 s24))
(define-fun s26 () Bool (and s8 s25))
(define-fun s27 () Bool (not s26))
(define-fun s28 () (_ FloatingPoint 11 53) ((_ to_fp_unsigned 11 53) roundNearestTiesToEven s0))
(define-fun s29 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s1 s28))
(define-fun s30 () Bool (fp.isNaN s29))
(define-fun s31 () Bool (fp.isInfinite s29))
(define-fun s32 () Bool (or s30 s31))
(define-fun s33 () Bool (not s32))
(define-fun s35 () (_ BitVec 64) (ite (fp.isNegative s29) (bvneg ((_ fp.to_ubv 64) s34 (fp.abs s29))) ((_ fp.to_ubv 64) s34 s29)))
(define-fun s36 () (_ BitVec 64) (ite s33 s35 s4))
(define-fun s37 () (_ FloatingPoint 11 53) (fp.sub roundNearestTiesToEven s11 s1))
(define-fun s38 () (_ FloatingPoint 11 53) ((_ to_fp_unsigned 11 53) roundNearestTiesToEven s3))
(define-fun s39 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s2 s38))
(define-fun s40 () (_ FloatingPoint 11 53) (fp.neg s39))
(define-fun s42 () Bool (fp.lt s40 s41))
(define-fun s43 () (_ FloatingPoint 11 53) (fp.neg s40))
(define-fun s44 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s11 s43))
(define-fun s45 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s44 s11))
(define-fun s46 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s11 s45))
(define-fun s47 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s44))
(define-fun s49 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s47 s48))
(define-fun s50 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s46 s49))
(define-fun s51 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s47))
(define-fun s53 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s51 s52))
(define-fun s54 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s50 s53))
(define-fun s55 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s51))
(define-fun s57 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s55 s56))
(define-fun s58 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s54 s57))
(define-fun s59 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s55))
(define-fun s61 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s59 s60))
(define-fun s62 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s58 s61))
(define-fun s63 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s59))
(define-fun s65 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s63 s64))
(define-fun s66 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s62 s65))
(define-fun s67 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s63))
(define-fun s69 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s67 s68))
(define-fun s70 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s66 s69))
(define-fun s71 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s67))
(define-fun s73 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s71 s72))
(define-fun s74 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s70 s73))
(define-fun s75 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s43 s71))
(define-fun s77 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s75 s76))
(define-fun s78 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s74 s77))
(define-fun s79 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s11 s78))
(define-fun s80 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s11 s40))
(define-fun s81 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s80 s11))
(define-fun s82 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s11 s81))
(define-fun s83 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s80))
(define-fun s84 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s83 s48))
(define-fun s85 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s82 s84))
(define-fun s86 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s83))
(define-fun s87 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s86 s52))
(define-fun s88 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s85 s87))
(define-fun s89 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s86))
(define-fun s90 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s89 s56))
(define-fun s91 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s88 s90))
(define-fun s92 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s89))
(define-fun s93 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s92 s60))
(define-fun s94 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s91 s93))
(define-fun s95 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s92))
(define-fun s96 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s95 s64))
(define-fun s97 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s94 s96))
(define-fun s98 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s95))
(define-fun s99 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s98 s68))
(define-fun s100 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s97 s99))
(define-fun s101 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s98))
(define-fun s102 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s101 s72))
(define-fun s103 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s100 s102))
(define-fun s104 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s40 s101))
(define-fun s105 () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven s104 s76))
(define-fun s106 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s103 s105))
(define-fun s107 () (_ FloatingPoint 11 53) (ite s42 s79 s106))
(define-fun s108 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s37 s107))
(define-fun s109 () (_ FloatingPoint 11 53) (fp.add roundNearestTiesToEven s1 s108))
(define-fun s110 () (_ FloatingPoint 11 53) (fp.mul roundNearestTiesToEven s28 s109))
(define-fun s111 () Bool (fp.isNaN s110))
(define-fun s112 () Bool (fp.isInfinite s110))
(define-fun s113 () Bool (or s111 s112))
(define-fun s114 () Bool (not s113))
(define-fun s115 () (_ BitVec 64) (ite (fp.isNegative s110) (bvneg ((_ fp.to_ubv 64) s34 (fp.abs s110))) ((_ fp.to_ubv 64) s34 s110)))
(define-fun s116 () (_ BitVec 64) (ite s114 s115 s4))
(define-fun s117 () (_ FloatingPoint 11 53) ((_ to_fp_unsigned 11 53) roundNearestTiesToEven s116))
(define-fun s118 () Bool (fp.isNaN s117))
(define-fun s119 () Bool (fp.isInfinite s117))
(define-fun s120 () Bool (or s118 s119))
(define-fun s121 () Bool (not s120))
(define-fun s122 () (_ BitVec 64) (ite (fp.isNegative s117) (bvneg ((_ fp.to_ubv 64) s34 (fp.abs s117))) ((_ fp.to_ubv 64) s34 s117)))
(define-fun s123 () (_ BitVec 64) (ite s121 s122 s4))
(define-fun s124 () Bool (bvult s36 s123))
(define-fun s125 () Bool (or s27 s124))
(assert (not s125))
(check-sat)
(exit)
