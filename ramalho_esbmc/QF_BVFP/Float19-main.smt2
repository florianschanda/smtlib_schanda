(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |ESBMC floating-point test cases contributed by Mikhail Ramalho.|)
(set-info :category "crafted")
(set-info :status unsat)

(declare-fun |c::main::f00::f@1!0&0#1| () (_ FloatingPoint 8 24))
(declare-fun |c::main::main::1::f@1!0&0#0| () (_ FloatingPoint 8 24))
(declare-fun |goto_symex::guard@0!0&0#1| () Bool)
(declare-fun |c::f00::$tmp::tmp$1@1!0&0#1| () Bool)
(declare-fun |c::math::__isinff::f@1!0&0#1| () (_ FloatingPoint 8 24))
(declare-fun |c::f00::$tmp::return_value___isinff$2@1!0&0#1| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::return_value___isinff$2@1!0&0#2| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::return_value___isinff$2@1!0&0#0| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::tmp$3@1!0&0#1| () Bool)
(declare-fun |goto_symex::guard@0!0&0#2| () Bool)
(declare-fun |c::math::__isinf::d@1!0&0#1| () (_ FloatingPoint 11 53))
(declare-fun |c::f00::$tmp::return_value___isinf$4@1!0&0#1| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::return_value___isinf$4@1!0&0#2| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::return_value___isinf$4@1!0&0#0| () (_ BitVec 32))
(declare-fun |goto_symex::guard@0!0&0#3| () Bool)
(declare-fun |c::math::__isinfl::ld@1!0&0#1| () (_ FloatingPoint 11 53))
(declare-fun |c::f00::$tmp::return_value___isinfl$5@1!0&0#1| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::return_value___isinfl$5@1!0&0#2| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::return_value___isinfl$5@1!0&0#0| () (_ BitVec 32))
(declare-fun |c::f00::$tmp::tmp$6@1!0&0#1| () Bool)
(declare-fun |execution_statet::__guard_exec@0!0| () Bool)
(assert (= |c::main::main::1::f@1!0&0#0| |c::main::f00::f@1!0&0#1|))
(assert (let ((a!1 (not (not (fp.gt ((_ to_fp 11 53)
                              roundNearestTiesToEven
                              |c::main::f00::f@1!0&0#1|)
                            (fp #b0 #b10001111110 #xfffffe0000000))))))
  (= a!1 |goto_symex::guard@0!0&0#1|)))
(assert (= (= #x00000004 #x00000004) |c::f00::$tmp::tmp$1@1!0&0#1|))
(assert (= |c::main::f00::f@1!0&0#1| |c::math::__isinff::f@1!0&0#1|))
(assert (= (ite (fp.isInfinite |c::math::__isinff::f@1!0&0#1|) #x00000001 #x00000000)
   |c::f00::$tmp::return_value___isinff$2@1!0&0#1|))
(assert (= (ite (not |c::f00::$tmp::tmp$1@1!0&0#1|)
        |c::f00::$tmp::return_value___isinff$2@1!0&0#0|
        |c::f00::$tmp::return_value___isinff$2@1!0&0#1|)
   |c::f00::$tmp::return_value___isinff$2@1!0&0#2|))
(assert (= (= #x00000004 #x00000008) |c::f00::$tmp::tmp$3@1!0&0#1|))
(assert (let ((a!1 (not (not (and (not |c::f00::$tmp::tmp$1@1!0&0#1|)
                          |c::f00::$tmp::tmp$3@1!0&0#1|)))))
  (= a!1 |goto_symex::guard@0!0&0#2|)))
(assert (= ((_ to_fp 11 53) roundNearestTiesToEven |c::main::f00::f@1!0&0#1|)
   |c::math::__isinf::d@1!0&0#1|))
(assert (= (ite (fp.isInfinite |c::math::__isinf::d@1!0&0#1|) #x00000001 #x00000000)
   |c::f00::$tmp::return_value___isinf$4@1!0&0#1|))
(assert (= (ite (not |goto_symex::guard@0!0&0#2|)
        |c::f00::$tmp::return_value___isinf$4@1!0&0#0|
        |c::f00::$tmp::return_value___isinf$4@1!0&0#1|)
   |c::f00::$tmp::return_value___isinf$4@1!0&0#2|))
(assert (let ((a!1 (not (not (and (not |c::f00::$tmp::tmp$1@1!0&0#1|)
                          (not |c::f00::$tmp::tmp$3@1!0&0#1|))))))
  (= a!1 |goto_symex::guard@0!0&0#3|)))
(assert (= ((_ to_fp 11 53) roundNearestTiesToEven |c::main::f00::f@1!0&0#1|)
   |c::math::__isinfl::ld@1!0&0#1|))
(assert (= (ite (fp.isInfinite |c::math::__isinfl::ld@1!0&0#1|) #x00000001 #x00000000)
   |c::f00::$tmp::return_value___isinfl$5@1!0&0#1|))
(assert (= (ite (not |goto_symex::guard@0!0&0#3|)
        |c::f00::$tmp::return_value___isinfl$5@1!0&0#0|
        |c::f00::$tmp::return_value___isinfl$5@1!0&0#1|)
   |c::f00::$tmp::return_value___isinfl$5@1!0&0#2|))
(assert (let ((a!1 (not (= (ite |c::f00::$tmp::tmp$1@1!0&0#1|
                        |c::f00::$tmp::return_value___isinff$2@1!0&0#2|
                        (ite |c::f00::$tmp::tmp$3@1!0&0#1|
                             |c::f00::$tmp::return_value___isinf$4@1!0&0#2|
                             |c::f00::$tmp::return_value___isinfl$5@1!0&0#2|))
                   #x00000000))))
  (= a!1 |c::f00::$tmp::tmp$6@1!0&0#1|)))
(assert (let ((a!1 (=> (and (not (not |goto_symex::guard@0!0&0#1|))
                    (not |c::f00::$tmp::tmp$6@1!0&0#1|))
               false)))
  (or (not (=> true (=> |execution_statet::__guard_exec@0!0| a!1))))))

(check-sat)
(exit)
