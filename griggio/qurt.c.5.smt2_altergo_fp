(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo real arithmetic *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

logic match_mode : fpa_rounding_mode, 'a, 'a, 'a, 'a, 'a -> 'a

axiom match_mode_NearestTiesToEven :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToEven, z, z1, z2, z3, z4) = z))

axiom match_mode_ToZero :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(ToZero, z, z1, z2, z3, z4) = z1))

axiom match_mode_Up :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Up, z, z1, z2, z3, z4) = z2))

axiom match_mode_Down :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Down, z, z1, z2, z3, z4) = z3))

axiom match_mode_NearestTiesToAway :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToAway, z, z1, z2, z3, z4) = z4))

type double

axiom add_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x + y) / z) = ((x / z) + (y / z)))))

axiom sub_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x - y) / z) = ((x / z) - (y / z)))))

axiom neg_div :
  (forall x:real. forall y:real. ((not (y = 0.0)) ->
  (((-x) / y) = (-(x / y)))))

axiom assoc_mul_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x * y) / z) = (x * (y / z)))))

axiom assoc_div_mul :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> (((x / y) / z) = (x / (y * z)))))

axiom assoc_div_div :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> ((x / (y / z)) = ((x * z) / y))))

axiom CompatOrderMult :
  (forall x:real. forall y:real. forall z:real. ((x <= y) -> ((0.0 <= z) ->
  ((x * z) <= (y * z)))))

axiom CompatOrderMult1 :
  (forall x:int. forall y:int. forall z:int. ((x <= y) -> ((0 <= z) ->
  ((x * z) <= (y * z)))))

axiom Monotonic :
  (forall x:int. forall y:int. ((x <= y) ->
  (real_of_int(x) <= real_of_int(y))))

logic truncate : real -> int

axiom Truncate_int : (forall i:int. (truncate(real_of_int(i)) = i))

axiom Truncate_down_pos :
  (forall x:real. ((0.0 <= x) -> (real_of_int(truncate(x)) <= x)))

axiom Truncate_down_pos1 :
  (forall x:real. ((0.0 <= x) -> (x <  real_of_int((truncate(x) + 1)))))

axiom Truncate_up_neg :
  (forall x:real. ((x <= 0.0) -> (real_of_int((truncate(x) - 1)) <  x)))

axiom Truncate_up_neg1 :
  (forall x:real. ((x <= 0.0) -> (x <= real_of_int(truncate(x)))))

axiom Real_of_truncate :
  (forall x:real. ((x - 1.0) <= real_of_int(truncate(x))))

axiom Real_of_truncate1 :
  (forall x:real. (real_of_int(truncate(x)) <= (x + 1.0)))

axiom Truncate_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (truncate(x) <= truncate(y))))

axiom Truncate_monotonic_int1 :
  (forall x:real. forall i:int. ((x <= real_of_int(i)) ->
  (truncate(x) <= i)))

axiom Truncate_monotonic_int2 :
  (forall x:real. forall i:int. ((real_of_int(i) <= x) ->
  (i <= truncate(x))))

axiom Floor_int : (forall i:int. (int_floor(real_of_int(i)) = i))

axiom Ceil_int : (forall i:int. (int_ceil(real_of_int(i)) = i))

axiom Floor_down : (forall x:real. (real_of_int(int_floor(x)) <= x))

axiom Floor_down1 : (forall x:real. (x <  real_of_int((int_floor(x) + 1))))

axiom Ceil_up : (forall x:real. (real_of_int((int_ceil(x) - 1)) <  x))

axiom Ceil_up1 : (forall x:real. (x <= real_of_int(int_ceil(x))))

axiom Floor_monotonic :
  (forall x:real. forall y:real. ((x <= y) ->
  (int_floor(x) <= int_floor(y))))

axiom Ceil_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (int_ceil(x) <= int_ceil(y))))

function sqr(x: real) : real = (x * x)

axiom Sqrt_positive : (forall x:real. ((0.0 <= x) -> (0.0 <= sqrt_real(x))))

axiom Sqrt_square : (forall x:real. ((0.0 <= x) -> (sqr(sqrt_real(x)) = x)))

axiom Square_sqrt : (forall x:real. ((0.0 <= x) -> (sqrt_real((x * x)) = x)))

axiom Sqrt_mul :
  (forall x:real. forall y:real. (((0.0 <= x) and (0.0 <= y)) ->
  (sqrt_real((x * y)) = (sqrt_real(x) * sqrt_real(y)))))

axiom Sqrt_le :
  (forall x:real. forall y:real. (((0.0 <= x) and (x <= y)) ->
  (sqrt_real(x) <= sqrt_real(y))))

type class = Finite | Infinite | NaN

logic match_class : class, 'a, 'a, 'a -> 'a

axiom match_class_Finite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Finite, z, z1,
  z2) = z))

axiom match_class_Infinite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Infinite, z, z1,
  z2) = z1))

axiom match_class_NaN :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(NaN, z, z1,
  z2) = z2))

type sign = Neg | Pos

logic match_sign : sign, 'a, 'a -> 'a

axiom match_sign_Neg :
  (forall z:'a. forall z1:'a. (match_sign(Neg, z, z1) = z))

axiom match_sign_Pos :
  (forall z:'a. forall z1:'a. (match_sign(Pos, z, z1) = z1))

logic same_sign_real : sign, real -> prop

axiom Neg_case : (forall x:real. ((x <  0.0) -> same_sign_real(Neg, x)))

axiom Pos_case : (forall x:real. ((0.0 <  x) -> same_sign_real(Pos, x)))

axiom same_sign_real_inversion :
  (forall z:sign. forall z1:real. (same_sign_real(z, z1) -> (((z1 <  0.0) and
  (z = Neg)) or ((0.0 <  z1) and (z = Pos)))))

axiom same_sign_real_zero1 : (forall b:sign. (not same_sign_real(b, 0.0)))

axiom same_sign_real_zero2 :
  (forall x:real. (not (same_sign_real(Neg, x) and same_sign_real(Pos, x))))

axiom same_sign_real_zero3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> (not (x = 0.0))))

axiom same_sign_real_correct2 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((x <  0.0) ->
  (b = Neg))))

axiom same_sign_real_correct21 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Neg) ->
  (x <  0.0))))

axiom same_sign_real_correct3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((0.0 <  x) ->
  (b = Pos))))

axiom same_sign_real_correct31 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Pos) ->
  (0.0 <  x))))

axiom Abs_le :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> ((-y) <= x)))

axiom Abs_le1 :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> (x <= y)))

axiom Abs_le2 :
  (forall x:real. forall y:real. ((((-y) <= x) and (x <= y)) ->
  (abs_real(x) <= y)))

axiom Abs_pos : (forall x:real. (0.0 <= abs_real(x)))

axiom Abs_sum :
  (forall x:real. forall y:real.
  (abs_real((x + y)) <= (abs_real(x) + abs_real(y))))

axiom Abs_prod :
  (forall x:real. forall y:real.
  (abs_real((x * y)) = (abs_real(x) * abs_real(y))))

axiom triangular_inequality :
  (forall x:real. forall y:real. forall z:real.
  (abs_real((x - z)) <= (abs_real((x - y)) + abs_real((y - z)))))

logic value : double -> real

predicate no_overflow(m: fpa_rounding_mode, x: real) =
  (abs_real(float64(m, x)) <= 0x1.FFFFFFFFFFFFFp1023)

axiom Bounded_real_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> no_overflow(m, x)))

axiom Round_value :
  (forall m:fpa_rounding_mode. forall x:double.
  (float64(m, value(x)) = value(x)))

axiom Bounded_value :
  (forall x:double. (abs_real(value(x)) <= 0x1.FFFFFFFFFFFFFp1023))

axiom Exact_rounding_for_integers :
  (forall m:fpa_rounding_mode. forall i:int. ((((-9007199254740992) <= i) and
  (i <= 9007199254740992)) -> (float64(m, real_of_int(i)) = real_of_int(i))))

axiom Round_down_le : (forall x:real. (float64(Down, x) <= x))

axiom Round_up_ge : (forall x:real. (x <= float64(Up, x)))

axiom Round_down_neg :
  (forall x:real. (float64(Down, (-x)) = (-float64(Up, x))))

axiom Round_up_neg :
  (forall x:real. (float64(Up, (-x)) = (-float64(Down, x))))

logic round_logic : fpa_rounding_mode, real -> double

axiom Round_logic_def :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float64(m, x))))

logic class1 : double -> class

predicate is_finite(x: double) = (class1(x) = Finite)

predicate is_infinite(x: double) = (class1(x) = Infinite)

predicate is_NaN(x: double) = (class1(x) = NaN)

predicate is_not_NaN(x: double) = (is_finite(x) or is_infinite(x))

axiom is_not_NaN1 : (forall x:double. (is_not_NaN(x) -> (not is_NaN(x))))

axiom is_not_NaN2 : (forall x:double. ((not is_NaN(x)) -> is_not_NaN(x)))

logic sign1 : double -> sign

predicate same_sign_real1(x: double, y: real) = same_sign_real(sign1(x), y)

predicate same_sign(x: double, y: double) = (sign1(x) = sign1(y))

predicate diff_sign(x: double, y: double) = (not (sign1(x) = sign1(y)))

predicate sign_zero_result(m: fpa_rounding_mode, x: double) =
  ((value(x) = 0.0) -> ((((((m = NearestTiesToEven) -> (sign1(x) = Pos)) and
  ((m = ToZero) -> (sign1(x) = Pos))) and ((m = Up) -> (sign1(x) = Pos))) and
  ((m = Down) -> (sign1(x) = Neg))) and ((m = NearestTiesToAway) ->
  (sign1(x) = Pos))))

predicate is_minus_infinity(x: double) = (is_infinite(x) and
  (sign1(x) = Neg))

predicate is_plus_infinity(x: double) = (is_infinite(x) and (sign1(x) = Pos))

predicate is_gen_zero(x: double) = (is_finite(x) and (value(x) = 0.0))

predicate is_gen_zero_plus(x: double) = (is_gen_zero(x) and (sign1(x) = Pos))

predicate is_gen_zero_minus(x: double) = (is_gen_zero(x) and
  (sign1(x) = Neg))

axiom finite_sign :
  (forall x:double. (((class1(x) = Finite) and (not (value(x) = 0.0))) ->
  same_sign_real1(x, value(x))))

axiom finite_sign_pos1 :
  (forall x:double. (((class1(x) = Finite) and (0.0 <  value(x))) ->
  (sign1(x) = Pos)))

axiom finite_sign_pos2 :
  (forall x:double. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Pos))) -> (0.0 <  value(x))))

axiom finite_sign_neg1 :
  (forall x:double. (((class1(x) = Finite) and (value(x) <  0.0)) ->
  (sign1(x) = Neg)))

axiom finite_sign_neg2 :
  (forall x:double. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Neg))) -> (value(x) <  0.0)))

axiom diff_sign_trans :
  (forall x:double. forall y:double. forall z:double. ((diff_sign(x, y) and
  diff_sign(y, z)) -> same_sign(x, z)))

axiom diff_sign_product :
  (forall x:double. forall y:double. (((class1(x) = Finite) and
  ((class1(y) = Finite) and ((value(x) * value(y)) <  0.0))) -> diff_sign(x,
  y)))

axiom same_sign_product :
  (forall x:double. forall y:double. (((class1(x) = Finite) and
  ((class1(y) = Finite) and same_sign(x, y))) ->
  (0.0 <= (value(x) * value(y)))))

predicate overflow_value(m: fpa_rounding_mode, x: double) =
  (((sign1(x) = Neg) -> ((((((m = NearestTiesToEven) -> is_infinite(x)) and
  ((m = ToZero) -> (is_finite(x) and
  (value(x) = (-0x1.FFFFFFFFFFFFFp1023))))) and ((m = Up) ->
  (is_finite(x) and (value(x) = (-0x1.FFFFFFFFFFFFFp1023))))) and
  ((m = Down) -> is_infinite(x))) and ((m = NearestTiesToAway) ->
  is_infinite(x)))) and ((sign1(x) = Pos) -> ((((((m = NearestTiesToEven) ->
  is_infinite(x)) and ((m = ToZero) -> (is_finite(x) and
  (value(x) = 0x1.FFFFFFFFFFFFFp1023)))) and ((m = Up) ->
  is_infinite(x))) and ((m = Down) -> (is_finite(x) and
  (value(x) = 0x1.FFFFFFFFFFFFFp1023)))) and ((m = NearestTiesToAway) ->
  is_infinite(x)))))

axiom round1 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  is_finite(round_logic(m, x))))

axiom round11 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float64(m, x))))

axiom round2 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  same_sign_real1(round_logic(m, x), x)))

axiom round21 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  overflow_value(m, round_logic(m, x))))

axiom round_of_zero :
  (forall m:fpa_rounding_mode. is_gen_zero(round_logic(m, 0.0)))

axiom round_logic_le :
  (forall m:fpa_rounding_mode. forall x:real. (is_finite(round_logic(m,
  x)) -> (abs_real(value(round_logic(m, x))) <= 0x1.FFFFFFFFFFFFFp1023)))

axiom round_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> is_finite(round_logic(m, x))))

axiom round_no_overflow1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> (value(round_logic(m,
  x)) = float64(m, x))))

logic min : real

axiom positive_constant :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> is_finite(round_logic(m, x))))

axiom positive_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> (0.0 <  value(round_logic(m, x)))))

axiom positive_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> (sign1(round_logic(m, x)) = Pos)))

axiom negative_constant :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min))) ->
  is_finite(round_logic(m, x))))

axiom negative_constant1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min))) ->
  (value(round_logic(m, x)) <  0.0)))

axiom negative_constant2 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min))) ->
  (sign1(round_logic(m, x)) = Neg)))

axiom is_gen_zero_comp1 :
  (forall x:double. forall y:double. ((is_gen_zero(x) and
  ((value(x) = value(y)) and is_finite(y))) -> is_gen_zero(y)))

axiom is_gen_zero_comp2 :
  (forall x:double. forall y:double. ((is_finite(x) and
  ((not is_gen_zero(x)) and (value(x) = value(y)))) -> (not is_gen_zero(y))))

predicate add_post(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and same_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((same_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not same_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) + value(y))))) -> (is_finite(r) and
  ((value(r) = float64(m, (value(x) + value(y)))) and ((same_sign(x, y) ->
  same_sign(r, x)) and ((not same_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) + value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) + value(y))) and overflow_value(m, r))))))))

predicate sub_post(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and diff_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((diff_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not diff_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) - value(y))))) -> (is_finite(r) and
  ((value(r) = float64(m, (value(x) - value(y)))) and ((diff_sign(x, y) ->
  same_sign(r, x)) and ((not diff_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) - value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) - value(y))) and overflow_value(m, r))))))))

predicate product_sign(z: double, x: double, y: double) = ((same_sign(x,
  y) -> (sign1(z) = Pos)) and (diff_sign(x, y) -> (sign1(z) = Neg)))

predicate mul_post(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_gen_zero(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_infinite(y) and
  (not (value(x) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_gen_zero(y)) -> is_NaN(r)) and (((is_infinite(x) and (is_finite(y) and
  (not (value(y) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_infinite(r)) and (((is_finite(x) and
  (is_finite(y) and no_overflow(m, (value(x) * value(y))))) ->
  (is_finite(r) and (value(r) = float64(m, (value(x) * value(y)))))) and
  (((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) * value(y)))))) -> overflow_value(m, r)) and ((not is_NaN(r)) ->
  product_sign(r, x, y))))))))))

predicate neg_post(x: double, r: double) = ((is_NaN(x) -> is_NaN(r)) and
  ((is_infinite(x) -> is_infinite(r)) and ((is_finite(x) -> (is_finite(r) and
  (value(r) = (-value(x))))) and ((not is_NaN(x)) -> diff_sign(r, x)))))

predicate div_post(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> is_gen_zero(r)) and (((is_infinite(x) and
  is_finite(y)) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_finite(y) and
  ((not (value(y) = 0.0)) and no_overflow(m, (value(x) / value(y)))))) ->
  (is_finite(r) and (value(r) = float64(m, (value(x) / value(y)))))) and
  (((is_finite(x) and (is_finite(y) and ((not (value(y) = 0.0)) and
  (not no_overflow(m, (value(x) / value(y))))))) -> overflow_value(m, r)) and
  (((is_finite(x) and (is_gen_zero(y) and (not (value(x) = 0.0)))) ->
  is_infinite(r)) and (((is_gen_zero(x) and is_gen_zero(y)) -> is_NaN(r)) and
  ((not is_NaN(r)) -> product_sign(r, x, y))))))))))

predicate fma_post(m: fpa_rounding_mode, x: double, y: double, z: double,
  r: double) = (((is_NaN(x) or (is_NaN(y) or is_NaN(z))) -> is_NaN(r)) and
  (((is_gen_zero(x) and is_infinite(y)) -> is_NaN(r)) and
  (((is_infinite(x) and is_gen_zero(y)) -> is_NaN(r)) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_infinite(y) and is_finite(z))) -> (is_infinite(r) and product_sign(r,
  x, y))) and (((is_finite(x) and (is_finite(y) and is_infinite(z))) ->
  (is_infinite(r) and same_sign(r, z))) and (((is_infinite(x) and
  (is_infinite(y) and is_infinite(z))) -> ((product_sign(z, x, y) ->
  (is_infinite(r) and same_sign(r, z))) and ((not product_sign(z, x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and (is_finite(z) and
  no_overflow(m, ((value(x) * value(y)) + value(z)))))) -> (is_finite(r) and
  ((value(r) = float64(m, ((value(x) * value(y)) + value(z)))) and
  ((product_sign(z, x, y) -> same_sign(r, z)) and ((not product_sign(z, x,
  y)) -> ((((value(x) * value(y)) + value(z)) = 0.0) -> (((m = Down) ->
  (sign1(r) = Neg)) and ((not (m = Down)) -> (sign1(r) = Pos))))))))) and
  ((is_finite(x) and (is_finite(y) and (is_finite(z) and (not no_overflow(m,
  ((value(x) * value(y)) + value(z))))))) -> (same_sign_real(sign1(r),
  ((value(x) * value(y)) + value(z))) and overflow_value(m, r))))))))))))))

predicate sqrt_post(m: fpa_rounding_mode, x: double, r: double) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_plus_infinity(x) ->
  is_plus_infinity(r)) and ((is_minus_infinity(x) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) <  0.0)) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) = 0.0)) -> (is_finite(r) and
  ((value(r) = 0.0) and same_sign(r, x)))) and ((is_finite(x) and
  (0.0 <  value(x))) -> (is_finite(r) and
  ((value(r) = float64(m, sqrt_real(value(x)))) and (sign1(r) = Pos)))))))))

predicate roundToIntegral_post(m: fpa_rounding_mode, x: double, r: double) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_infinite(x) -> (is_infinite(r) and
  same_sign(x, r))) and (is_finite(x) -> (same_sign(x, r) and
  (value(r) = real_of_int(integer_round(m, value(x))))))))

predicate of_real_exact_post(x: real, r: double) = (is_finite(r) and
  (value(r) = x))

predicate le(x: double, y: double) = ((is_finite(x) and (is_finite(y) and
  (value(x) <= value(y)))) or ((is_minus_infinity(x) and is_not_NaN(y)) or
  (is_not_NaN(x) and is_plus_infinity(y))))

predicate lt(x: double, y: double) = ((is_finite(x) and (is_finite(y) and
  (value(x) <  value(y)))) or ((is_minus_infinity(x) and (is_not_NaN(y) and
  (not is_minus_infinity(y)))) or (is_not_NaN(x) and
  ((not is_plus_infinity(x)) and is_plus_infinity(y)))))

predicate eq(x: double, y: double) = ((is_finite(x) and (is_finite(y) and
  (value(x) = value(y)))) or (is_infinite(x) and (is_infinite(y) and
  same_sign(x, y))))

predicate ne(x: double, y: double) = (not eq(x, y))

predicate rem_post(x: double, y: double, r: double) = (((is_NaN(x) or
  (is_NaN(y) or (is_infinite(x) or is_gen_zero(y)))) -> is_NaN(r)) and
  ((not (is_NaN(x) or (is_NaN(y) or (is_infinite(x) or is_gen_zero(y))))) ->
  ((is_infinite(y) -> eq(x, r)) and ((not is_infinite(y)) ->
  (is_finite(r) and (((value(r) = 0.0) -> same_sign(x, r)) and
  (value(r) = (value(x) - (value(y) * real_of_int(integer_round(NearestTiesToEven, (value(x) / value(y)))))))))))))

axiom le_lt_trans :
  (forall x:double. forall y:double. forall z:double. ((le(x, y) and lt(y,
  z)) -> lt(x, z)))

axiom lt_le_trans :
  (forall x:double. forall y:double. forall z:double. ((lt(x, y) and le(y,
  z)) -> lt(x, z)))

axiom le_ge_asym :
  (forall x:double. forall y:double. ((le(x, y) and le(y, x)) -> eq(x, y)))

axiom not_lt_ge :
  (forall x:double. forall y:double. (((not lt(x, y)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(y, x)))

axiom not_gt_le :
  (forall x:double. forall y:double. (((not lt(y, x)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(x, y)))

predicate smt2_double_eq(x: double, y: double) = (((is_finite(x) and
  (is_finite(y) and ((value(x) = value(y)) and same_sign(x, y)))) or
  (is_infinite(x) and (is_infinite(y) and same_sign(x, y)))) or
  (is_NaN(x) and is_NaN(y)))

logic b1116 : double

logic b1111 : double

logic b1398 : double

logic b192 : double

logic b1208 : double

logic b1367 : double

logic b1142 : double

logic b1403 : double

logic b1300 : double

logic b1270 : double

logic b1275 : double

logic b1336 : double

logic b553 : double

logic b1172 : double

logic b238 : double

logic b1239 : double

logic b1218 : double

logic b1346 : double

logic b235 : double

logic b1147 : double

logic b1428 : double

logic b1228 : double

logic b1474 : double

logic b1100 : double

logic b226 : double

logic b1372 : double

logic b1356 : double

logic b1464 : double

logic b1244 : double

logic b204 : double

logic d_mul__t_3__t_9__t_10 : double

axiom eq_0 : mul_post(NearestTiesToEven, b1100, b226, d_mul__t_3__t_9__t_10)

logic ust_11 : double

axiom eq_1 : mul_post(NearestTiesToEven, b1100, b226, ust_11)

logic d_mul__t_3__t_9__t_9 : double

axiom eq_2 : mul_post(NearestTiesToEven, b1100, b1100, d_mul__t_3__t_9__t_9)

logic ust_12 : double

axiom eq_3 : mul_post(NearestTiesToEven, b1100, b1100, ust_12)

logic d_neg__t_12 : double

axiom eq_4 : neg_post(ust_12, d_neg__t_12)

logic ust_13 : double

axiom eq_5 : neg_post(ust_12, ust_13)

logic d_add__t_3__t_13__t_14 : double

axiom eq_6 : add_post(NearestTiesToEven, ust_13, b553,
  d_add__t_3__t_13__t_14)

logic ust_15 : double

axiom eq_7 : add_post(NearestTiesToEven, ust_13, b553, ust_15)

logic d_div__t_3__t_15__t_11 : double

axiom eq_8 : div_post(NearestTiesToEven, ust_15, ust_11,
  d_div__t_3__t_15__t_11)

logic ust_16 : double

axiom eq_9 : div_post(NearestTiesToEven, ust_15, ust_11, ust_16)

logic d_add__t_3__t_9__t_16 : double

axiom eq_10 : add_post(NearestTiesToEven, b1100, ust_16,
  d_add__t_3__t_9__t_16)

logic ust_17 : double

axiom eq_11 : add_post(NearestTiesToEven, b1100, ust_16, ust_17)

logic d_mul__t_3__t_17__t_17 : double

axiom eq_12 : mul_post(NearestTiesToEven, ust_17, ust_17,
  d_mul__t_3__t_17__t_17)

logic ust_18 : double

axiom eq_13 : mul_post(NearestTiesToEven, ust_17, ust_17, ust_18)

logic d_neg__t_18 : double

axiom eq_14 : neg_post(ust_18, d_neg__t_18)

logic ust_19 : double

axiom eq_15 : neg_post(ust_18, ust_19)

logic d_add__t_3__t_14__t_19 : double

axiom eq_16 : add_post(NearestTiesToEven, b553, ust_19,
  d_add__t_3__t_14__t_19)

logic ust_20 : double

axiom eq_17 : add_post(NearestTiesToEven, b553, ust_19, ust_20)

predicate ust_23() = (not smt2_double_eq(ust_20, b1111))

logic d_mul__t_3__t_10__t_24 : double

axiom eq_18 : mul_post(NearestTiesToEven, b226, b1116,
  d_mul__t_3__t_10__t_24)

logic ust_25 : double

axiom eq_19 : mul_post(NearestTiesToEven, b226, b1116, ust_25)

logic d_mul__t_3__t_24__t_24 : double

axiom eq_20 : mul_post(NearestTiesToEven, b1116, b1116,
  d_mul__t_3__t_24__t_24)

logic ust_26 : double

axiom eq_21 : mul_post(NearestTiesToEven, b1116, b1116, ust_26)

logic d_neg__t_26 : double

axiom eq_22 : neg_post(ust_26, d_neg__t_26)

logic ust_27 : double

axiom eq_23 : neg_post(ust_26, ust_27)

logic d_add__t_3__t_14__t_27 : double

axiom eq_24 : add_post(NearestTiesToEven, b553, ust_27,
  d_add__t_3__t_14__t_27)

logic ust_28 : double

axiom eq_25 : add_post(NearestTiesToEven, b553, ust_27, ust_28)

logic d_div__t_3__t_28__t_25 : double

axiom eq_26 : div_post(NearestTiesToEven, ust_28, ust_25,
  d_div__t_3__t_28__t_25)

logic ust_29 : double

axiom eq_27 : div_post(NearestTiesToEven, ust_28, ust_25, ust_29)

logic d_add__t_3__t_24__t_29 : double

axiom eq_28 : add_post(NearestTiesToEven, b1116, ust_29,
  d_add__t_3__t_24__t_29)

logic ust_30 : double

axiom eq_29 : add_post(NearestTiesToEven, b1116, ust_29, ust_30)

predicate ust_32() = (not smt2_double_eq(b1100, ust_30))

logic d_mul__t_3__t_30__t_30 : double

axiom eq_30 : mul_post(NearestTiesToEven, ust_30, ust_30,
  d_mul__t_3__t_30__t_30)

logic ust_33 : double

axiom eq_31 : mul_post(NearestTiesToEven, ust_30, ust_30, ust_33)

logic d_neg__t_33 : double

axiom eq_32 : neg_post(ust_33, d_neg__t_33)

logic ust_34 : double

axiom eq_33 : neg_post(ust_33, ust_34)

logic d_add__t_3__t_14__t_34 : double

axiom eq_34 : add_post(NearestTiesToEven, b553, ust_34,
  d_add__t_3__t_14__t_34)

logic ust_35 : double

axiom eq_35 : add_post(NearestTiesToEven, b553, ust_34, ust_35)

predicate ust_38() = (not smt2_double_eq(ust_35, b1142))

logic d_mul__t_3__t_10__t_39 : double

axiom eq_36 : mul_post(NearestTiesToEven, b226, b1147,
  d_mul__t_3__t_10__t_39)

logic ust_40 : double

axiom eq_37 : mul_post(NearestTiesToEven, b226, b1147, ust_40)

logic d_mul__t_3__t_39__t_39 : double

axiom eq_38 : mul_post(NearestTiesToEven, b1147, b1147,
  d_mul__t_3__t_39__t_39)

logic ust_41 : double

axiom eq_39 : mul_post(NearestTiesToEven, b1147, b1147, ust_41)

logic d_neg__t_41 : double

axiom eq_40 : neg_post(ust_41, d_neg__t_41)

logic ust_42 : double

axiom eq_41 : neg_post(ust_41, ust_42)

logic d_add__t_3__t_14__t_42 : double

axiom eq_42 : add_post(NearestTiesToEven, b553, ust_42,
  d_add__t_3__t_14__t_42)

logic ust_43 : double

axiom eq_43 : add_post(NearestTiesToEven, b553, ust_42, ust_43)

logic d_div__t_3__t_43__t_40 : double

axiom eq_44 : div_post(NearestTiesToEven, ust_43, ust_40,
  d_div__t_3__t_43__t_40)

logic ust_44 : double

axiom eq_45 : div_post(NearestTiesToEven, ust_43, ust_40, ust_44)

logic d_add__t_3__t_39__t_44 : double

axiom eq_46 : add_post(NearestTiesToEven, b1147, ust_44,
  d_add__t_3__t_39__t_44)

logic ust_45 : double

axiom eq_47 : add_post(NearestTiesToEven, b1147, ust_44, ust_45)

predicate ust_47() = (not smt2_double_eq(b1116, ust_45))

logic d_mul__t_3__t_45__t_45 : double

axiom eq_48 : mul_post(NearestTiesToEven, ust_45, ust_45,
  d_mul__t_3__t_45__t_45)

logic ust_48 : double

axiom eq_49 : mul_post(NearestTiesToEven, ust_45, ust_45, ust_48)

logic d_neg__t_48 : double

axiom eq_50 : neg_post(ust_48, d_neg__t_48)

logic ust_49 : double

axiom eq_51 : neg_post(ust_48, ust_49)

logic d_add__t_3__t_14__t_49 : double

axiom eq_52 : add_post(NearestTiesToEven, b553, ust_49,
  d_add__t_3__t_14__t_49)

logic ust_50 : double

axiom eq_53 : add_post(NearestTiesToEven, b553, ust_49, ust_50)

predicate ust_53() = (not smt2_double_eq(ust_50, b1172))

logic d_div__t_3__t_14__t_54 : double

axiom eq_54 : div_post(NearestTiesToEven, b553, b235, d_div__t_3__t_14__t_54)

logic ust_55 : double

axiom eq_55 : div_post(NearestTiesToEven, b553, b235, ust_55)

logic d_mul__t_3__t_10__t_55 : double

axiom eq_56 : mul_post(NearestTiesToEven, b226, ust_55,
  d_mul__t_3__t_10__t_55)

logic ust_56 : double

axiom eq_57 : mul_post(NearestTiesToEven, b226, ust_55, ust_56)

logic d_mul__t_3__t_55__t_55 : double

axiom eq_58 : mul_post(NearestTiesToEven, ust_55, ust_55,
  d_mul__t_3__t_55__t_55)

logic ust_57 : double

axiom eq_59 : mul_post(NearestTiesToEven, ust_55, ust_55, ust_57)

logic d_neg__t_57 : double

axiom eq_60 : neg_post(ust_57, d_neg__t_57)

logic ust_58 : double

axiom eq_61 : neg_post(ust_57, ust_58)

logic d_add__t_3__t_14__t_58 : double

axiom eq_62 : add_post(NearestTiesToEven, b553, ust_58,
  d_add__t_3__t_14__t_58)

logic ust_59 : double

axiom eq_63 : add_post(NearestTiesToEven, b553, ust_58, ust_59)

logic d_div__t_3__t_59__t_56 : double

axiom eq_64 : div_post(NearestTiesToEven, ust_59, ust_56,
  d_div__t_3__t_59__t_56)

logic ust_60 : double

axiom eq_65 : div_post(NearestTiesToEven, ust_59, ust_56, ust_60)

logic d_add__t_3__t_55__t_60 : double

axiom eq_66 : add_post(NearestTiesToEven, ust_55, ust_60,
  d_add__t_3__t_55__t_60)

logic ust_61 : double

axiom eq_67 : add_post(NearestTiesToEven, ust_55, ust_60, ust_61)

predicate ust_63() = (not smt2_double_eq(b1147, ust_61))

logic d_mul__t_3__t_10__t_61 : double

axiom eq_68 : mul_post(NearestTiesToEven, b226, ust_61,
  d_mul__t_3__t_10__t_61)

logic ust_64 : double

axiom eq_69 : mul_post(NearestTiesToEven, b226, ust_61, ust_64)

logic d_mul__t_3__t_61__t_61 : double

axiom eq_70 : mul_post(NearestTiesToEven, ust_61, ust_61,
  d_mul__t_3__t_61__t_61)

logic ust_65 : double

axiom eq_71 : mul_post(NearestTiesToEven, ust_61, ust_61, ust_65)

logic d_neg__t_65 : double

axiom eq_72 : neg_post(ust_65, d_neg__t_65)

logic ust_66 : double

axiom eq_73 : neg_post(ust_65, ust_66)

logic d_add__t_3__t_14__t_66 : double

axiom eq_74 : add_post(NearestTiesToEven, b553, ust_66,
  d_add__t_3__t_14__t_66)

logic ust_67 : double

axiom eq_75 : add_post(NearestTiesToEven, b553, ust_66, ust_67)

logic d_div__t_3__t_67__t_64 : double

axiom eq_76 : div_post(NearestTiesToEven, ust_67, ust_64,
  d_div__t_3__t_67__t_64)

logic ust_68 : double

axiom eq_77 : div_post(NearestTiesToEven, ust_67, ust_64, ust_68)

logic d_add__t_3__t_61__t_68 : double

axiom eq_78 : add_post(NearestTiesToEven, ust_61, ust_68,
  d_add__t_3__t_61__t_68)

logic ust_69 : double

axiom eq_79 : add_post(NearestTiesToEven, ust_61, ust_68, ust_69)

logic d_mul__t_3__t_69__t_69 : double

axiom eq_80 : mul_post(NearestTiesToEven, ust_69, ust_69,
  d_mul__t_3__t_69__t_69)

logic ust_70 : double

axiom eq_81 : mul_post(NearestTiesToEven, ust_69, ust_69, ust_70)

logic d_neg__t_70 : double

axiom eq_82 : neg_post(ust_70, d_neg__t_70)

logic ust_71 : double

axiom eq_83 : neg_post(ust_70, ust_71)

logic d_add__t_3__t_14__t_71 : double

axiom eq_84 : add_post(NearestTiesToEven, b553, ust_71,
  d_add__t_3__t_14__t_71)

logic ust_72 : double

axiom eq_85 : add_post(NearestTiesToEven, b553, ust_71, ust_72)

predicate ust_75() = (not smt2_double_eq(ust_72, b1208))

predicate ust_78() = (not smt2_double_eq(ust_67, b1218))

logic d_mul__t_3__t_10__t_79 : double

axiom eq_86 : mul_post(NearestTiesToEven, b226, b1228,
  d_mul__t_3__t_10__t_79)

logic ust_80 : double

axiom eq_87 : mul_post(NearestTiesToEven, b226, b1228, ust_80)

logic d_mul__t_3__t_79__t_79 : double

axiom eq_88 : mul_post(NearestTiesToEven, b1228, b1228,
  d_mul__t_3__t_79__t_79)

logic ust_81 : double

axiom eq_89 : mul_post(NearestTiesToEven, b1228, b1228, ust_81)

logic d_neg__t_81 : double

axiom eq_90 : neg_post(ust_81, d_neg__t_81)

logic ust_82 : double

axiom eq_91 : neg_post(ust_81, ust_82)

logic d_add__t_3__t_82__t_83 : double

axiom eq_92 : add_post(NearestTiesToEven, ust_82, b192,
  d_add__t_3__t_82__t_83)

logic ust_84 : double

axiom eq_93 : add_post(NearestTiesToEven, ust_82, b192, ust_84)

logic d_div__t_3__t_84__t_80 : double

axiom eq_94 : div_post(NearestTiesToEven, ust_84, ust_80,
  d_div__t_3__t_84__t_80)

logic ust_85 : double

axiom eq_95 : div_post(NearestTiesToEven, ust_84, ust_80, ust_85)

logic d_add__t_3__t_79__t_85 : double

axiom eq_96 : add_post(NearestTiesToEven, b1228, ust_85,
  d_add__t_3__t_79__t_85)

logic ust_86 : double

axiom eq_97 : add_post(NearestTiesToEven, b1228, ust_85, ust_86)

logic d_mul__t_3__t_86__t_86 : double

axiom eq_98 : mul_post(NearestTiesToEven, ust_86, ust_86,
  d_mul__t_3__t_86__t_86)

logic ust_87 : double

axiom eq_99 : mul_post(NearestTiesToEven, ust_86, ust_86, ust_87)

logic d_neg__t_87 : double

axiom eq_100 : neg_post(ust_87, d_neg__t_87)

logic ust_88 : double

axiom eq_101 : neg_post(ust_87, ust_88)

logic d_add__t_3__t_83__t_88 : double

axiom eq_102 : add_post(NearestTiesToEven, b192, ust_88,
  d_add__t_3__t_83__t_88)

logic ust_89 : double

axiom eq_103 : add_post(NearestTiesToEven, b192, ust_88, ust_89)

predicate ust_92() = (not smt2_double_eq(ust_89, b1239))

logic d_mul__t_3__t_10__t_93 : double

axiom eq_104 : mul_post(NearestTiesToEven, b226, b1244,
  d_mul__t_3__t_10__t_93)

logic ust_94 : double

axiom eq_105 : mul_post(NearestTiesToEven, b226, b1244, ust_94)

logic d_mul__t_3__t_93__t_93 : double

axiom eq_106 : mul_post(NearestTiesToEven, b1244, b1244,
  d_mul__t_3__t_93__t_93)

logic ust_95 : double

axiom eq_107 : mul_post(NearestTiesToEven, b1244, b1244, ust_95)

logic d_neg__t_95 : double

axiom eq_108 : neg_post(ust_95, d_neg__t_95)

logic ust_96 : double

axiom eq_109 : neg_post(ust_95, ust_96)

logic d_add__t_3__t_83__t_96 : double

axiom eq_110 : add_post(NearestTiesToEven, b192, ust_96,
  d_add__t_3__t_83__t_96)

logic ust_97 : double

axiom eq_111 : add_post(NearestTiesToEven, b192, ust_96, ust_97)

logic d_div__t_3__t_97__t_94 : double

axiom eq_112 : div_post(NearestTiesToEven, ust_97, ust_94,
  d_div__t_3__t_97__t_94)

logic ust_98 : double

axiom eq_113 : div_post(NearestTiesToEven, ust_97, ust_94, ust_98)

logic d_add__t_3__t_93__t_98 : double

axiom eq_114 : add_post(NearestTiesToEven, b1244, ust_98,
  d_add__t_3__t_93__t_98)

logic ust_99 : double

axiom eq_115 : add_post(NearestTiesToEven, b1244, ust_98, ust_99)

predicate ust_101() = (not smt2_double_eq(b1228, ust_99))

logic d_mul__t_3__t_99__t_99 : double

axiom eq_116 : mul_post(NearestTiesToEven, ust_99, ust_99,
  d_mul__t_3__t_99__t_99)

logic ust_102 : double

axiom eq_117 : mul_post(NearestTiesToEven, ust_99, ust_99, ust_102)

logic d_neg__t_102 : double

axiom eq_118 : neg_post(ust_102, d_neg__t_102)

logic ust_103 : double

axiom eq_119 : neg_post(ust_102, ust_103)

logic d_add__t_3__t_83__t_103 : double

axiom eq_120 : add_post(NearestTiesToEven, b192, ust_103,
  d_add__t_3__t_83__t_103)

logic ust_104 : double

axiom eq_121 : add_post(NearestTiesToEven, b192, ust_103, ust_104)

predicate ust_107() = (not smt2_double_eq(ust_104, b1270))

logic d_mul__t_3__t_10__t_108 : double

axiom eq_122 : mul_post(NearestTiesToEven, b226, b1275,
  d_mul__t_3__t_10__t_108)

logic ust_109 : double

axiom eq_123 : mul_post(NearestTiesToEven, b226, b1275, ust_109)

logic d_mul__t_3__t_108__t_108 : double

axiom eq_124 : mul_post(NearestTiesToEven, b1275, b1275,
  d_mul__t_3__t_108__t_108)

logic ust_110 : double

axiom eq_125 : mul_post(NearestTiesToEven, b1275, b1275, ust_110)

logic d_neg__t_110 : double

axiom eq_126 : neg_post(ust_110, d_neg__t_110)

logic ust_111 : double

axiom eq_127 : neg_post(ust_110, ust_111)

logic d_add__t_3__t_83__t_111 : double

axiom eq_128 : add_post(NearestTiesToEven, b192, ust_111,
  d_add__t_3__t_83__t_111)

logic ust_112 : double

axiom eq_129 : add_post(NearestTiesToEven, b192, ust_111, ust_112)

logic d_div__t_3__t_112__t_109 : double

axiom eq_130 : div_post(NearestTiesToEven, ust_112, ust_109,
  d_div__t_3__t_112__t_109)

logic ust_113 : double

axiom eq_131 : div_post(NearestTiesToEven, ust_112, ust_109, ust_113)

logic d_add__t_3__t_108__t_113 : double

axiom eq_132 : add_post(NearestTiesToEven, b1275, ust_113,
  d_add__t_3__t_108__t_113)

logic ust_114 : double

axiom eq_133 : add_post(NearestTiesToEven, b1275, ust_113, ust_114)

predicate ust_116() = (not smt2_double_eq(b1244, ust_114))

logic d_mul__t_3__t_114__t_114 : double

axiom eq_134 : mul_post(NearestTiesToEven, ust_114, ust_114,
  d_mul__t_3__t_114__t_114)

logic ust_117 : double

axiom eq_135 : mul_post(NearestTiesToEven, ust_114, ust_114, ust_117)

logic d_neg__t_117 : double

axiom eq_136 : neg_post(ust_117, d_neg__t_117)

logic ust_118 : double

axiom eq_137 : neg_post(ust_117, ust_118)

logic d_add__t_3__t_83__t_118 : double

axiom eq_138 : add_post(NearestTiesToEven, b192, ust_118,
  d_add__t_3__t_83__t_118)

logic ust_119 : double

axiom eq_139 : add_post(NearestTiesToEven, b192, ust_118, ust_119)

predicate ust_122() = (not smt2_double_eq(ust_119, b1300))

logic d_div__t_3__t_83__t_54 : double

axiom eq_140 : div_post(NearestTiesToEven, b192, b235,
  d_div__t_3__t_83__t_54)

logic ust_123 : double

axiom eq_141 : div_post(NearestTiesToEven, b192, b235, ust_123)

logic d_mul__t_3__t_10__t_123 : double

axiom eq_142 : mul_post(NearestTiesToEven, b226, ust_123,
  d_mul__t_3__t_10__t_123)

logic ust_124 : double

axiom eq_143 : mul_post(NearestTiesToEven, b226, ust_123, ust_124)

logic d_mul__t_3__t_123__t_123 : double

axiom eq_144 : mul_post(NearestTiesToEven, ust_123, ust_123,
  d_mul__t_3__t_123__t_123)

logic ust_125 : double

axiom eq_145 : mul_post(NearestTiesToEven, ust_123, ust_123, ust_125)

logic d_neg__t_125 : double

axiom eq_146 : neg_post(ust_125, d_neg__t_125)

logic ust_126 : double

axiom eq_147 : neg_post(ust_125, ust_126)

logic d_add__t_3__t_83__t_126 : double

axiom eq_148 : add_post(NearestTiesToEven, b192, ust_126,
  d_add__t_3__t_83__t_126)

logic ust_127 : double

axiom eq_149 : add_post(NearestTiesToEven, b192, ust_126, ust_127)

logic d_div__t_3__t_127__t_124 : double

axiom eq_150 : div_post(NearestTiesToEven, ust_127, ust_124,
  d_div__t_3__t_127__t_124)

logic ust_128 : double

axiom eq_151 : div_post(NearestTiesToEven, ust_127, ust_124, ust_128)

logic d_add__t_3__t_123__t_128 : double

axiom eq_152 : add_post(NearestTiesToEven, ust_123, ust_128,
  d_add__t_3__t_123__t_128)

logic ust_129 : double

axiom eq_153 : add_post(NearestTiesToEven, ust_123, ust_128, ust_129)

predicate ust_131() = (not smt2_double_eq(b1275, ust_129))

logic d_mul__t_3__t_10__t_129 : double

axiom eq_154 : mul_post(NearestTiesToEven, b226, ust_129,
  d_mul__t_3__t_10__t_129)

logic ust_132 : double

axiom eq_155 : mul_post(NearestTiesToEven, b226, ust_129, ust_132)

logic d_mul__t_3__t_129__t_129 : double

axiom eq_156 : mul_post(NearestTiesToEven, ust_129, ust_129,
  d_mul__t_3__t_129__t_129)

logic ust_133 : double

axiom eq_157 : mul_post(NearestTiesToEven, ust_129, ust_129, ust_133)

logic d_neg__t_133 : double

axiom eq_158 : neg_post(ust_133, d_neg__t_133)

logic ust_134 : double

axiom eq_159 : neg_post(ust_133, ust_134)

logic d_add__t_3__t_83__t_134 : double

axiom eq_160 : add_post(NearestTiesToEven, b192, ust_134,
  d_add__t_3__t_83__t_134)

logic ust_135 : double

axiom eq_161 : add_post(NearestTiesToEven, b192, ust_134, ust_135)

logic d_div__t_3__t_135__t_132 : double

axiom eq_162 : div_post(NearestTiesToEven, ust_135, ust_132,
  d_div__t_3__t_135__t_132)

logic ust_136 : double

axiom eq_163 : div_post(NearestTiesToEven, ust_135, ust_132, ust_136)

logic d_add__t_3__t_129__t_136 : double

axiom eq_164 : add_post(NearestTiesToEven, ust_129, ust_136,
  d_add__t_3__t_129__t_136)

logic ust_137 : double

axiom eq_165 : add_post(NearestTiesToEven, ust_129, ust_136, ust_137)

logic d_mul__t_3__t_137__t_137 : double

axiom eq_166 : mul_post(NearestTiesToEven, ust_137, ust_137,
  d_mul__t_3__t_137__t_137)

logic ust_138 : double

axiom eq_167 : mul_post(NearestTiesToEven, ust_137, ust_137, ust_138)

logic d_neg__t_138 : double

axiom eq_168 : neg_post(ust_138, d_neg__t_138)

logic ust_139 : double

axiom eq_169 : neg_post(ust_138, ust_139)

logic d_add__t_3__t_83__t_139 : double

axiom eq_170 : add_post(NearestTiesToEven, b192, ust_139,
  d_add__t_3__t_83__t_139)

logic ust_140 : double

axiom eq_171 : add_post(NearestTiesToEven, b192, ust_139, ust_140)

predicate ust_143() = (not smt2_double_eq(ust_140, b1336))

predicate ust_146() = (not smt2_double_eq(ust_135, b1346))

logic d_mul__t_3__t_10__t_147 : double

axiom eq_172 : mul_post(NearestTiesToEven, b226, b1356,
  d_mul__t_3__t_10__t_147)

logic ust_148 : double

axiom eq_173 : mul_post(NearestTiesToEven, b226, b1356, ust_148)

logic d_mul__t_3__t_147__t_147 : double

axiom eq_174 : mul_post(NearestTiesToEven, b1356, b1356,
  d_mul__t_3__t_147__t_147)

logic ust_149 : double

axiom eq_175 : mul_post(NearestTiesToEven, b1356, b1356, ust_149)

logic d_neg__t_149 : double

axiom eq_176 : neg_post(ust_149, d_neg__t_149)

logic ust_150 : double

axiom eq_177 : neg_post(ust_149, ust_150)

logic d_add__t_3__t_150__t_151 : double

axiom eq_178 : add_post(NearestTiesToEven, ust_150, b204,
  d_add__t_3__t_150__t_151)

logic ust_152 : double

axiom eq_179 : add_post(NearestTiesToEven, ust_150, b204, ust_152)

logic d_div__t_3__t_152__t_148 : double

axiom eq_180 : div_post(NearestTiesToEven, ust_152, ust_148,
  d_div__t_3__t_152__t_148)

logic ust_153 : double

axiom eq_181 : div_post(NearestTiesToEven, ust_152, ust_148, ust_153)

logic d_add__t_3__t_147__t_153 : double

axiom eq_182 : add_post(NearestTiesToEven, b1356, ust_153,
  d_add__t_3__t_147__t_153)

logic ust_154 : double

axiom eq_183 : add_post(NearestTiesToEven, b1356, ust_153, ust_154)

logic d_mul__t_3__t_154__t_154 : double

axiom eq_184 : mul_post(NearestTiesToEven, ust_154, ust_154,
  d_mul__t_3__t_154__t_154)

logic ust_155 : double

axiom eq_185 : mul_post(NearestTiesToEven, ust_154, ust_154, ust_155)

logic d_neg__t_155 : double

axiom eq_186 : neg_post(ust_155, d_neg__t_155)

logic ust_156 : double

axiom eq_187 : neg_post(ust_155, ust_156)

logic d_add__t_3__t_151__t_156 : double

axiom eq_188 : add_post(NearestTiesToEven, b204, ust_156,
  d_add__t_3__t_151__t_156)

logic ust_157 : double

axiom eq_189 : add_post(NearestTiesToEven, b204, ust_156, ust_157)

predicate ust_160() = (not smt2_double_eq(ust_157, b1367))

logic d_mul__t_3__t_10__t_161 : double

axiom eq_190 : mul_post(NearestTiesToEven, b226, b1372,
  d_mul__t_3__t_10__t_161)

logic ust_162 : double

axiom eq_191 : mul_post(NearestTiesToEven, b226, b1372, ust_162)

logic d_mul__t_3__t_161__t_161 : double

axiom eq_192 : mul_post(NearestTiesToEven, b1372, b1372,
  d_mul__t_3__t_161__t_161)

logic ust_163 : double

axiom eq_193 : mul_post(NearestTiesToEven, b1372, b1372, ust_163)

logic d_neg__t_163 : double

axiom eq_194 : neg_post(ust_163, d_neg__t_163)

logic ust_164 : double

axiom eq_195 : neg_post(ust_163, ust_164)

logic d_add__t_3__t_151__t_164 : double

axiom eq_196 : add_post(NearestTiesToEven, b204, ust_164,
  d_add__t_3__t_151__t_164)

logic ust_165 : double

axiom eq_197 : add_post(NearestTiesToEven, b204, ust_164, ust_165)

logic d_div__t_3__t_165__t_162 : double

axiom eq_198 : div_post(NearestTiesToEven, ust_165, ust_162,
  d_div__t_3__t_165__t_162)

logic ust_166 : double

axiom eq_199 : div_post(NearestTiesToEven, ust_165, ust_162, ust_166)

logic d_add__t_3__t_161__t_166 : double

axiom eq_200 : add_post(NearestTiesToEven, b1372, ust_166,
  d_add__t_3__t_161__t_166)

logic ust_167 : double

axiom eq_201 : add_post(NearestTiesToEven, b1372, ust_166, ust_167)

predicate ust_169() = (not smt2_double_eq(b1356, ust_167))

logic d_mul__t_3__t_167__t_167 : double

axiom eq_202 : mul_post(NearestTiesToEven, ust_167, ust_167,
  d_mul__t_3__t_167__t_167)

logic ust_170 : double

axiom eq_203 : mul_post(NearestTiesToEven, ust_167, ust_167, ust_170)

logic d_neg__t_170 : double

axiom eq_204 : neg_post(ust_170, d_neg__t_170)

logic ust_171 : double

axiom eq_205 : neg_post(ust_170, ust_171)

logic d_add__t_3__t_151__t_171 : double

axiom eq_206 : add_post(NearestTiesToEven, b204, ust_171,
  d_add__t_3__t_151__t_171)

logic ust_172 : double

axiom eq_207 : add_post(NearestTiesToEven, b204, ust_171, ust_172)

predicate ust_175() = (not smt2_double_eq(ust_172, b1398))

logic d_mul__t_3__t_10__t_176 : double

axiom eq_208 : mul_post(NearestTiesToEven, b226, b1403,
  d_mul__t_3__t_10__t_176)

logic ust_177 : double

axiom eq_209 : mul_post(NearestTiesToEven, b226, b1403, ust_177)

logic d_mul__t_3__t_176__t_176 : double

axiom eq_210 : mul_post(NearestTiesToEven, b1403, b1403,
  d_mul__t_3__t_176__t_176)

logic ust_178 : double

axiom eq_211 : mul_post(NearestTiesToEven, b1403, b1403, ust_178)

logic d_neg__t_178 : double

axiom eq_212 : neg_post(ust_178, d_neg__t_178)

logic ust_179 : double

axiom eq_213 : neg_post(ust_178, ust_179)

logic d_add__t_3__t_151__t_179 : double

axiom eq_214 : add_post(NearestTiesToEven, b204, ust_179,
  d_add__t_3__t_151__t_179)

logic ust_180 : double

axiom eq_215 : add_post(NearestTiesToEven, b204, ust_179, ust_180)

logic d_div__t_3__t_180__t_177 : double

axiom eq_216 : div_post(NearestTiesToEven, ust_180, ust_177,
  d_div__t_3__t_180__t_177)

logic ust_181 : double

axiom eq_217 : div_post(NearestTiesToEven, ust_180, ust_177, ust_181)

logic d_add__t_3__t_176__t_181 : double

axiom eq_218 : add_post(NearestTiesToEven, b1403, ust_181,
  d_add__t_3__t_176__t_181)

logic ust_182 : double

axiom eq_219 : add_post(NearestTiesToEven, b1403, ust_181, ust_182)

predicate ust_184() = (not smt2_double_eq(b1372, ust_182))

logic d_mul__t_3__t_182__t_182 : double

axiom eq_220 : mul_post(NearestTiesToEven, ust_182, ust_182,
  d_mul__t_3__t_182__t_182)

logic ust_185 : double

axiom eq_221 : mul_post(NearestTiesToEven, ust_182, ust_182, ust_185)

logic d_neg__t_185 : double

axiom eq_222 : neg_post(ust_185, d_neg__t_185)

logic ust_186 : double

axiom eq_223 : neg_post(ust_185, ust_186)

logic d_add__t_3__t_151__t_186 : double

axiom eq_224 : add_post(NearestTiesToEven, b204, ust_186,
  d_add__t_3__t_151__t_186)

logic ust_187 : double

axiom eq_225 : add_post(NearestTiesToEven, b204, ust_186, ust_187)

predicate ust_190() = (not smt2_double_eq(ust_187, b1428))

logic d_div__t_3__t_151__t_54 : double

axiom eq_226 : div_post(NearestTiesToEven, b204, b235,
  d_div__t_3__t_151__t_54)

logic ust_191 : double

axiom eq_227 : div_post(NearestTiesToEven, b204, b235, ust_191)

logic d_mul__t_3__t_10__t_191 : double

axiom eq_228 : mul_post(NearestTiesToEven, b226, ust_191,
  d_mul__t_3__t_10__t_191)

logic ust_192 : double

axiom eq_229 : mul_post(NearestTiesToEven, b226, ust_191, ust_192)

logic d_mul__t_3__t_191__t_191 : double

axiom eq_230 : mul_post(NearestTiesToEven, ust_191, ust_191,
  d_mul__t_3__t_191__t_191)

logic ust_193 : double

axiom eq_231 : mul_post(NearestTiesToEven, ust_191, ust_191, ust_193)

logic d_neg__t_193 : double

axiom eq_232 : neg_post(ust_193, d_neg__t_193)

logic ust_194 : double

axiom eq_233 : neg_post(ust_193, ust_194)

logic d_add__t_3__t_151__t_194 : double

axiom eq_234 : add_post(NearestTiesToEven, b204, ust_194,
  d_add__t_3__t_151__t_194)

logic ust_195 : double

axiom eq_235 : add_post(NearestTiesToEven, b204, ust_194, ust_195)

logic d_div__t_3__t_195__t_192 : double

axiom eq_236 : div_post(NearestTiesToEven, ust_195, ust_192,
  d_div__t_3__t_195__t_192)

logic ust_196 : double

axiom eq_237 : div_post(NearestTiesToEven, ust_195, ust_192, ust_196)

logic d_add__t_3__t_191__t_196 : double

axiom eq_238 : add_post(NearestTiesToEven, ust_191, ust_196,
  d_add__t_3__t_191__t_196)

logic ust_197 : double

axiom eq_239 : add_post(NearestTiesToEven, ust_191, ust_196, ust_197)

predicate ust_199() = (not smt2_double_eq(b1403, ust_197))

logic d_mul__t_3__t_10__t_197 : double

axiom eq_240 : mul_post(NearestTiesToEven, b226, ust_197,
  d_mul__t_3__t_10__t_197)

logic ust_200 : double

axiom eq_241 : mul_post(NearestTiesToEven, b226, ust_197, ust_200)

logic d_mul__t_3__t_197__t_197 : double

axiom eq_242 : mul_post(NearestTiesToEven, ust_197, ust_197,
  d_mul__t_3__t_197__t_197)

logic ust_201 : double

axiom eq_243 : mul_post(NearestTiesToEven, ust_197, ust_197, ust_201)

logic d_neg__t_201 : double

axiom eq_244 : neg_post(ust_201, d_neg__t_201)

logic ust_202 : double

axiom eq_245 : neg_post(ust_201, ust_202)

logic d_add__t_3__t_151__t_202 : double

axiom eq_246 : add_post(NearestTiesToEven, b204, ust_202,
  d_add__t_3__t_151__t_202)

logic ust_203 : double

axiom eq_247 : add_post(NearestTiesToEven, b204, ust_202, ust_203)

logic d_div__t_3__t_203__t_200 : double

axiom eq_248 : div_post(NearestTiesToEven, ust_203, ust_200,
  d_div__t_3__t_203__t_200)

logic ust_204 : double

axiom eq_249 : div_post(NearestTiesToEven, ust_203, ust_200, ust_204)

logic d_add__t_3__t_197__t_204 : double

axiom eq_250 : add_post(NearestTiesToEven, ust_197, ust_204,
  d_add__t_3__t_197__t_204)

logic ust_205 : double

axiom eq_251 : add_post(NearestTiesToEven, ust_197, ust_204, ust_205)

logic d_mul__t_3__t_205__t_205 : double

axiom eq_252 : mul_post(NearestTiesToEven, ust_205, ust_205,
  d_mul__t_3__t_205__t_205)

logic ust_206 : double

axiom eq_253 : mul_post(NearestTiesToEven, ust_205, ust_205, ust_206)

logic d_neg__t_206 : double

axiom eq_254 : neg_post(ust_206, d_neg__t_206)

logic ust_207 : double

axiom eq_255 : neg_post(ust_206, ust_207)

logic d_add__t_3__t_151__t_207 : double

axiom eq_256 : add_post(NearestTiesToEven, b204, ust_207,
  d_add__t_3__t_151__t_207)

logic ust_208 : double

axiom eq_257 : add_post(NearestTiesToEven, b204, ust_207, ust_208)

predicate ust_211() = (not smt2_double_eq(ust_208, b1464))

predicate ust_214() = (not smt2_double_eq(ust_203, b1474))

predicate ust_216() = (not eq(b192, b192))

predicate ust_218() = (not eq(b192, b204))

predicate ust_219() = (ust_216 and ust_218)

predicate ust_221() = (not eq(b553, b192))

predicate ust_222() = (ust_219 and ust_221)

predicate ust_224() = (not le(b192, ust_203))

predicate ust_225() = (ust_222 and ust_224)

logic d_neg__t_203 : double

axiom eq_258 : neg_post(ust_203, d_neg__t_203)

logic ust_226 : double

axiom eq_259 : neg_post(ust_203, ust_226)

predicate ust_228() = (ust_225 and smt2_double_eq(b1474, ust_226))

predicate ust_229() = (ust_214 and ust_228)

predicate ust_232() = (not le(b1474, b238))

predicate ust_233() = (ust_229 and ust_232)

predicate ust_235() = (ust_233 and smt2_double_eq(b1403, ust_205))

predicate ust_237() = (not le(b192, ust_208))

predicate ust_238() = (ust_235 and ust_237)

logic d_neg__t_208 : double

axiom eq_260 : neg_post(ust_208, d_neg__t_208)

logic ust_239 : double

axiom eq_261 : neg_post(ust_208, ust_239)

predicate ust_241() = (ust_238 and smt2_double_eq(b1464, ust_239))

predicate ust_242() = (ust_211 and ust_241)

predicate ust_244() = (not le(b1464, b238))

predicate ust_245() = (ust_242 and ust_244)

predicate ust_246() = (ust_199 and ust_245)

predicate ust_248() = (not le(b192, ust_187))

predicate ust_249() = (ust_246 and ust_248)

logic d_neg__t_187 : double

axiom eq_262 : neg_post(ust_187, d_neg__t_187)

logic ust_250 : double

axiom eq_263 : neg_post(ust_187, ust_250)

predicate ust_252() = (ust_249 and smt2_double_eq(b1428, ust_250))

predicate ust_253() = (ust_190 and ust_252)

predicate ust_255() = (ust_253 and smt2_double_eq(b1372, b1403))

predicate ust_257() = (not le(b1428, b238))

predicate ust_258() = (ust_255 and ust_257)

predicate ust_259() = (ust_184 and ust_258)

predicate ust_261() = (not le(b192, ust_172))

predicate ust_262() = (ust_259 and ust_261)

logic d_neg__t_172 : double

axiom eq_264 : neg_post(ust_172, d_neg__t_172)

logic ust_263 : double

axiom eq_265 : neg_post(ust_172, ust_263)

predicate ust_265() = (ust_262 and smt2_double_eq(b1398, ust_263))

predicate ust_266() = (ust_175 and ust_265)

predicate ust_268() = (ust_266 and smt2_double_eq(b1356, b1372))

predicate ust_269() = (ust_169 and ust_268)

predicate ust_271() = (not le(b1398, b238))

predicate ust_272() = (ust_269 and ust_271)

predicate ust_274() = (not le(b192, ust_157))

predicate ust_275() = (ust_272 and ust_274)

logic d_neg__t_157 : double

axiom eq_266 : neg_post(ust_157, d_neg__t_157)

logic ust_276 : double

axiom eq_267 : neg_post(ust_157, ust_276)

predicate ust_278() = (ust_275 and smt2_double_eq(b1367, ust_276))

predicate ust_279() = (ust_160 and ust_278)

predicate ust_281() = (not le(b192, ust_135))

predicate ust_282() = (ust_279 and ust_281)

logic d_neg__t_135 : double

axiom eq_268 : neg_post(ust_135, d_neg__t_135)

logic ust_283 : double

axiom eq_269 : neg_post(ust_135, ust_283)

predicate ust_285() = (ust_282 and smt2_double_eq(b1346, ust_283))

predicate ust_286() = (ust_146 and ust_285)

predicate ust_288() = (not le(b1346, b238))

predicate ust_289() = (ust_286 and ust_288)

predicate ust_291() = (ust_289 and smt2_double_eq(b1275, ust_137))

predicate ust_293() = (not le(b192, ust_140))

predicate ust_294() = (ust_291 and ust_293)

logic d_neg__t_140 : double

axiom eq_270 : neg_post(ust_140, d_neg__t_140)

logic ust_295 : double

axiom eq_271 : neg_post(ust_140, ust_295)

predicate ust_297() = (ust_294 and smt2_double_eq(b1336, ust_295))

predicate ust_298() = (ust_143 and ust_297)

predicate ust_300() = (not le(b1336, b238))

predicate ust_301() = (ust_298 and ust_300)

predicate ust_302() = (ust_131 and ust_301)

predicate ust_304() = (not le(b192, ust_119))

predicate ust_305() = (ust_302 and ust_304)

logic d_neg__t_119 : double

axiom eq_272 : neg_post(ust_119, d_neg__t_119)

logic ust_306 : double

axiom eq_273 : neg_post(ust_119, ust_306)

predicate ust_308() = (ust_305 and smt2_double_eq(b1300, ust_306))

predicate ust_309() = (ust_122 and ust_308)

predicate ust_311() = (ust_309 and smt2_double_eq(b1244, b1275))

predicate ust_313() = (not le(b1300, b238))

predicate ust_314() = (ust_311 and ust_313)

predicate ust_315() = (ust_116 and ust_314)

predicate ust_317() = (not le(b192, ust_104))

predicate ust_318() = (ust_315 and ust_317)

logic d_neg__t_104 : double

axiom eq_274 : neg_post(ust_104, d_neg__t_104)

logic ust_319 : double

axiom eq_275 : neg_post(ust_104, ust_319)

predicate ust_321() = (ust_318 and smt2_double_eq(b1270, ust_319))

predicate ust_322() = (ust_107 and ust_321)

predicate ust_324() = (ust_322 and smt2_double_eq(b1228, b1244))

predicate ust_325() = (ust_101 and ust_324)

predicate ust_327() = (not le(b1270, b238))

predicate ust_328() = (ust_325 and ust_327)

predicate ust_330() = (not le(b192, ust_89))

predicate ust_331() = (ust_328 and ust_330)

logic d_neg__t_89 : double

axiom eq_276 : neg_post(ust_89, d_neg__t_89)

logic ust_332 : double

axiom eq_277 : neg_post(ust_89, ust_332)

predicate ust_334() = (ust_331 and smt2_double_eq(b1239, ust_332))

predicate ust_335() = (ust_92 and ust_334)

predicate ust_337() = (not le(b192, ust_67))

predicate ust_338() = (ust_335 and ust_337)

logic d_neg__t_67 : double

axiom eq_278 : neg_post(ust_67, d_neg__t_67)

logic ust_339 : double

axiom eq_279 : neg_post(ust_67, ust_339)

predicate ust_341() = (ust_338 and smt2_double_eq(b1218, ust_339))

predicate ust_342() = (ust_78 and ust_341)

predicate ust_344() = (not le(b1218, b238))

predicate ust_345() = (ust_342 and ust_344)

predicate ust_347() = (ust_345 and smt2_double_eq(b1147, ust_69))

predicate ust_349() = (not le(b192, ust_72))

predicate ust_350() = (ust_347 and ust_349)

logic d_neg__t_72 : double

axiom eq_280 : neg_post(ust_72, d_neg__t_72)

logic ust_351 : double

axiom eq_281 : neg_post(ust_72, ust_351)

predicate ust_353() = (ust_350 and smt2_double_eq(b1208, ust_351))

predicate ust_354() = (ust_75 and ust_353)

predicate ust_356() = (not le(b1208, b238))

predicate ust_357() = (ust_354 and ust_356)

predicate ust_358() = (ust_63 and ust_357)

predicate ust_360() = (not le(b192, ust_50))

predicate ust_361() = (ust_358 and ust_360)

logic d_neg__t_50 : double

axiom eq_282 : neg_post(ust_50, d_neg__t_50)

logic ust_362 : double

axiom eq_283 : neg_post(ust_50, ust_362)

predicate ust_364() = (ust_361 and smt2_double_eq(b1172, ust_362))

predicate ust_365() = (ust_53 and ust_364)

predicate ust_367() = (ust_365 and smt2_double_eq(b1116, b1147))

predicate ust_369() = (not le(b1172, b238))

predicate ust_370() = (ust_367 and ust_369)

predicate ust_371() = (ust_47 and ust_370)

predicate ust_373() = (not le(b192, ust_35))

predicate ust_374() = (ust_371 and ust_373)

logic d_neg__t_35 : double

axiom eq_284 : neg_post(ust_35, d_neg__t_35)

logic ust_375 : double

axiom eq_285 : neg_post(ust_35, ust_375)

predicate ust_377() = (ust_374 and smt2_double_eq(b1142, ust_375))

predicate ust_378() = (ust_38 and ust_377)

predicate ust_380() = (ust_378 and smt2_double_eq(b1100, b1116))

predicate ust_381() = (ust_32 and ust_380)

predicate ust_383() = (not le(b1142, b238))

predicate ust_384() = (ust_381 and ust_383)

predicate ust_386() = (not le(b192, ust_20))

predicate ust_387() = (ust_384 and ust_386)

logic d_neg__t_20 : double

axiom eq_286 : neg_post(ust_20, d_neg__t_20)

logic ust_388 : double

axiom eq_287 : neg_post(ust_20, ust_388)

predicate ust_390() = (ust_387 and smt2_double_eq(b1111, ust_388))

predicate ust_391() = (ust_23 and ust_390)

axiom ax_1 : ust_391

goal g_1 : false
