(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo real arithmetic *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
axiom add_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x + y) / z) = ((x / z) + (y / z)))))

axiom sub_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x - y) / z) = ((x / z) - (y / z)))))

axiom neg_div :
  (forall x:real. forall y:real. ((not (y = 0.0)) ->
  (((-x) / y) = (-(x / y)))))

axiom assoc_mul_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x * y) / z) = (x * (y / z)))))

axiom assoc_div_mul :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> (((x / y) / z) = (x / (y * z)))))

axiom assoc_div_div :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> ((x / (y / z)) = ((x * z) / y))))

axiom CompatOrderMult :
  (forall x:real. forall y:real. forall z:real. ((x <= y) -> ((0.0 <= z) ->
  ((x * z) <= (y * z)))))

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

logic match_mode : fpa_rounding_mode, 'a, 'a, 'a, 'a, 'a -> 'a

axiom match_mode_NearestTiesToEven :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToEven, z, z1, z2, z3, z4) = z))

axiom match_mode_ToZero :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(ToZero, z, z1, z2, z3, z4) = z1))

axiom match_mode_Up :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Up, z, z1, z2, z3, z4) = z2))

axiom match_mode_Down :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Down, z, z1, z2, z3, z4) = z3))

axiom match_mode_NearestTiesToAway :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToAway, z, z1, z2, z3, z4) = z4))

type single

axiom CompatOrderMult1 :
  (forall x:int. forall y:int. forall z:int. ((x <= y) -> ((0 <= z) ->
  ((x * z) <= (y * z)))))

axiom Monotonic :
  (forall x:int. forall y:int. ((x <= y) ->
  (real_of_int(x) <= real_of_int(y))))

logic truncate : real -> int

axiom Truncate_int : (forall i:int. (truncate(real_of_int(i)) = i))

axiom Truncate_down_pos :
  (forall x:real. ((0.0 <= x) -> (real_of_int(truncate(x)) <= x)))

axiom Truncate_down_pos1 :
  (forall x:real. ((0.0 <= x) -> (x <  real_of_int((truncate(x) + 1)))))

axiom Truncate_up_neg :
  (forall x:real. ((x <= 0.0) -> (real_of_int((truncate(x) - 1)) <  x)))

axiom Truncate_up_neg1 :
  (forall x:real. ((x <= 0.0) -> (x <= real_of_int(truncate(x)))))

axiom Real_of_truncate :
  (forall x:real. ((x - 1.0) <= real_of_int(truncate(x))))

axiom Real_of_truncate1 :
  (forall x:real. (real_of_int(truncate(x)) <= (x + 1.0)))

axiom Truncate_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (truncate(x) <= truncate(y))))

axiom Truncate_monotonic_int1 :
  (forall x:real. forall i:int. ((x <= real_of_int(i)) ->
  (truncate(x) <= i)))

axiom Truncate_monotonic_int2 :
  (forall x:real. forall i:int. ((real_of_int(i) <= x) ->
  (i <= truncate(x))))

axiom Floor_int : (forall i:int. (int_floor(real_of_int(i)) = i))

axiom Ceil_int : (forall i:int. (int_ceil(real_of_int(i)) = i))

axiom Floor_down : (forall x:real. (real_of_int(int_floor(x)) <= x))

axiom Floor_down1 : (forall x:real. (x <  real_of_int((int_floor(x) + 1))))

axiom Ceil_up : (forall x:real. (real_of_int((int_ceil(x) - 1)) <  x))

axiom Ceil_up1 : (forall x:real. (x <= real_of_int(int_ceil(x))))

axiom Floor_monotonic :
  (forall x:real. forall y:real. ((x <= y) ->
  (int_floor(x) <= int_floor(y))))

axiom Ceil_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (int_ceil(x) <= int_ceil(y))))

function sqr(x: real) : real = (x * x)

axiom Sqrt_positive : (forall x:real. ((0.0 <= x) -> (0.0 <= sqrt_real(x))))

axiom Sqrt_square : (forall x:real. ((0.0 <= x) -> (sqr(sqrt_real(x)) = x)))

axiom Square_sqrt : (forall x:real. ((0.0 <= x) -> (sqrt_real((x * x)) = x)))

axiom Sqrt_mul :
  (forall x:real. forall y:real. (((0.0 <= x) and (0.0 <= y)) ->
  (sqrt_real((x * y)) = (sqrt_real(x) * sqrt_real(y)))))

axiom Sqrt_le :
  (forall x:real. forall y:real. (((0.0 <= x) and (x <= y)) ->
  (sqrt_real(x) <= sqrt_real(y))))

type class = Finite | Infinite | NaN

logic match_class : class, 'a, 'a, 'a -> 'a

axiom match_class_Finite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Finite, z, z1,
  z2) = z))

axiom match_class_Infinite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Infinite, z, z1,
  z2) = z1))

axiom match_class_NaN :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(NaN, z, z1,
  z2) = z2))

type sign = Neg | Pos

logic match_sign : sign, 'a, 'a -> 'a

axiom match_sign_Neg :
  (forall z:'a. forall z1:'a. (match_sign(Neg, z, z1) = z))

axiom match_sign_Pos :
  (forall z:'a. forall z1:'a. (match_sign(Pos, z, z1) = z1))

logic same_sign_real : sign, real -> prop

axiom Neg_case : (forall x:real. ((x <  0.0) -> same_sign_real(Neg, x)))

axiom Pos_case : (forall x:real. ((0.0 <  x) -> same_sign_real(Pos, x)))

axiom same_sign_real_inversion :
  (forall z:sign. forall z1:real. (same_sign_real(z, z1) -> (((z1 <  0.0) and
  (z = Neg)) or ((0.0 <  z1) and (z = Pos)))))

axiom same_sign_real_zero1 : (forall b:sign. (not same_sign_real(b, 0.0)))

axiom same_sign_real_zero2 :
  (forall x:real. (not (same_sign_real(Neg, x) and same_sign_real(Pos, x))))

axiom same_sign_real_zero3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> (not (x = 0.0))))

axiom same_sign_real_correct2 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((x <  0.0) ->
  (b = Neg))))

axiom same_sign_real_correct21 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Neg) ->
  (x <  0.0))))

axiom same_sign_real_correct3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((0.0 <  x) ->
  (b = Pos))))

axiom same_sign_real_correct31 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Pos) ->
  (0.0 <  x))))

axiom Abs_le :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> ((-y) <= x)))

axiom Abs_le1 :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> (x <= y)))

axiom Abs_le2 :
  (forall x:real. forall y:real. ((((-y) <= x) and (x <= y)) ->
  (abs_real(x) <= y)))

axiom Abs_pos : (forall x:real. (0.0 <= abs_real(x)))

axiom Abs_sum :
  (forall x:real. forall y:real.
  (abs_real((x + y)) <= (abs_real(x) + abs_real(y))))

axiom Abs_prod :
  (forall x:real. forall y:real.
  (abs_real((x * y)) = (abs_real(x) * abs_real(y))))

axiom triangular_inequality :
  (forall x:real. forall y:real. forall z:real.
  (abs_real((x - z)) <= (abs_real((x - y)) + abs_real((y - z)))))

logic value : single -> real

predicate no_overflow(m: fpa_rounding_mode, x: real) =
  (abs_real(float32(m, x)) <= 0x1.FFFFFEp127)

axiom Bounded_real_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> no_overflow(m, x)))

axiom Round_value :
  (forall m:fpa_rounding_mode. forall x:single.
  (float32(m, value(x)) = value(x)))

axiom Bounded_value :
  (forall x:single. (abs_real(value(x)) <= 0x1.FFFFFEp127))

axiom Exact_rounding_for_integers :
  (forall m:fpa_rounding_mode. forall i:int. ((((-16777216) <= i) and
  (i <= 16777216)) -> (float32(m, real_of_int(i)) = real_of_int(i))))

axiom Round_down_le : (forall x:real. (float32(Down, x) <= x))

axiom Round_up_ge : (forall x:real. (x <= float32(Up, x)))

axiom Round_down_neg :
  (forall x:real. (float32(Down, (-x)) = (-float32(Up, x))))

axiom Round_up_neg :
  (forall x:real. (float32(Up, (-x)) = (-float32(Down, x))))

logic round_logic : fpa_rounding_mode, real -> single

axiom Round_logic_def :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

logic class1 : single -> class

predicate is_finite(x: single) = (class1(x) = Finite)

predicate is_infinite(x: single) = (class1(x) = Infinite)

predicate is_NaN(x: single) = (class1(x) = NaN)

predicate is_not_NaN(x: single) = (is_finite(x) or is_infinite(x))

axiom is_not_NaN1 : (forall x:single. (is_not_NaN(x) -> (not is_NaN(x))))

axiom is_not_NaN2 : (forall x:single. ((not is_NaN(x)) -> is_not_NaN(x)))

logic sign1 : single -> sign

predicate same_sign_real1(x: single, y: real) = same_sign_real(sign1(x), y)

predicate same_sign(x: single, y: single) = (sign1(x) = sign1(y))

predicate diff_sign(x: single, y: single) = (not (sign1(x) = sign1(y)))

predicate sign_zero_result(m: fpa_rounding_mode, x: single) =
  ((value(x) = 0.0) -> ((((((m = NearestTiesToEven) -> (sign1(x) = Pos)) and
  ((m = ToZero) -> (sign1(x) = Pos))) and ((m = Up) -> (sign1(x) = Pos))) and
  ((m = Down) -> (sign1(x) = Neg))) and ((m = NearestTiesToAway) ->
  (sign1(x) = Pos))))

predicate is_minus_infinity(x: single) = (is_infinite(x) and
  (sign1(x) = Neg))

predicate is_plus_infinity(x: single) = (is_infinite(x) and (sign1(x) = Pos))

predicate is_gen_zero(x: single) = (is_finite(x) and (value(x) = 0.0))

predicate is_gen_zero_plus(x: single) = (is_gen_zero(x) and (sign1(x) = Pos))

predicate is_gen_zero_minus(x: single) = (is_gen_zero(x) and
  (sign1(x) = Neg))

axiom finite_sign :
  (forall x:single. (((class1(x) = Finite) and (not (value(x) = 0.0))) ->
  same_sign_real1(x, value(x))))

axiom finite_sign_pos1 :
  (forall x:single. (((class1(x) = Finite) and (0.0 <  value(x))) ->
  (sign1(x) = Pos)))

axiom finite_sign_pos2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Pos))) -> (0.0 <  value(x))))

axiom finite_sign_neg1 :
  (forall x:single. (((class1(x) = Finite) and (value(x) <  0.0)) ->
  (sign1(x) = Neg)))

axiom finite_sign_neg2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Neg))) -> (value(x) <  0.0)))

axiom diff_sign_trans :
  (forall x:single. forall y:single. forall z:single. ((diff_sign(x, y) and
  diff_sign(y, z)) -> same_sign(x, z)))

axiom diff_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and ((value(x) * value(y)) <  0.0))) -> diff_sign(x,
  y)))

axiom same_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and same_sign(x, y))) ->
  (0.0 <= (value(x) * value(y)))))

predicate overflow_value(m: fpa_rounding_mode, x: single) =
  (((sign1(x) = Neg) -> ((((((m = NearestTiesToEven) -> is_infinite(x)) and
  ((m = ToZero) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Up) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Down) -> is_infinite(x))) and ((m = NearestTiesToAway) ->
  is_infinite(x)))) and ((sign1(x) = Pos) -> ((((((m = NearestTiesToEven) ->
  is_infinite(x)) and ((m = ToZero) -> (is_finite(x) and
  (value(x) = 0x1.FFFFFEp127)))) and ((m = Up) -> is_infinite(x))) and
  ((m = Down) -> (is_finite(x) and (value(x) = 0x1.FFFFFEp127)))) and
  ((m = NearestTiesToAway) -> is_infinite(x)))))

axiom round1 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  is_finite(round_logic(m, x))))

axiom round11 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

axiom round2 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  same_sign_real1(round_logic(m, x), x)))

axiom round21 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  overflow_value(m, round_logic(m, x))))

axiom round_of_zero :
  (forall m:fpa_rounding_mode. is_gen_zero(round_logic(m, 0.0)))

axiom round_logic_le :
  (forall m:fpa_rounding_mode. forall x:real. (is_finite(round_logic(m,
  x)) -> (abs_real(value(round_logic(m, x))) <= 0x1.FFFFFEp127)))

axiom round_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> is_finite(round_logic(m, x))))

axiom round_no_overflow1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> (value(round_logic(m,
  x)) = float32(m, x))))

logic min : real

axiom positive_constant :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> is_finite(round_logic(m, x))))

axiom positive_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (0.0 <  value(round_logic(m, x)))))

axiom positive_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (sign1(round_logic(m, x)) = Pos)))

axiom negative_constant :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> is_finite(round_logic(m, x))))

axiom negative_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (value(round_logic(m, x)) <  0.0)))

axiom negative_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (sign1(round_logic(m, x)) = Neg)))

axiom is_gen_zero_comp1 :
  (forall x:single. forall y:single. ((is_gen_zero(x) and
  ((value(x) = value(y)) and is_finite(y))) -> is_gen_zero(y)))

axiom is_gen_zero_comp2 :
  (forall x:single. forall y:single. ((is_finite(x) and
  ((not is_gen_zero(x)) and (value(x) = value(y)))) -> (not is_gen_zero(y))))

predicate add_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and same_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((same_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not same_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) + value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) + value(y)))) and ((same_sign(x, y) ->
  same_sign(r, x)) and ((not same_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) + value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) + value(y))) and overflow_value(m, r))))))))

predicate sub_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and diff_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((diff_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not diff_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) - value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) - value(y)))) and ((diff_sign(x, y) ->
  same_sign(r, x)) and ((not diff_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) - value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) - value(y))) and overflow_value(m, r))))))))

predicate product_sign(z: single, x: single, y: single) = ((same_sign(x,
  y) -> (sign1(z) = Pos)) and (diff_sign(x, y) -> (sign1(z) = Neg)))

predicate mul_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_gen_zero(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_infinite(y) and
  (not (value(x) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_gen_zero(y)) -> is_NaN(r)) and (((is_infinite(x) and (is_finite(y) and
  (not (value(y) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_infinite(r)) and (((is_finite(x) and
  (is_finite(y) and no_overflow(m, (value(x) * value(y))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) * value(y)))))) and
  (((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) * value(y)))))) -> overflow_value(m, r)) and ((not is_NaN(r)) ->
  product_sign(r, x, y))))))))))

predicate neg_post(x: single, r: single) = ((is_NaN(x) -> is_NaN(r)) and
  ((is_infinite(x) -> is_infinite(r)) and ((is_finite(x) -> (is_finite(r) and
  (value(r) = (-value(x))))) and ((not is_NaN(x)) -> diff_sign(r, x)))))

predicate div_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> is_gen_zero(r)) and (((is_infinite(x) and
  is_finite(y)) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_finite(y) and
  ((not (value(y) = 0.0)) and no_overflow(m, (value(x) / value(y)))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) / value(y)))))) and
  (((is_finite(x) and (is_finite(y) and ((not (value(y) = 0.0)) and
  (not no_overflow(m, (value(x) / value(y))))))) -> overflow_value(m, r)) and
  (((is_finite(x) and (is_gen_zero(y) and (not (value(x) = 0.0)))) ->
  is_infinite(r)) and (((is_gen_zero(x) and is_gen_zero(y)) -> is_NaN(r)) and
  ((not is_NaN(r)) -> product_sign(r, x, y))))))))))

predicate fma_post(m: fpa_rounding_mode, x: single, y: single, z: single,
  r: single) = (((is_NaN(x) or (is_NaN(y) or is_NaN(z))) -> is_NaN(r)) and
  (((is_gen_zero(x) and is_infinite(y)) -> is_NaN(r)) and
  (((is_infinite(x) and is_gen_zero(y)) -> is_NaN(r)) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_infinite(y) and is_finite(z))) -> (is_infinite(r) and product_sign(r,
  x, y))) and (((is_finite(x) and (is_finite(y) and is_infinite(z))) ->
  (is_infinite(r) and same_sign(r, z))) and (((is_infinite(x) and
  (is_infinite(y) and is_infinite(z))) -> ((product_sign(z, x, y) ->
  (is_infinite(r) and same_sign(r, z))) and ((not product_sign(z, x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and (is_finite(z) and
  no_overflow(m, ((value(x) * value(y)) + value(z)))))) -> (is_finite(r) and
  ((value(r) = float32(m, ((value(x) * value(y)) + value(z)))) and
  ((product_sign(z, x, y) -> same_sign(r, z)) and ((not product_sign(z, x,
  y)) -> ((((value(x) * value(y)) + value(z)) = 0.0) -> (((m = Down) ->
  (sign1(r) = Neg)) and ((not (m = Down)) -> (sign1(r) = Pos))))))))) and
  ((is_finite(x) and (is_finite(y) and (is_finite(z) and (not no_overflow(m,
  ((value(x) * value(y)) + value(z))))))) -> (same_sign_real(sign1(r),
  ((value(x) * value(y)) + value(z))) and overflow_value(m, r))))))))))))))

predicate sqrt_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_plus_infinity(x) ->
  is_plus_infinity(r)) and ((is_minus_infinity(x) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) <  0.0)) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) = 0.0)) -> (is_finite(r) and
  ((value(r) = 0.0) and same_sign(r, x)))) and ((is_finite(x) and
  (0.0 <  value(x))) -> (is_finite(r) and
  ((value(r) = float32(m, sqrt_real(value(x)))) and (sign1(r) = Pos)))))))))

predicate roundToIntegral_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_infinite(x) -> (is_infinite(r) and
  same_sign(x, r))) and (is_finite(x) -> (same_sign(x, r) and
  (value(r) = real_of_int(integer_round(m, value(x))))))))

predicate of_real_exact_post(x: real, r: single) = (is_finite(r) and
  (value(r) = x))

predicate le(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <= value(y)))) or ((is_minus_infinity(x) and is_not_NaN(y)) or
  (is_not_NaN(x) and is_plus_infinity(y))))

predicate lt(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <  value(y)))) or ((is_minus_infinity(x) and (is_not_NaN(y) and
  (not is_minus_infinity(y)))) or (is_not_NaN(x) and
  ((not is_plus_infinity(x)) and is_plus_infinity(y)))))

predicate eq(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) = value(y)))) or (is_infinite(x) and (is_infinite(y) and
  same_sign(x, y))))

predicate ne(x: single, y: single) = (not eq(x, y))

predicate rem_post(x: single, y: single, r: single) = (((is_NaN(x) or
  (is_NaN(y) or (is_infinite(x) or is_gen_zero(y)))) -> is_NaN(r)) and
  ((not (is_NaN(x) or (is_NaN(y) or (is_infinite(x) or is_gen_zero(y))))) ->
  ((is_infinite(y) -> eq(x, r)) and ((not is_infinite(y)) ->
  (is_finite(r) and (((value(r) = 0.0) -> same_sign(x, r)) and
  (value(r) = (value(x) - (value(y) * real_of_int(integer_round(NearestTiesToEven, (value(x) / value(y)))))))))))))

axiom le_lt_trans :
  (forall x:single. forall y:single. forall z:single. ((le(x, y) and lt(y,
  z)) -> lt(x, z)))

axiom lt_le_trans :
  (forall x:single. forall y:single. forall z:single. ((lt(x, y) and le(y,
  z)) -> lt(x, z)))

axiom le_ge_asym :
  (forall x:single. forall y:single. ((le(x, y) and le(y, x)) -> eq(x, y)))

axiom not_lt_ge :
  (forall x:single. forall y:single. (((not lt(x, y)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(y, x)))

axiom not_gt_le :
  (forall x:single. forall y:single. (((not lt(y, x)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(x, y)))

logic x0 : single

logic x1 : single

logic x2 : single

logic x3 : single

logic x4 : single

logic sfp_0_127_0 : single

axiom eq_0 : is_finite(sfp_0_127_0)

axiom eq_01 : (value(sfp_0_127_0) = 1.0)

logic ust_10 : single

axiom eq_1 : (value(ust_10) = 1.0)

axiom eq_11 : (sign1(ust_10) = Pos)

axiom eq_12 : is_finite(ust_10)

logic sfp_1_127_0 : single

axiom eq_2 : is_finite(sfp_1_127_0)

axiom eq_21 : (value(sfp_1_127_0) = (-1.0))

logic ust_12 : single

axiom eq_3 : (value(ust_12) = (-1.0))

axiom eq_31 : (sign1(ust_12) = Neg)

axiom eq_32 : is_finite(ust_12)

predicate ust_16() = (le(ust_12, x0) and le(x0, ust_10))

axiom ax_1 : ust_16

predicate ust_20() = (le(ust_12, x1) and le(x1, ust_10))

axiom ax_2 : ust_20

predicate ust_24() = (le(ust_12, x2) and le(x2, ust_10))

axiom ax_3 : ust_24

predicate ust_28() = (le(ust_12, x3) and le(x3, ust_10))

axiom ax_4 : ust_28

predicate ust_32() = (le(ust_12, x4) and le(x4, ust_10))

axiom ax_5 : ust_32

logic sfp_0_0_0 : single

axiom eq_4 : is_finite(sfp_0_0_0)

axiom eq_41 : (value(sfp_0_0_0) = 0.0)

logic ust_34 : single

axiom eq_5 : (value(ust_34) = 0.0)

axiom eq_51 : (sign1(ust_34) = Pos)

axiom eq_52 : is_finite(ust_34)

logic sfp_1_124_5100274 : single

axiom eq_6 : is_finite(sfp_1_124_5100274)

axiom eq_61 : (value(sfp_1_124_5100274) = ((-6744441.0) / 33554432.0))

logic ust_37 : single

axiom eq_7 : (value(ust_37) = ((-6744441.0) / 33554432.0))

axiom eq_71 : (sign1(ust_37) = Neg)

axiom eq_72 : is_finite(ust_37)

logic sfp_1_123_2080374 : single

axiom eq_8 : is_finite(sfp_1_123_2080374)

axiom eq_81 : (value(sfp_1_123_2080374) = ((-5234491.0) / 67108864.0))

logic ust_40 : single

axiom eq_9 : (value(ust_40) = ((-5234491.0) / 67108864.0))

axiom eq_91 : (sign1(ust_40) = Neg)

axiom eq_92 : is_finite(ust_40)

logic s_mul__t_3__t_13__t_40 : single

axiom eq_10 : mul_post(NearestTiesToEven, x0, ust_40, s_mul__t_3__t_13__t_40)

logic ust_41 : single

axiom eq_111 : mul_post(NearestTiesToEven, x0, ust_40, ust_41)

logic s_add__t_3__t_34__t_41 : single

axiom eq_121 : add_post(NearestTiesToEven, ust_34, ust_41,
  s_add__t_3__t_34__t_41)

logic ust_42 : single

axiom eq_13 : add_post(NearestTiesToEven, ust_34, ust_41, ust_42)

logic sfp_1_126_150995 : single

axiom eq_14 : is_finite(sfp_1_126_150995)

axiom eq_141 : (value(sfp_1_126_150995) = ((-8539603.0) / 16777216.0))

logic ust_45 : single

axiom eq_15 : (value(ust_45) = ((-8539603.0) / 16777216.0))

axiom eq_151 : (sign1(ust_45) = Neg)

axiom eq_152 : is_finite(ust_45)

logic s_mul__t_3__t_17__t_45 : single

axiom eq_16 : mul_post(NearestTiesToEven, x1, ust_45, s_mul__t_3__t_17__t_45)

logic ust_46 : single

axiom eq_17 : mul_post(NearestTiesToEven, x1, ust_45, ust_46)

logic s_add__t_3__t_42__t_46 : single

axiom eq_18 : add_post(NearestTiesToEven, ust_42, ust_46,
  s_add__t_3__t_42__t_46)

logic ust_47 : single

axiom eq_19 : add_post(NearestTiesToEven, ust_42, ust_46, ust_47)

logic sfp_1_126_6006243 : single

axiom eq_20 : is_finite(sfp_1_126_6006243)

axiom eq_201 : (value(sfp_1_126_6006243) = ((-14394851.0) / 16777216.0))

logic ust_50 : single

axiom eq_211 : (value(ust_50) = ((-14394851.0) / 16777216.0))

axiom eq_212 : (sign1(ust_50) = Neg)

axiom eq_213 : is_finite(ust_50)

logic s_mul__t_3__t_21__t_50 : single

axiom eq_22 : mul_post(NearestTiesToEven, x2, ust_50, s_mul__t_3__t_21__t_50)

logic ust_51 : single

axiom eq_23 : mul_post(NearestTiesToEven, x2, ust_50, ust_51)

logic s_add__t_3__t_47__t_51 : single

axiom eq_24 : add_post(NearestTiesToEven, ust_47, ust_51,
  s_add__t_3__t_47__t_51)

logic ust_52 : single

axiom eq_25 : add_post(NearestTiesToEven, ust_47, ust_51, ust_52)

logic sfp_1_121_3422551 : single

axiom eq_26 : is_finite(sfp_1_121_3422551)

axiom eq_261 : (value(sfp_1_121_3422551) = ((-11811159.0) / 536870912.0))

logic ust_55 : single

axiom eq_27 : (value(ust_55) = ((-11811159.0) / 536870912.0))

axiom eq_271 : (sign1(ust_55) = Neg)

axiom eq_272 : is_finite(ust_55)

logic s_mul__t_3__t_25__t_55 : single

axiom eq_28 : mul_post(NearestTiesToEven, x3, ust_55, s_mul__t_3__t_25__t_55)

logic ust_56 : single

axiom eq_29 : mul_post(NearestTiesToEven, x3, ust_55, ust_56)

logic s_add__t_3__t_52__t_56 : single

axiom eq_30 : add_post(NearestTiesToEven, ust_52, ust_56,
  s_add__t_3__t_52__t_56)

logic ust_57 : single

axiom eq_311 : add_post(NearestTiesToEven, ust_52, ust_56, ust_57)

logic sfp_1_125_6274678 : single

axiom eq_321 : is_finite(sfp_1_125_6274678)

axiom eq_322 : (value(sfp_1_125_6274678) = ((-7331643.0) / 16777216.0))

logic ust_60 : single

axiom eq_33 : (value(ust_60) = ((-7331643.0) / 16777216.0))

axiom eq_331 : (sign1(ust_60) = Neg)

axiom eq_332 : is_finite(ust_60)

logic s_mul__t_3__t_29__t_60 : single

axiom eq_34 : mul_post(NearestTiesToEven, x4, ust_60, s_mul__t_3__t_29__t_60)

logic ust_61 : single

axiom eq_35 : mul_post(NearestTiesToEven, x4, ust_60, ust_61)

logic s_add__t_3__t_57__t_61 : single

axiom eq_36 : add_post(NearestTiesToEven, ust_57, ust_61,
  s_add__t_3__t_57__t_61)

logic ust_62 : single

axiom eq_37 : add_post(NearestTiesToEven, ust_57, ust_61, ust_62)

axiom ax_6 : le(ust_62, ust_37)

logic sfp_0_126_5335155 : single

axiom eq_38 : is_finite(sfp_0_126_5335155)

axiom eq_381 : (value(sfp_0_126_5335155) = (13723763.0 / 16777216.0))

logic ust_65 : single

axiom eq_39 : (value(ust_65) = (13723763.0 / 16777216.0))

axiom eq_391 : (sign1(ust_65) = Pos)

axiom eq_392 : is_finite(ust_65)

logic sfp_0_123_201326 : single

axiom eq_40 : is_finite(sfp_0_123_201326)

axiom eq_401 : (value(sfp_0_123_201326) = (4294967.0 / 67108864.0))

logic ust_67 : single

axiom eq_411 : (value(ust_67) = (4294967.0 / 67108864.0))

axiom eq_412 : (sign1(ust_67) = Pos)

axiom eq_413 : is_finite(ust_67)

logic s_mul__t_3__t_13__t_67 : single

axiom eq_42 : mul_post(NearestTiesToEven, x0, ust_67, s_mul__t_3__t_13__t_67)

logic ust_68 : single

axiom eq_43 : mul_post(NearestTiesToEven, x0, ust_67, ust_68)

logic s_add__t_3__t_34__t_68 : single

axiom eq_44 : add_post(NearestTiesToEven, ust_34, ust_68,
  s_add__t_3__t_34__t_68)

logic ust_69 : single

axiom eq_45 : add_post(NearestTiesToEven, ust_34, ust_68, ust_69)

logic sfp_0_125_973078 : single

axiom eq_46 : is_finite(sfp_0_125_973078)

axiom eq_461 : (value(sfp_0_125_973078) = (4680843.0 / 16777216.0))

logic ust_71 : single

axiom eq_47 : (value(ust_71) = (4680843.0 / 16777216.0))

axiom eq_471 : (sign1(ust_71) = Pos)

axiom eq_472 : is_finite(ust_71)

logic s_mul__t_3__t_17__t_71 : single

axiom eq_48 : mul_post(NearestTiesToEven, x1, ust_71, s_mul__t_3__t_17__t_71)

logic ust_72 : single

axiom eq_49 : mul_post(NearestTiesToEven, x1, ust_71, ust_72)

logic s_add__t_3__t_69__t_72 : single

axiom eq_50 : add_post(NearestTiesToEven, ust_69, ust_72,
  s_add__t_3__t_69__t_72)

logic ust_73 : single

axiom eq_511 : add_post(NearestTiesToEven, ust_69, ust_72, ust_73)

logic sfp_1_120_2348810 : single

axiom eq_521 : is_finite(sfp_1_120_2348810)

axiom eq_522 : (value(sfp_1_120_2348810) = ((-5368709.0) / 536870912.0))

logic ust_76 : single

axiom eq_53 : (value(ust_76) = ((-5368709.0) / 536870912.0))

axiom eq_531 : (sign1(ust_76) = Neg)

axiom eq_532 : is_finite(ust_76)

logic s_mul__t_3__t_21__t_76 : single

axiom eq_54 : mul_post(NearestTiesToEven, x2, ust_76, s_mul__t_3__t_21__t_76)

logic ust_77 : single

axiom eq_55 : mul_post(NearestTiesToEven, x2, ust_76, ust_77)

logic s_add__t_3__t_73__t_77 : single

axiom eq_56 : add_post(NearestTiesToEven, ust_73, ust_77,
  s_add__t_3__t_73__t_77)

logic ust_78 : single

axiom eq_57 : add_post(NearestTiesToEven, ust_73, ust_77, ust_78)

logic sfp_0_124_7046430 : single

axiom eq_58 : is_finite(sfp_0_124_7046430)

axiom eq_581 : (value(sfp_0_124_7046430) = (7717519.0 / 33554432.0))

logic ust_80 : single

axiom eq_59 : (value(ust_80) = (7717519.0 / 33554432.0))

axiom eq_591 : (sign1(ust_80) = Pos)

axiom eq_592 : is_finite(ust_80)

logic s_mul__t_3__t_25__t_80 : single

axiom eq_60 : mul_post(NearestTiesToEven, x3, ust_80, s_mul__t_3__t_25__t_80)

logic ust_81 : single

axiom eq_611 : mul_post(NearestTiesToEven, x3, ust_80, ust_81)

logic s_add__t_3__t_78__t_81 : single

axiom eq_62 : add_post(NearestTiesToEven, ust_78, ust_81,
  s_add__t_3__t_78__t_81)

logic ust_82 : single

axiom eq_63 : add_post(NearestTiesToEven, ust_78, ust_81, ust_82)

logic sfp_0_125_8187280 : single

axiom eq_64 : is_finite(sfp_0_125_8187280)

axiom eq_641 : (value(sfp_0_125_8187280) = (1035993.0 / 2097152.0))

logic ust_84 : single

axiom eq_65 : (value(ust_84) = (1035993.0 / 2097152.0))

axiom eq_651 : (sign1(ust_84) = Pos)

axiom eq_652 : is_finite(ust_84)

logic s_mul__t_3__t_29__t_84 : single

axiom eq_66 : mul_post(NearestTiesToEven, x4, ust_84, s_mul__t_3__t_29__t_84)

logic ust_85 : single

axiom eq_67 : mul_post(NearestTiesToEven, x4, ust_84, ust_85)

logic s_add__t_3__t_82__t_85 : single

axiom eq_68 : add_post(NearestTiesToEven, ust_82, ust_85,
  s_add__t_3__t_82__t_85)

logic ust_86 : single

axiom eq_69 : add_post(NearestTiesToEven, ust_82, ust_85, ust_86)

axiom ax_7 : le(ust_65, ust_86)

logic sfp_0_126_8237612 : single

axiom eq_70 : is_finite(sfp_0_126_8237612)

axiom eq_701 : (value(sfp_0_126_8237612) = (4156555.0 / 4194304.0))

logic ust_89 : single

axiom eq_711 : (value(ust_89) = (4156555.0 / 4194304.0))

axiom eq_712 : (sign1(ust_89) = Pos)

axiom eq_713 : is_finite(ust_89)

logic sfp_0_126_5200937 : single

axiom eq_721 : is_finite(sfp_0_126_5200937)

axiom eq_722 : (value(sfp_0_126_5200937) = (13589545.0 / 16777216.0))

logic ust_91 : single

axiom eq_73 : (value(ust_91) = (13589545.0 / 16777216.0))

axiom eq_731 : (sign1(ust_91) = Pos)

axiom eq_732 : is_finite(ust_91)

logic s_mul__t_3__t_13__t_91 : single

axiom eq_74 : mul_post(NearestTiesToEven, x0, ust_91, s_mul__t_3__t_13__t_91)

logic ust_92 : single

axiom eq_75 : mul_post(NearestTiesToEven, x0, ust_91, ust_92)

logic s_add__t_3__t_34__t_92 : single

axiom eq_76 : add_post(NearestTiesToEven, ust_34, ust_92,
  s_add__t_3__t_34__t_92)

logic ust_93 : single

axiom eq_77 : add_post(NearestTiesToEven, ust_34, ust_92, ust_93)

logic sfp_1_126_3489660 : single

axiom eq_78 : is_finite(sfp_1_126_3489660)

axiom eq_781 : (value(sfp_1_126_3489660) = ((-2969567.0) / 4194304.0))

logic ust_96 : single

axiom eq_79 : (value(ust_96) = ((-2969567.0) / 4194304.0))

axiom eq_791 : (sign1(ust_96) = Neg)

axiom eq_792 : is_finite(ust_96)

logic s_mul__t_3__t_17__t_96 : single

axiom eq_80 : mul_post(NearestTiesToEven, x1, ust_96, s_mul__t_3__t_17__t_96)

logic ust_97 : single

axiom eq_811 : mul_post(NearestTiesToEven, x1, ust_96, ust_97)

logic s_add__t_3__t_93__t_97 : single

axiom eq_82 : add_post(NearestTiesToEven, ust_93, ust_97,
  s_add__t_3__t_93__t_97)

logic ust_98 : single

axiom eq_83 : add_post(NearestTiesToEven, ust_93, ust_97, ust_98)

logic sfp_1_126_2969566 : single

axiom eq_84 : is_finite(sfp_1_126_2969566)

axiom eq_841 : (value(sfp_1_126_2969566) = ((-5679087.0) / 8388608.0))

logic ust_101 : single

axiom eq_85 : (value(ust_101) = ((-5679087.0) / 8388608.0))

axiom eq_851 : (sign1(ust_101) = Neg)

axiom eq_852 : is_finite(ust_101)

logic s_mul__t_3__t_21__t_101 : single

axiom eq_86 : mul_post(NearestTiesToEven, x2, ust_101,
  s_mul__t_3__t_21__t_101)

logic ust_102 : single

axiom eq_87 : mul_post(NearestTiesToEven, x2, ust_101, ust_102)

logic s_add__t_3__t_98__t_102 : single

axiom eq_88 : add_post(NearestTiesToEven, ust_98, ust_102,
  s_add__t_3__t_98__t_102)

logic ust_103 : single

axiom eq_89 : add_post(NearestTiesToEven, ust_98, ust_102, ust_103)

logic sfp_0_126_1895825 : single

axiom eq_90 : is_finite(sfp_0_126_1895825)

axiom eq_901 : (value(sfp_0_126_1895825) = (10284433.0 / 16777216.0))

logic ust_105 : single

axiom eq_911 : (value(ust_105) = (10284433.0 / 16777216.0))

axiom eq_912 : (sign1(ust_105) = Pos)

axiom eq_913 : is_finite(ust_105)

logic s_mul__t_3__t_25__t_105 : single

axiom eq_921 : mul_post(NearestTiesToEven, x3, ust_105,
  s_mul__t_3__t_25__t_105)

logic ust_106 : single

axiom eq_93 : mul_post(NearestTiesToEven, x3, ust_105, ust_106)

logic s_add__t_3__t_103__t_106 : single

axiom eq_94 : add_post(NearestTiesToEven, ust_103, ust_106,
  s_add__t_3__t_103__t_106)

logic ust_107 : single

axiom eq_95 : add_post(NearestTiesToEven, ust_103, ust_106, ust_107)

logic sfp_1_125_6073352 : single

axiom eq_96 : is_finite(sfp_1_125_6073352)

axiom eq_961 : (value(sfp_1_125_6073352) = ((-1807745.0) / 4194304.0))

logic ust_110 : single

axiom eq_97 : (value(ust_110) = ((-1807745.0) / 4194304.0))

axiom eq_971 : (sign1(ust_110) = Neg)

axiom eq_972 : is_finite(ust_110)

logic s_mul__t_3__t_29__t_110 : single

axiom eq_98 : mul_post(NearestTiesToEven, x4, ust_110,
  s_mul__t_3__t_29__t_110)

logic ust_111 : single

axiom eq_99 : mul_post(NearestTiesToEven, x4, ust_110, ust_111)

logic s_add__t_3__t_107__t_111 : single

axiom eq_100 : add_post(NearestTiesToEven, ust_107, ust_111,
  s_add__t_3__t_107__t_111)

logic ust_112 : single

axiom eq_101 : add_post(NearestTiesToEven, ust_107, ust_111, ust_112)

axiom ax_8 : le(ust_112, ust_89)

logic sfp_1_124_268434 : single

axiom eq_102 : is_finite(sfp_1_124_268434)

axiom eq_1021 : (value(sfp_1_124_268434) = ((-4328521.0) / 33554432.0))

logic ust_116 : single

axiom eq_103 : (value(ust_116) = ((-4328521.0) / 33554432.0))

axiom eq_1031 : (sign1(ust_116) = Neg)

axiom eq_1032 : is_finite(ust_116)

logic sfp_0_126_4915724 : single

axiom eq_104 : is_finite(sfp_0_126_4915724)

axiom eq_1041 : (value(sfp_0_126_4915724) = (3326083.0 / 4194304.0))

logic ust_118 : single

axiom eq_105 : (value(ust_118) = (3326083.0 / 4194304.0))

axiom eq_1051 : (sign1(ust_118) = Pos)

axiom eq_1052 : is_finite(ust_118)

logic s_mul__t_3__t_13__t_118 : single

axiom eq_106 : mul_post(NearestTiesToEven, x0, ust_118,
  s_mul__t_3__t_13__t_118)

logic ust_119 : single

axiom eq_107 : mul_post(NearestTiesToEven, x0, ust_118, ust_119)

logic s_add__t_3__t_34__t_119 : single

axiom eq_108 : add_post(NearestTiesToEven, ust_34, ust_119,
  s_add__t_3__t_34__t_119)

logic ust_120 : single

axiom eq_109 : add_post(NearestTiesToEven, ust_34, ust_119, ust_120)

logic sfp_1_126_5402264 : single

axiom eq_110 : is_finite(sfp_1_126_5402264)

axiom eq_1101 : (value(sfp_1_126_5402264) = ((-1723859.0) / 2097152.0))

logic ust_123 : single

axiom eq_1111 : (value(ust_123) = ((-1723859.0) / 2097152.0))

axiom eq_1112 : (sign1(ust_123) = Neg)

axiom eq_1113 : is_finite(ust_123)

logic s_mul__t_3__t_17__t_123 : single

axiom eq_112 : mul_post(NearestTiesToEven, x1, ust_123,
  s_mul__t_3__t_17__t_123)

logic ust_124 : single

axiom eq_113 : mul_post(NearestTiesToEven, x1, ust_123, ust_124)

logic s_add__t_3__t_120__t_124 : single

axiom eq_114 : add_post(NearestTiesToEven, ust_120, ust_124,
  s_add__t_3__t_120__t_124)

logic ust_125 : single

axiom eq_115 : add_post(NearestTiesToEven, ust_120, ust_124, ust_125)

logic sfp_1_122_469761 : single

axiom eq_116 : is_finite(sfp_1_122_469761)

axiom eq_1161 : (value(sfp_1_122_469761) = ((-8858369.0) / 268435456.0))

logic ust_128 : single

axiom eq_117 : (value(ust_128) = ((-8858369.0) / 268435456.0))

axiom eq_1171 : (sign1(ust_128) = Neg)

axiom eq_1172 : is_finite(ust_128)

logic s_mul__t_3__t_21__t_128 : single

axiom eq_118 : mul_post(NearestTiesToEven, x2, ust_128,
  s_mul__t_3__t_21__t_128)

logic ust_129 : single

axiom eq_119 : mul_post(NearestTiesToEven, x2, ust_128, ust_129)

logic s_add__t_3__t_125__t_129 : single

axiom eq_120 : add_post(NearestTiesToEven, ust_125, ust_129,
  s_add__t_3__t_125__t_129)

logic ust_130 : single

axiom eq_1211 : add_post(NearestTiesToEven, ust_125, ust_129, ust_130)

logic sfp_1_125_5536480 : single

axiom eq_122 : is_finite(sfp_1_125_5536480)

axiom eq_1221 : (value(sfp_1_125_5536480) = ((-435159.0) / 1048576.0))

logic ust_133 : single

axiom eq_123 : (value(ust_133) = ((-435159.0) / 1048576.0))

axiom eq_1231 : (sign1(ust_133) = Neg)

axiom eq_1232 : is_finite(ust_133)

logic s_mul__t_3__t_25__t_133 : single

axiom eq_124 : mul_post(NearestTiesToEven, x3, ust_133,
  s_mul__t_3__t_25__t_133)

logic ust_134 : single

axiom eq_125 : mul_post(NearestTiesToEven, x3, ust_133, ust_134)

logic s_add__t_3__t_130__t_134 : single

axiom eq_126 : add_post(NearestTiesToEven, ust_130, ust_134,
  s_add__t_3__t_130__t_134)

logic ust_135 : single

axiom eq_127 : add_post(NearestTiesToEven, ust_130, ust_134, ust_135)

logic sfp_0_124_4429185 : single

axiom eq_128 : is_finite(sfp_0_124_4429185)

axiom eq_1281 : (value(sfp_0_124_4429185) = (12817793.0 / 67108864.0))

logic ust_137 : single

axiom eq_129 : (value(ust_137) = (12817793.0 / 67108864.0))

axiom eq_1291 : (sign1(ust_137) = Pos)

axiom eq_1292 : is_finite(ust_137)

logic s_mul__t_3__t_29__t_137 : single

axiom eq_130 : mul_post(NearestTiesToEven, x4, ust_137,
  s_mul__t_3__t_29__t_137)

logic ust_138 : single

axiom eq_131 : mul_post(NearestTiesToEven, x4, ust_137, ust_138)

logic s_add__t_3__t_135__t_138 : single

axiom eq_132 : add_post(NearestTiesToEven, ust_135, ust_138,
  s_add__t_3__t_135__t_138)

logic ust_139 : single

axiom eq_133 : add_post(NearestTiesToEven, ust_135, ust_138, ust_139)

axiom ax_9 : le(ust_116, ust_139)

logic sfp_1_122_5570035 : single

axiom eq_134 : is_finite(sfp_1_122_5570035)

axiom eq_1341 : (value(sfp_1_122_5570035) = ((-13958643.0) / 268435456.0))

logic ust_143 : single

axiom eq_135 : (value(ust_143) = ((-13958643.0) / 268435456.0))

axiom eq_1351 : (sign1(ust_143) = Neg)

axiom eq_1352 : is_finite(ust_143)

logic sfp_1_126_872414 : single

axiom eq_136 : is_finite(sfp_1_126_872414)

axiom eq_1361 : (value(sfp_1_126_872414) = ((-4630511.0) / 8388608.0))

logic ust_146 : single

axiom eq_137 : (value(ust_146) = ((-4630511.0) / 8388608.0))

axiom eq_1371 : (sign1(ust_146) = Neg)

axiom eq_1372 : is_finite(ust_146)

logic s_mul__t_3__t_13__t_146 : single

axiom eq_138 : mul_post(NearestTiesToEven, x0, ust_146,
  s_mul__t_3__t_13__t_146)

logic ust_147 : single

axiom eq_139 : mul_post(NearestTiesToEven, x0, ust_146, ust_147)

logic s_add__t_3__t_34__t_147 : single

axiom eq_140 : add_post(NearestTiesToEven, ust_34, ust_147,
  s_add__t_3__t_34__t_147)

logic ust_148 : single

axiom eq_1411 : add_post(NearestTiesToEven, ust_34, ust_147, ust_148)

logic sfp_0_126_1006633 : single

axiom eq_142 : is_finite(sfp_0_126_1006633)

axiom eq_1421 : (value(sfp_0_126_1006633) = (9395241.0 / 16777216.0))

logic ust_150 : single

axiom eq_143 : (value(ust_150) = (9395241.0 / 16777216.0))

axiom eq_1431 : (sign1(ust_150) = Pos)

axiom eq_1432 : is_finite(ust_150)

logic s_mul__t_3__t_17__t_150 : single

axiom eq_144 : mul_post(NearestTiesToEven, x1, ust_150,
  s_mul__t_3__t_17__t_150)

logic ust_151 : single

axiom eq_145 : mul_post(NearestTiesToEven, x1, ust_150, ust_151)

logic s_add__t_3__t_148__t_151 : single

axiom eq_146 : add_post(NearestTiesToEven, ust_148, ust_151,
  s_add__t_3__t_148__t_151)

logic ust_152 : single

axiom eq_147 : add_post(NearestTiesToEven, ust_148, ust_151, ust_152)

logic sfp_1_126_2382364 : single

axiom eq_148 : is_finite(sfp_1_126_2382364)

axiom eq_1481 : (value(sfp_1_126_2382364) = ((-2692743.0) / 4194304.0))

logic ust_155 : single

axiom eq_149 : (value(ust_155) = ((-2692743.0) / 4194304.0))

axiom eq_1491 : (sign1(ust_155) = Neg)

axiom eq_1492 : is_finite(ust_155)

logic s_mul__t_3__t_21__t_155 : single

axiom eq_150 : mul_post(NearestTiesToEven, x2, ust_155,
  s_mul__t_3__t_21__t_155)

logic ust_156 : single

axiom eq_1511 : mul_post(NearestTiesToEven, x2, ust_155, ust_156)

logic s_add__t_3__t_152__t_156 : single

axiom eq_1521 : add_post(NearestTiesToEven, ust_152, ust_156,
  s_add__t_3__t_152__t_156)

logic ust_157 : single

axiom eq_153 : add_post(NearestTiesToEven, ust_152, ust_156, ust_157)

logic sfp_1_123_8254390 : single

axiom eq_154 : is_finite(sfp_1_123_8254390)

axiom eq_1541 : (value(sfp_1_123_8254390) = ((-8321499.0) / 67108864.0))

logic ust_160 : single

axiom eq_155 : (value(ust_160) = ((-8321499.0) / 67108864.0))

axiom eq_1551 : (sign1(ust_160) = Neg)

axiom eq_1552 : is_finite(ust_160)

logic s_mul__t_3__t_25__t_160 : single

axiom eq_156 : mul_post(NearestTiesToEven, x3, ust_160,
  s_mul__t_3__t_25__t_160)

logic ust_161 : single

axiom eq_157 : mul_post(NearestTiesToEven, x3, ust_160, ust_161)

logic s_add__t_3__t_157__t_161 : single

axiom eq_158 : add_post(NearestTiesToEven, ust_157, ust_161,
  s_add__t_3__t_157__t_161)

logic ust_162 : single

axiom eq_159 : add_post(NearestTiesToEven, ust_157, ust_161, ust_162)

logic sfp_0_125_570425 : single

axiom eq_160 : is_finite(sfp_0_125_570425)

axiom eq_1601 : (value(sfp_0_125_570425) = (8959033.0 / 33554432.0))

logic ust_164 : single

axiom eq_161 : (value(ust_164) = (8959033.0 / 33554432.0))

axiom eq_1611 : (sign1(ust_164) = Pos)

axiom eq_1612 : is_finite(ust_164)

logic s_mul__t_3__t_29__t_164 : single

axiom eq_162 : mul_post(NearestTiesToEven, x4, ust_164,
  s_mul__t_3__t_29__t_164)

logic ust_165 : single

axiom eq_163 : mul_post(NearestTiesToEven, x4, ust_164, ust_165)

logic s_add__t_3__t_162__t_165 : single

axiom eq_164 : add_post(NearestTiesToEven, ust_162, ust_165,
  s_add__t_3__t_162__t_165)

logic ust_166 : single

axiom eq_165 : add_post(NearestTiesToEven, ust_162, ust_165, ust_166)

axiom ax_10 : le(ust_166, ust_143)

logic sfp_1_124_6979321 : single

axiom eq_166 : is_finite(sfp_1_124_6979321)

axiom eq_1661 : (value(sfp_1_124_6979321) = ((-15367929.0) / 67108864.0))

logic ust_170 : single

axiom eq_167 : (value(ust_170) = ((-15367929.0) / 67108864.0))

axiom eq_1671 : (sign1(ust_170) = Neg)

axiom eq_1672 : is_finite(ust_170)

logic sfp_0_125_4462739 : single

axiom eq_168 : is_finite(sfp_0_125_4462739)

axiom eq_1681 : (value(sfp_0_125_4462739) = (12851347.0 / 33554432.0))

logic ust_172 : single

axiom eq_169 : (value(ust_172) = (12851347.0 / 33554432.0))

axiom eq_1691 : (sign1(ust_172) = Pos)

axiom eq_1692 : is_finite(ust_172)

logic s_mul__t_3__t_13__t_172 : single

axiom eq_170 : mul_post(NearestTiesToEven, x0, ust_172,
  s_mul__t_3__t_13__t_172)

logic ust_173 : single

axiom eq_171 : mul_post(NearestTiesToEven, x0, ust_172, ust_173)

logic s_add__t_3__t_34__t_173 : single

axiom eq_172 : add_post(NearestTiesToEven, ust_34, ust_173,
  s_add__t_3__t_34__t_173)

logic ust_174 : single

axiom eq_173 : add_post(NearestTiesToEven, ust_34, ust_173, ust_174)

logic sfp_1_126_1056964 : single

axiom eq_174 : is_finite(sfp_1_126_1056964)

axiom eq_1741 : (value(sfp_1_126_1056964) = ((-2361393.0) / 4194304.0))

logic ust_177 : single

axiom eq_175 : (value(ust_177) = ((-2361393.0) / 4194304.0))

axiom eq_1751 : (sign1(ust_177) = Neg)

axiom eq_1752 : is_finite(ust_177)

logic s_mul__t_3__t_17__t_177 : single

axiom eq_176 : mul_post(NearestTiesToEven, x1, ust_177,
  s_mul__t_3__t_17__t_177)

logic ust_178 : single

axiom eq_177 : mul_post(NearestTiesToEven, x1, ust_177, ust_178)

logic s_add__t_3__t_174__t_178 : single

axiom eq_178 : add_post(NearestTiesToEven, ust_174, ust_178,
  s_add__t_3__t_174__t_178)

logic ust_179 : single

axiom eq_179 : add_post(NearestTiesToEven, ust_174, ust_178, ust_179)

logic sfp_1_122_2617245 : single

axiom eq_180 : is_finite(sfp_1_122_2617245)

axiom eq_1801 : (value(sfp_1_122_2617245) = ((-11005853.0) / 268435456.0))

logic ust_182 : single

axiom eq_181 : (value(ust_182) = ((-11005853.0) / 268435456.0))

axiom eq_1811 : (sign1(ust_182) = Neg)

axiom eq_1812 : is_finite(ust_182)

logic s_mul__t_3__t_21__t_182 : single

axiom eq_182 : mul_post(NearestTiesToEven, x2, ust_182,
  s_mul__t_3__t_21__t_182)

logic ust_183 : single

axiom eq_183 : mul_post(NearestTiesToEven, x2, ust_182, ust_183)

logic s_add__t_3__t_179__t_183 : single

axiom eq_184 : add_post(NearestTiesToEven, ust_179, ust_183,
  s_add__t_3__t_179__t_183)

logic ust_184 : single

axiom eq_185 : add_post(NearestTiesToEven, ust_179, ust_183, ust_184)

logic sfp_1_126_620756 : single

axiom eq_186 : is_finite(sfp_1_126_620756)

axiom eq_1861 : (value(sfp_1_126_620756) = ((-2252341.0) / 4194304.0))

logic ust_187 : single

axiom eq_187 : (value(ust_187) = ((-2252341.0) / 4194304.0))

axiom eq_1871 : (sign1(ust_187) = Neg)

axiom eq_1872 : is_finite(ust_187)

logic s_mul__t_3__t_25__t_187 : single

axiom eq_188 : mul_post(NearestTiesToEven, x3, ust_187,
  s_mul__t_3__t_25__t_187)

logic ust_188 : single

axiom eq_189 : mul_post(NearestTiesToEven, x3, ust_187, ust_188)

logic s_add__t_3__t_184__t_188 : single

axiom eq_190 : add_post(NearestTiesToEven, ust_184, ust_188,
  s_add__t_3__t_184__t_188)

logic ust_189 : single

axiom eq_191 : add_post(NearestTiesToEven, ust_184, ust_188, ust_189)

logic sfp_1_126_5452595 : single

axiom eq_192 : is_finite(sfp_1_126_5452595)

axiom eq_1921 : (value(sfp_1_126_5452595) = ((-13841203.0) / 16777216.0))

logic ust_192 : single

axiom eq_193 : (value(ust_192) = ((-13841203.0) / 16777216.0))

axiom eq_1931 : (sign1(ust_192) = Neg)

axiom eq_1932 : is_finite(ust_192)

logic s_mul__t_3__t_29__t_192 : single

axiom eq_194 : mul_post(NearestTiesToEven, x4, ust_192,
  s_mul__t_3__t_29__t_192)

logic ust_193 : single

axiom eq_195 : mul_post(NearestTiesToEven, x4, ust_192, ust_193)

logic s_add__t_3__t_189__t_193 : single

axiom eq_196 : add_post(NearestTiesToEven, ust_189, ust_193,
  s_add__t_3__t_189__t_193)

logic ust_194 : single

axiom eq_197 : add_post(NearestTiesToEven, ust_189, ust_193, ust_194)

axiom ax_11 : le(ust_194, ust_170)

logic sfp_0_125_4697619 : single

axiom eq_198 : is_finite(sfp_0_125_4697619)

axiom eq_1981 : (value(sfp_0_125_4697619) = (13086227.0 / 33554432.0))

logic ust_197 : single

axiom eq_199 : (value(ust_197) = (13086227.0 / 33554432.0))

axiom eq_1991 : (sign1(ust_197) = Pos)

axiom eq_1992 : is_finite(ust_197)

logic sfp_1_126_7683964 : single

axiom eq_200 : is_finite(sfp_1_126_7683964)

axiom eq_2001 : (value(sfp_1_126_7683964) = ((-4018143.0) / 4194304.0))

logic ust_200 : single

axiom eq_2011 : (value(ust_200) = ((-4018143.0) / 4194304.0))

axiom eq_2012 : (sign1(ust_200) = Neg)

axiom eq_2013 : is_finite(ust_200)

logic s_mul__t_3__t_13__t_200 : single

axiom eq_202 : mul_post(NearestTiesToEven, x0, ust_200,
  s_mul__t_3__t_13__t_200)

logic ust_201 : single

axiom eq_203 : mul_post(NearestTiesToEven, x0, ust_200, ust_201)

logic s_add__t_3__t_34__t_201 : single

axiom eq_204 : add_post(NearestTiesToEven, ust_34, ust_201,
  s_add__t_3__t_34__t_201)

logic ust_202 : single

axiom eq_205 : add_post(NearestTiesToEven, ust_34, ust_201, ust_202)

logic sfp_0_124_6039797 : single

axiom eq_206 : is_finite(sfp_0_124_6039797)

axiom eq_2061 : (value(sfp_0_124_6039797) = (14428405.0 / 67108864.0))

logic ust_204 : single

axiom eq_207 : (value(ust_204) = (14428405.0 / 67108864.0))

axiom eq_2071 : (sign1(ust_204) = Pos)

axiom eq_2072 : is_finite(ust_204)

logic s_mul__t_3__t_17__t_204 : single

axiom eq_208 : mul_post(NearestTiesToEven, x1, ust_204,
  s_mul__t_3__t_17__t_204)

logic ust_205 : single

axiom eq_209 : mul_post(NearestTiesToEven, x1, ust_204, ust_205)

logic s_add__t_3__t_202__t_205 : single

axiom eq_210 : add_post(NearestTiesToEven, ust_202, ust_205,
  s_add__t_3__t_202__t_205)

logic ust_206 : single

axiom eq_2111 : add_post(NearestTiesToEven, ust_202, ust_205, ust_206)

logic sfp_0_120_6643778 : single

axiom eq_2121 : is_finite(sfp_0_120_6643778)

axiom eq_2122 : (value(sfp_0_120_6643778) = (7516193.0 / 536870912.0))

logic ust_208 : single

axiom eq_2131 : (value(ust_208) = (7516193.0 / 536870912.0))

axiom eq_2132 : (sign1(ust_208) = Pos)

axiom eq_2133 : is_finite(ust_208)

logic s_mul__t_3__t_21__t_208 : single

axiom eq_214 : mul_post(NearestTiesToEven, x2, ust_208,
  s_mul__t_3__t_21__t_208)

logic ust_209 : single

axiom eq_215 : mul_post(NearestTiesToEven, x2, ust_208, ust_209)

logic s_add__t_3__t_206__t_209 : single

axiom eq_216 : add_post(NearestTiesToEven, ust_206, ust_209,
  s_add__t_3__t_206__t_209)

logic ust_210 : single

axiom eq_217 : add_post(NearestTiesToEven, ust_206, ust_209, ust_210)

logic sfp_1_125_8254390 : single

axiom eq_218 : is_finite(sfp_1_125_8254390)

axiom eq_2181 : (value(sfp_1_125_8254390) = ((-8321499.0) / 16777216.0))

logic ust_213 : single

axiom eq_219 : (value(ust_213) = ((-8321499.0) / 16777216.0))

axiom eq_2191 : (sign1(ust_213) = Neg)

axiom eq_2192 : is_finite(ust_213)

logic s_mul__t_3__t_25__t_213 : single

axiom eq_220 : mul_post(NearestTiesToEven, x3, ust_213,
  s_mul__t_3__t_25__t_213)

logic ust_214 : single

axiom eq_221 : mul_post(NearestTiesToEven, x3, ust_213, ust_214)

logic s_add__t_3__t_210__t_214 : single

axiom eq_222 : add_post(NearestTiesToEven, ust_210, ust_214,
  s_add__t_3__t_210__t_214)

logic ust_215 : single

axiom eq_223 : add_post(NearestTiesToEven, ust_210, ust_214, ust_215)

logic sfp_1_125_3019898 : single

axiom eq_224 : is_finite(sfp_1_125_3019898)

axiom eq_2241 : (value(sfp_1_125_3019898) = ((-5704253.0) / 16777216.0))

logic ust_218 : single

axiom eq_225 : (value(ust_218) = ((-5704253.0) / 16777216.0))

axiom eq_2251 : (sign1(ust_218) = Neg)

axiom eq_2252 : is_finite(ust_218)

logic s_mul__t_3__t_29__t_218 : single

axiom eq_226 : mul_post(NearestTiesToEven, x4, ust_218,
  s_mul__t_3__t_29__t_218)

logic ust_219 : single

axiom eq_227 : mul_post(NearestTiesToEven, x4, ust_218, ust_219)

logic s_add__t_3__t_215__t_219 : single

axiom eq_228 : add_post(NearestTiesToEven, ust_215, ust_219,
  s_add__t_3__t_215__t_219)

logic ust_220 : single

axiom eq_229 : add_post(NearestTiesToEven, ust_215, ust_219, ust_220)

axiom ax_12 : le(ust_197, ust_220)

logic sfp_1_125_6912213 : single

axiom eq_230 : is_finite(sfp_1_125_6912213)

axiom eq_2301 : (value(sfp_1_125_6912213) = ((-15300821.0) / 33554432.0))

logic ust_224 : single

axiom eq_231 : (value(ust_224) = ((-15300821.0) / 33554432.0))

axiom eq_2311 : (sign1(ust_224) = Neg)

axiom eq_2312 : is_finite(ust_224)

logic sfp_0_125_3623878 : single

axiom eq_232 : is_finite(sfp_0_125_3623878)

axiom eq_2321 : (value(sfp_0_125_3623878) = (6006243.0 / 16777216.0))

logic ust_226 : single

axiom eq_233 : (value(ust_226) = (6006243.0 / 16777216.0))

axiom eq_2331 : (sign1(ust_226) = Pos)

axiom eq_2332 : is_finite(ust_226)

logic s_mul__t_3__t_13__t_226 : single

axiom eq_234 : mul_post(NearestTiesToEven, x0, ust_226,
  s_mul__t_3__t_13__t_226)

logic ust_227 : single

axiom eq_235 : mul_post(NearestTiesToEven, x0, ust_226, ust_227)

logic s_add__t_3__t_34__t_227 : single

axiom eq_236 : add_post(NearestTiesToEven, ust_34, ust_227,
  s_add__t_3__t_34__t_227)

logic ust_228 : single

axiom eq_237 : add_post(NearestTiesToEven, ust_34, ust_227, ust_228)

logic sfp_1_126_352321 : single

axiom eq_238 : is_finite(sfp_1_126_352321)

axiom eq_2381 : (value(sfp_1_126_352321) = ((-8740929.0) / 16777216.0))

logic ust_231 : single

axiom eq_239 : (value(ust_231) = ((-8740929.0) / 16777216.0))

axiom eq_2391 : (sign1(ust_231) = Neg)

axiom eq_2392 : is_finite(ust_231)

logic s_mul__t_3__t_17__t_231 : single

axiom eq_240 : mul_post(NearestTiesToEven, x1, ust_231,
  s_mul__t_3__t_17__t_231)

logic ust_232 : single

axiom eq_241 : mul_post(NearestTiesToEven, x1, ust_231, ust_232)

logic s_add__t_3__t_228__t_232 : single

axiom eq_242 : add_post(NearestTiesToEven, ust_228, ust_232,
  s_add__t_3__t_228__t_232)

logic ust_233 : single

axiom eq_243 : add_post(NearestTiesToEven, ust_228, ust_232, ust_233)

logic sfp_1_125_5737808 : single

axiom eq_244 : is_finite(sfp_1_125_5737808)

axiom eq_2441 : (value(sfp_1_125_5737808) = ((-882901.0) / 2097152.0))

logic ust_236 : single

axiom eq_245 : (value(ust_236) = ((-882901.0) / 2097152.0))

axiom eq_2451 : (sign1(ust_236) = Neg)

axiom eq_2452 : is_finite(ust_236)

logic s_mul__t_3__t_21__t_236 : single

axiom eq_246 : mul_post(NearestTiesToEven, x2, ust_236,
  s_mul__t_3__t_21__t_236)

logic ust_237 : single

axiom eq_247 : mul_post(NearestTiesToEven, x2, ust_236, ust_237)

logic s_add__t_3__t_233__t_237 : single

axiom eq_248 : add_post(NearestTiesToEven, ust_233, ust_237,
  s_add__t_3__t_233__t_237)

logic ust_238 : single

axiom eq_249 : add_post(NearestTiesToEven, ust_233, ust_237, ust_238)

logic sfp_1_126_3087008 : single

axiom eq_250 : is_finite(sfp_1_126_3087008)

axiom eq_2501 : (value(sfp_1_126_3087008) = ((-358613.0) / 524288.0))

logic ust_241 : single

axiom eq_251 : (value(ust_241) = ((-358613.0) / 524288.0))

axiom eq_2511 : (sign1(ust_241) = Neg)

axiom eq_2512 : is_finite(ust_241)

logic s_mul__t_3__t_25__t_241 : single

axiom eq_252 : mul_post(NearestTiesToEven, x3, ust_241,
  s_mul__t_3__t_25__t_241)

logic ust_242 : single

axiom eq_253 : mul_post(NearestTiesToEven, x3, ust_241, ust_242)

logic s_add__t_3__t_238__t_242 : single

axiom eq_254 : add_post(NearestTiesToEven, ust_238, ust_242,
  s_add__t_3__t_238__t_242)

logic ust_243 : single

axiom eq_255 : add_post(NearestTiesToEven, ust_238, ust_242, ust_243)

logic sfp_0_124_1006633 : single

axiom eq_256 : is_finite(sfp_0_124_1006633)

axiom eq_2561 : (value(sfp_0_124_1006633) = (9395241.0 / 67108864.0))

logic ust_245 : single

axiom eq_257 : (value(ust_245) = (9395241.0 / 67108864.0))

axiom eq_2571 : (sign1(ust_245) = Pos)

axiom eq_2572 : is_finite(ust_245)

logic s_mul__t_3__t_29__t_245 : single

axiom eq_258 : mul_post(NearestTiesToEven, x4, ust_245,
  s_mul__t_3__t_29__t_245)

logic ust_246 : single

axiom eq_259 : mul_post(NearestTiesToEven, x4, ust_245, ust_246)

logic s_add__t_3__t_243__t_246 : single

axiom eq_260 : add_post(NearestTiesToEven, ust_243, ust_246,
  s_add__t_3__t_243__t_246)

logic ust_247 : single

axiom eq_2611 : add_post(NearestTiesToEven, ust_243, ust_246, ust_247)

axiom ax_13 : le(ust_224, ust_247)

logic sfp_1_126_5721030 : single

axiom eq_262 : is_finite(sfp_1_126_5721030)

axiom eq_2621 : (value(sfp_1_126_5721030) = ((-7054819.0) / 8388608.0))

logic ust_251 : single

axiom eq_263 : (value(ust_251) = ((-7054819.0) / 8388608.0))

axiom eq_2631 : (sign1(ust_251) = Neg)

axiom eq_2632 : is_finite(ust_251)

logic sfp_0_126_6392118 : single

axiom eq_264 : is_finite(sfp_0_126_6392118)

axiom eq_2641 : (value(sfp_0_126_6392118) = (7390363.0 / 8388608.0))

logic ust_253 : single

axiom eq_265 : (value(ust_253) = (7390363.0 / 8388608.0))

axiom eq_2651 : (sign1(ust_253) = Pos)

axiom eq_2652 : is_finite(ust_253)

logic s_mul__t_3__t_13__t_253 : single

axiom eq_266 : mul_post(NearestTiesToEven, x0, ust_253,
  s_mul__t_3__t_13__t_253)

logic ust_254 : single

axiom eq_267 : mul_post(NearestTiesToEven, x0, ust_253, ust_254)

logic s_add__t_3__t_34__t_254 : single

axiom eq_268 : add_post(NearestTiesToEven, ust_34, ust_254,
  s_add__t_3__t_34__t_254)

logic ust_255 : single

axiom eq_269 : add_post(NearestTiesToEven, ust_34, ust_254, ust_255)

logic sfp_1_126_4831838 : single

axiom eq_270 : is_finite(sfp_1_126_4831838)

axiom eq_2701 : (value(sfp_1_126_4831838) = ((-6610223.0) / 8388608.0))

logic ust_258 : single

axiom eq_2711 : (value(ust_258) = ((-6610223.0) / 8388608.0))

axiom eq_2712 : (sign1(ust_258) = Neg)

axiom eq_2713 : is_finite(ust_258)

logic s_mul__t_3__t_17__t_258 : single

axiom eq_2721 : mul_post(NearestTiesToEven, x1, ust_258,
  s_mul__t_3__t_17__t_258)

logic ust_259 : single

axiom eq_273 : mul_post(NearestTiesToEven, x1, ust_258, ust_259)

logic s_add__t_3__t_255__t_259 : single

axiom eq_274 : add_post(NearestTiesToEven, ust_255, ust_259,
  s_add__t_3__t_255__t_259)

logic ust_260 : single

axiom eq_275 : add_post(NearestTiesToEven, ust_255, ust_259, ust_260)

logic sfp_1_126_3640656 : single

axiom eq_276 : is_finite(sfp_1_126_3640656)

axiom eq_2761 : (value(sfp_1_126_3640656) = ((-751829.0) / 1048576.0))

logic ust_263 : single

axiom eq_277 : (value(ust_263) = ((-751829.0) / 1048576.0))

axiom eq_2771 : (sign1(ust_263) = Neg)

axiom eq_2772 : is_finite(ust_263)

logic s_mul__t_3__t_21__t_263 : single

axiom eq_278 : mul_post(NearestTiesToEven, x2, ust_263,
  s_mul__t_3__t_21__t_263)

logic ust_264 : single

axiom eq_279 : mul_post(NearestTiesToEven, x2, ust_263, ust_264)

logic s_add__t_3__t_260__t_264 : single

axiom eq_280 : add_post(NearestTiesToEven, ust_260, ust_264,
  s_add__t_3__t_260__t_264)

logic ust_265 : single

axiom eq_281 : add_post(NearestTiesToEven, ust_260, ust_264, ust_265)

logic sfp_1_126_3355443 : single

axiom eq_282 : is_finite(sfp_1_126_3355443)

axiom eq_2821 : (value(sfp_1_126_3355443) = ((-11744051.0) / 16777216.0))

logic ust_268 : single

axiom eq_283 : (value(ust_268) = ((-11744051.0) / 16777216.0))

axiom eq_2831 : (sign1(ust_268) = Neg)

axiom eq_2832 : is_finite(ust_268)

logic s_mul__t_3__t_25__t_268 : single

axiom eq_284 : mul_post(NearestTiesToEven, x3, ust_268,
  s_mul__t_3__t_25__t_268)

logic ust_269 : single

axiom eq_285 : mul_post(NearestTiesToEven, x3, ust_268, ust_269)

logic s_add__t_3__t_265__t_269 : single

axiom eq_286 : add_post(NearestTiesToEven, ust_265, ust_269,
  s_add__t_3__t_265__t_269)

logic ust_270 : single

axiom eq_287 : add_post(NearestTiesToEven, ust_265, ust_269, ust_270)

logic sfp_1_121_8254390 : single

axiom eq_288 : is_finite(sfp_1_121_8254390)

axiom eq_2881 : (value(sfp_1_121_8254390) = ((-8321499.0) / 268435456.0))

logic ust_273 : single

axiom eq_289 : (value(ust_273) = ((-8321499.0) / 268435456.0))

axiom eq_2891 : (sign1(ust_273) = Neg)

axiom eq_2892 : is_finite(ust_273)

logic s_mul__t_3__t_29__t_273 : single

axiom eq_290 : mul_post(NearestTiesToEven, x4, ust_273,
  s_mul__t_3__t_29__t_273)

logic ust_274 : single

axiom eq_291 : mul_post(NearestTiesToEven, x4, ust_273, ust_274)

logic s_add__t_3__t_270__t_274 : single

axiom eq_292 : add_post(NearestTiesToEven, ust_270, ust_274,
  s_add__t_3__t_270__t_274)

logic ust_275 : single

axiom eq_293 : add_post(NearestTiesToEven, ust_270, ust_274, ust_275)

axiom ax_14 : le(ust_275, ust_251)

logic sfp_0_125_939523 : single

axiom eq_294 : is_finite(sfp_0_125_939523)

axiom eq_2941 : (value(sfp_0_125_939523) = (9328131.0 / 33554432.0))

logic ust_278 : single

axiom eq_295 : (value(ust_278) = (9328131.0 / 33554432.0))

axiom eq_2951 : (sign1(ust_278) = Pos)

axiom eq_2952 : is_finite(ust_278)

logic sfp_0_125_7482637 : single

axiom eq_296 : is_finite(sfp_0_125_7482637)

axiom eq_2961 : (value(sfp_0_125_7482637) = (15871245.0 / 33554432.0))

logic ust_280 : single

axiom eq_297 : (value(ust_280) = (15871245.0 / 33554432.0))

axiom eq_2971 : (sign1(ust_280) = Pos)

axiom eq_2972 : is_finite(ust_280)

logic s_mul__t_3__t_13__t_280 : single

axiom eq_298 : mul_post(NearestTiesToEven, x0, ust_280,
  s_mul__t_3__t_13__t_280)

logic ust_281 : single

axiom eq_299 : mul_post(NearestTiesToEven, x0, ust_280, ust_281)

logic s_add__t_3__t_34__t_281 : single

axiom eq_300 : add_post(NearestTiesToEven, ust_34, ust_281,
  s_add__t_3__t_34__t_281)

logic ust_282 : single

axiom eq_301 : add_post(NearestTiesToEven, ust_34, ust_281, ust_282)

logic sfp_0_126_5519704 : single

axiom eq_302 : is_finite(sfp_0_126_5519704)

axiom eq_3021 : (value(sfp_0_126_5519704) = (1738539.0 / 2097152.0))

logic ust_284 : single

axiom eq_303 : (value(ust_284) = (1738539.0 / 2097152.0))

axiom eq_3031 : (sign1(ust_284) = Pos)

axiom eq_3032 : is_finite(ust_284)

logic s_mul__t_3__t_17__t_284 : single

axiom eq_304 : mul_post(NearestTiesToEven, x1, ust_284,
  s_mul__t_3__t_17__t_284)

logic ust_285 : single

axiom eq_305 : mul_post(NearestTiesToEven, x1, ust_284, ust_285)

logic s_add__t_3__t_282__t_285 : single

axiom eq_306 : add_post(NearestTiesToEven, ust_282, ust_285,
  s_add__t_3__t_282__t_285)

logic ust_286 : single

axiom eq_307 : add_post(NearestTiesToEven, ust_282, ust_285, ust_286)

logic s_mul__t_3__t_12__t_21 : single

axiom eq_308 : mul_post(NearestTiesToEven, ust_12, x2,
  s_mul__t_3__t_12__t_21)

logic ust_287 : single

axiom eq_309 : mul_post(NearestTiesToEven, ust_12, x2, ust_287)

logic s_add__t_3__t_286__t_287 : single

axiom eq_310 : add_post(NearestTiesToEven, ust_286, ust_287,
  s_add__t_3__t_286__t_287)

logic ust_288 : single

axiom eq_3111 : add_post(NearestTiesToEven, ust_286, ust_287, ust_288)

logic sfp_0_125_7818182 : single

axiom eq_312 : is_finite(sfp_0_125_7818182)

axiom eq_3121 : (value(sfp_0_125_7818182) = (8103395.0 / 16777216.0))

logic ust_290 : single

axiom eq_313 : (value(ust_290) = (8103395.0 / 16777216.0))

axiom eq_3131 : (sign1(ust_290) = Pos)

axiom eq_3132 : is_finite(ust_290)

logic s_mul__t_3__t_25__t_290 : single

axiom eq_314 : mul_post(NearestTiesToEven, x3, ust_290,
  s_mul__t_3__t_25__t_290)

logic ust_291 : single

axiom eq_315 : mul_post(NearestTiesToEven, x3, ust_290, ust_291)

logic s_add__t_3__t_288__t_291 : single

axiom eq_316 : add_post(NearestTiesToEven, ust_288, ust_291,
  s_add__t_3__t_288__t_291)

logic ust_292 : single

axiom eq_317 : add_post(NearestTiesToEven, ust_288, ust_291, ust_292)

logic sfp_1_124_7247757 : single

axiom eq_318 : is_finite(sfp_1_124_7247757)

axiom eq_3181 : (value(sfp_1_124_7247757) = ((-15636365.0) / 67108864.0))

logic ust_295 : single

axiom eq_319 : (value(ust_295) = ((-15636365.0) / 67108864.0))

axiom eq_3191 : (sign1(ust_295) = Neg)

axiom eq_3192 : is_finite(ust_295)

logic s_mul__t_3__t_29__t_295 : single

axiom eq_320 : mul_post(NearestTiesToEven, x4, ust_295,
  s_mul__t_3__t_29__t_295)

logic ust_296 : single

axiom eq_3211 : mul_post(NearestTiesToEven, x4, ust_295, ust_296)

logic s_add__t_3__t_292__t_296 : single

axiom eq_3221 : add_post(NearestTiesToEven, ust_292, ust_296,
  s_add__t_3__t_292__t_296)

logic ust_297 : single

axiom eq_323 : add_post(NearestTiesToEven, ust_292, ust_296, ust_297)

axiom ax_15 : le(ust_297, ust_278)

goal g_1 : false
