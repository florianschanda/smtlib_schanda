(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo real arithmetic *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

logic match_mode : fpa_rounding_mode, 'a, 'a, 'a, 'a, 'a -> 'a

axiom match_mode_NearestTiesToEven :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToEven, z, z1, z2, z3, z4) = z))

axiom match_mode_ToZero :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(ToZero, z, z1, z2, z3, z4) = z1))

axiom match_mode_Up :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Up, z, z1, z2, z3, z4) = z2))

axiom match_mode_Down :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Down, z, z1, z2, z3, z4) = z3))

axiom match_mode_NearestTiesToAway :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToAway, z, z1, z2, z3, z4) = z4))

type single

axiom add_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x + y) / z) = ((x / z) + (y / z)))))

axiom sub_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x - y) / z) = ((x / z) - (y / z)))))

axiom neg_div :
  (forall x:real. forall y:real. ((not (y = 0.0)) ->
  (((-x) / y) = (-(x / y)))))

axiom assoc_mul_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x * y) / z) = (x * (y / z)))))

axiom assoc_div_mul :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> (((x / y) / z) = (x / (y * z)))))

axiom assoc_div_div :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> ((x / (y / z)) = ((x * z) / y))))

axiom CompatOrderMult :
  (forall x:real. forall y:real. forall z:real. ((x <= y) -> ((0.0 <= z) ->
  ((x * z) <= (y * z)))))

axiom CompatOrderMult1 :
  (forall x:int. forall y:int. forall z:int. ((x <= y) -> ((0 <= z) ->
  ((x * z) <= (y * z)))))

axiom Monotonic :
  (forall x:int. forall y:int. ((x <= y) ->
  (real_of_int(x) <= real_of_int(y))))

logic truncate : real -> int

axiom Truncate_int : (forall i:int. (truncate(real_of_int(i)) = i))

axiom Truncate_down_pos :
  (forall x:real. ((0.0 <= x) -> (real_of_int(truncate(x)) <= x)))

axiom Truncate_down_pos1 :
  (forall x:real. ((0.0 <= x) -> (x <  real_of_int((truncate(x) + 1)))))

axiom Truncate_up_neg :
  (forall x:real. ((x <= 0.0) -> (real_of_int((truncate(x) - 1)) <  x)))

axiom Truncate_up_neg1 :
  (forall x:real. ((x <= 0.0) -> (x <= real_of_int(truncate(x)))))

axiom Real_of_truncate :
  (forall x:real. ((x - 1.0) <= real_of_int(truncate(x))))

axiom Real_of_truncate1 :
  (forall x:real. (real_of_int(truncate(x)) <= (x + 1.0)))

axiom Truncate_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (truncate(x) <= truncate(y))))

axiom Truncate_monotonic_int1 :
  (forall x:real. forall i:int. ((x <= real_of_int(i)) ->
  (truncate(x) <= i)))

axiom Truncate_monotonic_int2 :
  (forall x:real. forall i:int. ((real_of_int(i) <= x) ->
  (i <= truncate(x))))

axiom Floor_int : (forall i:int. (int_floor(real_of_int(i)) = i))

axiom Ceil_int : (forall i:int. (int_ceil(real_of_int(i)) = i))

axiom Floor_down : (forall x:real. (real_of_int(int_floor(x)) <= x))

axiom Floor_down1 : (forall x:real. (x <  real_of_int((int_floor(x) + 1))))

axiom Ceil_up : (forall x:real. (real_of_int((int_ceil(x) - 1)) <  x))

axiom Ceil_up1 : (forall x:real. (x <= real_of_int(int_ceil(x))))

axiom Floor_monotonic :
  (forall x:real. forall y:real. ((x <= y) ->
  (int_floor(x) <= int_floor(y))))

axiom Ceil_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (int_ceil(x) <= int_ceil(y))))

function sqr(x: real) : real = (x * x)

axiom Sqrt_positive : (forall x:real. ((0.0 <= x) -> (0.0 <= sqrt_real(x))))

axiom Sqrt_square : (forall x:real. ((0.0 <= x) -> (sqr(sqrt_real(x)) = x)))

axiom Square_sqrt : (forall x:real. ((0.0 <= x) -> (sqrt_real((x * x)) = x)))

axiom Sqrt_mul :
  (forall x:real. forall y:real. (((0.0 <= x) and (0.0 <= y)) ->
  (sqrt_real((x * y)) = (sqrt_real(x) * sqrt_real(y)))))

axiom Sqrt_le :
  (forall x:real. forall y:real. (((0.0 <= x) and (x <= y)) ->
  (sqrt_real(x) <= sqrt_real(y))))

type class = Finite | Infinite | NaN

logic match_class : class, 'a, 'a, 'a -> 'a

axiom match_class_Finite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Finite, z, z1,
  z2) = z))

axiom match_class_Infinite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Infinite, z, z1,
  z2) = z1))

axiom match_class_NaN :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(NaN, z, z1,
  z2) = z2))

type sign = Neg | Pos

logic match_sign : sign, 'a, 'a -> 'a

axiom match_sign_Neg :
  (forall z:'a. forall z1:'a. (match_sign(Neg, z, z1) = z))

axiom match_sign_Pos :
  (forall z:'a. forall z1:'a. (match_sign(Pos, z, z1) = z1))

logic same_sign_real : sign, real -> prop

axiom Neg_case : (forall x:real. ((x <  0.0) -> same_sign_real(Neg, x)))

axiom Pos_case : (forall x:real. ((0.0 <  x) -> same_sign_real(Pos, x)))

axiom same_sign_real_inversion :
  (forall z:sign. forall z1:real. (same_sign_real(z, z1) -> (((z1 <  0.0) and
  (z = Neg)) or ((0.0 <  z1) and (z = Pos)))))

axiom same_sign_real_zero1 : (forall b:sign. (not same_sign_real(b, 0.0)))

axiom same_sign_real_zero2 :
  (forall x:real. (not (same_sign_real(Neg, x) and same_sign_real(Pos, x))))

axiom same_sign_real_zero3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> (not (x = 0.0))))

axiom same_sign_real_correct2 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((x <  0.0) ->
  (b = Neg))))

axiom same_sign_real_correct21 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Neg) ->
  (x <  0.0))))

axiom same_sign_real_correct3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((0.0 <  x) ->
  (b = Pos))))

axiom same_sign_real_correct31 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Pos) ->
  (0.0 <  x))))

axiom Abs_le :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> ((-y) <= x)))

axiom Abs_le1 :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> (x <= y)))

axiom Abs_le2 :
  (forall x:real. forall y:real. ((((-y) <= x) and (x <= y)) ->
  (abs_real(x) <= y)))

axiom Abs_pos : (forall x:real. (0.0 <= abs_real(x)))

axiom Abs_sum :
  (forall x:real. forall y:real.
  (abs_real((x + y)) <= (abs_real(x) + abs_real(y))))

axiom Abs_prod :
  (forall x:real. forall y:real.
  (abs_real((x * y)) = (abs_real(x) * abs_real(y))))

axiom triangular_inequality :
  (forall x:real. forall y:real. forall z:real.
  (abs_real((x - z)) <= (abs_real((x - y)) + abs_real((y - z)))))

logic value : single -> real

predicate no_overflow(m: fpa_rounding_mode, x: real) =
  (abs_real(float32(m, x)) <= 0x1.FFFFFEp127)

axiom Bounded_real_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> no_overflow(m, x)))

axiom Round_value :
  (forall m:fpa_rounding_mode. forall x:single.
  (float32(m, value(x)) = value(x)))

axiom Bounded_value :
  (forall x:single. (abs_real(value(x)) <= 0x1.FFFFFEp127))

axiom Exact_rounding_for_integers :
  (forall m:fpa_rounding_mode. forall i:int. ((((-16777216) <= i) and
  (i <= 16777216)) -> (float32(m, real_of_int(i)) = real_of_int(i))))

axiom Round_down_le : (forall x:real. (float32(Down, x) <= x))

axiom Round_up_ge : (forall x:real. (x <= float32(Up, x)))

axiom Round_down_neg :
  (forall x:real. (float32(Down, (-x)) = (-float32(Up, x))))

axiom Round_up_neg :
  (forall x:real. (float32(Up, (-x)) = (-float32(Down, x))))

logic round_logic : fpa_rounding_mode, real -> single

axiom Round_logic_def :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

logic class1 : single -> class

predicate is_finite(x: single) = (class1(x) = Finite)

predicate is_infinite(x: single) = (class1(x) = Infinite)

predicate is_NaN(x: single) = (class1(x) = NaN)

predicate is_not_NaN(x: single) = (is_finite(x) or is_infinite(x))

axiom is_not_NaN1 : (forall x:single. (is_not_NaN(x) -> (not is_NaN(x))))

axiom is_not_NaN2 : (forall x:single. ((not is_NaN(x)) -> is_not_NaN(x)))

logic sign1 : single -> sign

predicate same_sign_real1(x: single, y: real) = same_sign_real(sign1(x), y)

predicate same_sign(x: single, y: single) = (sign1(x) = sign1(y))

predicate diff_sign(x: single, y: single) = (not (sign1(x) = sign1(y)))

predicate sign_zero_result(m: fpa_rounding_mode, x: single) =
  ((value(x) = 0.0) -> ((((((m = NearestTiesToEven) -> (sign1(x) = Pos)) and
  ((m = ToZero) -> (sign1(x) = Pos))) and ((m = Up) -> (sign1(x) = Pos))) and
  ((m = Down) -> (sign1(x) = Neg))) and ((m = NearestTiesToAway) ->
  (sign1(x) = Pos))))

predicate is_minus_infinity(x: single) = (is_infinite(x) and
  (sign1(x) = Neg))

predicate is_plus_infinity(x: single) = (is_infinite(x) and (sign1(x) = Pos))

predicate is_gen_zero(x: single) = (is_finite(x) and (value(x) = 0.0))

predicate is_gen_zero_plus(x: single) = (is_gen_zero(x) and (sign1(x) = Pos))

predicate is_gen_zero_minus(x: single) = (is_gen_zero(x) and
  (sign1(x) = Neg))

axiom finite_sign :
  (forall x:single. (((class1(x) = Finite) and (not (value(x) = 0.0))) ->
  same_sign_real1(x, value(x))))

axiom finite_sign_pos1 :
  (forall x:single. (((class1(x) = Finite) and (0.0 <  value(x))) ->
  (sign1(x) = Pos)))

axiom finite_sign_pos2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Pos))) -> (0.0 <  value(x))))

axiom finite_sign_neg1 :
  (forall x:single. (((class1(x) = Finite) and (value(x) <  0.0)) ->
  (sign1(x) = Neg)))

axiom finite_sign_neg2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Neg))) -> (value(x) <  0.0)))

axiom diff_sign_trans :
  (forall x:single. forall y:single. forall z:single. ((diff_sign(x, y) and
  diff_sign(y, z)) -> same_sign(x, z)))

axiom diff_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and ((value(x) * value(y)) <  0.0))) -> diff_sign(x,
  y)))

axiom same_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and same_sign(x, y))) ->
  (0.0 <= (value(x) * value(y)))))

predicate overflow_value(m: fpa_rounding_mode, x: single) =
  (((sign1(x) = Neg) -> ((((((m = NearestTiesToEven) -> is_infinite(x)) and
  ((m = ToZero) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Up) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Down) -> is_infinite(x))) and ((m = NearestTiesToAway) ->
  is_infinite(x)))) and ((sign1(x) = Pos) -> ((((((m = NearestTiesToEven) ->
  is_infinite(x)) and ((m = ToZero) -> (is_finite(x) and
  (value(x) = 0x1.FFFFFEp127)))) and ((m = Up) -> is_infinite(x))) and
  ((m = Down) -> (is_finite(x) and (value(x) = 0x1.FFFFFEp127)))) and
  ((m = NearestTiesToAway) -> is_infinite(x)))))

axiom round1 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  is_finite(round_logic(m, x))))

axiom round11 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

axiom round2 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  same_sign_real1(round_logic(m, x), x)))

axiom round21 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  overflow_value(m, round_logic(m, x))))

axiom round_of_zero :
  (forall m:fpa_rounding_mode. is_gen_zero(round_logic(m, 0.0)))

axiom round_logic_le :
  (forall m:fpa_rounding_mode. forall x:real. (is_finite(round_logic(m,
  x)) -> (abs_real(value(round_logic(m, x))) <= 0x1.FFFFFEp127)))

axiom round_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> is_finite(round_logic(m, x))))

axiom round_no_overflow1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> (value(round_logic(m,
  x)) = float32(m, x))))

logic min : real

axiom positive_constant :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> is_finite(round_logic(m, x))))

axiom positive_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (0.0 <  value(round_logic(m, x)))))

axiom positive_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (sign1(round_logic(m, x)) = Pos)))

axiom negative_constant :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> is_finite(round_logic(m, x))))

axiom negative_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (value(round_logic(m, x)) <  0.0)))

axiom negative_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (sign1(round_logic(m, x)) = Neg)))

axiom is_gen_zero_comp1 :
  (forall x:single. forall y:single. ((is_gen_zero(x) and
  ((value(x) = value(y)) and is_finite(y))) -> is_gen_zero(y)))

axiom is_gen_zero_comp2 :
  (forall x:single. forall y:single. ((is_finite(x) and
  ((not is_gen_zero(x)) and (value(x) = value(y)))) -> (not is_gen_zero(y))))

predicate add_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and same_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((same_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not same_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) + value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) + value(y)))) and ((same_sign(x, y) ->
  same_sign(r, x)) and ((not same_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) + value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) + value(y))) and overflow_value(m, r))))))))

predicate sub_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and diff_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((diff_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not diff_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) - value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) - value(y)))) and ((diff_sign(x, y) ->
  same_sign(r, x)) and ((not diff_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) - value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) - value(y))) and overflow_value(m, r))))))))

predicate product_sign(z: single, x: single, y: single) = ((same_sign(x,
  y) -> (sign1(z) = Pos)) and (diff_sign(x, y) -> (sign1(z) = Neg)))

predicate mul_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_gen_zero(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_infinite(y) and
  (not (value(x) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_gen_zero(y)) -> is_NaN(r)) and (((is_infinite(x) and (is_finite(y) and
  (not (value(y) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_infinite(r)) and (((is_finite(x) and
  (is_finite(y) and no_overflow(m, (value(x) * value(y))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) * value(y)))))) and
  (((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) * value(y)))))) -> overflow_value(m, r)) and ((not is_NaN(r)) ->
  product_sign(r, x, y))))))))))

predicate neg_post(x: single, r: single) = ((is_NaN(x) -> is_NaN(r)) and
  ((is_infinite(x) -> is_infinite(r)) and ((is_finite(x) -> (is_finite(r) and
  (value(r) = (-value(x))))) and ((not is_NaN(x)) -> diff_sign(r, x)))))

predicate div_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> is_gen_zero(r)) and (((is_infinite(x) and
  is_finite(y)) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_finite(y) and
  ((not (value(y) = 0.0)) and no_overflow(m, (value(x) / value(y)))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) / value(y)))))) and
  (((is_finite(x) and (is_finite(y) and ((not (value(y) = 0.0)) and
  (not no_overflow(m, (value(x) / value(y))))))) -> overflow_value(m, r)) and
  (((is_finite(x) and (is_gen_zero(y) and (not (value(x) = 0.0)))) ->
  is_infinite(r)) and (((is_gen_zero(x) and is_gen_zero(y)) -> is_NaN(r)) and
  ((not is_NaN(r)) -> product_sign(r, x, y))))))))))

predicate fma_post(m: fpa_rounding_mode, x: single, y: single, z: single,
  r: single) = (((is_NaN(x) or (is_NaN(y) or is_NaN(z))) -> is_NaN(r)) and
  (((is_gen_zero(x) and is_infinite(y)) -> is_NaN(r)) and
  (((is_infinite(x) and is_gen_zero(y)) -> is_NaN(r)) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_infinite(y) and is_finite(z))) -> (is_infinite(r) and product_sign(r,
  x, y))) and (((is_finite(x) and (is_finite(y) and is_infinite(z))) ->
  (is_infinite(r) and same_sign(r, z))) and (((is_infinite(x) and
  (is_infinite(y) and is_infinite(z))) -> ((product_sign(z, x, y) ->
  (is_infinite(r) and same_sign(r, z))) and ((not product_sign(z, x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and (is_finite(z) and
  no_overflow(m, ((value(x) * value(y)) + value(z)))))) -> (is_finite(r) and
  ((value(r) = float32(m, ((value(x) * value(y)) + value(z)))) and
  ((product_sign(z, x, y) -> same_sign(r, z)) and ((not product_sign(z, x,
  y)) -> ((((value(x) * value(y)) + value(z)) = 0.0) -> (((m = Down) ->
  (sign1(r) = Neg)) and ((not (m = Down)) -> (sign1(r) = Pos))))))))) and
  ((is_finite(x) and (is_finite(y) and (is_finite(z) and (not no_overflow(m,
  ((value(x) * value(y)) + value(z))))))) -> (same_sign_real(sign1(r),
  ((value(x) * value(y)) + value(z))) and overflow_value(m, r))))))))))))))

predicate sqrt_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_plus_infinity(x) ->
  is_plus_infinity(r)) and ((is_minus_infinity(x) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) <  0.0)) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) = 0.0)) -> (is_finite(r) and
  ((value(r) = 0.0) and same_sign(r, x)))) and ((is_finite(x) and
  (0.0 <  value(x))) -> (is_finite(r) and
  ((value(r) = float32(m, sqrt_real(value(x)))) and (sign1(r) = Pos)))))))))

predicate roundToIntegral_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_infinite(x) -> (is_infinite(r) and
  same_sign(x, r))) and (is_finite(x) -> (same_sign(x, r) and
  (value(r) = real_of_int(integer_round(m, value(x))))))))

predicate of_real_exact_post(x: real, r: single) = (is_finite(r) and
  (value(r) = x))

predicate le(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <= value(y)))) or ((is_minus_infinity(x) and is_not_NaN(y)) or
  (is_not_NaN(x) and is_plus_infinity(y))))

predicate lt(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <  value(y)))) or ((is_minus_infinity(x) and (is_not_NaN(y) and
  (not is_minus_infinity(y)))) or (is_not_NaN(x) and
  ((not is_plus_infinity(x)) and is_plus_infinity(y)))))

predicate eq(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) = value(y)))) or (is_infinite(x) and (is_infinite(y) and
  same_sign(x, y))))

predicate ne(x: single, y: single) = (not eq(x, y))

predicate rem_post(x: single, y: single, r: single) = (((is_NaN(x) or
  (is_NaN(y) or (is_infinite(x) or is_gen_zero(y)))) -> is_NaN(r)) and
  ((not (is_NaN(x) or (is_NaN(y) or (is_infinite(x) or is_gen_zero(y))))) ->
  ((is_infinite(y) -> eq(x, r)) and ((not is_infinite(y)) ->
  (is_finite(r) and (((value(r) = 0.0) -> same_sign(x, r)) and
  (value(r) = (value(x) - (value(y) * real_of_int(integer_round(NearestTiesToEven, (value(x) / value(y)))))))))))))

axiom le_lt_trans :
  (forall x:single. forall y:single. forall z:single. ((le(x, y) and lt(y,
  z)) -> lt(x, z)))

axiom lt_le_trans :
  (forall x:single. forall y:single. forall z:single. ((lt(x, y) and le(y,
  z)) -> lt(x, z)))

axiom le_ge_asym :
  (forall x:single. forall y:single. ((le(x, y) and le(y, x)) -> eq(x, y)))

axiom not_lt_ge :
  (forall x:single. forall y:single. (((not lt(x, y)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(y, x)))

axiom not_gt_le :
  (forall x:single. forall y:single. (((not lt(y, x)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(x, y)))

type double

logic value1 : double -> real

predicate no_overflow1(m: fpa_rounding_mode, x: real) =
  (abs_real(float64(m, x)) <= 0x1.FFFFFFFFFFFFFp1023)

axiom Bounded_real_no_overflow1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> no_overflow1(m, x)))

axiom Round_value1 :
  (forall m:fpa_rounding_mode. forall x:double.
  (float64(m, value1(x)) = value1(x)))

axiom Bounded_value1 :
  (forall x:double. (abs_real(value1(x)) <= 0x1.FFFFFFFFFFFFFp1023))

axiom Exact_rounding_for_integers1 :
  (forall m:fpa_rounding_mode. forall i:int. ((((-9007199254740992) <= i) and
  (i <= 9007199254740992)) -> (float64(m, real_of_int(i)) = real_of_int(i))))

axiom Round_down_le1 : (forall x:real. (float64(Down, x) <= x))

axiom Round_up_ge1 : (forall x:real. (x <= float64(Up, x)))

axiom Round_down_neg1 :
  (forall x:real. (float64(Down, (-x)) = (-float64(Up, x))))

axiom Round_up_neg1 :
  (forall x:real. (float64(Up, (-x)) = (-float64(Down, x))))

logic round_logic1 : fpa_rounding_mode, real -> double

axiom Round_logic_def1 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow1(m, x) ->
  (value1(round_logic1(m, x)) = float64(m, x))))

logic class2 : double -> class

predicate is_finite1(x: double) = (class2(x) = Finite)

predicate is_infinite1(x: double) = (class2(x) = Infinite)

predicate is_NaN1(x: double) = (class2(x) = NaN)

predicate is_not_NaN3(x: double) = (is_finite1(x) or is_infinite1(x))

axiom is_not_NaN4 : (forall x:double. (is_not_NaN3(x) -> (not is_NaN1(x))))

axiom is_not_NaN5 : (forall x:double. ((not is_NaN1(x)) -> is_not_NaN3(x)))

logic sign2 : double -> sign

predicate same_sign_real2(x: double, y: real) = same_sign_real(sign2(x), y)

predicate same_sign1(x: double, y: double) = (sign2(x) = sign2(y))

predicate diff_sign1(x: double, y: double) = (not (sign2(x) = sign2(y)))

predicate sign_zero_result1(m: fpa_rounding_mode, x: double) =
  ((value1(x) = 0.0) -> ((((((m = NearestTiesToEven) -> (sign2(x) = Pos)) and
  ((m = ToZero) -> (sign2(x) = Pos))) and ((m = Up) -> (sign2(x) = Pos))) and
  ((m = Down) -> (sign2(x) = Neg))) and ((m = NearestTiesToAway) ->
  (sign2(x) = Pos))))

predicate is_minus_infinity1(x: double) = (is_infinite1(x) and
  (sign2(x) = Neg))

predicate is_plus_infinity1(x: double) = (is_infinite1(x) and
  (sign2(x) = Pos))

predicate is_gen_zero1(x: double) = (is_finite1(x) and (value1(x) = 0.0))

predicate is_gen_zero_plus1(x: double) = (is_gen_zero1(x) and
  (sign2(x) = Pos))

predicate is_gen_zero_minus1(x: double) = (is_gen_zero1(x) and
  (sign2(x) = Neg))

axiom finite_sign1 :
  (forall x:double. (((class2(x) = Finite) and (not (value1(x) = 0.0))) ->
  same_sign_real2(x, value1(x))))

axiom finite_sign_pos11 :
  (forall x:double. (((class2(x) = Finite) and (0.0 <  value1(x))) ->
  (sign2(x) = Pos)))

axiom finite_sign_pos21 :
  (forall x:double. (((class2(x) = Finite) and ((not (value1(x) = 0.0)) and
  (sign2(x) = Pos))) -> (0.0 <  value1(x))))

axiom finite_sign_neg11 :
  (forall x:double. (((class2(x) = Finite) and (value1(x) <  0.0)) ->
  (sign2(x) = Neg)))

axiom finite_sign_neg21 :
  (forall x:double. (((class2(x) = Finite) and ((not (value1(x) = 0.0)) and
  (sign2(x) = Neg))) -> (value1(x) <  0.0)))

axiom diff_sign_trans1 :
  (forall x:double. forall y:double. forall z:double. ((diff_sign1(x, y) and
  diff_sign1(y, z)) -> same_sign1(x, z)))

axiom diff_sign_product1 :
  (forall x:double. forall y:double. (((class2(x) = Finite) and
  ((class2(y) = Finite) and ((value1(x) * value1(y)) <  0.0))) ->
  diff_sign1(x, y)))

axiom same_sign_product1 :
  (forall x:double. forall y:double. (((class2(x) = Finite) and
  ((class2(y) = Finite) and same_sign1(x, y))) ->
  (0.0 <= (value1(x) * value1(y)))))

predicate overflow_value1(m: fpa_rounding_mode, x: double) =
  (((sign2(x) = Neg) -> ((((((m = NearestTiesToEven) -> is_infinite1(x)) and
  ((m = ToZero) -> (is_finite1(x) and
  (value1(x) = (-0x1.FFFFFFFFFFFFFp1023))))) and ((m = Up) ->
  (is_finite1(x) and (value1(x) = (-0x1.FFFFFFFFFFFFFp1023))))) and
  ((m = Down) -> is_infinite1(x))) and ((m = NearestTiesToAway) ->
  is_infinite1(x)))) and ((sign2(x) = Pos) -> ((((((m = NearestTiesToEven) ->
  is_infinite1(x)) and ((m = ToZero) -> (is_finite1(x) and
  (value1(x) = 0x1.FFFFFFFFFFFFFp1023)))) and ((m = Up) ->
  is_infinite1(x))) and ((m = Down) -> (is_finite1(x) and
  (value1(x) = 0x1.FFFFFFFFFFFFFp1023)))) and ((m = NearestTiesToAway) ->
  is_infinite1(x)))))

axiom round12 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow1(m, x) ->
  is_finite1(round_logic1(m, x))))

axiom round13 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow1(m, x) ->
  (value1(round_logic1(m, x)) = float64(m, x))))

axiom round22 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow1(m, x)) ->
  same_sign_real2(round_logic1(m, x), x)))

axiom round23 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow1(m, x)) ->
  overflow_value1(m, round_logic1(m, x))))

axiom round_of_zero1 :
  (forall m:fpa_rounding_mode. is_gen_zero1(round_logic1(m, 0.0)))

axiom round_logic_le1 :
  (forall m:fpa_rounding_mode. forall x:real. (is_finite1(round_logic1(m,
  x)) -> (abs_real(value1(round_logic1(m, x))) <= 0x1.FFFFFFFFFFFFFp1023)))

axiom round_no_overflow2 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> is_finite1(round_logic1(m,
  x))))

axiom round_no_overflow3 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> (value1(round_logic1(m,
  x)) = float64(m, x))))

logic min1 : real

axiom positive_constant3 :
  (forall m:fpa_rounding_mode. forall x:real. (((min1 <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> is_finite1(round_logic1(m, x))))

axiom positive_constant4 :
  (forall m:fpa_rounding_mode. forall x:real. (((min1 <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> (0.0 <  value1(round_logic1(m, x)))))

axiom positive_constant5 :
  (forall m:fpa_rounding_mode. forall x:real. (((min1 <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> (sign2(round_logic1(m, x)) = Pos)))

axiom negative_constant3 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min1))) ->
  is_finite1(round_logic1(m, x))))

axiom negative_constant4 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min1))) ->
  (value1(round_logic1(m, x)) <  0.0)))

axiom negative_constant5 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min1))) ->
  (sign2(round_logic1(m, x)) = Neg)))

axiom is_gen_zero_comp11 :
  (forall x:double. forall y:double. ((is_gen_zero1(x) and
  ((value1(x) = value1(y)) and is_finite1(y))) -> is_gen_zero1(y)))

axiom is_gen_zero_comp21 :
  (forall x:double. forall y:double. ((is_finite1(x) and
  ((not is_gen_zero1(x)) and (value1(x) = value1(y)))) ->
  (not is_gen_zero1(y))))

predicate add_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  is_infinite1(y)) -> (is_infinite1(r) and same_sign1(r, y))) and
  (((is_infinite1(x) and is_finite1(y)) -> (is_infinite1(r) and same_sign1(r,
  x))) and (((is_infinite1(x) and is_infinite1(y)) -> ((same_sign1(x, y) ->
  (is_infinite1(r) and same_sign1(r, x))) and ((not same_sign1(x, y)) ->
  is_NaN1(r)))) and (((is_finite1(x) and (is_finite1(y) and no_overflow1(m,
  (value1(x) + value1(y))))) -> (is_finite1(r) and
  ((value1(r) = float64(m, (value1(x) + value1(y)))) and ((same_sign1(x,
  y) -> same_sign1(r, x)) and ((not same_sign1(x, y)) -> sign_zero_result1(m,
  r)))))) and ((is_finite1(x) and (is_finite1(y) and (not no_overflow1(m,
  (value1(x) + value1(y)))))) -> (same_sign_real(sign2(r),
  (value1(x) + value1(y))) and overflow_value1(m, r))))))))

predicate sub_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  is_infinite1(y)) -> (is_infinite1(r) and diff_sign1(r, y))) and
  (((is_infinite1(x) and is_finite1(y)) -> (is_infinite1(r) and same_sign1(r,
  x))) and (((is_infinite1(x) and is_infinite1(y)) -> ((diff_sign1(x, y) ->
  (is_infinite1(r) and same_sign1(r, x))) and ((not diff_sign1(x, y)) ->
  is_NaN1(r)))) and (((is_finite1(x) and (is_finite1(y) and no_overflow1(m,
  (value1(x) - value1(y))))) -> (is_finite1(r) and
  ((value1(r) = float64(m, (value1(x) - value1(y)))) and ((diff_sign1(x,
  y) -> same_sign1(r, x)) and ((not diff_sign1(x, y)) -> sign_zero_result1(m,
  r)))))) and ((is_finite1(x) and (is_finite1(y) and (not no_overflow1(m,
  (value1(x) - value1(y)))))) -> (same_sign_real(sign2(r),
  (value1(x) - value1(y))) and overflow_value1(m, r))))))))

predicate product_sign1(z: double, x: double, y: double) = ((same_sign1(x,
  y) -> (sign2(z) = Pos)) and (diff_sign1(x, y) -> (sign2(z) = Neg)))

predicate mul_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_gen_zero1(x) and
  is_infinite1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  (is_infinite1(y) and (not (value1(x) = 0.0)))) -> is_infinite1(r)) and
  (((is_infinite1(x) and is_gen_zero1(y)) -> is_NaN1(r)) and
  (((is_infinite1(x) and (is_finite1(y) and (not (value1(y) = 0.0)))) ->
  is_infinite1(r)) and (((is_infinite1(x) and is_infinite1(y)) ->
  is_infinite1(r)) and (((is_finite1(x) and (is_finite1(y) and
  no_overflow1(m, (value1(x) * value1(y))))) -> (is_finite1(r) and
  (value1(r) = float64(m, (value1(x) * value1(y)))))) and
  (((is_finite1(x) and (is_finite1(y) and (not no_overflow1(m,
  (value1(x) * value1(y)))))) -> overflow_value1(m, r)) and
  ((not is_NaN1(r)) -> product_sign1(r, x, y))))))))))

predicate neg_post1(x: double, r: double) = ((is_NaN1(x) -> is_NaN1(r)) and
  ((is_infinite1(x) -> is_infinite1(r)) and ((is_finite1(x) ->
  (is_finite1(r) and (value1(r) = (-value1(x))))) and ((not is_NaN1(x)) ->
  diff_sign1(r, x)))))

predicate div_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  is_infinite1(y)) -> is_gen_zero1(r)) and (((is_infinite1(x) and
  is_finite1(y)) -> is_infinite1(r)) and (((is_infinite1(x) and
  is_infinite1(y)) -> is_NaN1(r)) and (((is_finite1(x) and (is_finite1(y) and
  ((not (value1(y) = 0.0)) and no_overflow1(m, (value1(x) / value1(y)))))) ->
  (is_finite1(r) and (value1(r) = float64(m, (value1(x) / value1(y)))))) and
  (((is_finite1(x) and (is_finite1(y) and ((not (value1(y) = 0.0)) and
  (not no_overflow1(m, (value1(x) / value1(y))))))) -> overflow_value1(m,
  r)) and (((is_finite1(x) and (is_gen_zero1(y) and
  (not (value1(x) = 0.0)))) -> is_infinite1(r)) and (((is_gen_zero1(x) and
  is_gen_zero1(y)) -> is_NaN1(r)) and ((not is_NaN1(r)) -> product_sign1(r,
  x, y))))))))))

predicate fma_post1(m: fpa_rounding_mode, x: double, y: double, z: double,
  r: double) = (((is_NaN1(x) or (is_NaN1(y) or is_NaN1(z))) ->
  is_NaN1(r)) and (((is_gen_zero1(x) and is_infinite1(y)) -> is_NaN1(r)) and
  (((is_infinite1(x) and is_gen_zero1(y)) -> is_NaN1(r)) and
  (((is_finite1(x) and ((not (value1(x) = 0.0)) and (is_infinite1(y) and
  is_finite1(z)))) -> (is_infinite1(r) and product_sign1(r, x, y))) and
  (((is_finite1(x) and ((not (value1(x) = 0.0)) and (is_infinite1(y) and
  is_infinite1(z)))) -> ((product_sign1(z, x, y) -> (is_infinite1(r) and
  same_sign1(r, z))) and ((not product_sign1(z, x, y)) -> is_NaN1(r)))) and
  (((is_infinite1(x) and (is_finite1(y) and ((not (value1(y) = 0.0)) and
  is_finite1(z)))) -> (is_infinite1(r) and product_sign1(r, x, y))) and
  (((is_infinite1(x) and (is_finite1(y) and ((not (value1(y) = 0.0)) and
  is_infinite1(z)))) -> ((product_sign1(z, x, y) -> (is_infinite1(r) and
  same_sign1(r, z))) and ((not product_sign1(z, x, y)) -> is_NaN1(r)))) and
  (((is_infinite1(x) and (is_infinite1(y) and is_finite1(z))) ->
  (is_infinite1(r) and product_sign1(r, x, y))) and (((is_finite1(x) and
  (is_finite1(y) and is_infinite1(z))) -> (is_infinite1(r) and same_sign1(r,
  z))) and (((is_infinite1(x) and (is_infinite1(y) and is_infinite1(z))) ->
  ((product_sign1(z, x, y) -> (is_infinite1(r) and same_sign1(r, z))) and
  ((not product_sign1(z, x, y)) -> is_NaN1(r)))) and (((is_finite1(x) and
  (is_finite1(y) and (is_finite1(z) and no_overflow1(m,
  ((value1(x) * value1(y)) + value1(z)))))) -> (is_finite1(r) and
  ((value1(r) = float64(m, ((value1(x) * value1(y)) + value1(z)))) and
  ((product_sign1(z, x, y) -> same_sign1(r, z)) and ((not product_sign1(z, x,
  y)) -> ((((value1(x) * value1(y)) + value1(z)) = 0.0) -> (((m = Down) ->
  (sign2(r) = Neg)) and ((not (m = Down)) -> (sign2(r) = Pos))))))))) and
  ((is_finite1(x) and (is_finite1(y) and (is_finite1(z) and
  (not no_overflow1(m, ((value1(x) * value1(y)) + value1(z))))))) ->
  (same_sign_real(sign2(r), ((value1(x) * value1(y)) + value1(z))) and
  overflow_value1(m, r))))))))))))))

predicate sqrt_post1(m: fpa_rounding_mode, x: double, r: double) =
  ((is_NaN1(x) -> is_NaN1(r)) and ((is_plus_infinity1(x) ->
  is_plus_infinity1(r)) and ((is_minus_infinity1(x) -> is_NaN1(r)) and
  (((is_finite1(x) and (value1(x) <  0.0)) -> is_NaN1(r)) and
  (((is_finite1(x) and (value1(x) = 0.0)) -> (is_finite1(r) and
  ((value1(r) = 0.0) and same_sign1(r, x)))) and ((is_finite1(x) and
  (0.0 <  value1(x))) -> (is_finite1(r) and
  ((value1(r) = float64(m, sqrt_real(value1(x)))) and
  (sign2(r) = Pos)))))))))

predicate roundToIntegral_post1(m: fpa_rounding_mode, x: double, r: double) =
  ((is_NaN1(x) -> is_NaN1(r)) and ((is_infinite1(x) -> (is_infinite1(r) and
  same_sign1(x, r))) and (is_finite1(x) -> (same_sign1(x, r) and
  (value1(r) = real_of_int(integer_round(m, value1(x))))))))

predicate of_real_exact_post1(x: real, r: double) = (is_finite1(r) and
  (value1(r) = x))

predicate le1(x: double, y: double) = ((is_finite1(x) and (is_finite1(y) and
  (value1(x) <= value1(y)))) or ((is_minus_infinity1(x) and
  is_not_NaN3(y)) or (is_not_NaN3(x) and is_plus_infinity1(y))))

predicate lt1(x: double, y: double) = ((is_finite1(x) and (is_finite1(y) and
  (value1(x) <  value1(y)))) or ((is_minus_infinity1(x) and
  (is_not_NaN3(y) and (not is_minus_infinity1(y)))) or (is_not_NaN3(x) and
  ((not is_plus_infinity1(x)) and is_plus_infinity1(y)))))

predicate eq1(x: double, y: double) = ((is_finite1(x) and (is_finite1(y) and
  (value1(x) = value1(y)))) or (is_infinite1(x) and (is_infinite1(y) and
  same_sign1(x, y))))

predicate ne1(x: double, y: double) = (not eq1(x, y))

predicate rem_post1(x: double, y: double, r: double) = (((is_NaN1(x) or
  (is_NaN1(y) or (is_infinite1(x) or is_gen_zero1(y)))) -> is_NaN1(r)) and
  ((not (is_NaN1(x) or (is_NaN1(y) or (is_infinite1(x) or
  is_gen_zero1(y))))) -> ((is_infinite1(y) -> eq1(x, r)) and
  ((not is_infinite1(y)) -> (is_finite1(r) and (((value1(r) = 0.0) ->
  same_sign1(x, r)) and
  (value1(r) = (value1(x) - (value1(y) * real_of_int(integer_round(NearestTiesToEven, (value1(x) / value1(y)))))))))))))

axiom le_lt_trans1 :
  (forall x:double. forall y:double. forall z:double. ((le1(x, y) and lt1(y,
  z)) -> lt1(x, z)))

axiom lt_le_trans1 :
  (forall x:double. forall y:double. forall z:double. ((lt1(x, y) and le1(y,
  z)) -> lt1(x, z)))

axiom le_ge_asym1 :
  (forall x:double. forall y:double. ((le1(x, y) and le1(y, x)) -> eq1(x,
  y)))

axiom not_lt_ge1 :
  (forall x:double. forall y:double. (((not lt1(x, y)) and
  (is_not_NaN3(x) and is_not_NaN3(y))) -> le1(y, x)))

axiom not_gt_le1 :
  (forall x:double. forall y:double. (((not lt1(y, x)) and
  (is_not_NaN3(x) and is_not_NaN3(y))) -> le1(x, y)))

predicate single_to_double_cast(x: single, r: double) = ((is_NaN(x) ->
  is_NaN1(r)) and (is_finite(x) -> (is_finite1(r) and
  ((value1(r) = value(x)) and (sign2(r) = sign1(x))))))

predicate double_to_single_cast(m: fpa_rounding_mode, x: double, r: single) =
  ((is_NaN1(x) -> is_NaN(r)) and ((is_infinite1(x) -> (is_infinite(r) and
  (sign1(r) = sign2(x)))) and (((is_finite1(x) and no_overflow(m,
  value1(x))) -> (is_finite(r) and ((value(r) = float32(m, value1(x))) and
  (sign1(r) = sign2(x))))) and ((is_finite1(x) and (not no_overflow(m,
  value1(x)))) -> ((sign1(r) = sign2(x)) and overflow_value(m, r))))))

predicate smt2_double_eq(x: double, y: double) = (((is_finite1(x) and
  (is_finite1(y) and ((value1(x) = value1(y)) and same_sign1(x, y)))) or
  (is_infinite1(x) and (is_infinite1(y) and same_sign1(x, y)))) or
  (is_NaN1(x) and is_NaN1(y)))

predicate smt2_single_eq(x: single, y: single) = (((is_finite(x) and
  (is_finite(y) and ((value(x) = value(y)) and same_sign(x, y)))) or
  (is_infinite(x) and (is_infinite(y) and same_sign(x, y)))) or
  (is_NaN(x) and is_NaN(y)))

logic b1509 : single

logic b2090 : single

logic b1487 : double

logic b1506 : double

logic b1699 : single

logic b2172 : single

logic b1775 : single

logic b212 : single

logic b1482 : double

logic b1490 : single

logic b1838 : single

logic b1642 : single

logic b1772 : double

logic b1547 : single

logic b1718 : single

logic b207 : single

logic b832 : single

logic b221 : double

logic b1756 : single

logic b210 : double

logic b1585 : single

logic b1563 : double

logic b1737 : single

logic b1677 : double

logic b1566 : single

logic b2153 : single

logic b1623 : single

logic b1544 : double

logic b1620 : double

logic b1680 : single

logic b1639 : double

logic b2181 : single

logic b2132 : single

logic b1791 : double

logic b1901 : single

logic b1601 : double

logic b1922 : single

logic b1582 : double

logic b1816 : single

logic b1661 : single

logic b1964 : single

logic b818 : double

logic b1696 : double

logic b1715 : double

logic b205 : single

logic b1753 : double

logic b1794 : single

logic b2048 : single

logic b1477 : single

logic b1880 : single

logic b2069 : single

logic b1734 : double

logic b1985 : single

logic b1474 : double

logic b1943 : single

logic b1528 : single

logic b2006 : single

logic b2027 : single

logic b1604 : single

logic b1859 : single

logic b2111 : single

logic b1525 : double

logic b1658 : double

logic s_div__t_3__t_9__t_10 : single

axiom eq_0 : div_post(NearestTiesToEven, b205, b207, s_div__t_3__t_9__t_10)

logic ust_11 : single

axiom eq_1 : div_post(NearestTiesToEven, b205, b207, ust_11)

logic double_of_single__t_3__t_11 : double

axiom eq_2 : single_to_double_cast(ust_11, double_of_single__t_3__t_11)

logic ust_12 : double

axiom eq_3 : single_to_double_cast(ust_11, ust_12)

logic d_mul__t_3__t_12__t_13 : double

axiom eq_4 : mul_post1(NearestTiesToEven, ust_12, b221,
  d_mul__t_3__t_12__t_13)

logic ust_14 : double

axiom eq_5 : mul_post1(NearestTiesToEven, ust_12, b221, ust_14)

logic s_mul__t_3__t_11__t_11 : single

axiom eq_6 : mul_post(NearestTiesToEven, ust_11, ust_11,
  s_mul__t_3__t_11__t_11)

logic ust_15 : single

axiom eq_7 : mul_post(NearestTiesToEven, ust_11, ust_11, ust_15)

logic s_neg__t_15 : single

axiom eq_8 : neg_post(ust_15, s_neg__t_15)

logic ust_16 : single

axiom eq_9 : neg_post(ust_15, ust_16)

logic s_add__t_3__t_9__t_16 : single

axiom eq_10 : add_post(NearestTiesToEven, b205, ust_16,
  s_add__t_3__t_9__t_16)

logic ust_17 : single

axiom eq_11 : add_post(NearestTiesToEven, b205, ust_16, ust_17)

logic double_of_single__t_3__t_17 : double

axiom eq_12 : single_to_double_cast(ust_17, double_of_single__t_3__t_17)

logic ust_18 : double

axiom eq_13 : single_to_double_cast(ust_17, ust_18)

logic d_div__t_3__t_18__t_14 : double

axiom eq_14 : div_post1(NearestTiesToEven, ust_18, ust_14,
  d_div__t_3__t_18__t_14)

logic ust_19 : double

axiom eq_15 : div_post1(NearestTiesToEven, ust_18, ust_14, ust_19)

logic single_of_double__t_3__t_19 : single

axiom eq_16 : double_to_single_cast(NearestTiesToEven, ust_19,
  single_of_double__t_3__t_19)

logic ust_20 : single

axiom eq_17 : double_to_single_cast(NearestTiesToEven, ust_19, ust_20)

logic s_add__t_3__t_11__t_20 : single

axiom eq_18 : add_post(NearestTiesToEven, ust_11, ust_20,
  s_add__t_3__t_11__t_20)

logic ust_21 : single

axiom eq_19 : add_post(NearestTiesToEven, ust_11, ust_20, ust_21)

logic s_mul__t_3__t_21__t_21 : single

axiom eq_20 : mul_post(NearestTiesToEven, ust_21, ust_21,
  s_mul__t_3__t_21__t_21)

logic ust_22 : single

axiom eq_21 : mul_post(NearestTiesToEven, ust_21, ust_21, ust_22)

logic s_neg__t_22 : single

axiom eq_22 : neg_post(ust_22, s_neg__t_22)

logic ust_23 : single

axiom eq_23 : neg_post(ust_22, ust_23)

logic s_add__t_3__t_9__t_23 : single

axiom eq_24 : add_post(NearestTiesToEven, b205, ust_23,
  s_add__t_3__t_9__t_23)

logic ust_24 : single

axiom eq_25 : add_post(NearestTiesToEven, b205, ust_23, ust_24)

logic double_of_single__t_3__t_24 : double

axiom eq_26 : single_to_double_cast(ust_24, double_of_single__t_3__t_24)

logic ust_25 : double

axiom eq_27 : single_to_double_cast(ust_24, ust_25)

logic single_of_double__t_3__t_25 : single

axiom eq_28 : double_to_single_cast(NearestTiesToEven, ust_25,
  single_of_double__t_3__t_25)

logic ust_26 : single

axiom eq_29 : double_to_single_cast(NearestTiesToEven, ust_25, ust_26)

predicate ust_29() = (not smt2_single_eq(ust_26, b2181))

logic double_of_single__t_3__t_21 : double

axiom eq_30 : single_to_double_cast(ust_21, double_of_single__t_3__t_21)

logic ust_30 : double

axiom eq_31 : single_to_double_cast(ust_21, ust_30)

logic d_mul__t_3__t_13__t_30 : double

axiom eq_32 : mul_post1(NearestTiesToEven, b221, ust_30,
  d_mul__t_3__t_13__t_30)

logic ust_31 : double

axiom eq_33 : mul_post1(NearestTiesToEven, b221, ust_30, ust_31)

logic d_div__t_3__t_25__t_31 : double

axiom eq_34 : div_post1(NearestTiesToEven, ust_25, ust_31,
  d_div__t_3__t_25__t_31)

logic ust_32 : double

axiom eq_35 : div_post1(NearestTiesToEven, ust_25, ust_31, ust_32)

logic single_of_double__t_3__t_32 : single

axiom eq_36 : double_to_single_cast(NearestTiesToEven, ust_32,
  single_of_double__t_3__t_32)

logic ust_33 : single

axiom eq_37 : double_to_single_cast(NearestTiesToEven, ust_32, ust_33)

logic s_add__t_3__t_21__t_33 : single

axiom eq_38 : add_post(NearestTiesToEven, ust_21, ust_33,
  s_add__t_3__t_21__t_33)

logic ust_34 : single

axiom eq_39 : add_post(NearestTiesToEven, ust_21, ust_33, ust_34)

logic s_mul__t_3__t_34__t_34 : single

axiom eq_40 : mul_post(NearestTiesToEven, ust_34, ust_34,
  s_mul__t_3__t_34__t_34)

logic ust_35 : single

axiom eq_41 : mul_post(NearestTiesToEven, ust_34, ust_34, ust_35)

logic s_neg__t_35 : single

axiom eq_42 : neg_post(ust_35, s_neg__t_35)

logic ust_36 : single

axiom eq_43 : neg_post(ust_35, ust_36)

logic s_add__t_3__t_9__t_36 : single

axiom eq_44 : add_post(NearestTiesToEven, b205, ust_36,
  s_add__t_3__t_9__t_36)

logic ust_37 : single

axiom eq_45 : add_post(NearestTiesToEven, b205, ust_36, ust_37)

logic double_of_single__t_3__t_37 : double

axiom eq_46 : single_to_double_cast(ust_37, double_of_single__t_3__t_37)

logic ust_38 : double

axiom eq_47 : single_to_double_cast(ust_37, ust_38)

logic single_of_double__t_3__t_38 : single

axiom eq_48 : double_to_single_cast(NearestTiesToEven, ust_38,
  single_of_double__t_3__t_38)

logic ust_39 : single

axiom eq_49 : double_to_single_cast(NearestTiesToEven, ust_38, ust_39)

predicate ust_42() = (not smt2_single_eq(ust_39, b2172))

logic double_of_single__t_3__t_43 : double

axiom eq_50 : single_to_double_cast(b1490, double_of_single__t_3__t_43)

logic ust_44 : double

axiom eq_51 : single_to_double_cast(b1490, ust_44)

logic d_mul__t_3__t_13__t_44 : double

axiom eq_52 : mul_post1(NearestTiesToEven, b221, ust_44,
  d_mul__t_3__t_13__t_44)

logic ust_45 : double

axiom eq_53 : mul_post1(NearestTiesToEven, b221, ust_44, ust_45)

logic s_mul__t_3__t_43__t_43 : single

axiom eq_54 : mul_post(NearestTiesToEven, b1490, b1490,
  s_mul__t_3__t_43__t_43)

logic ust_46 : single

axiom eq_55 : mul_post(NearestTiesToEven, b1490, b1490, ust_46)

logic s_neg__t_46 : single

axiom eq_56 : neg_post(ust_46, s_neg__t_46)

logic ust_47 : single

axiom eq_57 : neg_post(ust_46, ust_47)

logic s_add__t_3__t_9__t_47 : single

axiom eq_58 : add_post(NearestTiesToEven, b205, ust_47,
  s_add__t_3__t_9__t_47)

logic ust_48 : single

axiom eq_59 : add_post(NearestTiesToEven, b205, ust_47, ust_48)

logic double_of_single__t_3__t_48 : double

axiom eq_60 : single_to_double_cast(ust_48, double_of_single__t_3__t_48)

logic ust_49 : double

axiom eq_61 : single_to_double_cast(ust_48, ust_49)

logic d_div__t_3__t_49__t_45 : double

axiom eq_62 : div_post1(NearestTiesToEven, ust_49, ust_45,
  d_div__t_3__t_49__t_45)

logic ust_50 : double

axiom eq_63 : div_post1(NearestTiesToEven, ust_49, ust_45, ust_50)

logic single_of_double__t_3__t_50 : single

axiom eq_64 : double_to_single_cast(NearestTiesToEven, ust_50,
  single_of_double__t_3__t_50)

logic ust_51 : single

axiom eq_65 : double_to_single_cast(NearestTiesToEven, ust_50, ust_51)

logic s_add__t_3__t_43__t_51 : single

axiom eq_66 : add_post(NearestTiesToEven, b1490, ust_51,
  s_add__t_3__t_43__t_51)

logic ust_52 : single

axiom eq_67 : add_post(NearestTiesToEven, b1490, ust_51, ust_52)

logic s_mul__t_3__t_52__t_52 : single

axiom eq_68 : mul_post(NearestTiesToEven, ust_52, ust_52,
  s_mul__t_3__t_52__t_52)

logic ust_53 : single

axiom eq_69 : mul_post(NearestTiesToEven, ust_52, ust_52, ust_53)

logic s_neg__t_53 : single

axiom eq_70 : neg_post(ust_53, s_neg__t_53)

logic ust_54 : single

axiom eq_71 : neg_post(ust_53, ust_54)

logic s_add__t_3__t_9__t_54 : single

axiom eq_72 : add_post(NearestTiesToEven, b205, ust_54,
  s_add__t_3__t_9__t_54)

logic ust_55 : single

axiom eq_73 : add_post(NearestTiesToEven, b205, ust_54, ust_55)

logic double_of_single__t_3__t_55 : double

axiom eq_74 : single_to_double_cast(ust_55, double_of_single__t_3__t_55)

logic ust_56 : double

axiom eq_75 : single_to_double_cast(ust_55, ust_56)

logic single_of_double__t_3__t_56 : single

axiom eq_76 : double_to_single_cast(NearestTiesToEven, ust_56,
  single_of_double__t_3__t_56)

logic ust_57 : single

axiom eq_77 : double_to_single_cast(NearestTiesToEven, ust_56, ust_57)

predicate ust_60() = (not smt2_single_eq(ust_57, b2153))

logic double_of_single__t_3__t_61 : double

axiom eq_78 : single_to_double_cast(b1509, double_of_single__t_3__t_61)

logic ust_62 : double

axiom eq_79 : single_to_double_cast(b1509, ust_62)

logic d_mul__t_3__t_13__t_62 : double

axiom eq_80 : mul_post1(NearestTiesToEven, b221, ust_62,
  d_mul__t_3__t_13__t_62)

logic ust_63 : double

axiom eq_81 : mul_post1(NearestTiesToEven, b221, ust_62, ust_63)

logic s_mul__t_3__t_61__t_61 : single

axiom eq_82 : mul_post(NearestTiesToEven, b1509, b1509,
  s_mul__t_3__t_61__t_61)

logic ust_64 : single

axiom eq_83 : mul_post(NearestTiesToEven, b1509, b1509, ust_64)

logic s_neg__t_64 : single

axiom eq_84 : neg_post(ust_64, s_neg__t_64)

logic ust_65 : single

axiom eq_85 : neg_post(ust_64, ust_65)

logic s_add__t_3__t_9__t_65 : single

axiom eq_86 : add_post(NearestTiesToEven, b205, ust_65,
  s_add__t_3__t_9__t_65)

logic ust_66 : single

axiom eq_87 : add_post(NearestTiesToEven, b205, ust_65, ust_66)

logic double_of_single__t_3__t_66 : double

axiom eq_88 : single_to_double_cast(ust_66, double_of_single__t_3__t_66)

logic ust_67 : double

axiom eq_89 : single_to_double_cast(ust_66, ust_67)

logic d_div__t_3__t_67__t_63 : double

axiom eq_90 : div_post1(NearestTiesToEven, ust_67, ust_63,
  d_div__t_3__t_67__t_63)

logic ust_68 : double

axiom eq_91 : div_post1(NearestTiesToEven, ust_67, ust_63, ust_68)

logic single_of_double__t_3__t_68 : single

axiom eq_92 : double_to_single_cast(NearestTiesToEven, ust_68,
  single_of_double__t_3__t_68)

logic ust_69 : single

axiom eq_93 : double_to_single_cast(NearestTiesToEven, ust_68, ust_69)

logic s_add__t_3__t_61__t_69 : single

axiom eq_94 : add_post(NearestTiesToEven, b1509, ust_69,
  s_add__t_3__t_61__t_69)

logic ust_70 : single

axiom eq_95 : add_post(NearestTiesToEven, b1509, ust_69, ust_70)

logic s_mul__t_3__t_70__t_70 : single

axiom eq_96 : mul_post(NearestTiesToEven, ust_70, ust_70,
  s_mul__t_3__t_70__t_70)

logic ust_71 : single

axiom eq_97 : mul_post(NearestTiesToEven, ust_70, ust_70, ust_71)

logic s_neg__t_71 : single

axiom eq_98 : neg_post(ust_71, s_neg__t_71)

logic ust_72 : single

axiom eq_99 : neg_post(ust_71, ust_72)

logic s_add__t_3__t_9__t_72 : single

axiom eq_100 : add_post(NearestTiesToEven, b205, ust_72,
  s_add__t_3__t_9__t_72)

logic ust_73 : single

axiom eq_101 : add_post(NearestTiesToEven, b205, ust_72, ust_73)

logic double_of_single__t_3__t_73 : double

axiom eq_102 : single_to_double_cast(ust_73, double_of_single__t_3__t_73)

logic ust_74 : double

axiom eq_103 : single_to_double_cast(ust_73, ust_74)

logic single_of_double__t_3__t_74 : single

axiom eq_104 : double_to_single_cast(NearestTiesToEven, ust_74,
  single_of_double__t_3__t_74)

logic ust_75 : single

axiom eq_105 : double_to_single_cast(NearestTiesToEven, ust_74, ust_75)

predicate ust_78() = (not smt2_single_eq(ust_75, b2132))

logic double_of_single__t_3__t_79 : double

axiom eq_106 : single_to_double_cast(b1528, double_of_single__t_3__t_79)

logic ust_80 : double

axiom eq_107 : single_to_double_cast(b1528, ust_80)

logic d_mul__t_3__t_13__t_80 : double

axiom eq_108 : mul_post1(NearestTiesToEven, b221, ust_80,
  d_mul__t_3__t_13__t_80)

logic ust_81 : double

axiom eq_109 : mul_post1(NearestTiesToEven, b221, ust_80, ust_81)

logic s_mul__t_3__t_79__t_79 : single

axiom eq_110 : mul_post(NearestTiesToEven, b1528, b1528,
  s_mul__t_3__t_79__t_79)

logic ust_82 : single

axiom eq_111 : mul_post(NearestTiesToEven, b1528, b1528, ust_82)

logic s_neg__t_82 : single

axiom eq_112 : neg_post(ust_82, s_neg__t_82)

logic ust_83 : single

axiom eq_113 : neg_post(ust_82, ust_83)

logic s_add__t_3__t_9__t_83 : single

axiom eq_114 : add_post(NearestTiesToEven, b205, ust_83,
  s_add__t_3__t_9__t_83)

logic ust_84 : single

axiom eq_115 : add_post(NearestTiesToEven, b205, ust_83, ust_84)

logic double_of_single__t_3__t_84 : double

axiom eq_116 : single_to_double_cast(ust_84, double_of_single__t_3__t_84)

logic ust_85 : double

axiom eq_117 : single_to_double_cast(ust_84, ust_85)

logic d_div__t_3__t_85__t_81 : double

axiom eq_118 : div_post1(NearestTiesToEven, ust_85, ust_81,
  d_div__t_3__t_85__t_81)

logic ust_86 : double

axiom eq_119 : div_post1(NearestTiesToEven, ust_85, ust_81, ust_86)

logic single_of_double__t_3__t_86 : single

axiom eq_120 : double_to_single_cast(NearestTiesToEven, ust_86,
  single_of_double__t_3__t_86)

logic ust_87 : single

axiom eq_121 : double_to_single_cast(NearestTiesToEven, ust_86, ust_87)

logic s_add__t_3__t_79__t_87 : single

axiom eq_122 : add_post(NearestTiesToEven, b1528, ust_87,
  s_add__t_3__t_79__t_87)

logic ust_88 : single

axiom eq_123 : add_post(NearestTiesToEven, b1528, ust_87, ust_88)

logic s_mul__t_3__t_88__t_88 : single

axiom eq_124 : mul_post(NearestTiesToEven, ust_88, ust_88,
  s_mul__t_3__t_88__t_88)

logic ust_89 : single

axiom eq_125 : mul_post(NearestTiesToEven, ust_88, ust_88, ust_89)

logic s_neg__t_89 : single

axiom eq_126 : neg_post(ust_89, s_neg__t_89)

logic ust_90 : single

axiom eq_127 : neg_post(ust_89, ust_90)

logic s_add__t_3__t_9__t_90 : single

axiom eq_128 : add_post(NearestTiesToEven, b205, ust_90,
  s_add__t_3__t_9__t_90)

logic ust_91 : single

axiom eq_129 : add_post(NearestTiesToEven, b205, ust_90, ust_91)

logic double_of_single__t_3__t_91 : double

axiom eq_130 : single_to_double_cast(ust_91, double_of_single__t_3__t_91)

logic ust_92 : double

axiom eq_131 : single_to_double_cast(ust_91, ust_92)

logic single_of_double__t_3__t_92 : single

axiom eq_132 : double_to_single_cast(NearestTiesToEven, ust_92,
  single_of_double__t_3__t_92)

logic ust_93 : single

axiom eq_133 : double_to_single_cast(NearestTiesToEven, ust_92, ust_93)

predicate ust_96() = (not smt2_single_eq(ust_93, b2111))

logic double_of_single__t_3__t_97 : double

axiom eq_134 : single_to_double_cast(b1547, double_of_single__t_3__t_97)

logic ust_98 : double

axiom eq_135 : single_to_double_cast(b1547, ust_98)

logic d_mul__t_3__t_13__t_98 : double

axiom eq_136 : mul_post1(NearestTiesToEven, b221, ust_98,
  d_mul__t_3__t_13__t_98)

logic ust_99 : double

axiom eq_137 : mul_post1(NearestTiesToEven, b221, ust_98, ust_99)

logic s_mul__t_3__t_97__t_97 : single

axiom eq_138 : mul_post(NearestTiesToEven, b1547, b1547,
  s_mul__t_3__t_97__t_97)

logic ust_100 : single

axiom eq_139 : mul_post(NearestTiesToEven, b1547, b1547, ust_100)

logic s_neg__t_100 : single

axiom eq_140 : neg_post(ust_100, s_neg__t_100)

logic ust_101 : single

axiom eq_141 : neg_post(ust_100, ust_101)

logic s_add__t_3__t_9__t_101 : single

axiom eq_142 : add_post(NearestTiesToEven, b205, ust_101,
  s_add__t_3__t_9__t_101)

logic ust_102 : single

axiom eq_143 : add_post(NearestTiesToEven, b205, ust_101, ust_102)

logic double_of_single__t_3__t_102 : double

axiom eq_144 : single_to_double_cast(ust_102, double_of_single__t_3__t_102)

logic ust_103 : double

axiom eq_145 : single_to_double_cast(ust_102, ust_103)

logic d_div__t_3__t_103__t_99 : double

axiom eq_146 : div_post1(NearestTiesToEven, ust_103, ust_99,
  d_div__t_3__t_103__t_99)

logic ust_104 : double

axiom eq_147 : div_post1(NearestTiesToEven, ust_103, ust_99, ust_104)

logic single_of_double__t_3__t_104 : single

axiom eq_148 : double_to_single_cast(NearestTiesToEven, ust_104,
  single_of_double__t_3__t_104)

logic ust_105 : single

axiom eq_149 : double_to_single_cast(NearestTiesToEven, ust_104, ust_105)

logic s_add__t_3__t_97__t_105 : single

axiom eq_150 : add_post(NearestTiesToEven, b1547, ust_105,
  s_add__t_3__t_97__t_105)

logic ust_106 : single

axiom eq_151 : add_post(NearestTiesToEven, b1547, ust_105, ust_106)

logic s_mul__t_3__t_106__t_106 : single

axiom eq_152 : mul_post(NearestTiesToEven, ust_106, ust_106,
  s_mul__t_3__t_106__t_106)

logic ust_107 : single

axiom eq_153 : mul_post(NearestTiesToEven, ust_106, ust_106, ust_107)

logic s_neg__t_107 : single

axiom eq_154 : neg_post(ust_107, s_neg__t_107)

logic ust_108 : single

axiom eq_155 : neg_post(ust_107, ust_108)

logic s_add__t_3__t_9__t_108 : single

axiom eq_156 : add_post(NearestTiesToEven, b205, ust_108,
  s_add__t_3__t_9__t_108)

logic ust_109 : single

axiom eq_157 : add_post(NearestTiesToEven, b205, ust_108, ust_109)

logic double_of_single__t_3__t_109 : double

axiom eq_158 : single_to_double_cast(ust_109, double_of_single__t_3__t_109)

logic ust_110 : double

axiom eq_159 : single_to_double_cast(ust_109, ust_110)

logic single_of_double__t_3__t_110 : single

axiom eq_160 : double_to_single_cast(NearestTiesToEven, ust_110,
  single_of_double__t_3__t_110)

logic ust_111 : single

axiom eq_161 : double_to_single_cast(NearestTiesToEven, ust_110, ust_111)

predicate ust_114() = (not smt2_single_eq(ust_111, b2090))

logic double_of_single__t_3__t_115 : double

axiom eq_162 : single_to_double_cast(b1566, double_of_single__t_3__t_115)

logic ust_116 : double

axiom eq_163 : single_to_double_cast(b1566, ust_116)

logic d_mul__t_3__t_13__t_116 : double

axiom eq_164 : mul_post1(NearestTiesToEven, b221, ust_116,
  d_mul__t_3__t_13__t_116)

logic ust_117 : double

axiom eq_165 : mul_post1(NearestTiesToEven, b221, ust_116, ust_117)

logic s_mul__t_3__t_115__t_115 : single

axiom eq_166 : mul_post(NearestTiesToEven, b1566, b1566,
  s_mul__t_3__t_115__t_115)

logic ust_118 : single

axiom eq_167 : mul_post(NearestTiesToEven, b1566, b1566, ust_118)

logic s_neg__t_118 : single

axiom eq_168 : neg_post(ust_118, s_neg__t_118)

logic ust_119 : single

axiom eq_169 : neg_post(ust_118, ust_119)

logic s_add__t_3__t_9__t_119 : single

axiom eq_170 : add_post(NearestTiesToEven, b205, ust_119,
  s_add__t_3__t_9__t_119)

logic ust_120 : single

axiom eq_171 : add_post(NearestTiesToEven, b205, ust_119, ust_120)

logic double_of_single__t_3__t_120 : double

axiom eq_172 : single_to_double_cast(ust_120, double_of_single__t_3__t_120)

logic ust_121 : double

axiom eq_173 : single_to_double_cast(ust_120, ust_121)

logic d_div__t_3__t_121__t_117 : double

axiom eq_174 : div_post1(NearestTiesToEven, ust_121, ust_117,
  d_div__t_3__t_121__t_117)

logic ust_122 : double

axiom eq_175 : div_post1(NearestTiesToEven, ust_121, ust_117, ust_122)

logic single_of_double__t_3__t_122 : single

axiom eq_176 : double_to_single_cast(NearestTiesToEven, ust_122,
  single_of_double__t_3__t_122)

logic ust_123 : single

axiom eq_177 : double_to_single_cast(NearestTiesToEven, ust_122, ust_123)

logic s_add__t_3__t_115__t_123 : single

axiom eq_178 : add_post(NearestTiesToEven, b1566, ust_123,
  s_add__t_3__t_115__t_123)

logic ust_124 : single

axiom eq_179 : add_post(NearestTiesToEven, b1566, ust_123, ust_124)

logic s_mul__t_3__t_124__t_124 : single

axiom eq_180 : mul_post(NearestTiesToEven, ust_124, ust_124,
  s_mul__t_3__t_124__t_124)

logic ust_125 : single

axiom eq_181 : mul_post(NearestTiesToEven, ust_124, ust_124, ust_125)

logic s_neg__t_125 : single

axiom eq_182 : neg_post(ust_125, s_neg__t_125)

logic ust_126 : single

axiom eq_183 : neg_post(ust_125, ust_126)

logic s_add__t_3__t_9__t_126 : single

axiom eq_184 : add_post(NearestTiesToEven, b205, ust_126,
  s_add__t_3__t_9__t_126)

logic ust_127 : single

axiom eq_185 : add_post(NearestTiesToEven, b205, ust_126, ust_127)

logic double_of_single__t_3__t_127 : double

axiom eq_186 : single_to_double_cast(ust_127, double_of_single__t_3__t_127)

logic ust_128 : double

axiom eq_187 : single_to_double_cast(ust_127, ust_128)

logic single_of_double__t_3__t_128 : single

axiom eq_188 : double_to_single_cast(NearestTiesToEven, ust_128,
  single_of_double__t_3__t_128)

logic ust_129 : single

axiom eq_189 : double_to_single_cast(NearestTiesToEven, ust_128, ust_129)

predicate ust_132() = (not smt2_single_eq(ust_129, b2069))

logic double_of_single__t_3__t_133 : double

axiom eq_190 : single_to_double_cast(b1585, double_of_single__t_3__t_133)

logic ust_134 : double

axiom eq_191 : single_to_double_cast(b1585, ust_134)

logic d_mul__t_3__t_13__t_134 : double

axiom eq_192 : mul_post1(NearestTiesToEven, b221, ust_134,
  d_mul__t_3__t_13__t_134)

logic ust_135 : double

axiom eq_193 : mul_post1(NearestTiesToEven, b221, ust_134, ust_135)

logic s_mul__t_3__t_133__t_133 : single

axiom eq_194 : mul_post(NearestTiesToEven, b1585, b1585,
  s_mul__t_3__t_133__t_133)

logic ust_136 : single

axiom eq_195 : mul_post(NearestTiesToEven, b1585, b1585, ust_136)

logic s_neg__t_136 : single

axiom eq_196 : neg_post(ust_136, s_neg__t_136)

logic ust_137 : single

axiom eq_197 : neg_post(ust_136, ust_137)

logic s_add__t_3__t_9__t_137 : single

axiom eq_198 : add_post(NearestTiesToEven, b205, ust_137,
  s_add__t_3__t_9__t_137)

logic ust_138 : single

axiom eq_199 : add_post(NearestTiesToEven, b205, ust_137, ust_138)

logic double_of_single__t_3__t_138 : double

axiom eq_200 : single_to_double_cast(ust_138, double_of_single__t_3__t_138)

logic ust_139 : double

axiom eq_201 : single_to_double_cast(ust_138, ust_139)

logic d_div__t_3__t_139__t_135 : double

axiom eq_202 : div_post1(NearestTiesToEven, ust_139, ust_135,
  d_div__t_3__t_139__t_135)

logic ust_140 : double

axiom eq_203 : div_post1(NearestTiesToEven, ust_139, ust_135, ust_140)

logic single_of_double__t_3__t_140 : single

axiom eq_204 : double_to_single_cast(NearestTiesToEven, ust_140,
  single_of_double__t_3__t_140)

logic ust_141 : single

axiom eq_205 : double_to_single_cast(NearestTiesToEven, ust_140, ust_141)

logic s_add__t_3__t_133__t_141 : single

axiom eq_206 : add_post(NearestTiesToEven, b1585, ust_141,
  s_add__t_3__t_133__t_141)

logic ust_142 : single

axiom eq_207 : add_post(NearestTiesToEven, b1585, ust_141, ust_142)

logic s_mul__t_3__t_142__t_142 : single

axiom eq_208 : mul_post(NearestTiesToEven, ust_142, ust_142,
  s_mul__t_3__t_142__t_142)

logic ust_143 : single

axiom eq_209 : mul_post(NearestTiesToEven, ust_142, ust_142, ust_143)

logic s_neg__t_143 : single

axiom eq_210 : neg_post(ust_143, s_neg__t_143)

logic ust_144 : single

axiom eq_211 : neg_post(ust_143, ust_144)

logic s_add__t_3__t_9__t_144 : single

axiom eq_212 : add_post(NearestTiesToEven, b205, ust_144,
  s_add__t_3__t_9__t_144)

logic ust_145 : single

axiom eq_213 : add_post(NearestTiesToEven, b205, ust_144, ust_145)

logic double_of_single__t_3__t_145 : double

axiom eq_214 : single_to_double_cast(ust_145, double_of_single__t_3__t_145)

logic ust_146 : double

axiom eq_215 : single_to_double_cast(ust_145, ust_146)

logic single_of_double__t_3__t_146 : single

axiom eq_216 : double_to_single_cast(NearestTiesToEven, ust_146,
  single_of_double__t_3__t_146)

logic ust_147 : single

axiom eq_217 : double_to_single_cast(NearestTiesToEven, ust_146, ust_147)

predicate ust_150() = (not smt2_single_eq(ust_147, b2048))

logic double_of_single__t_3__t_151 : double

axiom eq_218 : single_to_double_cast(b1604, double_of_single__t_3__t_151)

logic ust_152 : double

axiom eq_219 : single_to_double_cast(b1604, ust_152)

logic d_mul__t_3__t_13__t_152 : double

axiom eq_220 : mul_post1(NearestTiesToEven, b221, ust_152,
  d_mul__t_3__t_13__t_152)

logic ust_153 : double

axiom eq_221 : mul_post1(NearestTiesToEven, b221, ust_152, ust_153)

logic s_mul__t_3__t_151__t_151 : single

axiom eq_222 : mul_post(NearestTiesToEven, b1604, b1604,
  s_mul__t_3__t_151__t_151)

logic ust_154 : single

axiom eq_223 : mul_post(NearestTiesToEven, b1604, b1604, ust_154)

logic s_neg__t_154 : single

axiom eq_224 : neg_post(ust_154, s_neg__t_154)

logic ust_155 : single

axiom eq_225 : neg_post(ust_154, ust_155)

logic s_add__t_3__t_9__t_155 : single

axiom eq_226 : add_post(NearestTiesToEven, b205, ust_155,
  s_add__t_3__t_9__t_155)

logic ust_156 : single

axiom eq_227 : add_post(NearestTiesToEven, b205, ust_155, ust_156)

logic double_of_single__t_3__t_156 : double

axiom eq_228 : single_to_double_cast(ust_156, double_of_single__t_3__t_156)

logic ust_157 : double

axiom eq_229 : single_to_double_cast(ust_156, ust_157)

logic d_div__t_3__t_157__t_153 : double

axiom eq_230 : div_post1(NearestTiesToEven, ust_157, ust_153,
  d_div__t_3__t_157__t_153)

logic ust_158 : double

axiom eq_231 : div_post1(NearestTiesToEven, ust_157, ust_153, ust_158)

logic single_of_double__t_3__t_158 : single

axiom eq_232 : double_to_single_cast(NearestTiesToEven, ust_158,
  single_of_double__t_3__t_158)

logic ust_159 : single

axiom eq_233 : double_to_single_cast(NearestTiesToEven, ust_158, ust_159)

logic s_add__t_3__t_151__t_159 : single

axiom eq_234 : add_post(NearestTiesToEven, b1604, ust_159,
  s_add__t_3__t_151__t_159)

logic ust_160 : single

axiom eq_235 : add_post(NearestTiesToEven, b1604, ust_159, ust_160)

logic s_mul__t_3__t_160__t_160 : single

axiom eq_236 : mul_post(NearestTiesToEven, ust_160, ust_160,
  s_mul__t_3__t_160__t_160)

logic ust_161 : single

axiom eq_237 : mul_post(NearestTiesToEven, ust_160, ust_160, ust_161)

logic s_neg__t_161 : single

axiom eq_238 : neg_post(ust_161, s_neg__t_161)

logic ust_162 : single

axiom eq_239 : neg_post(ust_161, ust_162)

logic s_add__t_3__t_9__t_162 : single

axiom eq_240 : add_post(NearestTiesToEven, b205, ust_162,
  s_add__t_3__t_9__t_162)

logic ust_163 : single

axiom eq_241 : add_post(NearestTiesToEven, b205, ust_162, ust_163)

logic double_of_single__t_3__t_163 : double

axiom eq_242 : single_to_double_cast(ust_163, double_of_single__t_3__t_163)

logic ust_164 : double

axiom eq_243 : single_to_double_cast(ust_163, ust_164)

logic single_of_double__t_3__t_164 : single

axiom eq_244 : double_to_single_cast(NearestTiesToEven, ust_164,
  single_of_double__t_3__t_164)

logic ust_165 : single

axiom eq_245 : double_to_single_cast(NearestTiesToEven, ust_164, ust_165)

predicate ust_168() = (not smt2_single_eq(ust_165, b2027))

logic double_of_single__t_3__t_169 : double

axiom eq_246 : single_to_double_cast(b1623, double_of_single__t_3__t_169)

logic ust_170 : double

axiom eq_247 : single_to_double_cast(b1623, ust_170)

logic d_mul__t_3__t_13__t_170 : double

axiom eq_248 : mul_post1(NearestTiesToEven, b221, ust_170,
  d_mul__t_3__t_13__t_170)

logic ust_171 : double

axiom eq_249 : mul_post1(NearestTiesToEven, b221, ust_170, ust_171)

logic s_mul__t_3__t_169__t_169 : single

axiom eq_250 : mul_post(NearestTiesToEven, b1623, b1623,
  s_mul__t_3__t_169__t_169)

logic ust_172 : single

axiom eq_251 : mul_post(NearestTiesToEven, b1623, b1623, ust_172)

logic s_neg__t_172 : single

axiom eq_252 : neg_post(ust_172, s_neg__t_172)

logic ust_173 : single

axiom eq_253 : neg_post(ust_172, ust_173)

logic s_add__t_3__t_9__t_173 : single

axiom eq_254 : add_post(NearestTiesToEven, b205, ust_173,
  s_add__t_3__t_9__t_173)

logic ust_174 : single

axiom eq_255 : add_post(NearestTiesToEven, b205, ust_173, ust_174)

logic double_of_single__t_3__t_174 : double

axiom eq_256 : single_to_double_cast(ust_174, double_of_single__t_3__t_174)

logic ust_175 : double

axiom eq_257 : single_to_double_cast(ust_174, ust_175)

logic d_div__t_3__t_175__t_171 : double

axiom eq_258 : div_post1(NearestTiesToEven, ust_175, ust_171,
  d_div__t_3__t_175__t_171)

logic ust_176 : double

axiom eq_259 : div_post1(NearestTiesToEven, ust_175, ust_171, ust_176)

logic single_of_double__t_3__t_176 : single

axiom eq_260 : double_to_single_cast(NearestTiesToEven, ust_176,
  single_of_double__t_3__t_176)

logic ust_177 : single

axiom eq_261 : double_to_single_cast(NearestTiesToEven, ust_176, ust_177)

logic s_add__t_3__t_169__t_177 : single

axiom eq_262 : add_post(NearestTiesToEven, b1623, ust_177,
  s_add__t_3__t_169__t_177)

logic ust_178 : single

axiom eq_263 : add_post(NearestTiesToEven, b1623, ust_177, ust_178)

logic s_mul__t_3__t_178__t_178 : single

axiom eq_264 : mul_post(NearestTiesToEven, ust_178, ust_178,
  s_mul__t_3__t_178__t_178)

logic ust_179 : single

axiom eq_265 : mul_post(NearestTiesToEven, ust_178, ust_178, ust_179)

logic s_neg__t_179 : single

axiom eq_266 : neg_post(ust_179, s_neg__t_179)

logic ust_180 : single

axiom eq_267 : neg_post(ust_179, ust_180)

logic s_add__t_3__t_9__t_180 : single

axiom eq_268 : add_post(NearestTiesToEven, b205, ust_180,
  s_add__t_3__t_9__t_180)

logic ust_181 : single

axiom eq_269 : add_post(NearestTiesToEven, b205, ust_180, ust_181)

logic double_of_single__t_3__t_181 : double

axiom eq_270 : single_to_double_cast(ust_181, double_of_single__t_3__t_181)

logic ust_182 : double

axiom eq_271 : single_to_double_cast(ust_181, ust_182)

logic single_of_double__t_3__t_182 : single

axiom eq_272 : double_to_single_cast(NearestTiesToEven, ust_182,
  single_of_double__t_3__t_182)

logic ust_183 : single

axiom eq_273 : double_to_single_cast(NearestTiesToEven, ust_182, ust_183)

predicate ust_186() = (not smt2_single_eq(ust_183, b2006))

logic double_of_single__t_3__t_187 : double

axiom eq_274 : single_to_double_cast(b1642, double_of_single__t_3__t_187)

logic ust_188 : double

axiom eq_275 : single_to_double_cast(b1642, ust_188)

logic d_mul__t_3__t_13__t_188 : double

axiom eq_276 : mul_post1(NearestTiesToEven, b221, ust_188,
  d_mul__t_3__t_13__t_188)

logic ust_189 : double

axiom eq_277 : mul_post1(NearestTiesToEven, b221, ust_188, ust_189)

logic s_mul__t_3__t_187__t_187 : single

axiom eq_278 : mul_post(NearestTiesToEven, b1642, b1642,
  s_mul__t_3__t_187__t_187)

logic ust_190 : single

axiom eq_279 : mul_post(NearestTiesToEven, b1642, b1642, ust_190)

logic s_neg__t_190 : single

axiom eq_280 : neg_post(ust_190, s_neg__t_190)

logic ust_191 : single

axiom eq_281 : neg_post(ust_190, ust_191)

logic s_add__t_3__t_9__t_191 : single

axiom eq_282 : add_post(NearestTiesToEven, b205, ust_191,
  s_add__t_3__t_9__t_191)

logic ust_192 : single

axiom eq_283 : add_post(NearestTiesToEven, b205, ust_191, ust_192)

logic double_of_single__t_3__t_192 : double

axiom eq_284 : single_to_double_cast(ust_192, double_of_single__t_3__t_192)

logic ust_193 : double

axiom eq_285 : single_to_double_cast(ust_192, ust_193)

logic d_div__t_3__t_193__t_189 : double

axiom eq_286 : div_post1(NearestTiesToEven, ust_193, ust_189,
  d_div__t_3__t_193__t_189)

logic ust_194 : double

axiom eq_287 : div_post1(NearestTiesToEven, ust_193, ust_189, ust_194)

logic single_of_double__t_3__t_194 : single

axiom eq_288 : double_to_single_cast(NearestTiesToEven, ust_194,
  single_of_double__t_3__t_194)

logic ust_195 : single

axiom eq_289 : double_to_single_cast(NearestTiesToEven, ust_194, ust_195)

logic s_add__t_3__t_187__t_195 : single

axiom eq_290 : add_post(NearestTiesToEven, b1642, ust_195,
  s_add__t_3__t_187__t_195)

logic ust_196 : single

axiom eq_291 : add_post(NearestTiesToEven, b1642, ust_195, ust_196)

logic s_mul__t_3__t_196__t_196 : single

axiom eq_292 : mul_post(NearestTiesToEven, ust_196, ust_196,
  s_mul__t_3__t_196__t_196)

logic ust_197 : single

axiom eq_293 : mul_post(NearestTiesToEven, ust_196, ust_196, ust_197)

logic s_neg__t_197 : single

axiom eq_294 : neg_post(ust_197, s_neg__t_197)

logic ust_198 : single

axiom eq_295 : neg_post(ust_197, ust_198)

logic s_add__t_3__t_9__t_198 : single

axiom eq_296 : add_post(NearestTiesToEven, b205, ust_198,
  s_add__t_3__t_9__t_198)

logic ust_199 : single

axiom eq_297 : add_post(NearestTiesToEven, b205, ust_198, ust_199)

logic double_of_single__t_3__t_199 : double

axiom eq_298 : single_to_double_cast(ust_199, double_of_single__t_3__t_199)

logic ust_200 : double

axiom eq_299 : single_to_double_cast(ust_199, ust_200)

logic single_of_double__t_3__t_200 : single

axiom eq_300 : double_to_single_cast(NearestTiesToEven, ust_200,
  single_of_double__t_3__t_200)

logic ust_201 : single

axiom eq_301 : double_to_single_cast(NearestTiesToEven, ust_200, ust_201)

predicate ust_204() = (not smt2_single_eq(ust_201, b1985))

logic double_of_single__t_3__t_205 : double

axiom eq_302 : single_to_double_cast(b1661, double_of_single__t_3__t_205)

logic ust_206 : double

axiom eq_303 : single_to_double_cast(b1661, ust_206)

logic d_mul__t_3__t_13__t_206 : double

axiom eq_304 : mul_post1(NearestTiesToEven, b221, ust_206,
  d_mul__t_3__t_13__t_206)

logic ust_207 : double

axiom eq_305 : mul_post1(NearestTiesToEven, b221, ust_206, ust_207)

logic s_mul__t_3__t_205__t_205 : single

axiom eq_306 : mul_post(NearestTiesToEven, b1661, b1661,
  s_mul__t_3__t_205__t_205)

logic ust_208 : single

axiom eq_307 : mul_post(NearestTiesToEven, b1661, b1661, ust_208)

logic s_neg__t_208 : single

axiom eq_308 : neg_post(ust_208, s_neg__t_208)

logic ust_209 : single

axiom eq_309 : neg_post(ust_208, ust_209)

logic s_add__t_3__t_9__t_209 : single

axiom eq_310 : add_post(NearestTiesToEven, b205, ust_209,
  s_add__t_3__t_9__t_209)

logic ust_210 : single

axiom eq_311 : add_post(NearestTiesToEven, b205, ust_209, ust_210)

logic double_of_single__t_3__t_210 : double

axiom eq_312 : single_to_double_cast(ust_210, double_of_single__t_3__t_210)

logic ust_211 : double

axiom eq_313 : single_to_double_cast(ust_210, ust_211)

logic d_div__t_3__t_211__t_207 : double

axiom eq_314 : div_post1(NearestTiesToEven, ust_211, ust_207,
  d_div__t_3__t_211__t_207)

logic ust_212 : double

axiom eq_315 : div_post1(NearestTiesToEven, ust_211, ust_207, ust_212)

logic single_of_double__t_3__t_212 : single

axiom eq_316 : double_to_single_cast(NearestTiesToEven, ust_212,
  single_of_double__t_3__t_212)

logic ust_213 : single

axiom eq_317 : double_to_single_cast(NearestTiesToEven, ust_212, ust_213)

logic s_add__t_3__t_205__t_213 : single

axiom eq_318 : add_post(NearestTiesToEven, b1661, ust_213,
  s_add__t_3__t_205__t_213)

logic ust_214 : single

axiom eq_319 : add_post(NearestTiesToEven, b1661, ust_213, ust_214)

logic s_mul__t_3__t_214__t_214 : single

axiom eq_320 : mul_post(NearestTiesToEven, ust_214, ust_214,
  s_mul__t_3__t_214__t_214)

logic ust_215 : single

axiom eq_321 : mul_post(NearestTiesToEven, ust_214, ust_214, ust_215)

logic s_neg__t_215 : single

axiom eq_322 : neg_post(ust_215, s_neg__t_215)

logic ust_216 : single

axiom eq_323 : neg_post(ust_215, ust_216)

logic s_add__t_3__t_9__t_216 : single

axiom eq_324 : add_post(NearestTiesToEven, b205, ust_216,
  s_add__t_3__t_9__t_216)

logic ust_217 : single

axiom eq_325 : add_post(NearestTiesToEven, b205, ust_216, ust_217)

logic double_of_single__t_3__t_217 : double

axiom eq_326 : single_to_double_cast(ust_217, double_of_single__t_3__t_217)

logic ust_218 : double

axiom eq_327 : single_to_double_cast(ust_217, ust_218)

logic single_of_double__t_3__t_218 : single

axiom eq_328 : double_to_single_cast(NearestTiesToEven, ust_218,
  single_of_double__t_3__t_218)

logic ust_219 : single

axiom eq_329 : double_to_single_cast(NearestTiesToEven, ust_218, ust_219)

predicate ust_222() = (not smt2_single_eq(ust_219, b1964))

logic double_of_single__t_3__t_223 : double

axiom eq_330 : single_to_double_cast(b1680, double_of_single__t_3__t_223)

logic ust_224 : double

axiom eq_331 : single_to_double_cast(b1680, ust_224)

logic d_mul__t_3__t_13__t_224 : double

axiom eq_332 : mul_post1(NearestTiesToEven, b221, ust_224,
  d_mul__t_3__t_13__t_224)

logic ust_225 : double

axiom eq_333 : mul_post1(NearestTiesToEven, b221, ust_224, ust_225)

logic s_mul__t_3__t_223__t_223 : single

axiom eq_334 : mul_post(NearestTiesToEven, b1680, b1680,
  s_mul__t_3__t_223__t_223)

logic ust_226 : single

axiom eq_335 : mul_post(NearestTiesToEven, b1680, b1680, ust_226)

logic s_neg__t_226 : single

axiom eq_336 : neg_post(ust_226, s_neg__t_226)

logic ust_227 : single

axiom eq_337 : neg_post(ust_226, ust_227)

logic s_add__t_3__t_9__t_227 : single

axiom eq_338 : add_post(NearestTiesToEven, b205, ust_227,
  s_add__t_3__t_9__t_227)

logic ust_228 : single

axiom eq_339 : add_post(NearestTiesToEven, b205, ust_227, ust_228)

logic double_of_single__t_3__t_228 : double

axiom eq_340 : single_to_double_cast(ust_228, double_of_single__t_3__t_228)

logic ust_229 : double

axiom eq_341 : single_to_double_cast(ust_228, ust_229)

logic d_div__t_3__t_229__t_225 : double

axiom eq_342 : div_post1(NearestTiesToEven, ust_229, ust_225,
  d_div__t_3__t_229__t_225)

logic ust_230 : double

axiom eq_343 : div_post1(NearestTiesToEven, ust_229, ust_225, ust_230)

logic single_of_double__t_3__t_230 : single

axiom eq_344 : double_to_single_cast(NearestTiesToEven, ust_230,
  single_of_double__t_3__t_230)

logic ust_231 : single

axiom eq_345 : double_to_single_cast(NearestTiesToEven, ust_230, ust_231)

logic s_add__t_3__t_223__t_231 : single

axiom eq_346 : add_post(NearestTiesToEven, b1680, ust_231,
  s_add__t_3__t_223__t_231)

logic ust_232 : single

axiom eq_347 : add_post(NearestTiesToEven, b1680, ust_231, ust_232)

logic s_mul__t_3__t_232__t_232 : single

axiom eq_348 : mul_post(NearestTiesToEven, ust_232, ust_232,
  s_mul__t_3__t_232__t_232)

logic ust_233 : single

axiom eq_349 : mul_post(NearestTiesToEven, ust_232, ust_232, ust_233)

logic s_neg__t_233 : single

axiom eq_350 : neg_post(ust_233, s_neg__t_233)

logic ust_234 : single

axiom eq_351 : neg_post(ust_233, ust_234)

logic s_add__t_3__t_9__t_234 : single

axiom eq_352 : add_post(NearestTiesToEven, b205, ust_234,
  s_add__t_3__t_9__t_234)

logic ust_235 : single

axiom eq_353 : add_post(NearestTiesToEven, b205, ust_234, ust_235)

logic double_of_single__t_3__t_235 : double

axiom eq_354 : single_to_double_cast(ust_235, double_of_single__t_3__t_235)

logic ust_236 : double

axiom eq_355 : single_to_double_cast(ust_235, ust_236)

logic single_of_double__t_3__t_236 : single

axiom eq_356 : double_to_single_cast(NearestTiesToEven, ust_236,
  single_of_double__t_3__t_236)

logic ust_237 : single

axiom eq_357 : double_to_single_cast(NearestTiesToEven, ust_236, ust_237)

predicate ust_240() = (not smt2_single_eq(ust_237, b1943))

logic double_of_single__t_3__t_241 : double

axiom eq_358 : single_to_double_cast(b1699, double_of_single__t_3__t_241)

logic ust_242 : double

axiom eq_359 : single_to_double_cast(b1699, ust_242)

logic d_mul__t_3__t_13__t_242 : double

axiom eq_360 : mul_post1(NearestTiesToEven, b221, ust_242,
  d_mul__t_3__t_13__t_242)

logic ust_243 : double

axiom eq_361 : mul_post1(NearestTiesToEven, b221, ust_242, ust_243)

logic s_mul__t_3__t_241__t_241 : single

axiom eq_362 : mul_post(NearestTiesToEven, b1699, b1699,
  s_mul__t_3__t_241__t_241)

logic ust_244 : single

axiom eq_363 : mul_post(NearestTiesToEven, b1699, b1699, ust_244)

logic s_neg__t_244 : single

axiom eq_364 : neg_post(ust_244, s_neg__t_244)

logic ust_245 : single

axiom eq_365 : neg_post(ust_244, ust_245)

logic s_add__t_3__t_9__t_245 : single

axiom eq_366 : add_post(NearestTiesToEven, b205, ust_245,
  s_add__t_3__t_9__t_245)

logic ust_246 : single

axiom eq_367 : add_post(NearestTiesToEven, b205, ust_245, ust_246)

logic double_of_single__t_3__t_246 : double

axiom eq_368 : single_to_double_cast(ust_246, double_of_single__t_3__t_246)

logic ust_247 : double

axiom eq_369 : single_to_double_cast(ust_246, ust_247)

logic d_div__t_3__t_247__t_243 : double

axiom eq_370 : div_post1(NearestTiesToEven, ust_247, ust_243,
  d_div__t_3__t_247__t_243)

logic ust_248 : double

axiom eq_371 : div_post1(NearestTiesToEven, ust_247, ust_243, ust_248)

logic single_of_double__t_3__t_248 : single

axiom eq_372 : double_to_single_cast(NearestTiesToEven, ust_248,
  single_of_double__t_3__t_248)

logic ust_249 : single

axiom eq_373 : double_to_single_cast(NearestTiesToEven, ust_248, ust_249)

logic s_add__t_3__t_241__t_249 : single

axiom eq_374 : add_post(NearestTiesToEven, b1699, ust_249,
  s_add__t_3__t_241__t_249)

logic ust_250 : single

axiom eq_375 : add_post(NearestTiesToEven, b1699, ust_249, ust_250)

logic s_mul__t_3__t_250__t_250 : single

axiom eq_376 : mul_post(NearestTiesToEven, ust_250, ust_250,
  s_mul__t_3__t_250__t_250)

logic ust_251 : single

axiom eq_377 : mul_post(NearestTiesToEven, ust_250, ust_250, ust_251)

logic s_neg__t_251 : single

axiom eq_378 : neg_post(ust_251, s_neg__t_251)

logic ust_252 : single

axiom eq_379 : neg_post(ust_251, ust_252)

logic s_add__t_3__t_9__t_252 : single

axiom eq_380 : add_post(NearestTiesToEven, b205, ust_252,
  s_add__t_3__t_9__t_252)

logic ust_253 : single

axiom eq_381 : add_post(NearestTiesToEven, b205, ust_252, ust_253)

logic double_of_single__t_3__t_253 : double

axiom eq_382 : single_to_double_cast(ust_253, double_of_single__t_3__t_253)

logic ust_254 : double

axiom eq_383 : single_to_double_cast(ust_253, ust_254)

logic single_of_double__t_3__t_254 : single

axiom eq_384 : double_to_single_cast(NearestTiesToEven, ust_254,
  single_of_double__t_3__t_254)

logic ust_255 : single

axiom eq_385 : double_to_single_cast(NearestTiesToEven, ust_254, ust_255)

predicate ust_258() = (not smt2_single_eq(ust_255, b1922))

logic double_of_single__t_3__t_259 : double

axiom eq_386 : single_to_double_cast(b1718, double_of_single__t_3__t_259)

logic ust_260 : double

axiom eq_387 : single_to_double_cast(b1718, ust_260)

logic d_mul__t_3__t_13__t_260 : double

axiom eq_388 : mul_post1(NearestTiesToEven, b221, ust_260,
  d_mul__t_3__t_13__t_260)

logic ust_261 : double

axiom eq_389 : mul_post1(NearestTiesToEven, b221, ust_260, ust_261)

logic s_mul__t_3__t_259__t_259 : single

axiom eq_390 : mul_post(NearestTiesToEven, b1718, b1718,
  s_mul__t_3__t_259__t_259)

logic ust_262 : single

axiom eq_391 : mul_post(NearestTiesToEven, b1718, b1718, ust_262)

logic s_neg__t_262 : single

axiom eq_392 : neg_post(ust_262, s_neg__t_262)

logic ust_263 : single

axiom eq_393 : neg_post(ust_262, ust_263)

logic s_add__t_3__t_9__t_263 : single

axiom eq_394 : add_post(NearestTiesToEven, b205, ust_263,
  s_add__t_3__t_9__t_263)

logic ust_264 : single

axiom eq_395 : add_post(NearestTiesToEven, b205, ust_263, ust_264)

logic double_of_single__t_3__t_264 : double

axiom eq_396 : single_to_double_cast(ust_264, double_of_single__t_3__t_264)

logic ust_265 : double

axiom eq_397 : single_to_double_cast(ust_264, ust_265)

logic d_div__t_3__t_265__t_261 : double

axiom eq_398 : div_post1(NearestTiesToEven, ust_265, ust_261,
  d_div__t_3__t_265__t_261)

logic ust_266 : double

axiom eq_399 : div_post1(NearestTiesToEven, ust_265, ust_261, ust_266)

logic single_of_double__t_3__t_266 : single

axiom eq_400 : double_to_single_cast(NearestTiesToEven, ust_266,
  single_of_double__t_3__t_266)

logic ust_267 : single

axiom eq_401 : double_to_single_cast(NearestTiesToEven, ust_266, ust_267)

logic s_add__t_3__t_259__t_267 : single

axiom eq_402 : add_post(NearestTiesToEven, b1718, ust_267,
  s_add__t_3__t_259__t_267)

logic ust_268 : single

axiom eq_403 : add_post(NearestTiesToEven, b1718, ust_267, ust_268)

logic s_mul__t_3__t_268__t_268 : single

axiom eq_404 : mul_post(NearestTiesToEven, ust_268, ust_268,
  s_mul__t_3__t_268__t_268)

logic ust_269 : single

axiom eq_405 : mul_post(NearestTiesToEven, ust_268, ust_268, ust_269)

logic s_neg__t_269 : single

axiom eq_406 : neg_post(ust_269, s_neg__t_269)

logic ust_270 : single

axiom eq_407 : neg_post(ust_269, ust_270)

logic s_add__t_3__t_9__t_270 : single

axiom eq_408 : add_post(NearestTiesToEven, b205, ust_270,
  s_add__t_3__t_9__t_270)

logic ust_271 : single

axiom eq_409 : add_post(NearestTiesToEven, b205, ust_270, ust_271)

logic double_of_single__t_3__t_271 : double

axiom eq_410 : single_to_double_cast(ust_271, double_of_single__t_3__t_271)

logic ust_272 : double

axiom eq_411 : single_to_double_cast(ust_271, ust_272)

logic single_of_double__t_3__t_272 : single

axiom eq_412 : double_to_single_cast(NearestTiesToEven, ust_272,
  single_of_double__t_3__t_272)

logic ust_273 : single

axiom eq_413 : double_to_single_cast(NearestTiesToEven, ust_272, ust_273)

predicate ust_276() = (not smt2_single_eq(ust_273, b1901))

logic double_of_single__t_3__t_277 : double

axiom eq_414 : single_to_double_cast(b1737, double_of_single__t_3__t_277)

logic ust_278 : double

axiom eq_415 : single_to_double_cast(b1737, ust_278)

logic d_mul__t_3__t_13__t_278 : double

axiom eq_416 : mul_post1(NearestTiesToEven, b221, ust_278,
  d_mul__t_3__t_13__t_278)

logic ust_279 : double

axiom eq_417 : mul_post1(NearestTiesToEven, b221, ust_278, ust_279)

logic s_mul__t_3__t_277__t_277 : single

axiom eq_418 : mul_post(NearestTiesToEven, b1737, b1737,
  s_mul__t_3__t_277__t_277)

logic ust_280 : single

axiom eq_419 : mul_post(NearestTiesToEven, b1737, b1737, ust_280)

logic s_neg__t_280 : single

axiom eq_420 : neg_post(ust_280, s_neg__t_280)

logic ust_281 : single

axiom eq_421 : neg_post(ust_280, ust_281)

logic s_add__t_3__t_9__t_281 : single

axiom eq_422 : add_post(NearestTiesToEven, b205, ust_281,
  s_add__t_3__t_9__t_281)

logic ust_282 : single

axiom eq_423 : add_post(NearestTiesToEven, b205, ust_281, ust_282)

logic double_of_single__t_3__t_282 : double

axiom eq_424 : single_to_double_cast(ust_282, double_of_single__t_3__t_282)

logic ust_283 : double

axiom eq_425 : single_to_double_cast(ust_282, ust_283)

logic d_div__t_3__t_283__t_279 : double

axiom eq_426 : div_post1(NearestTiesToEven, ust_283, ust_279,
  d_div__t_3__t_283__t_279)

logic ust_284 : double

axiom eq_427 : div_post1(NearestTiesToEven, ust_283, ust_279, ust_284)

logic single_of_double__t_3__t_284 : single

axiom eq_428 : double_to_single_cast(NearestTiesToEven, ust_284,
  single_of_double__t_3__t_284)

logic ust_285 : single

axiom eq_429 : double_to_single_cast(NearestTiesToEven, ust_284, ust_285)

logic s_add__t_3__t_277__t_285 : single

axiom eq_430 : add_post(NearestTiesToEven, b1737, ust_285,
  s_add__t_3__t_277__t_285)

logic ust_286 : single

axiom eq_431 : add_post(NearestTiesToEven, b1737, ust_285, ust_286)

logic s_mul__t_3__t_286__t_286 : single

axiom eq_432 : mul_post(NearestTiesToEven, ust_286, ust_286,
  s_mul__t_3__t_286__t_286)

logic ust_287 : single

axiom eq_433 : mul_post(NearestTiesToEven, ust_286, ust_286, ust_287)

logic s_neg__t_287 : single

axiom eq_434 : neg_post(ust_287, s_neg__t_287)

logic ust_288 : single

axiom eq_435 : neg_post(ust_287, ust_288)

logic s_add__t_3__t_9__t_288 : single

axiom eq_436 : add_post(NearestTiesToEven, b205, ust_288,
  s_add__t_3__t_9__t_288)

logic ust_289 : single

axiom eq_437 : add_post(NearestTiesToEven, b205, ust_288, ust_289)

logic double_of_single__t_3__t_289 : double

axiom eq_438 : single_to_double_cast(ust_289, double_of_single__t_3__t_289)

logic ust_290 : double

axiom eq_439 : single_to_double_cast(ust_289, ust_290)

logic single_of_double__t_3__t_290 : single

axiom eq_440 : double_to_single_cast(NearestTiesToEven, ust_290,
  single_of_double__t_3__t_290)

logic ust_291 : single

axiom eq_441 : double_to_single_cast(NearestTiesToEven, ust_290, ust_291)

predicate ust_294() = (not smt2_single_eq(ust_291, b1880))

logic double_of_single__t_3__t_295 : double

axiom eq_442 : single_to_double_cast(b1756, double_of_single__t_3__t_295)

logic ust_296 : double

axiom eq_443 : single_to_double_cast(b1756, ust_296)

logic d_mul__t_3__t_13__t_296 : double

axiom eq_444 : mul_post1(NearestTiesToEven, b221, ust_296,
  d_mul__t_3__t_13__t_296)

logic ust_297 : double

axiom eq_445 : mul_post1(NearestTiesToEven, b221, ust_296, ust_297)

logic s_mul__t_3__t_295__t_295 : single

axiom eq_446 : mul_post(NearestTiesToEven, b1756, b1756,
  s_mul__t_3__t_295__t_295)

logic ust_298 : single

axiom eq_447 : mul_post(NearestTiesToEven, b1756, b1756, ust_298)

logic s_neg__t_298 : single

axiom eq_448 : neg_post(ust_298, s_neg__t_298)

logic ust_299 : single

axiom eq_449 : neg_post(ust_298, ust_299)

logic s_add__t_3__t_9__t_299 : single

axiom eq_450 : add_post(NearestTiesToEven, b205, ust_299,
  s_add__t_3__t_9__t_299)

logic ust_300 : single

axiom eq_451 : add_post(NearestTiesToEven, b205, ust_299, ust_300)

logic double_of_single__t_3__t_300 : double

axiom eq_452 : single_to_double_cast(ust_300, double_of_single__t_3__t_300)

logic ust_301 : double

axiom eq_453 : single_to_double_cast(ust_300, ust_301)

logic d_div__t_3__t_301__t_297 : double

axiom eq_454 : div_post1(NearestTiesToEven, ust_301, ust_297,
  d_div__t_3__t_301__t_297)

logic ust_302 : double

axiom eq_455 : div_post1(NearestTiesToEven, ust_301, ust_297, ust_302)

logic single_of_double__t_3__t_302 : single

axiom eq_456 : double_to_single_cast(NearestTiesToEven, ust_302,
  single_of_double__t_3__t_302)

logic ust_303 : single

axiom eq_457 : double_to_single_cast(NearestTiesToEven, ust_302, ust_303)

logic s_add__t_3__t_295__t_303 : single

axiom eq_458 : add_post(NearestTiesToEven, b1756, ust_303,
  s_add__t_3__t_295__t_303)

logic ust_304 : single

axiom eq_459 : add_post(NearestTiesToEven, b1756, ust_303, ust_304)

logic s_mul__t_3__t_304__t_304 : single

axiom eq_460 : mul_post(NearestTiesToEven, ust_304, ust_304,
  s_mul__t_3__t_304__t_304)

logic ust_305 : single

axiom eq_461 : mul_post(NearestTiesToEven, ust_304, ust_304, ust_305)

logic s_neg__t_305 : single

axiom eq_462 : neg_post(ust_305, s_neg__t_305)

logic ust_306 : single

axiom eq_463 : neg_post(ust_305, ust_306)

logic s_add__t_3__t_9__t_306 : single

axiom eq_464 : add_post(NearestTiesToEven, b205, ust_306,
  s_add__t_3__t_9__t_306)

logic ust_307 : single

axiom eq_465 : add_post(NearestTiesToEven, b205, ust_306, ust_307)

logic double_of_single__t_3__t_307 : double

axiom eq_466 : single_to_double_cast(ust_307, double_of_single__t_3__t_307)

logic ust_308 : double

axiom eq_467 : single_to_double_cast(ust_307, ust_308)

logic single_of_double__t_3__t_308 : single

axiom eq_468 : double_to_single_cast(NearestTiesToEven, ust_308,
  single_of_double__t_3__t_308)

logic ust_309 : single

axiom eq_469 : double_to_single_cast(NearestTiesToEven, ust_308, ust_309)

predicate ust_312() = (not smt2_single_eq(ust_309, b1859))

logic double_of_single__t_3__t_313 : double

axiom eq_470 : single_to_double_cast(b1775, double_of_single__t_3__t_313)

logic ust_314 : double

axiom eq_471 : single_to_double_cast(b1775, ust_314)

logic d_mul__t_3__t_13__t_314 : double

axiom eq_472 : mul_post1(NearestTiesToEven, b221, ust_314,
  d_mul__t_3__t_13__t_314)

logic ust_315 : double

axiom eq_473 : mul_post1(NearestTiesToEven, b221, ust_314, ust_315)

logic s_mul__t_3__t_313__t_313 : single

axiom eq_474 : mul_post(NearestTiesToEven, b1775, b1775,
  s_mul__t_3__t_313__t_313)

logic ust_316 : single

axiom eq_475 : mul_post(NearestTiesToEven, b1775, b1775, ust_316)

logic s_neg__t_316 : single

axiom eq_476 : neg_post(ust_316, s_neg__t_316)

logic ust_317 : single

axiom eq_477 : neg_post(ust_316, ust_317)

logic s_add__t_3__t_9__t_317 : single

axiom eq_478 : add_post(NearestTiesToEven, b205, ust_317,
  s_add__t_3__t_9__t_317)

logic ust_318 : single

axiom eq_479 : add_post(NearestTiesToEven, b205, ust_317, ust_318)

logic double_of_single__t_3__t_318 : double

axiom eq_480 : single_to_double_cast(ust_318, double_of_single__t_3__t_318)

logic ust_319 : double

axiom eq_481 : single_to_double_cast(ust_318, ust_319)

logic d_div__t_3__t_319__t_315 : double

axiom eq_482 : div_post1(NearestTiesToEven, ust_319, ust_315,
  d_div__t_3__t_319__t_315)

logic ust_320 : double

axiom eq_483 : div_post1(NearestTiesToEven, ust_319, ust_315, ust_320)

logic single_of_double__t_3__t_320 : single

axiom eq_484 : double_to_single_cast(NearestTiesToEven, ust_320,
  single_of_double__t_3__t_320)

logic ust_321 : single

axiom eq_485 : double_to_single_cast(NearestTiesToEven, ust_320, ust_321)

logic s_add__t_3__t_313__t_321 : single

axiom eq_486 : add_post(NearestTiesToEven, b1775, ust_321,
  s_add__t_3__t_313__t_321)

logic ust_322 : single

axiom eq_487 : add_post(NearestTiesToEven, b1775, ust_321, ust_322)

logic s_mul__t_3__t_322__t_322 : single

axiom eq_488 : mul_post(NearestTiesToEven, ust_322, ust_322,
  s_mul__t_3__t_322__t_322)

logic ust_323 : single

axiom eq_489 : mul_post(NearestTiesToEven, ust_322, ust_322, ust_323)

logic s_neg__t_323 : single

axiom eq_490 : neg_post(ust_323, s_neg__t_323)

logic ust_324 : single

axiom eq_491 : neg_post(ust_323, ust_324)

logic s_add__t_3__t_9__t_324 : single

axiom eq_492 : add_post(NearestTiesToEven, b205, ust_324,
  s_add__t_3__t_9__t_324)

logic ust_325 : single

axiom eq_493 : add_post(NearestTiesToEven, b205, ust_324, ust_325)

logic double_of_single__t_3__t_325 : double

axiom eq_494 : single_to_double_cast(ust_325, double_of_single__t_3__t_325)

logic ust_326 : double

axiom eq_495 : single_to_double_cast(ust_325, ust_326)

logic single_of_double__t_3__t_326 : single

axiom eq_496 : double_to_single_cast(NearestTiesToEven, ust_326,
  single_of_double__t_3__t_326)

logic ust_327 : single

axiom eq_497 : double_to_single_cast(NearestTiesToEven, ust_326, ust_327)

predicate ust_330() = (not smt2_single_eq(ust_327, b1838))

predicate ust_332() = (not smt2_single_eq(ust_52, b1509))

predicate ust_334() = (not smt2_single_eq(ust_70, b1528))

predicate ust_336() = (not smt2_single_eq(ust_88, b1547))

predicate ust_338() = (not smt2_single_eq(ust_106, b1566))

predicate ust_340() = (not smt2_single_eq(ust_124, b1585))

predicate ust_342() = (not smt2_single_eq(ust_142, b1604))

predicate ust_344() = (not smt2_single_eq(ust_160, b1623))

predicate ust_346() = (not smt2_single_eq(ust_178, b1642))

predicate ust_348() = (not smt2_single_eq(ust_196, b1661))

predicate ust_350() = (not smt2_single_eq(ust_214, b1680))

predicate ust_352() = (not smt2_single_eq(ust_232, b1699))

predicate ust_354() = (not smt2_single_eq(ust_250, b1718))

predicate ust_356() = (not smt2_single_eq(ust_268, b1737))

predicate ust_358() = (not smt2_single_eq(ust_286, b1756))

predicate ust_360() = (not smt2_single_eq(ust_304, b1775))

predicate ust_362() = (not smt2_single_eq(ust_34, b1490))

predicate ust_365() = (not smt2_single_eq(ust_322, b1794))

logic double_of_single__t_3__t_363 : double

axiom eq_498 : single_to_double_cast(b1794, double_of_single__t_3__t_363)

logic ust_366 : double

axiom eq_499 : single_to_double_cast(b1794, ust_366)

logic d_mul__t_3__t_13__t_366 : double

axiom eq_500 : mul_post1(NearestTiesToEven, b221, ust_366,
  d_mul__t_3__t_13__t_366)

logic ust_367 : double

axiom eq_501 : mul_post1(NearestTiesToEven, b221, ust_366, ust_367)

logic s_mul__t_3__t_363__t_363 : single

axiom eq_502 : mul_post(NearestTiesToEven, b1794, b1794,
  s_mul__t_3__t_363__t_363)

logic ust_368 : single

axiom eq_503 : mul_post(NearestTiesToEven, b1794, b1794, ust_368)

logic s_neg__t_368 : single

axiom eq_504 : neg_post(ust_368, s_neg__t_368)

logic ust_369 : single

axiom eq_505 : neg_post(ust_368, ust_369)

logic s_add__t_3__t_9__t_369 : single

axiom eq_506 : add_post(NearestTiesToEven, b205, ust_369,
  s_add__t_3__t_9__t_369)

logic ust_370 : single

axiom eq_507 : add_post(NearestTiesToEven, b205, ust_369, ust_370)

logic double_of_single__t_3__t_370 : double

axiom eq_508 : single_to_double_cast(ust_370, double_of_single__t_3__t_370)

logic ust_371 : double

axiom eq_509 : single_to_double_cast(ust_370, ust_371)

logic d_div__t_3__t_371__t_367 : double

axiom eq_510 : div_post1(NearestTiesToEven, ust_371, ust_367,
  d_div__t_3__t_371__t_367)

logic ust_372 : double

axiom eq_511 : div_post1(NearestTiesToEven, ust_371, ust_367, ust_372)

logic single_of_double__t_3__t_372 : single

axiom eq_512 : double_to_single_cast(NearestTiesToEven, ust_372,
  single_of_double__t_3__t_372)

logic ust_373 : single

axiom eq_513 : double_to_single_cast(NearestTiesToEven, ust_372, ust_373)

logic s_add__t_3__t_363__t_373 : single

axiom eq_514 : add_post(NearestTiesToEven, b1794, ust_373,
  s_add__t_3__t_363__t_373)

logic ust_374 : single

axiom eq_515 : add_post(NearestTiesToEven, b1794, ust_373, ust_374)

logic s_mul__t_3__t_374__t_374 : single

axiom eq_516 : mul_post(NearestTiesToEven, ust_374, ust_374,
  s_mul__t_3__t_374__t_374)

logic ust_375 : single

axiom eq_517 : mul_post(NearestTiesToEven, ust_374, ust_374, ust_375)

logic s_neg__t_375 : single

axiom eq_518 : neg_post(ust_375, s_neg__t_375)

logic ust_376 : single

axiom eq_519 : neg_post(ust_375, ust_376)

logic s_add__t_3__t_9__t_376 : single

axiom eq_520 : add_post(NearestTiesToEven, b205, ust_376,
  s_add__t_3__t_9__t_376)

logic ust_377 : single

axiom eq_521 : add_post(NearestTiesToEven, b205, ust_376, ust_377)

logic double_of_single__t_3__t_377 : double

axiom eq_522 : single_to_double_cast(ust_377, double_of_single__t_3__t_377)

logic ust_378 : double

axiom eq_523 : single_to_double_cast(ust_377, ust_378)

logic single_of_double__t_3__t_378 : single

axiom eq_524 : double_to_single_cast(NearestTiesToEven, ust_378,
  single_of_double__t_3__t_378)

logic ust_379 : single

axiom eq_525 : double_to_single_cast(NearestTiesToEven, ust_378, ust_379)

predicate ust_382() = (not smt2_single_eq(ust_379, b1816))

predicate ust_386() = (not smt2_double_eq(b1474, b818))

predicate ust_389() = (not smt2_double_eq(ust_378, b1791))

predicate ust_392() = (not smt2_double_eq(ust_326, b1772))

predicate ust_395() = (not smt2_double_eq(ust_308, b1753))

predicate ust_398() = (not smt2_double_eq(ust_290, b1734))

predicate ust_401() = (not smt2_double_eq(ust_272, b1715))

predicate ust_404() = (not smt2_double_eq(ust_254, b1696))

predicate ust_407() = (not smt2_double_eq(ust_236, b1677))

predicate ust_410() = (not smt2_double_eq(ust_218, b1658))

predicate ust_413() = (not smt2_double_eq(ust_200, b1639))

predicate ust_416() = (not smt2_double_eq(ust_182, b1620))

predicate ust_419() = (not smt2_double_eq(ust_164, b1601))

predicate ust_422() = (not smt2_double_eq(ust_146, b1582))

predicate ust_425() = (not smt2_double_eq(ust_128, b1563))

predicate ust_428() = (not smt2_double_eq(ust_110, b1544))

predicate ust_431() = (not smt2_double_eq(ust_92, b1525))

predicate ust_434() = (not smt2_double_eq(ust_74, b1506))

predicate ust_437() = (not smt2_double_eq(ust_56, b1487))

predicate ust_440() = (not smt2_double_eq(ust_38, b1482))

logic single_of_double__t_3__t_383 : single

axiom eq_526 : double_to_single_cast(NearestTiesToEven, b1474,
  single_of_double__t_3__t_383)

logic ust_441 : single

axiom eq_527 : double_to_single_cast(NearestTiesToEven, b1474, ust_441)

predicate ust_444() = (not smt2_single_eq(ust_441, b1477))

predicate ust_447() = (not le(b212, ust_441))

predicate ust_450() = (not le(b1477, b832))

predicate ust_452() = (ust_450 and le(b212, b205))

predicate ust_453() = (ust_447 and ust_452)

logic s_neg__t_441 : single

axiom eq_528 : neg_post(ust_441, s_neg__t_441)

logic ust_454 : single

axiom eq_529 : neg_post(ust_441, ust_454)

predicate ust_456() = (ust_453 and smt2_single_eq(b1477, ust_454))

predicate ust_457() = (ust_444 and ust_456)

predicate ust_459() = (ust_457 and smt2_double_eq(ust_25, b1482))

predicate ust_461() = (ust_459 and smt2_single_eq(ust_21, b1490))

logic double_of_single__t_3__t_27 : double

axiom eq_530 : single_to_double_cast(b2181, double_of_single__t_3__t_27)

logic ust_462 : double

axiom eq_531 : single_to_double_cast(b2181, ust_462)

predicate ust_465() = (ust_461 and le1(ust_462, b210))

predicate ust_466() = (ust_440 and ust_465)

predicate ust_468() = (ust_466 and smt2_double_eq(b1487, b1482))

predicate ust_470() = (ust_468 and smt2_single_eq(b1490, b1509))

predicate ust_471() = (ust_437 and ust_470)

predicate ust_473() = (ust_471 and smt2_double_eq(b1506, b1487))

predicate ust_475() = (ust_473 and smt2_single_eq(b1509, b1528))

predicate ust_476() = (ust_434 and ust_475)

predicate ust_478() = (ust_476 and smt2_double_eq(b1525, b1506))

predicate ust_480() = (ust_478 and smt2_single_eq(b1528, b1547))

predicate ust_481() = (ust_431 and ust_480)

predicate ust_483() = (ust_481 and smt2_double_eq(b1544, b1525))

predicate ust_485() = (ust_483 and smt2_single_eq(b1547, b1566))

predicate ust_486() = (ust_428 and ust_485)

predicate ust_488() = (ust_486 and smt2_double_eq(b1563, b1544))

predicate ust_490() = (ust_488 and smt2_single_eq(b1566, b1585))

predicate ust_491() = (ust_425 and ust_490)

predicate ust_493() = (ust_491 and smt2_double_eq(b1582, b1563))

predicate ust_495() = (ust_493 and smt2_single_eq(b1585, b1604))

predicate ust_496() = (ust_422 and ust_495)

predicate ust_498() = (ust_496 and smt2_double_eq(b1601, b1582))

predicate ust_500() = (ust_498 and smt2_single_eq(b1604, b1623))

predicate ust_501() = (ust_419 and ust_500)

predicate ust_503() = (ust_501 and smt2_double_eq(b1620, b1601))

predicate ust_505() = (ust_503 and smt2_single_eq(b1623, b1642))

predicate ust_506() = (ust_416 and ust_505)

predicate ust_508() = (ust_506 and smt2_double_eq(b1639, b1620))

predicate ust_510() = (ust_508 and smt2_single_eq(b1642, b1661))

predicate ust_511() = (ust_413 and ust_510)

predicate ust_513() = (ust_511 and smt2_double_eq(b1658, b1639))

predicate ust_515() = (ust_513 and smt2_single_eq(b1661, b1680))

predicate ust_516() = (ust_410 and ust_515)

predicate ust_518() = (ust_516 and smt2_double_eq(b1677, b1658))

predicate ust_520() = (ust_518 and smt2_single_eq(b1680, b1699))

predicate ust_521() = (ust_407 and ust_520)

predicate ust_523() = (ust_521 and smt2_double_eq(b1696, b1677))

predicate ust_525() = (ust_523 and smt2_single_eq(b1699, b1718))

predicate ust_526() = (ust_404 and ust_525)

predicate ust_528() = (ust_526 and smt2_double_eq(b1715, b1696))

predicate ust_530() = (ust_528 and smt2_single_eq(b1718, b1737))

predicate ust_531() = (ust_401 and ust_530)

predicate ust_533() = (ust_531 and smt2_double_eq(b1734, b1715))

predicate ust_535() = (ust_533 and smt2_single_eq(b1737, b1756))

predicate ust_536() = (ust_398 and ust_535)

predicate ust_538() = (ust_536 and smt2_double_eq(b1753, b1734))

predicate ust_540() = (ust_538 and smt2_single_eq(b1756, b1775))

predicate ust_541() = (ust_395 and ust_540)

predicate ust_543() = (ust_541 and smt2_double_eq(b1772, b1753))

predicate ust_545() = (ust_543 and smt2_single_eq(b1775, b1794))

predicate ust_546() = (ust_392 and ust_545)

predicate ust_548() = (ust_546 and smt2_double_eq(b1791, b1772))

predicate ust_549() = (ust_389 and ust_548)

predicate ust_551() = (not eq(b205, b212))

predicate ust_552() = (ust_549 and ust_551)

predicate ust_554() = (ust_552 and smt2_double_eq(b1474, b1791))

predicate ust_555() = (ust_386 and ust_554)

predicate ust_557() = (not le(b212, ust_379))

predicate ust_558() = (ust_555 and ust_557)

logic s_neg__t_379 : single

axiom eq_532 : neg_post(ust_379, s_neg__t_379)

logic ust_559 : single

axiom eq_533 : neg_post(ust_379, ust_559)

predicate ust_561() = (ust_558 and smt2_single_eq(b1816, ust_559))

predicate ust_562() = (ust_382 and ust_561)

predicate ust_563() = (ust_365 and ust_562)

predicate ust_564() = (ust_362 and ust_563)

predicate ust_565() = (ust_360 and ust_564)

predicate ust_566() = (ust_358 and ust_565)

predicate ust_567() = (ust_356 and ust_566)

predicate ust_568() = (ust_354 and ust_567)

predicate ust_569() = (ust_352 and ust_568)

predicate ust_570() = (ust_350 and ust_569)

predicate ust_571() = (ust_348 and ust_570)

predicate ust_572() = (ust_346 and ust_571)

predicate ust_573() = (ust_344 and ust_572)

predicate ust_574() = (ust_342 and ust_573)

predicate ust_575() = (ust_340 and ust_574)

predicate ust_576() = (ust_338 and ust_575)

predicate ust_577() = (ust_336 and ust_576)

predicate ust_578() = (ust_334 and ust_577)

predicate ust_579() = (ust_332 and ust_578)

logic double_of_single__t_3__t_328 : double

axiom eq_534 : single_to_double_cast(b1838, double_of_single__t_3__t_328)

logic ust_580 : double

axiom eq_535 : single_to_double_cast(b1838, ust_580)

predicate ust_582() = (not le1(ust_580, b210))

predicate ust_583() = (ust_579 and ust_582)

predicate ust_585() = (not le(b212, ust_327))

predicate ust_586() = (ust_583 and ust_585)

logic s_neg__t_327 : single

axiom eq_536 : neg_post(ust_327, s_neg__t_327)

logic ust_587 : single

axiom eq_537 : neg_post(ust_327, ust_587)

predicate ust_589() = (ust_586 and smt2_single_eq(b1838, ust_587))

predicate ust_590() = (ust_330 and ust_589)

logic double_of_single__t_3__t_310 : double

axiom eq_538 : single_to_double_cast(b1859, double_of_single__t_3__t_310)

logic ust_591 : double

axiom eq_539 : single_to_double_cast(b1859, ust_591)

predicate ust_593() = (not le1(ust_591, b210))

predicate ust_594() = (ust_590 and ust_593)

predicate ust_596() = (not le(b212, ust_309))

predicate ust_597() = (ust_594 and ust_596)

logic s_neg__t_309 : single

axiom eq_540 : neg_post(ust_309, s_neg__t_309)

logic ust_598 : single

axiom eq_541 : neg_post(ust_309, ust_598)

predicate ust_600() = (ust_597 and smt2_single_eq(b1859, ust_598))

predicate ust_601() = (ust_312 and ust_600)

logic double_of_single__t_3__t_292 : double

axiom eq_542 : single_to_double_cast(b1880, double_of_single__t_3__t_292)

logic ust_602 : double

axiom eq_543 : single_to_double_cast(b1880, ust_602)

predicate ust_604() = (not le1(ust_602, b210))

predicate ust_605() = (ust_601 and ust_604)

predicate ust_607() = (not le(b212, ust_291))

predicate ust_608() = (ust_605 and ust_607)

logic s_neg__t_291 : single

axiom eq_544 : neg_post(ust_291, s_neg__t_291)

logic ust_609 : single

axiom eq_545 : neg_post(ust_291, ust_609)

predicate ust_611() = (ust_608 and smt2_single_eq(b1880, ust_609))

predicate ust_612() = (ust_294 and ust_611)

logic double_of_single__t_3__t_274 : double

axiom eq_546 : single_to_double_cast(b1901, double_of_single__t_3__t_274)

logic ust_613 : double

axiom eq_547 : single_to_double_cast(b1901, ust_613)

predicate ust_615() = (not le1(ust_613, b210))

predicate ust_616() = (ust_612 and ust_615)

predicate ust_618() = (not le(b212, ust_273))

predicate ust_619() = (ust_616 and ust_618)

logic s_neg__t_273 : single

axiom eq_548 : neg_post(ust_273, s_neg__t_273)

logic ust_620 : single

axiom eq_549 : neg_post(ust_273, ust_620)

predicate ust_622() = (ust_619 and smt2_single_eq(b1901, ust_620))

predicate ust_623() = (ust_276 and ust_622)

logic double_of_single__t_3__t_256 : double

axiom eq_550 : single_to_double_cast(b1922, double_of_single__t_3__t_256)

logic ust_624 : double

axiom eq_551 : single_to_double_cast(b1922, ust_624)

predicate ust_626() = (not le1(ust_624, b210))

predicate ust_627() = (ust_623 and ust_626)

predicate ust_629() = (not le(b212, ust_255))

predicate ust_630() = (ust_627 and ust_629)

logic s_neg__t_255 : single

axiom eq_552 : neg_post(ust_255, s_neg__t_255)

logic ust_631 : single

axiom eq_553 : neg_post(ust_255, ust_631)

predicate ust_633() = (ust_630 and smt2_single_eq(b1922, ust_631))

predicate ust_634() = (ust_258 and ust_633)

logic double_of_single__t_3__t_238 : double

axiom eq_554 : single_to_double_cast(b1943, double_of_single__t_3__t_238)

logic ust_635 : double

axiom eq_555 : single_to_double_cast(b1943, ust_635)

predicate ust_637() = (not le1(ust_635, b210))

predicate ust_638() = (ust_634 and ust_637)

predicate ust_640() = (not le(b212, ust_237))

predicate ust_641() = (ust_638 and ust_640)

logic s_neg__t_237 : single

axiom eq_556 : neg_post(ust_237, s_neg__t_237)

logic ust_642 : single

axiom eq_557 : neg_post(ust_237, ust_642)

predicate ust_644() = (ust_641 and smt2_single_eq(b1943, ust_642))

predicate ust_645() = (ust_240 and ust_644)

logic double_of_single__t_3__t_220 : double

axiom eq_558 : single_to_double_cast(b1964, double_of_single__t_3__t_220)

logic ust_646 : double

axiom eq_559 : single_to_double_cast(b1964, ust_646)

predicate ust_648() = (not le1(ust_646, b210))

predicate ust_649() = (ust_645 and ust_648)

predicate ust_651() = (not le(b212, ust_219))

predicate ust_652() = (ust_649 and ust_651)

logic s_neg__t_219 : single

axiom eq_560 : neg_post(ust_219, s_neg__t_219)

logic ust_653 : single

axiom eq_561 : neg_post(ust_219, ust_653)

predicate ust_655() = (ust_652 and smt2_single_eq(b1964, ust_653))

predicate ust_656() = (ust_222 and ust_655)

logic double_of_single__t_3__t_202 : double

axiom eq_562 : single_to_double_cast(b1985, double_of_single__t_3__t_202)

logic ust_657 : double

axiom eq_563 : single_to_double_cast(b1985, ust_657)

predicate ust_659() = (not le1(ust_657, b210))

predicate ust_660() = (ust_656 and ust_659)

predicate ust_662() = (not le(b212, ust_201))

predicate ust_663() = (ust_660 and ust_662)

logic s_neg__t_201 : single

axiom eq_564 : neg_post(ust_201, s_neg__t_201)

logic ust_664 : single

axiom eq_565 : neg_post(ust_201, ust_664)

predicate ust_666() = (ust_663 and smt2_single_eq(b1985, ust_664))

predicate ust_667() = (ust_204 and ust_666)

logic double_of_single__t_3__t_184 : double

axiom eq_566 : single_to_double_cast(b2006, double_of_single__t_3__t_184)

logic ust_668 : double

axiom eq_567 : single_to_double_cast(b2006, ust_668)

predicate ust_670() = (not le1(ust_668, b210))

predicate ust_671() = (ust_667 and ust_670)

predicate ust_673() = (not le(b212, ust_183))

predicate ust_674() = (ust_671 and ust_673)

logic s_neg__t_183 : single

axiom eq_568 : neg_post(ust_183, s_neg__t_183)

logic ust_675 : single

axiom eq_569 : neg_post(ust_183, ust_675)

predicate ust_677() = (ust_674 and smt2_single_eq(b2006, ust_675))

predicate ust_678() = (ust_186 and ust_677)

logic double_of_single__t_3__t_166 : double

axiom eq_570 : single_to_double_cast(b2027, double_of_single__t_3__t_166)

logic ust_679 : double

axiom eq_571 : single_to_double_cast(b2027, ust_679)

predicate ust_681() = (not le1(ust_679, b210))

predicate ust_682() = (ust_678 and ust_681)

predicate ust_684() = (not le(b212, ust_165))

predicate ust_685() = (ust_682 and ust_684)

logic s_neg__t_165 : single

axiom eq_572 : neg_post(ust_165, s_neg__t_165)

logic ust_686 : single

axiom eq_573 : neg_post(ust_165, ust_686)

predicate ust_688() = (ust_685 and smt2_single_eq(b2027, ust_686))

predicate ust_689() = (ust_168 and ust_688)

logic double_of_single__t_3__t_148 : double

axiom eq_574 : single_to_double_cast(b2048, double_of_single__t_3__t_148)

logic ust_690 : double

axiom eq_575 : single_to_double_cast(b2048, ust_690)

predicate ust_692() = (not le1(ust_690, b210))

predicate ust_693() = (ust_689 and ust_692)

predicate ust_695() = (not le(b212, ust_147))

predicate ust_696() = (ust_693 and ust_695)

logic s_neg__t_147 : single

axiom eq_576 : neg_post(ust_147, s_neg__t_147)

logic ust_697 : single

axiom eq_577 : neg_post(ust_147, ust_697)

predicate ust_699() = (ust_696 and smt2_single_eq(b2048, ust_697))

predicate ust_700() = (ust_150 and ust_699)

logic double_of_single__t_3__t_130 : double

axiom eq_578 : single_to_double_cast(b2069, double_of_single__t_3__t_130)

logic ust_701 : double

axiom eq_579 : single_to_double_cast(b2069, ust_701)

predicate ust_703() = (not le1(ust_701, b210))

predicate ust_704() = (ust_700 and ust_703)

predicate ust_706() = (not le(b212, ust_129))

predicate ust_707() = (ust_704 and ust_706)

logic s_neg__t_129 : single

axiom eq_580 : neg_post(ust_129, s_neg__t_129)

logic ust_708 : single

axiom eq_581 : neg_post(ust_129, ust_708)

predicate ust_710() = (ust_707 and smt2_single_eq(b2069, ust_708))

predicate ust_711() = (ust_132 and ust_710)

logic double_of_single__t_3__t_112 : double

axiom eq_582 : single_to_double_cast(b2090, double_of_single__t_3__t_112)

logic ust_712 : double

axiom eq_583 : single_to_double_cast(b2090, ust_712)

predicate ust_714() = (not le1(ust_712, b210))

predicate ust_715() = (ust_711 and ust_714)

predicate ust_717() = (not le(b212, ust_111))

predicate ust_718() = (ust_715 and ust_717)

logic s_neg__t_111 : single

axiom eq_584 : neg_post(ust_111, s_neg__t_111)

logic ust_719 : single

axiom eq_585 : neg_post(ust_111, ust_719)

predicate ust_721() = (ust_718 and smt2_single_eq(b2090, ust_719))

predicate ust_722() = (ust_114 and ust_721)

logic double_of_single__t_3__t_94 : double

axiom eq_586 : single_to_double_cast(b2111, double_of_single__t_3__t_94)

logic ust_723 : double

axiom eq_587 : single_to_double_cast(b2111, ust_723)

predicate ust_725() = (not le1(ust_723, b210))

predicate ust_726() = (ust_722 and ust_725)

predicate ust_728() = (not le(b212, ust_93))

predicate ust_729() = (ust_726 and ust_728)

logic s_neg__t_93 : single

axiom eq_588 : neg_post(ust_93, s_neg__t_93)

logic ust_730 : single

axiom eq_589 : neg_post(ust_93, ust_730)

predicate ust_732() = (ust_729 and smt2_single_eq(b2111, ust_730))

predicate ust_733() = (ust_96 and ust_732)

logic double_of_single__t_3__t_76 : double

axiom eq_590 : single_to_double_cast(b2132, double_of_single__t_3__t_76)

logic ust_734 : double

axiom eq_591 : single_to_double_cast(b2132, ust_734)

predicate ust_736() = (not le1(ust_734, b210))

predicate ust_737() = (ust_733 and ust_736)

predicate ust_739() = (not le(b212, ust_75))

predicate ust_740() = (ust_737 and ust_739)

logic s_neg__t_75 : single

axiom eq_592 : neg_post(ust_75, s_neg__t_75)

logic ust_741 : single

axiom eq_593 : neg_post(ust_75, ust_741)

predicate ust_743() = (ust_740 and smt2_single_eq(b2132, ust_741))

predicate ust_744() = (ust_78 and ust_743)

logic double_of_single__t_3__t_58 : double

axiom eq_594 : single_to_double_cast(b2153, double_of_single__t_3__t_58)

logic ust_745 : double

axiom eq_595 : single_to_double_cast(b2153, ust_745)

predicate ust_747() = (not le1(ust_745, b210))

predicate ust_748() = (ust_744 and ust_747)

predicate ust_750() = (not le(b212, ust_57))

predicate ust_751() = (ust_748 and ust_750)

logic s_neg__t_57 : single

axiom eq_596 : neg_post(ust_57, s_neg__t_57)

logic ust_752 : single

axiom eq_597 : neg_post(ust_57, ust_752)

predicate ust_754() = (ust_751 and smt2_single_eq(b2153, ust_752))

predicate ust_755() = (ust_60 and ust_754)

logic double_of_single__t_3__t_40 : double

axiom eq_598 : single_to_double_cast(b2172, double_of_single__t_3__t_40)

logic ust_756 : double

axiom eq_599 : single_to_double_cast(b2172, ust_756)

predicate ust_758() = (not le1(ust_756, b210))

predicate ust_759() = (ust_755 and ust_758)

predicate ust_761() = (not le(b212, ust_39))

predicate ust_762() = (ust_759 and ust_761)

logic s_neg__t_39 : single

axiom eq_600 : neg_post(ust_39, s_neg__t_39)

logic ust_763 : single

axiom eq_601 : neg_post(ust_39, ust_763)

predicate ust_765() = (ust_762 and smt2_single_eq(b2172, ust_763))

predicate ust_766() = (ust_42 and ust_765)

predicate ust_768() = (not le(b212, ust_26))

predicate ust_769() = (ust_766 and ust_768)

logic s_neg__t_26 : single

axiom eq_602 : neg_post(ust_26, s_neg__t_26)

logic ust_770 : single

axiom eq_603 : neg_post(ust_26, ust_770)

predicate ust_772() = (ust_769 and smt2_single_eq(b2181, ust_770))

predicate ust_773() = (ust_29 and ust_772)

axiom ax_1 : ust_773

goal g_1 : false
