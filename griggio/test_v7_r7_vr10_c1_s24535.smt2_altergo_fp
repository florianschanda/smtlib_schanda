(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo real arithmetic *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
axiom add_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x + y) / z) = ((x / z) + (y / z)))))

axiom sub_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x - y) / z) = ((x / z) - (y / z)))))

axiom neg_div :
  (forall x:real. forall y:real. ((not (y = 0.0)) ->
  (((-x) / y) = (-(x / y)))))

axiom assoc_mul_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x * y) / z) = (x * (y / z)))))

axiom assoc_div_mul :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> (((x / y) / z) = (x / (y * z)))))

axiom assoc_div_div :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> ((x / (y / z)) = ((x * z) / y))))

axiom CompatOrderMult :
  (forall x:real. forall y:real. forall z:real. ((x <= y) -> ((0.0 <= z) ->
  ((x * z) <= (y * z)))))

logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

logic match_mode : fpa_rounding_mode, 'a, 'a, 'a, 'a, 'a -> 'a

axiom match_mode_NearestTiesToEven :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToEven, z, z1, z2, z3, z4) = z))

axiom match_mode_ToZero :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(ToZero, z, z1, z2, z3, z4) = z1))

axiom match_mode_Up :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Up, z, z1, z2, z3, z4) = z2))

axiom match_mode_Down :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Down, z, z1, z2, z3, z4) = z3))

axiom match_mode_NearestTiesToAway :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToAway, z, z1, z2, z3, z4) = z4))

type single

axiom CompatOrderMult1 :
  (forall x:int. forall y:int. forall z:int. ((x <= y) -> ((0 <= z) ->
  ((x * z) <= (y * z)))))

axiom Monotonic :
  (forall x:int. forall y:int. ((x <= y) ->
  (real_of_int(x) <= real_of_int(y))))

logic truncate : real -> int

axiom Truncate_int : (forall i:int. (truncate(real_of_int(i)) = i))

axiom Truncate_down_pos :
  (forall x:real. ((0.0 <= x) -> (real_of_int(truncate(x)) <= x)))

axiom Truncate_down_pos1 :
  (forall x:real. ((0.0 <= x) -> (x <  real_of_int((truncate(x) + 1)))))

axiom Truncate_up_neg :
  (forall x:real. ((x <= 0.0) -> (real_of_int((truncate(x) - 1)) <  x)))

axiom Truncate_up_neg1 :
  (forall x:real. ((x <= 0.0) -> (x <= real_of_int(truncate(x)))))

axiom Real_of_truncate :
  (forall x:real. ((x - 1.0) <= real_of_int(truncate(x))))

axiom Real_of_truncate1 :
  (forall x:real. (real_of_int(truncate(x)) <= (x + 1.0)))

axiom Truncate_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (truncate(x) <= truncate(y))))

axiom Truncate_monotonic_int1 :
  (forall x:real. forall i:int. ((x <= real_of_int(i)) ->
  (truncate(x) <= i)))

axiom Truncate_monotonic_int2 :
  (forall x:real. forall i:int. ((real_of_int(i) <= x) ->
  (i <= truncate(x))))

axiom Floor_int : (forall i:int. (int_floor(real_of_int(i)) = i))

axiom Ceil_int : (forall i:int. (int_ceil(real_of_int(i)) = i))

axiom Floor_down : (forall x:real. (real_of_int(int_floor(x)) <= x))

axiom Floor_down1 : (forall x:real. (x <  real_of_int((int_floor(x) + 1))))

axiom Ceil_up : (forall x:real. (real_of_int((int_ceil(x) - 1)) <  x))

axiom Ceil_up1 : (forall x:real. (x <= real_of_int(int_ceil(x))))

axiom Floor_monotonic :
  (forall x:real. forall y:real. ((x <= y) ->
  (int_floor(x) <= int_floor(y))))

axiom Ceil_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (int_ceil(x) <= int_ceil(y))))

function sqr(x: real) : real = (x * x)

axiom Sqrt_positive : (forall x:real. ((0.0 <= x) -> (0.0 <= sqrt_real(x))))

axiom Sqrt_square : (forall x:real. ((0.0 <= x) -> (sqr(sqrt_real(x)) = x)))

axiom Square_sqrt : (forall x:real. ((0.0 <= x) -> (sqrt_real((x * x)) = x)))

axiom Sqrt_mul :
  (forall x:real. forall y:real. (((0.0 <= x) and (0.0 <= y)) ->
  (sqrt_real((x * y)) = (sqrt_real(x) * sqrt_real(y)))))

axiom Sqrt_le :
  (forall x:real. forall y:real. (((0.0 <= x) and (x <= y)) ->
  (sqrt_real(x) <= sqrt_real(y))))

type class = Finite | Infinite | NaN

logic match_class : class, 'a, 'a, 'a -> 'a

axiom match_class_Finite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Finite, z, z1,
  z2) = z))

axiom match_class_Infinite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Infinite, z, z1,
  z2) = z1))

axiom match_class_NaN :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(NaN, z, z1,
  z2) = z2))

type sign = Neg | Pos

logic match_sign : sign, 'a, 'a -> 'a

axiom match_sign_Neg :
  (forall z:'a. forall z1:'a. (match_sign(Neg, z, z1) = z))

axiom match_sign_Pos :
  (forall z:'a. forall z1:'a. (match_sign(Pos, z, z1) = z1))

logic same_sign_real : sign, real -> prop

axiom Neg_case : (forall x:real. ((x <  0.0) -> same_sign_real(Neg, x)))

axiom Pos_case : (forall x:real. ((0.0 <  x) -> same_sign_real(Pos, x)))

axiom same_sign_real_inversion :
  (forall z:sign. forall z1:real. (same_sign_real(z, z1) -> (((z1 <  0.0) and
  (z = Neg)) or ((0.0 <  z1) and (z = Pos)))))

axiom same_sign_real_zero1 : (forall b:sign. (not same_sign_real(b, 0.0)))

axiom same_sign_real_zero2 :
  (forall x:real. (not (same_sign_real(Neg, x) and same_sign_real(Pos, x))))

axiom same_sign_real_zero3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> (not (x = 0.0))))

axiom same_sign_real_correct2 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((x <  0.0) ->
  (b = Neg))))

axiom same_sign_real_correct21 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Neg) ->
  (x <  0.0))))

axiom same_sign_real_correct3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((0.0 <  x) ->
  (b = Pos))))

axiom same_sign_real_correct31 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Pos) ->
  (0.0 <  x))))

axiom Abs_le :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> ((-y) <= x)))

axiom Abs_le1 :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> (x <= y)))

axiom Abs_le2 :
  (forall x:real. forall y:real. ((((-y) <= x) and (x <= y)) ->
  (abs_real(x) <= y)))

axiom Abs_pos : (forall x:real. (0.0 <= abs_real(x)))

axiom Abs_sum :
  (forall x:real. forall y:real.
  (abs_real((x + y)) <= (abs_real(x) + abs_real(y))))

axiom Abs_prod :
  (forall x:real. forall y:real.
  (abs_real((x * y)) = (abs_real(x) * abs_real(y))))

axiom triangular_inequality :
  (forall x:real. forall y:real. forall z:real.
  (abs_real((x - z)) <= (abs_real((x - y)) + abs_real((y - z)))))

logic value : single -> real

predicate no_overflow(m: fpa_rounding_mode, x: real) =
  (abs_real(float32(m, x)) <= 0x1.FFFFFEp127)

axiom Bounded_real_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> no_overflow(m, x)))

axiom Round_value :
  (forall m:fpa_rounding_mode. forall x:single.
  (float32(m, value(x)) = value(x)))

axiom Bounded_value :
  (forall x:single. (abs_real(value(x)) <= 0x1.FFFFFEp127))

axiom Exact_rounding_for_integers :
  (forall m:fpa_rounding_mode. forall i:int. ((((-16777216) <= i) and
  (i <= 16777216)) -> (float32(m, real_of_int(i)) = real_of_int(i))))

axiom Round_down_le : (forall x:real. (float32(Down, x) <= x))

axiom Round_up_ge : (forall x:real. (x <= float32(Up, x)))

axiom Round_down_neg :
  (forall x:real. (float32(Down, (-x)) = (-float32(Up, x))))

axiom Round_up_neg :
  (forall x:real. (float32(Up, (-x)) = (-float32(Down, x))))

logic round_logic : fpa_rounding_mode, real -> single

axiom Round_logic_def :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

logic class1 : single -> class

predicate is_finite(x: single) = (class1(x) = Finite)

predicate is_infinite(x: single) = (class1(x) = Infinite)

predicate is_NaN(x: single) = (class1(x) = NaN)

predicate is_not_NaN(x: single) = (is_finite(x) or is_infinite(x))

axiom is_not_NaN1 : (forall x:single. (is_not_NaN(x) -> (not is_NaN(x))))

axiom is_not_NaN2 : (forall x:single. ((not is_NaN(x)) -> is_not_NaN(x)))

logic sign1 : single -> sign

predicate same_sign_real1(x: single, y: real) = same_sign_real(sign1(x), y)

predicate same_sign(x: single, y: single) = (sign1(x) = sign1(y))

predicate diff_sign(x: single, y: single) = (not (sign1(x) = sign1(y)))

predicate sign_zero_result(m: fpa_rounding_mode, x: single) =
  ((value(x) = 0.0) -> ((((((m = NearestTiesToEven) -> (sign1(x) = Pos)) and
  ((m = ToZero) -> (sign1(x) = Pos))) and ((m = Up) -> (sign1(x) = Pos))) and
  ((m = Down) -> (sign1(x) = Neg))) and ((m = NearestTiesToAway) ->
  (sign1(x) = Pos))))

predicate is_minus_infinity(x: single) = (is_infinite(x) and
  (sign1(x) = Neg))

predicate is_plus_infinity(x: single) = (is_infinite(x) and (sign1(x) = Pos))

predicate is_gen_zero(x: single) = (is_finite(x) and (value(x) = 0.0))

predicate is_gen_zero_plus(x: single) = (is_gen_zero(x) and (sign1(x) = Pos))

predicate is_gen_zero_minus(x: single) = (is_gen_zero(x) and
  (sign1(x) = Neg))

axiom finite_sign :
  (forall x:single. (((class1(x) = Finite) and (not (value(x) = 0.0))) ->
  same_sign_real1(x, value(x))))

axiom finite_sign_pos1 :
  (forall x:single. (((class1(x) = Finite) and (0.0 <  value(x))) ->
  (sign1(x) = Pos)))

axiom finite_sign_pos2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Pos))) -> (0.0 <  value(x))))

axiom finite_sign_neg1 :
  (forall x:single. (((class1(x) = Finite) and (value(x) <  0.0)) ->
  (sign1(x) = Neg)))

axiom finite_sign_neg2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Neg))) -> (value(x) <  0.0)))

axiom diff_sign_trans :
  (forall x:single. forall y:single. forall z:single. ((diff_sign(x, y) and
  diff_sign(y, z)) -> same_sign(x, z)))

axiom diff_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and ((value(x) * value(y)) <  0.0))) -> diff_sign(x,
  y)))

axiom same_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and same_sign(x, y))) ->
  (0.0 <= (value(x) * value(y)))))

predicate overflow_value(m: fpa_rounding_mode, x: single) =
  (((sign1(x) = Neg) -> ((((((m = NearestTiesToEven) -> is_infinite(x)) and
  ((m = ToZero) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Up) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Down) -> is_infinite(x))) and ((m = NearestTiesToAway) ->
  is_infinite(x)))) and ((sign1(x) = Pos) -> ((((((m = NearestTiesToEven) ->
  is_infinite(x)) and ((m = ToZero) -> (is_finite(x) and
  (value(x) = 0x1.FFFFFEp127)))) and ((m = Up) -> is_infinite(x))) and
  ((m = Down) -> (is_finite(x) and (value(x) = 0x1.FFFFFEp127)))) and
  ((m = NearestTiesToAway) -> is_infinite(x)))))

axiom round1 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  is_finite(round_logic(m, x))))

axiom round11 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

axiom round2 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  same_sign_real1(round_logic(m, x), x)))

axiom round21 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  overflow_value(m, round_logic(m, x))))

axiom round_of_zero :
  (forall m:fpa_rounding_mode. is_gen_zero(round_logic(m, 0.0)))

axiom round_logic_le :
  (forall m:fpa_rounding_mode. forall x:real. (is_finite(round_logic(m,
  x)) -> (abs_real(value(round_logic(m, x))) <= 0x1.FFFFFEp127)))

axiom round_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> is_finite(round_logic(m, x))))

axiom round_no_overflow1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> (value(round_logic(m,
  x)) = float32(m, x))))

logic min : real

axiom positive_constant :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> is_finite(round_logic(m, x))))

axiom positive_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (0.0 <  value(round_logic(m, x)))))

axiom positive_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (sign1(round_logic(m, x)) = Pos)))

axiom negative_constant :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> is_finite(round_logic(m, x))))

axiom negative_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (value(round_logic(m, x)) <  0.0)))

axiom negative_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (sign1(round_logic(m, x)) = Neg)))

axiom is_gen_zero_comp1 :
  (forall x:single. forall y:single. ((is_gen_zero(x) and
  ((value(x) = value(y)) and is_finite(y))) -> is_gen_zero(y)))

axiom is_gen_zero_comp2 :
  (forall x:single. forall y:single. ((is_finite(x) and
  ((not is_gen_zero(x)) and (value(x) = value(y)))) -> (not is_gen_zero(y))))

predicate add_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and same_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((same_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not same_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) + value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) + value(y)))) and ((same_sign(x, y) ->
  same_sign(r, x)) and ((not same_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) + value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) + value(y))) and overflow_value(m, r))))))))

predicate sub_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and diff_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((diff_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not diff_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) - value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) - value(y)))) and ((diff_sign(x, y) ->
  same_sign(r, x)) and ((not diff_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) - value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) - value(y))) and overflow_value(m, r))))))))

predicate product_sign(z: single, x: single, y: single) = ((same_sign(x,
  y) -> (sign1(z) = Pos)) and (diff_sign(x, y) -> (sign1(z) = Neg)))

predicate mul_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_gen_zero(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_infinite(y) and
  (not (value(x) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_gen_zero(y)) -> is_NaN(r)) and (((is_infinite(x) and (is_finite(y) and
  (not (value(y) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_infinite(r)) and (((is_finite(x) and
  (is_finite(y) and no_overflow(m, (value(x) * value(y))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) * value(y)))))) and
  (((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) * value(y)))))) -> overflow_value(m, r)) and ((not is_NaN(r)) ->
  product_sign(r, x, y))))))))))

predicate neg_post(x: single, r: single) = ((is_NaN(x) -> is_NaN(r)) and
  ((is_infinite(x) -> is_infinite(r)) and ((is_finite(x) -> (is_finite(r) and
  (value(r) = (-value(x))))) and ((not is_NaN(x)) -> diff_sign(r, x)))))

predicate div_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> is_gen_zero(r)) and (((is_infinite(x) and
  is_finite(y)) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_finite(y) and
  ((not (value(y) = 0.0)) and no_overflow(m, (value(x) / value(y)))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) / value(y)))))) and
  (((is_finite(x) and (is_finite(y) and ((not (value(y) = 0.0)) and
  (not no_overflow(m, (value(x) / value(y))))))) -> overflow_value(m, r)) and
  (((is_finite(x) and (is_gen_zero(y) and (not (value(x) = 0.0)))) ->
  is_infinite(r)) and (((is_gen_zero(x) and is_gen_zero(y)) -> is_NaN(r)) and
  ((not is_NaN(r)) -> product_sign(r, x, y))))))))))

predicate fma_post(m: fpa_rounding_mode, x: single, y: single, z: single,
  r: single) = (((is_NaN(x) or (is_NaN(y) or is_NaN(z))) -> is_NaN(r)) and
  (((is_gen_zero(x) and is_infinite(y)) -> is_NaN(r)) and
  (((is_infinite(x) and is_gen_zero(y)) -> is_NaN(r)) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_infinite(y) and is_finite(z))) -> (is_infinite(r) and product_sign(r,
  x, y))) and (((is_finite(x) and (is_finite(y) and is_infinite(z))) ->
  (is_infinite(r) and same_sign(r, z))) and (((is_infinite(x) and
  (is_infinite(y) and is_infinite(z))) -> ((product_sign(z, x, y) ->
  (is_infinite(r) and same_sign(r, z))) and ((not product_sign(z, x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and (is_finite(z) and
  no_overflow(m, ((value(x) * value(y)) + value(z)))))) -> (is_finite(r) and
  ((value(r) = float32(m, ((value(x) * value(y)) + value(z)))) and
  ((product_sign(z, x, y) -> same_sign(r, z)) and ((not product_sign(z, x,
  y)) -> ((((value(x) * value(y)) + value(z)) = 0.0) -> (((m = Down) ->
  (sign1(r) = Neg)) and ((not (m = Down)) -> (sign1(r) = Pos))))))))) and
  ((is_finite(x) and (is_finite(y) and (is_finite(z) and (not no_overflow(m,
  ((value(x) * value(y)) + value(z))))))) -> (same_sign_real(sign1(r),
  ((value(x) * value(y)) + value(z))) and overflow_value(m, r))))))))))))))

predicate sqrt_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_plus_infinity(x) ->
  is_plus_infinity(r)) and ((is_minus_infinity(x) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) <  0.0)) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) = 0.0)) -> (is_finite(r) and
  ((value(r) = 0.0) and same_sign(r, x)))) and ((is_finite(x) and
  (0.0 <  value(x))) -> (is_finite(r) and
  ((value(r) = float32(m, sqrt_real(value(x)))) and (sign1(r) = Pos)))))))))

predicate roundToIntegral_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_infinite(x) -> (is_infinite(r) and
  same_sign(x, r))) and (is_finite(x) -> (same_sign(x, r) and
  (value(r) = real_of_int(integer_round(m, value(x))))))))

predicate of_real_exact_post(x: real, r: single) = (is_finite(r) and
  (value(r) = x))

predicate le(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <= value(y)))) or ((is_minus_infinity(x) and is_not_NaN(y)) or
  (is_not_NaN(x) and is_plus_infinity(y))))

predicate lt(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <  value(y)))) or ((is_minus_infinity(x) and (is_not_NaN(y) and
  (not is_minus_infinity(y)))) or (is_not_NaN(x) and
  ((not is_plus_infinity(x)) and is_plus_infinity(y)))))

predicate eq(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) = value(y)))) or (is_infinite(x) and (is_infinite(y) and
  same_sign(x, y))))

predicate ne(x: single, y: single) = (not eq(x, y))

predicate rem_post(x: single, y: single, r: single) = (((is_NaN(x) or
  (is_NaN(y) or (is_infinite(x) or is_gen_zero(y)))) -> is_NaN(r)) and
  ((not (is_NaN(x) or (is_NaN(y) or (is_infinite(x) or is_gen_zero(y))))) ->
  ((is_infinite(y) -> eq(x, r)) and ((not is_infinite(y)) ->
  (is_finite(r) and (((value(r) = 0.0) -> same_sign(x, r)) and
  (value(r) = (value(x) - (value(y) * real_of_int(integer_round(NearestTiesToEven, (value(x) / value(y)))))))))))))

axiom le_lt_trans :
  (forall x:single. forall y:single. forall z:single. ((le(x, y) and lt(y,
  z)) -> lt(x, z)))

axiom lt_le_trans :
  (forall x:single. forall y:single. forall z:single. ((lt(x, y) and le(y,
  z)) -> lt(x, z)))

axiom le_ge_asym :
  (forall x:single. forall y:single. ((le(x, y) and le(y, x)) -> eq(x, y)))

axiom not_lt_ge :
  (forall x:single. forall y:single. (((not lt(x, y)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(y, x)))

axiom not_gt_le :
  (forall x:single. forall y:single. (((not lt(y, x)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(x, y)))

logic x0 : single

logic x1 : single

logic x2 : single

logic x3 : single

logic x4 : single

logic x5 : single

logic x6 : single

logic sfp_0_130_2097152 : single

axiom eq_0 : is_finite(sfp_0_130_2097152)

axiom eq_01 : (value(sfp_0_130_2097152) = 10.0)

logic ust_10 : single

axiom eq_1 : (value(ust_10) = 10.0)

axiom eq_11 : (sign1(ust_10) = Pos)

axiom eq_12 : is_finite(ust_10)

logic sfp_1_130_2097152 : single

axiom eq_2 : is_finite(sfp_1_130_2097152)

axiom eq_21 : (value(sfp_1_130_2097152) = (-10.0))

logic ust_12 : single

axiom eq_3 : (value(ust_12) = (-10.0))

axiom eq_31 : (sign1(ust_12) = Neg)

axiom eq_32 : is_finite(ust_12)

predicate ust_16() = (le(ust_12, x0) and le(x0, ust_10))

axiom ax_1 : ust_16

predicate ust_20() = (le(ust_12, x1) and le(x1, ust_10))

axiom ax_2 : ust_20

predicate ust_24() = (le(ust_12, x2) and le(x2, ust_10))

axiom ax_3 : ust_24

predicate ust_28() = (le(ust_12, x3) and le(x3, ust_10))

axiom ax_4 : ust_28

predicate ust_32() = (le(ust_12, x4) and le(x4, ust_10))

axiom ax_5 : ust_32

predicate ust_36() = (le(ust_12, x5) and le(x5, ust_10))

axiom ax_6 : ust_36

predicate ust_40() = (le(ust_12, x6) and le(x6, ust_10))

axiom ax_7 : ust_40

logic sfp_0_0_0 : single

axiom eq_4 : is_finite(sfp_0_0_0)

axiom eq_41 : (value(sfp_0_0_0) = 0.0)

logic ust_42 : single

axiom eq_5 : (value(ust_42) = 0.0)

axiom eq_51 : (sign1(ust_42) = Pos)

axiom eq_52 : is_finite(ust_42)

logic sfp_1_123_469762 : single

axiom eq_6 : is_finite(sfp_1_123_469762)

axiom eq_61 : (value(sfp_1_123_469762) = ((-4429185.0) / 67108864.0))

logic ust_45 : single

axiom eq_7 : (value(ust_45) = ((-4429185.0) / 67108864.0))

axiom eq_71 : (sign1(ust_45) = Neg)

axiom eq_72 : is_finite(ust_45)

logic sfp_1_125_1979711 : single

axiom eq_8 : is_finite(sfp_1_125_1979711)

axiom eq_81 : (value(sfp_1_125_1979711) = ((-10368319.0) / 33554432.0))

logic ust_48 : single

axiom eq_9 : (value(ust_48) = ((-10368319.0) / 33554432.0))

axiom eq_91 : (sign1(ust_48) = Neg)

axiom eq_92 : is_finite(ust_48)

logic s_mul__t_3__t_13__t_48 : single

axiom eq_10 : mul_post(NearestTiesToEven, x0, ust_48, s_mul__t_3__t_13__t_48)

logic ust_49 : single

axiom eq_111 : mul_post(NearestTiesToEven, x0, ust_48, ust_49)

logic s_add__t_3__t_42__t_49 : single

axiom eq_121 : add_post(NearestTiesToEven, ust_42, ust_49,
  s_add__t_3__t_42__t_49)

logic ust_50 : single

axiom eq_13 : add_post(NearestTiesToEven, ust_42, ust_49, ust_50)

logic sfp_1_126_4831838 : single

axiom eq_14 : is_finite(sfp_1_126_4831838)

axiom eq_141 : (value(sfp_1_126_4831838) = ((-6610223.0) / 8388608.0))

logic ust_53 : single

axiom eq_15 : (value(ust_53) = ((-6610223.0) / 8388608.0))

axiom eq_151 : (sign1(ust_53) = Neg)

axiom eq_152 : is_finite(ust_53)

logic s_mul__t_3__t_17__t_53 : single

axiom eq_16 : mul_post(NearestTiesToEven, x1, ust_53, s_mul__t_3__t_17__t_53)

logic ust_54 : single

axiom eq_17 : mul_post(NearestTiesToEven, x1, ust_53, ust_54)

logic s_add__t_3__t_50__t_54 : single

axiom eq_18 : add_post(NearestTiesToEven, ust_50, ust_54,
  s_add__t_3__t_50__t_54)

logic ust_55 : single

axiom eq_19 : add_post(NearestTiesToEven, ust_50, ust_54, ust_55)

logic sfp_1_125_5570035 : single

axiom eq_20 : is_finite(sfp_1_125_5570035)

axiom eq_201 : (value(sfp_1_125_5570035) = ((-13958643.0) / 33554432.0))

logic ust_58 : single

axiom eq_211 : (value(ust_58) = ((-13958643.0) / 33554432.0))

axiom eq_212 : (sign1(ust_58) = Neg)

axiom eq_213 : is_finite(ust_58)

logic s_mul__t_3__t_21__t_58 : single

axiom eq_22 : mul_post(NearestTiesToEven, x2, ust_58, s_mul__t_3__t_21__t_58)

logic ust_59 : single

axiom eq_23 : mul_post(NearestTiesToEven, x2, ust_58, ust_59)

logic s_add__t_3__t_55__t_59 : single

axiom eq_24 : add_post(NearestTiesToEven, ust_55, ust_59,
  s_add__t_3__t_55__t_59)

logic ust_60 : single

axiom eq_25 : add_post(NearestTiesToEven, ust_55, ust_59, ust_60)

logic sfp_1_125_6241123 : single

axiom eq_26 : is_finite(sfp_1_125_6241123)

axiom eq_261 : (value(sfp_1_125_6241123) = ((-14629731.0) / 33554432.0))

logic ust_63 : single

axiom eq_27 : (value(ust_63) = ((-14629731.0) / 33554432.0))

axiom eq_271 : (sign1(ust_63) = Neg)

axiom eq_272 : is_finite(ust_63)

logic s_mul__t_3__t_25__t_63 : single

axiom eq_28 : mul_post(NearestTiesToEven, x3, ust_63, s_mul__t_3__t_25__t_63)

logic ust_64 : single

axiom eq_29 : mul_post(NearestTiesToEven, x3, ust_63, ust_64)

logic s_add__t_3__t_60__t_64 : single

axiom eq_30 : add_post(NearestTiesToEven, ust_60, ust_64,
  s_add__t_3__t_60__t_64)

logic ust_65 : single

axiom eq_311 : add_post(NearestTiesToEven, ust_60, ust_64, ust_65)

logic sfp_0_126_7331643 : single

axiom eq_321 : is_finite(sfp_0_126_7331643)

axiom eq_322 : (value(sfp_0_126_7331643) = (15720251.0 / 16777216.0))

logic ust_67 : single

axiom eq_33 : (value(ust_67) = (15720251.0 / 16777216.0))

axiom eq_331 : (sign1(ust_67) = Pos)

axiom eq_332 : is_finite(ust_67)

logic s_mul__t_3__t_29__t_67 : single

axiom eq_34 : mul_post(NearestTiesToEven, x4, ust_67, s_mul__t_3__t_29__t_67)

logic ust_68 : single

axiom eq_35 : mul_post(NearestTiesToEven, x4, ust_67, ust_68)

logic s_add__t_3__t_65__t_68 : single

axiom eq_36 : add_post(NearestTiesToEven, ust_65, ust_68,
  s_add__t_3__t_65__t_68)

logic ust_69 : single

axiom eq_37 : add_post(NearestTiesToEven, ust_65, ust_68, ust_69)

logic sfp_1_124_1006633 : single

axiom eq_38 : is_finite(sfp_1_124_1006633)

axiom eq_381 : (value(sfp_1_124_1006633) = ((-9395241.0) / 67108864.0))

logic ust_72 : single

axiom eq_39 : (value(ust_72) = ((-9395241.0) / 67108864.0))

axiom eq_391 : (sign1(ust_72) = Neg)

axiom eq_392 : is_finite(ust_72)

logic s_mul__t_3__t_33__t_72 : single

axiom eq_40 : mul_post(NearestTiesToEven, x5, ust_72, s_mul__t_3__t_33__t_72)

logic ust_73 : single

axiom eq_411 : mul_post(NearestTiesToEven, x5, ust_72, ust_73)

logic s_add__t_3__t_69__t_73 : single

axiom eq_42 : add_post(NearestTiesToEven, ust_69, ust_73,
  s_add__t_3__t_69__t_73)

logic ust_74 : single

axiom eq_43 : add_post(NearestTiesToEven, ust_69, ust_73, ust_74)

logic sfp_0_125_4160749 : single

axiom eq_44 : is_finite(sfp_0_125_4160749)

axiom eq_441 : (value(sfp_0_125_4160749) = (12549357.0 / 33554432.0))

logic ust_76 : single

axiom eq_45 : (value(ust_76) = (12549357.0 / 33554432.0))

axiom eq_451 : (sign1(ust_76) = Pos)

axiom eq_452 : is_finite(ust_76)

logic s_mul__t_3__t_37__t_76 : single

axiom eq_46 : mul_post(NearestTiesToEven, x6, ust_76, s_mul__t_3__t_37__t_76)

logic ust_77 : single

axiom eq_47 : mul_post(NearestTiesToEven, x6, ust_76, ust_77)

logic s_add__t_3__t_74__t_77 : single

axiom eq_48 : add_post(NearestTiesToEven, ust_74, ust_77,
  s_add__t_3__t_74__t_77)

logic ust_78 : single

axiom eq_49 : add_post(NearestTiesToEven, ust_74, ust_77, ust_78)

axiom ax_8 : le(ust_45, ust_78)

logic sfp_0_126_3623878 : single

axiom eq_50 : is_finite(sfp_0_126_3623878)

axiom eq_501 : (value(sfp_0_126_3623878) = (6006243.0 / 8388608.0))

logic ust_81 : single

axiom eq_511 : (value(ust_81) = (6006243.0 / 8388608.0))

axiom eq_512 : (sign1(ust_81) = Pos)

axiom eq_513 : is_finite(ust_81)

logic sfp_0_124_1207960 : single

axiom eq_521 : is_finite(sfp_0_124_1207960)

axiom eq_522 : (value(sfp_0_124_1207960) = (1199571.0 / 8388608.0))

logic ust_83 : single

axiom eq_53 : (value(ust_83) = (1199571.0 / 8388608.0))

axiom eq_531 : (sign1(ust_83) = Pos)

axiom eq_532 : is_finite(ust_83)

logic s_mul__t_3__t_13__t_83 : single

axiom eq_54 : mul_post(NearestTiesToEven, x0, ust_83, s_mul__t_3__t_13__t_83)

logic ust_84 : single

axiom eq_55 : mul_post(NearestTiesToEven, x0, ust_83, ust_84)

logic s_add__t_3__t_42__t_84 : single

axiom eq_56 : add_post(NearestTiesToEven, ust_42, ust_84,
  s_add__t_3__t_42__t_84)

logic ust_85 : single

axiom eq_57 : add_post(NearestTiesToEven, ust_42, ust_84, ust_85)

logic sfp_0_124_3556769 : single

axiom eq_58 : is_finite(sfp_0_124_3556769)

axiom eq_581 : (value(sfp_0_124_3556769) = (11945377.0 / 67108864.0))

logic ust_87 : single

axiom eq_59 : (value(ust_87) = (11945377.0 / 67108864.0))

axiom eq_591 : (sign1(ust_87) = Pos)

axiom eq_592 : is_finite(ust_87)

logic s_mul__t_3__t_17__t_87 : single

axiom eq_60 : mul_post(NearestTiesToEven, x1, ust_87, s_mul__t_3__t_17__t_87)

logic ust_88 : single

axiom eq_611 : mul_post(NearestTiesToEven, x1, ust_87, ust_88)

logic s_add__t_3__t_85__t_88 : single

axiom eq_62 : add_post(NearestTiesToEven, ust_85, ust_88,
  s_add__t_3__t_85__t_88)

logic ust_89 : single

axiom eq_63 : add_post(NearestTiesToEven, ust_85, ust_88, ust_89)

logic sfp_1_125_7214202 : single

axiom eq_64 : is_finite(sfp_1_125_7214202)

axiom eq_641 : (value(sfp_1_125_7214202) = ((-7801405.0) / 16777216.0))

logic ust_92 : single

axiom eq_65 : (value(ust_92) = ((-7801405.0) / 16777216.0))

axiom eq_651 : (sign1(ust_92) = Neg)

axiom eq_652 : is_finite(ust_92)

logic s_mul__t_3__t_21__t_92 : single

axiom eq_66 : mul_post(NearestTiesToEven, x2, ust_92, s_mul__t_3__t_21__t_92)

logic ust_93 : single

axiom eq_67 : mul_post(NearestTiesToEven, x2, ust_92, ust_93)

logic s_add__t_3__t_89__t_93 : single

axiom eq_68 : add_post(NearestTiesToEven, ust_89, ust_93,
  s_add__t_3__t_89__t_93)

logic ust_94 : single

axiom eq_69 : add_post(NearestTiesToEven, ust_89, ust_93, ust_94)

logic sfp_0_126_5150604 : single

axiom eq_70 : is_finite(sfp_0_126_5150604)

axiom eq_701 : (value(sfp_0_126_5150604) = (3384803.0 / 4194304.0))

logic ust_96 : single

axiom eq_711 : (value(ust_96) = (3384803.0 / 4194304.0))

axiom eq_712 : (sign1(ust_96) = Pos)

axiom eq_713 : is_finite(ust_96)

logic s_mul__t_3__t_25__t_96 : single

axiom eq_721 : mul_post(NearestTiesToEven, x3, ust_96,
  s_mul__t_3__t_25__t_96)

logic ust_97 : single

axiom eq_73 : mul_post(NearestTiesToEven, x3, ust_96, ust_97)

logic s_add__t_3__t_94__t_97 : single

axiom eq_74 : add_post(NearestTiesToEven, ust_94, ust_97,
  s_add__t_3__t_94__t_97)

logic ust_98 : single

axiom eq_75 : add_post(NearestTiesToEven, ust_94, ust_97, ust_98)

logic sfp_0_126_2885681 : single

axiom eq_76 : is_finite(sfp_0_126_2885681)

axiom eq_761 : (value(sfp_0_126_2885681) = (11274289.0 / 16777216.0))

logic ust_100 : single

axiom eq_77 : (value(ust_100) = (11274289.0 / 16777216.0))

axiom eq_771 : (sign1(ust_100) = Pos)

axiom eq_772 : is_finite(ust_100)

logic s_mul__t_3__t_29__t_100 : single

axiom eq_78 : mul_post(NearestTiesToEven, x4, ust_100,
  s_mul__t_3__t_29__t_100)

logic ust_101 : single

axiom eq_79 : mul_post(NearestTiesToEven, x4, ust_100, ust_101)

logic s_add__t_3__t_98__t_101 : single

axiom eq_80 : add_post(NearestTiesToEven, ust_98, ust_101,
  s_add__t_3__t_98__t_101)

logic ust_102 : single

axiom eq_811 : add_post(NearestTiesToEven, ust_98, ust_101, ust_102)

logic sfp_0_124_134218 : single

axiom eq_82 : is_finite(sfp_0_124_134218)

axiom eq_821 : (value(sfp_0_124_134218) = (4261413.0 / 33554432.0))

logic ust_104 : single

axiom eq_83 : (value(ust_104) = (4261413.0 / 33554432.0))

axiom eq_831 : (sign1(ust_104) = Pos)

axiom eq_832 : is_finite(ust_104)

logic s_mul__t_3__t_33__t_104 : single

axiom eq_84 : mul_post(NearestTiesToEven, x5, ust_104,
  s_mul__t_3__t_33__t_104)

logic ust_105 : single

axiom eq_85 : mul_post(NearestTiesToEven, x5, ust_104, ust_105)

logic s_add__t_3__t_102__t_105 : single

axiom eq_86 : add_post(NearestTiesToEven, ust_102, ust_105,
  s_add__t_3__t_102__t_105)

logic ust_106 : single

axiom eq_87 : add_post(NearestTiesToEven, ust_102, ust_105, ust_106)

logic sfp_1_124_3288333 : single

axiom eq_88 : is_finite(sfp_1_124_3288333)

axiom eq_881 : (value(sfp_1_124_3288333) = ((-11676941.0) / 67108864.0))

logic ust_109 : single

axiom eq_89 : (value(ust_109) = ((-11676941.0) / 67108864.0))

axiom eq_891 : (sign1(ust_109) = Neg)

axiom eq_892 : is_finite(ust_109)

logic s_mul__t_3__t_37__t_109 : single

axiom eq_90 : mul_post(NearestTiesToEven, x6, ust_109,
  s_mul__t_3__t_37__t_109)

logic ust_110 : single

axiom eq_911 : mul_post(NearestTiesToEven, x6, ust_109, ust_110)

logic s_add__t_3__t_106__t_110 : single

axiom eq_921 : add_post(NearestTiesToEven, ust_106, ust_110,
  s_add__t_3__t_106__t_110)

logic ust_111 : single

axiom eq_93 : add_post(NearestTiesToEven, ust_106, ust_110, ust_111)

axiom ax_9 : le(ust_111, ust_81)

logic sfp_1_125_1107296 : single

axiom eq_94 : is_finite(sfp_1_125_1107296)

axiom eq_941 : (value(sfp_1_125_1107296) = ((-296747.0) / 1048576.0))

logic ust_115 : single

axiom eq_95 : (value(ust_115) = ((-296747.0) / 1048576.0))

axiom eq_951 : (sign1(ust_115) = Neg)

axiom eq_952 : is_finite(ust_115)

logic sfp_1_126_5083496 : single

axiom eq_96 : is_finite(sfp_1_126_5083496)

axiom eq_961 : (value(sfp_1_126_5083496) = ((-1684013.0) / 2097152.0))

logic ust_118 : single

axiom eq_97 : (value(ust_118) = ((-1684013.0) / 2097152.0))

axiom eq_971 : (sign1(ust_118) = Neg)

axiom eq_972 : is_finite(ust_118)

logic s_mul__t_3__t_13__t_118 : single

axiom eq_98 : mul_post(NearestTiesToEven, x0, ust_118,
  s_mul__t_3__t_13__t_118)

logic ust_119 : single

axiom eq_99 : mul_post(NearestTiesToEven, x0, ust_118, ust_119)

logic s_add__t_3__t_42__t_119 : single

axiom eq_100 : add_post(NearestTiesToEven, ust_42, ust_119,
  s_add__t_3__t_42__t_119)

logic ust_120 : single

axiom eq_101 : add_post(NearestTiesToEven, ust_42, ust_119, ust_120)

logic sfp_0_126_5268046 : single

axiom eq_102 : is_finite(sfp_0_126_5268046)

axiom eq_1021 : (value(sfp_0_126_5268046) = (6828327.0 / 8388608.0))

logic ust_122 : single

axiom eq_103 : (value(ust_122) = (6828327.0 / 8388608.0))

axiom eq_1031 : (sign1(ust_122) = Pos)

axiom eq_1032 : is_finite(ust_122)

logic s_mul__t_3__t_17__t_122 : single

axiom eq_104 : mul_post(NearestTiesToEven, x1, ust_122,
  s_mul__t_3__t_17__t_122)

logic ust_123 : single

axiom eq_105 : mul_post(NearestTiesToEven, x1, ust_122, ust_123)

logic s_add__t_3__t_120__t_123 : single

axiom eq_106 : add_post(NearestTiesToEven, ust_120, ust_123,
  s_add__t_3__t_120__t_123)

logic ust_124 : single

axiom eq_107 : add_post(NearestTiesToEven, ust_120, ust_123, ust_124)

logic sfp_1_126_7264534 : single

axiom eq_108 : is_finite(sfp_1_126_7264534)

axiom eq_1081 : (value(sfp_1_126_7264534) = ((-7826571.0) / 8388608.0))

logic ust_127 : single

axiom eq_109 : (value(ust_127) = ((-7826571.0) / 8388608.0))

axiom eq_1091 : (sign1(ust_127) = Neg)

axiom eq_1092 : is_finite(ust_127)

logic s_mul__t_3__t_21__t_127 : single

axiom eq_110 : mul_post(NearestTiesToEven, x2, ust_127,
  s_mul__t_3__t_21__t_127)

logic ust_128 : single

axiom eq_1111 : mul_post(NearestTiesToEven, x2, ust_127, ust_128)

logic s_add__t_3__t_124__t_128 : single

axiom eq_112 : add_post(NearestTiesToEven, ust_124, ust_128,
  s_add__t_3__t_124__t_128)

logic ust_129 : single

axiom eq_113 : add_post(NearestTiesToEven, ust_124, ust_128, ust_129)

logic sfp_1_125_6945766 : single

axiom eq_114 : is_finite(sfp_1_125_6945766)

axiom eq_1141 : (value(sfp_1_125_6945766) = ((-7667187.0) / 16777216.0))

logic ust_132 : single

axiom eq_115 : (value(ust_132) = ((-7667187.0) / 16777216.0))

axiom eq_1151 : (sign1(ust_132) = Neg)

axiom eq_1152 : is_finite(ust_132)

logic s_mul__t_3__t_25__t_132 : single

axiom eq_116 : mul_post(NearestTiesToEven, x3, ust_132,
  s_mul__t_3__t_25__t_132)

logic ust_133 : single

axiom eq_117 : mul_post(NearestTiesToEven, x3, ust_132, ust_133)

logic s_add__t_3__t_129__t_133 : single

axiom eq_118 : add_post(NearestTiesToEven, ust_129, ust_133,
  s_add__t_3__t_129__t_133)

logic ust_134 : single

axiom eq_119 : add_post(NearestTiesToEven, ust_129, ust_133, ust_134)

logic sfp_0_125_1711276 : single

axiom eq_120 : is_finite(sfp_0_125_1711276)

axiom eq_1201 : (value(sfp_0_125_1711276) = (2524971.0 / 8388608.0))

logic ust_136 : single

axiom eq_1211 : (value(ust_136) = (2524971.0 / 8388608.0))

axiom eq_1212 : (sign1(ust_136) = Pos)

axiom eq_1213 : is_finite(ust_136)

logic s_mul__t_3__t_29__t_136 : single

axiom eq_122 : mul_post(NearestTiesToEven, x4, ust_136,
  s_mul__t_3__t_29__t_136)

logic ust_137 : single

axiom eq_123 : mul_post(NearestTiesToEven, x4, ust_136, ust_137)

logic s_add__t_3__t_134__t_137 : single

axiom eq_124 : add_post(NearestTiesToEven, ust_134, ust_137,
  s_add__t_3__t_134__t_137)

logic ust_138 : single

axiom eq_125 : add_post(NearestTiesToEven, ust_134, ust_137, ust_138)

logic sfp_0_124_5301600 : single

axiom eq_126 : is_finite(sfp_0_124_5301600)

axiom eq_1261 : (value(sfp_0_124_5301600) = (427819.0 / 2097152.0))

logic ust_140 : single

axiom eq_127 : (value(ust_140) = (427819.0 / 2097152.0))

axiom eq_1271 : (sign1(ust_140) = Pos)

axiom eq_1272 : is_finite(ust_140)

logic s_mul__t_3__t_33__t_140 : single

axiom eq_128 : mul_post(NearestTiesToEven, x5, ust_140,
  s_mul__t_3__t_33__t_140)

logic ust_141 : single

axiom eq_129 : mul_post(NearestTiesToEven, x5, ust_140, ust_141)

logic s_add__t_3__t_138__t_141 : single

axiom eq_130 : add_post(NearestTiesToEven, ust_138, ust_141,
  s_add__t_3__t_138__t_141)

logic ust_142 : single

axiom eq_131 : add_post(NearestTiesToEven, ust_138, ust_141, ust_142)

logic sfp_0_126_2147484 : single

axiom eq_132 : is_finite(sfp_0_126_2147484)

axiom eq_1321 : (value(sfp_0_126_2147484) = (2634023.0 / 4194304.0))

logic ust_144 : single

axiom eq_133 : (value(ust_144) = (2634023.0 / 4194304.0))

axiom eq_1331 : (sign1(ust_144) = Pos)

axiom eq_1332 : is_finite(ust_144)

logic s_mul__t_3__t_37__t_144 : single

axiom eq_134 : mul_post(NearestTiesToEven, x6, ust_144,
  s_mul__t_3__t_37__t_144)

logic ust_145 : single

axiom eq_135 : mul_post(NearestTiesToEven, x6, ust_144, ust_145)

logic s_add__t_3__t_142__t_145 : single

axiom eq_136 : add_post(NearestTiesToEven, ust_142, ust_145,
  s_add__t_3__t_142__t_145)

logic ust_146 : single

axiom eq_137 : add_post(NearestTiesToEven, ust_142, ust_145, ust_146)

axiom ax_10 : le(ust_146, ust_115)

logic sfp_1_126_5704252 : single

axiom eq_138 : is_finite(sfp_1_126_5704252)

axiom eq_1381 : (value(sfp_1_126_5704252) = ((-3523215.0) / 4194304.0))

logic ust_150 : single

axiom eq_139 : (value(ust_150) = ((-3523215.0) / 4194304.0))

axiom eq_1391 : (sign1(ust_150) = Neg)

axiom eq_1392 : is_finite(ust_150)

logic sfp_0_126_7113540 : single

axiom eq_140 : is_finite(sfp_0_126_7113540)

axiom eq_1401 : (value(sfp_0_126_7113540) = (3875537.0 / 4194304.0))

logic ust_152 : single

axiom eq_1411 : (value(ust_152) = (3875537.0 / 4194304.0))

axiom eq_1412 : (sign1(ust_152) = Pos)

axiom eq_1413 : is_finite(ust_152)

logic s_mul__t_3__t_13__t_152 : single

axiom eq_142 : mul_post(NearestTiesToEven, x0, ust_152,
  s_mul__t_3__t_13__t_152)

logic ust_153 : single

axiom eq_143 : mul_post(NearestTiesToEven, x0, ust_152, ust_153)

logic s_add__t_3__t_42__t_153 : single

axiom eq_144 : add_post(NearestTiesToEven, ust_42, ust_153,
  s_add__t_3__t_42__t_153)

logic ust_154 : single

axiom eq_145 : add_post(NearestTiesToEven, ust_42, ust_153, ust_154)

logic sfp_1_126_1375732 : single

axiom eq_146 : is_finite(sfp_1_126_1375732)

axiom eq_1461 : (value(sfp_1_126_1375732) = ((-2441085.0) / 4194304.0))

logic ust_157 : single

axiom eq_147 : (value(ust_157) = ((-2441085.0) / 4194304.0))

axiom eq_1471 : (sign1(ust_157) = Neg)

axiom eq_1472 : is_finite(ust_157)

logic s_mul__t_3__t_17__t_157 : single

axiom eq_148 : mul_post(NearestTiesToEven, x1, ust_157,
  s_mul__t_3__t_17__t_157)

logic ust_158 : single

axiom eq_149 : mul_post(NearestTiesToEven, x1, ust_157, ust_158)

logic s_add__t_3__t_154__t_158 : single

axiom eq_150 : add_post(NearestTiesToEven, ust_154, ust_158,
  s_add__t_3__t_154__t_158)

logic ust_159 : single

axiom eq_1511 : add_post(NearestTiesToEven, ust_154, ust_158, ust_159)

logic sfp_1_126_2382364 : single

axiom eq_1521 : is_finite(sfp_1_126_2382364)

axiom eq_1522 : (value(sfp_1_126_2382364) = ((-2692743.0) / 4194304.0))

logic ust_162 : single

axiom eq_153 : (value(ust_162) = ((-2692743.0) / 4194304.0))

axiom eq_1531 : (sign1(ust_162) = Neg)

axiom eq_1532 : is_finite(ust_162)

logic s_mul__t_3__t_21__t_162 : single

axiom eq_154 : mul_post(NearestTiesToEven, x2, ust_162,
  s_mul__t_3__t_21__t_162)

logic ust_163 : single

axiom eq_155 : mul_post(NearestTiesToEven, x2, ust_162, ust_163)

logic s_add__t_3__t_159__t_163 : single

axiom eq_156 : add_post(NearestTiesToEven, ust_159, ust_163,
  s_add__t_3__t_159__t_163)

logic ust_164 : single

axiom eq_157 : add_post(NearestTiesToEven, ust_159, ust_163, ust_164)

logic sfp_0_126_4513070 : single

axiom eq_158 : is_finite(sfp_0_126_4513070)

axiom eq_1581 : (value(sfp_0_126_4513070) = (6450839.0 / 8388608.0))

logic ust_166 : single

axiom eq_159 : (value(ust_166) = (6450839.0 / 8388608.0))

axiom eq_1591 : (sign1(ust_166) = Pos)

axiom eq_1592 : is_finite(ust_166)

logic s_mul__t_3__t_25__t_166 : single

axiom eq_160 : mul_post(NearestTiesToEven, x3, ust_166,
  s_mul__t_3__t_25__t_166)

logic ust_167 : single

axiom eq_161 : mul_post(NearestTiesToEven, x3, ust_166, ust_167)

logic s_add__t_3__t_164__t_167 : single

axiom eq_162 : add_post(NearestTiesToEven, ust_164, ust_167,
  s_add__t_3__t_164__t_167)

logic ust_168 : single

axiom eq_163 : add_post(NearestTiesToEven, ust_164, ust_167, ust_168)

logic sfp_1_125_2013266 : single

axiom eq_164 : is_finite(sfp_1_125_2013266)

axiom eq_1641 : (value(sfp_1_125_2013266) = ((-5200937.0) / 16777216.0))

logic ust_171 : single

axiom eq_165 : (value(ust_171) = ((-5200937.0) / 16777216.0))

axiom eq_1651 : (sign1(ust_171) = Neg)

axiom eq_1652 : is_finite(ust_171)

logic s_mul__t_3__t_29__t_171 : single

axiom eq_166 : mul_post(NearestTiesToEven, x4, ust_171,
  s_mul__t_3__t_29__t_171)

logic ust_172 : single

axiom eq_167 : mul_post(NearestTiesToEven, x4, ust_171, ust_172)

logic s_add__t_3__t_168__t_172 : single

axiom eq_168 : add_post(NearestTiesToEven, ust_168, ust_172,
  s_add__t_3__t_168__t_172)

logic ust_173 : single

axiom eq_169 : add_post(NearestTiesToEven, ust_168, ust_172, ust_173)

logic sfp_0_125_6006243 : single

axiom eq_170 : is_finite(sfp_0_125_6006243)

axiom eq_1701 : (value(sfp_0_125_6006243) = (14394851.0 / 33554432.0))

logic ust_175 : single

axiom eq_171 : (value(ust_175) = (14394851.0 / 33554432.0))

axiom eq_1711 : (sign1(ust_175) = Pos)

axiom eq_1712 : is_finite(ust_175)

logic s_mul__t_3__t_33__t_175 : single

axiom eq_172 : mul_post(NearestTiesToEven, x5, ust_175,
  s_mul__t_3__t_33__t_175)

logic ust_176 : single

axiom eq_173 : mul_post(NearestTiesToEven, x5, ust_175, ust_176)

logic s_add__t_3__t_173__t_176 : single

axiom eq_174 : add_post(NearestTiesToEven, ust_173, ust_176,
  s_add__t_3__t_173__t_176)

logic ust_177 : single

axiom eq_175 : add_post(NearestTiesToEven, ust_173, ust_176, ust_177)

logic sfp_0_126_5603590 : single

axiom eq_176 : is_finite(sfp_0_126_5603590)

axiom eq_1761 : (value(sfp_0_126_5603590) = (6996099.0 / 8388608.0))

logic ust_179 : single

axiom eq_177 : (value(ust_179) = (6996099.0 / 8388608.0))

axiom eq_1771 : (sign1(ust_179) = Pos)

axiom eq_1772 : is_finite(ust_179)

logic s_mul__t_3__t_37__t_179 : single

axiom eq_178 : mul_post(NearestTiesToEven, x6, ust_179,
  s_mul__t_3__t_37__t_179)

logic ust_180 : single

axiom eq_179 : mul_post(NearestTiesToEven, x6, ust_179, ust_180)

logic s_add__t_3__t_177__t_180 : single

axiom eq_180 : add_post(NearestTiesToEven, ust_177, ust_180,
  s_add__t_3__t_177__t_180)

logic ust_181 : single

axiom eq_181 : add_post(NearestTiesToEven, ust_177, ust_180, ust_181)

axiom ax_11 : le(ust_150, ust_181)

logic sfp_1_126_5318377 : single

axiom eq_182 : is_finite(sfp_1_126_5318377)

axiom eq_1821 : (value(sfp_1_126_5318377) = ((-13706985.0) / 16777216.0))

logic ust_185 : single

axiom eq_183 : (value(ust_185) = ((-13706985.0) / 16777216.0))

axiom eq_1831 : (sign1(ust_185) = Neg)

axiom eq_1832 : is_finite(ust_185)

logic sfp_1_122_3154117 : single

axiom eq_184 : is_finite(sfp_1_122_3154117)

axiom eq_1841 : (value(sfp_1_122_3154117) = ((-11542725.0) / 268435456.0))

logic ust_188 : single

axiom eq_185 : (value(ust_188) = ((-11542725.0) / 268435456.0))

axiom eq_1851 : (sign1(ust_188) = Neg)

axiom eq_1852 : is_finite(ust_188)

logic s_mul__t_3__t_13__t_188 : single

axiom eq_186 : mul_post(NearestTiesToEven, x0, ust_188,
  s_mul__t_3__t_13__t_188)

logic ust_189 : single

axiom eq_187 : mul_post(NearestTiesToEven, x0, ust_188, ust_189)

logic s_add__t_3__t_42__t_189 : single

axiom eq_188 : add_post(NearestTiesToEven, ust_42, ust_189,
  s_add__t_3__t_42__t_189)

logic ust_190 : single

axiom eq_189 : add_post(NearestTiesToEven, ust_42, ust_189, ust_190)

logic sfp_1_126_16777 : single

axiom eq_190 : is_finite(sfp_1_126_16777)

axiom eq_1901 : (value(sfp_1_126_16777) = ((-8405385.0) / 16777216.0))

logic ust_193 : single

axiom eq_191 : (value(ust_193) = ((-8405385.0) / 16777216.0))

axiom eq_1911 : (sign1(ust_193) = Neg)

axiom eq_1912 : is_finite(ust_193)

logic s_mul__t_3__t_17__t_193 : single

axiom eq_192 : mul_post(NearestTiesToEven, x1, ust_193,
  s_mul__t_3__t_17__t_193)

logic ust_194 : single

axiom eq_193 : mul_post(NearestTiesToEven, x1, ust_193, ust_194)

logic s_add__t_3__t_190__t_194 : single

axiom eq_194 : add_post(NearestTiesToEven, ust_190, ust_194,
  s_add__t_3__t_190__t_194)

logic ust_195 : single

axiom eq_195 : add_post(NearestTiesToEven, ust_190, ust_194, ust_195)

logic sfp_1_126_5855248 : single

axiom eq_196 : is_finite(sfp_1_126_5855248)

axiom eq_1961 : (value(sfp_1_126_5855248) = ((-890241.0) / 1048576.0))

logic ust_198 : single

axiom eq_197 : (value(ust_198) = ((-890241.0) / 1048576.0))

axiom eq_1971 : (sign1(ust_198) = Neg)

axiom eq_1972 : is_finite(ust_198)

logic s_mul__t_3__t_21__t_198 : single

axiom eq_198 : mul_post(NearestTiesToEven, x2, ust_198,
  s_mul__t_3__t_21__t_198)

logic ust_199 : single

axiom eq_199 : mul_post(NearestTiesToEven, x2, ust_198, ust_199)

logic s_add__t_3__t_195__t_199 : single

axiom eq_200 : add_post(NearestTiesToEven, ust_195, ust_199,
  s_add__t_3__t_195__t_199)

logic ust_200 : single

axiom eq_2011 : add_post(NearestTiesToEven, ust_195, ust_199, ust_200)

logic s_add__t_3__t_133__t_200 : single

axiom eq_202 : add_post(NearestTiesToEven, ust_133, ust_200,
  s_add__t_3__t_133__t_200)

logic ust_201 : single

axiom eq_203 : add_post(NearestTiesToEven, ust_133, ust_200, ust_201)

logic sfp_0_125_7079984 : single

axiom eq_204 : is_finite(sfp_0_125_7079984)

axiom eq_2041 : (value(sfp_0_125_7079984) = (966787.0 / 2097152.0))

logic ust_203 : single

axiom eq_205 : (value(ust_203) = (966787.0 / 2097152.0))

axiom eq_2051 : (sign1(ust_203) = Pos)

axiom eq_2052 : is_finite(ust_203)

logic s_mul__t_3__t_29__t_203 : single

axiom eq_206 : mul_post(NearestTiesToEven, x4, ust_203,
  s_mul__t_3__t_29__t_203)

logic ust_204 : single

axiom eq_207 : mul_post(NearestTiesToEven, x4, ust_203, ust_204)

logic s_add__t_3__t_201__t_204 : single

axiom eq_208 : add_post(NearestTiesToEven, ust_201, ust_204,
  s_add__t_3__t_201__t_204)

logic ust_205 : single

axiom eq_209 : add_post(NearestTiesToEven, ust_201, ust_204, ust_205)

logic sfp_1_119_4496294 : single

axiom eq_210 : is_finite(sfp_1_119_4496294)

axiom eq_2101 : (value(sfp_1_119_4496294) = ((-6442451.0) / 1073741824.0))

logic ust_208 : single

axiom eq_2111 : (value(ust_208) = ((-6442451.0) / 1073741824.0))

axiom eq_2112 : (sign1(ust_208) = Neg)

axiom eq_2113 : is_finite(ust_208)

logic s_mul__t_3__t_33__t_208 : single

axiom eq_2121 : mul_post(NearestTiesToEven, x5, ust_208,
  s_mul__t_3__t_33__t_208)

logic ust_209 : single

axiom eq_2131 : mul_post(NearestTiesToEven, x5, ust_208, ust_209)

logic s_add__t_3__t_205__t_209 : single

axiom eq_214 : add_post(NearestTiesToEven, ust_205, ust_209,
  s_add__t_3__t_205__t_209)

logic ust_210 : single

axiom eq_215 : add_post(NearestTiesToEven, ust_205, ust_209, ust_210)

logic sfp_0_125_3623878 : single

axiom eq_216 : is_finite(sfp_0_125_3623878)

axiom eq_2161 : (value(sfp_0_125_3623878) = (6006243.0 / 16777216.0))

logic ust_212 : single

axiom eq_217 : (value(ust_212) = (6006243.0 / 16777216.0))

axiom eq_2171 : (sign1(ust_212) = Pos)

axiom eq_2172 : is_finite(ust_212)

logic s_mul__t_3__t_37__t_212 : single

axiom eq_218 : mul_post(NearestTiesToEven, x6, ust_212,
  s_mul__t_3__t_37__t_212)

logic ust_213 : single

axiom eq_219 : mul_post(NearestTiesToEven, x6, ust_212, ust_213)

logic s_add__t_3__t_210__t_213 : single

axiom eq_220 : add_post(NearestTiesToEven, ust_210, ust_213,
  s_add__t_3__t_210__t_213)

logic ust_214 : single

axiom eq_221 : add_post(NearestTiesToEven, ust_210, ust_213, ust_214)

axiom ax_12 : le(ust_185, ust_214)

logic sfp_1_126_838860 : single

axiom eq_222 : is_finite(sfp_1_126_838860)

axiom eq_2221 : (value(sfp_1_126_838860) = ((-2306867.0) / 4194304.0))

logic ust_218 : single

axiom eq_223 : (value(ust_218) = ((-2306867.0) / 4194304.0))

axiom eq_2231 : (sign1(ust_218) = Neg)

axiom eq_2232 : is_finite(ust_218)

logic sfp_1_126_2415918 : single

axiom eq_224 : is_finite(sfp_1_126_2415918)

axiom eq_2241 : (value(sfp_1_126_2415918) = ((-5402263.0) / 8388608.0))

logic ust_221 : single

axiom eq_225 : (value(ust_221) = ((-5402263.0) / 8388608.0))

axiom eq_2251 : (sign1(ust_221) = Neg)

axiom eq_2252 : is_finite(ust_221)

logic s_mul__t_3__t_13__t_221 : single

axiom eq_226 : mul_post(NearestTiesToEven, x0, ust_221,
  s_mul__t_3__t_13__t_221)

logic ust_222 : single

axiom eq_227 : mul_post(NearestTiesToEven, x0, ust_221, ust_222)

logic s_add__t_3__t_42__t_222 : single

axiom eq_228 : add_post(NearestTiesToEven, ust_42, ust_222,
  s_add__t_3__t_42__t_222)

logic ust_223 : single

axiom eq_229 : add_post(NearestTiesToEven, ust_42, ust_222, ust_223)

logic s_mul__t_3__t_17__t_144 : single

axiom eq_230 : mul_post(NearestTiesToEven, x1, ust_144,
  s_mul__t_3__t_17__t_144)

logic ust_224 : single

axiom eq_231 : mul_post(NearestTiesToEven, x1, ust_144, ust_224)

logic s_add__t_3__t_223__t_224 : single

axiom eq_232 : add_post(NearestTiesToEven, ust_223, ust_224,
  s_add__t_3__t_223__t_224)

logic ust_225 : single

axiom eq_233 : add_post(NearestTiesToEven, ust_223, ust_224, ust_225)

logic s_mul__t_3__t_21__t_118 : single

axiom eq_234 : mul_post(NearestTiesToEven, x2, ust_118,
  s_mul__t_3__t_21__t_118)

logic ust_226 : single

axiom eq_235 : mul_post(NearestTiesToEven, x2, ust_118, ust_226)

logic s_add__t_3__t_225__t_226 : single

axiom eq_236 : add_post(NearestTiesToEven, ust_225, ust_226,
  s_add__t_3__t_225__t_226)

logic ust_227 : single

axiom eq_237 : add_post(NearestTiesToEven, ust_225, ust_226, ust_227)

logic sfp_1_125_8053064 : single

axiom eq_238 : is_finite(sfp_1_125_8053064)

axiom eq_2381 : (value(sfp_1_125_8053064) = ((-2055209.0) / 4194304.0))

logic ust_230 : single

axiom eq_239 : (value(ust_230) = ((-2055209.0) / 4194304.0))

axiom eq_2391 : (sign1(ust_230) = Neg)

axiom eq_2392 : is_finite(ust_230)

logic s_mul__t_3__t_25__t_230 : single

axiom eq_240 : mul_post(NearestTiesToEven, x3, ust_230,
  s_mul__t_3__t_25__t_230)

logic ust_231 : single

axiom eq_241 : mul_post(NearestTiesToEven, x3, ust_230, ust_231)

logic s_add__t_3__t_227__t_231 : single

axiom eq_242 : add_post(NearestTiesToEven, ust_227, ust_231,
  s_add__t_3__t_227__t_231)

logic ust_232 : single

axiom eq_243 : add_post(NearestTiesToEven, ust_227, ust_231, ust_232)

logic sfp_1_125_4831837 : single

axiom eq_244 : is_finite(sfp_1_125_4831837)

axiom eq_2441 : (value(sfp_1_125_4831837) = ((-13220445.0) / 33554432.0))

logic ust_235 : single

axiom eq_245 : (value(ust_235) = ((-13220445.0) / 33554432.0))

axiom eq_2451 : (sign1(ust_235) = Neg)

axiom eq_2452 : is_finite(ust_235)

logic s_mul__t_3__t_29__t_235 : single

axiom eq_246 : mul_post(NearestTiesToEven, x4, ust_235,
  s_mul__t_3__t_29__t_235)

logic ust_236 : single

axiom eq_247 : mul_post(NearestTiesToEven, x4, ust_235, ust_236)

logic s_add__t_3__t_232__t_236 : single

axiom eq_248 : add_post(NearestTiesToEven, ust_232, ust_236,
  s_add__t_3__t_232__t_236)

logic ust_237 : single

axiom eq_249 : add_post(NearestTiesToEven, ust_232, ust_236, ust_237)

logic sfp_1_124_1342177 : single

axiom eq_250 : is_finite(sfp_1_124_1342177)

axiom eq_2501 : (value(sfp_1_124_1342177) = ((-9730785.0) / 67108864.0))

logic ust_240 : single

axiom eq_251 : (value(ust_240) = ((-9730785.0) / 67108864.0))

axiom eq_2511 : (sign1(ust_240) = Neg)

axiom eq_2512 : is_finite(ust_240)

logic s_mul__t_3__t_33__t_240 : single

axiom eq_252 : mul_post(NearestTiesToEven, x5, ust_240,
  s_mul__t_3__t_33__t_240)

logic ust_241 : single

axiom eq_253 : mul_post(NearestTiesToEven, x5, ust_240, ust_241)

logic s_add__t_3__t_237__t_241 : single

axiom eq_254 : add_post(NearestTiesToEven, ust_237, ust_241,
  s_add__t_3__t_237__t_241)

logic ust_242 : single

axiom eq_255 : add_post(NearestTiesToEven, ust_237, ust_241, ust_242)

logic sfp_1_125_4932502 : single

axiom eq_256 : is_finite(sfp_1_125_4932502)

axiom eq_2561 : (value(sfp_1_125_4932502) = ((-6660555.0) / 16777216.0))

logic ust_245 : single

axiom eq_257 : (value(ust_245) = ((-6660555.0) / 16777216.0))

axiom eq_2571 : (sign1(ust_245) = Neg)

axiom eq_2572 : is_finite(ust_245)

logic s_mul__t_3__t_37__t_245 : single

axiom eq_258 : mul_post(NearestTiesToEven, x6, ust_245,
  s_mul__t_3__t_37__t_245)

logic ust_246 : single

axiom eq_259 : mul_post(NearestTiesToEven, x6, ust_245, ust_246)

logic s_add__t_3__t_242__t_246 : single

axiom eq_260 : add_post(NearestTiesToEven, ust_242, ust_246,
  s_add__t_3__t_242__t_246)

logic ust_247 : single

axiom eq_2611 : add_post(NearestTiesToEven, ust_242, ust_246, ust_247)

axiom ax_13 : le(ust_218, ust_247)

logic sfp_1_125_637533 : single

axiom eq_262 : is_finite(sfp_1_125_637533)

axiom eq_2621 : (value(sfp_1_125_637533) = ((-9026141.0) / 33554432.0))

logic ust_251 : single

axiom eq_263 : (value(ust_251) = ((-9026141.0) / 33554432.0))

axiom eq_2631 : (sign1(ust_251) = Neg)

axiom eq_2632 : is_finite(ust_251)

logic sfp_1_126_1778385 : single

axiom eq_264 : is_finite(sfp_1_126_1778385)

axiom eq_2641 : (value(sfp_1_126_1778385) = ((-10166993.0) / 16777216.0))

logic ust_254 : single

axiom eq_265 : (value(ust_254) = ((-10166993.0) / 16777216.0))

axiom eq_2651 : (sign1(ust_254) = Neg)

axiom eq_2652 : is_finite(ust_254)

logic s_mul__t_3__t_13__t_254 : single

axiom eq_266 : mul_post(NearestTiesToEven, x0, ust_254,
  s_mul__t_3__t_13__t_254)

logic ust_255 : single

axiom eq_267 : mul_post(NearestTiesToEven, x0, ust_254, ust_255)

logic s_add__t_3__t_42__t_255 : single

axiom eq_268 : add_post(NearestTiesToEven, ust_42, ust_255,
  s_add__t_3__t_42__t_255)

logic ust_256 : single

axiom eq_269 : add_post(NearestTiesToEven, ust_42, ust_255, ust_256)

logic sfp_0_126_3556769 : single

axiom eq_270 : is_finite(sfp_0_126_3556769)

axiom eq_2701 : (value(sfp_0_126_3556769) = (11945377.0 / 16777216.0))

logic ust_258 : single

axiom eq_2711 : (value(ust_258) = (11945377.0 / 16777216.0))

axiom eq_2712 : (sign1(ust_258) = Pos)

axiom eq_2713 : is_finite(ust_258)

logic s_mul__t_3__t_17__t_258 : single

axiom eq_2721 : mul_post(NearestTiesToEven, x1, ust_258,
  s_mul__t_3__t_17__t_258)

logic ust_259 : single

axiom eq_273 : mul_post(NearestTiesToEven, x1, ust_258, ust_259)

logic s_add__t_3__t_256__t_259 : single

axiom eq_274 : add_post(NearestTiesToEven, ust_256, ust_259,
  s_add__t_3__t_256__t_259)

logic ust_260 : single

axiom eq_275 : add_post(NearestTiesToEven, ust_256, ust_259, ust_260)

logic sfp_1_124_7113540 : single

axiom eq_276 : is_finite(sfp_1_124_7113540)

axiom eq_2761 : (value(sfp_1_124_7113540) = ((-3875537.0) / 16777216.0))

logic ust_263 : single

axiom eq_277 : (value(ust_263) = ((-3875537.0) / 16777216.0))

axiom eq_2771 : (sign1(ust_263) = Neg)

axiom eq_2772 : is_finite(ust_263)

logic s_mul__t_3__t_21__t_263 : single

axiom eq_278 : mul_post(NearestTiesToEven, x2, ust_263,
  s_mul__t_3__t_21__t_263)

logic ust_264 : single

axiom eq_279 : mul_post(NearestTiesToEven, x2, ust_263, ust_264)

logic s_add__t_3__t_260__t_264 : single

axiom eq_280 : add_post(NearestTiesToEven, ust_260, ust_264,
  s_add__t_3__t_260__t_264)

logic ust_265 : single

axiom eq_281 : add_post(NearestTiesToEven, ust_260, ust_264, ust_265)

logic sfp_1_125_6375341 : single

axiom eq_282 : is_finite(sfp_1_125_6375341)

axiom eq_2821 : (value(sfp_1_125_6375341) = ((-14763949.0) / 33554432.0))

logic ust_268 : single

axiom eq_283 : (value(ust_268) = ((-14763949.0) / 33554432.0))

axiom eq_2831 : (sign1(ust_268) = Neg)

axiom eq_2832 : is_finite(ust_268)

logic s_mul__t_3__t_25__t_268 : single

axiom eq_284 : mul_post(NearestTiesToEven, x3, ust_268,
  s_mul__t_3__t_25__t_268)

logic ust_269 : single

axiom eq_285 : mul_post(NearestTiesToEven, x3, ust_268, ust_269)

logic s_add__t_3__t_265__t_269 : single

axiom eq_286 : add_post(NearestTiesToEven, ust_265, ust_269,
  s_add__t_3__t_265__t_269)

logic ust_270 : single

axiom eq_287 : add_post(NearestTiesToEven, ust_265, ust_269, ust_270)

logic sfp_0_125_1476394 : single

axiom eq_288 : is_finite(sfp_0_125_1476394)

axiom eq_2881 : (value(sfp_0_125_1476394) = (4932501.0 / 16777216.0))

logic ust_272 : single

axiom eq_289 : (value(ust_272) = (4932501.0 / 16777216.0))

axiom eq_2891 : (sign1(ust_272) = Pos)

axiom eq_2892 : is_finite(ust_272)

logic s_mul__t_3__t_29__t_272 : single

axiom eq_290 : mul_post(NearestTiesToEven, x4, ust_272,
  s_mul__t_3__t_29__t_272)

logic ust_273 : single

axiom eq_291 : mul_post(NearestTiesToEven, x4, ust_272, ust_273)

logic s_add__t_3__t_270__t_273 : single

axiom eq_292 : add_post(NearestTiesToEven, ust_270, ust_273,
  s_add__t_3__t_270__t_273)

logic ust_274 : single

axiom eq_293 : add_post(NearestTiesToEven, ust_270, ust_273, ust_274)

logic sfp_0_126_4747952 : single

axiom eq_294 : is_finite(sfp_0_126_4747952)

axiom eq_2941 : (value(sfp_0_126_4747952) = (821035.0 / 1048576.0))

logic ust_276 : single

axiom eq_295 : (value(ust_276) = (821035.0 / 1048576.0))

axiom eq_2951 : (sign1(ust_276) = Pos)

axiom eq_2952 : is_finite(ust_276)

logic s_mul__t_3__t_33__t_276 : single

axiom eq_296 : mul_post(NearestTiesToEven, x5, ust_276,
  s_mul__t_3__t_33__t_276)

logic ust_277 : single

axiom eq_297 : mul_post(NearestTiesToEven, x5, ust_276, ust_277)

logic s_add__t_3__t_274__t_277 : single

axiom eq_298 : add_post(NearestTiesToEven, ust_274, ust_277,
  s_add__t_3__t_274__t_277)

logic ust_278 : single

axiom eq_299 : add_post(NearestTiesToEven, ust_274, ust_277, ust_278)

logic sfp_1_123_6777994 : single

axiom eq_300 : is_finite(sfp_1_123_6777994)

axiom eq_3001 : (value(sfp_1_123_6777994) = ((-7583301.0) / 67108864.0))

logic ust_281 : single

axiom eq_301 : (value(ust_281) = ((-7583301.0) / 67108864.0))

axiom eq_3011 : (sign1(ust_281) = Neg)

axiom eq_3012 : is_finite(ust_281)

logic s_mul__t_3__t_37__t_281 : single

axiom eq_302 : mul_post(NearestTiesToEven, x6, ust_281,
  s_mul__t_3__t_37__t_281)

logic ust_282 : single

axiom eq_303 : mul_post(NearestTiesToEven, x6, ust_281, ust_282)

logic s_add__t_3__t_278__t_282 : single

axiom eq_304 : add_post(NearestTiesToEven, ust_278, ust_282,
  s_add__t_3__t_278__t_282)

logic ust_283 : single

axiom eq_305 : add_post(NearestTiesToEven, ust_278, ust_282, ust_283)

axiom ax_14 : le(ust_283, ust_251)

goal g_1 : false
