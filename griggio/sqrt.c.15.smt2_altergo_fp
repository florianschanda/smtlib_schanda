(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo real arithmetic *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

logic match_mode : fpa_rounding_mode, 'a, 'a, 'a, 'a, 'a -> 'a

axiom match_mode_NearestTiesToEven :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToEven, z, z1, z2, z3, z4) = z))

axiom match_mode_ToZero :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(ToZero, z, z1, z2, z3, z4) = z1))

axiom match_mode_Up :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Up, z, z1, z2, z3, z4) = z2))

axiom match_mode_Down :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(Down, z, z1, z2, z3, z4) = z3))

axiom match_mode_NearestTiesToAway :
  (forall z:'a. forall z1:'a. forall z2:'a. forall z3:'a. forall z4:'a.
  (match_mode(NearestTiesToAway, z, z1, z2, z3, z4) = z4))

type single

axiom add_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x + y) / z) = ((x / z) + (y / z)))))

axiom sub_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x - y) / z) = ((x / z) - (y / z)))))

axiom neg_div :
  (forall x:real. forall y:real. ((not (y = 0.0)) ->
  (((-x) / y) = (-(x / y)))))

axiom assoc_mul_div :
  (forall x:real. forall y:real. forall z:real. ((not (z = 0.0)) ->
  (((x * y) / z) = (x * (y / z)))))

axiom assoc_div_mul :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> (((x / y) / z) = (x / (y * z)))))

axiom assoc_div_div :
  (forall x:real. forall y:real. forall z:real. (((not (y = 0.0)) and
  (not (z = 0.0))) -> ((x / (y / z)) = ((x * z) / y))))

axiom CompatOrderMult :
  (forall x:real. forall y:real. forall z:real. ((x <= y) -> ((0.0 <= z) ->
  ((x * z) <= (y * z)))))

axiom CompatOrderMult1 :
  (forall x:int. forall y:int. forall z:int. ((x <= y) -> ((0 <= z) ->
  ((x * z) <= (y * z)))))

axiom Monotonic :
  (forall x:int. forall y:int. ((x <= y) ->
  (real_of_int(x) <= real_of_int(y))))

logic truncate : real -> int

axiom Truncate_int : (forall i:int. (truncate(real_of_int(i)) = i))

axiom Truncate_down_pos :
  (forall x:real. ((0.0 <= x) -> (real_of_int(truncate(x)) <= x)))

axiom Truncate_down_pos1 :
  (forall x:real. ((0.0 <= x) -> (x <  real_of_int((truncate(x) + 1)))))

axiom Truncate_up_neg :
  (forall x:real. ((x <= 0.0) -> (real_of_int((truncate(x) - 1)) <  x)))

axiom Truncate_up_neg1 :
  (forall x:real. ((x <= 0.0) -> (x <= real_of_int(truncate(x)))))

axiom Real_of_truncate :
  (forall x:real. ((x - 1.0) <= real_of_int(truncate(x))))

axiom Real_of_truncate1 :
  (forall x:real. (real_of_int(truncate(x)) <= (x + 1.0)))

axiom Truncate_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (truncate(x) <= truncate(y))))

axiom Truncate_monotonic_int1 :
  (forall x:real. forall i:int. ((x <= real_of_int(i)) ->
  (truncate(x) <= i)))

axiom Truncate_monotonic_int2 :
  (forall x:real. forall i:int. ((real_of_int(i) <= x) ->
  (i <= truncate(x))))

axiom Floor_int : (forall i:int. (int_floor(real_of_int(i)) = i))

axiom Ceil_int : (forall i:int. (int_ceil(real_of_int(i)) = i))

axiom Floor_down : (forall x:real. (real_of_int(int_floor(x)) <= x))

axiom Floor_down1 : (forall x:real. (x <  real_of_int((int_floor(x) + 1))))

axiom Ceil_up : (forall x:real. (real_of_int((int_ceil(x) - 1)) <  x))

axiom Ceil_up1 : (forall x:real. (x <= real_of_int(int_ceil(x))))

axiom Floor_monotonic :
  (forall x:real. forall y:real. ((x <= y) ->
  (int_floor(x) <= int_floor(y))))

axiom Ceil_monotonic :
  (forall x:real. forall y:real. ((x <= y) -> (int_ceil(x) <= int_ceil(y))))

function sqr(x: real) : real = (x * x)

axiom Sqrt_positive : (forall x:real. ((0.0 <= x) -> (0.0 <= sqrt_real(x))))

axiom Sqrt_square : (forall x:real. ((0.0 <= x) -> (sqr(sqrt_real(x)) = x)))

axiom Square_sqrt : (forall x:real. ((0.0 <= x) -> (sqrt_real((x * x)) = x)))

axiom Sqrt_mul :
  (forall x:real. forall y:real. (((0.0 <= x) and (0.0 <= y)) ->
  (sqrt_real((x * y)) = (sqrt_real(x) * sqrt_real(y)))))

axiom Sqrt_le :
  (forall x:real. forall y:real. (((0.0 <= x) and (x <= y)) ->
  (sqrt_real(x) <= sqrt_real(y))))

type class = Finite | Infinite | NaN

logic match_class : class, 'a, 'a, 'a -> 'a

axiom match_class_Finite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Finite, z, z1,
  z2) = z))

axiom match_class_Infinite :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(Infinite, z, z1,
  z2) = z1))

axiom match_class_NaN :
  (forall z:'a. forall z1:'a. forall z2:'a. (match_class(NaN, z, z1,
  z2) = z2))

type sign = Neg | Pos

logic match_sign : sign, 'a, 'a -> 'a

axiom match_sign_Neg :
  (forall z:'a. forall z1:'a. (match_sign(Neg, z, z1) = z))

axiom match_sign_Pos :
  (forall z:'a. forall z1:'a. (match_sign(Pos, z, z1) = z1))

logic same_sign_real : sign, real -> prop

axiom Neg_case : (forall x:real. ((x <  0.0) -> same_sign_real(Neg, x)))

axiom Pos_case : (forall x:real. ((0.0 <  x) -> same_sign_real(Pos, x)))

axiom same_sign_real_inversion :
  (forall z:sign. forall z1:real. (same_sign_real(z, z1) -> (((z1 <  0.0) and
  (z = Neg)) or ((0.0 <  z1) and (z = Pos)))))

axiom same_sign_real_zero1 : (forall b:sign. (not same_sign_real(b, 0.0)))

axiom same_sign_real_zero2 :
  (forall x:real. (not (same_sign_real(Neg, x) and same_sign_real(Pos, x))))

axiom same_sign_real_zero3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> (not (x = 0.0))))

axiom same_sign_real_correct2 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((x <  0.0) ->
  (b = Neg))))

axiom same_sign_real_correct21 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Neg) ->
  (x <  0.0))))

axiom same_sign_real_correct3 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((0.0 <  x) ->
  (b = Pos))))

axiom same_sign_real_correct31 :
  (forall b:sign. forall x:real. (same_sign_real(b, x) -> ((b = Pos) ->
  (0.0 <  x))))

axiom Abs_le :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> ((-y) <= x)))

axiom Abs_le1 :
  (forall x:real. forall y:real. ((abs_real(x) <= y) -> (x <= y)))

axiom Abs_le2 :
  (forall x:real. forall y:real. ((((-y) <= x) and (x <= y)) ->
  (abs_real(x) <= y)))

axiom Abs_pos : (forall x:real. (0.0 <= abs_real(x)))

axiom Abs_sum :
  (forall x:real. forall y:real.
  (abs_real((x + y)) <= (abs_real(x) + abs_real(y))))

axiom Abs_prod :
  (forall x:real. forall y:real.
  (abs_real((x * y)) = (abs_real(x) * abs_real(y))))

axiom triangular_inequality :
  (forall x:real. forall y:real. forall z:real.
  (abs_real((x - z)) <= (abs_real((x - y)) + abs_real((y - z)))))

logic value : single -> real

predicate no_overflow(m: fpa_rounding_mode, x: real) =
  (abs_real(float32(m, x)) <= 0x1.FFFFFEp127)

axiom Bounded_real_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> no_overflow(m, x)))

axiom Round_value :
  (forall m:fpa_rounding_mode. forall x:single.
  (float32(m, value(x)) = value(x)))

axiom Bounded_value :
  (forall x:single. (abs_real(value(x)) <= 0x1.FFFFFEp127))

axiom Exact_rounding_for_integers :
  (forall m:fpa_rounding_mode. forall i:int. ((((-16777216) <= i) and
  (i <= 16777216)) -> (float32(m, real_of_int(i)) = real_of_int(i))))

axiom Round_down_le : (forall x:real. (float32(Down, x) <= x))

axiom Round_up_ge : (forall x:real. (x <= float32(Up, x)))

axiom Round_down_neg :
  (forall x:real. (float32(Down, (-x)) = (-float32(Up, x))))

axiom Round_up_neg :
  (forall x:real. (float32(Up, (-x)) = (-float32(Down, x))))

logic round_logic : fpa_rounding_mode, real -> single

axiom Round_logic_def :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

logic class1 : single -> class

predicate is_finite(x: single) = (class1(x) = Finite)

predicate is_infinite(x: single) = (class1(x) = Infinite)

predicate is_NaN(x: single) = (class1(x) = NaN)

predicate is_not_NaN(x: single) = (is_finite(x) or is_infinite(x))

axiom is_not_NaN1 : (forall x:single. (is_not_NaN(x) -> (not is_NaN(x))))

axiom is_not_NaN2 : (forall x:single. ((not is_NaN(x)) -> is_not_NaN(x)))

logic sign1 : single -> sign

predicate same_sign_real1(x: single, y: real) = same_sign_real(sign1(x), y)

predicate same_sign(x: single, y: single) = (sign1(x) = sign1(y))

predicate diff_sign(x: single, y: single) = (not (sign1(x) = sign1(y)))

predicate sign_zero_result(m: fpa_rounding_mode, x: single) =
  ((value(x) = 0.0) -> ((((((m = NearestTiesToEven) -> (sign1(x) = Pos)) and
  ((m = ToZero) -> (sign1(x) = Pos))) and ((m = Up) -> (sign1(x) = Pos))) and
  ((m = Down) -> (sign1(x) = Neg))) and ((m = NearestTiesToAway) ->
  (sign1(x) = Pos))))

predicate is_minus_infinity(x: single) = (is_infinite(x) and
  (sign1(x) = Neg))

predicate is_plus_infinity(x: single) = (is_infinite(x) and (sign1(x) = Pos))

predicate is_gen_zero(x: single) = (is_finite(x) and (value(x) = 0.0))

predicate is_gen_zero_plus(x: single) = (is_gen_zero(x) and (sign1(x) = Pos))

predicate is_gen_zero_minus(x: single) = (is_gen_zero(x) and
  (sign1(x) = Neg))

axiom finite_sign :
  (forall x:single. (((class1(x) = Finite) and (not (value(x) = 0.0))) ->
  same_sign_real1(x, value(x))))

axiom finite_sign_pos1 :
  (forall x:single. (((class1(x) = Finite) and (0.0 <  value(x))) ->
  (sign1(x) = Pos)))

axiom finite_sign_pos2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Pos))) -> (0.0 <  value(x))))

axiom finite_sign_neg1 :
  (forall x:single. (((class1(x) = Finite) and (value(x) <  0.0)) ->
  (sign1(x) = Neg)))

axiom finite_sign_neg2 :
  (forall x:single. (((class1(x) = Finite) and ((not (value(x) = 0.0)) and
  (sign1(x) = Neg))) -> (value(x) <  0.0)))

axiom diff_sign_trans :
  (forall x:single. forall y:single. forall z:single. ((diff_sign(x, y) and
  diff_sign(y, z)) -> same_sign(x, z)))

axiom diff_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and ((value(x) * value(y)) <  0.0))) -> diff_sign(x,
  y)))

axiom same_sign_product :
  (forall x:single. forall y:single. (((class1(x) = Finite) and
  ((class1(y) = Finite) and same_sign(x, y))) ->
  (0.0 <= (value(x) * value(y)))))

predicate overflow_value(m: fpa_rounding_mode, x: single) =
  (((sign1(x) = Neg) -> ((((((m = NearestTiesToEven) -> is_infinite(x)) and
  ((m = ToZero) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Up) -> (is_finite(x) and (value(x) = (-0x1.FFFFFEp127))))) and
  ((m = Down) -> is_infinite(x))) and ((m = NearestTiesToAway) ->
  is_infinite(x)))) and ((sign1(x) = Pos) -> ((((((m = NearestTiesToEven) ->
  is_infinite(x)) and ((m = ToZero) -> (is_finite(x) and
  (value(x) = 0x1.FFFFFEp127)))) and ((m = Up) -> is_infinite(x))) and
  ((m = Down) -> (is_finite(x) and (value(x) = 0x1.FFFFFEp127)))) and
  ((m = NearestTiesToAway) -> is_infinite(x)))))

axiom round1 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  is_finite(round_logic(m, x))))

axiom round11 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow(m, x) ->
  (value(round_logic(m, x)) = float32(m, x))))

axiom round2 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  same_sign_real1(round_logic(m, x), x)))

axiom round21 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow(m, x)) ->
  overflow_value(m, round_logic(m, x))))

axiom round_of_zero :
  (forall m:fpa_rounding_mode. is_gen_zero(round_logic(m, 0.0)))

axiom round_logic_le :
  (forall m:fpa_rounding_mode. forall x:real. (is_finite(round_logic(m,
  x)) -> (abs_real(value(round_logic(m, x))) <= 0x1.FFFFFEp127)))

axiom round_no_overflow :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> is_finite(round_logic(m, x))))

axiom round_no_overflow1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFEp127) -> (value(round_logic(m,
  x)) = float32(m, x))))

logic min : real

axiom positive_constant :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> is_finite(round_logic(m, x))))

axiom positive_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (0.0 <  value(round_logic(m, x)))))

axiom positive_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. (((min <= x) and
  (x <= 0x1.FFFFFEp127)) -> (sign1(round_logic(m, x)) = Pos)))

axiom negative_constant :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> is_finite(round_logic(m, x))))

axiom negative_constant1 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (value(round_logic(m, x)) <  0.0)))

axiom negative_constant2 :
  (forall m:fpa_rounding_mode. forall x:real. ((((-0x1.FFFFFEp127) <= x) and
  (x <= (-min))) -> (sign1(round_logic(m, x)) = Neg)))

axiom is_gen_zero_comp1 :
  (forall x:single. forall y:single. ((is_gen_zero(x) and
  ((value(x) = value(y)) and is_finite(y))) -> is_gen_zero(y)))

axiom is_gen_zero_comp2 :
  (forall x:single. forall y:single. ((is_finite(x) and
  ((not is_gen_zero(x)) and (value(x) = value(y)))) -> (not is_gen_zero(y))))

predicate add_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and same_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((same_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not same_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) + value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) + value(y)))) and ((same_sign(x, y) ->
  same_sign(r, x)) and ((not same_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) + value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) + value(y))) and overflow_value(m, r))))))))

predicate sub_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> (is_infinite(r) and diff_sign(r, y))) and
  (((is_infinite(x) and is_finite(y)) -> (is_infinite(r) and same_sign(r,
  x))) and (((is_infinite(x) and is_infinite(y)) -> ((diff_sign(x, y) ->
  (is_infinite(r) and same_sign(r, x))) and ((not diff_sign(x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and no_overflow(m,
  (value(x) - value(y))))) -> (is_finite(r) and
  ((value(r) = float32(m, (value(x) - value(y)))) and ((diff_sign(x, y) ->
  same_sign(r, x)) and ((not diff_sign(x, y)) -> sign_zero_result(m,
  r)))))) and ((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) - value(y)))))) -> (same_sign_real(sign1(r),
  (value(x) - value(y))) and overflow_value(m, r))))))))

predicate product_sign(z: single, x: single, y: single) = ((same_sign(x,
  y) -> (sign1(z) = Pos)) and (diff_sign(x, y) -> (sign1(z) = Neg)))

predicate mul_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_gen_zero(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_infinite(y) and
  (not (value(x) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_gen_zero(y)) -> is_NaN(r)) and (((is_infinite(x) and (is_finite(y) and
  (not (value(y) = 0.0)))) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_infinite(r)) and (((is_finite(x) and
  (is_finite(y) and no_overflow(m, (value(x) * value(y))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) * value(y)))))) and
  (((is_finite(x) and (is_finite(y) and (not no_overflow(m,
  (value(x) * value(y)))))) -> overflow_value(m, r)) and ((not is_NaN(r)) ->
  product_sign(r, x, y))))))))))

predicate neg_post(x: single, r: single) = ((is_NaN(x) -> is_NaN(r)) and
  ((is_infinite(x) -> is_infinite(r)) and ((is_finite(x) -> (is_finite(r) and
  (value(r) = (-value(x))))) and ((not is_NaN(x)) -> diff_sign(r, x)))))

predicate div_post(m: fpa_rounding_mode, x: single, y: single, r: single) =
  (((is_NaN(x) or is_NaN(y)) -> is_NaN(r)) and (((is_finite(x) and
  is_infinite(y)) -> is_gen_zero(r)) and (((is_infinite(x) and
  is_finite(y)) -> is_infinite(r)) and (((is_infinite(x) and
  is_infinite(y)) -> is_NaN(r)) and (((is_finite(x) and (is_finite(y) and
  ((not (value(y) = 0.0)) and no_overflow(m, (value(x) / value(y)))))) ->
  (is_finite(r) and (value(r) = float32(m, (value(x) / value(y)))))) and
  (((is_finite(x) and (is_finite(y) and ((not (value(y) = 0.0)) and
  (not no_overflow(m, (value(x) / value(y))))))) -> overflow_value(m, r)) and
  (((is_finite(x) and (is_gen_zero(y) and (not (value(x) = 0.0)))) ->
  is_infinite(r)) and (((is_gen_zero(x) and is_gen_zero(y)) -> is_NaN(r)) and
  ((not is_NaN(r)) -> product_sign(r, x, y))))))))))

predicate fma_post(m: fpa_rounding_mode, x: single, y: single, z: single,
  r: single) = (((is_NaN(x) or (is_NaN(y) or is_NaN(z))) -> is_NaN(r)) and
  (((is_gen_zero(x) and is_infinite(y)) -> is_NaN(r)) and
  (((is_infinite(x) and is_gen_zero(y)) -> is_NaN(r)) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_finite(x) and
  ((not (value(x) = 0.0)) and (is_infinite(y) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_finite(z)))) ->
  (is_infinite(r) and product_sign(r, x, y))) and (((is_infinite(x) and
  (is_finite(y) and ((not (value(y) = 0.0)) and is_infinite(z)))) ->
  ((product_sign(z, x, y) -> (is_infinite(r) and same_sign(r, z))) and
  ((not product_sign(z, x, y)) -> is_NaN(r)))) and (((is_infinite(x) and
  (is_infinite(y) and is_finite(z))) -> (is_infinite(r) and product_sign(r,
  x, y))) and (((is_finite(x) and (is_finite(y) and is_infinite(z))) ->
  (is_infinite(r) and same_sign(r, z))) and (((is_infinite(x) and
  (is_infinite(y) and is_infinite(z))) -> ((product_sign(z, x, y) ->
  (is_infinite(r) and same_sign(r, z))) and ((not product_sign(z, x, y)) ->
  is_NaN(r)))) and (((is_finite(x) and (is_finite(y) and (is_finite(z) and
  no_overflow(m, ((value(x) * value(y)) + value(z)))))) -> (is_finite(r) and
  ((value(r) = float32(m, ((value(x) * value(y)) + value(z)))) and
  ((product_sign(z, x, y) -> same_sign(r, z)) and ((not product_sign(z, x,
  y)) -> ((((value(x) * value(y)) + value(z)) = 0.0) -> (((m = Down) ->
  (sign1(r) = Neg)) and ((not (m = Down)) -> (sign1(r) = Pos))))))))) and
  ((is_finite(x) and (is_finite(y) and (is_finite(z) and (not no_overflow(m,
  ((value(x) * value(y)) + value(z))))))) -> (same_sign_real(sign1(r),
  ((value(x) * value(y)) + value(z))) and overflow_value(m, r))))))))))))))

predicate sqrt_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_plus_infinity(x) ->
  is_plus_infinity(r)) and ((is_minus_infinity(x) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) <  0.0)) -> is_NaN(r)) and
  (((is_finite(x) and (value(x) = 0.0)) -> (is_finite(r) and
  ((value(r) = 0.0) and same_sign(r, x)))) and ((is_finite(x) and
  (0.0 <  value(x))) -> (is_finite(r) and
  ((value(r) = float32(m, sqrt_real(value(x)))) and (sign1(r) = Pos)))))))))

predicate roundToIntegral_post(m: fpa_rounding_mode, x: single, r: single) =
  ((is_NaN(x) -> is_NaN(r)) and ((is_infinite(x) -> (is_infinite(r) and
  same_sign(x, r))) and (is_finite(x) -> (same_sign(x, r) and
  (value(r) = real_of_int(integer_round(m, value(x))))))))

predicate of_real_exact_post(x: real, r: single) = (is_finite(r) and
  (value(r) = x))

predicate le(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <= value(y)))) or ((is_minus_infinity(x) and is_not_NaN(y)) or
  (is_not_NaN(x) and is_plus_infinity(y))))

predicate lt(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) <  value(y)))) or ((is_minus_infinity(x) and (is_not_NaN(y) and
  (not is_minus_infinity(y)))) or (is_not_NaN(x) and
  ((not is_plus_infinity(x)) and is_plus_infinity(y)))))

predicate eq(x: single, y: single) = ((is_finite(x) and (is_finite(y) and
  (value(x) = value(y)))) or (is_infinite(x) and (is_infinite(y) and
  same_sign(x, y))))

predicate ne(x: single, y: single) = (not eq(x, y))

predicate rem_post(x: single, y: single, r: single) = (((is_NaN(x) or
  (is_NaN(y) or (is_infinite(x) or is_gen_zero(y)))) -> is_NaN(r)) and
  ((not (is_NaN(x) or (is_NaN(y) or (is_infinite(x) or is_gen_zero(y))))) ->
  ((is_infinite(y) -> eq(x, r)) and ((not is_infinite(y)) ->
  (is_finite(r) and (((value(r) = 0.0) -> same_sign(x, r)) and
  (value(r) = (value(x) - (value(y) * real_of_int(integer_round(NearestTiesToEven, (value(x) / value(y)))))))))))))

axiom le_lt_trans :
  (forall x:single. forall y:single. forall z:single. ((le(x, y) and lt(y,
  z)) -> lt(x, z)))

axiom lt_le_trans :
  (forall x:single. forall y:single. forall z:single. ((lt(x, y) and le(y,
  z)) -> lt(x, z)))

axiom le_ge_asym :
  (forall x:single. forall y:single. ((le(x, y) and le(y, x)) -> eq(x, y)))

axiom not_lt_ge :
  (forall x:single. forall y:single. (((not lt(x, y)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(y, x)))

axiom not_gt_le :
  (forall x:single. forall y:single. (((not lt(y, x)) and (is_not_NaN(x) and
  is_not_NaN(y))) -> le(x, y)))

type double

logic value1 : double -> real

predicate no_overflow1(m: fpa_rounding_mode, x: real) =
  (abs_real(float64(m, x)) <= 0x1.FFFFFFFFFFFFFp1023)

axiom Bounded_real_no_overflow1 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> no_overflow1(m, x)))

axiom Round_value1 :
  (forall m:fpa_rounding_mode. forall x:double.
  (float64(m, value1(x)) = value1(x)))

axiom Bounded_value1 :
  (forall x:double. (abs_real(value1(x)) <= 0x1.FFFFFFFFFFFFFp1023))

axiom Exact_rounding_for_integers1 :
  (forall m:fpa_rounding_mode. forall i:int. ((((-9007199254740992) <= i) and
  (i <= 9007199254740992)) -> (float64(m, real_of_int(i)) = real_of_int(i))))

axiom Round_down_le1 : (forall x:real. (float64(Down, x) <= x))

axiom Round_up_ge1 : (forall x:real. (x <= float64(Up, x)))

axiom Round_down_neg1 :
  (forall x:real. (float64(Down, (-x)) = (-float64(Up, x))))

axiom Round_up_neg1 :
  (forall x:real. (float64(Up, (-x)) = (-float64(Down, x))))

logic round_logic1 : fpa_rounding_mode, real -> double

axiom Round_logic_def1 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow1(m, x) ->
  (value1(round_logic1(m, x)) = float64(m, x))))

logic class2 : double -> class

predicate is_finite1(x: double) = (class2(x) = Finite)

predicate is_infinite1(x: double) = (class2(x) = Infinite)

predicate is_NaN1(x: double) = (class2(x) = NaN)

predicate is_not_NaN3(x: double) = (is_finite1(x) or is_infinite1(x))

axiom is_not_NaN4 : (forall x:double. (is_not_NaN3(x) -> (not is_NaN1(x))))

axiom is_not_NaN5 : (forall x:double. ((not is_NaN1(x)) -> is_not_NaN3(x)))

logic sign2 : double -> sign

predicate same_sign_real2(x: double, y: real) = same_sign_real(sign2(x), y)

predicate same_sign1(x: double, y: double) = (sign2(x) = sign2(y))

predicate diff_sign1(x: double, y: double) = (not (sign2(x) = sign2(y)))

predicate sign_zero_result1(m: fpa_rounding_mode, x: double) =
  ((value1(x) = 0.0) -> ((((((m = NearestTiesToEven) -> (sign2(x) = Pos)) and
  ((m = ToZero) -> (sign2(x) = Pos))) and ((m = Up) -> (sign2(x) = Pos))) and
  ((m = Down) -> (sign2(x) = Neg))) and ((m = NearestTiesToAway) ->
  (sign2(x) = Pos))))

predicate is_minus_infinity1(x: double) = (is_infinite1(x) and
  (sign2(x) = Neg))

predicate is_plus_infinity1(x: double) = (is_infinite1(x) and
  (sign2(x) = Pos))

predicate is_gen_zero1(x: double) = (is_finite1(x) and (value1(x) = 0.0))

predicate is_gen_zero_plus1(x: double) = (is_gen_zero1(x) and
  (sign2(x) = Pos))

predicate is_gen_zero_minus1(x: double) = (is_gen_zero1(x) and
  (sign2(x) = Neg))

axiom finite_sign1 :
  (forall x:double. (((class2(x) = Finite) and (not (value1(x) = 0.0))) ->
  same_sign_real2(x, value1(x))))

axiom finite_sign_pos11 :
  (forall x:double. (((class2(x) = Finite) and (0.0 <  value1(x))) ->
  (sign2(x) = Pos)))

axiom finite_sign_pos21 :
  (forall x:double. (((class2(x) = Finite) and ((not (value1(x) = 0.0)) and
  (sign2(x) = Pos))) -> (0.0 <  value1(x))))

axiom finite_sign_neg11 :
  (forall x:double. (((class2(x) = Finite) and (value1(x) <  0.0)) ->
  (sign2(x) = Neg)))

axiom finite_sign_neg21 :
  (forall x:double. (((class2(x) = Finite) and ((not (value1(x) = 0.0)) and
  (sign2(x) = Neg))) -> (value1(x) <  0.0)))

axiom diff_sign_trans1 :
  (forall x:double. forall y:double. forall z:double. ((diff_sign1(x, y) and
  diff_sign1(y, z)) -> same_sign1(x, z)))

axiom diff_sign_product1 :
  (forall x:double. forall y:double. (((class2(x) = Finite) and
  ((class2(y) = Finite) and ((value1(x) * value1(y)) <  0.0))) ->
  diff_sign1(x, y)))

axiom same_sign_product1 :
  (forall x:double. forall y:double. (((class2(x) = Finite) and
  ((class2(y) = Finite) and same_sign1(x, y))) ->
  (0.0 <= (value1(x) * value1(y)))))

predicate overflow_value1(m: fpa_rounding_mode, x: double) =
  (((sign2(x) = Neg) -> ((((((m = NearestTiesToEven) -> is_infinite1(x)) and
  ((m = ToZero) -> (is_finite1(x) and
  (value1(x) = (-0x1.FFFFFFFFFFFFFp1023))))) and ((m = Up) ->
  (is_finite1(x) and (value1(x) = (-0x1.FFFFFFFFFFFFFp1023))))) and
  ((m = Down) -> is_infinite1(x))) and ((m = NearestTiesToAway) ->
  is_infinite1(x)))) and ((sign2(x) = Pos) -> ((((((m = NearestTiesToEven) ->
  is_infinite1(x)) and ((m = ToZero) -> (is_finite1(x) and
  (value1(x) = 0x1.FFFFFFFFFFFFFp1023)))) and ((m = Up) ->
  is_infinite1(x))) and ((m = Down) -> (is_finite1(x) and
  (value1(x) = 0x1.FFFFFFFFFFFFFp1023)))) and ((m = NearestTiesToAway) ->
  is_infinite1(x)))))

axiom round12 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow1(m, x) ->
  is_finite1(round_logic1(m, x))))

axiom round13 :
  (forall m:fpa_rounding_mode. forall x:real. (no_overflow1(m, x) ->
  (value1(round_logic1(m, x)) = float64(m, x))))

axiom round22 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow1(m, x)) ->
  same_sign_real2(round_logic1(m, x), x)))

axiom round23 :
  (forall m:fpa_rounding_mode. forall x:real. ((not no_overflow1(m, x)) ->
  overflow_value1(m, round_logic1(m, x))))

axiom round_of_zero1 :
  (forall m:fpa_rounding_mode. is_gen_zero1(round_logic1(m, 0.0)))

axiom round_logic_le1 :
  (forall m:fpa_rounding_mode. forall x:real. (is_finite1(round_logic1(m,
  x)) -> (abs_real(value1(round_logic1(m, x))) <= 0x1.FFFFFFFFFFFFFp1023)))

axiom round_no_overflow2 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> is_finite1(round_logic1(m,
  x))))

axiom round_no_overflow3 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((abs_real(x) <= 0x1.FFFFFFFFFFFFFp1023) -> (value1(round_logic1(m,
  x)) = float64(m, x))))

logic min1 : real

axiom positive_constant3 :
  (forall m:fpa_rounding_mode. forall x:real. (((min1 <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> is_finite1(round_logic1(m, x))))

axiom positive_constant4 :
  (forall m:fpa_rounding_mode. forall x:real. (((min1 <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> (0.0 <  value1(round_logic1(m, x)))))

axiom positive_constant5 :
  (forall m:fpa_rounding_mode. forall x:real. (((min1 <= x) and
  (x <= 0x1.FFFFFFFFFFFFFp1023)) -> (sign2(round_logic1(m, x)) = Pos)))

axiom negative_constant3 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min1))) ->
  is_finite1(round_logic1(m, x))))

axiom negative_constant4 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min1))) ->
  (value1(round_logic1(m, x)) <  0.0)))

axiom negative_constant5 :
  (forall m:fpa_rounding_mode. forall x:real.
  ((((-0x1.FFFFFFFFFFFFFp1023) <= x) and (x <= (-min1))) ->
  (sign2(round_logic1(m, x)) = Neg)))

axiom is_gen_zero_comp11 :
  (forall x:double. forall y:double. ((is_gen_zero1(x) and
  ((value1(x) = value1(y)) and is_finite1(y))) -> is_gen_zero1(y)))

axiom is_gen_zero_comp21 :
  (forall x:double. forall y:double. ((is_finite1(x) and
  ((not is_gen_zero1(x)) and (value1(x) = value1(y)))) ->
  (not is_gen_zero1(y))))

predicate add_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  is_infinite1(y)) -> (is_infinite1(r) and same_sign1(r, y))) and
  (((is_infinite1(x) and is_finite1(y)) -> (is_infinite1(r) and same_sign1(r,
  x))) and (((is_infinite1(x) and is_infinite1(y)) -> ((same_sign1(x, y) ->
  (is_infinite1(r) and same_sign1(r, x))) and ((not same_sign1(x, y)) ->
  is_NaN1(r)))) and (((is_finite1(x) and (is_finite1(y) and no_overflow1(m,
  (value1(x) + value1(y))))) -> (is_finite1(r) and
  ((value1(r) = float64(m, (value1(x) + value1(y)))) and ((same_sign1(x,
  y) -> same_sign1(r, x)) and ((not same_sign1(x, y)) -> sign_zero_result1(m,
  r)))))) and ((is_finite1(x) and (is_finite1(y) and (not no_overflow1(m,
  (value1(x) + value1(y)))))) -> (same_sign_real(sign2(r),
  (value1(x) + value1(y))) and overflow_value1(m, r))))))))

predicate sub_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  is_infinite1(y)) -> (is_infinite1(r) and diff_sign1(r, y))) and
  (((is_infinite1(x) and is_finite1(y)) -> (is_infinite1(r) and same_sign1(r,
  x))) and (((is_infinite1(x) and is_infinite1(y)) -> ((diff_sign1(x, y) ->
  (is_infinite1(r) and same_sign1(r, x))) and ((not diff_sign1(x, y)) ->
  is_NaN1(r)))) and (((is_finite1(x) and (is_finite1(y) and no_overflow1(m,
  (value1(x) - value1(y))))) -> (is_finite1(r) and
  ((value1(r) = float64(m, (value1(x) - value1(y)))) and ((diff_sign1(x,
  y) -> same_sign1(r, x)) and ((not diff_sign1(x, y)) -> sign_zero_result1(m,
  r)))))) and ((is_finite1(x) and (is_finite1(y) and (not no_overflow1(m,
  (value1(x) - value1(y)))))) -> (same_sign_real(sign2(r),
  (value1(x) - value1(y))) and overflow_value1(m, r))))))))

predicate product_sign1(z: double, x: double, y: double) = ((same_sign1(x,
  y) -> (sign2(z) = Pos)) and (diff_sign1(x, y) -> (sign2(z) = Neg)))

predicate mul_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_gen_zero1(x) and
  is_infinite1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  (is_infinite1(y) and (not (value1(x) = 0.0)))) -> is_infinite1(r)) and
  (((is_infinite1(x) and is_gen_zero1(y)) -> is_NaN1(r)) and
  (((is_infinite1(x) and (is_finite1(y) and (not (value1(y) = 0.0)))) ->
  is_infinite1(r)) and (((is_infinite1(x) and is_infinite1(y)) ->
  is_infinite1(r)) and (((is_finite1(x) and (is_finite1(y) and
  no_overflow1(m, (value1(x) * value1(y))))) -> (is_finite1(r) and
  (value1(r) = float64(m, (value1(x) * value1(y)))))) and
  (((is_finite1(x) and (is_finite1(y) and (not no_overflow1(m,
  (value1(x) * value1(y)))))) -> overflow_value1(m, r)) and
  ((not is_NaN1(r)) -> product_sign1(r, x, y))))))))))

predicate neg_post1(x: double, r: double) = ((is_NaN1(x) -> is_NaN1(r)) and
  ((is_infinite1(x) -> is_infinite1(r)) and ((is_finite1(x) ->
  (is_finite1(r) and (value1(r) = (-value1(x))))) and ((not is_NaN1(x)) ->
  diff_sign1(r, x)))))

predicate div_post1(m: fpa_rounding_mode, x: double, y: double, r: double) =
  (((is_NaN1(x) or is_NaN1(y)) -> is_NaN1(r)) and (((is_finite1(x) and
  is_infinite1(y)) -> is_gen_zero1(r)) and (((is_infinite1(x) and
  is_finite1(y)) -> is_infinite1(r)) and (((is_infinite1(x) and
  is_infinite1(y)) -> is_NaN1(r)) and (((is_finite1(x) and (is_finite1(y) and
  ((not (value1(y) = 0.0)) and no_overflow1(m, (value1(x) / value1(y)))))) ->
  (is_finite1(r) and (value1(r) = float64(m, (value1(x) / value1(y)))))) and
  (((is_finite1(x) and (is_finite1(y) and ((not (value1(y) = 0.0)) and
  (not no_overflow1(m, (value1(x) / value1(y))))))) -> overflow_value1(m,
  r)) and (((is_finite1(x) and (is_gen_zero1(y) and
  (not (value1(x) = 0.0)))) -> is_infinite1(r)) and (((is_gen_zero1(x) and
  is_gen_zero1(y)) -> is_NaN1(r)) and ((not is_NaN1(r)) -> product_sign1(r,
  x, y))))))))))

predicate fma_post1(m: fpa_rounding_mode, x: double, y: double, z: double,
  r: double) = (((is_NaN1(x) or (is_NaN1(y) or is_NaN1(z))) ->
  is_NaN1(r)) and (((is_gen_zero1(x) and is_infinite1(y)) -> is_NaN1(r)) and
  (((is_infinite1(x) and is_gen_zero1(y)) -> is_NaN1(r)) and
  (((is_finite1(x) and ((not (value1(x) = 0.0)) and (is_infinite1(y) and
  is_finite1(z)))) -> (is_infinite1(r) and product_sign1(r, x, y))) and
  (((is_finite1(x) and ((not (value1(x) = 0.0)) and (is_infinite1(y) and
  is_infinite1(z)))) -> ((product_sign1(z, x, y) -> (is_infinite1(r) and
  same_sign1(r, z))) and ((not product_sign1(z, x, y)) -> is_NaN1(r)))) and
  (((is_infinite1(x) and (is_finite1(y) and ((not (value1(y) = 0.0)) and
  is_finite1(z)))) -> (is_infinite1(r) and product_sign1(r, x, y))) and
  (((is_infinite1(x) and (is_finite1(y) and ((not (value1(y) = 0.0)) and
  is_infinite1(z)))) -> ((product_sign1(z, x, y) -> (is_infinite1(r) and
  same_sign1(r, z))) and ((not product_sign1(z, x, y)) -> is_NaN1(r)))) and
  (((is_infinite1(x) and (is_infinite1(y) and is_finite1(z))) ->
  (is_infinite1(r) and product_sign1(r, x, y))) and (((is_finite1(x) and
  (is_finite1(y) and is_infinite1(z))) -> (is_infinite1(r) and same_sign1(r,
  z))) and (((is_infinite1(x) and (is_infinite1(y) and is_infinite1(z))) ->
  ((product_sign1(z, x, y) -> (is_infinite1(r) and same_sign1(r, z))) and
  ((not product_sign1(z, x, y)) -> is_NaN1(r)))) and (((is_finite1(x) and
  (is_finite1(y) and (is_finite1(z) and no_overflow1(m,
  ((value1(x) * value1(y)) + value1(z)))))) -> (is_finite1(r) and
  ((value1(r) = float64(m, ((value1(x) * value1(y)) + value1(z)))) and
  ((product_sign1(z, x, y) -> same_sign1(r, z)) and ((not product_sign1(z, x,
  y)) -> ((((value1(x) * value1(y)) + value1(z)) = 0.0) -> (((m = Down) ->
  (sign2(r) = Neg)) and ((not (m = Down)) -> (sign2(r) = Pos))))))))) and
  ((is_finite1(x) and (is_finite1(y) and (is_finite1(z) and
  (not no_overflow1(m, ((value1(x) * value1(y)) + value1(z))))))) ->
  (same_sign_real(sign2(r), ((value1(x) * value1(y)) + value1(z))) and
  overflow_value1(m, r))))))))))))))

predicate sqrt_post1(m: fpa_rounding_mode, x: double, r: double) =
  ((is_NaN1(x) -> is_NaN1(r)) and ((is_plus_infinity1(x) ->
  is_plus_infinity1(r)) and ((is_minus_infinity1(x) -> is_NaN1(r)) and
  (((is_finite1(x) and (value1(x) <  0.0)) -> is_NaN1(r)) and
  (((is_finite1(x) and (value1(x) = 0.0)) -> (is_finite1(r) and
  ((value1(r) = 0.0) and same_sign1(r, x)))) and ((is_finite1(x) and
  (0.0 <  value1(x))) -> (is_finite1(r) and
  ((value1(r) = float64(m, sqrt_real(value1(x)))) and
  (sign2(r) = Pos)))))))))

predicate roundToIntegral_post1(m: fpa_rounding_mode, x: double, r: double) =
  ((is_NaN1(x) -> is_NaN1(r)) and ((is_infinite1(x) -> (is_infinite1(r) and
  same_sign1(x, r))) and (is_finite1(x) -> (same_sign1(x, r) and
  (value1(r) = real_of_int(integer_round(m, value1(x))))))))

predicate of_real_exact_post1(x: real, r: double) = (is_finite1(r) and
  (value1(r) = x))

predicate le1(x: double, y: double) = ((is_finite1(x) and (is_finite1(y) and
  (value1(x) <= value1(y)))) or ((is_minus_infinity1(x) and
  is_not_NaN3(y)) or (is_not_NaN3(x) and is_plus_infinity1(y))))

predicate lt1(x: double, y: double) = ((is_finite1(x) and (is_finite1(y) and
  (value1(x) <  value1(y)))) or ((is_minus_infinity1(x) and
  (is_not_NaN3(y) and (not is_minus_infinity1(y)))) or (is_not_NaN3(x) and
  ((not is_plus_infinity1(x)) and is_plus_infinity1(y)))))

predicate eq1(x: double, y: double) = ((is_finite1(x) and (is_finite1(y) and
  (value1(x) = value1(y)))) or (is_infinite1(x) and (is_infinite1(y) and
  same_sign1(x, y))))

predicate ne1(x: double, y: double) = (not eq1(x, y))

predicate rem_post1(x: double, y: double, r: double) = (((is_NaN1(x) or
  (is_NaN1(y) or (is_infinite1(x) or is_gen_zero1(y)))) -> is_NaN1(r)) and
  ((not (is_NaN1(x) or (is_NaN1(y) or (is_infinite1(x) or
  is_gen_zero1(y))))) -> ((is_infinite1(y) -> eq1(x, r)) and
  ((not is_infinite1(y)) -> (is_finite1(r) and (((value1(r) = 0.0) ->
  same_sign1(x, r)) and
  (value1(r) = (value1(x) - (value1(y) * real_of_int(integer_round(NearestTiesToEven, (value1(x) / value1(y)))))))))))))

axiom le_lt_trans1 :
  (forall x:double. forall y:double. forall z:double. ((le1(x, y) and lt1(y,
  z)) -> lt1(x, z)))

axiom lt_le_trans1 :
  (forall x:double. forall y:double. forall z:double. ((lt1(x, y) and le1(y,
  z)) -> lt1(x, z)))

axiom le_ge_asym1 :
  (forall x:double. forall y:double. ((le1(x, y) and le1(y, x)) -> eq1(x,
  y)))

axiom not_lt_ge1 :
  (forall x:double. forall y:double. (((not lt1(x, y)) and
  (is_not_NaN3(x) and is_not_NaN3(y))) -> le1(y, x)))

axiom not_gt_le1 :
  (forall x:double. forall y:double. (((not lt1(y, x)) and
  (is_not_NaN3(x) and is_not_NaN3(y))) -> le1(x, y)))

predicate single_to_double_cast(x: single, r: double) = ((is_NaN(x) ->
  is_NaN1(r)) and (is_finite(x) -> (is_finite1(r) and
  ((value1(r) = value(x)) and (sign2(r) = sign1(x))))))

predicate double_to_single_cast(m: fpa_rounding_mode, x: double, r: single) =
  ((is_NaN1(x) -> is_NaN(r)) and ((is_infinite1(x) -> (is_infinite(r) and
  (sign1(r) = sign2(x)))) and (((is_finite1(x) and no_overflow(m,
  value1(x))) -> (is_finite(r) and ((value(r) = float32(m, value1(x))) and
  (sign1(r) = sign2(x))))) and ((is_finite1(x) and (not no_overflow(m,
  value1(x)))) -> ((sign1(r) = sign2(x)) and overflow_value(m, r))))))

predicate smt2_single_eq(x: single, y: single) = (((is_finite(x) and
  (is_finite(y) and ((value(x) = value(y)) and same_sign(x, y)))) or
  (is_infinite(x) and (is_infinite(y) and same_sign(x, y)))) or
  (is_NaN(x) and is_NaN(y)))

logic b662 : single

logic b1084 : single

logic b1141 : single

logic b1554 : single

logic b1110 : single

logic b1246 : single

logic b1211 : single

logic b1421 : single

logic b1491 : single

logic b652 : double

logic b1545 : single

logic b174 : double

logic b1461 : single

logic b1089 : single

logic b1281 : single

logic b1316 : single

logic b1496 : single

logic b1526 : single

logic b176 : single

logic b1456 : single

logic b1216 : single

logic b169 : single

logic b1181 : single

logic b1351 : single

logic b1391 : single

logic b1426 : single

logic b185 : double

logic b1146 : single

logic b1356 : single

logic b1321 : single

logic b1251 : single

logic b171 : single

logic b1176 : single

logic b1286 : single

logic b1386 : single

logic b1105 : single

logic s_div__t_3__t_9__t_10 : single

axiom eq_0 : div_post(NearestTiesToEven, b169, b171, s_div__t_3__t_9__t_10)

logic ust_11 : single

axiom eq_1 : div_post(NearestTiesToEven, b169, b171, ust_11)

logic double_of_single__t_3__t_11 : double

axiom eq_2 : single_to_double_cast(ust_11, double_of_single__t_3__t_11)

logic ust_12 : double

axiom eq_3 : single_to_double_cast(ust_11, ust_12)

logic d_mul__t_3__t_12__t_13 : double

axiom eq_4 : mul_post1(NearestTiesToEven, ust_12, b185,
  d_mul__t_3__t_12__t_13)

logic ust_14 : double

axiom eq_5 : mul_post1(NearestTiesToEven, ust_12, b185, ust_14)

logic s_mul__t_3__t_11__t_11 : single

axiom eq_6 : mul_post(NearestTiesToEven, ust_11, ust_11,
  s_mul__t_3__t_11__t_11)

logic ust_15 : single

axiom eq_7 : mul_post(NearestTiesToEven, ust_11, ust_11, ust_15)

logic s_neg__t_15 : single

axiom eq_8 : neg_post(ust_15, s_neg__t_15)

logic ust_16 : single

axiom eq_9 : neg_post(ust_15, ust_16)

logic s_add__t_3__t_9__t_16 : single

axiom eq_10 : add_post(NearestTiesToEven, b169, ust_16,
  s_add__t_3__t_9__t_16)

logic ust_17 : single

axiom eq_11 : add_post(NearestTiesToEven, b169, ust_16, ust_17)

logic double_of_single__t_3__t_17 : double

axiom eq_12 : single_to_double_cast(ust_17, double_of_single__t_3__t_17)

logic ust_18 : double

axiom eq_13 : single_to_double_cast(ust_17, ust_18)

logic d_div__t_3__t_18__t_14 : double

axiom eq_14 : div_post1(NearestTiesToEven, ust_18, ust_14,
  d_div__t_3__t_18__t_14)

logic ust_19 : double

axiom eq_15 : div_post1(NearestTiesToEven, ust_18, ust_14, ust_19)

logic single_of_double__t_3__t_19 : single

axiom eq_16 : double_to_single_cast(NearestTiesToEven, ust_19,
  single_of_double__t_3__t_19)

logic ust_20 : single

axiom eq_17 : double_to_single_cast(NearestTiesToEven, ust_19, ust_20)

logic s_add__t_3__t_11__t_20 : single

axiom eq_18 : add_post(NearestTiesToEven, ust_11, ust_20,
  s_add__t_3__t_11__t_20)

logic ust_21 : single

axiom eq_19 : add_post(NearestTiesToEven, ust_11, ust_20, ust_21)

logic s_mul__t_3__t_21__t_21 : single

axiom eq_20 : mul_post(NearestTiesToEven, ust_21, ust_21,
  s_mul__t_3__t_21__t_21)

logic ust_22 : single

axiom eq_21 : mul_post(NearestTiesToEven, ust_21, ust_21, ust_22)

logic s_neg__t_22 : single

axiom eq_22 : neg_post(ust_22, s_neg__t_22)

logic ust_23 : single

axiom eq_23 : neg_post(ust_22, ust_23)

logic s_add__t_3__t_9__t_23 : single

axiom eq_24 : add_post(NearestTiesToEven, b169, ust_23,
  s_add__t_3__t_9__t_23)

logic ust_24 : single

axiom eq_25 : add_post(NearestTiesToEven, b169, ust_23, ust_24)

logic double_of_single__t_3__t_24 : double

axiom eq_26 : single_to_double_cast(ust_24, double_of_single__t_3__t_24)

logic ust_25 : double

axiom eq_27 : single_to_double_cast(ust_24, ust_25)

logic single_of_double__t_3__t_25 : single

axiom eq_28 : double_to_single_cast(NearestTiesToEven, ust_25,
  single_of_double__t_3__t_25)

logic ust_26 : single

axiom eq_29 : double_to_single_cast(NearestTiesToEven, ust_25, ust_26)

predicate ust_29() = (not smt2_single_eq(ust_26, b1554))

logic double_of_single__t_3__t_21 : double

axiom eq_30 : single_to_double_cast(ust_21, double_of_single__t_3__t_21)

logic ust_30 : double

axiom eq_31 : single_to_double_cast(ust_21, ust_30)

logic d_mul__t_3__t_13__t_30 : double

axiom eq_32 : mul_post1(NearestTiesToEven, b185, ust_30,
  d_mul__t_3__t_13__t_30)

logic ust_31 : double

axiom eq_33 : mul_post1(NearestTiesToEven, b185, ust_30, ust_31)

logic d_div__t_3__t_25__t_31 : double

axiom eq_34 : div_post1(NearestTiesToEven, ust_25, ust_31,
  d_div__t_3__t_25__t_31)

logic ust_32 : double

axiom eq_35 : div_post1(NearestTiesToEven, ust_25, ust_31, ust_32)

logic single_of_double__t_3__t_32 : single

axiom eq_36 : double_to_single_cast(NearestTiesToEven, ust_32,
  single_of_double__t_3__t_32)

logic ust_33 : single

axiom eq_37 : double_to_single_cast(NearestTiesToEven, ust_32, ust_33)

logic s_add__t_3__t_21__t_33 : single

axiom eq_38 : add_post(NearestTiesToEven, ust_21, ust_33,
  s_add__t_3__t_21__t_33)

logic ust_34 : single

axiom eq_39 : add_post(NearestTiesToEven, ust_21, ust_33, ust_34)

logic s_mul__t_3__t_34__t_34 : single

axiom eq_40 : mul_post(NearestTiesToEven, ust_34, ust_34,
  s_mul__t_3__t_34__t_34)

logic ust_35 : single

axiom eq_41 : mul_post(NearestTiesToEven, ust_34, ust_34, ust_35)

logic s_neg__t_35 : single

axiom eq_42 : neg_post(ust_35, s_neg__t_35)

logic ust_36 : single

axiom eq_43 : neg_post(ust_35, ust_36)

logic s_add__t_3__t_9__t_36 : single

axiom eq_44 : add_post(NearestTiesToEven, b169, ust_36,
  s_add__t_3__t_9__t_36)

logic ust_37 : single

axiom eq_45 : add_post(NearestTiesToEven, b169, ust_36, ust_37)

logic double_of_single__t_3__t_37 : double

axiom eq_46 : single_to_double_cast(ust_37, double_of_single__t_3__t_37)

logic ust_38 : double

axiom eq_47 : single_to_double_cast(ust_37, ust_38)

logic single_of_double__t_3__t_38 : single

axiom eq_48 : double_to_single_cast(NearestTiesToEven, ust_38,
  single_of_double__t_3__t_38)

logic ust_39 : single

axiom eq_49 : double_to_single_cast(NearestTiesToEven, ust_38, ust_39)

predicate ust_42() = (not smt2_single_eq(ust_39, b1545))

predicate ust_45() = (not smt2_single_eq(ust_34, b1496))

logic double_of_single__t_3__t_43 : double

axiom eq_50 : single_to_double_cast(b1496, double_of_single__t_3__t_43)

logic ust_46 : double

axiom eq_51 : single_to_double_cast(b1496, ust_46)

logic d_mul__t_3__t_13__t_46 : double

axiom eq_52 : mul_post1(NearestTiesToEven, b185, ust_46,
  d_mul__t_3__t_13__t_46)

logic ust_47 : double

axiom eq_53 : mul_post1(NearestTiesToEven, b185, ust_46, ust_47)

logic s_mul__t_3__t_43__t_43 : single

axiom eq_54 : mul_post(NearestTiesToEven, b1496, b1496,
  s_mul__t_3__t_43__t_43)

logic ust_48 : single

axiom eq_55 : mul_post(NearestTiesToEven, b1496, b1496, ust_48)

logic s_neg__t_48 : single

axiom eq_56 : neg_post(ust_48, s_neg__t_48)

logic ust_49 : single

axiom eq_57 : neg_post(ust_48, ust_49)

logic s_add__t_3__t_9__t_49 : single

axiom eq_58 : add_post(NearestTiesToEven, b169, ust_49,
  s_add__t_3__t_9__t_49)

logic ust_50 : single

axiom eq_59 : add_post(NearestTiesToEven, b169, ust_49, ust_50)

logic double_of_single__t_3__t_50 : double

axiom eq_60 : single_to_double_cast(ust_50, double_of_single__t_3__t_50)

logic ust_51 : double

axiom eq_61 : single_to_double_cast(ust_50, ust_51)

logic d_div__t_3__t_51__t_47 : double

axiom eq_62 : div_post1(NearestTiesToEven, ust_51, ust_47,
  d_div__t_3__t_51__t_47)

logic ust_52 : double

axiom eq_63 : div_post1(NearestTiesToEven, ust_51, ust_47, ust_52)

logic single_of_double__t_3__t_52 : single

axiom eq_64 : double_to_single_cast(NearestTiesToEven, ust_52,
  single_of_double__t_3__t_52)

logic ust_53 : single

axiom eq_65 : double_to_single_cast(NearestTiesToEven, ust_52, ust_53)

logic s_add__t_3__t_43__t_53 : single

axiom eq_66 : add_post(NearestTiesToEven, b1496, ust_53,
  s_add__t_3__t_43__t_53)

logic ust_54 : single

axiom eq_67 : add_post(NearestTiesToEven, b1496, ust_53, ust_54)

logic s_mul__t_3__t_54__t_54 : single

axiom eq_68 : mul_post(NearestTiesToEven, ust_54, ust_54,
  s_mul__t_3__t_54__t_54)

logic ust_55 : single

axiom eq_69 : mul_post(NearestTiesToEven, ust_54, ust_54, ust_55)

logic s_neg__t_55 : single

axiom eq_70 : neg_post(ust_55, s_neg__t_55)

logic ust_56 : single

axiom eq_71 : neg_post(ust_55, ust_56)

logic s_add__t_3__t_9__t_56 : single

axiom eq_72 : add_post(NearestTiesToEven, b169, ust_56,
  s_add__t_3__t_9__t_56)

logic ust_57 : single

axiom eq_73 : add_post(NearestTiesToEven, b169, ust_56, ust_57)

logic double_of_single__t_3__t_57 : double

axiom eq_74 : single_to_double_cast(ust_57, double_of_single__t_3__t_57)

logic ust_58 : double

axiom eq_75 : single_to_double_cast(ust_57, ust_58)

logic single_of_double__t_3__t_58 : single

axiom eq_76 : double_to_single_cast(NearestTiesToEven, ust_58,
  single_of_double__t_3__t_58)

logic ust_59 : single

axiom eq_77 : double_to_single_cast(NearestTiesToEven, ust_58, ust_59)

predicate ust_62() = (not smt2_single_eq(ust_59, b1526))

predicate ust_65() = (not smt2_single_eq(ust_54, b1461))

logic double_of_single__t_3__t_63 : double

axiom eq_78 : single_to_double_cast(b1461, double_of_single__t_3__t_63)

logic ust_66 : double

axiom eq_79 : single_to_double_cast(b1461, ust_66)

logic d_mul__t_3__t_13__t_66 : double

axiom eq_80 : mul_post1(NearestTiesToEven, b185, ust_66,
  d_mul__t_3__t_13__t_66)

logic ust_67 : double

axiom eq_81 : mul_post1(NearestTiesToEven, b185, ust_66, ust_67)

logic s_mul__t_3__t_63__t_63 : single

axiom eq_82 : mul_post(NearestTiesToEven, b1461, b1461,
  s_mul__t_3__t_63__t_63)

logic ust_68 : single

axiom eq_83 : mul_post(NearestTiesToEven, b1461, b1461, ust_68)

logic s_neg__t_68 : single

axiom eq_84 : neg_post(ust_68, s_neg__t_68)

logic ust_69 : single

axiom eq_85 : neg_post(ust_68, ust_69)

logic s_add__t_3__t_9__t_69 : single

axiom eq_86 : add_post(NearestTiesToEven, b169, ust_69,
  s_add__t_3__t_9__t_69)

logic ust_70 : single

axiom eq_87 : add_post(NearestTiesToEven, b169, ust_69, ust_70)

logic double_of_single__t_3__t_70 : double

axiom eq_88 : single_to_double_cast(ust_70, double_of_single__t_3__t_70)

logic ust_71 : double

axiom eq_89 : single_to_double_cast(ust_70, ust_71)

logic d_div__t_3__t_71__t_67 : double

axiom eq_90 : div_post1(NearestTiesToEven, ust_71, ust_67,
  d_div__t_3__t_71__t_67)

logic ust_72 : double

axiom eq_91 : div_post1(NearestTiesToEven, ust_71, ust_67, ust_72)

logic single_of_double__t_3__t_72 : single

axiom eq_92 : double_to_single_cast(NearestTiesToEven, ust_72,
  single_of_double__t_3__t_72)

logic ust_73 : single

axiom eq_93 : double_to_single_cast(NearestTiesToEven, ust_72, ust_73)

logic s_add__t_3__t_63__t_73 : single

axiom eq_94 : add_post(NearestTiesToEven, b1461, ust_73,
  s_add__t_3__t_63__t_73)

logic ust_74 : single

axiom eq_95 : add_post(NearestTiesToEven, b1461, ust_73, ust_74)

logic s_mul__t_3__t_74__t_74 : single

axiom eq_96 : mul_post(NearestTiesToEven, ust_74, ust_74,
  s_mul__t_3__t_74__t_74)

logic ust_75 : single

axiom eq_97 : mul_post(NearestTiesToEven, ust_74, ust_74, ust_75)

logic s_neg__t_75 : single

axiom eq_98 : neg_post(ust_75, s_neg__t_75)

logic ust_76 : single

axiom eq_99 : neg_post(ust_75, ust_76)

logic s_add__t_3__t_9__t_76 : single

axiom eq_100 : add_post(NearestTiesToEven, b169, ust_76,
  s_add__t_3__t_9__t_76)

logic ust_77 : single

axiom eq_101 : add_post(NearestTiesToEven, b169, ust_76, ust_77)

logic double_of_single__t_3__t_77 : double

axiom eq_102 : single_to_double_cast(ust_77, double_of_single__t_3__t_77)

logic ust_78 : double

axiom eq_103 : single_to_double_cast(ust_77, ust_78)

logic single_of_double__t_3__t_78 : single

axiom eq_104 : double_to_single_cast(NearestTiesToEven, ust_78,
  single_of_double__t_3__t_78)

logic ust_79 : single

axiom eq_105 : double_to_single_cast(NearestTiesToEven, ust_78, ust_79)

predicate ust_82() = (not smt2_single_eq(ust_79, b1491))

logic double_of_single__t_3__t_83 : double

axiom eq_106 : single_to_double_cast(b1426, double_of_single__t_3__t_83)

logic ust_84 : double

axiom eq_107 : single_to_double_cast(b1426, ust_84)

logic d_mul__t_3__t_13__t_84 : double

axiom eq_108 : mul_post1(NearestTiesToEven, b185, ust_84,
  d_mul__t_3__t_13__t_84)

logic ust_85 : double

axiom eq_109 : mul_post1(NearestTiesToEven, b185, ust_84, ust_85)

logic s_mul__t_3__t_83__t_83 : single

axiom eq_110 : mul_post(NearestTiesToEven, b1426, b1426,
  s_mul__t_3__t_83__t_83)

logic ust_86 : single

axiom eq_111 : mul_post(NearestTiesToEven, b1426, b1426, ust_86)

logic s_neg__t_86 : single

axiom eq_112 : neg_post(ust_86, s_neg__t_86)

logic ust_87 : single

axiom eq_113 : neg_post(ust_86, ust_87)

logic s_add__t_3__t_9__t_87 : single

axiom eq_114 : add_post(NearestTiesToEven, b169, ust_87,
  s_add__t_3__t_9__t_87)

logic ust_88 : single

axiom eq_115 : add_post(NearestTiesToEven, b169, ust_87, ust_88)

logic double_of_single__t_3__t_88 : double

axiom eq_116 : single_to_double_cast(ust_88, double_of_single__t_3__t_88)

logic ust_89 : double

axiom eq_117 : single_to_double_cast(ust_88, ust_89)

logic d_div__t_3__t_89__t_85 : double

axiom eq_118 : div_post1(NearestTiesToEven, ust_89, ust_85,
  d_div__t_3__t_89__t_85)

logic ust_90 : double

axiom eq_119 : div_post1(NearestTiesToEven, ust_89, ust_85, ust_90)

logic single_of_double__t_3__t_90 : single

axiom eq_120 : double_to_single_cast(NearestTiesToEven, ust_90,
  single_of_double__t_3__t_90)

logic ust_91 : single

axiom eq_121 : double_to_single_cast(NearestTiesToEven, ust_90, ust_91)

logic s_add__t_3__t_83__t_91 : single

axiom eq_122 : add_post(NearestTiesToEven, b1426, ust_91,
  s_add__t_3__t_83__t_91)

logic ust_92 : single

axiom eq_123 : add_post(NearestTiesToEven, b1426, ust_91, ust_92)

logic s_mul__t_3__t_92__t_92 : single

axiom eq_124 : mul_post(NearestTiesToEven, ust_92, ust_92,
  s_mul__t_3__t_92__t_92)

logic ust_93 : single

axiom eq_125 : mul_post(NearestTiesToEven, ust_92, ust_92, ust_93)

logic s_neg__t_93 : single

axiom eq_126 : neg_post(ust_93, s_neg__t_93)

logic ust_94 : single

axiom eq_127 : neg_post(ust_93, ust_94)

logic s_add__t_3__t_9__t_94 : single

axiom eq_128 : add_post(NearestTiesToEven, b169, ust_94,
  s_add__t_3__t_9__t_94)

logic ust_95 : single

axiom eq_129 : add_post(NearestTiesToEven, b169, ust_94, ust_95)

logic double_of_single__t_3__t_95 : double

axiom eq_130 : single_to_double_cast(ust_95, double_of_single__t_3__t_95)

logic ust_96 : double

axiom eq_131 : single_to_double_cast(ust_95, ust_96)

logic single_of_double__t_3__t_96 : single

axiom eq_132 : double_to_single_cast(NearestTiesToEven, ust_96,
  single_of_double__t_3__t_96)

logic ust_97 : single

axiom eq_133 : double_to_single_cast(NearestTiesToEven, ust_96, ust_97)

predicate ust_100() = (not smt2_single_eq(ust_97, b1456))

predicate ust_102() = (not smt2_single_eq(ust_74, b1426))

predicate ust_105() = (not smt2_single_eq(ust_92, b1391))

logic double_of_single__t_3__t_103 : double

axiom eq_134 : single_to_double_cast(b1391, double_of_single__t_3__t_103)

logic ust_106 : double

axiom eq_135 : single_to_double_cast(b1391, ust_106)

logic d_mul__t_3__t_13__t_106 : double

axiom eq_136 : mul_post1(NearestTiesToEven, b185, ust_106,
  d_mul__t_3__t_13__t_106)

logic ust_107 : double

axiom eq_137 : mul_post1(NearestTiesToEven, b185, ust_106, ust_107)

logic s_mul__t_3__t_103__t_103 : single

axiom eq_138 : mul_post(NearestTiesToEven, b1391, b1391,
  s_mul__t_3__t_103__t_103)

logic ust_108 : single

axiom eq_139 : mul_post(NearestTiesToEven, b1391, b1391, ust_108)

logic s_neg__t_108 : single

axiom eq_140 : neg_post(ust_108, s_neg__t_108)

logic ust_109 : single

axiom eq_141 : neg_post(ust_108, ust_109)

logic s_add__t_3__t_9__t_109 : single

axiom eq_142 : add_post(NearestTiesToEven, b169, ust_109,
  s_add__t_3__t_9__t_109)

logic ust_110 : single

axiom eq_143 : add_post(NearestTiesToEven, b169, ust_109, ust_110)

logic double_of_single__t_3__t_110 : double

axiom eq_144 : single_to_double_cast(ust_110, double_of_single__t_3__t_110)

logic ust_111 : double

axiom eq_145 : single_to_double_cast(ust_110, ust_111)

logic d_div__t_3__t_111__t_107 : double

axiom eq_146 : div_post1(NearestTiesToEven, ust_111, ust_107,
  d_div__t_3__t_111__t_107)

logic ust_112 : double

axiom eq_147 : div_post1(NearestTiesToEven, ust_111, ust_107, ust_112)

logic single_of_double__t_3__t_112 : single

axiom eq_148 : double_to_single_cast(NearestTiesToEven, ust_112,
  single_of_double__t_3__t_112)

logic ust_113 : single

axiom eq_149 : double_to_single_cast(NearestTiesToEven, ust_112, ust_113)

logic s_add__t_3__t_103__t_113 : single

axiom eq_150 : add_post(NearestTiesToEven, b1391, ust_113,
  s_add__t_3__t_103__t_113)

logic ust_114 : single

axiom eq_151 : add_post(NearestTiesToEven, b1391, ust_113, ust_114)

logic s_mul__t_3__t_114__t_114 : single

axiom eq_152 : mul_post(NearestTiesToEven, ust_114, ust_114,
  s_mul__t_3__t_114__t_114)

logic ust_115 : single

axiom eq_153 : mul_post(NearestTiesToEven, ust_114, ust_114, ust_115)

logic s_neg__t_115 : single

axiom eq_154 : neg_post(ust_115, s_neg__t_115)

logic ust_116 : single

axiom eq_155 : neg_post(ust_115, ust_116)

logic s_add__t_3__t_9__t_116 : single

axiom eq_156 : add_post(NearestTiesToEven, b169, ust_116,
  s_add__t_3__t_9__t_116)

logic ust_117 : single

axiom eq_157 : add_post(NearestTiesToEven, b169, ust_116, ust_117)

logic double_of_single__t_3__t_117 : double

axiom eq_158 : single_to_double_cast(ust_117, double_of_single__t_3__t_117)

logic ust_118 : double

axiom eq_159 : single_to_double_cast(ust_117, ust_118)

logic single_of_double__t_3__t_118 : single

axiom eq_160 : double_to_single_cast(NearestTiesToEven, ust_118,
  single_of_double__t_3__t_118)

logic ust_119 : single

axiom eq_161 : double_to_single_cast(NearestTiesToEven, ust_118, ust_119)

predicate ust_122() = (not smt2_single_eq(ust_119, b1421))

predicate ust_125() = (not smt2_single_eq(ust_114, b1356))

logic double_of_single__t_3__t_123 : double

axiom eq_162 : single_to_double_cast(b1356, double_of_single__t_3__t_123)

logic ust_126 : double

axiom eq_163 : single_to_double_cast(b1356, ust_126)

logic d_mul__t_3__t_13__t_126 : double

axiom eq_164 : mul_post1(NearestTiesToEven, b185, ust_126,
  d_mul__t_3__t_13__t_126)

logic ust_127 : double

axiom eq_165 : mul_post1(NearestTiesToEven, b185, ust_126, ust_127)

logic s_mul__t_3__t_123__t_123 : single

axiom eq_166 : mul_post(NearestTiesToEven, b1356, b1356,
  s_mul__t_3__t_123__t_123)

logic ust_128 : single

axiom eq_167 : mul_post(NearestTiesToEven, b1356, b1356, ust_128)

logic s_neg__t_128 : single

axiom eq_168 : neg_post(ust_128, s_neg__t_128)

logic ust_129 : single

axiom eq_169 : neg_post(ust_128, ust_129)

logic s_add__t_3__t_9__t_129 : single

axiom eq_170 : add_post(NearestTiesToEven, b169, ust_129,
  s_add__t_3__t_9__t_129)

logic ust_130 : single

axiom eq_171 : add_post(NearestTiesToEven, b169, ust_129, ust_130)

logic double_of_single__t_3__t_130 : double

axiom eq_172 : single_to_double_cast(ust_130, double_of_single__t_3__t_130)

logic ust_131 : double

axiom eq_173 : single_to_double_cast(ust_130, ust_131)

logic d_div__t_3__t_131__t_127 : double

axiom eq_174 : div_post1(NearestTiesToEven, ust_131, ust_127,
  d_div__t_3__t_131__t_127)

logic ust_132 : double

axiom eq_175 : div_post1(NearestTiesToEven, ust_131, ust_127, ust_132)

logic single_of_double__t_3__t_132 : single

axiom eq_176 : double_to_single_cast(NearestTiesToEven, ust_132,
  single_of_double__t_3__t_132)

logic ust_133 : single

axiom eq_177 : double_to_single_cast(NearestTiesToEven, ust_132, ust_133)

logic s_add__t_3__t_123__t_133 : single

axiom eq_178 : add_post(NearestTiesToEven, b1356, ust_133,
  s_add__t_3__t_123__t_133)

logic ust_134 : single

axiom eq_179 : add_post(NearestTiesToEven, b1356, ust_133, ust_134)

logic s_mul__t_3__t_134__t_134 : single

axiom eq_180 : mul_post(NearestTiesToEven, ust_134, ust_134,
  s_mul__t_3__t_134__t_134)

logic ust_135 : single

axiom eq_181 : mul_post(NearestTiesToEven, ust_134, ust_134, ust_135)

logic s_neg__t_135 : single

axiom eq_182 : neg_post(ust_135, s_neg__t_135)

logic ust_136 : single

axiom eq_183 : neg_post(ust_135, ust_136)

logic s_add__t_3__t_9__t_136 : single

axiom eq_184 : add_post(NearestTiesToEven, b169, ust_136,
  s_add__t_3__t_9__t_136)

logic ust_137 : single

axiom eq_185 : add_post(NearestTiesToEven, b169, ust_136, ust_137)

logic double_of_single__t_3__t_137 : double

axiom eq_186 : single_to_double_cast(ust_137, double_of_single__t_3__t_137)

logic ust_138 : double

axiom eq_187 : single_to_double_cast(ust_137, ust_138)

logic single_of_double__t_3__t_138 : single

axiom eq_188 : double_to_single_cast(NearestTiesToEven, ust_138,
  single_of_double__t_3__t_138)

logic ust_139 : single

axiom eq_189 : double_to_single_cast(NearestTiesToEven, ust_138, ust_139)

predicate ust_142() = (not smt2_single_eq(ust_139, b1386))

predicate ust_145() = (not smt2_single_eq(ust_134, b1321))

logic double_of_single__t_3__t_143 : double

axiom eq_190 : single_to_double_cast(b1321, double_of_single__t_3__t_143)

logic ust_146 : double

axiom eq_191 : single_to_double_cast(b1321, ust_146)

logic d_mul__t_3__t_13__t_146 : double

axiom eq_192 : mul_post1(NearestTiesToEven, b185, ust_146,
  d_mul__t_3__t_13__t_146)

logic ust_147 : double

axiom eq_193 : mul_post1(NearestTiesToEven, b185, ust_146, ust_147)

logic s_mul__t_3__t_143__t_143 : single

axiom eq_194 : mul_post(NearestTiesToEven, b1321, b1321,
  s_mul__t_3__t_143__t_143)

logic ust_148 : single

axiom eq_195 : mul_post(NearestTiesToEven, b1321, b1321, ust_148)

logic s_neg__t_148 : single

axiom eq_196 : neg_post(ust_148, s_neg__t_148)

logic ust_149 : single

axiom eq_197 : neg_post(ust_148, ust_149)

logic s_add__t_3__t_9__t_149 : single

axiom eq_198 : add_post(NearestTiesToEven, b169, ust_149,
  s_add__t_3__t_9__t_149)

logic ust_150 : single

axiom eq_199 : add_post(NearestTiesToEven, b169, ust_149, ust_150)

logic double_of_single__t_3__t_150 : double

axiom eq_200 : single_to_double_cast(ust_150, double_of_single__t_3__t_150)

logic ust_151 : double

axiom eq_201 : single_to_double_cast(ust_150, ust_151)

logic d_div__t_3__t_151__t_147 : double

axiom eq_202 : div_post1(NearestTiesToEven, ust_151, ust_147,
  d_div__t_3__t_151__t_147)

logic ust_152 : double

axiom eq_203 : div_post1(NearestTiesToEven, ust_151, ust_147, ust_152)

logic single_of_double__t_3__t_152 : single

axiom eq_204 : double_to_single_cast(NearestTiesToEven, ust_152,
  single_of_double__t_3__t_152)

logic ust_153 : single

axiom eq_205 : double_to_single_cast(NearestTiesToEven, ust_152, ust_153)

logic s_add__t_3__t_143__t_153 : single

axiom eq_206 : add_post(NearestTiesToEven, b1321, ust_153,
  s_add__t_3__t_143__t_153)

logic ust_154 : single

axiom eq_207 : add_post(NearestTiesToEven, b1321, ust_153, ust_154)

logic s_mul__t_3__t_154__t_154 : single

axiom eq_208 : mul_post(NearestTiesToEven, ust_154, ust_154,
  s_mul__t_3__t_154__t_154)

logic ust_155 : single

axiom eq_209 : mul_post(NearestTiesToEven, ust_154, ust_154, ust_155)

logic s_neg__t_155 : single

axiom eq_210 : neg_post(ust_155, s_neg__t_155)

logic ust_156 : single

axiom eq_211 : neg_post(ust_155, ust_156)

logic s_add__t_3__t_9__t_156 : single

axiom eq_212 : add_post(NearestTiesToEven, b169, ust_156,
  s_add__t_3__t_9__t_156)

logic ust_157 : single

axiom eq_213 : add_post(NearestTiesToEven, b169, ust_156, ust_157)

logic double_of_single__t_3__t_157 : double

axiom eq_214 : single_to_double_cast(ust_157, double_of_single__t_3__t_157)

logic ust_158 : double

axiom eq_215 : single_to_double_cast(ust_157, ust_158)

logic single_of_double__t_3__t_158 : single

axiom eq_216 : double_to_single_cast(NearestTiesToEven, ust_158,
  single_of_double__t_3__t_158)

logic ust_159 : single

axiom eq_217 : double_to_single_cast(NearestTiesToEven, ust_158, ust_159)

predicate ust_162() = (not smt2_single_eq(ust_159, b1351))

predicate ust_165() = (not smt2_single_eq(ust_154, b1286))

logic double_of_single__t_3__t_163 : double

axiom eq_218 : single_to_double_cast(b1286, double_of_single__t_3__t_163)

logic ust_166 : double

axiom eq_219 : single_to_double_cast(b1286, ust_166)

logic d_mul__t_3__t_13__t_166 : double

axiom eq_220 : mul_post1(NearestTiesToEven, b185, ust_166,
  d_mul__t_3__t_13__t_166)

logic ust_167 : double

axiom eq_221 : mul_post1(NearestTiesToEven, b185, ust_166, ust_167)

logic s_mul__t_3__t_163__t_163 : single

axiom eq_222 : mul_post(NearestTiesToEven, b1286, b1286,
  s_mul__t_3__t_163__t_163)

logic ust_168 : single

axiom eq_223 : mul_post(NearestTiesToEven, b1286, b1286, ust_168)

logic s_neg__t_168 : single

axiom eq_224 : neg_post(ust_168, s_neg__t_168)

logic ust_169 : single

axiom eq_225 : neg_post(ust_168, ust_169)

logic s_add__t_3__t_9__t_169 : single

axiom eq_226 : add_post(NearestTiesToEven, b169, ust_169,
  s_add__t_3__t_9__t_169)

logic ust_170 : single

axiom eq_227 : add_post(NearestTiesToEven, b169, ust_169, ust_170)

logic double_of_single__t_3__t_170 : double

axiom eq_228 : single_to_double_cast(ust_170, double_of_single__t_3__t_170)

logic ust_171 : double

axiom eq_229 : single_to_double_cast(ust_170, ust_171)

logic d_div__t_3__t_171__t_167 : double

axiom eq_230 : div_post1(NearestTiesToEven, ust_171, ust_167,
  d_div__t_3__t_171__t_167)

logic ust_172 : double

axiom eq_231 : div_post1(NearestTiesToEven, ust_171, ust_167, ust_172)

logic single_of_double__t_3__t_172 : single

axiom eq_232 : double_to_single_cast(NearestTiesToEven, ust_172,
  single_of_double__t_3__t_172)

logic ust_173 : single

axiom eq_233 : double_to_single_cast(NearestTiesToEven, ust_172, ust_173)

logic s_add__t_3__t_163__t_173 : single

axiom eq_234 : add_post(NearestTiesToEven, b1286, ust_173,
  s_add__t_3__t_163__t_173)

logic ust_174 : single

axiom eq_235 : add_post(NearestTiesToEven, b1286, ust_173, ust_174)

logic s_mul__t_3__t_174__t_174 : single

axiom eq_236 : mul_post(NearestTiesToEven, ust_174, ust_174,
  s_mul__t_3__t_174__t_174)

logic ust_175 : single

axiom eq_237 : mul_post(NearestTiesToEven, ust_174, ust_174, ust_175)

logic s_neg__t_175 : single

axiom eq_238 : neg_post(ust_175, s_neg__t_175)

logic ust_176 : single

axiom eq_239 : neg_post(ust_175, ust_176)

logic s_add__t_3__t_9__t_176 : single

axiom eq_240 : add_post(NearestTiesToEven, b169, ust_176,
  s_add__t_3__t_9__t_176)

logic ust_177 : single

axiom eq_241 : add_post(NearestTiesToEven, b169, ust_176, ust_177)

logic double_of_single__t_3__t_177 : double

axiom eq_242 : single_to_double_cast(ust_177, double_of_single__t_3__t_177)

logic ust_178 : double

axiom eq_243 : single_to_double_cast(ust_177, ust_178)

logic single_of_double__t_3__t_178 : single

axiom eq_244 : double_to_single_cast(NearestTiesToEven, ust_178,
  single_of_double__t_3__t_178)

logic ust_179 : single

axiom eq_245 : double_to_single_cast(NearestTiesToEven, ust_178, ust_179)

predicate ust_182() = (not smt2_single_eq(ust_179, b1316))

predicate ust_185() = (not smt2_single_eq(ust_174, b1251))

logic double_of_single__t_3__t_183 : double

axiom eq_246 : single_to_double_cast(b1251, double_of_single__t_3__t_183)

logic ust_186 : double

axiom eq_247 : single_to_double_cast(b1251, ust_186)

logic d_mul__t_3__t_13__t_186 : double

axiom eq_248 : mul_post1(NearestTiesToEven, b185, ust_186,
  d_mul__t_3__t_13__t_186)

logic ust_187 : double

axiom eq_249 : mul_post1(NearestTiesToEven, b185, ust_186, ust_187)

logic s_mul__t_3__t_183__t_183 : single

axiom eq_250 : mul_post(NearestTiesToEven, b1251, b1251,
  s_mul__t_3__t_183__t_183)

logic ust_188 : single

axiom eq_251 : mul_post(NearestTiesToEven, b1251, b1251, ust_188)

logic s_neg__t_188 : single

axiom eq_252 : neg_post(ust_188, s_neg__t_188)

logic ust_189 : single

axiom eq_253 : neg_post(ust_188, ust_189)

logic s_add__t_3__t_9__t_189 : single

axiom eq_254 : add_post(NearestTiesToEven, b169, ust_189,
  s_add__t_3__t_9__t_189)

logic ust_190 : single

axiom eq_255 : add_post(NearestTiesToEven, b169, ust_189, ust_190)

logic double_of_single__t_3__t_190 : double

axiom eq_256 : single_to_double_cast(ust_190, double_of_single__t_3__t_190)

logic ust_191 : double

axiom eq_257 : single_to_double_cast(ust_190, ust_191)

logic d_div__t_3__t_191__t_187 : double

axiom eq_258 : div_post1(NearestTiesToEven, ust_191, ust_187,
  d_div__t_3__t_191__t_187)

logic ust_192 : double

axiom eq_259 : div_post1(NearestTiesToEven, ust_191, ust_187, ust_192)

logic single_of_double__t_3__t_192 : single

axiom eq_260 : double_to_single_cast(NearestTiesToEven, ust_192,
  single_of_double__t_3__t_192)

logic ust_193 : single

axiom eq_261 : double_to_single_cast(NearestTiesToEven, ust_192, ust_193)

logic s_add__t_3__t_183__t_193 : single

axiom eq_262 : add_post(NearestTiesToEven, b1251, ust_193,
  s_add__t_3__t_183__t_193)

logic ust_194 : single

axiom eq_263 : add_post(NearestTiesToEven, b1251, ust_193, ust_194)

logic s_mul__t_3__t_194__t_194 : single

axiom eq_264 : mul_post(NearestTiesToEven, ust_194, ust_194,
  s_mul__t_3__t_194__t_194)

logic ust_195 : single

axiom eq_265 : mul_post(NearestTiesToEven, ust_194, ust_194, ust_195)

logic s_neg__t_195 : single

axiom eq_266 : neg_post(ust_195, s_neg__t_195)

logic ust_196 : single

axiom eq_267 : neg_post(ust_195, ust_196)

logic s_add__t_3__t_9__t_196 : single

axiom eq_268 : add_post(NearestTiesToEven, b169, ust_196,
  s_add__t_3__t_9__t_196)

logic ust_197 : single

axiom eq_269 : add_post(NearestTiesToEven, b169, ust_196, ust_197)

logic double_of_single__t_3__t_197 : double

axiom eq_270 : single_to_double_cast(ust_197, double_of_single__t_3__t_197)

logic ust_198 : double

axiom eq_271 : single_to_double_cast(ust_197, ust_198)

logic single_of_double__t_3__t_198 : single

axiom eq_272 : double_to_single_cast(NearestTiesToEven, ust_198,
  single_of_double__t_3__t_198)

logic ust_199 : single

axiom eq_273 : double_to_single_cast(NearestTiesToEven, ust_198, ust_199)

predicate ust_202() = (not smt2_single_eq(ust_199, b1281))

predicate ust_205() = (not smt2_single_eq(ust_194, b1216))

logic double_of_single__t_3__t_203 : double

axiom eq_274 : single_to_double_cast(b1216, double_of_single__t_3__t_203)

logic ust_206 : double

axiom eq_275 : single_to_double_cast(b1216, ust_206)

logic d_mul__t_3__t_13__t_206 : double

axiom eq_276 : mul_post1(NearestTiesToEven, b185, ust_206,
  d_mul__t_3__t_13__t_206)

logic ust_207 : double

axiom eq_277 : mul_post1(NearestTiesToEven, b185, ust_206, ust_207)

logic s_mul__t_3__t_203__t_203 : single

axiom eq_278 : mul_post(NearestTiesToEven, b1216, b1216,
  s_mul__t_3__t_203__t_203)

logic ust_208 : single

axiom eq_279 : mul_post(NearestTiesToEven, b1216, b1216, ust_208)

logic s_neg__t_208 : single

axiom eq_280 : neg_post(ust_208, s_neg__t_208)

logic ust_209 : single

axiom eq_281 : neg_post(ust_208, ust_209)

logic s_add__t_3__t_9__t_209 : single

axiom eq_282 : add_post(NearestTiesToEven, b169, ust_209,
  s_add__t_3__t_9__t_209)

logic ust_210 : single

axiom eq_283 : add_post(NearestTiesToEven, b169, ust_209, ust_210)

logic double_of_single__t_3__t_210 : double

axiom eq_284 : single_to_double_cast(ust_210, double_of_single__t_3__t_210)

logic ust_211 : double

axiom eq_285 : single_to_double_cast(ust_210, ust_211)

logic d_div__t_3__t_211__t_207 : double

axiom eq_286 : div_post1(NearestTiesToEven, ust_211, ust_207,
  d_div__t_3__t_211__t_207)

logic ust_212 : double

axiom eq_287 : div_post1(NearestTiesToEven, ust_211, ust_207, ust_212)

logic single_of_double__t_3__t_212 : single

axiom eq_288 : double_to_single_cast(NearestTiesToEven, ust_212,
  single_of_double__t_3__t_212)

logic ust_213 : single

axiom eq_289 : double_to_single_cast(NearestTiesToEven, ust_212, ust_213)

logic s_add__t_3__t_203__t_213 : single

axiom eq_290 : add_post(NearestTiesToEven, b1216, ust_213,
  s_add__t_3__t_203__t_213)

logic ust_214 : single

axiom eq_291 : add_post(NearestTiesToEven, b1216, ust_213, ust_214)

logic s_mul__t_3__t_214__t_214 : single

axiom eq_292 : mul_post(NearestTiesToEven, ust_214, ust_214,
  s_mul__t_3__t_214__t_214)

logic ust_215 : single

axiom eq_293 : mul_post(NearestTiesToEven, ust_214, ust_214, ust_215)

logic s_neg__t_215 : single

axiom eq_294 : neg_post(ust_215, s_neg__t_215)

logic ust_216 : single

axiom eq_295 : neg_post(ust_215, ust_216)

logic s_add__t_3__t_9__t_216 : single

axiom eq_296 : add_post(NearestTiesToEven, b169, ust_216,
  s_add__t_3__t_9__t_216)

logic ust_217 : single

axiom eq_297 : add_post(NearestTiesToEven, b169, ust_216, ust_217)

logic double_of_single__t_3__t_217 : double

axiom eq_298 : single_to_double_cast(ust_217, double_of_single__t_3__t_217)

logic ust_218 : double

axiom eq_299 : single_to_double_cast(ust_217, ust_218)

logic single_of_double__t_3__t_218 : single

axiom eq_300 : double_to_single_cast(NearestTiesToEven, ust_218,
  single_of_double__t_3__t_218)

logic ust_219 : single

axiom eq_301 : double_to_single_cast(NearestTiesToEven, ust_218, ust_219)

predicate ust_222() = (not smt2_single_eq(ust_219, b1246))

predicate ust_225() = (not smt2_single_eq(ust_214, b1181))

logic double_of_single__t_3__t_223 : double

axiom eq_302 : single_to_double_cast(b1181, double_of_single__t_3__t_223)

logic ust_226 : double

axiom eq_303 : single_to_double_cast(b1181, ust_226)

logic d_mul__t_3__t_13__t_226 : double

axiom eq_304 : mul_post1(NearestTiesToEven, b185, ust_226,
  d_mul__t_3__t_13__t_226)

logic ust_227 : double

axiom eq_305 : mul_post1(NearestTiesToEven, b185, ust_226, ust_227)

logic s_mul__t_3__t_223__t_223 : single

axiom eq_306 : mul_post(NearestTiesToEven, b1181, b1181,
  s_mul__t_3__t_223__t_223)

logic ust_228 : single

axiom eq_307 : mul_post(NearestTiesToEven, b1181, b1181, ust_228)

logic s_neg__t_228 : single

axiom eq_308 : neg_post(ust_228, s_neg__t_228)

logic ust_229 : single

axiom eq_309 : neg_post(ust_228, ust_229)

logic s_add__t_3__t_9__t_229 : single

axiom eq_310 : add_post(NearestTiesToEven, b169, ust_229,
  s_add__t_3__t_9__t_229)

logic ust_230 : single

axiom eq_311 : add_post(NearestTiesToEven, b169, ust_229, ust_230)

logic double_of_single__t_3__t_230 : double

axiom eq_312 : single_to_double_cast(ust_230, double_of_single__t_3__t_230)

logic ust_231 : double

axiom eq_313 : single_to_double_cast(ust_230, ust_231)

logic d_div__t_3__t_231__t_227 : double

axiom eq_314 : div_post1(NearestTiesToEven, ust_231, ust_227,
  d_div__t_3__t_231__t_227)

logic ust_232 : double

axiom eq_315 : div_post1(NearestTiesToEven, ust_231, ust_227, ust_232)

logic single_of_double__t_3__t_232 : single

axiom eq_316 : double_to_single_cast(NearestTiesToEven, ust_232,
  single_of_double__t_3__t_232)

logic ust_233 : single

axiom eq_317 : double_to_single_cast(NearestTiesToEven, ust_232, ust_233)

logic s_add__t_3__t_223__t_233 : single

axiom eq_318 : add_post(NearestTiesToEven, b1181, ust_233,
  s_add__t_3__t_223__t_233)

logic ust_234 : single

axiom eq_319 : add_post(NearestTiesToEven, b1181, ust_233, ust_234)

logic s_mul__t_3__t_234__t_234 : single

axiom eq_320 : mul_post(NearestTiesToEven, ust_234, ust_234,
  s_mul__t_3__t_234__t_234)

logic ust_235 : single

axiom eq_321 : mul_post(NearestTiesToEven, ust_234, ust_234, ust_235)

logic s_neg__t_235 : single

axiom eq_322 : neg_post(ust_235, s_neg__t_235)

logic ust_236 : single

axiom eq_323 : neg_post(ust_235, ust_236)

logic s_add__t_3__t_9__t_236 : single

axiom eq_324 : add_post(NearestTiesToEven, b169, ust_236,
  s_add__t_3__t_9__t_236)

logic ust_237 : single

axiom eq_325 : add_post(NearestTiesToEven, b169, ust_236, ust_237)

logic double_of_single__t_3__t_237 : double

axiom eq_326 : single_to_double_cast(ust_237, double_of_single__t_3__t_237)

logic ust_238 : double

axiom eq_327 : single_to_double_cast(ust_237, ust_238)

logic single_of_double__t_3__t_238 : single

axiom eq_328 : double_to_single_cast(NearestTiesToEven, ust_238,
  single_of_double__t_3__t_238)

logic ust_239 : single

axiom eq_329 : double_to_single_cast(NearestTiesToEven, ust_238, ust_239)

predicate ust_242() = (not smt2_single_eq(ust_239, b1211))

predicate ust_245() = (not smt2_single_eq(ust_234, b1146))

logic double_of_single__t_3__t_243 : double

axiom eq_330 : single_to_double_cast(b1146, double_of_single__t_3__t_243)

logic ust_246 : double

axiom eq_331 : single_to_double_cast(b1146, ust_246)

logic d_mul__t_3__t_13__t_246 : double

axiom eq_332 : mul_post1(NearestTiesToEven, b185, ust_246,
  d_mul__t_3__t_13__t_246)

logic ust_247 : double

axiom eq_333 : mul_post1(NearestTiesToEven, b185, ust_246, ust_247)

logic s_mul__t_3__t_243__t_243 : single

axiom eq_334 : mul_post(NearestTiesToEven, b1146, b1146,
  s_mul__t_3__t_243__t_243)

logic ust_248 : single

axiom eq_335 : mul_post(NearestTiesToEven, b1146, b1146, ust_248)

logic s_neg__t_248 : single

axiom eq_336 : neg_post(ust_248, s_neg__t_248)

logic ust_249 : single

axiom eq_337 : neg_post(ust_248, ust_249)

logic s_add__t_3__t_9__t_249 : single

axiom eq_338 : add_post(NearestTiesToEven, b169, ust_249,
  s_add__t_3__t_9__t_249)

logic ust_250 : single

axiom eq_339 : add_post(NearestTiesToEven, b169, ust_249, ust_250)

logic double_of_single__t_3__t_250 : double

axiom eq_340 : single_to_double_cast(ust_250, double_of_single__t_3__t_250)

logic ust_251 : double

axiom eq_341 : single_to_double_cast(ust_250, ust_251)

logic d_div__t_3__t_251__t_247 : double

axiom eq_342 : div_post1(NearestTiesToEven, ust_251, ust_247,
  d_div__t_3__t_251__t_247)

logic ust_252 : double

axiom eq_343 : div_post1(NearestTiesToEven, ust_251, ust_247, ust_252)

logic single_of_double__t_3__t_252 : single

axiom eq_344 : double_to_single_cast(NearestTiesToEven, ust_252,
  single_of_double__t_3__t_252)

logic ust_253 : single

axiom eq_345 : double_to_single_cast(NearestTiesToEven, ust_252, ust_253)

logic s_add__t_3__t_243__t_253 : single

axiom eq_346 : add_post(NearestTiesToEven, b1146, ust_253,
  s_add__t_3__t_243__t_253)

logic ust_254 : single

axiom eq_347 : add_post(NearestTiesToEven, b1146, ust_253, ust_254)

logic s_mul__t_3__t_254__t_254 : single

axiom eq_348 : mul_post(NearestTiesToEven, ust_254, ust_254,
  s_mul__t_3__t_254__t_254)

logic ust_255 : single

axiom eq_349 : mul_post(NearestTiesToEven, ust_254, ust_254, ust_255)

logic s_neg__t_255 : single

axiom eq_350 : neg_post(ust_255, s_neg__t_255)

logic ust_256 : single

axiom eq_351 : neg_post(ust_255, ust_256)

logic s_add__t_3__t_9__t_256 : single

axiom eq_352 : add_post(NearestTiesToEven, b169, ust_256,
  s_add__t_3__t_9__t_256)

logic ust_257 : single

axiom eq_353 : add_post(NearestTiesToEven, b169, ust_256, ust_257)

logic double_of_single__t_3__t_257 : double

axiom eq_354 : single_to_double_cast(ust_257, double_of_single__t_3__t_257)

logic ust_258 : double

axiom eq_355 : single_to_double_cast(ust_257, ust_258)

logic single_of_double__t_3__t_258 : single

axiom eq_356 : double_to_single_cast(NearestTiesToEven, ust_258,
  single_of_double__t_3__t_258)

logic ust_259 : single

axiom eq_357 : double_to_single_cast(NearestTiesToEven, ust_258, ust_259)

predicate ust_262() = (not smt2_single_eq(ust_259, b1176))

predicate ust_265() = (not smt2_single_eq(ust_254, b1110))

logic double_of_single__t_3__t_263 : double

axiom eq_358 : single_to_double_cast(b1110, double_of_single__t_3__t_263)

logic ust_266 : double

axiom eq_359 : single_to_double_cast(b1110, ust_266)

logic d_mul__t_3__t_13__t_266 : double

axiom eq_360 : mul_post1(NearestTiesToEven, b185, ust_266,
  d_mul__t_3__t_13__t_266)

logic ust_267 : double

axiom eq_361 : mul_post1(NearestTiesToEven, b185, ust_266, ust_267)

logic s_mul__t_3__t_263__t_263 : single

axiom eq_362 : mul_post(NearestTiesToEven, b1110, b1110,
  s_mul__t_3__t_263__t_263)

logic ust_268 : single

axiom eq_363 : mul_post(NearestTiesToEven, b1110, b1110, ust_268)

logic s_neg__t_268 : single

axiom eq_364 : neg_post(ust_268, s_neg__t_268)

logic ust_269 : single

axiom eq_365 : neg_post(ust_268, ust_269)

logic s_add__t_3__t_9__t_269 : single

axiom eq_366 : add_post(NearestTiesToEven, b169, ust_269,
  s_add__t_3__t_9__t_269)

logic ust_270 : single

axiom eq_367 : add_post(NearestTiesToEven, b169, ust_269, ust_270)

logic double_of_single__t_3__t_270 : double

axiom eq_368 : single_to_double_cast(ust_270, double_of_single__t_3__t_270)

logic ust_271 : double

axiom eq_369 : single_to_double_cast(ust_270, ust_271)

logic d_div__t_3__t_271__t_267 : double

axiom eq_370 : div_post1(NearestTiesToEven, ust_271, ust_267,
  d_div__t_3__t_271__t_267)

logic ust_272 : double

axiom eq_371 : div_post1(NearestTiesToEven, ust_271, ust_267, ust_272)

logic single_of_double__t_3__t_272 : single

axiom eq_372 : double_to_single_cast(NearestTiesToEven, ust_272,
  single_of_double__t_3__t_272)

logic ust_273 : single

axiom eq_373 : double_to_single_cast(NearestTiesToEven, ust_272, ust_273)

logic s_add__t_3__t_263__t_273 : single

axiom eq_374 : add_post(NearestTiesToEven, b1110, ust_273,
  s_add__t_3__t_263__t_273)

logic ust_274 : single

axiom eq_375 : add_post(NearestTiesToEven, b1110, ust_273, ust_274)

logic s_mul__t_3__t_274__t_274 : single

axiom eq_376 : mul_post(NearestTiesToEven, ust_274, ust_274,
  s_mul__t_3__t_274__t_274)

logic ust_275 : single

axiom eq_377 : mul_post(NearestTiesToEven, ust_274, ust_274, ust_275)

logic s_neg__t_275 : single

axiom eq_378 : neg_post(ust_275, s_neg__t_275)

logic ust_276 : single

axiom eq_379 : neg_post(ust_275, ust_276)

logic s_add__t_3__t_9__t_276 : single

axiom eq_380 : add_post(NearestTiesToEven, b169, ust_276,
  s_add__t_3__t_9__t_276)

logic ust_277 : single

axiom eq_381 : add_post(NearestTiesToEven, b169, ust_276, ust_277)

logic double_of_single__t_3__t_277 : double

axiom eq_382 : single_to_double_cast(ust_277, double_of_single__t_3__t_277)

logic ust_278 : double

axiom eq_383 : single_to_double_cast(ust_277, ust_278)

logic single_of_double__t_3__t_278 : single

axiom eq_384 : double_to_single_cast(NearestTiesToEven, ust_278,
  single_of_double__t_3__t_278)

logic ust_279 : single

axiom eq_385 : double_to_single_cast(NearestTiesToEven, ust_278, ust_279)

predicate ust_282() = (not smt2_single_eq(ust_279, b1141))

predicate ust_285() = (not smt2_single_eq(ust_274, b1089))

logic double_of_single__t_3__t_283 : double

axiom eq_386 : single_to_double_cast(b1089, double_of_single__t_3__t_283)

logic ust_286 : double

axiom eq_387 : single_to_double_cast(b1089, ust_286)

logic d_mul__t_3__t_13__t_286 : double

axiom eq_388 : mul_post1(NearestTiesToEven, b185, ust_286,
  d_mul__t_3__t_13__t_286)

logic ust_287 : double

axiom eq_389 : mul_post1(NearestTiesToEven, b185, ust_286, ust_287)

logic s_mul__t_3__t_283__t_283 : single

axiom eq_390 : mul_post(NearestTiesToEven, b1089, b1089,
  s_mul__t_3__t_283__t_283)

logic ust_288 : single

axiom eq_391 : mul_post(NearestTiesToEven, b1089, b1089, ust_288)

logic s_neg__t_288 : single

axiom eq_392 : neg_post(ust_288, s_neg__t_288)

logic ust_289 : single

axiom eq_393 : neg_post(ust_288, ust_289)

logic s_add__t_3__t_9__t_289 : single

axiom eq_394 : add_post(NearestTiesToEven, b169, ust_289,
  s_add__t_3__t_9__t_289)

logic ust_290 : single

axiom eq_395 : add_post(NearestTiesToEven, b169, ust_289, ust_290)

logic double_of_single__t_3__t_290 : double

axiom eq_396 : single_to_double_cast(ust_290, double_of_single__t_3__t_290)

logic ust_291 : double

axiom eq_397 : single_to_double_cast(ust_290, ust_291)

logic d_div__t_3__t_291__t_287 : double

axiom eq_398 : div_post1(NearestTiesToEven, ust_291, ust_287,
  d_div__t_3__t_291__t_287)

logic ust_292 : double

axiom eq_399 : div_post1(NearestTiesToEven, ust_291, ust_287, ust_292)

logic single_of_double__t_3__t_292 : single

axiom eq_400 : double_to_single_cast(NearestTiesToEven, ust_292,
  single_of_double__t_3__t_292)

logic ust_293 : single

axiom eq_401 : double_to_single_cast(NearestTiesToEven, ust_292, ust_293)

logic s_add__t_3__t_283__t_293 : single

axiom eq_402 : add_post(NearestTiesToEven, b1089, ust_293,
  s_add__t_3__t_283__t_293)

logic ust_294 : single

axiom eq_403 : add_post(NearestTiesToEven, b1089, ust_293, ust_294)

logic s_mul__t_3__t_294__t_294 : single

axiom eq_404 : mul_post(NearestTiesToEven, ust_294, ust_294,
  s_mul__t_3__t_294__t_294)

logic ust_295 : single

axiom eq_405 : mul_post(NearestTiesToEven, ust_294, ust_294, ust_295)

logic s_neg__t_295 : single

axiom eq_406 : neg_post(ust_295, s_neg__t_295)

logic ust_296 : single

axiom eq_407 : neg_post(ust_295, ust_296)

logic s_add__t_3__t_9__t_296 : single

axiom eq_408 : add_post(NearestTiesToEven, b169, ust_296,
  s_add__t_3__t_9__t_296)

logic ust_297 : single

axiom eq_409 : add_post(NearestTiesToEven, b169, ust_296, ust_297)

logic double_of_single__t_3__t_297 : double

axiom eq_410 : single_to_double_cast(ust_297, double_of_single__t_3__t_297)

logic ust_298 : double

axiom eq_411 : single_to_double_cast(ust_297, ust_298)

logic single_of_double__t_3__t_298 : single

axiom eq_412 : double_to_single_cast(NearestTiesToEven, ust_298,
  single_of_double__t_3__t_298)

logic ust_299 : single

axiom eq_413 : double_to_single_cast(NearestTiesToEven, ust_298, ust_299)

predicate ust_302() = (not smt2_single_eq(ust_299, b1105))

logic single_of_double__t_3__t_303 : single

axiom eq_414 : double_to_single_cast(NearestTiesToEven, b652,
  single_of_double__t_3__t_303)

logic ust_304 : single

axiom eq_415 : double_to_single_cast(NearestTiesToEven, b652, ust_304)

predicate ust_307() = (not smt2_single_eq(ust_304, b1084))

predicate ust_310() = (not eq(b169, b176))

predicate ust_312() = (ust_310 and le(b176, b169))

predicate ust_314() = (not le(b176, ust_304))

predicate ust_315() = (ust_312 and ust_314)

logic s_neg__t_304 : single

axiom eq_416 : neg_post(ust_304, s_neg__t_304)

logic ust_316 : single

axiom eq_417 : neg_post(ust_304, ust_316)

predicate ust_318() = (ust_315 and smt2_single_eq(b1084, ust_316))

predicate ust_319() = (ust_307 and ust_318)

predicate ust_321() = (not le(b176, ust_299))

predicate ust_322() = (ust_319 and ust_321)

logic s_neg__t_299 : single

axiom eq_418 : neg_post(ust_299, s_neg__t_299)

logic ust_323 : single

axiom eq_419 : neg_post(ust_299, ust_323)

predicate ust_325() = (ust_322 and smt2_single_eq(b1105, ust_323))

predicate ust_326() = (ust_302 and ust_325)

predicate ust_328() = (ust_326 and smt2_single_eq(b1110, b1089))

predicate ust_329() = (ust_285 and ust_328)

logic double_of_single__t_3__t_280 : double

axiom eq_420 : single_to_double_cast(b1141, double_of_single__t_3__t_280)

logic ust_330 : double

axiom eq_421 : single_to_double_cast(b1141, ust_330)

predicate ust_333() = (not le1(ust_330, b174))

predicate ust_334() = (ust_329 and ust_333)

predicate ust_336() = (not le(b176, ust_279))

predicate ust_337() = (ust_334 and ust_336)

logic s_neg__t_279 : single

axiom eq_422 : neg_post(ust_279, s_neg__t_279)

logic ust_338 : single

axiom eq_423 : neg_post(ust_279, ust_338)

predicate ust_340() = (ust_337 and smt2_single_eq(b1141, ust_338))

predicate ust_341() = (ust_282 and ust_340)

predicate ust_343() = (ust_341 and smt2_single_eq(b1146, b1110))

predicate ust_344() = (ust_265 and ust_343)

logic double_of_single__t_3__t_260 : double

axiom eq_424 : single_to_double_cast(b1176, double_of_single__t_3__t_260)

logic ust_345 : double

axiom eq_425 : single_to_double_cast(b1176, ust_345)

predicate ust_347() = (not le1(ust_345, b174))

predicate ust_348() = (ust_344 and ust_347)

predicate ust_350() = (not le(b176, ust_259))

predicate ust_351() = (ust_348 and ust_350)

logic s_neg__t_259 : single

axiom eq_426 : neg_post(ust_259, s_neg__t_259)

logic ust_352 : single

axiom eq_427 : neg_post(ust_259, ust_352)

predicate ust_354() = (ust_351 and smt2_single_eq(b1176, ust_352))

predicate ust_355() = (ust_262 and ust_354)

predicate ust_357() = (ust_355 and smt2_single_eq(b1181, b1146))

predicate ust_358() = (ust_245 and ust_357)

logic double_of_single__t_3__t_240 : double

axiom eq_428 : single_to_double_cast(b1211, double_of_single__t_3__t_240)

logic ust_359 : double

axiom eq_429 : single_to_double_cast(b1211, ust_359)

predicate ust_361() = (not le1(ust_359, b174))

predicate ust_362() = (ust_358 and ust_361)

predicate ust_364() = (not le(b176, ust_239))

predicate ust_365() = (ust_362 and ust_364)

logic s_neg__t_239 : single

axiom eq_430 : neg_post(ust_239, s_neg__t_239)

logic ust_366 : single

axiom eq_431 : neg_post(ust_239, ust_366)

predicate ust_368() = (ust_365 and smt2_single_eq(b1211, ust_366))

predicate ust_369() = (ust_242 and ust_368)

predicate ust_371() = (ust_369 and smt2_single_eq(b1216, b1181))

predicate ust_372() = (ust_225 and ust_371)

logic double_of_single__t_3__t_220 : double

axiom eq_432 : single_to_double_cast(b1246, double_of_single__t_3__t_220)

logic ust_373 : double

axiom eq_433 : single_to_double_cast(b1246, ust_373)

predicate ust_375() = (not le1(ust_373, b174))

predicate ust_376() = (ust_372 and ust_375)

predicate ust_378() = (not le(b176, ust_219))

predicate ust_379() = (ust_376 and ust_378)

logic s_neg__t_219 : single

axiom eq_434 : neg_post(ust_219, s_neg__t_219)

logic ust_380 : single

axiom eq_435 : neg_post(ust_219, ust_380)

predicate ust_382() = (ust_379 and smt2_single_eq(b1246, ust_380))

predicate ust_383() = (ust_222 and ust_382)

predicate ust_385() = (ust_383 and smt2_single_eq(b1251, b1216))

predicate ust_386() = (ust_205 and ust_385)

logic double_of_single__t_3__t_200 : double

axiom eq_436 : single_to_double_cast(b1281, double_of_single__t_3__t_200)

logic ust_387 : double

axiom eq_437 : single_to_double_cast(b1281, ust_387)

predicate ust_389() = (not le1(ust_387, b174))

predicate ust_390() = (ust_386 and ust_389)

predicate ust_392() = (not le(b176, ust_199))

predicate ust_393() = (ust_390 and ust_392)

logic s_neg__t_199 : single

axiom eq_438 : neg_post(ust_199, s_neg__t_199)

logic ust_394 : single

axiom eq_439 : neg_post(ust_199, ust_394)

predicate ust_396() = (ust_393 and smt2_single_eq(b1281, ust_394))

predicate ust_397() = (ust_202 and ust_396)

predicate ust_399() = (ust_397 and smt2_single_eq(b1286, b1251))

predicate ust_400() = (ust_185 and ust_399)

logic double_of_single__t_3__t_180 : double

axiom eq_440 : single_to_double_cast(b1316, double_of_single__t_3__t_180)

logic ust_401 : double

axiom eq_441 : single_to_double_cast(b1316, ust_401)

predicate ust_403() = (not le1(ust_401, b174))

predicate ust_404() = (ust_400 and ust_403)

predicate ust_406() = (not le(b176, ust_179))

predicate ust_407() = (ust_404 and ust_406)

logic s_neg__t_179 : single

axiom eq_442 : neg_post(ust_179, s_neg__t_179)

logic ust_408 : single

axiom eq_443 : neg_post(ust_179, ust_408)

predicate ust_410() = (ust_407 and smt2_single_eq(b1316, ust_408))

predicate ust_411() = (ust_182 and ust_410)

predicate ust_413() = (ust_411 and smt2_single_eq(b1321, b1286))

predicate ust_414() = (ust_165 and ust_413)

logic double_of_single__t_3__t_160 : double

axiom eq_444 : single_to_double_cast(b1351, double_of_single__t_3__t_160)

logic ust_415 : double

axiom eq_445 : single_to_double_cast(b1351, ust_415)

predicate ust_417() = (not le1(ust_415, b174))

predicate ust_418() = (ust_414 and ust_417)

logic double_of_single__t_3__t_40 : double

axiom eq_446 : single_to_double_cast(b1545, double_of_single__t_3__t_40)

logic ust_419 : double

axiom eq_447 : single_to_double_cast(b1545, ust_419)

predicate ust_421() = (not le1(ust_419, b174))

predicate ust_422() = (ust_418 and ust_421)

predicate ust_424() = (not le(b176, ust_159))

predicate ust_425() = (ust_422 and ust_424)

logic s_neg__t_159 : single

axiom eq_448 : neg_post(ust_159, s_neg__t_159)

logic ust_426 : single

axiom eq_449 : neg_post(ust_159, ust_426)

predicate ust_428() = (ust_425 and smt2_single_eq(b1351, ust_426))

predicate ust_429() = (ust_162 and ust_428)

predicate ust_431() = (ust_429 and smt2_single_eq(b1356, b1321))

predicate ust_432() = (ust_145 and ust_431)

logic double_of_single__t_3__t_140 : double

axiom eq_450 : single_to_double_cast(b1386, double_of_single__t_3__t_140)

logic ust_433 : double

axiom eq_451 : single_to_double_cast(b1386, ust_433)

predicate ust_435() = (not le1(ust_433, b174))

predicate ust_436() = (ust_432 and ust_435)

predicate ust_438() = (not le(b176, ust_139))

predicate ust_439() = (ust_436 and ust_438)

logic s_neg__t_139 : single

axiom eq_452 : neg_post(ust_139, s_neg__t_139)

logic ust_440 : single

axiom eq_453 : neg_post(ust_139, ust_440)

predicate ust_442() = (ust_439 and smt2_single_eq(b1386, ust_440))

predicate ust_443() = (ust_142 and ust_442)

predicate ust_445() = (ust_443 and smt2_single_eq(b1391, b1356))

predicate ust_446() = (ust_125 and ust_445)

logic double_of_single__t_3__t_120 : double

axiom eq_454 : single_to_double_cast(b1421, double_of_single__t_3__t_120)

logic ust_447 : double

axiom eq_455 : single_to_double_cast(b1421, ust_447)

predicate ust_449() = (not le1(ust_447, b174))

predicate ust_450() = (ust_446 and ust_449)

predicate ust_452() = (not le(b176, ust_119))

predicate ust_453() = (ust_450 and ust_452)

logic s_neg__t_119 : single

axiom eq_456 : neg_post(ust_119, s_neg__t_119)

logic ust_454 : single

axiom eq_457 : neg_post(ust_119, ust_454)

predicate ust_456() = (ust_453 and smt2_single_eq(b1421, ust_454))

predicate ust_457() = (ust_122 and ust_456)

predicate ust_459() = (ust_457 and smt2_single_eq(b1461, b1426))

predicate ust_461() = (ust_459 and smt2_single_eq(b1426, b1391))

predicate ust_462() = (ust_105 and ust_461)

predicate ust_463() = (ust_102 and ust_462)

logic double_of_single__t_3__t_98 : double

axiom eq_458 : single_to_double_cast(b1456, double_of_single__t_3__t_98)

logic ust_464 : double

axiom eq_459 : single_to_double_cast(b1456, ust_464)

predicate ust_466() = (not le1(ust_464, b174))

predicate ust_467() = (ust_463 and ust_466)

predicate ust_469() = (not le(b176, ust_97))

predicate ust_470() = (ust_467 and ust_469)

logic s_neg__t_97 : single

axiom eq_460 : neg_post(ust_97, s_neg__t_97)

logic ust_471 : single

axiom eq_461 : neg_post(ust_97, ust_471)

predicate ust_473() = (ust_470 and smt2_single_eq(b1456, ust_471))

predicate ust_474() = (ust_100 and ust_473)

logic double_of_single__t_3__t_80 : double

axiom eq_462 : single_to_double_cast(b1491, double_of_single__t_3__t_80)

logic ust_475 : double

axiom eq_463 : single_to_double_cast(b1491, ust_475)

predicate ust_477() = (not le1(ust_475, b174))

predicate ust_478() = (ust_474 and ust_477)

predicate ust_480() = (not le(b176, ust_79))

predicate ust_481() = (ust_478 and ust_480)

logic s_neg__t_79 : single

axiom eq_464 : neg_post(ust_79, s_neg__t_79)

logic ust_482 : single

axiom eq_465 : neg_post(ust_79, ust_482)

predicate ust_484() = (ust_481 and smt2_single_eq(b1491, ust_482))

predicate ust_485() = (ust_82 and ust_484)

predicate ust_487() = (ust_485 and smt2_single_eq(b1496, b1461))

predicate ust_488() = (ust_65 and ust_487)

logic double_of_single__t_3__t_60 : double

axiom eq_466 : single_to_double_cast(b1526, double_of_single__t_3__t_60)

logic ust_489 : double

axiom eq_467 : single_to_double_cast(b1526, ust_489)

predicate ust_491() = (not le1(ust_489, b174))

predicate ust_492() = (ust_488 and ust_491)

predicate ust_494() = (not le(b176, ust_59))

predicate ust_495() = (ust_492 and ust_494)

logic s_neg__t_59 : single

axiom eq_468 : neg_post(ust_59, s_neg__t_59)

logic ust_496 : single

axiom eq_469 : neg_post(ust_59, ust_496)

predicate ust_498() = (ust_495 and smt2_single_eq(b1526, ust_496))

predicate ust_499() = (ust_62 and ust_498)

predicate ust_501() = (ust_499 and smt2_single_eq(ust_21, b1496))

logic double_of_single__t_3__t_27 : double

axiom eq_470 : single_to_double_cast(b1554, double_of_single__t_3__t_27)

logic ust_502 : double

axiom eq_471 : single_to_double_cast(b1554, ust_502)

predicate ust_504() = (ust_501 and le1(ust_502, b174))

predicate ust_505() = (ust_45 and ust_504)

predicate ust_507() = (not le(b176, ust_39))

predicate ust_508() = (ust_505 and ust_507)

logic s_neg__t_39 : single

axiom eq_472 : neg_post(ust_39, s_neg__t_39)

logic ust_509 : single

axiom eq_473 : neg_post(ust_39, ust_509)

predicate ust_511() = (ust_508 and smt2_single_eq(b1545, ust_509))

predicate ust_512() = (ust_42 and ust_511)

predicate ust_514() = (not le(b176, ust_26))

predicate ust_515() = (ust_512 and ust_514)

logic s_neg__t_26 : single

axiom eq_474 : neg_post(ust_26, s_neg__t_26)

logic ust_516 : single

axiom eq_475 : neg_post(ust_26, ust_516)

predicate ust_518() = (ust_515 and smt2_single_eq(b1554, ust_516))

predicate ust_521() = (not le(b1084, b662))

predicate ust_522() = (ust_518 and ust_521)

predicate ust_523() = (ust_29 and ust_522)

axiom ax_1 : ust_523

goal g_1 : false
