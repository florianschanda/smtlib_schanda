(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_ABVFP)
(set-info :source |Benchmarks generated by CBMC and post-processed to set appropriate logic and remove get-value commands.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-fun |goto_symex::&92;guard#1| () Bool)
(define-fun B0 () Bool |goto_symex::&92;guard#1|)
(define-fun B1 () Bool |goto_symex::&92;guard#1|)
(define-fun B2 () Bool (not |goto_symex::&92;guard#1|))
(declare-fun |goto_symex::&92;guard#2| () Bool)
(define-fun B3 () Bool |goto_symex::&92;guard#2|)
(define-fun B4 () Bool |goto_symex::&92;guard#2|)
(define-fun B5 () Bool |goto_symex::&92;guard#2|)
(define-fun B6 () Bool |goto_symex::&92;guard#2|)
(declare-fun |goto_symex::&92;guard#3| () Bool)
(define-fun B7 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3|))
(define-fun B8 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3|))
(define-fun B9 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3|))
(define-fun B10 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3|))
(declare-fun |goto_symex::&92;guard#4| () Bool)
(define-fun B11 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4|))
(define-fun B12 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4|))
(define-fun B13 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4|))
(define-fun B14 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4|))
(declare-fun |goto_symex::&92;guard#5| () Bool)
(define-fun B15 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4| |goto_symex::&92;guard#5|))
(define-fun B16 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4| |goto_symex::&92;guard#5|))
(define-fun B17 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4| |goto_symex::&92;guard#5|))
(define-fun B18 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4| |goto_symex::&92;guard#5|))
(declare-fun |goto_symex::&92;guard#6| () Bool)
(define-fun B19 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4| |goto_symex::&92;guard#5| |goto_symex::&92;guard#6|))
(define-fun B20 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4| |goto_symex::&92;guard#5| |goto_symex::&92;guard#6|))
(define-fun B21 () Bool (and |goto_symex::&92;guard#2| |goto_symex::&92;guard#3| |goto_symex::&92;guard#4| |goto_symex::&92;guard#5| |goto_symex::&92;guard#6|))
(declare-fun |goto_symex::&92;guard#7| () Bool)
(define-fun B22 () Bool |goto_symex::&92;guard#7|)
(define-fun |__CPROVER_dead_object#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_deallocated#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_malloc_is_new_array#1| () Bool false)
(define-fun |__CPROVER_malloc_object#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_malloc_size#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_memory_leak#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_next_thread_id#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_pipe_count#1| () (_ BitVec 32) (_ bv0 32))
(define-fun |__CPROVER_rounding_mode!0#1| () (_ BitVec 32) (_ bv0 32))
(define-fun |__CPROVER_thread_id!0#1| () (_ BitVec 64) (_ bv0 64))
(declare-fun array_of.0 () (Array (_ BitVec 64) (_ BitVec 1)))
(define-fun |__CPROVER_threads_exited#1| () (Array (_ BitVec 64) (_ BitVec 1)) array_of.0)
(declare-fun array.1 () (Array (_ BitVec 64) (_ FloatingPoint 8 24)))
(assert (= (select array.1 (_ bv0 64)) (fp #b0 #b10000001 #b01000000000000000000000)))
(assert (= (select array.1 (_ bv1 64)) (fp #b0 #b10000010 #b01000000000000000000000)))
(assert (= (select array.1 (_ bv2 64)) (fp #b0 #b10000010 #b10000000000000000000000)))
(assert (= (select array.1 (_ bv3 64)) (fp #b0 #b10000011 #b11100000000000000000000)))
(assert (= (select array.1 (_ bv4 64)) (fp #b0 #b10000110 #b00101100000000000000000)))
(define-fun |main::1::min!0@1#2| () (Array (_ BitVec 64) (_ FloatingPoint 8 24)) array.1)
(declare-fun array.2 () (Array (_ BitVec 64) (_ FloatingPoint 8 24)))
(assert (= (select array.2 (_ bv0 64)) (fp #b0 #b10000010 #b01000000000000000000000)))
(assert (= (select array.2 (_ bv1 64)) (fp #b0 #b10000010 #b10000000000000000000000)))
(assert (= (select array.2 (_ bv2 64)) (fp #b0 #b10000011 #b11100000000000000000000)))
(assert (= (select array.2 (_ bv3 64)) (fp #b0 #b10000110 #b00101100000000000000000)))
(assert (= (select array.2 (_ bv4 64)) (fp #b0 #b10000111 #b00101100000000000000000)))
(define-fun |main::1::max!0@1#2| () (Array (_ BitVec 64) (_ FloatingPoint 8 24)) array.2)
(declare-fun |nondet_symex::nondet0| () (_ FloatingPoint 8 24))
(define-fun |main::1::t!0@1#2| () (_ FloatingPoint 8 24) |nondet_symex::nondet0|)
(assert (= |goto_symex::&92;guard#1| (fp.geq |main::1::t!0@1#2| (fp #b0 #b10000001 #b01000000000000000000000))))
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#2| () Bool (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000111 #b00101100000000000000000)))
(declare-fun |main::$tmp::::tmp_if_expr$1!0@1#1| () Bool)
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#3| () Bool |main::$tmp::::tmp_if_expr$1!0@1#1|)
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#4| () Bool false)
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#5| () Bool (and |goto_symex::&92;guard#1| |main::$tmp::::tmp_if_expr$1!0@1#2|))
(define-fun |main::1::i!0@1#2| () (_ BitVec 32) (_ bv0 32))
(assert (= |goto_symex::&92;guard#2| (not (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000010 #b01000000000000000000000)))))
(define-fun |main::1::i!0@1#3| () (_ BitVec 32) (_ bv1 32))
(assert (= |goto_symex::&92;guard#3| (not (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000010 #b10000000000000000000000)))))
(define-fun |main::1::i!0@1#4| () (_ BitVec 32) (_ bv2 32))
(assert (= |goto_symex::&92;guard#4| (not (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000011 #b11100000000000000000000)))))
(define-fun |main::1::i!0@1#5| () (_ BitVec 32) (_ bv3 32))
(assert (= |goto_symex::&92;guard#5| (not (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000110 #b00101100000000000000000)))))
(define-fun |main::1::i!0@1#6| () (_ BitVec 32) (_ bv4 32))
(assert (= |goto_symex::&92;guard#6| (not (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000111 #b00101100000000000000000)))))
(define-fun |main::1::i!0@1#7| () (_ BitVec 32) (_ bv5 32))
(define-fun |main::1::i!0@1#8| () (_ BitVec 32) (ite |goto_symex::&92;guard#6| (_ bv5 32) (_ bv4 32)))
(define-fun |main::1::i!0@1#9| () (_ BitVec 32) (ite |goto_symex::&92;guard#5| |main::1::i!0@1#8| (_ bv3 32)))
(define-fun |main::1::i!0@1#10| () (_ BitVec 32) (ite |goto_symex::&92;guard#4| |main::1::i!0@1#9| (_ bv2 32)))
(define-fun |main::1::i!0@1#11| () (_ BitVec 32) (ite |goto_symex::&92;guard#3| |main::1::i!0@1#10| (_ bv1 32)))
(define-fun |main::1::i!0@1#12| () (_ BitVec 32) (ite |goto_symex::&92;guard#2| |main::1::i!0@1#11| (_ bv0 32)))
(define-fun |main::1::z!0@1#2| () (_ FloatingPoint 8 24) (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven |main::1::t!0@1#2| (select array.1 ((_ sign_extend 32) |main::1::i!0@1#12|))) (fp.sub roundNearestTiesToEven (select array.2 ((_ sign_extend 32) |main::1::i!0@1#12|)) (select array.1 ((_ sign_extend 32) |main::1::i!0@1#12|)))))
(define-fun |__VERIFIER_assert::cond!0@1#1| () (_ BitVec 32) (ite (and (fp.leq |main::1::z!0@1#2| (fp #b0 #b01111111 #b00000000000000000000000)) (fp.geq |main::1::z!0@1#2| (fp #b0 #b00000000 #b00000000000000000000000))) (_ bv1 32) (_ bv0 32)))
(assert (= |goto_symex::&92;guard#7| (= |__VERIFIER_assert::cond!0@1#1| (_ bv0 32))))
(declare-fun |main::1::i!0@1#1| () (_ BitVec 32))
(define-fun B23 () Bool (= |main::1::i!0@1#1| |main::1::i!0@1#1|))
(declare-fun |main::1::z!0@1#1| () (_ FloatingPoint 8 24))
(define-fun B24 () Bool (= |main::1::z!0@1#1| |main::1::z!0@1#1|))
(declare-fun |main::1::t!0@1#1| () (_ FloatingPoint 8 24))
(define-fun B25 () Bool (= |main::1::t!0@1#1| |main::1::t!0@1#1|))
(declare-fun |main::1::min!0@1#1| () (Array (_ BitVec 64) (_ FloatingPoint 8 24)))
(define-fun B26 () Bool (= |main::1::min!0@1#1| |main::1::min!0@1#1|))
(declare-fun |main::1::max!0@1#1| () (Array (_ BitVec 64) (_ FloatingPoint 8 24)))
(define-fun B27 () Bool (= |main::1::max!0@1#1| |main::1::max!0@1#1|))
(define-fun B28 () Bool (= |main::$tmp::::tmp_if_expr$1!0@1#1| |main::$tmp::::tmp_if_expr$1!0@1#1|))
(define-fun B29 () Bool |main::$tmp::::tmp_if_expr$1!0@1#5|)
(assert |main::$tmp::::tmp_if_expr$1!0@1#5|)
(assert |goto_symex::&92;guard#7|)
(define-fun B30 () Bool (not (fp.geq |main::1::t!0@1#2| (fp #b0 #b10000001 #b01000000000000000000000))))
(define-fun B31 () Bool (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000010 #b01000000000000000000000)))
(define-fun B32 () Bool (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000010 #b10000000000000000000000)))
(define-fun B33 () Bool (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000011 #b11100000000000000000000)))
(define-fun B34 () Bool (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000110 #b00101100000000000000000)))
(define-fun B35 () Bool (fp.leq |main::1::t!0@1#2| (fp #b0 #b10000111 #b00101100000000000000000)))
(define-fun B36 () Bool (not (= |__VERIFIER_assert::cond!0@1#1| (_ bv0 32))))
(check-sat)
(exit)
