(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_ABVFP)
(set-info :source |Benchmarks generated by CBMC and post-processed to set appropriate logic and remove get-value commands.|)
(set-info :category industrial)
(set-info :status unknown)

(define-fun |__CPROVER_dead_object#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_deallocated#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_malloc_is_new_array#1| () Bool false)
(define-fun |__CPROVER_malloc_object#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_malloc_size#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_memory_leak#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_next_thread_id#1| () (_ BitVec 64) (_ bv0 64))
(define-fun |__CPROVER_pipe_count#1| () (_ BitVec 32) (_ bv0 32))
(define-fun |__CPROVER_rounding_mode!0#1| () (_ BitVec 32) (_ bv0 32))
(define-fun |__CPROVER_thread_id!0#1| () (_ BitVec 64) (_ bv0 64))
(declare-fun array_of.0 () (Array (_ BitVec 64) (_ BitVec 1)))
(define-fun |__CPROVER_threads_exited#1| () (Array (_ BitVec 64) (_ BitVec 1)) array_of.0)
(declare-fun |nondet_symex::nondet0| () (_ FloatingPoint 8 24))
(define-fun |__CPROVER__start::x0!0#2| () (_ FloatingPoint 8 24) |nondet_symex::nondet0|)
(declare-fun |nondet_symex::nondet1| () (_ FloatingPoint 8 24))
(define-fun |__CPROVER__start::h!0#2| () (_ FloatingPoint 8 24) |nondet_symex::nondet1|)
(define-fun |slope::x0!0@1#1| () (_ FloatingPoint 8 24) |__CPROVER__start::x0!0#2|)
(define-fun |slope::h!0@1#1| () (_ FloatingPoint 8 24) |__CPROVER__start::h!0#2|)
(define-fun |slope::1::x1!0@1#2| () (_ FloatingPoint 8 24) (fp.add roundNearestTiesToEven |slope::x0!0@1#1| |slope::h!0@1#1|))
(define-fun |slope::1::x2!0@1#2| () (_ FloatingPoint 8 24) (fp.sub roundNearestTiesToEven |slope::x0!0@1#1| |slope::h!0@1#1|))
(define-fun |slope::1::fx1!0@1#2| () (_ FloatingPoint 8 24) (fp.mul roundNearestTiesToEven |slope::1::x1!0@1#2| |slope::1::x1!0@1#2|))
(define-fun |slope::1::fx2!0@1#2| () (_ FloatingPoint 8 24) (fp.mul roundNearestTiesToEven |slope::1::x2!0@1#2| |slope::1::x2!0@1#2|))
(define-fun |slope::1::res!0@1#2| () (_ FloatingPoint 8 24) ((_ to_fp 8 24) roundNearestTiesToEven (fp.div roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (fp.sub roundNearestTiesToEven |slope::1::fx1!0@1#2| |slope::1::fx2!0@1#2|)) (fp.mul roundNearestTiesToEven (fp #b0 #b10000000000 #b0000000000000000000000000000000000000000000000000000) ((_ to_fp 11 53) roundNearestTiesToEven |slope::h!0@1#1|)))))
(declare-fun |__CPROVER__start::x0!0#1| () (_ FloatingPoint 8 24))
(define-fun B0 () Bool (= |__CPROVER__start::x0!0#1| |__CPROVER__start::x0!0#1|))
(declare-fun |__CPROVER__start::h!0#1| () (_ FloatingPoint 8 24))
(define-fun B1 () Bool (= |__CPROVER__start::h!0#1| |__CPROVER__start::h!0#1|))
(declare-fun |slope::1::x1!0@1#1| () (_ FloatingPoint 8 24))
(define-fun B2 () Bool (= |slope::1::x1!0@1#1| |slope::1::x1!0@1#1|))
(declare-fun |slope::1::x2!0@1#1| () (_ FloatingPoint 8 24))
(define-fun B3 () Bool (= |slope::1::x2!0@1#1| |slope::1::x2!0@1#1|))
(declare-fun |slope::1::fx1!0@1#1| () (_ FloatingPoint 8 24))
(define-fun B4 () Bool (= |slope::1::fx1!0@1#1| |slope::1::fx1!0@1#1|))
(declare-fun |slope::1::fx2!0@1#1| () (_ FloatingPoint 8 24))
(define-fun B5 () Bool (= |slope::1::fx2!0@1#1| |slope::1::fx2!0@1#1|))
(declare-fun |slope::1::res!0@1#1| () (_ FloatingPoint 8 24))
(define-fun B6 () Bool (= |slope::1::res!0@1#1| |slope::1::res!0@1#1|))
(define-fun B7 () Bool (fp.eq |slope::x0!0@1#1| (fp #b0 #b10000010 #b10100000000000000000000)))
(define-fun B8 () Bool (and (fp.leq ((_ to_fp 11 53) roundNearestTiesToEven |slope::h!0@1#1|) (fp #b0 #b01111101011 #b0000110001101111011110100000101101011110110110001101)) (fp.geq ((_ to_fp 11 53) roundNearestTiesToEven |slope::h!0@1#1|) (fp #b0 #b01111100001 #b0001001011100000101111101000001001101101011010010101))))
(assert (fp.eq |slope::x0!0@1#1| (fp #b0 #b10000010 #b10100000000000000000000)))
(assert (fp.leq ((_ to_fp 11 53) roundNearestTiesToEven |slope::h!0@1#1|) (fp #b0 #b01111101011 #b0000110001101111011110100000101101011110110110001101)))
(assert (fp.geq ((_ to_fp 11 53) roundNearestTiesToEven |slope::h!0@1#1|) (fp #b0 #b01111100001 #b0001001011100000101111101000001001101101011010010101)))
(assert (not (fp.leq |slope::1::res!0@1#2| (fp #b0 #b10000011 #b10010000000000000000000))))
(declare-fun |symex::io::0| () (_ FloatingPoint 8 24))
(assert (= |__CPROVER__start::x0!0#2| |symex::io::0|))
(declare-fun |symex::io::1| () (_ FloatingPoint 8 24))
(assert (= |__CPROVER__start::h!0#2| |symex::io::1|))
(check-sat)
(exit)
