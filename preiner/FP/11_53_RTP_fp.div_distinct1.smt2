(set-info :smt-lib-version 2.6)
(set-logic FP)
(set-info :source |
Generated by: Mathias Preiner
Generated on: 2019-03-22
Application: Verification of floating-point invertibility conditions.
Target solver: CVC4, Z3
Publications: "Invertibility Conditions for Floating-Point Formulas" by M. Brain, A. Niemetz, M. Preiner, A. Reynolds, C. Barrett, and C. Tinelli, CAV 2019.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")

(define-sort FP () (_ FloatingPoint 11 53))

(define-fun posMinSubnormal () FP (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001))
(define-fun negMinSubnormal () FP (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001))
(define-fun posMaxSubnormal () FP (fp #b0 #b00000000000 #b1111111111111111111111111111111111111111111111111111))
(define-fun negMaxSubnormal () FP (fp #b1 #b00000000000 #b1111111111111111111111111111111111111111111111111111))
(define-fun posMinNormal () FP (fp #b0 #b00000000001 #b0000000000000000000000000000000000000000000000000000))
(define-fun negMinNormal () FP (fp #b1 #b00000000001 #b0000000000000000000000000000000000000000000000000000))
(define-fun posMaxNormal () FP (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111))
(define-fun negMaxNormal () FP (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111))
(define-fun posConstTwo () FP (fp #b0 #b10000000000 #b0000000000000000000000000000000000000000000000000000))
(define-fun R () RoundingMode RTP)

(declare-const s FP)
(declare-const t FP)

(define-fun IC ((s FP) (t FP)) Bool (=> (fp.isNaN s) (not (fp.isNaN t))))

(assert
 (distinct
  (IC s t)
  (exists ((x FP)) (distinct (fp.div RTP s x) t))
 )
)

(check-sat)
(exit)
