(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6363071340592469926633611976285465061664581298828125p-299 {- 2865672571842413 -299 (-1.60656e-090)}
; Y = 1.96710987391521907596825258224271237850189208984375p-68 {+ 4355475667790908 -68 (6.66483e-021)}
; -1.6363071340592469926633611976285465061664581298828125p-299 - 1.96710987391521907596825258224271237850189208984375p-68 == -1.96710987391521907596825258224271237850189208984375p-68
; [HW: -1.96710987391521907596825258224271237850189208984375p-68] 

; mpf : - 4355475667790908 -68
; mpfd: - 4355475667790908 -68 (-6.66483e-021) class: Neg. norm. non-zero
; hwf : - 4355475667790908 -68 (-6.66483e-021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010100 #b1010001011100101000001100011101011111110111101101101)))
(assert (= y (fp #b0 #b01110111011 #b1111011110010100100000110100000000011010110000111100)))
(assert (= r (fp #b1 #b01110111011 #b1111011110010100100000110100000000011010110000111100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
