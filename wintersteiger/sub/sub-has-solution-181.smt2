(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5579049903370323360007887458777986466884613037109375p381 {- 2512580706589999 381 (-7.67307e+114)}
; Y = -1.22899074563655918979065972962416708469390869140625p-555 {- 1031282636720100 -555 (-1.04208e-167)}
; -1.5579049903370323360007887458777986466884613037109375p381 - -1.22899074563655918979065972962416708469390869140625p-555 == -1.557904990337032113956183820846490561962127685546875p381
; [HW: -1.557904990337032113956183820846490561962127685546875p381] 

; mpf : - 2512580706589998 381
; mpfd: - 2512580706589998 381 (-7.67307e+114) class: Neg. norm. non-zero
; hwf : - 2512580706589998 381 (-7.67307e+114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111100 #b1000111011010010110111001000011111000101110100101111)))
(assert (= y (fp #b1 #b00111010100 #b0011101010011111001000110011001110011000011111100100)))
(assert (= r (fp #b1 #b10101111100 #b1000111011010010110111001000011111000101110100101110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
