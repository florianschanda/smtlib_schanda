(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.64015678702188782978055314742960035800933837890625p946 {- 2883009867490468 946 (-9.75576e+284)}
; Y = -1.2234393218720811535860093499650247395038604736328125p-345 {- 1006281246723021 -345 (-1.707e-104)}
; -1.64015678702188782978055314742960035800933837890625p946 - -1.2234393218720811535860093499650247395038604736328125p-345 == -1.64015678702188782978055314742960035800933837890625p946
; [HW: -1.64015678702188782978055314742960035800933837890625p946] 

; mpf : - 2883009867490468 946
; mpfd: - 2883009867490468 946 (-9.75576e+284) class: Neg. norm. non-zero
; hwf : - 2883009867490468 946 (-9.75576e+284) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110001 #b1010001111100001010100001011000010010010010010100100)))
(assert (= y (fp #b1 #b01010100110 #b0011100100110011010100011100010000010100101111001101)))
(assert (= r (fp #b1 #b11110110001 #b1010001111100001010100001011000010010010010010100100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
