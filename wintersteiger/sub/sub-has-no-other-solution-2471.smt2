(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8707395301967115752717063514865003526210784912109375p828 {+ 3921462223730671 828 (3.3485e+249)}
; Y = -1.861419643775414467512518967851065099239349365234375p905 {- 3879489186716582 905 (-5.03489e+272)}
; 1.8707395301967115752717063514865003526210784912109375p828 - -1.861419643775414467512518967851065099239349365234375p905 == 1.861419643775414467512518967851065099239349365234375p905
; [HW: 1.861419643775414467512518967851065099239349365234375p905] 

; mpf : + 3879489186716582 905
; mpfd: + 3879489186716582 905 (5.03489e+272) class: Pos. norm. non-zero
; hwf : + 3879489186716582 905 (5.03489e+272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111011 #b1101111011101000110010010010110110000111011111101111)))
(assert (= y (fp #b1 #b11110001000 #b1101110010000101111111110110111000100101101110100110)))
(assert (= r (fp #b0 #b11110001000 #b1101110010000101111111110110111000100101101110100110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
