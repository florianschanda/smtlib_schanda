(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.598472359669452114161458666785620152950286865234375p-544 {+ 2695279895998886 -544 (2.7758e-164)}
; Y = 1.2037568976786678920376516543910838663578033447265625p196 {+ 917639488459817 196 (1.20898e+059)}
; 1.598472359669452114161458666785620152950286865234375p-544 - 1.2037568976786678920376516543910838663578033447265625p196 == -1.2037568976786676699930467293597757816314697265625p196
; [HW: -1.2037568976786676699930467293597757816314697265625p196] 

; mpf : - 917639488459816 196
; mpfd: - 917639488459816 196 (-1.20898e+059) class: Neg. norm. non-zero
; hwf : - 917639488459816 196 (-1.20898e+059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011111 #b1001100100110101011111000000110001010111000110100110)))
(assert (= y (fp #b0 #b10011000011 #b0011010000101001011010010111101111011101010000101001)))
(assert (= r (fp #b1 #b10011000011 #b0011010000101001011010010111101111011101010000101000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
