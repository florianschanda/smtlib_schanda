(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.481437451991169940157533346791751682758331298828125p397 {+ 2168201529389634 397 (4.7818e+119)}
; Y = -1.8540814564880399029078716921503655612468719482421875p372 {- 3846440929183587 372 (-1.78356e+112)}
; 1.481437451991169940157533346791751682758331298828125p397 - -1.8540814564880399029078716921503655612468719482421875p372 == 1.481437507247103102514529382460750639438629150390625p397
; [HW: 1.481437507247103102514529382460750639438629150390625p397] 

; mpf : + 2168201778240234 397
; mpfd: + 2168201778240234 397 (4.7818e+119) class: Pos. norm. non-zero
; hwf : + 2168201778240234 397 (4.7818e+119) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110001100 #b0111101100111111011111000001111101011111001001000010)))
(assert (= y (fp #b1 #b10101110011 #b1101101010100101000101010001001110111100011101100011)))
(assert (= r (fp #b0 #b10110001100 #b0111101100111111011111010000110010110001101011101010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
