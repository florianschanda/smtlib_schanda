(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4980849071715189868569950704113580286502838134765625p-744 {- 2243175002336521 -744 (-1.6189e-224)}
; Y = -1.6428402365622012393231443638796918094158172607421875p959 {- 2895095049840291 959 (-8.005e+288)}
; -1.4980849071715189868569950704113580286502838134765625p-744 - -1.6428402365622012393231443638796918094158172607421875p959 == 1.6428402365622012393231443638796918094158172607421875p959
; [HW: 1.6428402365622012393231443638796918094158172607421875p959] 

; mpf : + 2895095049840291 959
; mpfd: + 2895095049840291 959 (8.005e+288) class: Pos. norm. non-zero
; hwf : + 2895095049840291 959 (8.005e+288) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010111 #b0111111110000010011111100001001011101110110100001001)))
(assert (= y (fp #b1 #b11110111110 #b1010010010010001001011011000000010010110011010100011)))
(assert (= r (fp #b0 #b11110111110 #b1010010010010001001011011000000010010110011010100011)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
