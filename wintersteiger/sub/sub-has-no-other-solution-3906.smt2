(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5620262720633817377091645539621822535991668701171875p42 {+ 2531141309437075 42 (6.86986e+012)}
; Y = -1.9537921664794806186904452260932885110378265380859375p629 {- 4295498045545887 629 (-4.35257e+189)}
; 1.5620262720633817377091645539621822535991668701171875p42 - -1.9537921664794806186904452260932885110378265380859375p629 == 1.9537921664794806186904452260932885110378265380859375p629
; [HW: 1.9537921664794806186904452260932885110378265380859375p629] 

; mpf : + 4295498045545887 629
; mpfd: + 4295498045545887 629 (4.35257e+189) class: Pos. norm. non-zero
; hwf : + 4295498045545887 629 (4.35257e+189) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101001 #b1000111111100000111101000010101000000001010010010011)))
(assert (= y (fp #b1 #b11001110100 #b1111010000101011101110010011001000110101110110011111)))
(assert (= r (fp #b0 #b11001110100 #b1111010000101011101110010011001000110101110110011111)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
