(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3386764443335692487124788385699503123760223388671875p-542 {+ 1525263108499827 -542 (9.29861e-164)}
; Y = -1.15644631263858599368177237920463085174560546875p853 {- 704571555302624 853 (-6.94563e+256)}
; 1.3386764443335692487124788385699503123760223388671875p-542 - -1.15644631263858599368177237920463085174560546875p853 == 1.15644631263858599368177237920463085174560546875p853
; [HW: 1.15644631263858599368177237920463085174560546875p853] 

; mpf : + 704571555302624 853
; mpfd: + 704571555302624 853 (6.94563e+256) class: Pos. norm. non-zero
; hwf : + 704571555302624 853 (6.94563e+256) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100001 #b0101011010110011011111111101110001010110100101110011)))
(assert (= y (fp #b1 #b11101010100 #b0010100000001100110111011001010001011100110011100000)))
(assert (= r (fp #b0 #b11101010100 #b0010100000001100110111011001010001011100110011100000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
