(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.49885442104559363230009694234468042850494384765625p-969 {+ 2246640584733060 -969 (3.00396e-292)}
; Y = -1.0300118459811276050430706163751892745494842529296875p929 {- 135161338377307 929 (-4.67421e+279)}
; 1.49885442104559363230009694234468042850494384765625p-969 - -1.0300118459811276050430706163751892745494842529296875p929 == 1.0300118459811276050430706163751892745494842529296875p929
; [HW: 1.0300118459811276050430706163751892745494842529296875p929] 

; mpf : + 135161338377307 929
; mpfd: + 135161338377307 929 (4.67421e+279) class: Pos. norm. non-zero
; hwf : + 135161338377307 929 (4.67421e+279) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110110 #b0111111110110100111011000101111111011011000110000100)))
(assert (= y (fp #b1 #b11110100000 #b0000011110101110110110110011100011111011010001011011)))
(assert (= r (fp #b0 #b11110100000 #b0000011110101110110110110011100011111011010001011011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
