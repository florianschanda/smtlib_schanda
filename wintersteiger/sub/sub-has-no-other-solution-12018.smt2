(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6582499661924037237525908494717441499233245849609375p847 {- 2964494302460751 847 (-1.55617e+255)}
; Y = 1.1226471624638880708602073354995809495449066162109375p471 {+ 552353715170415 471 (6.84497e+141)}
; -1.6582499661924037237525908494717441499233245849609375p847 - 1.1226471624638880708602073354995809495449066162109375p471 == -1.6582499661924037237525908494717441499233245849609375p847
; [HW: -1.6582499661924037237525908494717441499233245849609375p847] 

; mpf : - 2964494302460751 847
; mpfd: - 2964494302460751 847 (-1.55617e+255) class: Neg. norm. non-zero
; hwf : - 2964494302460751 847 (-1.55617e+255) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001110 #b1010100010000011000100011101110101100011101101001111)))
(assert (= y (fp #b0 #b10111010110 #b0001111101100101110011011110111110111010110001101111)))
(assert (= r (fp #b1 #b11101001110 #b1010100010000011000100011101110101100011101101001111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
