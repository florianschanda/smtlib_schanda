(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2103996353258399398811206992832012474536895751953125p398 {- 947555719252341 398 (-7.81389e+119)}
; Y = -1.8684730940925096120963644352741539478302001953125p196 {- 3911255102936328 196 (-1.87658e+059)}
; -1.2103996353258399398811206992832012474536895751953125p398 - -1.8684730940925096120963644352741539478302001953125p196 == -1.21039963532583971783651577425189316272735595703125p398
; [HW: -1.21039963532583971783651577425189316272735595703125p398] 

; mpf : - 947555719252340 398
; mpfd: - 947555719252340 398 (-7.81389e+119) class: Neg. norm. non-zero
; hwf : - 947555719252340 398 (-7.81389e+119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001101 #b0011010111011100110000000010000011010000100101110101)))
(assert (= y (fp #b1 #b10011000011 #b1101111001010100010000001011000010010101010100001000)))
(assert (= r (fp #b1 #b10110001101 #b0011010111011100110000000010000011010000100101110100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
