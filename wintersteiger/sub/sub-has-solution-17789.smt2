(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.822329081442850107208641929901205003261566162109375p108 {+ 3703440944761942 108 (5.9138e+032)}
; Y = -1.38320808373948533898101231898181140422821044921875p-96 {- 1725815783134508 -96 (-1.74585e-029)}
; 1.822329081442850107208641929901205003261566162109375p108 - -1.38320808373948533898101231898181140422821044921875p-96 == 1.822329081442850107208641929901205003261566162109375p108
; [HW: 1.822329081442850107208641929901205003261566162109375p108] 

; mpf : + 3703440944761942 108
; mpfd: + 3703440944761942 108 (5.9138e+032) class: Pos. norm. non-zero
; hwf : + 3703440944761942 108 (5.9138e+032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101011 #b1101001010000100001010001001111101011000110001010110)))
(assert (= y (fp #b1 #b01110011111 #b0110001000011001111011001100101100111001010100101100)))
(assert (= r (fp #b0 #b10001101011 #b1101001010000100001010001001111101011000110001010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
