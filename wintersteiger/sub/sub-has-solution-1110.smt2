(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0277544361294970176601282219053246080875396728515625p590 {- 124994868210681 590 (-4.16473e+177)}
; Y = -1.339916664635671939009853304014541208744049072265625p-418 {- 1530848564190234 -418 (-1.97943e-126)}
; -1.0277544361294970176601282219053246080875396728515625p590 - -1.339916664635671939009853304014541208744049072265625p-418 == -1.0277544361294970176601282219053246080875396728515625p590
; [HW: -1.0277544361294970176601282219053246080875396728515625p590] 

; mpf : - 124994868210681 590
; mpfd: - 124994868210681 590 (-4.16473e+177) class: Neg. norm. non-zero
; hwf : - 124994868210681 590 (-4.16473e+177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001101 #b0000011100011010111010100010101101111110101111111001)))
(assert (= y (fp #b1 #b01001011101 #b0101011100000100110001110100110111111001110000011010)))
(assert (= r (fp #b1 #b11001001101 #b0000011100011010111010100010101101111110101111111001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
