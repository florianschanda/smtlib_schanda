(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.83708793643077239465810635010711848735809326171875p-384 {- 3769908918585964 -384 (-4.66242e-116)}
; Y = -1.8523449106542866360314292251132428646087646484375p355 {- 3838620222013784 355 (-1.35947e+107)}
; -1.83708793643077239465810635010711848735809326171875p-384 - -1.8523449106542866360314292251132428646087646484375p355 == 1.8523449106542864139868243000819347798824310302734375p355
; [HW: 1.8523449106542864139868243000819347798824310302734375p355] 

; mpf : + 3838620222013783 355
; mpfd: + 3838620222013783 355 (1.35947e+107) class: Pos. norm. non-zero
; hwf : + 3838620222013783 355 (1.35947e+107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001111111 #b1101011001001011011001010001111011011000101001101100)))
(assert (= y (fp #b1 #b10101100010 #b1101101000110011010001101010110000101100000101011000)))
(assert (= r (fp #b0 #b10101100010 #b1101101000110011010001101010110000101100000101010111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
