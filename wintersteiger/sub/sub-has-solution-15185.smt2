(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.60171987495057965844580394332297146320343017578125p-995 {- 2709905404608852 -995 (-4.78345e-300)}
; Y = -1.20996437942945345156431358191184699535369873046875p1013 {- 945595500959564 1013 (-1.06208e+305)}
; -1.60171987495057965844580394332297146320343017578125p-995 - -1.20996437942945345156431358191184699535369873046875p1013 == 1.2099643794294532295197086568805389106273651123046875p1013
; [HW: 1.2099643794294532295197086568805389106273651123046875p1013] 

; mpf : + 945595500959563 1013
; mpfd: + 945595500959563 1013 (1.06208e+305) class: Pos. norm. non-zero
; hwf : + 945595500959563 1013 (1.06208e+305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011100 #b1001101000001010010100000101000001000100000101010100)))
(assert (= y (fp #b1 #b11111110100 #b0011010111000000001110011011111011111001011101001100)))
(assert (= r (fp #b0 #b11111110100 #b0011010111000000001110011011111011111001011101001011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
