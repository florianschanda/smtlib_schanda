(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.77051732563193287006697573815472424030303955078125p-662 {+ 3470101540598484 -662 (9.25216e-200)}
; Y = 1.71842957088073688964868779294192790985107421875p-347 {+ 3235519147710432 -347 (5.99409e-105)}
; 1.77051732563193287006697573815472424030303955078125p-662 - 1.71842957088073688964868779294192790985107421875p-347 == -1.7184295708807366676040828679106198251247406005859375p-347
; [HW: -1.7184295708807366676040828679106198251247406005859375p-347] 

; mpf : - 3235519147710431 -347
; mpfd: - 3235519147710431 -347 (-5.99409e-105) class: Neg. norm. non-zero
; hwf : - 3235519147710431 -347 (-5.99409e-105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101001 #b1100010101000000100111111001101010010111001011010100)))
(assert (= y (fp #b0 #b01010100100 #b1011011111101011000000000001011101101001011111100000)))
(assert (= r (fp #b1 #b01010100100 #b1011011111101011000000000001011101101001011111011111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
