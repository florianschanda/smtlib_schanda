(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.481201018057243690151381088071502745151519775390625p953 {- 2167136725612906 953 (-1.12772e+287)}
; Y = -1.158127091007922881971126116695813834667205810546875p396 {- 712141108140462 396 (-1.86911e+119)}
; -1.481201018057243690151381088071502745151519775390625p953 - -1.158127091007922881971126116695813834667205810546875p396 == -1.481201018057243690151381088071502745151519775390625p953
; [HW: -1.481201018057243690151381088071502745151519775390625p953] 

; mpf : - 2167136725612906 953
; mpfd: - 2167136725612906 953 (-1.12772e+287) class: Neg. norm. non-zero
; hwf : - 2167136725612906 953 (-1.12772e+287) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111000 #b0111101100101111111111010110101101011011100101101010)))
(assert (= y (fp #b1 #b10110001011 #b0010100001111011000001000101110001111101100110101110)))
(assert (= r (fp #b1 #b11110111000 #b0111101100101111111111010110101101011011100101101010)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
