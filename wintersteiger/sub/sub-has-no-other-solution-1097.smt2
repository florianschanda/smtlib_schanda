(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2294841428677252270773578857188113033771514892578125p-743 {+ 1033504700306525 -743 (2.65727e-224)}
; Y = -1.4932036803148605041968721707235090434551239013671875p-598 {- 2221191910883763 -598 (-1.4394e-180)}
; 1.2294841428677252270773578857188113033771514892578125p-743 - -1.4932036803148605041968721707235090434551239013671875p-598 == 1.4932036803148605041968721707235090434551239013671875p-598
; [HW: 1.4932036803148605041968721707235090434551239013671875p-598] 

; mpf : + 2221191910883763 -598
; mpfd: + 2221191910883763 -598 (1.4394e-180) class: Pos. norm. non-zero
; hwf : + 2221191910883763 -598 (1.4394e-180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100011000 #b0011101010111111011110010000100010010001010001011101)))
(assert (= y (fp #b1 #b00110101001 #b0111111001000010100110001010110100111000000110110011)))
(assert (= r (fp #b0 #b00110101001 #b0111111001000010100110001010110100111000000110110011)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
