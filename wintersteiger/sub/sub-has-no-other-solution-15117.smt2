(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2807842738050030373386789506184868514537811279296875p744 {+ 1264539950879707 744 (1.1852e+224)}
; Y = -1.647384543152104807717250878340564668178558349609375p-24 {- 2915560787305238 -24 (-9.81918e-008)}
; 1.2807842738050030373386789506184868514537811279296875p744 - -1.647384543152104807717250878340564668178558349609375p-24 == 1.2807842738050030373386789506184868514537811279296875p744
; [HW: 1.2807842738050030373386789506184868514537811279296875p744] 

; mpf : + 1264539950879707 744
; mpfd: + 1264539950879707 744 (1.1852e+224) class: Pos. norm. non-zero
; hwf : + 1264539950879707 744 (1.1852e+224) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011100111 #b0100011111100001011110100110100100111001001111011011)))
(assert (= y (fp #b1 #b01111100111 #b1010010110111010111111100101000011000110001100010110)))
(assert (= r (fp #b0 #b11011100111 #b0100011111100001011110100110100100111001001111011011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
