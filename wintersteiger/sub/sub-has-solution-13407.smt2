(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.328045091403533550789006767445243895053863525390625p77 {+ 1477383751405674 77 (2.00689e+023)}
; Y = 1.588235761405299317772232825518585741519927978515625p-847 {+ 2649178355870906 -847 (1.69242e-255)}
; 1.328045091403533550789006767445243895053863525390625p77 - 1.588235761405299317772232825518585741519927978515625p-847 == 1.3280450914035333287444018424139358103275299072265625p77
; [HW: 1.3280450914035333287444018424139358103275299072265625p77] 

; mpf : + 1477383751405673 77
; mpfd: + 1477383751405673 77 (2.00689e+023) class: Pos. norm. non-zero
; hwf : + 1477383751405673 77 (2.00689e+023) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001100 #b0101001111111010110000110101101100110001000001101010)))
(assert (= y (fp #b0 #b00010110000 #b1001011010010110100111100110110110010010110010111010)))
(assert (= r (fp #b0 #b10001001100 #b0101001111111010110000110101101100110001000001101001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
