(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3062265768131642307281481407699175179004669189453125p-624 {+ 1379121897226709 -624 (1.8763e-188)}
; Y = -1.7351799646812817723429134275647811591625213623046875p42 {- 3310956214988875 42 (-7.6314e+012)}
; 1.3062265768131642307281481407699175179004669189453125p-624 - -1.7351799646812817723429134275647811591625213623046875p42 == 1.7351799646812817723429134275647811591625213623046875p42
; [HW: 1.7351799646812817723429134275647811591625213623046875p42] 

; mpf : + 3310956214988875 42
; mpfd: + 3310956214988875 42 (7.6314e+012) class: Pos. norm. non-zero
; hwf : + 3310956214988875 42 (7.6314e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001111 #b0100111001100100110111010110110010010100000111010101)))
(assert (= y (fp #b1 #b10000101001 #b1011110000110100110000010001000011111011000001001011)))
(assert (= r (fp #b0 #b10000101001 #b1011110000110100110000010001000011111011000001001011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
