(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.413674407345438144290028503746725618839263916015625p607 {+ 1863023906773626 607 (7.50856e+182)}
; Y = 1.5989218670121767562619652380817569792270660400390625p313 {+ 2697304297100081 313 (2.66818e+094)}
; 1.413674407345438144290028503746725618839263916015625p607 - 1.5989218670121767562619652380817569792270660400390625p313 == 1.4136744073454379222454235787154175341129302978515625p607
; [HW: 1.4136744073454379222454235787154175341129302978515625p607] 

; mpf : + 1863023906773625 607
; mpfd: + 1863023906773625 607 (7.50856e+182) class: Pos. norm. non-zero
; hwf : + 1863023906773625 607 (7.50856e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011110 #b0110100111100110100100001110001010111101101001111010)))
(assert (= y (fp #b0 #b10100111000 #b1001100101010010111100011000011110101101001100110001)))
(assert (= r (fp #b0 #b11001011110 #b0110100111100110100100001110001010111101101001111001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
