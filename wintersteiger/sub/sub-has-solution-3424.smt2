(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.297450989795183584618598615634255111217498779296875p504 {- 1339600166802574 504 (-6.7953e+151)}
; Y = -1.2382140804789412147357552385074086487293243408203125p-456 {- 1072820844079365 -456 (-6.65454e-138)}
; -1.297450989795183584618598615634255111217498779296875p504 - -1.2382140804789412147357552385074086487293243408203125p-456 == -1.2974509897951833625739936906029470264911651611328125p504
; [HW: -1.2974509897951833625739936906029470264911651611328125p504] 

; mpf : - 1339600166802573 504
; mpfd: - 1339600166802573 504 (-6.7953e+151) class: Neg. norm. non-zero
; hwf : - 1339600166802573 504 (-6.7953e+151) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110111 #b0100110000100101101111111000000101010101010010001110)))
(assert (= y (fp #b1 #b01000110111 #b0011110011111011100110010001010100011010100100000101)))
(assert (= r (fp #b1 #b10111110111 #b0100110000100101101111111000000101010101010010001101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
