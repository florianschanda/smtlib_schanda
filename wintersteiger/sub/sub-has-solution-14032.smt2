(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.858134539076575553195880274870432913303375244140625p-350 {+ 3864694390419018 -350 (8.10175e-106)}
; Y = -1.033322415747809142061441889381967484951019287109375p740 {- 150070819144918 740 (-5.9763e+222)}
; 1.858134539076575553195880274870432913303375244140625p-350 - -1.033322415747809142061441889381967484951019287109375p740 == 1.0333224157478093641060468144132755696773529052734375p740
; [HW: 1.0333224157478093641060468144132755696773529052734375p740] 

; mpf : + 150070819144919 740
; mpfd: + 150070819144919 740 (5.9763e+222) class: Pos. norm. non-zero
; hwf : + 150070819144919 740 (5.9763e+222) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100001 #b1101101110101110101101001000010011100110111001001010)))
(assert (= y (fp #b1 #b11011100011 #b0000100010000111110100010101110111011100010011010110)))
(assert (= r (fp #b0 #b11011100011 #b0000100010000111110100010101110111011100010011010111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
