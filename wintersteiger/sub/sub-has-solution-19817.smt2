(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8964324515055970277188635009224526584148406982421875p466 {+ 4037172854563427 466 (3.61339e+140)}
; Y = 1.232505312743422454246911001973785459995269775390625p54 {+ 1047110839832938 54 (2.22028e+016)}
; 1.8964324515055970277188635009224526584148406982421875p466 - 1.232505312743422454246911001973785459995269775390625p54 == 1.896432451505596805674258575891144573688507080078125p466
; [HW: 1.896432451505596805674258575891144573688507080078125p466] 

; mpf : + 4037172854563426 466
; mpfd: + 4037172854563426 466 (3.61339e+140) class: Pos. norm. non-zero
; hwf : + 4037172854563426 466 (3.61339e+140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111010001 #b1110010101111100100110001101111001001010001001100011)))
(assert (= y (fp #b0 #b10000110101 #b0011101110000101011101111101101001100001000101101010)))
(assert (= r (fp #b0 #b10111010001 #b1110010101111100100110001101111001001010001001100010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
