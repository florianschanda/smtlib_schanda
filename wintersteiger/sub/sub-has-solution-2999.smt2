(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9081245276277793987418363030883483588695526123046875p507 {+ 4089829284230475 507 (7.99493e+152)}
; Y = -1.6544275742798915107556467773974873125553131103515625p-406 {- 2947279779667897 -406 (-1.00108e-122)}
; 1.9081245276277793987418363030883483588695526123046875p507 - -1.6544275742798915107556467773974873125553131103515625p-406 == 1.90812452762777962078644122811965644359588623046875p507
; [HW: 1.90812452762777962078644122811965644359588623046875p507] 

; mpf : + 4089829284230476 507
; mpfd: + 4089829284230476 507 (7.99493e+152) class: Pos. norm. non-zero
; hwf : + 4089829284230476 507 (7.99493e+152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111010 #b1110100001111010110110010101101011011011010101001011)))
(assert (= y (fp #b1 #b01001101001 #b1010011110001000100100001100010100100001111110111001)))
(assert (= r (fp #b0 #b10111111010 #b1110100001111010110110010101101011011011010101001100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
