(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9357352590919398860336286816163919866085052490234375p815 {+ 4214176964163895 815 (4.22953e+245)}
; Y = 1.6707784582426701280866154775139875710010528564453125p315 {+ 3020917614589845 315 (1.11524e+095)}
; 1.9357352590919398860336286816163919866085052490234375p815 - 1.6707784582426701280866154775139875710010528564453125p315 == 1.935735259091939663989023756585083901882171630859375p815
; [HW: 1.935735259091939663989023756585083901882171630859375p815] 

; mpf : + 4214176964163894 815
; mpfd: + 4214176964163894 815 (4.22953e+245) class: Pos. norm. non-zero
; hwf : + 4214176964163894 815 (4.22953e+245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100101110 #b1110111110001100010110001000111110000011100100110111)))
(assert (= y (fp #b0 #b10100111010 #b1010101110111000001000110001010100000011011110010101)))
(assert (= r (fp #b0 #b11100101110 #b1110111110001100010110001000111110000011100100110110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
