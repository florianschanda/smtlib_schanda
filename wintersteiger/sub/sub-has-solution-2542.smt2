(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.863802185800604416243686500820331275463104248046875p405 {+ 3890219202093422 405 (1.5401e+122)}
; Y = -1.0710028586026805186293131555430591106414794921875p450 {- 319768447545272 450 (-3.11379e+135)}
; 1.863802185800604416243686500820331275463104248046875p405 - -1.0710028586026805186293131555430591106414794921875p450 == 1.071002858602733365245285312994383275508880615234375p450
; [HW: 1.071002858602733365245285312994383275508880615234375p450] 

; mpf : + 319768447545510 450
; mpfd: + 319768447545510 450 (3.11379e+135) class: Pos. norm. non-zero
; hwf : + 319768447545510 450 (3.11379e+135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010100 #b1101110100100010001000111101101000111010000101101110)))
(assert (= y (fp #b1 #b10111000001 #b0001001000101101001111100100101110011110111110111000)))
(assert (= r (fp #b0 #b10111000001 #b0001001000101101001111100100101110011111000010100110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
