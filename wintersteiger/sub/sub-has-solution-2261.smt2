(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7306576898146601717343173731933347880840301513671875p484 {- 3290589699584691 484 (-8.64429e+145)}
; Y = -1.326235569607497222222036725725047290325164794921875p576 {- 1469234389719326 576 (-3.28018e+173)}
; -1.7306576898146601717343173731933347880840301513671875p484 - -1.326235569607497222222036725725047290325164794921875p576 == 1.3262355696074970001774318006937392055988311767578125p576
; [HW: 1.3262355696074970001774318006937392055988311767578125p576] 

; mpf : + 1469234389719325 576
; mpfd: + 1469234389719325 576 (3.28018e+173) class: Pos. norm. non-zero
; hwf : + 1469234389719325 576 (3.28018e+173) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100011 #b1011101100001100011000011110001001010011001010110011)))
(assert (= y (fp #b1 #b11000111111 #b0101001110000100001011001001111001000001100100011110)))
(assert (= r (fp #b0 #b11000111111 #b0101001110000100001011001001111001000001100100011101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
