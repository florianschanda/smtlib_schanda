(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0723544328337035747011896091862581670284271240234375p-997 {+ 325855396748471 -997 (8.00632e-301)}
; Y = 1.535518714117227290216760593466460704803466796875p364 {+ 2411761881348272 364 (5.76997e+109)}
; 1.0723544328337035747011896091862581670284271240234375p-997 - 1.535518714117227290216760593466460704803466796875p364 == -1.5355187141172270681721556684351526200771331787109375p364
; [HW: -1.5355187141172270681721556684351526200771331787109375p364] 

; mpf : - 2411761881348271 364
; mpfd: - 2411761881348271 364 (-5.76997e+109) class: Neg. norm. non-zero
; hwf : - 2411761881348271 364 (-5.76997e+109) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011010 #b0001001010000101110100011111001010111101110010110111)))
(assert (= y (fp #b0 #b10101101011 #b1000100100010111110000010010001110000111100010110000)))
(assert (= r (fp #b1 #b10101101011 #b1000100100010111110000010010001110000111100010101111)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
