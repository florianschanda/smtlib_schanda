(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.89468002972601023969900779775343835353851318359375p-783 {- 4029280648489884 -783 (-3.72434e-236)}
; Y = 1.1143887899001787555874898316687904298305511474609375p33 {+ 515161311569807 33 (9.57253e+009)}
; -1.89468002972601023969900779775343835353851318359375p-783 - 1.1143887899001787555874898316687904298305511474609375p33 == -1.1143887899001787555874898316687904298305511474609375p33
; [HW: -1.1143887899001787555874898316687904298305511474609375p33] 

; mpf : - 515161311569807 33
; mpfd: - 515161311569807 33 (-9.57253e+009) class: Neg. norm. non-zero
; hwf : - 515161311569807 33 (-9.57253e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110000 #b1110010100001001110000000001110000001110101110011100)))
(assert (= y (fp #b0 #b10000100000 #b0001110101001000100101010110111110100110011110001111)))
(assert (= r (fp #b1 #b10000100000 #b0001110101001000100101010110111110100110011110001111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
