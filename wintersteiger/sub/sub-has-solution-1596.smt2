(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1379056006435213088678892745519988238811492919921875p-529 {- 621071611670467 -529 (-6.47498e-160)}
; Y = 1.1661395353784655970486028309096582233905792236328125p-536 {+ 748225949621965 -536 (5.18409e-162)}
; -1.1379056006435213088678892745519988238811492919921875p-529 - 1.1661395353784655970486028309096582233905792236328125p-536 == -1.147016065763665437771123833954334259033203125p-529
; [HW: -1.147016065763665437771123833954334259033203125p-529] 

; mpf : - 662101498990720 -529
; mpfd: - 662101498990720 -529 (-6.52682e-160) class: Neg. norm. non-zero
; hwf : - 662101498990720 -529 (-6.52682e-160) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101110 #b0010001101001101110010000000110010110010111111000011)))
(assert (= y (fp #b0 #b00111100111 #b0010101010001000000111101101111100000101111011001101)))
(assert (= r (fp #b1 #b00111101110 #b0010010110100010110110000100101001110001000010000000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
