(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.601169139161892740474968377384357154369354248046875p-645 {+ 2707425111116142 -645 (1.09671e-194)}
; Y = 1.4854688601224903532482812806847505271434783935546875p-43 {+ 2186357377547627 -43 (1.68878e-013)}
; 1.601169139161892740474968377384357154369354248046875p-645 - 1.4854688601224903532482812806847505271434783935546875p-43 == -1.485468860122490131203676355653442442417144775390625p-43
; [HW: -1.485468860122490131203676355653442442417144775390625p-43] 

; mpf : - 2186357377547626 -43
; mpfd: - 2186357377547626 -43 (-1.68878e-013) class: Neg. norm. non-zero
; hwf : - 2186357377547626 -43 (-1.68878e-013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111010 #b1001100111100110001110001000000000010000100101101110)))
(assert (= y (fp #b0 #b01111010100 #b0111110001000111101011111110110101110011110101101011)))
(assert (= r (fp #b1 #b01111010100 #b0111110001000111101011111110110101110011110101101010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
