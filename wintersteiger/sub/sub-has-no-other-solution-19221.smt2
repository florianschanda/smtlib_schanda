(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6246854492632980537791809183545410633087158203125p33 {- 2813333156525960 33 (-1.39559e+010)}
; Y = -1.5230001466373519480868026221287436783313751220703125p-396 {- 2355383265510693 -396 (-9.43673e-120)}
; -1.6246854492632980537791809183545410633087158203125p33 - -1.5230001466373519480868026221287436783313751220703125p-396 == -1.6246854492632978317345759933232329785823822021484375p33
; [HW: -1.6246854492632978317345759933232329785823822021484375p33] 

; mpf : - 2813333156525959 33
; mpfd: - 2813333156525959 33 (-1.39559e+010) class: Neg. norm. non-zero
; hwf : - 2813333156525959 33 (-1.39559e+010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100000 #b1001111111101011011000101011011011011111011110001000)))
(assert (= y (fp #b1 #b01001110011 #b1000010111100011010101100110110110011100010100100101)))
(assert (= r (fp #b1 #b10000100000 #b1001111111101011011000101011011011011111011110000111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
