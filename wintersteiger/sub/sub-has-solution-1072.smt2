(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2222538154808531007944338853121735155582427978515625p-447 {+ 1000942200581241 -447 (3.3632e-135)}
; Y = -1.7527090202064001811521620766143314540386199951171875p-143 {- 3389900062919955 -143 (-1.57188e-043)}
; 1.2222538154808531007944338853121735155582427978515625p-447 - -1.7527090202064001811521620766143314540386199951171875p-143 == 1.7527090202064001811521620766143314540386199951171875p-143
; [HW: 1.7527090202064001811521620766143314540386199951171875p-143] 

; mpf : + 3389900062919955 -143
; mpfd: + 3389900062919955 -143 (1.57188e-043) class: Pos. norm. non-zero
; hwf : + 3389900062919955 -143 (1.57188e-043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001000000 #b0011100011100101101000000100010011100110110001111001)))
(assert (= y (fp #b1 #b01101110000 #b1100000010110001100010011101000100110000110100010011)))
(assert (= r (fp #b0 #b01101110000 #b1100000010110001100010011101000100110000110100010011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
