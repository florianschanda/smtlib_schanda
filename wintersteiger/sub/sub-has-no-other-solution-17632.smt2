(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8149483326166471197637974910321645438671112060546875p575 {- 3670201007098539 575 (-2.24446e+173)}
; Y = 1.99332265604702119077273891889490187168121337890625p-957 {+ 4473527543632036 -957 (1.63633e-288)}
; -1.8149483326166471197637974910321645438671112060546875p575 - 1.99332265604702119077273891889490187168121337890625p-957 == -1.8149483326166471197637974910321645438671112060546875p575
; [HW: -1.8149483326166471197637974910321645438671112060546875p575] 

; mpf : - 3670201007098539 575
; mpfd: - 3670201007098539 575 (-2.24446e+173) class: Neg. norm. non-zero
; hwf : - 3670201007098539 575 (-2.24446e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000111110 #b1101000010100000011101000011010010000100101010101011)))
(assert (= y (fp #b0 #b00001000010 #b1111111001001010011001001100001000011001000010100100)))
(assert (= r (fp #b1 #b11000111110 #b1101000010100000011101000011010010000100101010101011)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
