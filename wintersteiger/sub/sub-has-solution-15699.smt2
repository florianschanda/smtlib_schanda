(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.2985168647434190969391920589259825646877288818359375p-1022 {+ 1344400440822271 -1023 (6.64222e-309)}
; Y = -1.687939119179739488885161335929296910762786865234375p-288 {- 3098202360791462 -288 (-3.39405e-087)}
; 0.2985168647434190969391920589259825646877288818359375p-1022 - -1.687939119179739488885161335929296910762786865234375p-288 == 1.687939119179739488885161335929296910762786865234375p-288
; [HW: 1.687939119179739488885161335929296910762786865234375p-288] 

; mpf : + 3098202360791462 -288
; mpfd: + 3098202360791462 -288 (3.39405e-087) class: Pos. norm. non-zero
; hwf : + 3098202360791462 -288 (3.39405e-087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0100110001101011100110011110101101100000100111111111)))
(assert (= y (fp #b1 #b01011011111 #b1011000000011100110001110011001010000100000110100110)))
(assert (= r (fp #b0 #b01011011111 #b1011000000011100110001110011001010000100000110100110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
