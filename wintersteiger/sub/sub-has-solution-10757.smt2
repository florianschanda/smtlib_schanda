(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.847973996148150721552383402013219892978668212890625p-483 {- 3818935373072682 -483 (-7.39959e-146)}
; Y = 1.9376996556580230457456082149292342364788055419921875p522 {+ 4223023819806915 522 (2.66038e+157)}
; -1.847973996148150721552383402013219892978668212890625p-483 - 1.9376996556580230457456082149292342364788055419921875p522 == -1.93769965565802326779021313996054232120513916015625p522
; [HW: -1.93769965565802326779021313996054232120513916015625p522] 

; mpf : - 4223023819806916 522
; mpfd: - 4223023819806916 522 (-2.66038e+157) class: Neg. norm. non-zero
; hwf : - 4223023819806916 522 (-2.66038e+157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011100 #b1101100100010100110100101110010101010000100100101010)))
(assert (= y (fp #b0 #b11000001001 #b1111000000001101000101011010101010000101100011000011)))
(assert (= r (fp #b1 #b11000001001 #b1111000000001101000101011010101010000101100011000100)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
