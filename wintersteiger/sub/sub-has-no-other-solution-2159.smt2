(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.513481587113331361393875340581871569156646728515625p909 {+ 2312515484385210 909 (6.55003e+273)}
; Y = 1.9051355515790593386782347806729376316070556640625p280 {+ 4076368132811240 280 (3.70105e+084)}
; 1.513481587113331361393875340581871569156646728515625p909 - 1.9051355515790593386782347806729376316070556640625p280 == 1.513481587113331361393875340581871569156646728515625p909
; [HW: 1.513481587113331361393875340581871569156646728515625p909] 

; mpf : + 2312515484385210 909
; mpfd: + 2312515484385210 909 (6.55003e+273) class: Pos. norm. non-zero
; hwf : + 2312515484385210 909 (6.55003e+273) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001100 #b1000001101110011100001110111111110111111111110111010)))
(assert (= y (fp #b0 #b10100010111 #b1110011110110110111101101010100001111010100111101000)))
(assert (= r (fp #b0 #b11110001100 #b1000001101110011100001110111111110111111111110111010)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
