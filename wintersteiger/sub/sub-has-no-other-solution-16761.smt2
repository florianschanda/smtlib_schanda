(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1462276374426310088239233664353378117084503173828125p-244 {- 658550733497901 -244 (-4.05464e-074)}
; Y = -1.1439985193715307421058469117269851267337799072265625p305 {- 648511678183529 305 (-7.45717e+091)}
; -1.1462276374426310088239233664353378117084503173828125p-244 - -1.1439985193715307421058469117269851267337799072265625p305 == 1.1439985193715307421058469117269851267337799072265625p305
; [HW: 1.1439985193715307421058469117269851267337799072265625p305] 

; mpf : + 648511678183529 305
; mpfd: + 648511678183529 305 (7.45717e+091) class: Pos. norm. non-zero
; hwf : + 648511678183529 305 (7.45717e+091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100001011 #b0010010101101111001011001010100010010110011000101101)))
(assert (= y (fp #b1 #b10100110000 #b0010010011011101000101100100001101011111100001101001)))
(assert (= r (fp #b0 #b10100110000 #b0010010011011101000101100100001101011111100001101001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
