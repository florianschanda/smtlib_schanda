(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3730565455390191242912578672985546290874481201171875p-57 {+ 1680097319477651 -57 (9.52749e-018)}
; Y = -1.7693159857429758829994170810095965862274169921875p-982 {- 3464691186722232 -982 (-4.32862e-296)}
; 1.3730565455390191242912578672985546290874481201171875p-57 - -1.7693159857429758829994170810095965862274169921875p-982 == 1.3730565455390191242912578672985546290874481201171875p-57
; [HW: 1.3730565455390191242912578672985546290874481201171875p-57] 

; mpf : + 1680097319477651 -57
; mpfd: + 1680097319477651 -57 (9.52749e-018) class: Pos. norm. non-zero
; hwf : + 1680097319477651 -57 (9.52749e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000110 #b0101111110000000101000100011111010100110000110010011)))
(assert (= y (fp #b1 #b00000101001 #b1100010011110001111001000111011100001110010110111000)))
(assert (= r (fp #b0 #b01111000110 #b0101111110000000101000100011111010100110000110010011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
