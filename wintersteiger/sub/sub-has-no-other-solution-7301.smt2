(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4953382270590356295514311568695120513439178466796875p95 {+ 2230805054805435 95 (5.92365e+028)}
; Y = 1.4027285381209164683014023466967046260833740234375p-777 {+ 1813728094212824 -777 (1.76468e-234)}
; 1.4953382270590356295514311568695120513439178466796875p95 - 1.4027285381209164683014023466967046260833740234375p-777 == 1.4953382270590356295514311568695120513439178466796875p95
; [HW: 1.4953382270590356295514311568695120513439178466796875p95] 

; mpf : + 2230805054805435 95
; mpfd: + 2230805054805435 95 (5.92365e+028) class: Pos. norm. non-zero
; hwf : + 2230805054805435 95 (5.92365e+028) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011110 #b0111111011001110011111000110110110101101010110111011)))
(assert (= y (fp #b0 #b00011110110 #b0110011100011001001101111010110001100101001011011000)))
(assert (= r (fp #b0 #b10001011110 #b0111111011001110011111000110110110101101010110111011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
