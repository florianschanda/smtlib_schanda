(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.26636311236011156466929605812765657901763916015625p874 {+ 1199592813570244 874 (1.59505e+263)}
; Y = -1.9407709610084349360903388514998368918895721435546875p-647 {- 4236855749438571 -647 (-3.32328e-195)}
; 1.26636311236011156466929605812765657901763916015625p874 - -1.9407709610084349360903388514998368918895721435546875p-647 == 1.26636311236011156466929605812765657901763916015625p874
; [HW: 1.26636311236011156466929605812765657901763916015625p874] 

; mpf : + 1199592813570244 874
; mpfd: + 1199592813570244 874 (1.59505e+263) class: Pos. norm. non-zero
; hwf : + 1199592813570244 874 (1.59505e+263) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101001 #b0100010000110000010111110111100001110010100011000100)))
(assert (= y (fp #b1 #b00101111000 #b1111000011010110010111011001111010001110110001101011)))
(assert (= r (fp #b0 #b11101101001 #b0100010000110000010111110111100001110010100011000100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
