(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.014856395680098000156021953443996608257293701171875p-878 {- 66907258048958 -878 (-5.0358e-265)}
; Y = -1.476052101833165153266236302442848682403564453125p695 {- 2143948068424784 695 (-2.42632e+209)}
; -1.014856395680098000156021953443996608257293701171875p-878 - -1.476052101833165153266236302442848682403564453125p695 == 1.4760521018331649312216313774115405976772308349609375p695
; [HW: 1.4760521018331649312216313774115405976772308349609375p695] 

; mpf : + 2143948068424783 695
; mpfd: + 2143948068424783 695 (2.42632e+209) class: Pos. norm. non-zero
; hwf : + 2143948068424783 695 (2.42632e+209) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010010001 #b0000001111001101101000001111010110010101000110111110)))
(assert (= y (fp #b1 #b11010110110 #b0111100111011110100011001111000010010000110001010000)))
(assert (= r (fp #b0 #b11010110110 #b0111100111011110100011001111000010010000110001001111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
