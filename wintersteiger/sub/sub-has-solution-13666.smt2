(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0790167947755906485696186791756190359592437744140625p-640 {- 355860007507361 -640 (-2.365e-193)}
; Y = -1.993378533119182893784682164550758898258209228515625p-405 {- 4473779191593402 -405 (-2.41236e-122)}
; -1.0790167947755906485696186791756190359592437744140625p-640 - -1.993378533119182893784682164550758898258209228515625p-405 == 1.9933785331191826717400772395194508135318756103515625p-405
; [HW: 1.9933785331191826717400772395194508135318756103515625p-405] 

; mpf : + 4473779191593401 -405
; mpfd: + 4473779191593401 -405 (2.41236e-122) class: Pos. norm. non-zero
; hwf : + 4473779191593401 -405 (2.41236e-122) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111111 #b0001010000111010011100011101010101100101010110100001)))
(assert (= y (fp #b1 #b01001101010 #b1111111001001110000011100011100001001011100110111010)))
(assert (= r (fp #b0 #b01001101010 #b1111111001001110000011100011100001001011100110111001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
