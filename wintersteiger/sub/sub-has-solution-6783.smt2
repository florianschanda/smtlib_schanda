(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.580648222851365414243218765477649867534637451171875p91 {+ 2615007120066750 91 (3.9135e+027)}
; Y = -1.9594733068220346883236970825237222015857696533203125p209 {- 4321083627075653 209 (-1.61216e+063)}
; 1.580648222851365414243218765477649867534637451171875p91 - -1.9594733068220346883236970825237222015857696533203125p209 == 1.959473306822034910368302007555030286312103271484375p209
; [HW: 1.959473306822034910368302007555030286312103271484375p209] 

; mpf : + 4321083627075654 209
; mpfd: + 4321083627075654 209 (1.61216e+063) class: Pos. norm. non-zero
; hwf : + 4321083627075654 209 (1.61216e+063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011010 #b1001010010100101010111001010011110100000100010111110)))
(assert (= y (fp #b1 #b10011010000 #b1111010110100000000010101110101000101111100001000101)))
(assert (= r (fp #b0 #b10011010000 #b1111010110100000000010101110101000101111100001000110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
