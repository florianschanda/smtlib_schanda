(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.896761588393843123157012087176553905010223388671875p448 {- 4038655155330686 448 (-1.37864e+135)}
; Y = -1.898355447278015528667083344771526753902435302734375p-880 {- 4045833257607526 -880 (-2.35495e-265)}
; -1.896761588393843123157012087176553905010223388671875p448 - -1.898355447278015528667083344771526753902435302734375p-880 == -1.896761588393843123157012087176553905010223388671875p448
; [HW: -1.896761588393843123157012087176553905010223388671875p448] 

; mpf : - 4038655155330686 448
; mpfd: - 4038655155330686 448 (-1.37864e+135) class: Neg. norm. non-zero
; hwf : - 4038655155330686 448 (-1.37864e+135) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111111 #b1110010110010010001010101101111001110101111001111110)))
(assert (= y (fp #b1 #b00010001111 #b1110010111111010100111110110001000111110000101100110)))
(assert (= r (fp #b1 #b10110111111 #b1110010110010010001010101101111001110101111001111110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
