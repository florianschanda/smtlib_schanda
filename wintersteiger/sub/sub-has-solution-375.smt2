(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7241519237503302175440467181033454835414886474609375p-311 {- 3261290333961615 -311 (-4.13282e-094)}
; Y = 1.70924190087568472762313831481151282787322998046875p596 {+ 3194141560499276 596 (4.43283e+179)}
; -1.7241519237503302175440467181033454835414886474609375p-311 - 1.70924190087568472762313831481151282787322998046875p596 == -1.70924190087568472762313831481151282787322998046875p596
; [HW: -1.70924190087568472762313831481151282787322998046875p596] 

; mpf : - 3194141560499276 596
; mpfd: - 3194141560499276 596 (-4.43283e+179) class: Neg. norm. non-zero
; hwf : - 3194141560499276 596 (-4.43283e+179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011001000 #b1011100101100010000001010011110111010111110110001111)))
(assert (= y (fp #b0 #b11001010011 #b1011010110010000111000001001000100110110110001001100)))
(assert (= r (fp #b1 #b11001010011 #b1011010110010000111000001001000100110110110001001100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
