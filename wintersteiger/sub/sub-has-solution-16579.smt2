(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.132137911252556250474299304187297821044921875p961 {+ 595096247878528 961 (2.20661e+289)}
; Y = -1.04629119940579062841834456776268780231475830078125p-645 {- 208477028394452 -645 (-7.16647e-195)}
; 1.132137911252556250474299304187297821044921875p961 - -1.04629119940579062841834456776268780231475830078125p-645 == 1.132137911252556250474299304187297821044921875p961
; [HW: 1.132137911252556250474299304187297821044921875p961] 

; mpf : + 595096247878528 961
; mpfd: + 595096247878528 961 (2.20661e+289) class: Pos. norm. non-zero
; hwf : + 595096247878528 961 (2.20661e+289) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111000000 #b0010000111010011110010100100011101100100001110000000)))
(assert (= y (fp #b1 #b00101111010 #b0000101111011001101111010111001110001010010111010100)))
(assert (= r (fp #b0 #b11111000000 #b0010000111010011110010100100011101100100001110000000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
