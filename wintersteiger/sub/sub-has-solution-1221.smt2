(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.10391925994401329802485633990727365016937255859375p774 {+ 468010740360476 774 (1.09687e+233)}
; Y = 1.8778003279919606161030287694302387535572052001953125p124 {+ 3953261230050293 124 (3.99364e+037)}
; 1.10391925994401329802485633990727365016937255859375p774 - 1.8778003279919606161030287694302387535572052001953125p124 == 1.1039192599440130759802514148759655654430389404296875p774
; [HW: 1.1039192599440130759802514148759655654430389404296875p774] 

; mpf : + 468010740360475 774
; mpfd: + 468010740360475 774 (1.09687e+233) class: Pos. norm. non-zero
; hwf : + 468010740360475 774 (1.09687e+233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100000101 #b0001101010011010011100111101111011100010010100011100)))
(assert (= y (fp #b0 #b10001111011 #b1110000010110111100001011011010100100100101111110101)))
(assert (= r (fp #b0 #b11100000101 #b0001101010011010011100111101111011100010010100011011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
