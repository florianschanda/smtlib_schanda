(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5372924604333653153531713542179204523563385009765625p896 {+ 2419750124596681 896 (8.12143e+269)}
; Y = -1.2745488274218956803451874293386936187744140625p-137 {- 1236457996872256 -137 (-7.31555e-042)}
; 1.5372924604333653153531713542179204523563385009765625p896 - -1.2745488274218956803451874293386936187744140625p-137 == 1.5372924604333653153531713542179204523563385009765625p896
; [HW: 1.5372924604333653153531713542179204523563385009765625p896] 

; mpf : + 2419750124596681 896
; mpfd: + 2419750124596681 896 (8.12143e+269) class: Pos. norm. non-zero
; hwf : + 2419750124596681 896 (8.12143e+269) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111111 #b1000100110001011111111111010100111110010110111001001)))
(assert (= y (fp #b1 #b01101110110 #b0100011001001000110101001111101011101110101001000000)))
(assert (= r (fp #b0 #b11101111111 #b1000100110001011111111111010100111110010110111001001)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
