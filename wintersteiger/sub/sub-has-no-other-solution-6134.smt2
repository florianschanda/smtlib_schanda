(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3243255023646034462814213839010335505008697509765625p898 {+ 1460632211595977 898 (2.79854e+270)}
; Y = -1.062753185997568738940799448755569756031036376953125p-467 {- 282615225074962 -467 (-2.78885e-141)}
; 1.3243255023646034462814213839010335505008697509765625p898 - -1.062753185997568738940799448755569756031036376953125p-467 == 1.3243255023646034462814213839010335505008697509765625p898
; [HW: 1.3243255023646034462814213839010335505008697509765625p898] 

; mpf : + 1460632211595977 898
; mpfd: + 1460632211595977 898 (2.79854e+270) class: Pos. norm. non-zero
; hwf : + 1460632211595977 898 (2.79854e+270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000001 #b0101001100000110111111110000000111101010001011001001)))
(assert (= y (fp #b1 #b01000101100 #b0001000000010000100101111100000110010100010100010010)))
(assert (= r (fp #b0 #b11110000001 #b0101001100000110111111110000000111101010001011001001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
