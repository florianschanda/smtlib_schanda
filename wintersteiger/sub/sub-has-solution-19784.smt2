(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6962482287537621328254999752971343696117401123046875p-877 {- 3135623263572811 -877 (-1.68338e-264)}
; Y = -1.4097273716125637843532558690640144050121307373046875p186 {- 1845248038117835 186 (-1.38266e+056)}
; -1.6962482287537621328254999752971343696117401123046875p-877 - -1.4097273716125637843532558690640144050121307373046875p186 == 1.409727371612563562308650944032706320285797119140625p186
; [HW: 1.409727371612563562308650944032706320285797119140625p186] 

; mpf : + 1845248038117834 186
; mpfd: + 1845248038117834 186 (1.38266e+056) class: Pos. norm. non-zero
; hwf : + 1845248038117834 186 (1.38266e+056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010010010 #b1011001000111101010100101110110001100101001101001011)))
(assert (= y (fp #b1 #b10010111001 #b0110100011100011111001001001110101011010000111001011)))
(assert (= r (fp #b0 #b10010111001 #b0110100011100011111001001001110101011010000111001010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
