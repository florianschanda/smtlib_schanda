(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9683860044435517178129657622775994241237640380859375p-673 {- 4361222848762783 -673 (-5.02254e-203)}
; Y = -1.0527868657917969219539600089774467051029205322265625p995 {- 237730909109993 995 (-3.52522e+299)}
; -1.9683860044435517178129657622775994241237640380859375p-673 - -1.0527868657917969219539600089774467051029205322265625p995 == 1.0527868657917966999093550839461386203765869140625p995
; [HW: 1.0527868657917966999093550839461386203765869140625p995] 

; mpf : + 237730909109992 995
; mpfd: + 237730909109992 995 (3.52522e+299) class: Pos. norm. non-zero
; hwf : + 237730909109992 995 (3.52522e+299) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101011110 #b1111011111101000001001010010101011111101001110011111)))
(assert (= y (fp #b1 #b11111100010 #b0000110110000011011100001010011000111011111011101001)))
(assert (= r (fp #b0 #b11111100010 #b0000110110000011011100001010011000111011111011101000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
