(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.389004256040762275148381377221085131168365478515625p385 {+ 1751919422550714 385 (1.09459e+116)}
; Y = -1.5639504799364736253863839010591618716716766357421875p-502 {- 2539807171297315 -502 (-1.19444e-151)}
; 1.389004256040762275148381377221085131168365478515625p385 - -1.5639504799364736253863839010591618716716766357421875p-502 == 1.389004256040762275148381377221085131168365478515625p385
; [HW: 1.389004256040762275148381377221085131168365478515625p385] 

; mpf : + 1751919422550714 385
; mpfd: + 1751919422550714 385 (1.09459e+116) class: Pos. norm. non-zero
; hwf : + 1751919422550714 385 (1.09459e+116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000000 #b0110001110010101110010000110110110110011001010111010)))
(assert (= y (fp #b1 #b01000001001 #b1001000001011111000011110000001111100100000000100011)))
(assert (= r (fp #b0 #b10110000000 #b0110001110010101110010000110110110110011001010111010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
