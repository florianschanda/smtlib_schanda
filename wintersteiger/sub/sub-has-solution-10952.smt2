(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6795034640102930456606600273516960442066192626953125p24 {+ 3060211547313717 24 (2.81774e+007)}
; Y = -1.8257994554233045736424401184194721281528472900390625p882 {- 3719070119727153 882 (-5.88721e+265)}
; 1.6795034640102930456606600273516960442066192626953125p24 - -1.8257994554233045736424401184194721281528472900390625p882 == 1.8257994554233045736424401184194721281528472900390625p882
; [HW: 1.8257994554233045736424401184194721281528472900390625p882] 

; mpf : + 3719070119727153 882
; mpfd: + 3719070119727153 882 (5.88721e+265) class: Pos. norm. non-zero
; hwf : + 3719070119727153 882 (5.88721e+265) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010111 #b1010110111110011111100000110001101110001011000110101)))
(assert (= y (fp #b1 #b11101110001 #b1101001101100111100101111101011000011001000000110001)))
(assert (= r (fp #b0 #b11101110001 #b1101001101100111100101111101011000011001000000110001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
