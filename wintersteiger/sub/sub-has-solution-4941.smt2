(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.98970123097633244668713814462535083293914794921875p-268 {- 4457218095033132 -268 (-4.19516e-081)}
; Y = 1.1411196785237318618300150774302892386913299560546875p-655 {+ 635546531614123 -655 (7.6328e-198)}
; -1.98970123097633244668713814462535083293914794921875p-268 - 1.1411196785237318618300150774302892386913299560546875p-655 == -1.98970123097633244668713814462535083293914794921875p-268
; [HW: -1.98970123097633244668713814462535083293914794921875p-268] 

; mpf : - 4457218095033132 -268
; mpfd: - 4457218095033132 -268 (-4.19516e-081) class: Neg. norm. non-zero
; hwf : - 4457218095033132 -268 (-4.19516e-081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011110011 #b1111110101011101000011110101001111011010101100101100)))
(assert (= y (fp #b0 #b00101110000 #b0010010000100000011010110101010000010100110110101011)))
(assert (= r (fp #b1 #b01011110011 #b1111110101011101000011110101001111011010101100101100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
