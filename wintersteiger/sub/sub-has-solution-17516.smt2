(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3650264988352593942266821613884530961513519287109375p-913 {- 1643933204134831 -913 (-1.97131e-275)}
; Y = -1.968934962973549307463372315396554768085479736328125p-289 {- 4363695138193922 -289 (-1.97953e-087)}
; -1.3650264988352593942266821613884530961513519287109375p-913 - -1.968934962973549307463372315396554768085479736328125p-289 == 1.968934962973549307463372315396554768085479736328125p-289
; [HW: 1.968934962973549307463372315396554768085479736328125p-289] 

; mpf : + 4363695138193922 -289
; mpfd: + 4363695138193922 -289 (1.97953e-087) class: Pos. norm. non-zero
; hwf : + 4363695138193922 -289 (1.97953e-087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101110 #b0101110101110010011000000110101010101011101110101111)))
(assert (= y (fp #b1 #b01011011110 #b1111100000001100000111110010100111101100001000000010)))
(assert (= r (fp #b0 #b01011011110 #b1111100000001100000111110010100111101100001000000010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
