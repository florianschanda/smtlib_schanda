(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5695503793294520722412244140286929905414581298828125p-411 {+ 2565026876116845 -411 (2.96788e-124)}
; Y = -1.5946962135357745093955372794880531728267669677734375p699 {- 2678273645678359 699 (-4.19416e+210)}
; 1.5695503793294520722412244140286929905414581298828125p-411 - -1.5946962135357745093955372794880531728267669677734375p699 == 1.5946962135357747314401422045193612575531005859375p699
; [HW: 1.5946962135357747314401422045193612575531005859375p699] 

; mpf : + 2678273645678360 699
; mpfd: + 2678273645678360 699 (4.19416e+210) class: Pos. norm. non-zero
; hwf : + 2678273645678360 699 (4.19416e+210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100100 #b1001000111001110000011011011110010100100111101101101)))
(assert (= y (fp #b1 #b11010111010 #b1001100000111110000000101101010000110000111100010111)))
(assert (= r (fp #b0 #b11010111010 #b1001100000111110000000101101010000110000111100011000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
