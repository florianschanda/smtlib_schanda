(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.376020091151551216768211816088296473026275634765625p-109 {+ 1693443942393946 -109 (2.12009e-033)}
; Y = 1.65301918580221940402452673879452049732208251953125p-347 {+ 2940936961844660 -347 (5.76593e-105)}
; 1.376020091151551216768211816088296473026275634765625p-109 - 1.65301918580221940402452673879452049732208251953125p-347 == 1.376020091151551216768211816088296473026275634765625p-109
; [HW: 1.376020091151551216768211816088296473026275634765625p-109] 

; mpf : + 1693443942393946 -109
; mpfd: + 1693443942393946 -109 (2.12009e-033) class: Pos. norm. non-zero
; hwf : + 1693443942393946 -109 (2.12009e-033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010010 #b0110000001000010110110100100101000100010100001011010)))
(assert (= y (fp #b0 #b01010100100 #b1010011100101100010000111110111010101110010110110100)))
(assert (= r (fp #b0 #b01110010010 #b0110000001000010110110100100101000100010100001011010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
