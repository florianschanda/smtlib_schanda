(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.02080314469557453804782198858447372913360595703125p-91 {- 93689034699124 -91 (-4.12299e-028)}
; Y = 1.979324516319262539099099740269593894481658935546875p-908 {+ 4410485526770222 -908 (9.14705e-274)}
; -1.02080314469557453804782198858447372913360595703125p-91 - 1.979324516319262539099099740269593894481658935546875p-908 == -1.02080314469557453804782198858447372913360595703125p-91
; [HW: -1.02080314469557453804782198858447372913360595703125p-91] 

; mpf : - 93689034699124 -91
; mpfd: - 93689034699124 -91 (-4.12299e-028) class: Neg. norm. non-zero
; hwf : - 93689034699124 -91 (-4.12299e-028) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100100 #b0000010101010011010110101101101000011111000101110100)))
(assert (= y (fp #b0 #b00001110011 #b1111101010110101000000101111000111000011001000101110)))
(assert (= r (fp #b1 #b01110100100 #b0000010101010011010110101101101000011111000101110100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
