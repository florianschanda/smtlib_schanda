(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.47478329270841612697040545754134654998779296875p-173 {+ 2138233860123360 -173 (1.2318e-052)}
; Y = -1.68483003637976036515055966447107493877410888671875p-375 {- 3084200296652012 -375 (-2.18931e-113)}
; 1.47478329270841612697040545754134654998779296875p-173 - -1.68483003637976036515055966447107493877410888671875p-375 == 1.4747832927084163490150103825726546347141265869140625p-173
; [HW: 1.4747832927084163490150103825726546347141265869140625p-173] 

; mpf : + 2138233860123361 -173
; mpfd: + 2138233860123361 -173 (1.2318e-052) class: Pos. norm. non-zero
; hwf : + 2138233860123361 -173 (1.2318e-052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010010 #b0111100110001011011001011101101011011110101011100000)))
(assert (= y (fp #b1 #b01010001000 #b1010111101010001000001010111000110010001110011101100)))
(assert (= r (fp #b0 #b01101010010 #b0111100110001011011001011101101011011110101011100001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
