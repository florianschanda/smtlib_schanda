(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.895109235225545862846274758339859545230865478515625p-671 {- 4031213618217658 -671 (-1.93423e-202)}
; Y = 1.6070799626303056140130820494960062205791473388671875p-816 {+ 2734045093485939 -816 (3.67757e-246)}
; -1.895109235225545862846274758339859545230865478515625p-671 - 1.6070799626303056140130820494960062205791473388671875p-816 == -1.895109235225545862846274758339859545230865478515625p-671
; [HW: -1.895109235225545862846274758339859545230865478515625p-671] 

; mpf : - 4031213618217658 -671
; mpfd: - 4031213618217658 -671 (-1.93423e-202) class: Neg. norm. non-zero
; hwf : - 4031213618217658 -671 (-1.93423e-202) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100000 #b1110010100100101111000001111101110100100001010111010)))
(assert (= y (fp #b0 #b00011001111 #b1001101101101001100101111010100110001101110101110011)))
(assert (= r (fp #b1 #b00101100000 #b1110010100100101111000001111101110100100001010111010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
