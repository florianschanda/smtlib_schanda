(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0224192763231305658422343185520730912685394287109375p648 {+ 100967444494767 648 (1.19417e+195)}
; Y = -1.3986892928030076888035182491876184940338134765625p280 {- 1795536950504232 280 (-2.71719e+084)}
; 1.0224192763231305658422343185520730912685394287109375p648 - -1.3986892928030076888035182491876184940338134765625p280 == 1.0224192763231305658422343185520730912685394287109375p648
; [HW: 1.0224192763231305658422343185520730912685394287109375p648] 

; mpf : + 100967444494767 648
; mpfd: + 100967444494767 648 (1.19417e+195) class: Pos. norm. non-zero
; hwf : + 100967444494767 648 (1.19417e+195) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010000111 #b0000010110111101010001010000101010011011100110101111)))
(assert (= y (fp #b1 #b10100010111 #b0110011000010000100000000110000111011010101100101000)))
(assert (= r (fp #b0 #b11010000111 #b0000010110111101010001010000101010011011100110101111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
