(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5001486658426557152523628246854059398174285888671875p-81 {- 2252469345118835 -81 (-6.20447e-025)}
; Y = 1.99636598661175579394466694793663918972015380859375p11 {+ 4487233486029340 11 (4088.56)}
; -1.5001486658426557152523628246854059398174285888671875p-81 - 1.99636598661175579394466694793663918972015380859375p11 == -1.99636598661175579394466694793663918972015380859375p11
; [HW: -1.99636598661175579394466694793663918972015380859375p11] 

; mpf : - 4487233486029340 11
; mpfd: - 4487233486029340 11 (-4088.56) class: Neg. norm. non-zero
; hwf : - 4487233486029340 11 (-4088.56) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101110 #b1000000000001001101111100011001011101110101001110011)))
(assert (= y (fp #b0 #b10000001010 #b1111111100010001110101110101111101011000001000011100)))
(assert (= r (fp #b1 #b10000001010 #b1111111100010001110101110101111101011000001000011100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
