(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8411055196399015443375901668332517147064208984375p939 {+ 3788002504829528 939 (8.55548e+282)}
; Y = 1.457624996225957314521792795858345925807952880859375p-564 {+ 2060959762478646 -564 (2.41395e-170)}
; 1.8411055196399015443375901668332517147064208984375p939 - 1.457624996225957314521792795858345925807952880859375p-564 == 1.8411055196399015443375901668332517147064208984375p939
; [HW: 1.8411055196399015443375901668332517147064208984375p939] 

; mpf : + 3788002504829528 939
; mpfd: + 3788002504829528 939 (8.55548e+282) class: Pos. norm. non-zero
; hwf : + 3788002504829528 939 (8.55548e+282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101010 #b1101011101010010101100001111101101010110101001011000)))
(assert (= y (fp #b0 #b00111001011 #b0111010100100110111010010110100010011111011000110110)))
(assert (= r (fp #b0 #b11110101010 #b1101011101010010101100001111101101010110101001011000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
