(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.463246657779628367990198967163451015949249267578125p-1022 {+ 2086277475356962 -1023 (1.03076e-308)}
; Y = 1.0041890593599014369630140208755619823932647705078125p768 {+ 18865846172285 768 (1.55902e+231)}
; 0.463246657779628367990198967163451015949249267578125p-1022 - 1.0041890593599014369630140208755619823932647705078125p768 == -1.00418905935990121491840909584425389766693115234375p768
; [HW: -1.00418905935990121491840909584425389766693115234375p768] 

; mpf : - 18865846172284 768
; mpfd: - 18865846172284 768 (-1.55902e+231) class: Neg. norm. non-zero
; hwf : - 18865846172284 768 (-1.55902e+231) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0111011010010111010101010011110100100101000100100010)))
(assert (= y (fp #b0 #b11011111111 #b0000000100010010100010001100000011110011101001111101)))
(assert (= r (fp #b1 #b11011111111 #b0000000100010010100010001100000011110011101001111100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
