(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.77485596348293928059547397424466907978057861328125p-836 {- 3489641028407572 -836 (-3.87335e-252)}
; Y = 1.213738768956090563477800969849340617656707763671875p575 {+ 962593840225278 575 (1.50097e+173)}
; -1.77485596348293928059547397424466907978057861328125p-836 - 1.213738768956090563477800969849340617656707763671875p575 == -1.213738768956090563477800969849340617656707763671875p575
; [HW: -1.213738768956090563477800969849340617656707763671875p575] 

; mpf : - 962593840225278 575
; mpfd: - 962593840225278 575 (-1.50097e+173) class: Neg. norm. non-zero
; hwf : - 962593840225278 575 (-1.50097e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010111011 #b1100011001011100111101011101111001000101000100010100)))
(assert (= y (fp #b0 #b11000111110 #b0011011010110111100101010111111010001101101111111110)))
(assert (= r (fp #b1 #b11000111110 #b0011011010110111100101010111111010001101101111111110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
