(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.771350399770055705772620058269239962100982666015625p55 {- 3473853372976506 55 (-6.38196e+016)}
; Y = -1.9816368283545322537264610218699090182781219482421875p49 {- 4420899254390627 49 (-1.11556e+015)}
; -1.771350399770055705772620058269239962100982666015625p55 - -1.9816368283545322537264610218699090182781219482421875p49 == -1.7403873243270162607387874231790192425251007080078125p55
; [HW: -1.7403873243270162607387874231790192425251007080078125p55] 

; mpf : - 3334408077948989 55
; mpfd: - 3334408077948989 55 (-6.27041e+016) class: Neg. norm. non-zero
; hwf : - 3334408077948989 55 (-6.27041e+016) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000110110 #b1100010101110111001110000100010011000100110101111010)))
(assert (= y (fp #b1 #b10000110000 #b1111101101001100100011010001101001010100111101100011)))
(assert (= r (fp #b1 #b10000110110 #b1011110110001010000001100001000001011011100000111101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
