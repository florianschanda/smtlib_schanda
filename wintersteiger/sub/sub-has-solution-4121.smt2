(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1221082012777501279998659811099059879779815673828125p-887 {- 549926449773357 -887 (-1.0875e-267)}
; Y = 1.3069542406795735534075220130034722387790679931640625p-700 {+ 1382399003944321 -700 (2.48464e-211)}
; -1.1221082012777501279998659811099059879779815673828125p-887 - 1.3069542406795735534075220130034722387790679931640625p-700 == -1.3069542406795735534075220130034722387790679931640625p-700
; [HW: -1.3069542406795735534075220130034722387790679931640625p-700] 

; mpf : - 1382399003944321 -700
; mpfd: - 1382399003944321 -700 (-2.48464e-211) class: Neg. norm. non-zero
; hwf : - 1382399003944321 -700 (-2.48464e-211) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001000 #b0001111101000010011110111010101100001111101100101101)))
(assert (= y (fp #b0 #b00101000011 #b0100111010010100100011011001100100010110010110000001)))
(assert (= r (fp #b1 #b00101000011 #b0100111010010100100011011001100100010110010110000001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
