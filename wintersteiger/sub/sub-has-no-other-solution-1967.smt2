(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1144749049901865323164429355529136955738067626953125p648 {+ 515549139457077 648 (1.30169e+195)}
; Y = -1.9484539727477392379029197400086559355258941650390625p66 {- 4271456958244785 66 (-1.43771e+020)}
; 1.1144749049901865323164429355529136955738067626953125p648 - -1.9484539727477392379029197400086559355258941650390625p66 == 1.1144749049901865323164429355529136955738067626953125p648
; [HW: 1.1144749049901865323164429355529136955738067626953125p648] 

; mpf : + 515549139457077 648
; mpfd: + 515549139457077 648 (1.30169e+195) class: Pos. norm. non-zero
; hwf : + 515549139457077 648 (1.30169e+195) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010000111 #b0001110101001110001110100011010100100101010000110101)))
(assert (= y (fp #b1 #b10001000001 #b1111001011001101111000010010101010110110011110110001)))
(assert (= r (fp #b0 #b11010000111 #b0001110101001110001110100011010100100101010000110101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
