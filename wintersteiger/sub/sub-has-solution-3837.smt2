(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.435942454032737014557596921804361045360565185546875p877 {+ 1963310273536814 877 (1.44692e+264)}
; Y = -1.3268511211038302999298821305274032056331634521484375p988 {- 1472006587208839 988 (-3.47103e+297)}
; 1.435942454032737014557596921804361045360565185546875p877 - -1.3268511211038302999298821305274032056331634521484375p988 == 1.3268511211038302999298821305274032056331634521484375p988
; [HW: 1.3268511211038302999298821305274032056331634521484375p988] 

; mpf : + 1472006587208839 988
; mpfd: + 1472006587208839 988 (3.47103e+297) class: Pos. norm. non-zero
; hwf : + 1472006587208839 988 (3.47103e+297) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101100 #b0110111110011001111011001011011100000010001100101110)))
(assert (= y (fp #b1 #b11111011011 #b0101001110101100100000111101101111001101010010000111)))
(assert (= r (fp #b0 #b11111011011 #b0101001110101100100000111101101111001101010010000111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
