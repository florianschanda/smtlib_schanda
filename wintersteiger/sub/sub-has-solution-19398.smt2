(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9655521921914809180265137911192141473293304443359375p137 {- 4348460492960319 137 (-3.42447e+041)}
; Y = -1.9062526993227566496358349468209780752658843994140625p983 {- 4081399318973473 983 (-1.55835e+296)}
; -1.9655521921914809180265137911192141473293304443359375p137 - -1.9062526993227566496358349468209780752658843994140625p983 == 1.90625269932275642759123002178966999053955078125p983
; [HW: 1.90625269932275642759123002178966999053955078125p983] 

; mpf : + 4081399318973472 983
; mpfd: + 4081399318973472 983 (1.55835e+296) class: Pos. norm. non-zero
; hwf : + 4081399318973472 983 (1.55835e+296) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001000 #b1111011100101110011011011011000000001011001000111111)))
(assert (= y (fp #b1 #b11111010110 #b1110100000000000001011010100100110000000110000100001)))
(assert (= r (fp #b0 #b11111010110 #b1110100000000000001011010100100110000000110000100000)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
