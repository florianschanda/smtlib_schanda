(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7124096498549834510782829966046847403049468994140625p93 {+ 3208407833622049 93 (1.69589e+028)}
; Y = 1.449861480394492918577498130616731941699981689453125p-292 {+ 2025995995472978 -292 (1.82208e-088)}
; 1.7124096498549834510782829966046847403049468994140625p93 - 1.449861480394492918577498130616731941699981689453125p-292 == 1.7124096498549834510782829966046847403049468994140625p93
; [HW: 1.7124096498549834510782829966046847403049468994140625p93] 

; mpf : + 3208407833622049 93
; mpfd: + 3208407833622049 93 (1.69589e+028) class: Pos. norm. non-zero
; hwf : + 3208407833622049 93 (1.69589e+028) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011100 #b1011011001100000011110101001001101111011011000100001)))
(assert (= y (fp #b0 #b01011011011 #b0111001100101010000111110011101000000110010001010010)))
(assert (= r (fp #b0 #b10001011100 #b1011011001100000011110101001001101111011011000100001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
