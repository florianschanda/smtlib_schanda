(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.18873983254315351842933523585088551044464111328125p-705 {+ 850008639511316 -705 (7.0622e-213)}
; Y = -1.062417520018607230980478561832569539546966552734375p231 {- 281103519897190 231 (-3.66627e+069)}
; 1.18873983254315351842933523585088551044464111328125p-705 - -1.062417520018607230980478561832569539546966552734375p231 == 1.062417520018607230980478561832569539546966552734375p231
; [HW: 1.062417520018607230980478561832569539546966552734375p231] 

; mpf : + 281103519897190 231
; mpfd: + 281103519897190 231 (3.66627e+069) class: Pos. norm. non-zero
; hwf : + 281103519897190 231 (3.66627e+069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111110 #b0011000001010001010000001111000000111001101100010100)))
(assert (= y (fp #b1 #b10011100110 #b0000111111111010100110000011011100101101011001100110)))
(assert (= r (fp #b0 #b10011100110 #b0000111111111010100110000011011100101101011001100110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
