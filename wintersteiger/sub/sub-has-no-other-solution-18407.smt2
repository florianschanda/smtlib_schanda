(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1032712329681240159828803371055983006954193115234375p-478 {+ 465092286313335 -478 (1.41366e-144)}
; Y = 1.668008831466285091238432869431562721729278564453125p-685 {+ 3008444324471762 -685 (1.03909e-206)}
; 1.1032712329681240159828803371055983006954193115234375p-478 - 1.668008831466285091238432869431562721729278564453125p-685 == 1.103271232968123793938275412074290215969085693359375p-478
; [HW: 1.103271232968123793938275412074290215969085693359375p-478] 

; mpf : + 465092286313334 -478
; mpfd: + 465092286313334 -478 (1.41366e-144) class: Pos. norm. non-zero
; hwf : + 465092286313334 -478 (1.41366e-144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000100001 #b0001101001101111111110111100100000110111001101110111)))
(assert (= y (fp #b0 #b00101010010 #b1010101100000010101000000111010010010110001111010010)))
(assert (= r (fp #b0 #b01000100001 #b0001101001101111111110111100100000110111001101110110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
