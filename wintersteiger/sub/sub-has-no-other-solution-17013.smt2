(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1751619999306111008507969017955474555492401123046875p-508 {- 788859517616971 -508 (-1.40236e-153)}
; Y = -1.391710463171049294572867438546381890773773193359375p205 {- 1764107095974262 205 (-7.15646e+061)}
; -1.1751619999306111008507969017955474555492401123046875p-508 - -1.391710463171049294572867438546381890773773193359375p205 == 1.3917104631710490725282625135150738060474395751953125p205
; [HW: 1.3917104631710490725282625135150738060474395751953125p205] 

; mpf : + 1764107095974261 205
; mpfd: + 1764107095974261 205 (7.15646e+061) class: Pos. norm. non-zero
; hwf : + 1764107095974261 205 (7.15646e+061) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000011 #b0010110011010111011010101011010100110100001101001011)))
(assert (= y (fp #b1 #b10011001100 #b0110010001000111001000110000110011010010000101110110)))
(assert (= r (fp #b0 #b10011001100 #b0110010001000111001000110000110011010010000101110101)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
