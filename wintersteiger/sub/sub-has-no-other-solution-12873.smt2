(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.298845096792380804373578939703293144702911376953125p572 {+ 1345878666555666 572 (2.00777e+172)}
; Y = 1.550518799079885212677254457958042621612548828125p488 {+ 2479316258396624 488 (1.23912e+147)}
; 1.298845096792380804373578939703293144702911376953125p572 - 1.550518799079885212677254457958042621612548828125p488 == 1.298845096792380804373578939703293144702911376953125p572
; [HW: 1.298845096792380804373578939703293144702911376953125p572] 

; mpf : + 1345878666555666 572
; mpfd: + 1345878666555666 572 (2.00777e+172) class: Pos. norm. non-zero
; hwf : + 1345878666555666 572 (2.00777e+172) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111011 #b0100110010000001000111001011110101001011000100010010)))
(assert (= y (fp #b0 #b10111100111 #b1000110011101110110011001100110111100001100111010000)))
(assert (= r (fp #b0 #b11000111011 #b0100110010000001000111001011110101001011000100010010)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
