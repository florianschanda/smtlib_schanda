(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.809211268473637890252803117618896067142486572265625p941 {+ 3644363567161882 941 (3.36291e+283)}
; Y = 1.510361712853305338200016194605268537998199462890625p-223 {+ 2298464819830314 -223 (1.12045e-067)}
; 1.809211268473637890252803117618896067142486572265625p941 - 1.510361712853305338200016194605268537998199462890625p-223 == 1.8092112684736376682081981925875879824161529541015625p941
; [HW: 1.8092112684736376682081981925875879824161529541015625p941] 

; mpf : + 3644363567161881 941
; mpfd: + 3644363567161881 941 (3.36291e+283) class: Pos. norm. non-zero
; hwf : + 3644363567161881 941 (3.36291e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101100 #b1100111100101000011110000011110110100110001000011010)))
(assert (= y (fp #b0 #b01100100000 #b1000001010100111000100001011000111010101111000101010)))
(assert (= r (fp #b0 #b11110101100 #b1100111100101000011110000011110110100110001000011001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
