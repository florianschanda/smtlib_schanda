(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4647931246685230721737980275065638124942779541015625p-394 {- 2093242143061529 -394 (-3.63043e-119)}
; Y = -1.425788285743575301012242562137544155120849609375p-309 {- 1917579965013488 -309 (-1.36706e-093)}
; -1.4647931246685230721737980275065638124942779541015625p-394 - -1.425788285743575301012242562137544155120849609375p-309 == 1.4257882857435750789676376371062360703945159912109375p-309
; [HW: 1.4257882857435750789676376371062360703945159912109375p-309] 

; mpf : + 1917579965013487 -309
; mpfd: + 1917579965013487 -309 (1.36706e-093) class: Pos. norm. non-zero
; hwf : + 1917579965013487 -309 (1.36706e-093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001110101 #b0111011011111100101011101010010111011011011000011001)))
(assert (= y (fp #b1 #b01011001010 #b0110110100000000011101100000101001001001110111110000)))
(assert (= r (fp #b0 #b01011001010 #b0110110100000000011101100000101001001001110111101111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
