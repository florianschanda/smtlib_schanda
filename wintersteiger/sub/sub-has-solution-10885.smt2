(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.009687490637420470562801710912026464939117431640625p890 {+ 43628579224842 890 (8.33457e+267)}
; Y = -1.168504416955354674456657448899932205677032470703125p-944 {- 758876429410418 -944 (-7.85804e-285)}
; 1.009687490637420470562801710912026464939117431640625p890 - -1.168504416955354674456657448899932205677032470703125p-944 == 1.009687490637420470562801710912026464939117431640625p890
; [HW: 1.009687490637420470562801710912026464939117431640625p890] 

; mpf : + 43628579224842 890
; mpfd: + 43628579224842 890 (8.33457e+267) class: Pos. norm. non-zero
; hwf : + 43628579224842 890 (8.33457e+267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111001 #b0000001001111010111000010001111101110111110100001010)))
(assert (= y (fp #b1 #b00001001111 #b0010101100100011000110110000000000001110000001110010)))
(assert (= r (fp #b0 #b11101111001 #b0000001001111010111000010001111101110111110100001010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
