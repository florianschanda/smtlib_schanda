(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5277588750834694142355374424369074404239654541015625p63 {+ 2376814673167385 63 (1.40911e+019)}
; Y = -1.27315058454740626103784961742348968982696533203125p-986 {- 1230160870783732 -986 (-1.94672e-297)}
; 1.5277588750834694142355374424369074404239654541015625p63 - -1.27315058454740626103784961742348968982696533203125p-986 == 1.5277588750834694142355374424369074404239654541015625p63
; [HW: 1.5277588750834694142355374424369074404239654541015625p63] 

; mpf : + 2376814673167385 63
; mpfd: + 2376814673167385 63 (1.40911e+019) class: Pos. norm. non-zero
; hwf : + 2376814673167385 63 (1.40911e+019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111110 #b1000011100011011001101001010010010101000010000011001)))
(assert (= y (fp #b1 #b00000100101 #b0100010111101101001100100101101110000011101011110100)))
(assert (= r (fp #b0 #b10000111110 #b1000011100011011001101001010010010101000010000011001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
