(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2290960023899335507024943581200204789638519287109375p-135 {+ 1031756670995375 -135 (2.82187e-041)}
; Y = -1.2880107517871597355707535825786180794239044189453125p293 {- 1297085114427349 293 (-2.04978e+088)}
; 1.2290960023899335507024943581200204789638519287109375p-135 - -1.2880107517871597355707535825786180794239044189453125p293 == 1.2880107517871597355707535825786180794239044189453125p293
; [HW: 1.2880107517871597355707535825786180794239044189453125p293] 

; mpf : + 1297085114427349 293
; mpfd: + 1297085114427349 293 (2.04978e+088) class: Pos. norm. non-zero
; hwf : + 1297085114427349 293 (2.04978e+088) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111000 #b0011101010100110000010010001110111101000101110101111)))
(assert (= y (fp #b1 #b10100100100 #b0100100110111011000100101001011111010010011111010101)))
(assert (= r (fp #b0 #b10100100100 #b0100100110111011000100101001011111010010011111010101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
