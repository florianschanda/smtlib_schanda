(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.384663936894520386289286761893890798091888427734375p-161 {+ 1732372362861030 -161 (4.73713e-049)}
; Y = -1.4160487862719344231976492665125988423824310302734375p898 {- 1873717158822231 898 (-2.99236e+270)}
; 1.384663936894520386289286761893890798091888427734375p-161 - -1.4160487862719344231976492665125988423824310302734375p898 == 1.4160487862719344231976492665125988423824310302734375p898
; [HW: 1.4160487862719344231976492665125988423824310302734375p898] 

; mpf : + 1873717158822231 898
; mpfd: + 1873717158822231 898 (2.99236e+270) class: Pos. norm. non-zero
; hwf : + 1873717158822231 898 (2.99236e+270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101011110 #b0110001001111001010101011111010011101001100111100110)))
(assert (= y (fp #b1 #b11110000001 #b0110101010000010001011000101101010010100000101010111)))
(assert (= r (fp #b0 #b11110000001 #b0110101010000010001011000101101010010100000101010111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
