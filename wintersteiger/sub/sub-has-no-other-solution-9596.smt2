(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.191338114348386767460397095419466495513916015625p91 {+ 861710260481168 91 (2.94961e+027)}
; Y = 1.0996030421075120298013416686444543302059173583984375p370 {+ 448572223320359 370 (2.64444e+111)}
; 1.191338114348386767460397095419466495513916015625p91 - 1.0996030421075120298013416686444543302059173583984375p370 == -1.0996030421075120298013416686444543302059173583984375p370
; [HW: -1.0996030421075120298013416686444543302059173583984375p370] 

; mpf : - 448572223320359 370
; mpfd: - 448572223320359 370 (-2.64444e+111) class: Neg. norm. non-zero
; hwf : - 448572223320359 370 (-2.64444e+111) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011010 #b0011000011111011100010001101111110011010110010010000)))
(assert (= y (fp #b0 #b10101110001 #b0001100101111111100101011100000001101111000100100111)))
(assert (= r (fp #b1 #b10101110001 #b0001100101111111100101011100000001101111000100100111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
