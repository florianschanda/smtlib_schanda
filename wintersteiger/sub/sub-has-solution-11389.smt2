(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.020257110616494600208170595578849315643310546875p504 {- 91229915824048 504 (-5.34352e+151)}
; Y = 1.3443771077168789052080910551012493669986724853515625p-374 {+ 1550936613988665 -374 (3.49384e-113)}
; -1.020257110616494600208170595578849315643310546875p504 - 1.3443771077168789052080910551012493669986724853515625p-374 == -1.020257110616494600208170595578849315643310546875p504
; [HW: -1.020257110616494600208170595578849315643310546875p504] 

; mpf : - 91229915824048 504
; mpfd: - 91229915824048 504 (-5.34352e+151) class: Neg. norm. non-zero
; hwf : - 91229915824048 504 (-5.34352e+151) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110111 #b0000010100101111100100011110101110011011111110110000)))
(assert (= y (fp #b0 #b01010001001 #b0101100000101001000110010001111100100010100100111001)))
(assert (= r (fp #b1 #b10111110111 #b0000010100101111100100011110101110011011111110110000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
