(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4566918989078747603826968770590610802173614501953125p702 {+ 2056757465744629 702 (3.06496e+211)}
; Y = -1.9981394643638827890441689305589534342288970947265625p-777 {- 4495220519772969 -777 (-2.51373e-234)}
; 1.4566918989078747603826968770590610802173614501953125p702 - -1.9981394643638827890441689305589534342288970947265625p-777 == 1.4566918989078747603826968770590610802173614501953125p702
; [HW: 1.4566918989078747603826968770590610802173614501953125p702] 

; mpf : + 2056757465744629 702
; mpfd: + 2056757465744629 702 (3.06496e+211) class: Pos. norm. non-zero
; hwf : + 2056757465744629 702 (3.06496e+211) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111101 #b0111010011101001110000101010001000101000010011110101)))
(assert (= y (fp #b1 #b00011110110 #b1111111110000110000100010110010001001010001100101001)))
(assert (= r (fp #b0 #b11010111101 #b0111010011101001110000101010001000101000010011110101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
