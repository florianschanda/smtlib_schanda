(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6962376146802509158106886388850398361682891845703125p494 {- 3135575462035301 494 (-8.6757e+148)}
; Y = 1.820549156601902751617672038264572620391845703125p406 {+ 3695424875911504 406 (3.00871e+122)}
; -1.6962376146802509158106886388850398361682891845703125p494 - 1.820549156601902751617672038264572620391845703125p406 == -1.6962376146802509158106886388850398361682891845703125p494
; [HW: -1.6962376146802509158106886388850398361682891845703125p494] 

; mpf : - 3135575462035301 494
; mpfd: - 3135575462035301 494 (-8.6757e+148) class: Neg. norm. non-zero
; hwf : - 3135575462035301 494 (-8.6757e+148) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111101101 #b1011001000111100101000001101100101001011111101100101)))
(assert (= y (fp #b0 #b10110010101 #b1101001000001111100000100111000001011101100101010000)))
(assert (= r (fp #b1 #b10111101101 #b1011001000111100101000001101100101001011111101100101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
