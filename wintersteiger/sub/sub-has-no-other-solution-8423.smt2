(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2976190420441884310065461249905638396739959716796875p657 {+ 1340357006848571 657 (7.75987e+197)}
; Y = 1.0301163001371798078054098368738777935504913330078125p-903 {+ 135631758075581 -903 (1.52335e-272)}
; 1.2976190420441884310065461249905638396739959716796875p657 - 1.0301163001371798078054098368738777935504913330078125p-903 == 1.297619042044188208961941199959255754947662353515625p657
; [HW: 1.297619042044188208961941199959255754947662353515625p657] 

; mpf : + 1340357006848570 657
; mpfd: + 1340357006848570 657 (7.75987e+197) class: Pos. norm. non-zero
; hwf : + 1340357006848570 657 (7.75987e+197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010000 #b0100110000110000110000101111010000111111001000111011)))
(assert (= y (fp #b0 #b00001111000 #b0000011110110101101100111010110000101010011010111101)))
(assert (= r (fp #b0 #b11010010000 #b0100110000110000110000101111010000111111001000111010)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
