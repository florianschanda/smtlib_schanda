(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0598363625532873921741838785237632691860198974609375p127 {+ 269479020098191 127 (1.80322e+038)}
; Y = -1.1316965977860922176745361866778694093227386474609375p-3 {- 593108748715407 -3 (-0.141462)}
; 1.0598363625532873921741838785237632691860198974609375p127 - -1.1316965977860922176745361866778694093227386474609375p-3 == 1.0598363625532873921741838785237632691860198974609375p127
; [HW: 1.0598363625532873921741838785237632691860198974609375p127] 

; mpf : + 269479020098191 127
; mpfd: + 269479020098191 127 (1.80322e+038) class: Pos. norm. non-zero
; hwf : + 269479020098191 127 (1.80322e+038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111110 #b0000111101010001011011111001010001000111001010001111)))
(assert (= y (fp #b1 #b01111111100 #b0010000110110110110111100100010001111100010110001111)))
(assert (= r (fp #b0 #b10001111110 #b0000111101010001011011111001010001000111001010001111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
