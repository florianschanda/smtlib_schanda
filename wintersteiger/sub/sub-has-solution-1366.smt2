(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1061687410934777364701631086063571274280548095703125p8 {+ 478141502826981 8 (283.179)}
; Y = -1.21896812159246348272745308349840342998504638671875p-545 {- 986144750809836 -545 (-1.05839e-164)}
; 1.1061687410934777364701631086063571274280548095703125p8 - -1.21896812159246348272745308349840342998504638671875p-545 == 1.106168741093477958514768033637665212154388427734375p8
; [HW: 1.106168741093477958514768033637665212154388427734375p8] 

; mpf : + 478141502826982 8
; mpfd: + 478141502826982 8 (283.179) class: Pos. norm. non-zero
; hwf : + 478141502826982 8 (283.179) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000111 #b0001101100101101110111111110011011011010100111100101)))
(assert (= y (fp #b1 #b00111011110 #b0011100000001110010010110111100100011011001011101100)))
(assert (= r (fp #b0 #b10000000111 #b0001101100101101110111111110011011011010100111100110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
