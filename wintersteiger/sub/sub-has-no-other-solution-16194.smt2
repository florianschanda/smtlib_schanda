(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.02493190467787886888118009665049612522125244140625p340 {+ 112283316616932 340 (2.29559e+102)}
; Y = 1.491677507907494426575567558757029473781585693359375p459 {+ 2214318641398646 459 (2.22046e+138)}
; 1.02493190467787886888118009665049612522125244140625p340 - 1.491677507907494426575567558757029473781585693359375p459 == -1.491677507907494426575567558757029473781585693359375p459
; [HW: -1.491677507907494426575567558757029473781585693359375p459] 

; mpf : - 2214318641398646 459
; mpfd: - 2214318641398646 459 (-2.22046e+138) class: Neg. norm. non-zero
; hwf : - 2214318641398646 459 (-2.22046e+138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010011 #b0000011001100001111011111111001100110111111011100100)))
(assert (= y (fp #b0 #b10111001010 #b0111110111011110100100111100000010100100001101110110)))
(assert (= r (fp #b1 #b10111001010 #b0111110111011110100100111100000010100100001101110110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
