(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.37516248286225550856443078373558819293975830078125p-232 {- 1689581618021844 -232 (-1.99248e-070)}
; Y = 1.7655325496843243815447976885479874908924102783203125p37 {+ 3447652105498309 37 (2.42653e+011)}
; -1.37516248286225550856443078373558819293975830078125p-232 - 1.7655325496843243815447976885479874908924102783203125p37 == -1.765532549684324603589402613579295575618743896484375p37
; [HW: -1.765532549684324603589402613579295575618743896484375p37] 

; mpf : - 3447652105498310 37
; mpfd: - 3447652105498310 37 (-2.42653e+011) class: Neg. norm. non-zero
; hwf : - 3447652105498310 37 (-2.42653e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010111 #b0110000000001010101001100000001010010100010111010100)))
(assert (= y (fp #b0 #b10000100100 #b1100001111111001111100001111000011101010111011000101)))
(assert (= r (fp #b1 #b10000100100 #b1100001111111001111100001111000011101010111011000110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
