(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7044820242318852177021426541614346206188201904296875p-191 {+ 3172704981819931 -191 (5.43079e-058)}
; Y = -1.84647554049298445733029438997618854045867919921875p670 {- 3812186928742444 670 (-9.04567e+201)}
; 1.7044820242318852177021426541614346206188201904296875p-191 - -1.84647554049298445733029438997618854045867919921875p670 == 1.84647554049298445733029438997618854045867919921875p670
; [HW: 1.84647554049298445733029438997618854045867919921875p670] 

; mpf : + 3812186928742444 670
; mpfd: + 3812186928742444 670 (9.04567e+201) class: Pos. norm. non-zero
; hwf : + 3812186928742444 670 (9.04567e+201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000000 #b1011010001011000111011110001011010110010001000011011)))
(assert (= y (fp #b1 #b11010011101 #b1101100010110010100111101111101101001000000000101100)))
(assert (= r (fp #b0 #b11010011101 #b1101100010110010100111101111101101001000000000101100)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
