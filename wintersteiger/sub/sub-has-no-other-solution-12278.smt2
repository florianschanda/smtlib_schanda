(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.01782398982828770073183477506972849369049072265625p-665 {- 80272113948932 -665 (-6.64853e-201)}
; Y = -1.4692881827092880708818256607628427445888519287109375p1003 {- 2113486084778927 1003 (-1.25948e+302)}
; -1.01782398982828770073183477506972849369049072265625p-665 - -1.4692881827092880708818256607628427445888519287109375p1003 == 1.469288182709287848837220735731534659862518310546875p1003
; [HW: 1.469288182709287848837220735731534659862518310546875p1003] 

; mpf : + 2113486084778926 1003
; mpfd: + 2113486084778926 1003 (1.25948e+302) class: Pos. norm. non-zero
; hwf : + 2113486084778926 1003 (1.25948e+302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100110 #b0000010010010000000111001110110101100101100100000100)))
(assert (= y (fp #b1 #b11111101010 #b0111100000100011010001010011010100100010101110101111)))
(assert (= r (fp #b0 #b11111101010 #b0111100000100011010001010011010100100010101110101110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
