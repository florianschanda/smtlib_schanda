(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.111241953408335092490233364515006542205810546875p298 {- 500989219917744 298 (-5.6591e+089)}
; Y = -1.586129199927986288543024784303270280361175537109375p-71 {- 2639691246386646 -71 (-6.71752e-022)}
; -1.111241953408335092490233364515006542205810546875p298 - -1.586129199927986288543024784303270280361175537109375p-71 == -1.1112419534083348704456284394836984574794769287109375p298
; [HW: -1.1112419534083348704456284394836984574794769287109375p298] 

; mpf : - 500989219917743 298
; mpfd: - 500989219917743 298 (-5.6591e+089) class: Neg. norm. non-zero
; hwf : - 500989219917743 298 (-5.6591e+089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100101001 #b0001110001111010010110100100011111010100111110110000)))
(assert (= y (fp #b1 #b01110111000 #b1001011000001100100100000011000011101011110111010110)))
(assert (= r (fp #b1 #b10100101001 #b0001110001111010010110100100011111010100111110101111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
