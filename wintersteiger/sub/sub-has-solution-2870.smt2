(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.75969522825665070087097774376161396503448486328125p1006 {+ 3421363146891796 1006 (1.20674e+303)}
; Y = -1.093604675452687136072427165345288813114166259765625p939 {- 421557981488858 939 (-5.0819e+282)}
; 1.75969522825665070087097774376161396503448486328125p1006 - -1.093604675452687136072427165345288813114166259765625p939 == 1.75969522825665070087097774376161396503448486328125p1006
; [HW: 1.75969522825665070087097774376161396503448486328125p1006] 

; mpf : + 3421363146891796 1006
; mpfd: + 3421363146891796 1006 (1.20674e+303) class: Pos. norm. non-zero
; hwf : + 3421363146891796 1006 (1.20674e+303) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101101 #b1100001001111011011000101111000001001010001000010100)))
(assert (= y (fp #b1 #b11110101010 #b0001011111110110011110011101101111010010011011011010)))
(assert (= r (fp #b0 #b11111101101 #b1100001001111011011000101111000001001010001000010100)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
