(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.456879910339552441911337155033834278583526611328125p-755 {+ 2057604193958274 -755 (7.68736e-228)}
; Y = -1.5581866235816634880251285721897147595882415771484375p-440 {- 2513849069965575 -440 (-5.48809e-133)}
; 1.456879910339552441911337155033834278583526611328125p-755 - -1.5581866235816634880251285721897147595882415771484375p-440 == 1.5581866235816634880251285721897147595882415771484375p-440
; [HW: 1.5581866235816634880251285721897147595882415771484375p-440] 

; mpf : + 2513849069965575 -440
; mpfd: + 2513849069965575 -440 (5.48809e-133) class: Pos. norm. non-zero
; hwf : + 2513849069965575 -440 (5.48809e-133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001100 #b0111010011110110000101001111000100011011100110000010)))
(assert (= y (fp #b1 #b01001000111 #b1000111011100101010100011000110101011001000100000111)))
(assert (= r (fp #b0 #b01001000111 #b1000111011100101010100011000110101011001000100000111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
