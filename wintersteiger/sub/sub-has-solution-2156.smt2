(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8713224082754795762895128063973970711231231689453125p-143 {- 3924087273229013 -143 (-1.67826e-043)}
; Y = 1.3792761327555249639686962837004102766513824462890625p-154 {+ 1708107850148305 -154 (6.03993e-047)}
; -1.8713224082754795762895128063973970711231231689453125p-143 - 1.3792761327555249639686962837004102766513824462890625p-154 == -1.8719958829496767815925295508350245654582977294921875p-143
; [HW: -1.8719958829496767815925295508350245654582977294921875p-143] 

; mpf : - 3927120333520771 -143
; mpfd: - 3927120333520771 -143 (-1.67886e-043) class: Neg. norm. non-zero
; hwf : - 3927120333520771 -143 (-1.67886e-043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101110000 #b1101111100001110111111000011111111010000101011010101)))
(assert (= y (fp #b0 #b01101100101 #b0110000100011000001111011001101001010110100111010001)))
(assert (= r (fp #b1 #b01101110000 #b1101111100111011000111110100011110000011111110000011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
