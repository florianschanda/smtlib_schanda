(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.195945589063623248904377760482020676136016845703125p983 {+ 882460481891826 983 (9.77681e+295)}
; Y = 1.7050106794562596146391797446995042264461517333984375p-373 {+ 3175085833291431 -373 (8.86214e-113)}
; 1.195945589063623248904377760482020676136016845703125p983 - 1.7050106794562596146391797446995042264461517333984375p-373 == 1.1959455890636230268597728354507125914096832275390625p983
; [HW: 1.1959455890636230268597728354507125914096832275390625p983] 

; mpf : + 882460481891825 983
; mpfd: + 882460481891825 983 (9.77681e+295) class: Pos. norm. non-zero
; hwf : + 882460481891825 983 (9.77681e+295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010110 #b0011001000101001011111010111100011010010110111110010)))
(assert (= y (fp #b0 #b01010001010 #b1011010001111011100101000111001110011000011010100111)))
(assert (= r (fp #b0 #b11111010110 #b0011001000101001011111010111100011010010110111110001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
