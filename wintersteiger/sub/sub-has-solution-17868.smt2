(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.563987979282256191027045133523643016815185546875p637 {- 2539976053337008 637 (-8.9195e+191)}
; Y = 1.5847190992397515163503385338117368519306182861328125p962 {+ 2633340717452557 962 (6.17743e+289)}
; -1.563987979282256191027045133523643016815185546875p637 - 1.5847190992397515163503385338117368519306182861328125p962 == -1.5847190992397515163503385338117368519306182861328125p962
; [HW: -1.5847190992397515163503385338117368519306182861328125p962] 

; mpf : - 2633340717452557 962
; mpfd: - 2633340717452557 962 (-6.17743e+289) class: Neg. norm. non-zero
; hwf : - 2633340717452557 962 (-6.17743e+289) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111100 #b1001000001100001100001000010011001011010101110110000)))
(assert (= y (fp #b0 #b11111000001 #b1001010110110000001001101010000010010100110100001101)))
(assert (= r (fp #b1 #b11111000001 #b1001010110110000001001101010000010010100110100001101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
