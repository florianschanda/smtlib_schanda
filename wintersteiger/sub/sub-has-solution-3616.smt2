(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.83672061247678275464068065048195421695709228515625p-607 {+ 3768254638563652 -607 (3.45809e-183)}
; Y = 1.869719491809867850662385535542853176593780517578125p-896 {+ 3916868379231778 -896 (3.53916e-270)}
; 1.83672061247678275464068065048195421695709228515625p-607 - 1.869719491809867850662385535542853176593780517578125p-896 == 1.8367206124767825325960757254506461322307586669921875p-607
; [HW: 1.8367206124767825325960757254506461322307586669921875p-607] 

; mpf : + 3768254638563651 -607
; mpfd: + 3768254638563651 -607 (3.45809e-183) class: Pos. norm. non-zero
; hwf : + 3768254638563651 -607 (3.45809e-183) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100000 #b1101011000110011010100100111001001111010000101000100)))
(assert (= y (fp #b0 #b00001111111 #b1101111010100101111011111100011000000100011000100010)))
(assert (= r (fp #b0 #b00110100000 #b1101011000110011010100100111001001111010000101000011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
