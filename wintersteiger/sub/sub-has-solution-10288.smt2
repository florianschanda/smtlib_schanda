(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5207618179187056828283175491378642618656158447265625p414 {+ 2345302729127465 414 (6.43398e+124)}
; Y = -1.8919094442893575891417867751442827284336090087890625p-745 {- 4016803040949777 -745 (-1.02224e-224)}
; 1.5207618179187056828283175491378642618656158447265625p414 - -1.8919094442893575891417867751442827284336090087890625p-745 == 1.5207618179187056828283175491378642618656158447265625p414
; [HW: 1.5207618179187056828283175491378642618656158447265625p414] 

; mpf : + 2345302729127465 414
; mpfd: + 2345302729127465 414 (6.43398e+124) class: Pos. norm. non-zero
; hwf : + 2345302729127465 414 (6.43398e+124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011101 #b1000010101010000101001011000000011110111011000101001)))
(assert (= y (fp #b1 #b00100010110 #b1110010001010100001011010110011000110111011000010001)))
(assert (= r (fp #b0 #b10110011101 #b1000010101010000101001011000000011110111011000101001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
