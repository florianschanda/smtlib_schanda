(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8572835771304669894021799336769618093967437744140625p-770 {+ 3860861998515617 -770 (2.99076e-232)}
; Y = 1.4401805876205122647348844111547805368900299072265625p56 {+ 1982397130383465 56 (1.03776e+017)}
; 1.8572835771304669894021799336769618093967437744140625p-770 - 1.4401805876205122647348844111547805368900299072265625p56 == -1.4401805876205120426902794861234724521636962890625p56
; [HW: -1.4401805876205120426902794861234724521636962890625p56] 

; mpf : - 1982397130383464 56
; mpfd: - 1982397130383464 56 (-1.03776e+017) class: Neg. norm. non-zero
; hwf : - 1982397130383464 56 (-1.03776e+017) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111101 #b1101101101110110111011111011111100101100010110100001)))
(assert (= y (fp #b0 #b10000110111 #b0111000010101111101011001100110000101010000001101001)))
(assert (= r (fp #b1 #b10000110111 #b0111000010101111101011001100110000101010000001101000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
