(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.29774856846897623796621701330877840518951416015625p-689 {- 1340940342006980 -689 (-5.0527e-208)}
; Y = 1.2153326983045193987464926976826973259449005126953125p180 {+ 969772259844917 180 (1.86249e+054)}
; -1.29774856846897623796621701330877840518951416015625p-689 - 1.2153326983045193987464926976826973259449005126953125p180 == -1.2153326983045193987464926976826973259449005126953125p180
; [HW: -1.2153326983045193987464926976826973259449005126953125p180] 

; mpf : - 969772259844917 180
; mpfd: - 969772259844917 180 (-1.86249e+054) class: Neg. norm. non-zero
; hwf : - 969772259844917 180 (-1.86249e+054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101001110 #b0100110000111001010000000000110000000001010011000100)))
(assert (= y (fp #b0 #b10010110011 #b0011011100100000000010110011000011111010001100110101)))
(assert (= r (fp #b1 #b10010110011 #b0011011100100000000010110011000011111010001100110101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
