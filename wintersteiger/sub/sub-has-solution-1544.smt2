(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7039816294412115649237193792941980063915252685546875p425 {+ 3170451404027115 425 (1.47643e+128)}
; Y = -1.06866028405741264606376716983504593372344970703125p433 {- 309218429696116 433 (-2.37043e+130)}
; 1.7039816294412115649237193792941980063915252685546875p425 - -1.06866028405741264606376716983504593372344970703125p433 == 1.0753164622974171749092420213855803012847900390625p433
; [HW: 1.0753164622974171749092420213855803012847900390625p433] 

; mpf : + 339195191537512 433
; mpfd: + 339195191537512 433 (2.3852e+130) class: Pos. norm. non-zero
; hwf : + 339195191537512 433 (2.3852e+130) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101000 #b1011010000111000001000111101101101101111010011101011)))
(assert (= y (fp #b1 #b10110110000 #b0001000110010011101110000110101010001111100001110100)))
(assert (= r (fp #b0 #b10110110000 #b0001001101000111111100001000111001101010111101101000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
