(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.210827404901778425738712030579335987567901611328125p834 {- 949482222155138 834 (-1.38707e+251)}
; Y = 1.523290689798796559983884435496293008327484130859375p742 {+ 2356691755584310 742 (3.52403e+223)}
; -1.210827404901778425738712030579335987567901611328125p834 - 1.523290689798796559983884435496293008327484130859375p742 == -1.210827404901778425738712030579335987567901611328125p834
; [HW: -1.210827404901778425738712030579335987567901611328125p834] 

; mpf : - 949482222155138 834
; mpfd: - 949482222155138 834 (-1.38707e+251) class: Neg. norm. non-zero
; hwf : - 949482222155138 834 (-1.38707e+251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000001 #b0011010111111000110010001110100100100111010110000010)))
(assert (= y (fp #b0 #b11011100101 #b1000010111110110011000001110111011111100101100110110)))
(assert (= r (fp #b1 #b11101000001 #b0011010111111000110010001110100100100111010110000010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
