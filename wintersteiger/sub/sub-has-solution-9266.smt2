(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2690110809570553929148672978044487535953521728515625p187 {- 1211518203956729 187 (-2.48928e+056)}
; Y = 1.090071487429927987733435656991787254810333251953125p-640 {+ 405645917226130 -640 (2.38923e-193)}
; -1.2690110809570553929148672978044487535953521728515625p187 - 1.090071487429927987733435656991787254810333251953125p-640 == -1.2690110809570553929148672978044487535953521728515625p187
; [HW: -1.2690110809570553929148672978044487535953521728515625p187] 

; mpf : - 1211518203956729 187
; mpfd: - 1211518203956729 187 (-2.48928e+056) class: Neg. norm. non-zero
; hwf : - 1211518203956729 187 (-2.48928e+056) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010111010 #b0100010011011101111010010000001011111000110111111001)))
(assert (= y (fp #b0 #b00101111111 #b0001011100001110111011001100110011010000010010010010)))
(assert (= r (fp #b1 #b10010111010 #b0100010011011101111010010000001011111000110111111001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
