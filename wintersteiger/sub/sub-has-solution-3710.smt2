(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7504978625660154722964989559841342270374298095703125p-11 {- 3379941894194661 -11 (-0.000854735)}
; Y = -1.0394250058834433314558509664493612945079803466796875p773 {- 177554441805755 773 (-5.16392e+232)}
; -1.7504978625660154722964989559841342270374298095703125p-11 - -1.0394250058834433314558509664493612945079803466796875p773 == 1.039425005883443109411246041418053209781646728515625p773
; [HW: 1.039425005883443109411246041418053209781646728515625p773] 

; mpf : + 177554441805754 773
; mpfd: + 177554441805754 773 (5.16392e+232) class: Pos. norm. non-zero
; hwf : + 177554441805754 773 (5.16392e+232) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110100 #b1100000000100000101000001011111101110000010111100101)))
(assert (= y (fp #b1 #b11100000100 #b0000101000010111110000011101011011101001111110111011)))
(assert (= r (fp #b0 #b11100000100 #b0000101000010111110000011101011011101001111110111010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
