(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9848344144957514867400050206924788653850555419921875p-198 {+ 4435299902144707 -198 (4.94066e-060)}
; Y = -1.085158185254792240215238052769564092159271240234375p854 {- 383518371381030 854 (-1.30349e+257)}
; 1.9848344144957514867400050206924788653850555419921875p-198 - -1.085158185254792240215238052769564092159271240234375p854 == 1.0851581852547924622598429778008721768856048583984375p854
; [HW: 1.0851581852547924622598429778008721768856048583984375p854] 

; mpf : + 383518371381031 854
; mpfd: + 383518371381031 854 (1.30349e+257) class: Pos. norm. non-zero
; hwf : + 383518371381031 854 (1.30349e+257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100111001 #b1111110000011110000110111011001000111100000011000011)))
(assert (= y (fp #b1 #b11101010101 #b0001010111001100111011010100010010100111111100100110)))
(assert (= r (fp #b0 #b11101010101 #b0001010111001100111011010100010010100111111100100111)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
