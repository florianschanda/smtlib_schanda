(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5630553264603890273320985215832479298114776611328125p-500 {- 2535775758435981 -500 (-4.77503e-151)}
; Y = -1.335025512891591770170407471596263349056243896484375p23 {- 1508820775018182 23 (-1.1199e+007)}
; -1.5630553264603890273320985215832479298114776611328125p-500 - -1.335025512891591770170407471596263349056243896484375p23 == 1.3350255128915915481258025465649552643299102783203125p23
; [HW: 1.3350255128915915481258025465649552643299102783203125p23] 

; mpf : + 1508820775018181 23
; mpfd: + 1508820775018181 23 (1.1199e+007) class: Pos. norm. non-zero
; hwf : + 1508820775018181 23 (1.1199e+007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000001011 #b1001000000100100011001001101010011111100011010001101)))
(assert (= y (fp #b1 #b10000010110 #b0101010111000100001110110110010100110001111011000110)))
(assert (= r (fp #b0 #b10000010110 #b0101010111000100001110110110010100110001111011000101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
