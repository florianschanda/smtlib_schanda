(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6977585191233435235602655666298232972621917724609375p344 {- 3142425006718479 344 (-6.08407e+103)}
; Y = 1.3254036135435705023866148621891625225543975830078125p-779 {+ 1465487592699837 -779 (4.16852e-235)}
; -1.6977585191233435235602655666298232972621917724609375p344 - 1.3254036135435705023866148621891625225543975830078125p-779 == -1.6977585191233435235602655666298232972621917724609375p344
; [HW: -1.6977585191233435235602655666298232972621917724609375p344] 

; mpf : - 3142425006718479 344
; mpfd: - 3142425006718479 344 (-6.08407e+103) class: Neg. norm. non-zero
; hwf : - 3142425006718479 344 (-6.08407e+103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010111 #b1011001010100000010011010110010000100011111000001111)))
(assert (= y (fp #b0 #b00011110100 #b0101001101001101101001101011011000101011011110111101)))
(assert (= r (fp #b1 #b10101010111 #b1011001010100000010011010110010000100011111000001111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
