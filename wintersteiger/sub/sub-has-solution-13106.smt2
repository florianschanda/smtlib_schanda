(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7577670311894812993358527819509617984294891357421875p402 {+ 3412679319298595 402 (1.8156e+121)}
; Y = -1.721048073071136830236582682118751108646392822265625p137 {- 3247311833199386 137 (-2.99849e+041)}
; 1.7577670311894812993358527819509617984294891357421875p402 - -1.721048073071136830236582682118751108646392822265625p137 == 1.7577670311894812993358527819509617984294891357421875p402
; [HW: 1.7577670311894812993358527819509617984294891357421875p402] 

; mpf : + 3412679319298595 402
; mpfd: + 3412679319298595 402 (1.8156e+121) class: Pos. norm. non-zero
; hwf : + 3412679319298595 402 (1.8156e+121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010001 #b1100000111111101000001010010100011110010001000100011)))
(assert (= y (fp #b1 #b10010001000 #b1011100010010110100110110100010010101111001100011010)))
(assert (= r (fp #b0 #b10110010001 #b1100000111111101000001010010100011110010001000100011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
