(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5452342992021403933478040926274843513965606689453125p228 {- 2455516986716373 228 (-6.66551e+068)}
; Y = -1.6439474858080880270705392831587232649326324462890625p336 {- 2900081657131473 336 (-2.30126e+101)}
; -1.5452342992021403933478040926274843513965606689453125p228 - -1.6439474858080880270705392831587232649326324462890625p336 == 1.6439474858080880270705392831587232649326324462890625p336
; [HW: 1.6439474858080880270705392831587232649326324462890625p336] 

; mpf : + 2900081657131473 336
; mpfd: + 2900081657131473 336 (2.30126e+101) class: Pos. norm. non-zero
; hwf : + 2900081657131473 336 (2.30126e+101) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100011 #b1000101110010100011110011001101110111011000011010101)))
(assert (= y (fp #b1 #b10101001111 #b1010010011011001101111100000111111100011000111010001)))
(assert (= r (fp #b0 #b10101001111 #b1010010011011001101111100000111111100011000111010001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
