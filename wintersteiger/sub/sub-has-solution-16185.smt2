(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1392929669544769044620124986977316439151763916015625p957 {- 627319754071513 957 (-1.38785e+288)}
; Y = -1.5627531131022056598567360197193920612335205078125p-925 {- 2534414710468680 -925 (-5.50991e-279)}
; -1.1392929669544769044620124986977316439151763916015625p957 - -1.5627531131022056598567360197193920612335205078125p-925 == -1.1392929669544769044620124986977316439151763916015625p957
; [HW: -1.1392929669544769044620124986977316439151763916015625p957] 

; mpf : - 627319754071513 957
; mpfd: - 627319754071513 957 (-1.38785e+288) class: Neg. norm. non-zero
; hwf : - 627319754071513 957 (-1.38785e+288) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111100 #b0010001110101000101101000011000110100001110111011001)))
(assert (= y (fp #b1 #b00001100010 #b1001000000010000100101101000100001111111000001001000)))
(assert (= r (fp #b1 #b11110111100 #b0010001110101000101101000011000110100001110111011001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
