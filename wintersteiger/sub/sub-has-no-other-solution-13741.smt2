(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2940712105336249493348077521659433841705322265625p-229 {+ 1324378994179624 -229 (1.49999e-069)}
; Y = -1.0391041136455421156625789080862887203693389892578125p212 {- 176109271642717 212 (-6.8394e+063)}
; 1.2940712105336249493348077521659433841705322265625p-229 - -1.0391041136455421156625789080862887203693389892578125p212 == 1.039104113645542337707183833117596805095672607421875p212
; [HW: 1.039104113645542337707183833117596805095672607421875p212] 

; mpf : + 176109271642718 212
; mpfd: + 176109271642718 212 (6.8394e+063) class: Pos. norm. non-zero
; hwf : + 176109271642718 212 (6.8394e+063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011010 #b0100101101001000010000000011011111101111111000101000)))
(assert (= y (fp #b1 #b10011010011 #b0000101000000010101110100010100100111111001001011101)))
(assert (= r (fp #b0 #b10011010011 #b0000101000000010101110100010100100111111001001011110)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
