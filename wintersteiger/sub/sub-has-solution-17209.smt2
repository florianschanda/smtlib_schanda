(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0176005921405646414967804957996122539043426513671875p-260 {+ 79266020205747 -260 (5.49261e-079)}
; Y = -1.3920613438047830801025384062086232006549835205078125p-751 {- 1765687321865597 -751 (-1.17525e-226)}
; 1.0176005921405646414967804957996122539043426513671875p-260 - -1.3920613438047830801025384062086232006549835205078125p-751 == 1.0176005921405646414967804957996122539043426513671875p-260
; [HW: 1.0176005921405646414967804957996122539043426513671875p-260] 

; mpf : + 79266020205747 -260
; mpfd: + 79266020205747 -260 (5.49261e-079) class: Pos. norm. non-zero
; hwf : + 79266020205747 -260 (5.49261e-079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111011 #b0000010010000001011110001110111110100010010010110011)))
(assert (= y (fp #b1 #b00100010000 #b0110010001011110001000011101100110101010110101111101)))
(assert (= r (fp #b0 #b01011111011 #b0000010010000001011110001110111110100010010010110011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
