(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5224812944677861281661535031162202358245849609375p-199 {- 2353046563073176 -199 (-1.89488e-060)}
; Y = -1.405422407143240182136878502205945551395416259765625p-94 {- 1825860201737946 -94 (-7.09557e-029)}
; -1.5224812944677861281661535031162202358245849609375p-199 - -1.405422407143240182136878502205945551395416259765625p-94 == 1.405422407143240182136878502205945551395416259765625p-94
; [HW: 1.405422407143240182136878502205945551395416259765625p-94] 

; mpf : + 1825860201737946 -94
; mpfd: + 1825860201737946 -94 (7.09557e-029) class: Pos. norm. non-zero
; hwf : + 1825860201737946 -94 (7.09557e-029) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111000 #b1000010111000001010101011000100010000010110010011000)))
(assert (= y (fp #b1 #b01110100001 #b0110011111001001110000110100101110111110111011011010)))
(assert (= r (fp #b0 #b01110100001 #b0110011111001001110000110100101110111110111011011010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
