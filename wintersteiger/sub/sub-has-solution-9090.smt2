(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.835668457175831047578640209394507110118865966796875p-613 {- 3763516152342350 -613 (-5.40016e-185)}
; Y = 1.26859828977364852420350871398113667964935302734375p673 {+ 1209659157736956 673 (4.97177e+202)}
; -1.835668457175831047578640209394507110118865966796875p-613 - 1.26859828977364852420350871398113667964935302734375p673 == -1.26859828977364852420350871398113667964935302734375p673
; [HW: -1.26859828977364852420350871398113667964935302734375p673] 

; mpf : - 1209659157736956 673
; mpfd: - 1209659157736956 673 (-4.97177e+202) class: Neg. norm. non-zero
; hwf : - 1209659157736956 673 (-4.97177e+202) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011010 #b1101010111101110010111100011010111011110011101001110)))
(assert (= y (fp #b0 #b11010100000 #b0100010011000010110110111000011001010110110111111100)))
(assert (= r (fp #b1 #b11010100000 #b0100010011000010110110111000011001010110110111111100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
