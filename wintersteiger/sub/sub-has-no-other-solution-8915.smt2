(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6622936120764133516303218129905872046947479248046875p27 {- 2982705264557195 27 (-2.23109e+008)}
; Y = -1.524221264398972319753511328599415719509124755859375p403 {- 2360882691006902 403 (-3.14874e+121)}
; -1.6622936120764133516303218129905872046947479248046875p27 - -1.524221264398972319753511328599415719509124755859375p403 == 1.524221264398972319753511328599415719509124755859375p403
; [HW: 1.524221264398972319753511328599415719509124755859375p403] 

; mpf : + 2360882691006902 403
; mpfd: + 2360882691006902 403 (3.14874e+121) class: Pos. norm. non-zero
; hwf : + 2360882691006902 403 (3.14874e+121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011010 #b1010100110001100000100101111110000110111110010001011)))
(assert (= y (fp #b1 #b10110010010 #b1000011000110011010111010110001001110110000110110110)))
(assert (= r (fp #b0 #b10110010010 #b1000011000110011010111010110001001110110000110110110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
