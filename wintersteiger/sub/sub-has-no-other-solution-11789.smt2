(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3909937659336237825158377745538018643856048583984375p-503 {+ 1760879378562855 -503 (5.31175e-152)}
; Y = 1.0023744919634067773728247630060650408267974853515625p-822 {+ 10693761121593 -822 (3.58405e-248)}
; 1.3909937659336237825158377745538018643856048583984375p-503 - 1.0023744919634067773728247630060650408267974853515625p-822 == 1.390993765933623560471232849522493779659271240234375p-503
; [HW: 1.390993765933623560471232849522493779659271240234375p-503] 

; mpf : + 1760879378562854 -503
; mpfd: + 1760879378562854 -503 (5.31175e-152) class: Pos. norm. non-zero
; hwf : + 1760879378562854 -503 (5.31175e-152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000001000 #b0110010000011000001010101101110110011111111100100111)))
(assert (= y (fp #b0 #b00011001001 #b0000000010011011100111010101110101010011110100111001)))
(assert (= r (fp #b0 #b01000001000 #b0110010000011000001010101101110110011111111100100110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
