(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.03956449297967434830525235156528651714324951171875p-923 {+ 178182635840364 -923 (1.46611e-278)}
; Y = -1.37660404443235417915047946735285222530364990234375p-68 {- 1696073834171772 -68 (-4.66412e-021)}
; 1.03956449297967434830525235156528651714324951171875p-923 - -1.37660404443235417915047946735285222530364990234375p-68 == 1.37660404443235417915047946735285222530364990234375p-68
; [HW: 1.37660404443235417915047946735285222530364990234375p-68] 

; mpf : + 1696073834171772 -68
; mpfd: + 1696073834171772 -68 (4.66412e-021) class: Pos. norm. non-zero
; hwf : + 1696073834171772 -68 (4.66412e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001100100 #b0000101000100000111001100000101101101110001101101100)))
(assert (= y (fp #b1 #b01110111011 #b0110000001101001000111110110011001100000110101111100)))
(assert (= r (fp #b0 #b01110111011 #b0110000001101001000111110110011001100000110101111100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
