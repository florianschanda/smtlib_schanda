(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5971401010323245106548029070836491882801055908203125p105 {+ 2689279936497157 105 (6.47877e+031)}
; Y = -1.7124269364923867531302903444156982004642486572265625p339 {- 3208485685715817 339 (-1.9177e+102)}
; 1.5971401010323245106548029070836491882801055908203125p105 - -1.7124269364923867531302903444156982004642486572265625p339 == 1.7124269364923867531302903444156982004642486572265625p339
; [HW: 1.7124269364923867531302903444156982004642486572265625p339] 

; mpf : + 3208485685715817 339
; mpfd: + 3208485685715817 339 (1.9177e+102) class: Pos. norm. non-zero
; hwf : + 3208485685715817 339 (1.9177e+102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101000 #b1001100011011110001011000111010100010000011000000101)))
(assert (= y (fp #b1 #b10101010010 #b1011011001100001100111001001100100000110001101101001)))
(assert (= r (fp #b0 #b10101010010 #b1011011001100001100111001001100100000110001101101001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
