(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.936631119195213468486826968728564679622650146484375p422 {- 4218211559391174 422 (-2.09752e+127)}
; Y = -1.03062667313048184070112256449647247791290283203125p762 {- 137930273698036 762 (-2.5001e+229)}
; -1.936631119195213468486826968728564679622650146484375p422 - -1.03062667313048184070112256449647247791290283203125p762 == 1.0306266731304816186565176394651643931865692138671875p762
; [HW: 1.0306266731304816186565176394651643931865692138671875p762] 

; mpf : + 137930273698035 762
; mpfd: + 137930273698035 762 (2.5001e+229) class: Pos. norm. non-zero
; hwf : + 137930273698035 762 (2.5001e+229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100101 #b1110111111000111000011101001100101011011111111000110)))
(assert (= y (fp #b1 #b11011111001 #b0000011111010111001001100100111101111011000011110100)))
(assert (= r (fp #b0 #b11011111001 #b0000011111010111001001100100111101111011000011110011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
