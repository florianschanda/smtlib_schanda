(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.069340358409021529695337449084036052227020263671875p907 {+ 312281212292606 907 (1.15697e+273)}
; Y = -1.2476174196613218914109211254981346428394317626953125p401 {- 1115169718917173 401 (-6.44332e+120)}
; 1.069340358409021529695337449084036052227020263671875p907 - -1.2476174196613218914109211254981346428394317626953125p401 == 1.069340358409021529695337449084036052227020263671875p907
; [HW: 1.069340358409021529695337449084036052227020263671875p907] 

; mpf : + 312281212292606 907
; mpfd: + 312281212292606 907 (1.15697e+273) class: Pos. norm. non-zero
; hwf : + 312281212292606 907 (1.15697e+273) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001010 #b0001000111000000010010100010101110101000110111111110)))
(assert (= y (fp #b1 #b10110010000 #b0011111101100011110110101110111101011101100000110101)))
(assert (= r (fp #b0 #b11110001010 #b0001000111000000010010100010101110101000110111111110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
