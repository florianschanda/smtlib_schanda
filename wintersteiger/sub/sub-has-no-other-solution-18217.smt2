(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.56310734974513731998513321741484105587005615234375p-359 {- 2536010050481788 -359 (-1.33113e-108)}
; Y = 1.7247908785277754617482059984467923641204833984375p-572 {+ 3264167930459224 -572 (1.11578e-172)}
; -1.56310734974513731998513321741484105587005615234375p-359 - 1.7247908785277754617482059984467923641204833984375p-572 == -1.56310734974513731998513321741484105587005615234375p-359
; [HW: -1.56310734974513731998513321741484105587005615234375p-359] 

; mpf : - 2536010050481788 -359
; mpfd: - 2536010050481788 -359 (-1.33113e-108) class: Neg. norm. non-zero
; hwf : - 2536010050481788 -359 (-1.33113e-108) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011000 #b1001000000100111110011011010001101001010111001111100)))
(assert (= y (fp #b0 #b00111000011 #b1011100110001011111001010001111110110111010001011000)))
(assert (= r (fp #b1 #b01010011000 #b1001000000100111110011011010001101001010111001111100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
