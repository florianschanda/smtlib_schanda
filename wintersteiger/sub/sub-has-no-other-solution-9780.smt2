(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.885449626737093264949862714274786412715911865234375p765 {+ 3987710609028518 765 (3.65899e+230)}
; Y = 1.1925877081325471085193612452712841331958770751953125p838 {+ 867337930581877 838 (2.18588e+252)}
; 1.885449626737093264949862714274786412715911865234375p765 - 1.1925877081325471085193612452712841331958770751953125p838 == -1.1925877081325471085193612452712841331958770751953125p838
; [HW: -1.1925877081325471085193612452712841331958770751953125p838] 

; mpf : - 867337930581877 838
; mpfd: - 867337930581877 838 (-2.18588e+252) class: Neg. norm. non-zero
; hwf : - 867337930581877 838 (-2.18588e+252) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111100 #b1110001010101100110100111010010100010111010110100110)))
(assert (= y (fp #b0 #b11101000101 #b0011000101001101011011011001010000001010011101110101)))
(assert (= r (fp #b1 #b11101000101 #b0011000101001101011011011001010000001010011101110101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
