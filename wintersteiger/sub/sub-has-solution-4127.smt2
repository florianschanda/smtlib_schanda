(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.173505303374971386887182234204374253749847412109375p354 {- 781398419626326 354 (-4.30629e+106)}
; Y = -1.6805063605847083696431809585192240774631500244140625p-913 {- 3064728191952545 -913 (-2.42691e-275)}
; -1.173505303374971386887182234204374253749847412109375p354 - -1.6805063605847083696431809585192240774631500244140625p-913 == -1.173505303374971386887182234204374253749847412109375p354
; [HW: -1.173505303374971386887182234204374253749847412109375p354] 

; mpf : - 781398419626326 354
; mpfd: - 781398419626326 354 (-4.30629e+106) class: Neg. norm. non-zero
; hwf : - 781398419626326 354 (-4.30629e+106) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100001 #b0010110001101010110101111111001110101101100101010110)))
(assert (= y (fp #b1 #b00001101110 #b1010111000110101101010100011001101101110011010100001)))
(assert (= r (fp #b1 #b10101100001 #b0010110001101010110101111111001110101101100101010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
