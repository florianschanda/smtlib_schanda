(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.237629905827017040564896888099610805511474609375p399 {+ 1070189955334640 399 (1.59793e+120)}
; Y = -1.9408852203790776247416260957834310829639434814453125p-929 {- 4237370327897621 -929 (-4.27695e-280)}
; 1.237629905827017040564896888099610805511474609375p399 - -1.9408852203790776247416260957834310829639434814453125p-929 == 1.237629905827017040564896888099610805511474609375p399
; [HW: 1.237629905827017040564896888099610805511474609375p399] 

; mpf : + 1070189955334640 399
; mpfd: + 1070189955334640 399 (1.59793e+120) class: Pos. norm. non-zero
; hwf : + 1070189955334640 399 (1.59793e+120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110001110 #b0011110011010101010100000100001000010100000111110000)))
(assert (= y (fp #b1 #b00001011110 #b1111000011011101110110101001001011010001011000010101)))
(assert (= r (fp #b0 #b10110001110 #b0011110011010101010100000100001000010100000111110000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
