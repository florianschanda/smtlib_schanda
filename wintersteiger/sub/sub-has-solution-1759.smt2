(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5493047334972478434877984909689985215663909912109375p-775 {+ 2473848593091055 -775 (7.79633e-234)}
; Y = 1.271810259838568324397556352778337895870208740234375p150 {+ 1224124584924454 150 (1.81519e+045)}
; 1.5493047334972478434877984909689985215663909912109375p-775 - 1.271810259838568324397556352778337895870208740234375p150 == -1.2718102598385681023529514277470298111438751220703125p150
; [HW: -1.2718102598385681023529514277470298111438751220703125p150] 

; mpf : - 1224124584924453 150
; mpfd: - 1224124584924453 150 (-1.81519e+045) class: Neg. norm. non-zero
; hwf : - 1224124584924453 150 (-1.81519e+045) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111000 #b1000110010011111001111000010100111101000100111101111)))
(assert (= y (fp #b0 #b10010010101 #b0100010110010101010110110111000010111001010100100110)))
(assert (= r (fp #b1 #b10010010101 #b0100010110010101010110110111000010111001010100100101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
