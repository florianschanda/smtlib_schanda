(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3551957700685013374908294281340204179286956787109375p-756 {+ 1599659537724079 -756 (3.57541e-228)}
; Y = -1.2639117456818820262043345792335458099842071533203125p159 {- 1188552839511621 159 (-9.23605e+047)}
; 1.3551957700685013374908294281340204179286956787109375p-756 - -1.2639117456818820262043345792335458099842071533203125p159 == 1.2639117456818820262043345792335458099842071533203125p159
; [HW: 1.2639117456818820262043345792335458099842071533203125p159] 

; mpf : + 1188552839511621 159
; mpfd: + 1188552839511621 159 (9.23605e+047) class: Pos. norm. non-zero
; hwf : + 1188552839511621 159 (9.23605e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001011 #b0101101011101110000111000010100000011111001010101111)))
(assert (= y (fp #b1 #b10010011110 #b0100001110001111101110000101110010111011111001000101)))
(assert (= r (fp #b0 #b10010011110 #b0100001110001111101110000101110010111011111001000101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
