(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.757083494655195199385389059898443520069122314453125p634 {+ 3409600944417490 634 (1.25259e+191)}
; Y = 1.690796910960845611526792708900757133960723876953125p-160 {+ 3111072710791954 -160 (1.15689e-048)}
; 1.757083494655195199385389059898443520069122314453125p634 - 1.690796910960845611526792708900757133960723876953125p-160 == 1.757083494655195199385389059898443520069122314453125p634
; [HW: 1.757083494655195199385389059898443520069122314453125p634] 

; mpf : + 3409600944417490 634
; mpfd: + 3409600944417490 634 (1.25259e+191) class: Pos. norm. non-zero
; hwf : + 3409600944417490 634 (1.25259e+191) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111001 #b1100000111010000001110010101000111100010101011010010)))
(assert (= y (fp #b0 #b01101011111 #b1011000011011000000100001111110011000001001100010010)))
(assert (= r (fp #b0 #b11001111001 #b1100000111010000001110010101000111100010101011010010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
