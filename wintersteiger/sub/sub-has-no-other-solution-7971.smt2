(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8839302599333385135338403415516950190067291259765625p-508 {- 3980867989257289 -508 (-2.24816e-153)}
; Y = 1.01431683997151811382764208246953785419464111328125p-2 {+ 64477315160852 -2 (0.253579)}
; -1.8839302599333385135338403415516950190067291259765625p-508 - 1.01431683997151811382764208246953785419464111328125p-2 == -1.01431683997151811382764208246953785419464111328125p-2
; [HW: -1.01431683997151811382764208246953785419464111328125p-2] 

; mpf : - 64477315160852 -2
; mpfd: - 64477315160852 -2 (-0.253579) class: Neg. norm. non-zero
; hwf : - 64477315160852 -2 (-0.253579) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000011 #b1110001001001001010000001110011001011011110001001001)))
(assert (= y (fp #b0 #b01111111101 #b0000001110101010010001001011011101110101101100010100)))
(assert (= r (fp #b1 #b01111111101 #b0000001110101010010001001011011101110101101100010100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
