(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0016482527355474729802153888158500194549560546875p-682 {+ 7423070405624 -682 (4.99181e-206)}
; Y = -1.6711134929874560395290927772293798625469207763671875p-856 {- 3022426476941619 -856 (-3.478e-258)}
; 1.0016482527355474729802153888158500194549560546875p-682 - -1.6711134929874560395290927772293798625469207763671875p-856 == 1.0016482527355474729802153888158500194549560546875p-682
; [HW: 1.0016482527355474729802153888158500194549560546875p-682] 

; mpf : + 7423070405624 -682
; mpfd: + 7423070405624 -682 (4.99181e-206) class: Pos. norm. non-zero
; hwf : + 7423070405624 -682 (4.99181e-206) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010101 #b0000000001101100000001010001011110011000001111111000)))
(assert (= y (fp #b1 #b00010100111 #b1010101111001110000110000000100001001001000100110011)))
(assert (= r (fp #b0 #b00101010101 #b0000000001101100000001010001011110011000001111111000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
