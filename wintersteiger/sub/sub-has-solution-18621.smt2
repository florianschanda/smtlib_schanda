(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.852968336638297852658752162824384868144989013671875p578 {+ 3841427883043070 578 (1.83318e+174)}
; Y = -1.757164549106411843837349806562997400760650634765625p344 {- 3409965981213786 344 (-6.29696e+103)}
; 1.852968336638297852658752162824384868144989013671875p578 - -1.757164549106411843837349806562997400760650634765625p344 == 1.852968336638297852658752162824384868144989013671875p578
; [HW: 1.852968336638297852658752162824384868144989013671875p578] 

; mpf : + 3841427883043070 578
; mpfd: + 3841427883043070 578 (1.83318e+174) class: Pos. norm. non-zero
; hwf : + 3841427883043070 578 (1.83318e+174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000001 #b1101101001011100001000100000011001100010100011111110)))
(assert (= y (fp #b1 #b10101010111 #b1100000111010101100010010011000000011010010001011010)))
(assert (= r (fp #b0 #b11001000001 #b1101101001011100001000100000011001100010100011111110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
