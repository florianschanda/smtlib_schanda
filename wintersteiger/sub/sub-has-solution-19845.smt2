(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2085712115362465812751224802923388779163360595703125p221 {+ 939321230554853 221 (4.07288e+066)}
; Y = 1.37518124245122397297791394521482288837432861328125p-702 {+ 1689666103699732 -702 (6.53586e-212)}
; 1.2085712115362465812751224802923388779163360595703125p221 - 1.37518124245122397297791394521482288837432861328125p-702 == 1.20857121153624635923051755526103079319000244140625p221
; [HW: 1.20857121153624635923051755526103079319000244140625p221] 

; mpf : + 939321230554852 221
; mpfd: + 939321230554852 221 (4.07288e+066) class: Pos. norm. non-zero
; hwf : + 939321230554852 221 (4.07288e+066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011100 #b0011010101100100111011000100010001101111011011100101)))
(assert (= y (fp #b0 #b00101000001 #b0110000000001011111000001011111001100110100100010100)))
(assert (= r (fp #b0 #b10011011100 #b0011010101100100111011000100010001101111011011100100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
