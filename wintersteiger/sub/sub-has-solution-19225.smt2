(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.55345987776269023328268303885124623775482177734375p-920 {- 2492561699256572 -920 (-1.75269e-277)}
; Y = -1.776485157034354500638073659501969814300537109375p-203 {- 3496978263878640 -203 (-1.38189e-061)}
; -1.55345987776269023328268303885124623775482177734375p-920 - -1.776485157034354500638073659501969814300537109375p-203 == 1.776485157034354500638073659501969814300537109375p-203
; [HW: 1.776485157034354500638073659501969814300537109375p-203] 

; mpf : + 3496978263878640 -203
; mpfd: + 3496978263878640 -203 (1.38189e-061) class: Pos. norm. non-zero
; hwf : + 3496978263878640 -203 (1.38189e-061) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100111 #b1000110110101111100010111110101010100011100011111100)))
(assert (= y (fp #b1 #b01100110100 #b1100011011000111101110110011001101001010101111110000)))
(assert (= r (fp #b0 #b01100110100 #b1100011011000111101110110011001101001010101111110000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
