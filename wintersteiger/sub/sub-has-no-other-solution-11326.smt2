(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3145148931381041013111143911373801529407501220703125p-155 {+ 1416449155539237 -155 (2.87817e-047)}
; Y = 1.328918625887263171847507692291401326656341552734375p-909 {+ 1481317800981094 -909 (3.07066e-274)}
; 1.3145148931381041013111143911373801529407501220703125p-155 - 1.328918625887263171847507692291401326656341552734375p-909 == 1.3145148931381041013111143911373801529407501220703125p-155
; [HW: 1.3145148931381041013111143911373801529407501220703125p-155] 

; mpf : + 1416449155539237 -155
; mpfd: + 1416449155539237 -155 (2.87817e-047) class: Pos. norm. non-zero
; hwf : + 1416449155539237 -155 (2.87817e-047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100100 #b0101000010000100000011000100110000100010000100100101)))
(assert (= y (fp #b0 #b00001110010 #b0101010000110100000000101101010100111011001001100110)))
(assert (= r (fp #b0 #b01101100100 #b0101000010000100000011000100110000100010000100100101)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
