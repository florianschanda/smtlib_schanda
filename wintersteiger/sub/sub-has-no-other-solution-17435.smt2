(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.384451273989812047915393122821114957332611083984375p-488 {- 1731414614282630 -488 (-1.73237e-147)}
; Y = -1.5106538553648298783826930957729928195476531982421875p-804 {- 2299780512736355 -804 (-1.41595e-242)}
; -1.384451273989812047915393122821114957332611083984375p-488 - -1.5106538553648298783826930957729928195476531982421875p-804 == -1.3844512739898118258707881977898068726062774658203125p-488
; [HW: -1.3844512739898118258707881977898068726062774658203125p-488] 

; mpf : - 1731414614282629 -488
; mpfd: - 1731414614282629 -488 (-1.73237e-147) class: Neg. norm. non-zero
; hwf : - 1731414614282629 -488 (-1.73237e-147) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000010111 #b0110001001101011011001100001000010110001000110000110)))
(assert (= y (fp #b1 #b00011011011 #b1000001010111010001101100000100001011110010001100011)))
(assert (= r (fp #b1 #b01000010111 #b0110001001101011011001100001000010110001000110000101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
