(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7538230955254243692564841694547794759273529052734375p512 {+ 3394917412111575 512 (2.35149e+154)}
; Y = 1.973990853282911128729892880073748528957366943359375p528 {+ 4386464843907190 528 (1.73453e+159)}
; 1.7538230955254243692564841694547794759273529052734375p512 - 1.973990853282911128729892880073748528957366943359375p528 == -1.9739640920662433476451269598328508436679840087890625p528
; [HW: -1.9739640920662433476451269598328508436679840087890625p528] 

; mpf : - 4386344322101777 528
; mpfd: - 4386344322101777 528 (-1.73451e+159) class: Neg. norm. non-zero
; hwf : - 4386344322101777 528 (-1.73451e+159) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111111 #b1100000011111010100011001110011001000000010011010111)))
(assert (= y (fp #b0 #b11000001111 #b1111100101010111011101101110110101110100000001110110)))
(assert (= r (fp #b1 #b11000001111 #b1111100101010101101101011111001011100111001000010001)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
