(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.206030577860641717080625312519259750843048095703125p268 {+ 927879233680114 268 (5.72001e+080)}
; Y = 1.4279007320436389871787241645506583154201507568359375p96 {+ 1927093577383295 96 (1.1313e+029)}
; 1.206030577860641717080625312519259750843048095703125p268 - 1.4279007320436389871787241645506583154201507568359375p96 == 1.206030577860641717080625312519259750843048095703125p268
; [HW: 1.206030577860641717080625312519259750843048095703125p268] 

; mpf : + 927879233680114 268
; mpfd: + 927879233680114 268 (5.72001e+080) class: Pos. norm. non-zero
; hwf : + 927879233680114 268 (5.72001e+080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001011 #b0011010010111110011010111000000111100011001011110010)))
(assert (= y (fp #b0 #b10001011111 #b0110110110001010111001110000001000001111110101111111)))
(assert (= r (fp #b0 #b10100001011 #b0011010010111110011010111000000111100011001011110010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
