(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2329961555624573410483435509377159178256988525390625p109 {+ 1049321399369841 109 (8.0026e+032)}
; Y = -1.1269025264738152802834747490123845636844635009765625p-499 {- 571518170939849 -499 (-6.88523e-151)}
; 1.2329961555624573410483435509377159178256988525390625p109 - -1.1269025264738152802834747490123845636844635009765625p-499 == 1.2329961555624573410483435509377159178256988525390625p109
; [HW: 1.2329961555624573410483435509377159178256988525390625p109] 

; mpf : + 1049321399369841 109
; mpfd: + 1049321399369841 109 (8.0026e+032) class: Pos. norm. non-zero
; hwf : + 1049321399369841 109 (8.0026e+032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101100 #b0011101110100101101000101101010000111100000001110001)))
(assert (= y (fp #b1 #b01000001100 #b0010000001111100101011110001100011111100000111001001)))
(assert (= r (fp #b0 #b10001101100 #b0011101110100101101000101101010000111100000001110001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
