(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1307407987857498454786764341406524181365966796875p857 {+ 588804212693624 857 (1.0866e+258)}
; Y = -1.74073620573263365685079406830482184886932373046875p845 {- 3335979300117324 845 (-4.08394e+254)}
; 1.1307407987857498454786764341406524181365966796875p857 - -1.74073620573263365685079406830482184886932373046875p845 == 1.131165783210977604511526806163601577281951904296875p857
; [HW: 1.131165783210977604511526806163601577281951904296875p857] 

; mpf : + 590718172392718 857
; mpfd: + 590718172392718 857 (1.08701e+258) class: Pos. norm. non-zero
; hwf : + 590718172392718 857 (1.08701e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011000 #b0010000101111000001110101001111100001001101001111000)))
(assert (= y (fp #b1 #b11101001100 #b1011110110100000111000110101001010010101101101001100)))
(assert (= r (fp #b0 #b11101011000 #b0010000110010100000101001010110100111110110100001110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
