(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9102068768029718537349026519223116338253021240234375p892 {+ 4099207351199927 892 (6.3072e+268)}
; Y = 1.0238531115571116725249112278106622397899627685546875p455 {+ 107424864320235 455 (9.52545e+136)}
; 1.9102068768029718537349026519223116338253021240234375p892 - 1.0238531115571116725249112278106622397899627685546875p455 == 1.910206876802971631690297726891003549098968505859375p892
; [HW: 1.910206876802971631690297726891003549098968505859375p892] 

; mpf : + 4099207351199926 892
; mpfd: + 4099207351199926 892 (6.3072e+268) class: Pos. norm. non-zero
; hwf : + 4099207351199926 892 (6.3072e+268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111011 #b1110100100000011010100010110000001110110100010110111)))
(assert (= y (fp #b0 #b10111000110 #b0000011000011011001111001100111000001011101011101011)))
(assert (= r (fp #b0 #b11101111011 #b1110100100000011010100010110000001110110100010110110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
