(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.260846062999714245478344309958629310131072998046875p496 {+ 1174746232126574 496 (2.57953e+149)}
; Y = 1.77767125261979419548197256517596542835235595703125p791 {+ 3502319963515252 791 (2.31514e+238)}
; 1.260846062999714245478344309958629310131072998046875p496 - 1.77767125261979419548197256517596542835235595703125p791 == -1.7776712526197939734373676401446573436260223388671875p791
; [HW: -1.7776712526197939734373676401446573436260223388671875p791] 

; mpf : - 3502319963515251 791
; mpfd: - 3502319963515251 791 (-2.31514e+238) class: Neg. norm. non-zero
; hwf : - 3502319963515251 791 (-2.31514e+238) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101111 #b0100001011000110110011101011110111011111110001101110)))
(assert (= y (fp #b0 #b11100010110 #b1100011100010101011101101001010100001010100101110100)))
(assert (= r (fp #b1 #b11100010110 #b1100011100010101011101101001010100001010100101110011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
