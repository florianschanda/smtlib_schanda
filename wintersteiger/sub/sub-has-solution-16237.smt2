(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.16695981247426150417823009775020182132720947265625p303 {+ 751920149244932 303 (1.90171e+091)}
; Y = -1.4193880444141806496105573387467302381992340087890625p867 {- 1888755840547345 867 (-1.39671e+261)}
; 1.16695981247426150417823009775020182132720947265625p303 - -1.4193880444141806496105573387467302381992340087890625p867 == 1.4193880444141806496105573387467302381992340087890625p867
; [HW: 1.4193880444141806496105573387467302381992340087890625p867] 

; mpf : + 1888755840547345 867
; mpfd: + 1888755840547345 867 (1.39671e+261) class: Pos. norm. non-zero
; hwf : + 1888755840547345 867 (1.39671e+261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101110 #b0010101010111101111000001101011001010010110000000100)))
(assert (= y (fp #b1 #b11101100010 #b0110101101011101000000111100111100010111101000010001)))
(assert (= r (fp #b0 #b11101100010 #b0110101101011101000000111100111100010111101000010001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
