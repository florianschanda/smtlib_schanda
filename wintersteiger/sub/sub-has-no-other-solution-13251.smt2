(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.60688797534636318431466861511580646038055419921875p30 {+ 2733180459625516 30 (1.72538e+009)}
; Y = 1.629276331968303903607875326997600495815277099609375p1010 {+ 2834008654165526 1010 (1.78768e+304)}
; 1.60688797534636318431466861511580646038055419921875p30 - 1.629276331968303903607875326997600495815277099609375p1010 == -1.6292763319683036815632704019662924110889434814453125p1010
; [HW: -1.6292763319683036815632704019662924110889434814453125p1010] 

; mpf : - 2834008654165525 1010
; mpfd: - 2834008654165525 1010 (-1.78768e+304) class: Neg. norm. non-zero
; hwf : - 2834008654165525 1010 (-1.78768e+304) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011101 #b1001101101011101000000101010011001110010110000101100)))
(assert (= y (fp #b0 #b11111110001 #b1010000100011000010000001111000111110011011000010110)))
(assert (= r (fp #b1 #b11111110001 #b1010000100011000010000001111000111110011011000010101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
