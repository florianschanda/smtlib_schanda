(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.18901088581461777948788949288427829742431640625p350 {+ 851229354923680 350 (2.72699e+105)}
; Y = -1.651400046316724878892046035616658627986907958984375p-229 {- 2933645005861126 -229 (-1.91418e-069)}
; 1.18901088581461777948788949288427829742431640625p350 - -1.651400046316724878892046035616658627986907958984375p-229 == 1.18901088581461777948788949288427829742431640625p350
; [HW: 1.18901088581461777948788949288427829742431640625p350] 

; mpf : + 851229354923680 350
; mpfd: + 851229354923680 350 (2.72699e+105) class: Pos. norm. non-zero
; hwf : + 851229354923680 350 (2.72699e+105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101011101 #b0011000001100011000001000111010100101001011010100000)))
(assert (= y (fp #b1 #b01100011010 #b1010011011000010001001110100011110001011000100000110)))
(assert (= r (fp #b0 #b10101011101 #b0011000001100011000001000111010100101001011010100000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
