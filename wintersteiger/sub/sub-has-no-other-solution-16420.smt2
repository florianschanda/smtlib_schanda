(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9995034476517281607499398887739516794681549072265625p734 {+ 4501363354399849 734 (1.80692e+221)}
; Y = 1.415420090206537917509876933763734996318817138671875p-5 {+ 1870885763456382 -5 (0.0442319)}
; 1.9995034476517281607499398887739516794681549072265625p734 - 1.415420090206537917509876933763734996318817138671875p-5 == 1.9995034476517279387053349637426435947418212890625p734
; [HW: 1.9995034476517279387053349637426435947418212890625p734] 

; mpf : + 4501363354399848 734
; mpfd: + 4501363354399848 734 (1.80692e+221) class: Pos. norm. non-zero
; hwf : + 4501363354399848 734 (1.80692e+221) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011101 #b1111111111011111011101010011101111100111010001101001)))
(assert (= y (fp #b0 #b01111111010 #b0110101001011000111110001001010110001001110101111110)))
(assert (= r (fp #b0 #b11011011101 #b1111111111011111011101010011101111100111010001101000)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
