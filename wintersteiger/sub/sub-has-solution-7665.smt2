(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7278232452693185194902980583719909191131591796875p-329 {- 3277824496186488 -329 (-1.5799e-099)}
; Y = 1.4396624993888149646181773277930915355682373046875p644 {+ 1980063868416248 644 (1.05094e+194)}
; -1.7278232452693185194902980583719909191131591796875p-329 - 1.4396624993888149646181773277930915355682373046875p644 == -1.4396624993888149646181773277930915355682373046875p644
; [HW: -1.4396624993888149646181773277930915355682373046875p644] 

; mpf : - 1980063868416248 644
; mpfd: - 1980063868416248 644 (-1.05094e+194) class: Neg. norm. non-zero
; hwf : - 1980063868416248 644 (-1.05094e+194) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010110110 #b1011101001010010100111111100101110110011010001111000)))
(assert (= y (fp #b0 #b11010000011 #b0111000010001101101110001011100000100111000011111000)))
(assert (= r (fp #b1 #b11010000011 #b0111000010001101101110001011100000100111000011111000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
