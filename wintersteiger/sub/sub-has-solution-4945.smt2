(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.16485512721155526350003128754906356334686279296875p528 {- 742441489480076 528 (-1.02355e+159)}
; Y = -1.7408487699591344011196270002983510494232177734375p24 {- 3336486244325848 24 (-2.92066e+007)}
; -1.16485512721155526350003128754906356334686279296875p528 - -1.7408487699591344011196270002983510494232177734375p24 == -1.1648551272115550414554263625177554786205291748046875p528
; [HW: -1.1648551272115550414554263625177554786205291748046875p528] 

; mpf : - 742441489480075 528
; mpfd: - 742441489480075 528 (-1.02355e+159) class: Neg. norm. non-zero
; hwf : - 742441489480075 528 (-1.02355e+159) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001111 #b0010101000110011111100100001001111110011100110001100)))
(assert (= y (fp #b1 #b10000010111 #b1011110110101000010000111101011001000001100111011000)))
(assert (= r (fp #b1 #b11000001111 #b0010101000110011111100100001001111110011100110001011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
