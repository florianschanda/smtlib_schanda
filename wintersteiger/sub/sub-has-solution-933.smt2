(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2231541627088711177151481024338863790035247802734375p-955 {+ 1004997004021847 -955 (4.01639e-288)}
; Y = 1.7128311663774231643486700704670511186122894287109375p225 {+ 3210306175275439 225 (9.23557e+067)}
; 1.2231541627088711177151481024338863790035247802734375p-955 - 1.7128311663774231643486700704670511186122894287109375p225 == -1.712831166377422942304065145435743033885955810546875p225
; [HW: -1.712831166377422942304065145435743033885955810546875p225] 

; mpf : - 3210306175275438 225
; mpfd: - 3210306175275438 225 (-9.23557e+067) class: Neg. norm. non-zero
; hwf : - 3210306175275438 225 (-9.23557e+067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001000100 #b0011100100100000101000011001011011001101000001010111)))
(assert (= y (fp #b0 #b10011100000 #b1011011001111100000110100111001100101001000110101111)))
(assert (= r (fp #b1 #b10011100000 #b1011011001111100000110100111001100101001000110101110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
