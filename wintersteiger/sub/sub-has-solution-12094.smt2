(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3576481312996924177838309333310462534427642822265625p-523 {- 1610703990851049 -523 (-4.94424e-158)}
; Y = 1.4843082970538536979887567213154397904872894287109375p-372 {+ 2181130666144175 -372 (1.543e-112)}
; -1.3576481312996924177838309333310462534427642822265625p-523 - 1.4843082970538536979887567213154397904872894287109375p-372 == -1.4843082970538536979887567213154397904872894287109375p-372
; [HW: -1.4843082970538536979887567213154397904872894287109375p-372] 

; mpf : - 2181130666144175 -372
; mpfd: - 2181130666144175 -372 (-1.543e-112) class: Neg. norm. non-zero
; hwf : - 2181130666144175 -372 (-1.543e-112) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110100 #b0101101110001110110100111111001101101000010111101001)))
(assert (= y (fp #b0 #b01010001011 #b0111101111111011101000001110100100000111000110101111)))
(assert (= r (fp #b1 #b01010001011 #b0111101111111011101000001110100100000111000110101111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
