(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2104003236415519229041137805324979126453399658203125p-730 {+ 947558819150725 -730 (2.14305e-220)}
; Y = -1.3920683130025357510106687186635099351406097412109375p6 {- 1765718708341999 6 (-89.0924)}
; 1.2104003236415519229041137805324979126453399658203125p-730 - -1.3920683130025357510106687186635099351406097412109375p6 == 1.3920683130025357510106687186635099351406097412109375p6
; [HW: 1.3920683130025357510106687186635099351406097412109375p6] 

; mpf : + 1765718708341999 6
; mpfd: + 1765718708341999 6 (89.0924) class: Pos. norm. non-zero
; hwf : + 1765718708341999 6 (89.0924) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100100101 #b0011010111011100110010111010110100011011101110000101)))
(assert (= y (fp #b1 #b10000000101 #b0110010001011110100101101100011000100100110011101111)))
(assert (= r (fp #b0 #b10000000101 #b0110010001011110100101101100011000100100110011101111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
