(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.881634615926746079139775247313082218170166015625p689 {- 3970529327764624 689 (-4.83284e+207)}
; Y = 1.8597858746598614487766099045984447002410888671875p-514 {+ 3872131344736568 -514 (3.46773e-155)}
; -1.881634615926746079139775247313082218170166015625p689 - 1.8597858746598614487766099045984447002410888671875p-514 == -1.881634615926746079139775247313082218170166015625p689
; [HW: -1.881634615926746079139775247313082218170166015625p689] 

; mpf : - 3970529327764624 689
; mpfd: - 3970529327764624 689 (-4.83284e+207) class: Neg. norm. non-zero
; hwf : - 3970529327764624 689 (-4.83284e+207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110000 #b1110000110110010110011100110001001101101010010010000)))
(assert (= y (fp #b0 #b00111111101 #b1101110000011010111011010101010100111010000100111000)))
(assert (= r (fp #b1 #b11010110000 #b1110000110110010110011100110001001101101010010010000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
