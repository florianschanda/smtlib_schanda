(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.957896170653267819972143115592189133167266845703125p220 {+ 4313980837213682 220 (3.29905e+066)}
; Y = 1.4530208209167614352708142178016714751720428466796875p999 {+ 2040224400271803 999 (7.78462e+300)}
; 1.957896170653267819972143115592189133167266845703125p220 - 1.4530208209167614352708142178016714751720428466796875p999 == -1.453020820916761213226209292770363390445709228515625p999
; [HW: -1.453020820916761213226209292770363390445709228515625p999] 

; mpf : - 2040224400271802 999
; mpfd: - 2040224400271802 999 (-7.78462e+300) class: Neg. norm. non-zero
; hwf : - 2040224400271802 999 (-7.78462e+300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011011 #b1111010100111000101011101111010111101011010111110010)))
(assert (= y (fp #b0 #b11111100110 #b0111001111111001001011000010101000111110100110111011)))
(assert (= r (fp #b1 #b11111100110 #b0111001111111001001011000010101000111110100110111010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
