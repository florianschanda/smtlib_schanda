(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.99429527413808838076647589332424104213714599609375p226 {+ 4477907826104540 226 (2.15064e+068)}
; Y = -1.978657728988693076388472036342136561870574951171875p205 {- 4407482583596734 205 (-1.01747e+062)}
; 1.99429527413808838076647589332424104213714599609375p226 - -1.978657728988693076388472036342136561870574951171875p205 == 1.994296217635616930152764325612224638462066650390625p226
; [HW: 1.994296217635616930152764325612224638462066650390625p226] 

; mpf : + 4477912075239658 226
; mpfd: + 4477912075239658 226 (2.15064e+068) class: Pos. norm. non-zero
; hwf : + 4477912075239658 226 (2.15064e+068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011100001 #b1111111010001010001000101001010011111101100011011100)))
(assert (= y (fp #b1 #b10011001100 #b1111101010001001010100000001101111111011111010111110)))
(assert (= r (fp #b0 #b10011100001 #b1111111010001010001100100110100101001000000011101010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
