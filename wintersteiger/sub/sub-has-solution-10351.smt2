(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6211889253992171067153549302020110189914703369140625p-11 {+ 2797586212954593 -11 (0.000791596)}
; Y = 1.2906655158281090667315993414376862347126007080078125p-698 {+ 1309041108772925 -698 (9.81469e-211)}
; 1.6211889253992171067153549302020110189914703369140625p-11 - 1.2906655158281090667315993414376862347126007080078125p-698 == 1.62118892539921688467075000517070293426513671875p-11
; [HW: 1.62118892539921688467075000517070293426513671875p-11] 

; mpf : + 2797586212954592 -11
; mpfd: + 2797586212954592 -11 (0.000791596) class: Pos. norm. non-zero
; hwf : + 2797586212954592 -11 (0.000791596) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111110100 #b1001111100000110001111001100011100111010000111100001)))
(assert (= y (fp #b0 #b00101000101 #b0100101001101001000011100010010010001110100000111101)))
(assert (= r (fp #b0 #b01111110100 #b1001111100000110001111001100011100111010000111100000)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
