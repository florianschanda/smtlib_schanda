(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.894320503284976808799910941161215305328369140625p-51 {+ 4027661485344016 -51 (8.41247e-016)}
; Y = -1.5422196966140051532789811972179450094699859619140625p-55 {- 2441940423623777 -55 (-4.28052e-017)}
; 1.894320503284976808799910941161215305328369140625p-51 - -1.5422196966140051532789811972179450094699859619140625p-55 == 1.990709234323352117002059458172880113124847412109375p-51
; [HW: 1.990709234323352117002059458172880113124847412109375p-51] 

; mpf : + 4461757738531158 -51
; mpfd: + 4461757738531158 -51 (8.84052e-016) class: Pos. norm. non-zero
; hwf : + 4461757738531158 -51 (8.84052e-016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111001100 #b1110010011110010001100000100000111000000010100010000)))
(assert (= y (fp #b1 #b01111001000 #b1000101011001110111010001111100000110100010001100001)))
(assert (= r (fp #b0 #b01111001100 #b1111110110011111000111101101000101000011100101010110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
