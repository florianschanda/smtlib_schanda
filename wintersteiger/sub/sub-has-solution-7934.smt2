(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1539891766302809994471090249135158956050872802734375p570 {+ 693505598491223 570 (4.45963e+171)}
; Y = 1.758001074818112297037941971211694180965423583984375p-305 {+ 3413733358097286 -305 (2.69693e-092)}
; 1.1539891766302809994471090249135158956050872802734375p570 - 1.758001074818112297037941971211694180965423583984375p-305 == 1.153989176630280777402504099882207810878753662109375p570
; [HW: 1.153989176630280777402504099882207810878753662109375p570] 

; mpf : + 693505598491222 570
; mpfd: + 693505598491222 570 (4.45963e+171) class: Pos. norm. non-zero
; hwf : + 693505598491222 570 (4.45963e+171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111001 #b0010011101101011110101011010110110010000101001010111)))
(assert (= y (fp #b0 #b01011001110 #b1100001000001100010110111100001010101101001110000110)))
(assert (= r (fp #b0 #b11000111001 #b0010011101101011110101011010110110010000101001010110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
