(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.288767028765399391687651586835272610187530517578125p340 {- 1300491083144738 340 (-2.88651e+102)}
; Y = -1.4730540834610470479759669615305028855800628662109375p921 {- 2130446194001263 921 (-2.61123e+277)}
; -1.288767028765399391687651586835272610187530517578125p340 - -1.4730540834610470479759669615305028855800628662109375p921 == 1.473054083461046825931362036499194800853729248046875p921
; [HW: 1.473054083461046825931362036499194800853729248046875p921] 

; mpf : + 2130446194001262 921
; mpfd: + 2130446194001262 921 (2.61123e+277) class: Pos. norm. non-zero
; hwf : + 2130446194001262 921 (2.61123e+277) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010011 #b0100100111101100101000101101000010110101111000100010)))
(assert (= y (fp #b1 #b11110011000 #b0111100100011010000100101000100110110100010101101111)))
(assert (= r (fp #b0 #b11110011000 #b0111100100011010000100101000100110110100010101101110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
