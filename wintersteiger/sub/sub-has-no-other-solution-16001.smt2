(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3295001758373647948729967538383789360523223876953125p-21 {+ 1483936869119669 -21 (6.33955e-007)}
; Y = -1.040052060779043330285276169888675212860107421875p49 {- 180378445999920 49 (-5.85497e+014)}
; 1.3295001758373647948729967538383789360523223876953125p-21 - -1.040052060779043330285276169888675212860107421875p49 == 1.0400520607790435523298810949199832975864410400390625p49
; [HW: 1.0400520607790435523298810949199832975864410400390625p49] 

; mpf : + 180378445999921 49
; mpfd: + 180378445999921 49 (5.85497e+014) class: Pos. norm. non-zero
; hwf : + 180378445999921 49 (5.85497e+014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101010 #b0101010001011010000111111001111100111111011010110101)))
(assert (= y (fp #b1 #b10000110000 #b0000101001000000110110100001001100101110111100110000)))
(assert (= r (fp #b0 #b10000110000 #b0000101001000000110110100001001100101110111100110001)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
