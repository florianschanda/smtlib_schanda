(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.09991085558029855206996217020787298679351806640625p119 {- 449958491961700 119 (-7.31016e+035)}
; Y = -1.3103864457714518021447247519972734153270721435546875p-581 {- 1397856281517163 -581 (-1.65566e-175)}
; -1.09991085558029855206996217020787298679351806640625p119 - -1.3103864457714518021447247519972734153270721435546875p-581 == -1.0999108555802983300253572451765649020671844482421875p119
; [HW: -1.0999108555802983300253572451765649020671844482421875p119] 

; mpf : - 449958491961699 119
; mpfd: - 449958491961699 119 (-7.31016e+035) class: Neg. norm. non-zero
; hwf : - 449958491961699 119 (-7.31016e+035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001110110 #b0001100110010011110000100000000100111011100101100100)))
(assert (= y (fp #b1 #b00110111010 #b0100111101110101011111000111000110110101110001101011)))
(assert (= r (fp #b1 #b10001110110 #b0001100110010011110000100000000100111011100101100011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
