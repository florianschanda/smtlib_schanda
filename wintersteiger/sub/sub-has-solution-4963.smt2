(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0695073633735858731341750171850435435771942138671875p244 {+ 313033335788787 244 (3.02345e+073)}
; Y = 1.9161102067503981150053959936485625803470611572265625p800 {+ 4125793585751401 800 (1.27767e+241)}
; 1.0695073633735858731341750171850435435771942138671875p244 - 1.9161102067503981150053959936485625803470611572265625p800 == -1.9161102067503981150053959936485625803470611572265625p800
; [HW: -1.9161102067503981150053959936485625803470611572265625p800] 

; mpf : - 4125793585751401 800
; mpfd: - 4125793585751401 800 (-1.27767e+241) class: Neg. norm. non-zero
; hwf : - 4125793585751401 800 (-1.27767e+241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110011 #b0001000111001011001111000000110010000101010011110011)))
(assert (= y (fp #b0 #b11100011111 #b1110101010000110001100101101000110000110010101101001)))
(assert (= r (fp #b1 #b11100011111 #b1110101010000110001100101101000110000110010101101001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
