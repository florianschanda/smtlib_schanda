(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5760265846999559347096919736941345036029815673828125p577 {- 2594193112210221 577 (-7.79599e+173)}
; Y = 1.6510440083739339467427953422884456813335418701171875p-439 {+ 2932041553514643 -439 (1.16303e-132)}
; -1.5760265846999559347096919736941345036029815673828125p577 - 1.6510440083739339467427953422884456813335418701171875p-439 == -1.5760265846999559347096919736941345036029815673828125p577
; [HW: -1.5760265846999559347096919736941345036029815673828125p577] 

; mpf : - 2594193112210221 577
; mpfd: - 2594193112210221 577 (-7.79599e+173) class: Neg. norm. non-zero
; hwf : - 2594193112210221 577 (-7.79599e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001000000 #b1001001101110110011110100110111011101001101100101101)))
(assert (= y (fp #b0 #b01001001000 #b1010011010101010110100011111010000111001000010010011)))
(assert (= r (fp #b1 #b11001000000 #b1001001101110110011110100110111011101001101100101101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
