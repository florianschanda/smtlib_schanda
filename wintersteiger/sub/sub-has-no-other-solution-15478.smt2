(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.340291592174718715568815241567790508270263671875p471 {- 1532537087715376 471 (-8.17198e+141)}
; Y = 1.9578411625600791179380166795453988015651702880859375p829 {+ 4313733102785695 829 (7.0088e+249)}
; -1.340291592174718715568815241567790508270263671875p471 - 1.9578411625600791179380166795453988015651702880859375p829 == -1.9578411625600791179380166795453988015651702880859375p829
; [HW: -1.9578411625600791179380166795453988015651702880859375p829] 

; mpf : - 4313733102785695 829
; mpfd: - 4313733102785695 829 (-7.0088e+249) class: Neg. norm. non-zero
; hwf : - 4313733102785695 829 (-7.0088e+249) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010110 #b0101011100011101010110011000101101111110100000110000)))
(assert (= y (fp #b0 #b11100111100 #b1111010100110101000101000001001111110101010010011111)))
(assert (= r (fp #b1 #b11100111100 #b1111010100110101000101000001001111110101010010011111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
