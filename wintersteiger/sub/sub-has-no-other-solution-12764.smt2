(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1223609575203479238325598998926579952239990234375p149 {+ 551064762693336 149 (8.00944e+044)}
; Y = 1.8275522339208987165903863569837994873523712158203125p-740 {+ 3726963932315781 -740 (3.1599e-223)}
; 1.1223609575203479238325598998926579952239990234375p149 - 1.8275522339208987165903863569837994873523712158203125p-740 == 1.1223609575203479238325598998926579952239990234375p149
; [HW: 1.1223609575203479238325598998926579952239990234375p149] 

; mpf : + 551064762693336 149
; mpfd: + 551064762693336 149 (8.00944e+044) class: Pos. norm. non-zero
; hwf : + 551064762693336 149 (8.00944e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010100 #b0001111101010011000011000011011011011011011011011000)))
(assert (= y (fp #b0 #b00100011011 #b1101001111011010011101101001010001101100000010000101)))
(assert (= r (fp #b0 #b10010010100 #b0001111101010011000011000011011011011011011011011000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
