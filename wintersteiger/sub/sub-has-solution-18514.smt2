(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8506927932303927075707861149567179381847381591796875p822 {- 3831179746599163 822 (-5.17596e+247)}
; Y = -1.836336956020808042211456267978064715862274169921875p398 {- 3766526803491486 398 (-1.18547e+120)}
; -1.8506927932303927075707861149567179381847381591796875p822 - -1.836336956020808042211456267978064715862274169921875p398 == -1.8506927932303927075707861149567179381847381591796875p822
; [HW: -1.8506927932303927075707861149567179381847381591796875p822] 

; mpf : - 3831179746599163 822
; mpfd: - 3831179746599163 822 (-5.17596e+247) class: Neg. norm. non-zero
; hwf : - 3831179746599163 822 (-5.17596e+247) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110101 #b1101100111000111000000001011110111011110000011111011)))
(assert (= y (fp #b1 #b10110001101 #b1101011000011010001011011100001010001011101010011110)))
(assert (= r (fp #b1 #b11100110101 #b1101100111000111000000001011110111011110000011111011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
