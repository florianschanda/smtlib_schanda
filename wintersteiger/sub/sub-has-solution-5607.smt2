(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.382867153191085662911063991487026214599609375p-770 {+ 1724280368443776 -770 (2.22681e-232)}
; Y = -1.572986343462407177185014006681740283966064453125p523 {- 2580501082905680 523 (-4.31929e+157)}
; 1.382867153191085662911063991487026214599609375p-770 - -1.572986343462407177185014006681740283966064453125p523 == 1.572986343462407177185014006681740283966064453125p523
; [HW: 1.572986343462407177185014006681740283966064453125p523] 

; mpf : + 2580501082905680 523
; mpfd: + 2580501082905680 523 (4.31929e+157) class: Pos. norm. non-zero
; hwf : + 2580501082905680 523 (4.31929e+157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111101 #b0110001000000011100101001110110110101011000110000000)))
(assert (= y (fp #b1 #b11000001010 #b1001001010101111001110111010011000111001110001010000)))
(assert (= r (fp #b0 #b11000001010 #b1001001010101111001110111010011000111001110001010000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
