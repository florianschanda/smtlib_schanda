(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.598391656010328620851623782073147594928741455078125p231 {- 2694916439029730 231 (-5.51585e+069)}
; Y = 1.0953392693408046110192799460492096841335296630859375p90 {+ 429369897877023 90 (1.35596e+027)}
; -1.598391656010328620851623782073147594928741455078125p231 - 1.0953392693408046110192799460492096841335296630859375p90 == -1.598391656010328620851623782073147594928741455078125p231
; [HW: -1.598391656010328620851623782073147594928741455078125p231] 

; mpf : - 2694916439029730 231
; mpfd: - 2694916439029730 231 (-5.51585e+069) class: Neg. norm. non-zero
; hwf : - 2694916439029730 231 (-5.51585e+069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100110 #b1001100100110000001100100001000011000011011111100010)))
(assert (= y (fp #b0 #b10001011001 #b0001100001101000001001111000001111010111111000011111)))
(assert (= r (fp #b1 #b10011100110 #b1001100100110000001100100001000011000011011111100010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
