(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4192305484524416758773668334470130503177642822265625p-771 {- 1888046541792745 -771 (-1.14268e-232)}
; Y = -1.525056760247636145066962853888981044292449951171875p959 {- 2364645429799614 959 (-7.43108e+288)}
; -1.4192305484524416758773668334470130503177642822265625p-771 - -1.525056760247636145066962853888981044292449951171875p959 == 1.525056760247636145066962853888981044292449951171875p959
; [HW: 1.525056760247636145066962853888981044292449951171875p959] 

; mpf : + 2364645429799614 959
; mpfd: + 2364645429799614 959 (7.43108e+288) class: Pos. norm. non-zero
; hwf : + 2364645429799614 959 (7.43108e+288) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111100 #b0110101101010010101100010111011100010110010111101001)))
(assert (= y (fp #b1 #b11110111110 #b1000011001101010000111101010110111001110101010111110)))
(assert (= r (fp #b0 #b11110111110 #b1000011001101010000111101010110111001110101010111110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
