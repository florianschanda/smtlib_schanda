(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.99373647769390505146702707861550152301788330078125p-831 {+ 4475391230646740 -831 (1.39233e-250)}
; Y = 1.00490959764976306445305453962646424770355224609375p-928 {+ 22110862146012 -928 (4.42885e-280)}
; 1.99373647769390505146702707861550152301788330078125p-831 - 1.00490959764976306445305453962646424770355224609375p-928 == 1.99373647769390505146702707861550152301788330078125p-831
; [HW: 1.99373647769390505146702707861550152301788330078125p-831] 

; mpf : + 4475391230646740 -831
; mpfd: + 4475391230646740 -831 (1.39233e-250) class: Pos. norm. non-zero
; hwf : + 4475391230646740 -831 (1.39233e-250) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000000 #b1111111001100101100000111000100010001001100111010100)))
(assert (= y (fp #b0 #b00001011111 #b0000000101000001110000010110000101010111100111011100)))
(assert (= r (fp #b0 #b00011000000 #b1111111001100101100000111000100010001001100111010100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
