(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7554478707447831453691833303309977054595947265625p-9 {- 3402234749184040 -9 (-0.00342861)}
; Y = 1.7459197663105776587855189063702709972858428955078125p993 {+ 3359323981604605 993 (1.46154e+299)}
; -1.7554478707447831453691833303309977054595947265625p-9 - 1.7459197663105776587855189063702709972858428955078125p993 == -1.7459197663105776587855189063702709972858428955078125p993
; [HW: -1.7459197663105776587855189063702709972858428955078125p993] 

; mpf : - 3359323981604605 993
; mpfd: - 3359323981604605 993 (-1.46154e+299) class: Neg. norm. non-zero
; hwf : - 3359323981604605 993 (-1.46154e+299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110110 #b1100000101100101000010000001101010101110100000101000)))
(assert (= y (fp #b0 #b11111100000 #b1011111011110100100110010000100110111110011011111101)))
(assert (= r (fp #b1 #b11111100000 #b1011111011110100100110010000100110111110011011111101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
