(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.32024896119208801081867932225577533245086669921875p615 {+ 1442273102290476 615 (1.79516e+185)}
; Y = -1.832974495746747312097113535855896770954132080078125p-1020 {- 3751383628654178 -1020 (-1.6314e-307)}
; 1.32024896119208801081867932225577533245086669921875p615 - -1.832974495746747312097113535855896770954132080078125p-1020 == 1.32024896119208801081867932225577533245086669921875p615
; [HW: 1.32024896119208801081867932225577533245086669921875p615] 

; mpf : + 1442273102290476 615
; mpfd: + 1442273102290476 615 (1.79516e+185) class: Pos. norm. non-zero
; hwf : + 1442273102290476 615 (1.79516e+185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001100110 #b0101000111111011110101011111111011100101111000101100)))
(assert (= y (fp #b1 #b00000000011 #b1101010100111101110100010000100110100010011001100010)))
(assert (= r (fp #b0 #b11001100110 #b0101000111111011110101011111111011100101111000101100)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
