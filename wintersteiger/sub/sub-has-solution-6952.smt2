(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6441459136281419972647199756465852260589599609375p61 {- 2900975296587928 61 (-3.79114e+018)}
; Y = -1.398156617229428189119744274648837745189666748046875p-40 {- 1793137992989550 -40 (-1.27162e-012)}
; -1.6441459136281419972647199756465852260589599609375p61 - -1.398156617229428189119744274648837745189666748046875p-40 == -1.6441459136281419972647199756465852260589599609375p61
; [HW: -1.6441459136281419972647199756465852260589599609375p61] 

; mpf : - 2900975296587928 61
; mpfd: - 2900975296587928 61 (-3.79114e+018) class: Neg. norm. non-zero
; hwf : - 2900975296587928 61 (-3.79114e+018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111100 #b1010010011100110101111110010000011100010100010011000)))
(assert (= y (fp #b1 #b01111010111 #b0110010111101101100101111001000110101111101101101110)))
(assert (= r (fp #b1 #b10000111100 #b1010010011100110101111110010000011100010100010011000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
