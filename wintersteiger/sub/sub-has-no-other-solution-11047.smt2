(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0117215928099543287288497595000080764293670654296875p-511 {+ 52789361011099 -511 (1.50915e-154)}
; Y = -1.41051746468287841906885660137049853801727294921875p-126 {- 1848806300974892 -126 (-1.65806e-038)}
; 1.0117215928099543287288497595000080764293670654296875p-511 - -1.41051746468287841906885660137049853801727294921875p-126 == 1.41051746468287841906885660137049853801727294921875p-126
; [HW: 1.41051746468287841906885660137049853801727294921875p-126] 

; mpf : + 1848806300974892 -126
; mpfd: + 1848806300974892 -126 (1.65806e-038) class: Pos. norm. non-zero
; hwf : + 1848806300974892 -126 (1.65806e-038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000000000 #b0000001100000000001011111011000111000110100110011011)))
(assert (= y (fp #b1 #b01110000001 #b0110100100010111101011000010110100111111111100101100)))
(assert (= r (fp #b0 #b01110000001 #b0110100100010111101011000010110100111111111100101100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
