(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4711795446555839816937805153429508209228515625p-987 {- 2122004021735488 -987 (-1.12476e-297)}
; Y = 1.8932021954731717006126245905761606991291046142578125p249 {+ 4022625074699485 249 (1.71264e+075)}
; -1.4711795446555839816937805153429508209228515625p-987 - 1.8932021954731717006126245905761606991291046142578125p249 == -1.893202195473171922657229515607468783855438232421875p249
; [HW: -1.893202195473171922657229515607468783855438232421875p249] 

; mpf : - 4022625074699486 249
; mpfd: - 4022625074699486 249 (-1.71264e+075) class: Neg. norm. non-zero
; hwf : - 4022625074699486 249 (-1.71264e+075) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000100100 #b0111100010011111001110001111111011010111000001000000)))
(assert (= y (fp #b0 #b10011111000 #b1110010010101000111001100010101001000101110011011101)))
(assert (= r (fp #b1 #b10011111000 #b1110010010101000111001100010101001000101110011011110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
