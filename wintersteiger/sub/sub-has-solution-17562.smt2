(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.200493694412585465869369727442972362041473388671875p-985 {- 902943327446654 -985 (-3.67125e-297)}
; Y = -1.4435387069999576770129579017520882189273834228515625p557 {- 1997520755569401 557 (-6.80983e+167)}
; -1.200493694412585465869369727442972362041473388671875p-985 - -1.4435387069999576770129579017520882189273834228515625p557 == 1.4435387069999574549683529767207801342010498046875p557
; [HW: 1.4435387069999574549683529767207801342010498046875p557] 

; mpf : + 1997520755569400 557
; mpfd: + 1997520755569400 557 (6.80983e+167) class: Pos. norm. non-zero
; hwf : + 1997520755569400 557 (6.80983e+167) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000100110 #b0011001101010011100011100000010010001110011001111110)))
(assert (= y (fp #b1 #b11000101100 #b0111000110001011110000001011000100010011001011111001)))
(assert (= r (fp #b0 #b11000101100 #b0111000110001011110000001011000100010011001011111000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
