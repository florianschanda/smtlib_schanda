(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0550588307660559994616278345347382128238677978515625p-311 {- 247962929721465 -311 (-2.529e-094)}
; Y = -1.09530426821301762885241259937174618244171142578125p-974 {- 429212266810964 -974 (-6.85992e-294)}
; -1.0550588307660559994616278345347382128238677978515625p-311 - -1.09530426821301762885241259937174618244171142578125p-974 == -1.0550588307660557774170229095034301280975341796875p-311
; [HW: -1.0550588307660557774170229095034301280975341796875p-311] 

; mpf : - 247962929721464 -311
; mpfd: - 247962929721464 -311 (-2.529e-094) class: Neg. norm. non-zero
; hwf : - 247962929721464 -311 (-2.529e-094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011001000 #b0000111000011000010101011110010101111111000001111001)))
(assert (= y (fp #b1 #b00000110001 #b0001100001100101110111000100101100100100111001010100)))
(assert (= r (fp #b1 #b01011001000 #b0000111000011000010101011110010101111111000001111000)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
