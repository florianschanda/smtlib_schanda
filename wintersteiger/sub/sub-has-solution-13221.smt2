(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3577161229482308524296740870340727269649505615234375p-759 {+ 1611010198014071 -759 (4.47757e-229)}
; Y = -1.246988910641738446116733030066825449466705322265625p-901 {- 1112339165930778 -901 (-7.37626e-272)}
; 1.3577161229482308524296740870340727269649505615234375p-759 - -1.246988910641738446116733030066825449466705322265625p-901 == 1.3577161229482308524296740870340727269649505615234375p-759
; [HW: 1.3577161229482308524296740870340727269649505615234375p-759] 

; mpf : + 1611010198014071 -759
; mpfd: + 1611010198014071 -759 (4.47757e-229) class: Pos. norm. non-zero
; hwf : + 1611010198014071 -759 (4.47757e-229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001000 #b0101101110010011010010001010100101010000100001110111)))
(assert (= y (fp #b1 #b00001111010 #b0011111100111010101010100100110110101110010100011010)))
(assert (= r (fp #b0 #b00100001000 #b0101101110010011010010001010100101010000100001110111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
