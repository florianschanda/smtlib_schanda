(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3505907175304472378485343142529018223285675048828125p-428 {+ 1578920224829677 -428 (1.94843e-129)}
; Y = -1.688053418955792306377361455815844237804412841796875p-655 {- 3098717121220302 -655 (-1.12912e-197)}
; 1.3505907175304472378485343142529018223285675048828125p-428 - -1.688053418955792306377361455815844237804412841796875p-655 == 1.350590717530447459893139239284209907054901123046875p-428
; [HW: 1.350590717530447459893139239284209907054901123046875p-428] 

; mpf : + 1578920224829678 -428
; mpfd: + 1578920224829678 -428 (1.94843e-129) class: Pos. norm. non-zero
; hwf : + 1578920224829678 -428 (1.94843e-129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010011 #b0101100111000000010100000011001000010011000011101101)))
(assert (= y (fp #b1 #b00101110000 #b1011000000100100010001001101010001010000111011001110)))
(assert (= r (fp #b0 #b01001010011 #b0101100111000000010100000011001000010011000011101110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
