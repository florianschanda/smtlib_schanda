(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3597904499409649847763148500234819948673248291015625p-1020 {+ 1620352136285593 -1020 (1.21025e-307)}
; Y = 1.1280197476854578741978230027598328888416290283203125p188 {+ 576549687972293 188 (4.42543e+056)}
; 1.3597904499409649847763148500234819948673248291015625p-1020 - 1.1280197476854578741978230027598328888416290283203125p188 == -1.1280197476854578741978230027598328888416290283203125p188
; [HW: -1.1280197476854578741978230027598328888416290283203125p188] 

; mpf : - 576549687972293 188
; mpfd: - 576549687972293 188 (-4.42543e+056) class: Neg. norm. non-zero
; hwf : - 576549687972293 188 (-4.42543e+056) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000011 #b0101110000011011001110100001011111101000110110011001)))
(assert (= y (fp #b0 #b10010111011 #b0010000011000101111001101111010110001101000111000101)))
(assert (= r (fp #b1 #b10010111011 #b0010000011000101111001101111010110001101000111000101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
