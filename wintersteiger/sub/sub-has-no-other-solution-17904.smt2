(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.84184191387046869436971974209882318973541259765625p123 {+ 3791318929611908 123 (1.95858e+037)}
; Y = 1.5887393996812841923116366160684265196323394775390625p877 {+ 2651446541022961 877 (1.60088e+264)}
; 1.84184191387046869436971974209882318973541259765625p123 - 1.5887393996812841923116366160684265196323394775390625p877 == -1.5887393996812841923116366160684265196323394775390625p877
; [HW: -1.5887393996812841923116366160684265196323394775390625p877] 

; mpf : - 2651446541022961 877
; mpfd: - 2651446541022961 877 (-1.60088e+264) class: Neg. norm. non-zero
; hwf : - 2651446541022961 877 (-1.60088e+264) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111010 #b1101011110000010111100111010000001111001110010000100)))
(assert (= y (fp #b0 #b11101101100 #b1001011010110111101000000001001101111111011011110001)))
(assert (= r (fp #b1 #b11101101100 #b1001011010110111101000000001001101111111011011110001)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
