(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2118691104066972030750548583455383777618408203125p152 {- 954173646678920 152 (-6.91855e+045)}
; Y = -1.52944422603292196072288788855075836181640625p801 {- 2384404819075328 801 (-2.03967e+241)}
; -1.2118691104066972030750548583455383777618408203125p152 - -1.52944422603292196072288788855075836181640625p801 == 1.52944422603292196072288788855075836181640625p801
; [HW: 1.52944422603292196072288788855075836181640625p801] 

; mpf : + 2384404819075328 801
; mpfd: + 2384404819075328 801 (2.03967e+241) class: Pos. norm. non-zero
; hwf : + 2384404819075328 801 (2.03967e+241) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010111 #b0011011000111101000011011101010000111010101110001000)))
(assert (= y (fp #b1 #b11100100000 #b1000011110001001101010000010001111011110000100000000)))
(assert (= r (fp #b0 #b11100100000 #b1000011110001001101010000010001111011110000100000000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
