(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1177809878613238492306436455692164599895477294921875p909 {- 530438413043587 909 (-4.83752e+273)}
; Y = 1.723736903971522682610384435974992811679840087890625p524 {+ 3259421251040426 524 (9.46648e+157)}
; -1.1177809878613238492306436455692164599895477294921875p909 - 1.723736903971522682610384435974992811679840087890625p524 == -1.1177809878613238492306436455692164599895477294921875p909
; [HW: -1.1177809878613238492306436455692164599895477294921875p909] 

; mpf : - 530438413043587 909
; mpfd: - 530438413043587 909 (-4.83752e+273) class: Neg. norm. non-zero
; hwf : - 530438413043587 909 (-4.83752e+273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001100 #b0001111000100110111001010001001011110100011110000011)))
(assert (= y (fp #b0 #b11000001011 #b1011100101000110110100100101110101110111010010101010)))
(assert (= r (fp #b1 #b11110001100 #b0001111000100110111001010001001011110100011110000011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
