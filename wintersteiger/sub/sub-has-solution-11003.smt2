(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.111457397879629382941857329569756984710693359375p-924 {- 501959495558384 -924 (-7.83749e-279)}
; Y = -1.3376134219495317001502598941442556679248809814453125p-349 {- 1520475681287189 -349 (-1.16644e-105)}
; -1.111457397879629382941857329569756984710693359375p-924 - -1.3376134219495317001502598941442556679248809814453125p-349 == 1.33761342194953147810565496911294758319854736328125p-349
; [HW: 1.33761342194953147810565496911294758319854736328125p-349] 

; mpf : + 1520475681287188 -349
; mpfd: + 1520475681287188 -349 (1.16644e-105) class: Pos. norm. non-zero
; hwf : + 1520475681287188 -349 (1.16644e-105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100011 #b0001110010001000011110001101011011001010010011110000)))
(assert (= y (fp #b1 #b01010100010 #b0101011001101101110101010100110111110110110000010101)))
(assert (= r (fp #b0 #b01010100010 #b0101011001101101110101010100110111110110110000010100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
