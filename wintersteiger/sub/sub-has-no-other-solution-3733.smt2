(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2503809389287849906935434773913584649562835693359375p398 {- 1127615503260351 398 (-8.07199e+119)}
; Y = -1.454925644178590271593520810711197555065155029296875p-573 {- 2048802961603982 -573 (-4.70601e-173)}
; -1.2503809389287849906935434773913584649562835693359375p398 - -1.454925644178590271593520810711197555065155029296875p-573 == -1.250380938928784768648938552360050380229949951171875p398
; [HW: -1.250380938928784768648938552360050380229949951171875p398] 

; mpf : - 1127615503260350 398
; mpfd: - 1127615503260350 398 (-8.07199e+119) class: Neg. norm. non-zero
; hwf : - 1127615503260350 398 (-8.07199e+119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001101 #b0100000000011000111101110001100000111101101010111111)))
(assert (= y (fp #b1 #b00111000010 #b0111010001110110000000011100101111011011110110001110)))
(assert (= r (fp #b1 #b10110001101 #b0100000000011000111101110001100000111101101010111110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
