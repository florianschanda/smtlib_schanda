(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.26854260505387284041489692754112184047698974609375p693 {+ 1209408376053724 693 (5.21305e+208)}
; Y = 1.677795099652318100424963631667196750640869140625p-899 {+ 3052517758227728 -899 (3.96984e-271)}
; 1.26854260505387284041489692754112184047698974609375p693 - 1.677795099652318100424963631667196750640869140625p-899 == 1.2685426050538726183702920025098137557506561279296875p693
; [HW: 1.2685426050538726183702920025098137557506561279296875p693] 

; mpf : + 1209408376053723 693
; mpfd: + 1209408376053723 693 (5.21305e+208) class: Pos. norm. non-zero
; hwf : + 1209408376053723 693 (5.21305e+208) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110100 #b0100010010111111001101010100101001001001111111011100)))
(assert (= y (fp #b0 #b00001111100 #b1010110110000011111110101100101001100101010100010000)))
(assert (= r (fp #b0 #b11010110100 #b0100010010111111001101010100101001001001111111011011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
