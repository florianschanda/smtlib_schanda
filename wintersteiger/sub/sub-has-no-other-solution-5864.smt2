(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.910724130327024372633104576379992067813873291015625p32 {+ 4101536853978106 32 (8.2065e+009)}
; Y = -1.025083015721643509010618799948133528232574462890625p525 {- 112963860257322 525 (-1.12592e+158)}
; 1.910724130327024372633104576379992067813873291015625p32 - -1.025083015721643509010618799948133528232574462890625p525 == 1.025083015721643509010618799948133528232574462890625p525
; [HW: 1.025083015721643509010618799948133528232574462890625p525] 

; mpf : + 112963860257322 525
; mpfd: + 112963860257322 525 (1.12592e+158) class: Pos. norm. non-zero
; hwf : + 112963860257322 525 (1.12592e+158) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011111 #b1110100100100101001101110111001101101110101111111010)))
(assert (= y (fp #b1 #b11000001100 #b0000011001101011110101110010110000110101101000101010)))
(assert (= r (fp #b0 #b11000001100 #b0000011001101011110101110010110000110101101000101010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
