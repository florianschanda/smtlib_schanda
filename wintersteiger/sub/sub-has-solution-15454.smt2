(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9581474644187206735068684793077409267425537109375p-566 {- 4315112563722136 -566 (-8.10714e-171)}
; Y = 1.81742732295621323146406211890280246734619140625p-54 {+ 3681365387068064 -54 (1.00887e-016)}
; -1.9581474644187206735068684793077409267425537109375p-566 - 1.81742732295621323146406211890280246734619140625p-54 == -1.8174273229562134535086670439341105520725250244140625p-54
; [HW: -1.8174273229562134535086670439341105520725250244140625p-54] 

; mpf : - 3681365387068065 -54
; mpfd: - 3681365387068065 -54 (-1.00887e-016) class: Neg. norm. non-zero
; hwf : - 3681365387068065 -54 (-1.00887e-016) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001001 #b1111010101001001001001101111100001101100011110011000)))
(assert (= y (fp #b0 #b01111001001 #b1101000101000010111010101100001011110100001010100000)))
(assert (= r (fp #b1 #b01111001001 #b1101000101000010111010101100001011110100001010100001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
