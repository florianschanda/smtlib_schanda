(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1514167945617155286441857242607511579990386962890625p408 {+ 681920619565777 408 (7.61151e+122)}
; Y = 1.593470075211140812854182513547129929065704345703125p188 {+ 2672751609576434 188 (6.25148e+056)}
; 1.1514167945617155286441857242607511579990386962890625p408 - 1.593470075211140812854182513547129929065704345703125p188 == 1.1514167945617155286441857242607511579990386962890625p408
; [HW: 1.1514167945617155286441857242607511579990386962890625p408] 

; mpf : + 681920619565777 408
; mpfd: + 681920619565777 408 (7.61151e+122) class: Pos. norm. non-zero
; hwf : + 681920619565777 408 (7.61151e+122) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010111 #b0010011011000011010000000100010010110101001011010001)))
(assert (= y (fp #b0 #b10010111011 #b1001011111101101101001111010010000101111101111110010)))
(assert (= r (fp #b0 #b10110010111 #b0010011011000011010000000100010010110101001011010001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
