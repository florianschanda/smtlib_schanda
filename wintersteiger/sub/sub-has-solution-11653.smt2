(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2565702585905567101320912115625105798244476318359375p550 {+ 1155489720982783 550 (4.6311e+165)}
; Y = 1.5816046285163032347753642170573584735393524169921875p43 {+ 2619314388262979 43 (1.39119e+013)}
; 1.2565702585905567101320912115625105798244476318359375p550 - 1.5816046285163032347753642170573584735393524169921875p43 == 1.2565702585905567101320912115625105798244476318359375p550
; [HW: 1.2565702585905567101320912115625105798244476318359375p550] 

; mpf : + 1155489720982783 550
; mpfd: + 1155489720982783 550 (4.6311e+165) class: Pos. norm. non-zero
; hwf : + 1155489720982783 550 (4.6311e+165) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100101 #b0100000110101110100101101010010111000101110011111111)))
(assert (= y (fp #b0 #b10000101010 #b1001010011100100000010100111101010101110000001000011)))
(assert (= r (fp #b0 #b11000100101 #b0100000110101110100101101010010111000101110011111111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
