(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8541530165204280766744204811402596533298492431640625p533 {+ 3846763206918785 533 (5.21355e+160)}
; Y = 1.8794788109757638583374728113994933664798736572265625p-327 {+ 3960820445390697 -327 (6.87431e-099)}
; 1.8541530165204280766744204811402596533298492431640625p533 - 1.8794788109757638583374728113994933664798736572265625p-327 == 1.8541530165204280766744204811402596533298492431640625p533
; [HW: 1.8541530165204280766744204811402596533298492431640625p533] 

; mpf : + 3846763206918785 533
; mpfd: + 3846763206918785 533 (5.21355e+160) class: Pos. norm. non-zero
; hwf : + 3846763206918785 533 (5.21355e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010100 #b1101101010101001110001011010011110111100001010000001)))
(assert (= y (fp #b0 #b01010111000 #b1110000100100101100001011111101010101010011101101001)))
(assert (= r (fp #b0 #b11000010100 #b1101101010101001110001011010011110111100001010000001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
