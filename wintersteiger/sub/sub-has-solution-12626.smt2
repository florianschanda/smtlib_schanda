(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.170970736929828337480330446851439774036407470703125p-123 {- 769983747128434 -123 (-1.10118e-037)}
; Y = -1.714751743609340461915735431830398738384246826171875p525 {- 3218955686181438 525 (-1.88343e+158)}
; -1.170970736929828337480330446851439774036407470703125p-123 - -1.714751743609340461915735431830398738384246826171875p525 == 1.714751743609340461915735431830398738384246826171875p525
; [HW: 1.714751743609340461915735431830398738384246826171875p525] 

; mpf : + 3218955686181438 525
; mpfd: + 3218955686181438 525 (1.88343e+158) class: Pos. norm. non-zero
; hwf : + 3218955686181438 525 (1.88343e+158) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000100 #b0010101111000100101111001111101110101111110001110010)))
(assert (= y (fp #b1 #b11000001100 #b1011011011111001111110000110001110001111101000111110)))
(assert (= r (fp #b0 #b11000001100 #b1011011011111001111110000110001110001111101000111110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
