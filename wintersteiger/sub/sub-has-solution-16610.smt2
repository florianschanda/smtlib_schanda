(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8894216285990153014751058435649611055850982666015625p518 {+ 4005598915133785 518 (1.62131e+156)}
; Y = 1.51472353150818772604679907090030610561370849609375p-559 {+ 2318108704699100 -559 (8.02723e-169)}
; 1.8894216285990153014751058435649611055850982666015625p518 - 1.51472353150818772604679907090030610561370849609375p-559 == 1.8894216285990153014751058435649611055850982666015625p518
; [HW: 1.8894216285990153014751058435649611055850982666015625p518] 

; mpf : + 4005598915133785 518
; mpfd: + 4005598915133785 518 (1.62131e+156) class: Pos. norm. non-zero
; hwf : + 4005598915133785 518 (1.62131e+156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000101 #b1110001110110001001000101100011100110000000101011001)))
(assert (= y (fp #b0 #b00111010000 #b1000001111000100111010111101111001001111001011011100)))
(assert (= r (fp #b0 #b11000000101 #b1110001110110001001000101100011100110000000101011001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
