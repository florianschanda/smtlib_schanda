(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2274343290249039029049527016468346118927001953125p-584 {- 1024273159447816 -584 (-1.93857e-176)}
; Y = -1.849585923784534458036432624794542789459228515625p463 {- 3826194849775248 463 (-4.40517e+139)}
; -1.2274343290249039029049527016468346118927001953125p-584 - -1.849585923784534458036432624794542789459228515625p463 == 1.8495859237845342359918276997632347047328948974609375p463
; [HW: 1.8495859237845342359918276997632347047328948974609375p463] 

; mpf : + 3826194849775247 463
; mpfd: + 3826194849775247 463 (4.40517e+139) class: Pos. norm. non-zero
; hwf : + 3826194849775247 463 (4.40517e+139) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110110111 #b0011101000111001001000101101110100100110010100001000)))
(assert (= y (fp #b1 #b10111001110 #b1101100101111110011101101000110111001011111010010000)))
(assert (= r (fp #b0 #b10111001110 #b1101100101111110011101101000110111001011111010001111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
