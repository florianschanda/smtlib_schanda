(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.442414192754900792436956180608831346035003662109375p-556 {- 1992456393634390 -556 (-6.11522e-168)}
; Y = 1.0941160729552057429003752986318431794643402099609375p-854 {+ 423861111090639 -854 (9.1085e-258)}
; -1.442414192754900792436956180608831346035003662109375p-556 - 1.0941160729552057429003752986318431794643402099609375p-854 == -1.442414192754900792436956180608831346035003662109375p-556
; [HW: -1.442414192754900792436956180608831346035003662109375p-556] 

; mpf : - 1992456393634390 -556
; mpfd: - 1992456393634390 -556 (-6.11522e-168) class: Neg. norm. non-zero
; hwf : - 1992456393634390 -556 (-6.11522e-168) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010011 #b0111000101000010000011100111100100101011001001010110)))
(assert (= y (fp #b0 #b00010101001 #b0001100000010111111111011010111101011110110111001111)))
(assert (= r (fp #b1 #b00111010011 #b0111000101000010000011100111100100101011001001010110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
