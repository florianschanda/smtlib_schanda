(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.53059711691787558862642981694079935550689697265625p70 {+ 2389596978035204 70 (1.80701e+021)}
; Y = 1.6627270795302051542563503971905447542667388916015625p431 {+ 2984657428420569 431 (9.22039e+129)}
; 1.53059711691787558862642981694079935550689697265625p70 - 1.6627270795302051542563503971905447542667388916015625p431 == -1.6627270795302051542563503971905447542667388916015625p431
; [HW: -1.6627270795302051542563503971905447542667388916015625p431] 

; mpf : - 2984657428420569 431
; mpfd: - 2984657428420569 431 (-9.22039e+129) class: Neg. norm. non-zero
; hwf : - 2984657428420569 431 (-9.22039e+129) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000101 #b1000011111010101001101100111000010000011101000000100)))
(assert (= y (fp #b0 #b10110101110 #b1010100110101000011110110101110011000001011111011001)))
(assert (= r (fp #b1 #b10110101110 #b1010100110101000011110110101110011000001011111011001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
