(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.15298123224204207559751012013293802738189697265625p-16 {- 688966220519940 -16 (-1.75931e-005)}
; Y = -1.546850492250464004229115744237788021564483642578125p389 {- 2462795673126562 389 (-1.95037e+117)}
; -1.15298123224204207559751012013293802738189697265625p-16 - -1.546850492250464004229115744237788021564483642578125p389 == 1.546850492250464004229115744237788021564483642578125p389
; [HW: 1.546850492250464004229115744237788021564483642578125p389] 

; mpf : + 2462795673126562 389
; mpfd: + 2462795673126562 389 (1.95037e+117) class: Pos. norm. non-zero
; hwf : + 2462795673126562 389 (1.95037e+117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111101111 #b0010011100101001110001110010110101100001101000000100)))
(assert (= y (fp #b1 #b10110000100 #b1000101111111110011001001101010000000100011010100010)))
(assert (= r (fp #b0 #b10110000100 #b1000101111111110011001001101010000000100011010100010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
