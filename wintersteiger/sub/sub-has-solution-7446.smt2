(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.331603203332627938237919806852005422115325927734375p307 {+ 1493408062963686 307 (3.47203e+092)}
; Y = -1.38305985679023724088665403542108833789825439453125p-778 {- 1725148228301108 -778 (-8.6997e-235)}
; 1.331603203332627938237919806852005422115325927734375p307 - -1.38305985679023724088665403542108833789825439453125p-778 == 1.331603203332627938237919806852005422115325927734375p307
; [HW: 1.331603203332627938237919806852005422115325927734375p307] 

; mpf : + 1493408062963686 307
; mpfd: + 1493408062963686 307 (3.47203e+092) class: Pos. norm. non-zero
; hwf : + 1493408062963686 307 (3.47203e+092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110010 #b0101010011100011111100101001000110001111111111100110)))
(assert (= y (fp #b1 #b00011110101 #b0110001000010000001101011111010101010011000100110100)))
(assert (= r (fp #b0 #b10100110010 #b0101010011100011111100101001000110001111111111100110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
