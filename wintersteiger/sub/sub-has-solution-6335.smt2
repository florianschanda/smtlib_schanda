(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.67330395294572298325874726288020610809326171875p-55 {- 3032291431593440 -55 (-4.64435e-017)}
; Y = -1.86460750277057396573354708380065858364105224609375p397 {- 3893846027299292 397 (-6.0186e+119)}
; -1.67330395294572298325874726288020610809326171875p-55 - -1.86460750277057396573354708380065858364105224609375p397 == 1.8646075027705737436889421587693504989147186279296875p397
; [HW: 1.8646075027705737436889421587693504989147186279296875p397] 

; mpf : + 3893846027299291 397
; mpfd: + 3893846027299291 397 (6.0186e+119) class: Pos. norm. non-zero
; hwf : + 3893846027299291 397 (6.0186e+119) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001000 #b1010110001011101101001011101101000101011010111100000)))
(assert (= y (fp #b1 #b10110001100 #b1101110101010110111010101101010001000110100111011100)))
(assert (= r (fp #b0 #b10110001100 #b1101110101010110111010101101010001000110100111011011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
