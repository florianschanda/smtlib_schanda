(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.733275676740546611398485765676014125347137451171875p-606 {+ 3302380064528574 -606 (6.52665e-183)}
; Y = 1.0910023661582572973571814145543612539768218994140625p666 {+ 409838222320161 666 (3.34043e+200)}
; 1.733275676740546611398485765676014125347137451171875p-606 - 1.0910023661582572973571814145543612539768218994140625p666 == -1.09100236615825707531257648952305316925048828125p666
; [HW: -1.09100236615825707531257648952305316925048828125p666] 

; mpf : - 409838222320160 666
; mpfd: - 409838222320160 666 (-3.34043e+200) class: Neg. norm. non-zero
; hwf : - 409838222320160 666 (-3.34043e+200) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100001 #b1011101110110111111101000110101010001101100010111110)))
(assert (= y (fp #b0 #b11010011001 #b0001011101001011111011100101101010000010001000100001)))
(assert (= r (fp #b1 #b11010011001 #b0001011101001011111011100101101010000010001000100000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
