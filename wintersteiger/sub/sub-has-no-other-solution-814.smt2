(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.611657610529957818101820521405898034572601318359375p766 {+ 2754660986861046 766 (6.25532e+230)}
; Y = 1.697218683516240389508311636745929718017578125p513 {+ 3139993803279488 513 (4.5512e+154)}
; 1.611657610529957818101820521405898034572601318359375p766 - 1.697218683516240389508311636745929718017578125p513 == 1.6116576105299575960572155963745899498462677001953125p766
; [HW: 1.6116576105299575960572155963745899498462677001953125p766] 

; mpf : + 2754660986861045 766
; mpfd: + 2754660986861045 766 (6.25532e+230) class: Pos. norm. non-zero
; hwf : + 2754660986861045 766 (6.25532e+230) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111101 #b1001110010010101100101111101100110010011010111110110)))
(assert (= y (fp #b0 #b11000000000 #b1011001001111100111011000111001111011100110010000000)))
(assert (= r (fp #b0 #b11011111101 #b1001110010010101100101111101100110010011010111110101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
