(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3396810680911606095122579063172452151775360107421875p512 {+ 1529787531680163 512 (1.79622e+154)}
; Y = -1.04580448006649096015507893753238022327423095703125p84 {- 206285039359348 84 (-2.02288e+025)}
; 1.3396810680911606095122579063172452151775360107421875p512 - -1.04580448006649096015507893753238022327423095703125p84 == 1.3396810680911606095122579063172452151775360107421875p512
; [HW: 1.3396810680911606095122579063172452151775360107421875p512] 

; mpf : + 1529787531680163 512
; mpfd: + 1529787531680163 512 (1.79622e+154) class: Pos. norm. non-zero
; hwf : + 1529787531680163 512 (1.79622e+154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111111 #b0101011011110101010101101010011010000101100110100011)))
(assert (= y (fp #b1 #b10001010011 #b0000101110111001110101111010011111100101010101110100)))
(assert (= r (fp #b0 #b10111111111 #b0101011011110101010101101010011010000101100110100011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
