(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.493325473089742505550248097279109060764312744140625p-325 {- 2221740416779338 -325 (-2.18477e-098)}
; Y = -1.991591929523011561542489289422519505023956298828125p-700 {- 4465733044303426 -700 (-3.7862e-211)}
; -1.493325473089742505550248097279109060764312744140625p-325 - -1.991591929523011561542489289422519505023956298828125p-700 == -1.4933254730897422835056431722478009760379791259765625p-325
; [HW: -1.4933254730897422835056431722478009760379791259765625p-325] 

; mpf : - 2221740416779337 -325
; mpfd: - 2221740416779337 -325 (-2.18477e-098) class: Neg. norm. non-zero
; hwf : - 2221740416779337 -325 (-2.18477e-098) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111010 #b0111111001001010100101000000010100110100010001001010)))
(assert (= y (fp #b1 #b00101000011 #b1111110111011000111101111111110001000111011001000010)))
(assert (= r (fp #b1 #b01010111010 #b0111111001001010100101000000010100110100010001001001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
