(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3937130748193975460225146889570169150829315185546875p72 {- 1773126057047531 72 (-6.58162e+021)}
; Y = 1.77189647104302849811574560590088367462158203125p-548 {+ 3476312659357984 -548 (1.92309e-165)}
; -1.3937130748193975460225146889570169150829315185546875p72 - 1.77189647104302849811574560590088367462158203125p-548 == -1.39371307481939776806711961398832499980926513671875p72
; [HW: -1.39371307481939776806711961398832499980926513671875p72] 

; mpf : - 1773126057047532 72
; mpfd: - 1773126057047532 72 (-6.58162e+021) class: Neg. norm. non-zero
; hwf : - 1773126057047532 72 (-6.58162e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000111 #b0110010011001010011000010100110001011011010111101011)))
(assert (= y (fp #b0 #b00111011011 #b1100010110011011000000011101001100000111000100100000)))
(assert (= r (fp #b1 #b10001000111 #b0110010011001010011000010100110001011011010111101100)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
