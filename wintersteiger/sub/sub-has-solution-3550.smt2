(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.19312838587214553598414568114094436168670654296875p197 {+ 869772926648460 197 (2.3966e+059)}
; Y = 1.105525907980270172714654108858667314052581787109375p196 {+ 475246439857878 196 (1.11032e+059)}
; 1.19312838587214553598414568114094436168670654296875p197 - 1.105525907980270172714654108858667314052581787109375p196 == 1.280730863764020899253637253423221409320831298828125p196
; [HW: 1.280730863764020899253637253423221409320831298828125p196] 

; mpf : + 1264299413439042 196
; mpfd: + 1264299413439042 196 (1.28628e+059) class: Pos. norm. non-zero
; hwf : + 1264299413439042 196 (1.28628e+059) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000100 #b0011000101110000110111001010010101000000000010001100)))
(assert (= y (fp #b0 #b10011000011 #b0001101100000011101111101111001110100111111011010110)))
(assert (= r (fp #b0 #b10011000011 #b0100011111011101111110100101011011011000001001000010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
