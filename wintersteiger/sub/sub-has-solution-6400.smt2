(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.306144174281054670672119755181483924388885498046875p-926 {- 1378750789213806 -926 (-2.30258e-279)}
; Y = -1.453410325393876600941212018369697034358978271484375p-147 {- 2041978572489798 -147 (-8.14665e-045)}
; -1.306144174281054670672119755181483924388885498046875p-926 - -1.453410325393876600941212018369697034358978271484375p-147 == 1.453410325393876600941212018369697034358978271484375p-147
; [HW: 1.453410325393876600941212018369697034358978271484375p-147] 

; mpf : + 2041978572489798 -147
; mpfd: + 2041978572489798 -147 (8.14665e-045) class: Pos. norm. non-zero
; hwf : + 2041978572489798 -147 (8.14665e-045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100001 #b0100111001011111011101101111000001100101111001101110)))
(assert (= y (fp #b1 #b01101101100 #b0111010000010010101100101111011100111100010001000110)))
(assert (= r (fp #b0 #b01101101100 #b0111010000010010101100101111011100111100010001000110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
