(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6380465700231556791521825289237312972545623779296875p-141 {- 2873506295001307 -141 (-5.8762e-043)}
; Y = 1.9621451748813061310983130169915966689586639404296875p69 {+ 4333116651071771 69 (1.15825e+021)}
; -1.6380465700231556791521825289237312972545623779296875p-141 - 1.9621451748813061310983130169915966689586639404296875p69 == -1.96214517488130635314291794202290475368499755859375p69
; [HW: -1.96214517488130635314291794202290475368499755859375p69] 

; mpf : - 4333116651071772 69
; mpfd: - 4333116651071772 69 (-1.15825e+021) class: Neg. norm. non-zero
; hwf : - 4333116651071772 69 (-1.15825e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101110010 #b1010001101010111000001010001111110010011000011011011)))
(assert (= y (fp #b0 #b10001000100 #b1111011001001111001001010110110000011110100100011011)))
(assert (= r (fp #b1 #b10001000100 #b1111011001001111001001010110110000011110100100011100)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
