(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0036686339269615952929370905621908605098724365234375p65 {+ 16522058386423 65 (3.70288e+019)}
; Y = 1.847766418741446425855201596277765929698944091796875p40 {+ 3818000527541198 40 (2.03164e+012)}
; 1.0036686339269615952929370905621908605098724365234375p65 - 1.847766418741446425855201596277765929698944091796875p40 == 1.00366857885923099757974341628141701221466064453125p65
; [HW: 1.00366857885923099757974341628141701221466064453125p65] 

; mpf : + 16521810383412 65
; mpfd: + 16521810383412 65 (3.70288e+019) class: Pos. norm. non-zero
; hwf : + 16521810383412 65 (3.70288e+019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000000 #b0000000011110000011011010111011010111100101111110111)))
(assert (= y (fp #b0 #b10000100111 #b1101100100000111001110000101001100100100001111001110)))
(assert (= r (fp #b0 #b10001000000 #b0000000011110000011011001000101000111001001000110100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
