(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4171980095951683953359179213293828070163726806640625p-747 {- 1878892800552513 -747 (-1.91436e-225)}
; Y = 1.28446464783382641172693183762021362781524658203125p834 {+ 1281114881984500 834 (1.47143e+251)}
; -1.4171980095951683953359179213293828070163726806640625p-747 - 1.28446464783382641172693183762021362781524658203125p834 == -1.28446464783382641172693183762021362781524658203125p834
; [HW: -1.28446464783382641172693183762021362781524658203125p834] 

; mpf : - 1281114881984500 834
; mpfd: - 1281114881984500 834 (-1.47143e+251) class: Neg. norm. non-zero
; hwf : - 1281114881984500 834 (-1.47143e+251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010100 #b0110101011001101011111010001111100101010111001000001)))
(assert (= y (fp #b0 #b11101000001 #b0100100011010010101011001101011101010000011111110100)))
(assert (= r (fp #b1 #b11101000001 #b0100100011010010101011001101011101010000011111110100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
