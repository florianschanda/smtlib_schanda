(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5530769198121598950734778554760850965976715087890625p233 {- 2490837009973265 233 (-2.14379e+070)}
; Y = -1.492780809909949102376458540675230324268341064453125p421 {- 2219287471885778 421 (-8.08396e+126)}
; -1.5530769198121598950734778554760850965976715087890625p233 - -1.492780809909949102376458540675230324268341064453125p421 == 1.492780809909949102376458540675230324268341064453125p421
; [HW: 1.492780809909949102376458540675230324268341064453125p421] 

; mpf : + 2219287471885778 421
; mpfd: + 2219287471885778 421 (8.08396e+126) class: Pos. norm. non-zero
; hwf : + 2219287471885778 421 (8.08396e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101000 #b1000110110010110011100101111001011000100000000010001)))
(assert (= y (fp #b1 #b10110100100 #b0111111000100110111000100001011010101000110111010010)))
(assert (= r (fp #b0 #b10110100100 #b0111111000100110111000100001011010101000110111010010)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
