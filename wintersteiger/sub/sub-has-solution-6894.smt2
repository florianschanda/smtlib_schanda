(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0604546142649249329537042285664938390254974365234375p-122 {- 272263378276343 -122 (-1.99449e-037)}
; Y = 1.4377532728615805002192473693867214024066925048828125p-887 {+ 1971465476539629 -887 (1.39341e-267)}
; -1.0604546142649249329537042285664938390254974365234375p-122 - 1.4377532728615805002192473693867214024066925048828125p-887 == -1.0604546142649249329537042285664938390254974365234375p-122
; [HW: -1.0604546142649249329537042285664938390254974365234375p-122] 

; mpf : - 272263378276343 -122
; mpfd: - 272263378276343 -122 (-1.99449e-037) class: Neg. norm. non-zero
; hwf : - 272263378276343 -122 (-1.99449e-037) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000101 #b0000111101111001111101000001111100101000111111110111)))
(assert (= y (fp #b0 #b00010001000 #b0111000000010000100110010011011010101000010011101101)))
(assert (= r (fp #b1 #b01110000101 #b0000111101111001111101000001111100101000111111110111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
