(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6244224553463870730496410033083520829677581787109375p951 {+ 2812148737219759 951 (3.0919e+286)}
; Y = -1.3229113090919988326987777327303774654865264892578125p218 {- 1454263251300445 218 (-5.57275e+065)}
; 1.6244224553463870730496410033083520829677581787109375p951 - -1.3229113090919988326987777327303774654865264892578125p218 == 1.6244224553463870730496410033083520829677581787109375p951
; [HW: 1.6244224553463870730496410033083520829677581787109375p951] 

; mpf : + 2812148737219759 951
; mpfd: + 2812148737219759 951 (3.0919e+286) class: Pos. norm. non-zero
; hwf : + 2812148737219759 951 (3.0919e+286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110110 #b1001111111011010001001100110100010011001110010101111)))
(assert (= y (fp #b1 #b10011011001 #b0101001010101010010100001100100000001111000001011101)))
(assert (= r (fp #b0 #b11110110110 #b1001111111011010001001100110100010011001110010101111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
