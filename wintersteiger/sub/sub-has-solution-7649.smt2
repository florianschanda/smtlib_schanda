(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5550912647031605029468437351169995963573455810546875p524 {+ 2499908812873771 524 (8.54031e+157)}
; Y = -1.3704546854132200195408586296252906322479248046875p569 {- 1668379583184632 569 (-2.64809e+171)}
; 1.5550912647031605029468437351169995963573455810546875p524 - -1.3704546854132200195408586296252906322479248046875p569 == 1.3704546854132642064172387108555994927883148193359375p569
; [HW: 1.3704546854132642064172387108555994927883148193359375p569] 

; mpf : + 1668379583184831 569
; mpfd: + 1668379583184831 569 (2.64809e+171) class: Pos. norm. non-zero
; hwf : + 1668379583184831 569 (2.64809e+171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001011 #b1000111000011010011101100000110000110010000000101011)))
(assert (= y (fp #b1 #b11000111000 #b0101111011010110000111100100011001111111111011111000)))
(assert (= r (fp #b0 #b11000111000 #b0101111011010110000111100100011001111111111110111111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
