(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.713699772528087805767427198588848114013671875p-419 {- 3214218029611904 -419 (-1.2658e-126)}
; Y = -1.0664243274511502335144541575573384761810302734375p-956 {- 299148576357336 -956 (-1.75087e-288)}
; -1.713699772528087805767427198588848114013671875p-419 - -1.0664243274511502335144541575573384761810302734375p-956 == -1.7136997725280875837228222735575400292873382568359375p-419
; [HW: -1.7136997725280875837228222735575400292873382568359375p-419] 

; mpf : - 3214218029611903 -419
; mpfd: - 3214218029611903 -419 (-1.2658e-126) class: Neg. norm. non-zero
; hwf : - 3214218029611903 -419 (-1.2658e-126) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001011100 #b1011011010110101000001110011111000101011101110000000)))
(assert (= y (fp #b1 #b00001000011 #b0001000100000001001011110100101000001111101111011000)))
(assert (= r (fp #b1 #b01001011100 #b1011011010110101000001110011111000101011101101111111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
