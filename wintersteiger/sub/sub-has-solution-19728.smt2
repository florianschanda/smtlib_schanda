(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.876036284895128414262899241293780505657196044921875p-90 {- 3945316686216734 -90 (-1.51545e-027)}
; Y = -1.778584370456746999167307876632548868656158447265625p-39 {- 3506432280665498 -39 (-3.23523e-012)}
; -1.876036284895128414262899241293780505657196044921875p-90 - -1.778584370456746999167307876632548868656158447265625p-39 == 1.778584370456746110988888176507316529750823974609375p-39
; [HW: 1.778584370456746110988888176507316529750823974609375p-39] 

; mpf : + 3506432280665494 -39
; mpfd: + 3506432280665494 -39 (3.23523e-012) class: Pos. norm. non-zero
; hwf : + 3506432280665494 -39 (3.23523e-012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100101 #b1110000001000011111010011111100110111011111000011110)))
(assert (= y (fp #b1 #b01111011000 #b1100011101010001010011100010100001001001110110011010)))
(assert (= r (fp #b0 #b01111011000 #b1100011101010001010011100010100001001001110110010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
