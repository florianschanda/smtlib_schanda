(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9156175208826231592951216953224502503871917724609375p-247 {- 4123574725860879 -247 (-8.47032e-075)}
; Y = 1.5314974363116389266536998547962866723537445068359375p30 {+ 2393651656121471 30 (1.64443e+009)}
; -1.9156175208826231592951216953224502503871917724609375p-247 - 1.5314974363116389266536998547962866723537445068359375p30 == -1.5314974363116389266536998547962866723537445068359375p30
; [HW: -1.5314974363116389266536998547962866723537445068359375p30] 

; mpf : - 2393651656121471 30
; mpfd: - 2393651656121471 30 (-1.64443e+009) class: Neg. norm. non-zero
; hwf : - 2393651656121471 30 (-1.64443e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100001000 #b1110101001100101111010001110101111010101111000001111)))
(assert (= y (fp #b0 #b10000011101 #b1000100000010000001101110100101011011101110001111111)))
(assert (= r (fp #b1 #b10000011101 #b1000100000010000001101110100101011011101110001111111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
