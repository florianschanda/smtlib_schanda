(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.67810266397632634749470526003278791904449462890625p700 {- 3053902904802724 700 (-8.82705e+210)}
; Y = -1.1574157656515702274901968849007971584796905517578125p-833 {- 708937583530653 -833 (-2.02071e-251)}
; -1.67810266397632634749470526003278791904449462890625p700 - -1.1574157656515702274901968849007971584796905517578125p-833 == -1.6781026639763261254501003350014798343181610107421875p700
; [HW: -1.6781026639763261254501003350014798343181610107421875p700] 

; mpf : - 3053902904802723 700
; mpfd: - 3053902904802723 700 (-8.82705e+210) class: Neg. norm. non-zero
; hwf : - 3053902904802723 700 (-8.82705e+210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111011 #b1010110110011000001000101101110100011011110110100100)))
(assert (= y (fp #b1 #b00010111110 #b0010100001001100011001100100110101011001001010011101)))
(assert (= r (fp #b1 #b11010111011 #b1010110110011000001000101101110100011011110110100011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
