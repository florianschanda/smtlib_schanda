(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.400144299153273319546997299767099320888519287109375p942 {+ 1802089716561110 942 (5.2051e+283)}
; Y = 1.4557631264864341336107145252753980457782745361328125p738 {+ 2052574646613517 738 (2.10488e+222)}
; 1.400144299153273319546997299767099320888519287109375p942 - 1.4557631264864341336107145252753980457782745361328125p738 == 1.400144299153273319546997299767099320888519287109375p942
; [HW: 1.400144299153273319546997299767099320888519287109375p942] 

; mpf : + 1802089716561110 942
; mpfd: + 1802089716561110 942 (5.2051e+283) class: Pos. norm. non-zero
; hwf : + 1802089716561110 942 (5.2051e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101101 #b0110011001101111110110110101011010001011010011010110)))
(assert (= y (fp #b0 #b11011100001 #b0111010010101100111001000110101011111011011000001101)))
(assert (= r (fp #b0 #b11110101101 #b0110011001101111110110110101011010001011010011010110)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
