(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7513338927980555137509099949966184794902801513671875p373 {- 3383707039636147 373 (-3.36944e+112)}
; Y = 1.8007883878377082265132003158214502036571502685546875p522 {+ 3606430285068523 522 (2.47241e+157)}
; -1.7513338927980555137509099949966184794902801513671875p373 - 1.8007883878377082265132003158214502036571502685546875p522 == -1.80078838783770844855780524085275828838348388671875p522
; [HW: -1.80078838783770844855780524085275828838348388671875p522] 

; mpf : - 3606430285068524 522
; mpfd: - 3606430285068524 522 (-2.47241e+157) class: Neg. norm. non-zero
; hwf : - 3606430285068524 522 (-2.47241e+157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101110100 #b1100000001010111011010110000000111110001101010110011)))
(assert (= y (fp #b0 #b11000001001 #b1100110100000000011101111100000011000111100011101011)))
(assert (= r (fp #b1 #b11000001001 #b1100110100000000011101111100000011000111100011101100)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
