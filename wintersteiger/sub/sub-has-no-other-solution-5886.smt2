(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.847175390520943150107768815360032021999359130859375p853 {- 3815338773067574 853 (-1.10942e+257)}
; Y = -1.5894947793071143582466220323112793266773223876953125p949 {- 2654848468424373 949 (-7.56354e+285)}
; -1.847175390520943150107768815360032021999359130859375p853 - -1.5894947793071143582466220323112793266773223876953125p949 == 1.58949477930711413620201710727997124195098876953125p949
; [HW: 1.58949477930711413620201710727997124195098876953125p949] 

; mpf : + 2654848468424372 949
; mpfd: + 2654848468424372 949 (7.56354e+285) class: Pos. norm. non-zero
; hwf : + 2654848468424372 949 (7.56354e+285) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101010100 #b1101100011100000011111001000010001000011011100110110)))
(assert (= y (fp #b1 #b11110110100 #b1001011011101001001000010011111001001001011010110101)))
(assert (= r (fp #b0 #b11110110100 #b1001011011101001001000010011111001001001011010110100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
