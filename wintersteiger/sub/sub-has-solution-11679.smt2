(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0083888018267235242575452502933330833911895751953125p850 {- 37779804780917 850 (-7.5705e+255)}
; Y = -1.5864952996085686098837186364107765257358551025390625p-313 {- 2641340012771697 -313 (-9.50715e-095)}
; -1.0083888018267235242575452502933330833911895751953125p850 - -1.5864952996085686098837186364107765257358551025390625p-313 == -1.0083888018267235242575452502933330833911895751953125p850
; [HW: -1.0083888018267235242575452502933330833911895751953125p850] 

; mpf : - 37779804780917 850
; mpfd: - 37779804780917 850 (-7.5705e+255) class: Neg. norm. non-zero
; hwf : - 37779804780917 850 (-7.5705e+255) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101010001 #b0000001000100101110001001011110101111111100101110101)))
(assert (= y (fp #b1 #b01011000110 #b1001011000100100100011100101001100010011100101110001)))
(assert (= r (fp #b1 #b11101010001 #b0000001000100101110001001011110101111111100101110101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
