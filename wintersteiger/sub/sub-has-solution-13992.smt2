(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.018415386274849954162391441059298813343048095703125p-307 {- 82935526765298 -307 (-3.90586e-093)}
; Y = -1.6800924926679012827435144572518765926361083984375p840 {- 3062864296556632 840 (-1.23177e+253)}
; -1.018415386274849954162391441059298813343048095703125p-307 - -1.6800924926679012827435144572518765926361083984375p840 == 1.6800924926679010606989095322205685079097747802734375p840
; [HW: 1.6800924926679010606989095322205685079097747802734375p840] 

; mpf : + 3062864296556631 840
; mpfd: + 3062864296556631 840 (1.23177e+253) class: Pos. norm. non-zero
; hwf : + 3062864296556631 840 (1.23177e+253) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011001100 #b0000010010110110110111101110100111001011001011110010)))
(assert (= y (fp #b1 #b11101000111 #b1010111000011010100010101010011001000011100001011000)))
(assert (= r (fp #b0 #b11101000111 #b1010111000011010100010101010011001000011100001010111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
