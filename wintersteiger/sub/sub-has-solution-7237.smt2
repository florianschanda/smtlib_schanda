(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.829099816481535523138290955103002488613128662109375p-817 {- 3733933624559190 -817 (-2.09282e-246)}
; Y = -1.1580831145668633030965111174737103283405303955078125p-255 {- 711943055856893 -255 (-2.00028e-077)}
; -1.829099816481535523138290955103002488613128662109375p-817 - -1.1580831145668633030965111174737103283405303955078125p-255 == 1.1580831145668633030965111174737103283405303955078125p-255
; [HW: 1.1580831145668633030965111174737103283405303955078125p-255] 

; mpf : + 711943055856893 -255
; mpfd: + 711943055856893 -255 (2.00028e-077) class: Pos. norm. non-zero
; hwf : + 711943055856893 -255 (2.00028e-077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001110 #b1101010000111111111000101011010011101000011001010110)))
(assert (= y (fp #b1 #b01100000000 #b0010100001111000001000101000111100011101010011111101)))
(assert (= r (fp #b0 #b01100000000 #b0010100001111000001000101000111100011101010011111101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
