(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6943560363153427061888578464277088642120361328125p-619 {- 3127101586412232 -619 (-7.7882e-187)}
; Y = 1.7050509358063805631644527238677255809307098388671875p-444 {+ 3175267131774835 -444 (3.75335e-134)}
; -1.6943560363153427061888578464277088642120361328125p-619 - 1.7050509358063805631644527238677255809307098388671875p-444 == -1.7050509358063805631644527238677255809307098388671875p-444
; [HW: -1.7050509358063805631644527238677255809307098388671875p-444] 

; mpf : - 3175267131774835 -444
; mpfd: - 3175267131774835 -444 (-3.75335e-134) class: Neg. norm. non-zero
; hwf : - 3175267131774835 -444 (-3.75335e-134) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110010100 #b1011000111000001010100010011001111000001001011001000)))
(assert (= y (fp #b0 #b01001000011 #b1011010001111110001101111101011101001101011101110011)))
(assert (= r (fp #b1 #b01001000011 #b1011010001111110001101111101011101001101011101110011)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
