(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.299536699419521657006271198042668402194976806640625p568 {- 1348993367889546 568 (-1.25553e+171)}
; Y = -1.90695467821692776766440147184766829013824462890625p1019 {- 4084560750859684 1019 (-1.07129e+307)}
; -1.299536699419521657006271198042668402194976806640625p568 - -1.90695467821692776766440147184766829013824462890625p1019 == 1.9069546782169275456197965468163602054119110107421875p1019
; [HW: 1.9069546782169275456197965468163602054119110107421875p1019] 

; mpf : + 4084560750859683 1019
; mpfd: + 4084560750859683 1019 (1.07129e+307) class: Pos. norm. non-zero
; hwf : + 4084560750859683 1019 (1.07129e+307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110111 #b0100110010101110011011111110011111110101011010001010)))
(assert (= y (fp #b1 #b11111111010 #b1110100000101110001011101000100111100101010110100100)))
(assert (= r (fp #b0 #b11111111010 #b1110100000101110001011101000100111100101010110100011)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
