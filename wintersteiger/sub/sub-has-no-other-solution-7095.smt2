(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.084115058830021016689215684891678392887115478515625p-37 {+ 378820547603130 -37 (7.88798e-012)}
; Y = 1.646778948577537704522910644300282001495361328125p723 {+ 2912833431804880 723 (7.26645e+217)}
; 1.084115058830021016689215684891678392887115478515625p-37 - 1.646778948577537704522910644300282001495361328125p723 == -1.6467789485775374824783057192689739167690277099609375p723
; [HW: -1.6467789485775374824783057192689739167690277099609375p723] 

; mpf : - 2912833431804879 723
; mpfd: - 2912833431804879 723 (-7.26645e+217) class: Neg. norm. non-zero
; hwf : - 2912833431804879 723 (-7.26645e+217) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011010 #b0001010110001000100100001000001011000110101010111010)))
(assert (= y (fp #b0 #b11011010010 #b1010010110010011010011100001111111100001101111010000)))
(assert (= r (fp #b1 #b11011010010 #b1010010110010011010011100001111111100001101111001111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
