(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.583182265738558580636663464247249066829681396484375p1019 {- 2626419434669254 1019 (-8.89399e+306)}
; Y = 1.968966386664959600238944403827190399169921875p915 {+ 4363836657918848 915 (5.45361e+275)}
; -1.583182265738558580636663464247249066829681396484375p1019 - 1.968966386664959600238944403827190399169921875p915 == -1.5831822657385588026812683892785571515560150146484375p1019
; [HW: -1.5831822657385588026812683892785571515560150146484375p1019] 

; mpf : - 2626419434669255 1019
; mpfd: - 2626419434669255 1019 (-8.89399e+306) class: Neg. norm. non-zero
; hwf : - 2626419434669255 1019 (-8.89399e+306) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111010 #b1001010101001011011011101101011011110100010011000110)))
(assert (= y (fp #b0 #b11110010010 #b1111100000001110001011100101110110100110001110000000)))
(assert (= r (fp #b1 #b11111111010 #b1001010101001011011011101101011011110100010011000111)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
