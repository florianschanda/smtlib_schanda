(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2658734603794190576309119933284819126129150390625p499 {- 1197387617092456 499 (-2.07185e+150)}
; Y = 1.1323765280427859902800946656498126685619354248046875p-829 {+ 596170882366091 -829 (3.16318e-250)}
; -1.2658734603794190576309119933284819126129150390625p499 - 1.1323765280427859902800946656498126685619354248046875p-829 == -1.2658734603794190576309119933284819126129150390625p499
; [HW: -1.2658734603794190576309119933284819126129150390625p499] 

; mpf : - 1197387617092456 499
; mpfd: - 1197387617092456 499 (-2.07185e+150) class: Neg. norm. non-zero
; hwf : - 1197387617092456 499 (-2.07185e+150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110010 #b0100010000010000010010000111100100110100001101101000)))
(assert (= y (fp #b0 #b00011000010 #b0010000111100011011011011001101010110011101010001011)))
(assert (= r (fp #b1 #b10111110010 #b0100010000010000010010000111100100110100001101101000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
