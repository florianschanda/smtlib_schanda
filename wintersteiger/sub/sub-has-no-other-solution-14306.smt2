(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8552299082675964836397497492725960910320281982421875p29 {+ 3851613096190051 29 (9.96019e+008)}
; Y = 1.4330404676595491775259461064706556499004364013671875p-416 {+ 1950240888787891 -416 (8.46799e-126)}
; 1.8552299082675964836397497492725960910320281982421875p29 - 1.4330404676595491775259461064706556499004364013671875p-416 == 1.855229908267596261595144824241288006305694580078125p29
; [HW: 1.855229908267596261595144824241288006305694580078125p29] 

; mpf : + 3851613096190050 29
; mpfd: + 3851613096190050 29 (9.96019e+008) class: Pos. norm. non-zero
; hwf : + 3851613096190050 29 (9.96019e+008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011100 #b1101101011110000010110001110011010010010000001100011)))
(assert (= y (fp #b0 #b01001011111 #b0110111011011011101111010111011001110001001110110011)))
(assert (= r (fp #b0 #b10000011100 #b1101101011110000010110001110011010010010000001100010)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
