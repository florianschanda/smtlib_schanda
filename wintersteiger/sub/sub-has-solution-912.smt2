(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4991263899744355914123161710449494421482086181640625p800 {- 2247865423899649 800 (-9.9962e+240)}
; Y = 1.5077027195596548470035713762626983225345611572265625p313 {+ 2286489778623849 313 (2.51596e+094)}
; -1.4991263899744355914123161710449494421482086181640625p800 - 1.5077027195596548470035713762626983225345611572265625p313 == -1.4991263899744355914123161710449494421482086181640625p800
; [HW: -1.4991263899744355914123161710449494421482086181640625p800] 

; mpf : - 2247865423899649 800
; mpfd: - 2247865423899649 800 (-9.9962e+240) class: Neg. norm. non-zero
; hwf : - 2247865423899649 800 (-9.9962e+240) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100011111 #b0111111111000110101111110100000110000010110000000001)))
(assert (= y (fp #b0 #b10100111000 #b1000000111111000110011100011000010011001010101101001)))
(assert (= r (fp #b1 #b11100011111 #b0111111111000110101111110100000110000010110000000001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
