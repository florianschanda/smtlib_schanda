(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.105948356591241132917957656900398433208465576171875p527 {- 477148979264830 527 (-4.85895e+158)}
; Y = 1.5703131786032236139050155543372966349124908447265625p213 {+ 2568462218641961 213 (2.06717e+064)}
; -1.105948356591241132917957656900398433208465576171875p527 - 1.5703131786032236139050155543372966349124908447265625p213 == -1.1059483565912413549625625819317065179347991943359375p527
; [HW: -1.1059483565912413549625625819317065179347991943359375p527] 

; mpf : - 477148979264831 527
; mpfd: - 477148979264831 527 (-4.85895e+158) class: Neg. norm. non-zero
; hwf : - 477148979264831 527 (-4.85895e+158) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001110 #b0001101100011111011011100111011010011111110100111110)))
(assert (= y (fp #b0 #b10011010100 #b1001001000000000000010110110001010010100001000101001)))
(assert (= r (fp #b1 #b11000001110 #b0001101100011111011011100111011010011111110100111111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
