(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5828056662687182143400832501356489956378936767578125p-132 {- 2624723381437213 -132 (-2.90715e-040)}
; Y = -1.7540052990051737680232690763659775257110595703125p389 {- 3395737983635080 389 (-2.21156e+117)}
; -1.5828056662687182143400832501356489956378936767578125p-132 - -1.7540052990051737680232690763659775257110595703125p389 == 1.7540052990051737680232690763659775257110595703125p389
; [HW: 1.7540052990051737680232690763659775257110595703125p389] 

; mpf : + 3395737983635080 389
; mpfd: + 3395737983635080 389 (2.21156e+117) class: Pos. norm. non-zero
; hwf : + 3395737983635080 389 (2.21156e+117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111011 #b1001010100110010110000001000110010001100001100011101)))
(assert (= y (fp #b1 #b10110000100 #b1100000100000110011111011100010000111100111010001000)))
(assert (= r (fp #b0 #b10110000100 #b1100000100000110011111011100010000111100111010001000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
