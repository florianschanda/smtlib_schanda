(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.080024670160443900357449820148758590221405029296875p884 {+ 360399074715022 884 (1.393e+266)}
; Y = 1.83172593359647617461405388894490897655487060546875p-107 {+ 3745760604619468 -107 (1.12889e-032)}
; 1.080024670160443900357449820148758590221405029296875p884 - 1.83172593359647617461405388894490897655487060546875p-107 == 1.0800246701604436783128448951174505054950714111328125p884
; [HW: 1.0800246701604436783128448951174505054950714111328125p884] 

; mpf : + 360399074715021 884
; mpfd: + 360399074715021 884 (1.393e+266) class: Pos. norm. non-zero
; hwf : + 360399074715021 884 (1.393e+266) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110011 #b0001010001111100011111110010110100110110010110001110)))
(assert (= y (fp #b0 #b01110010100 #b1101010011101011111111011010010000001000001011001100)))
(assert (= r (fp #b0 #b11101110011 #b0001010001111100011111110010110100110110010110001101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
