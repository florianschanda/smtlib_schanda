(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.05102931130329668718559332774020731449127197265625p-476 {- 229815587370500 -476 (-5.38687e-144)}
; Y = -1.7070476425716456514436458746786229312419891357421875p-550 {- 3184259499618851 -550 (-4.63178e-166)}
; -1.05102931130329668718559332774020731449127197265625p-476 - -1.7070476425716456514436458746786229312419891357421875p-550 == -1.0510293113032964651409884027088992297649383544921875p-476
; [HW: -1.0510293113032964651409884027088992297649383544921875p-476] 

; mpf : - 229815587370499 -476
; mpfd: - 229815587370499 -476 (-5.38687e-144) class: Neg. norm. non-zero
; hwf : - 229815587370499 -476 (-5.38687e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100011 #b0000110100010000010000011100011100101111011000000100)))
(assert (= y (fp #b1 #b00111011001 #b1011010100000001000100110000010110001111001000100011)))
(assert (= r (fp #b1 #b01000100011 #b0000110100010000010000011100011100101111011000000011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
