(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9428274737335271549198978391359560191631317138671875p575 {+ 4246117459380979 575 (2.4026e+173)}
; Y = 1.30710413638346611975293853902257978916168212890625p93 {+ 1383074074180516 93 (1.29449e+028)}
; 1.9428274737335271549198978391359560191631317138671875p575 - 1.30710413638346611975293853902257978916168212890625p93 == 1.9428274737335271549198978391359560191631317138671875p575
; [HW: 1.9428274737335271549198978391359560191631317138671875p575] 

; mpf : + 4246117459380979 575
; mpfd: + 4246117459380979 575 (2.4026e+173) class: Pos. norm. non-zero
; hwf : + 4246117459380979 575 (2.4026e+173) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111110 #b1111000101011101001001000010110101110100101011110011)))
(assert (= y (fp #b0 #b10001011100 #b0100111010011110011000000110111000111011101110100100)))
(assert (= r (fp #b0 #b11000111110 #b1111000101011101001001000010110101110100101011110011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
