(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.50943486430543405418802649364806711673736572265625p811 {- 2294290665055492 811 (-2.0613e+244)}
; Y = -1.5637106382833383388941683733719401061534881591796875p-995 {- 2538727020517627 -995 (-4.66993e-300)}
; -1.50943486430543405418802649364806711673736572265625p811 - -1.5637106382833383388941683733719401061534881591796875p-995 == -1.5094348643054338321434215686167590320110321044921875p811
; [HW: -1.5094348643054338321434215686167590320110321044921875p811] 

; mpf : - 2294290665055491 811
; mpfd: - 2294290665055491 811 (-2.0613e+244) class: Neg. norm. non-zero
; hwf : - 2294290665055491 811 (-2.0613e+244) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101010 #b1000001001101010010100101100000110100010010100000100)))
(assert (= y (fp #b1 #b00000011100 #b1001000001001111010101110010001111010101100011111011)))
(assert (= r (fp #b1 #b11100101010 #b1000001001101010010100101100000110100010010100000011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
