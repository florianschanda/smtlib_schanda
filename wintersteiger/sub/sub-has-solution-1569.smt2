(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3559194374424483608976288451231084764003753662109375p709 {+ 1602918645839727 709 (3.65175e+213)}
; Y = 1.1721017366250290336893158382736146450042724609375p297 {+ 775077316934296 297 (2.98452e+089)}
; 1.3559194374424483608976288451231084764003753662109375p709 - 1.1721017366250290336893158382736146450042724609375p297 == 1.3559194374424483608976288451231084764003753662109375p709
; [HW: 1.3559194374424483608976288451231084764003753662109375p709] 

; mpf : + 1602918645839727 709
; mpfd: + 1602918645839727 709 (3.65175e+213) class: Pos. norm. non-zero
; hwf : + 1602918645839727 709 (3.65175e+213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000100 #b0101101100011101100010010100011111010011011101101111)))
(assert (= y (fp #b0 #b10100101000 #b0010110000001110110111000000001001100011101010011000)))
(assert (= r (fp #b0 #b11011000100 #b0101101100011101100010010100011111010011011101101111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
