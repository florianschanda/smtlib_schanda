(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.265048039769148591204839249257929623126983642578125p-128 {+ 1193670253139618 -128 (3.71764e-039)}
; Y = -1.2395345487608449008831712490064091980457305908203125p-644 {- 1078767704541701 -644 (-1.69801e-194)}
; 1.265048039769148591204839249257929623126983642578125p-128 - -1.2395345487608449008831712490064091980457305908203125p-644 == 1.265048039769148591204839249257929623126983642578125p-128
; [HW: 1.265048039769148591204839249257929623126983642578125p-128] 

; mpf : + 1193670253139618 -128
; mpfd: + 1193670253139618 -128 (3.71764e-039) class: Pos. norm. non-zero
; hwf : + 1193670253139618 -128 (3.71764e-039) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111111 #b0100001111011010001100000011011010101101011010100010)))
(assert (= y (fp #b1 #b00101111011 #b0011110101010010001000101101110100110000101000000101)))
(assert (= r (fp #b0 #b01101111111 #b0100001111011010001100000011011010101101011010100010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
