(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.883716119506217534507186428527347743511199951171875p574 {+ 3979903586509502 574 (1.16475e+173)}
; Y = -1.8601962178177882112350971510750241577625274658203125p731 {- 3873979366029701 731 (-2.10129e+220)}
; 1.883716119506217534507186428527347743511199951171875p574 - -1.8601962178177882112350971510750241577625274658203125p731 == 1.860196217817788433279702076106332242488861083984375p731
; [HW: 1.860196217817788433279702076106332242488861083984375p731] 

; mpf : + 3873979366029702 731
; mpfd: + 3873979366029702 731 (2.10129e+220) class: Pos. norm. non-zero
; hwf : + 3873979366029702 731 (2.10129e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111101 #b1110001000111011001110000011100000111010001010111110)))
(assert (= y (fp #b1 #b11011011010 #b1101110000110101110100011011111110101011100110000101)))
(assert (= r (fp #b0 #b11011011010 #b1101110000110101110100011011111110101011100110000110)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
