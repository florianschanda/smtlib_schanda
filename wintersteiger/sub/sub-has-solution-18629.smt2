(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.436734627023198651585289553622715175151824951171875p148 {+ 1966877903521470 148 (5.12644e+044)}
; Y = -1.226321696701532015794100516359321773052215576171875p-488 {- 1019262308930878 -488 (-1.5345e-147)}
; 1.436734627023198651585289553622715175151824951171875p148 - -1.226321696701532015794100516359321773052215576171875p-488 == 1.4367346270231988736298944786540232598781585693359375p148
; [HW: 1.4367346270231988736298944786540232598781585693359375p148] 

; mpf : + 1966877903521471 148
; mpfd: + 1966877903521471 148 (5.12644e+044) class: Pos. norm. non-zero
; hwf : + 1966877903521471 148 (5.12644e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010011 #b0110111111001101110101110010110000011000011010111110)))
(assert (= y (fp #b1 #b01000010111 #b0011100111110000001101111111110110110101010100111110)))
(assert (= r (fp #b0 #b10010010011 #b0110111111001101110101110010110000011000011010111111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
