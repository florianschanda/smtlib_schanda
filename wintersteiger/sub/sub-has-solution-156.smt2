(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1754214655091252961227610285277478396892547607421875p705 {+ 790028046699683 705 (1.97852e+212)}
; Y = 1.9288185372319566202037322000251151621341705322265625p-678 {+ 4183026818172649 -678 (1.53799e-204)}
; 1.1754214655091252961227610285277478396892547607421875p705 - 1.9288185372319566202037322000251151621341705322265625p-678 == 1.1754214655091252961227610285277478396892547607421875p705
; [HW: 1.1754214655091252961227610285277478396892547607421875p705] 

; mpf : + 790028046699683 705
; mpfd: + 790028046699683 705 (1.97852e+212) class: Pos. norm. non-zero
; hwf : + 790028046699683 705 (1.97852e+212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000000 #b0010110011101000011010111101000101100000110010100011)))
(assert (= y (fp #b0 #b00101011001 #b1110110111000111000011010011100101010100011011101001)))
(assert (= r (fp #b0 #b11011000000 #b0010110011101000011010111101000101100000110010100011)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
