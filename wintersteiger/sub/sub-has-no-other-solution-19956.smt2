(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5889356077356875385220291718724183738231658935546875p79 {+ 2652330183543659 79 (9.60453e+023)}
; Y = 1.0751957186526885923427698799059726297855377197265625p296 {+ 338651410504105 296 (1.36888e+089)}
; 1.5889356077356875385220291718724183738231658935546875p79 - 1.0751957186526885923427698799059726297855377197265625p296 == -1.0751957186526885923427698799059726297855377197265625p296
; [HW: -1.0751957186526885923427698799059726297855377197265625p296] 

; mpf : - 338651410504105 296
; mpfd: - 338651410504105 296 (-1.36888e+089) class: Neg. norm. non-zero
; hwf : - 338651410504105 296 (-1.36888e+089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001110 #b1001011011000100011110111110011010101100101101101011)))
(assert (= y (fp #b0 #b10100100111 #b0001001101000000000001101101000001101001100110101001)))
(assert (= r (fp #b1 #b10100100111 #b0001001101000000000001101101000001101001100110101001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
