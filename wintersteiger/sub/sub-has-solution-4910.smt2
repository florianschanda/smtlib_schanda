(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3073961126196478321759286700398661196231842041015625p419 {+ 1384389018248985 419 (1.77001e+126)}
; Y = 1.396800525159056061141882310039363801479339599609375p788 {+ 1787030697246742 788 (2.2739e+237)}
; 1.3073961126196478321759286700398661196231842041015625p419 - 1.396800525159056061141882310039363801479339599609375p788 == -1.3968005251590558390972773850080557167530059814453125p788
; [HW: -1.3968005251590558390972773850080557167530059814453125p788] 

; mpf : - 1787030697246741 788
; mpfd: - 1787030697246741 788 (-2.2739e+237) class: Neg. norm. non-zero
; hwf : - 1787030697246741 788 (-2.2739e+237) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100010 #b0100111010110001100000101111101010011110011100011001)))
(assert (= y (fp #b0 #b11100010011 #b0110010110010100101110000001111010011000000000010110)))
(assert (= r (fp #b1 #b11100010011 #b0110010110010100101110000001111010011000000000010101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
