(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.29388843104672002226607219199649989604949951171875p-131 {- 1323555828550508 -131 (-4.753e-040)}
; Y = -1.39370079840711280638743119197897613048553466796875p639 {- 1773070769001740 639 (-3.17934e+192)}
; -1.29388843104672002226607219199649989604949951171875p-131 - -1.39370079840711280638743119197897613048553466796875p639 == 1.39370079840711280638743119197897613048553466796875p639
; [HW: 1.39370079840711280638743119197897613048553466796875p639] 

; mpf : + 1773070769001740 639
; mpfd: + 1773070769001740 639 (3.17934e+192) class: Pos. norm. non-zero
; hwf : + 1773070769001740 639 (3.17934e+192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111100 #b0100101100111100010001011011000000000100101101101100)))
(assert (= y (fp #b1 #b11001111110 #b0110010011001001100100110101010110010001010100001100)))
(assert (= r (fp #b0 #b11001111110 #b0110010011001001100100110101010110010001010100001100)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
