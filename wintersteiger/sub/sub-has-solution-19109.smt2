(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.278640613030902262181598416646011173725128173828125p624 {+ 1254885761016258 624 (8.90155e+187)}
; Y = -1.5698068895287053958753631377476267516613006591796875p802 {- 2566182095354619 802 (-4.187e+241)}
; 1.278640613030902262181598416646011173725128173828125p624 - -1.5698068895287053958753631377476267516613006591796875p802 == 1.5698068895287053958753631377476267516613006591796875p802
; [HW: 1.5698068895287053958753631377476267516613006591796875p802] 

; mpf : + 2566182095354619 802
; mpfd: + 2566182095354619 802 (4.187e+241) class: Pos. norm. non-zero
; hwf : + 2566182095354619 802 (4.187e+241) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101111 #b0100011101010100111111011100000001001110000111000010)))
(assert (= y (fp #b1 #b11100100001 #b1001000111011110110111010100001110001111101011111011)))
(assert (= r (fp #b0 #b11100100001 #b1001000111011110110111010100001110001111101011111011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
