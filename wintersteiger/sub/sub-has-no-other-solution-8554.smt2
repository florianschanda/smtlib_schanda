(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4420847605831141891030711121857166290283203125p-293 {- 1990972763028288 -293 (-9.06154e-089)}
; Y = -1.837087012066501490181735789519734680652618408203125p210 {- 3769904755619378 210 (-3.02294e+063)}
; -1.4420847605831141891030711121857166290283203125p-293 - -1.837087012066501490181735789519734680652618408203125p210 == 1.837087012066501490181735789519734680652618408203125p210
; [HW: 1.837087012066501490181735789519734680652618408203125p210] 

; mpf : + 3769904755619378 210
; mpfd: + 3769904755619378 210 (3.02294e+063) class: Pos. norm. non-zero
; hwf : + 3769904755619378 210 (3.02294e+063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011010 #b0111000100101100011101111000010011000011101101000000)))
(assert (= y (fp #b1 #b10011010001 #b1101011001001011010101011001110010111011011000110010)))
(assert (= r (fp #b0 #b10011010001 #b1101011001001011010101011001110010111011011000110010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
