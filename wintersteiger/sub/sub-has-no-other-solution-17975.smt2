(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9754224594511271551056097450782544910907745361328125p-698 {- 4392912224912909 -698 (-1.50218e-210)}
; Y = 1.87361897659571496888020192272961139678955078125p166 {+ 3934430097460256 166 (1.75251e+050)}
; -1.9754224594511271551056097450782544910907745361328125p-698 - 1.87361897659571496888020192272961139678955078125p166 == -1.87361897659571496888020192272961139678955078125p166
; [HW: -1.87361897659571496888020192272961139678955078125p166] 

; mpf : - 3934430097460256 166
; mpfd: - 3934430097460256 166 (-1.75251e+050) class: Neg. norm. non-zero
; hwf : - 3934430097460256 166 (-1.75251e+050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101000101 #b1111100110110101010010010100101100100000011000001101)))
(assert (= y (fp #b0 #b10010100101 #b1101111110100101011111100100010110100100110000100000)))
(assert (= r (fp #b1 #b10010100101 #b1101111110100101011111100100010110100100110000100000)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
