(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.34107661683018886122908952529542148113250732421875p561 {- 1536072524461228 561 (-1.01223e+169)}
; Y = 1.1332432854582297210299657308496534824371337890625p-287 {+ 600074410739304 -287 (4.55737e-087)}
; -1.34107661683018886122908952529542148113250732421875p561 - 1.1332432854582297210299657308496534824371337890625p-287 == -1.3410766168301890832736944503267295658588409423828125p561
; [HW: -1.3410766168301890832736944503267295658588409423828125p561] 

; mpf : - 1536072524461229 561
; mpfd: - 1536072524461229 561 (-1.01223e+169) class: Neg. norm. non-zero
; hwf : - 1536072524461229 561 (-1.01223e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110000 #b0101011101010000110011000001001010110111010010101100)))
(assert (= y (fp #b0 #b01011100000 #b0010001000011100001110110110000101110100011001101000)))
(assert (= r (fp #b1 #b11000110000 #b0101011101010000110011000001001010110111010010101101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
