(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1082209998703633768712961682467721402645111083984375p-36 {+ 487384054689831 -36 (1.61267e-011)}
; Y = 1.4200825632963056666113743631285615265369415283203125p384 {+ 1891883675526085 384 (5.59541e+115)}
; 1.1082209998703633768712961682467721402645111083984375p-36 - 1.4200825632963056666113743631285615265369415283203125p384 == -1.42008256329630544456676943809725344181060791015625p384
; [HW: -1.42008256329630544456676943809725344181060791015625p384] 

; mpf : - 1891883675526084 384
; mpfd: - 1891883675526084 384 (-5.59541e+115) class: Neg. norm. non-zero
; hwf : - 1891883675526084 384 (-5.59541e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011011 #b0001101110110100010111110001011100101111000000100111)))
(assert (= y (fp #b0 #b10101111111 #b0110101110001010100001111110011011111010001111000101)))
(assert (= r (fp #b1 #b10101111111 #b0110101110001010100001111110011011111010001111000100)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
