(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2916363074580783365519209837657399475574493408203125p-638 {- 1313413165595909 -638 (-1.13241e-192)}
; Y = -1.4553679285604699256140293073258362710475921630859375p787 {- 2050794833381407 787 (-1.18462e+237)}
; -1.2916363074580783365519209837657399475574493408203125p-638 - -1.4553679285604699256140293073258362710475921630859375p787 == 1.4553679285604699256140293073258362710475921630859375p787
; [HW: 1.4553679285604699256140293073258362710475921630859375p787] 

; mpf : + 2050794833381407 787
; mpfd: + 2050794833381407 787 (1.18462e+237) class: Pos. norm. non-zero
; hwf : + 2050794833381407 787 (1.18462e+237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000001 #b0100101010101000101011010101001011011011110100000101)))
(assert (= y (fp #b1 #b11100010010 #b0111010010010010111111100001100011010000100000011111)))
(assert (= r (fp #b0 #b11100010010 #b0111010010010010111111100001100011010000100000011111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
