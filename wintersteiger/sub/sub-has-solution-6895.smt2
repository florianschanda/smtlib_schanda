(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9188504284111000952606218561413697898387908935546875p-629 {- 4138134447001451 -629 (-8.61338e-190)}
; Y = -1.909172737903325423047817821498028934001922607421875p533 {- 4094550003636830 533 (-5.36825e+160)}
; -1.9188504284111000952606218561413697898387908935546875p-629 - -1.909172737903325423047817821498028934001922607421875p533 == 1.9091727379033252010032128964667208492755889892578125p533
; [HW: 1.9091727379033252010032128964667208492755889892578125p533] 

; mpf : + 4094550003636829 533
; mpfd: + 4094550003636829 533 (5.36825e+160) class: Pos. norm. non-zero
; hwf : + 4094550003636829 533 (5.36825e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001010 #b1110101100111001110010000001101111110000111101101011)))
(assert (= y (fp #b1 #b11000010100 #b1110100010111111100010110110011110110101101001011110)))
(assert (= r (fp #b0 #b11000010100 #b1110100010111111100010110110011110110101101001011101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
