(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2519506582552863971358192429761402308940887451171875p548 {- 1134684890634259 548 (-1.15352e+165)}
; Y = -1.09803094749912677485781387076713144779205322265625p934 {- 441492138627844 934 (-1.59452e+281)}
; -1.2519506582552863971358192429761402308940887451171875p548 - -1.09803094749912677485781387076713144779205322265625p934 == 1.0980309474991265528132089457358233630657196044921875p934
; [HW: 1.0980309474991265528132089457358233630657196044921875p934] 

; mpf : + 441492138627843 934
; mpfd: + 441492138627843 934 (1.59452e+281) class: Pos. norm. non-zero
; hwf : + 441492138627843 934 (1.59452e+281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100011 #b0100000001111111110101101001110101101001100000010011)))
(assert (= y (fp #b1 #b11110100101 #b0001100100011000100011100110000110000001001100000100)))
(assert (= r (fp #b0 #b11110100101 #b0001100100011000100011100110000110000001001100000011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
