(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.03893909620897328949240545625798404216766357421875p732 {+ 175366099176876 732 (2.34718e+220)}
; Y = 1.3536362601393003846084184260689653456211090087890625p271 {+ 1592636129388049 271 (5.13607e+081)}
; 1.03893909620897328949240545625798404216766357421875p732 - 1.3536362601393003846084184260689653456211090087890625p271 == 1.0389390962089730674478005312266759574413299560546875p732
; [HW: 1.0389390962089730674478005312266759574413299560546875p732] 

; mpf : + 175366099176875 732
; mpfd: + 175366099176875 732 (2.34718e+220) class: Pos. norm. non-zero
; hwf : + 175366099176875 732 (2.34718e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011011 #b0000100111110111111010011010000011000000110110101100)))
(assert (= y (fp #b0 #b10100001110 #b0101101010000111111001111110101111111010011000010001)))
(assert (= r (fp #b0 #b11011011011 #b0000100111110111111010011010000011000000110110101011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
