(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9692487762448893651168191354372538626194000244140625p-410 {- 4365108427525793 -410 (-7.44736e-124)}
; Y = 1.62175524051670105762923412839882075786590576171875p397 {+ 2800136669506668 397 (5.23472e+119)}
; -1.9692487762448893651168191354372538626194000244140625p-410 - 1.62175524051670105762923412839882075786590576171875p397 == -1.62175524051670105762923412839882075786590576171875p397
; [HW: -1.62175524051670105762923412839882075786590576171875p397] 

; mpf : - 2800136669506668 397
; mpfd: - 2800136669506668 397 (-5.23472e+119) class: Neg. norm. non-zero
; hwf : - 2800136669506668 397 (-5.23472e+119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100101 #b1111100000100000101100000001001110101000111010100001)))
(assert (= y (fp #b0 #b10110001100 #b1001111100101011010110011111100000100010110001101100)))
(assert (= r (fp #b1 #b10110001100 #b1001111100101011010110011111100000100010110001101100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
