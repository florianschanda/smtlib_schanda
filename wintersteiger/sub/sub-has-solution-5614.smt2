(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7603109700037473661637932309531606733798980712890625p403 {+ 3424136201194577 403 (3.63645e+121)}
; Y = -1.4706183774945957853930167402722872793674468994140625p-689 {- 2119476749518369 -689 (-5.72576e-208)}
; 1.7603109700037473661637932309531606733798980712890625p403 - -1.4706183774945957853930167402722872793674468994140625p-689 == 1.760310970003747588208398155984468758106231689453125p403
; [HW: 1.760310970003747588208398155984468758106231689453125p403] 

; mpf : + 3424136201194578 403
; mpfd: + 3424136201194578 403 (3.63645e+121) class: Pos. norm. non-zero
; hwf : + 3424136201194578 403 (3.63645e+121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010010 #b1100001010100011101111010101111011110100110001010001)))
(assert (= y (fp #b1 #b00101001110 #b0111100001111010011100100010110000111100011000100001)))
(assert (= r (fp #b0 #b10110010010 #b1100001010100011101111010101111011110100110001010010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
