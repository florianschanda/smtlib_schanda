(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8744996857858584604628049419261515140533447265625p121 {- 3938396459040808 121 (-4.98327e+036)}
; Y = 1.9652725949390073001410428332746960222721099853515625p-295 {+ 4347201298878265 -295 (3.08727e-089)}
; -1.8744996857858584604628049419261515140533447265625p121 - 1.9652725949390073001410428332746960222721099853515625p-295 == -1.8744996857858584604628049419261515140533447265625p121
; [HW: -1.8744996857858584604628049419261515140533447265625p121] 

; mpf : - 3938396459040808 121
; mpfd: - 3938396459040808 121 (-4.98327e+036) class: Neg. norm. non-zero
; hwf : - 3938396459040808 121 (-4.98327e+036) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001111000 #b1101111111011111001101100001111011010000000000101000)))
(assert (= y (fp #b0 #b01011011000 #b1111011100011100000110101101001011111100111100111001)))
(assert (= r (fp #b1 #b10001111000 #b1101111111011111001101100001111011010000000000101000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
