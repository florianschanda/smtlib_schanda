(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7425512947711891964530650511733256280422210693359375p-553 {+ 3344153734435007 -553 (5.91014e-167)}
; Y = -1.185106148201784836970773540087975561618804931640625p243 {- 833643980065546 243 (-1.67512e+073)}
; 1.7425512947711891964530650511733256280422210693359375p-553 - -1.185106148201784836970773540087975561618804931640625p243 == 1.185106148201784836970773540087975561618804931640625p243
; [HW: 1.185106148201784836970773540087975561618804931640625p243] 

; mpf : + 833643980065546 243
; mpfd: + 833643980065546 243 (1.67512e+073) class: Pos. norm. non-zero
; hwf : + 833643980065546 243 (1.67512e+073) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111010110 #b1011111000010111110101110111011010100101000010111111)))
(assert (= y (fp #b1 #b10011110010 #b0010111101100011000111011101010011010000101100001010)))
(assert (= r (fp #b0 #b10011110010 #b0010111101100011000111011101010011010000101100001010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
