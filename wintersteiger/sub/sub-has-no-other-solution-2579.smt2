(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.738432429787477584426369503489695489406585693359375p137 {+ 3325604015629174 137 (3.02878e+041)}
; Y = 1.4128914144848494505168901014258153736591339111328125p-608 {+ 1859497620418445 -608 (1.33006e-183)}
; 1.738432429787477584426369503489695489406585693359375p137 - 1.4128914144848494505168901014258153736591339111328125p-608 == 1.738432429787477584426369503489695489406585693359375p137
; [HW: 1.738432429787477584426369503489695489406585693359375p137] 

; mpf : + 3325604015629174 137
; mpfd: + 3325604015629174 137 (3.02878e+041) class: Pos. norm. non-zero
; hwf : + 3325604015629174 137 (3.02878e+041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001000 #b1011110100001001111010000110000000111110001101110110)))
(assert (= y (fp #b0 #b00110011111 #b0110100110110011010000000111001000000010111110001101)))
(assert (= r (fp #b0 #b10010001000 #b1011110100001001111010000110000000111110001101110110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
