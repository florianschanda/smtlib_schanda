(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.44151424170874431496258694096468389034271240234375p553 {+ 1988403374438268 553 (4.25017e+166)}
; Y = 1.9266775908221591695479446570971049368381500244140625p689 {+ 4173384852719265 689 (4.94853e+207)}
; 1.44151424170874431496258694096468389034271240234375p553 - 1.9266775908221591695479446570971049368381500244140625p689 == -1.9266775908221591695479446570971049368381500244140625p689
; [HW: -1.9266775908221591695479446570971049368381500244140625p689] 

; mpf : - 4173384852719265 689
; mpfd: - 4173384852719265 689 (-4.94853e+207) class: Neg. norm. non-zero
; hwf : - 4173384852719265 689 (-4.94853e+207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101000 #b0111000100000111000100111100110011011011011101111100)))
(assert (= y (fp #b0 #b11010110000 #b1110110100111010101111100001101010000100011010100001)))
(assert (= r (fp #b1 #b11010110000 #b1110110100111010101111100001101010000100011010100001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
