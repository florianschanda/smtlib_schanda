(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7471715114787984557409572516917251050472259521484375p155 {- 3364961340677767 155 (-7.97967e+046)}
; Y = 1.672551377405122163821715730591677129268646240234375p983 {+ 3028902132669222 983 (1.3673e+296)}
; -1.7471715114787984557409572516917251050472259521484375p155 - 1.672551377405122163821715730591677129268646240234375p983 == -1.672551377405122163821715730591677129268646240234375p983
; [HW: -1.672551377405122163821715730591677129268646240234375p983] 

; mpf : - 3028902132669222 983
; mpfd: - 3028902132669222 983 (-1.3673e+296) class: Neg. norm. non-zero
; hwf : - 3028902132669222 983 (-1.3673e+296) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011010 #b1011111101000110101000011101011001001101111010000111)))
(assert (= y (fp #b0 #b11111010110 #b1010110000101100010100111011101011010101101100100110)))
(assert (= r (fp #b1 #b11111010110 #b1010110000101100010100111011101011010101101100100110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
