(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.885801360492568523596901286509819328784942626953125p716 {- 3989294677038610 716 (-6.50089e+215)}
; Y = 1.145375753780928818059692275710403919219970703125p798 {+ 654714190556496 798 (1.90935e+240)}
; -1.885801360492568523596901286509819328784942626953125p716 - 1.145375753780928818059692275710403919219970703125p798 == -1.1453757537809290401042972007417120039463043212890625p798
; [HW: -1.1453757537809290401042972007417120039463043212890625p798] 

; mpf : - 654714190556497 798
; mpfd: - 654714190556497 798 (-1.90935e+240) class: Neg. norm. non-zero
; hwf : - 654714190556497 798 (-1.90935e+240) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001011 #b1110001011000011111000001100001000010001011000010010)))
(assert (= y (fp #b0 #b11100011101 #b0010010100110111010110000110110000011110110101010000)))
(assert (= r (fp #b1 #b11100011101 #b0010010100110111010110000110110000011110110101010001)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
