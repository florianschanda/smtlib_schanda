(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.694583666718936232342684888863004744052886962890625p402 {- 3128126742613034 402 (-1.75034e+121)}
; Y = -1.9158159154828855452734615028020925819873809814453125p-976 {- 4124468215708693 -976 (-2.9997e-294)}
; -1.694583666718936232342684888863004744052886962890625p402 - -1.9158159154828855452734615028020925819873809814453125p-976 == -1.6945836667189360102980799638316966593265533447265625p402
; [HW: -1.6945836667189360102980799638316966593265533447265625p402] 

; mpf : - 3128126742613033 402
; mpfd: - 3128126742613033 402 (-1.75034e+121) class: Neg. norm. non-zero
; hwf : - 3128126742613033 402 (-1.75034e+121) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010001 #b1011000111010000001111000011010011100100110000101010)))
(assert (= y (fp #b1 #b00000101111 #b1110101001110010111010010110111000100111110000010101)))
(assert (= r (fp #b1 #b10110010001 #b1011000111010000001111000011010011100100110000101001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
