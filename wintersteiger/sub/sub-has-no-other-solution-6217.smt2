(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8330125712794231862545757394400425255298614501953125p528 {+ 3751555105608949 528 (1.61066e+159)}
; Y = -1.1261877429353457369387569997343234717845916748046875p-769 {- 568299072062347 -769 (-3.62697e-232)}
; 1.8330125712794231862545757394400425255298614501953125p528 - -1.1261877429353457369387569997343234717845916748046875p-769 == 1.8330125712794231862545757394400425255298614501953125p528
; [HW: 1.8330125712794231862545757394400425255298614501953125p528] 

; mpf : + 3751555105608949 528
; mpfd: + 3751555105608949 528 (1.61066e+159) class: Pos. norm. non-zero
; hwf : + 3751555105608949 528 (1.61066e+159) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001111 #b1101010101000000010011111101011011001101010011110101)))
(assert (= y (fp #b1 #b00011111110 #b0010000001001101110101110000010100010000001110001011)))
(assert (= r (fp #b0 #b11000001111 #b1101010101000000010011111101011011001101010011110101)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
