(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3562643593297305510958494778606109321117401123046875p-744 {+ 1604472035922763 -744 (1.46564e-224)}
; Y = -1.4740671322978984303375682429759763181209564208984375p765 {- 2135008560365415 765 (-2.86064e+230)}
; 1.3562643593297305510958494778606109321117401123046875p-744 - -1.4740671322978984303375682429759763181209564208984375p765 == 1.4740671322978986523821731680072844028472900390625p765
; [HW: 1.4740671322978986523821731680072844028472900390625p765] 

; mpf : + 2135008560365416 765
; mpfd: + 2135008560365416 765 (2.86064e+230) class: Pos. norm. non-zero
; hwf : + 2135008560365416 765 (2.86064e+230) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010111 #b0101101100110100001001000001110000001101001101001011)))
(assert (= y (fp #b1 #b11011111100 #b0111100101011100011101101010110101010011111101100111)))
(assert (= r (fp #b0 #b11011111100 #b0111100101011100011101101010110101010011111101101000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
