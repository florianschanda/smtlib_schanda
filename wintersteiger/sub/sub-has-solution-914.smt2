(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.168869330534081374395327657111920416355133056640625p336 {+ 760519854067594 336 (1.63623e+101)}
; Y = -1.5900506651052228601628257820266298949718475341796875p357 {- 2657351955497595 357 (-4.66788e+107)}
; 1.168869330534081374395327657111920416355133056640625p336 - -1.5900506651052228601628257820266298949718475341796875p357 == 1.5900512224655527493411000250489450991153717041015625p357
; [HW: 1.5900512224655527493411000250489450991153717041015625p357] 

; mpf : + 2657354465625369 357
; mpfd: + 2657354465625369 357 (4.66788e+107) class: Pos. norm. non-zero
; hwf : + 2657354465625369 357 (4.66788e+107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001111 #b0010101100111011000001010011101111110000111110001010)))
(assert (= y (fp #b1 #b10101100100 #b1001011100001101100011110111010110011100001001111011)))
(assert (= r (fp #b0 #b10101100100 #b1001011100001101100110001100111101110100010100011001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
