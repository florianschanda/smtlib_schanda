(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8341067782596114366100437109707854688167572021484375p-581 {+ 3756482975757191 -581 (2.31738e-175)}
; Y = -1.276962425392209166119528163108043372631072998046875p778 {- 1247327875791982 778 (-2.03009e+234)}
; 1.8341067782596114366100437109707854688167572021484375p-581 - -1.276962425392209166119528163108043372631072998046875p778 == 1.2769624253922093881641330881393514573574066162109375p778
; [HW: 1.2769624253922093881641330881393514573574066162109375p778] 

; mpf : + 1247327875791983 778
; mpfd: + 1247327875791983 778 (2.03009e+234) class: Pos. norm. non-zero
; hwf : + 1247327875791983 778 (2.03009e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111010 #b1101010110001000000001011001010111111111001110000111)))
(assert (= y (fp #b1 #b11100001001 #b0100011011100111000000100110111101000111110001101110)))
(assert (= r (fp #b0 #b11100001001 #b0100011011100111000000100110111101000111110001101111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
