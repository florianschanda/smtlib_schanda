(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.141422349768891564281148021109402179718017578125p76 {- 636909641721040 76 (-8.62434e+022)}
; Y = -1.2162407135217865317144969594664871692657470703125p859 {- 973861596839048 859 (-4.67505e+258)}
; -1.141422349768891564281148021109402179718017578125p76 - -1.2162407135217865317144969594664871692657470703125p859 == 1.2162407135217865317144969594664871692657470703125p859
; [HW: 1.2162407135217865317144969594664871692657470703125p859] 

; mpf : + 973861596839048 859
; mpfd: + 973861596839048 859 (4.67505e+258) class: Pos. norm. non-zero
; hwf : + 973861596839048 859 (4.67505e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001011 #b0010010000110100010000010100111100101110010011010000)))
(assert (= y (fp #b1 #b11101011010 #b0011011101011011100011010010100010100011110010001000)))
(assert (= r (fp #b0 #b11101011010 #b0011011101011011100011010010100010100011110010001000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
