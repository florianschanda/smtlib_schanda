(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1598338611611553883307124124257825314998626708984375p-473 {+ 719827717566567 -473 (4.75563e-143)}
; Y = -1.59299992637622711555422938545234501361846923828125p-55 {- 2670634247458708 -55 (-4.42146e-017)}
; 1.1598338611611553883307124124257825314998626708984375p-473 - -1.59299992637622711555422938545234501361846923828125p-55 == 1.59299992637622711555422938545234501361846923828125p-55
; [HW: 1.59299992637622711555422938545234501361846923828125p-55] 

; mpf : + 2670634247458708 -55
; mpfd: + 2670634247458708 -55 (4.42146e-017) class: Pos. norm. non-zero
; hwf : + 2670634247458708 -55 (4.42146e-017) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000100110 #b0010100011101010110111110011011001111011000001100111)))
(assert (= y (fp #b1 #b01111001000 #b1001011111001110110101111101101001010000111110010100)))
(assert (= r (fp #b0 #b01111001000 #b1001011111001110110101111101101001010000111110010100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
