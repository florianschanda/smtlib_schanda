(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.827206268872263894564866859582252800464630126953125p-893 {- 3725405844251666 -893 (-2.76695e-269)}
; Y = -1.0738962458492189444569930856232531368732452392578125p-976 {- 332799105270621 -976 (-1.68146e-294)}
; -1.827206268872263894564866859582252800464630126953125p-893 - -1.0738962458492189444569930856232531368732452392578125p-976 == -1.8272062688722636725202619345509447157382965087890625p-893
; [HW: -1.8272062688722636725202619345509447157382965087890625p-893] 

; mpf : - 3725405844251665 -893
; mpfd: - 3725405844251665 -893 (-2.76695e-269) class: Neg. norm. non-zero
; hwf : - 3725405844251665 -893 (-2.76695e-269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010000010 #b1101001111000011110010100011111111011010010000010010)))
(assert (= y (fp #b1 #b00000101111 #b0001001011101010110111010100011100111000001101011101)))
(assert (= r (fp #b1 #b00010000010 #b1101001111000011110010100011111111011010010000010001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
