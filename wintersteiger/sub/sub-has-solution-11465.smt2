(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9507307125353301469061761963530443608760833740234375p805 {- 4281710482703799 805 (-4.1624e+242)}
; Y = 1.68979541536141741886467571021057665348052978515625p-102 {+ 3106562375583556 -102 (3.33253e-031)}
; -1.9507307125353301469061761963530443608760833740234375p805 - 1.68979541536141741886467571021057665348052978515625p-102 == -1.9507307125353301469061761963530443608760833740234375p805
; [HW: -1.9507307125353301469061761963530443608760833740234375p805] 

; mpf : - 4281710482703799 805
; mpfd: - 4281710482703799 805 (-4.1624e+242) class: Neg. norm. non-zero
; hwf : - 4281710482703799 805 (-4.1624e+242) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100100100 #b1111001101100011000101101000010110100100010110110111)))
(assert (= y (fp #b0 #b01110011001 #b1011000010010110011011101010110111101000011101000100)))
(assert (= r (fp #b1 #b11100100100 #b1111001101100011000101101000010110100100010110110111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
