(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.138960281576561595073826538282446563243865966796875p-1015 {+ 625821472327502 -1015 (3.24387e-306)}
; Y = -1.4266316519368784643262415556819178164005279541015625p135 {- 1921378148687385 135 (-6.21386e+040)}
; 1.138960281576561595073826538282446563243865966796875p-1015 - -1.4266316519368784643262415556819178164005279541015625p135 == 1.4266316519368784643262415556819178164005279541015625p135
; [HW: 1.4266316519368784643262415556819178164005279541015625p135] 

; mpf : + 1921378148687385 135
; mpfd: + 1921378148687385 135 (6.21386e+040) class: Pos. norm. non-zero
; hwf : + 1921378148687385 135 (6.21386e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000001000 #b0010001110010010111001101010100011010000011101001110)))
(assert (= y (fp #b1 #b10010000110 #b0110110100110111101110110110000010000001111000011001)))
(assert (= r (fp #b0 #b10010000110 #b0110110100110111101110110110000010000001111000011001)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
