(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3690107605598893503184854125720448791980743408203125p400 {+ 1661876723753221 400 (3.53513e+120)}
; Y = 1.4169346682101917611618091541458852589130401611328125p-494 {+ 1877706816389261 -494 (2.77033e-149)}
; 1.3690107605598893503184854125720448791980743408203125p400 - 1.4169346682101917611618091541458852589130401611328125p-494 == 1.3690107605598893503184854125720448791980743408203125p400
; [HW: 1.3690107605598893503184854125720448791980743408203125p400] 

; mpf : + 1661876723753221 400
; mpfd: + 1661876723753221 400 (3.53513e+120) class: Pos. norm. non-zero
; hwf : + 1661876723753221 400 (3.53513e+120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110001111 #b0101111001110111011111010011110001111010000100000101)))
(assert (= y (fp #b0 #b01000010001 #b0110101010111100001110101111110010001000000010001101)))
(assert (= r (fp #b0 #b10110001111 #b0101111001110111011111010011110001111010000100000101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
