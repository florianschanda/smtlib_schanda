(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.224377937514963488041530581540428102016448974609375p550 {- 1010508395782550 550 (-4.51246e+165)}
; Y = -1.9565701298592290680034011529642157256603240966796875p283 {- 4308008880387771 283 (-3.04077e+085)}
; -1.224377937514963488041530581540428102016448974609375p550 - -1.9565701298592290680034011529642157256603240966796875p283 == -1.224377937514963488041530581540428102016448974609375p550
; [HW: -1.224377937514963488041530581540428102016448974609375p550] 

; mpf : - 1010508395782550 550
; mpfd: - 1010508395782550 550 (-4.51246e+165) class: Neg. norm. non-zero
; hwf : - 1010508395782550 550 (-4.51246e+165) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100101 #b0011100101110000110101010001111110010010000110010110)))
(assert (= y (fp #b1 #b10100011010 #b1111010011100001110001111011000000010011011010111011)))
(assert (= r (fp #b1 #b11000100101 #b0011100101110000110101010001111110010010000110010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
