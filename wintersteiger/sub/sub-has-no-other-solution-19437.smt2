(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.62038464866380049755889558582566678524017333984375p453 {- 2793964072548668 453 (-3.76883e+136)}
; Y = -1.397312599854213743810760206542909145355224609375p688 {- 1789336876653040 688 (-1.79445e+207)}
; -1.62038464866380049755889558582566678524017333984375p453 - -1.397312599854213743810760206542909145355224609375p688 == 1.397312599854213743810760206542909145355224609375p688
; [HW: 1.397312599854213743810760206542909145355224609375p688] 

; mpf : + 1789336876653040 688
; mpfd: + 1789336876653040 688 (1.79445e+207) class: Pos. norm. non-zero
; hwf : + 1789336876653040 688 (1.79445e+207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000100 #b1001111011010001100001110100000011110011100100111100)))
(assert (= y (fp #b1 #b11010101111 #b0110010110110110010001110100111010101001100111110000)))
(assert (= r (fp #b0 #b11010101111 #b0110010110110110010001110100111010101001100111110000)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
