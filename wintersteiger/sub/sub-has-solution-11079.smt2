(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4018507441344489894419211850618012249469757080078125p-314 {+ 1809774861542461 -314 (4.20033e-095)}
; Y = -1.7845522551434422897642662064754404127597808837890625p-334 {- 3533309243916689 -334 (-5.0993e-101)}
; 1.4018507441344489894419211850618012249469757080078125p-314 - -1.7845522551434422897642662064754404127597808837890625p-334 == 1.401852446016100817161031955038197338581085205078125p-314
; [HW: 1.401852446016100817161031955038197338581085205078125p-314] 

; mpf : + 1809782526136034 -314
; mpfd: + 1809782526136034 -314 (4.20033e-095) class: Pos. norm. non-zero
; hwf : + 1809782526136034 -314 (4.20033e-095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011000101 #b0110011011011111101100001011101111101110010000111101)))
(assert (= y (fp #b1 #b01010110001 #b1100100011011000011010101010010111011000000110010001)))
(assert (= r (fp #b0 #b01011000101 #b0110011011011111110011010100100101110100111011100010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
