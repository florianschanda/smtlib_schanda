(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9263626548638155266957028288743458688259124755859375p857 {+ 4171966507254623 857 (1.85116e+258)}
; Y = 1.41092393152466133443567741778679192066192626953125p-79 {+ 1850636864892084 -79 (2.33418e-024)}
; 1.9263626548638155266957028288743458688259124755859375p857 - 1.41092393152466133443567741778679192066192626953125p-79 == 1.9263626548638155266957028288743458688259124755859375p857
; [HW: 1.9263626548638155266957028288743458688259124755859375p857] 

; mpf : + 4171966507254623 857
; mpfd: + 4171966507254623 857 (1.85116e+258) class: Pos. norm. non-zero
; hwf : + 4171966507254623 857 (1.85116e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011000 #b1110110100100110000110100101101011100000001101011111)))
(assert (= y (fp #b0 #b01110110000 #b0110100100110010010011111000111100001010110010110100)))
(assert (= r (fp #b0 #b11101011000 #b1110110100100110000110100101101011100000001101011111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
