(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7831511523905125837785590192652307450771331787109375p78 {+ 3526999238080687 78 (5.38924e+023)}
; Y = 1.963770100920153804935353036853484809398651123046875p-894 {+ 4340434667374830 -894 (1.48688e-269)}
; 1.7831511523905125837785590192652307450771331787109375p78 - 1.963770100920153804935353036853484809398651123046875p-894 == 1.783151152390512361733954094233922660350799560546875p78
; [HW: 1.783151152390512361733954094233922660350799560546875p78] 

; mpf : + 3526999238080686 78
; mpfd: + 3526999238080686 78 (5.38924e+023) class: Pos. norm. non-zero
; hwf : + 3526999238080686 78 (5.38924e+023) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001101 #b1100100001111100100110000000101101010111100010101111)))
(assert (= y (fp #b0 #b00010000001 #b1111011010111001101000110010100001010000100011101110)))
(assert (= r (fp #b0 #b10001001101 #b1100100001111100100110000000101101010111100010101110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
