(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.741962190775800944919637913699261844158172607421875p-19 {+ 3341500645900894 -19 (3.32253e-006)}
; Y = -1.267241693161455629024203517474234104156494140625p309 {- 1203549589739792 309 (-1.32169e+093)}
; 1.741962190775800944919637913699261844158172607421875p-19 - -1.267241693161455629024203517474234104156494140625p309 == 1.267241693161455629024203517474234104156494140625p309
; [HW: 1.267241693161455629024203517474234104156494140625p309] 

; mpf : + 1203549589739792 309
; mpfd: + 1203549589739792 309 (1.32169e+093) class: Pos. norm. non-zero
; hwf : + 1203549589739792 309 (1.32169e+093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101100 #b1011110111110001001110111111000001000000001001011110)))
(assert (= y (fp #b1 #b10100110100 #b0100010001101001111100111001110001000001100100010000)))
(assert (= r (fp #b0 #b10100110100 #b0100010001101001111100111001110001000001100100010000)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
