(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6488557057205810441047333370079286396503448486328125p-575 {+ 2922186314500429 -575 (1.33332e-173)}
; Y = -1.5648983204054867091059577433043159544467926025390625p946 {- 2544075865280369 946 (-9.30812e+284)}
; 1.6488557057205810441047333370079286396503448486328125p-575 - -1.5648983204054867091059577433043159544467926025390625p946 == 1.5648983204054867091059577433043159544467926025390625p946
; [HW: 1.5648983204054867091059577433043159544467926025390625p946] 

; mpf : + 2544075865280369 946
; mpfd: + 2544075865280369 946 (9.30812e+284) class: Pos. norm. non-zero
; hwf : + 2544075865280369 946 (9.30812e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000000 #b1010011000011011011010000101001111100100100101001101)))
(assert (= y (fp #b1 #b11110110001 #b1001000010011101001011010010001110110100111101110001)))
(assert (= r (fp #b0 #b11110110001 #b1001000010011101001011010010001110110100111101110001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
