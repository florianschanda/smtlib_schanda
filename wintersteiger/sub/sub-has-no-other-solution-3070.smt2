(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6789729643797244307279470376670360565185546875p-171 {+ 3057822389375168 -171 (5.60937e-052)}
; Y = -1.5069994191302089614481474200147204101085662841796875p-218 {- 2283322395071867 -218 (-3.57745e-066)}
; 1.6789729643797244307279470376670360565185546875p-171 - -1.5069994191302089614481474200147204101085662841796875p-218 == 1.678972964379735088868983439169824123382568359375p-171
; [HW: 1.678972964379735088868983439169824123382568359375p-171] 

; mpf : + 3057822389375216 -171
; mpfd: + 3057822389375216 -171 (5.60937e-052) class: Pos. norm. non-zero
; hwf : + 3057822389375216 -171 (5.60937e-052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010100 #b1010110111010001001011000001010011100001000011000000)))
(assert (= y (fp #b1 #b01100100101 #b1000000111001010101101101100010001000001010101111011)))
(assert (= r (fp #b0 #b01101010100 #b1010110111010001001011000001010011100001000011110000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
