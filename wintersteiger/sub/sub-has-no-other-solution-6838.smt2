(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2623641770386282434657232442987151443958282470703125p3 {+ 1181583209946533 3 (10.0989)}
; Y = 1.351672747426644338730739036691375076770782470703125p158 {+ 1583793254266994 158 (4.93868e+047)}
; 1.2623641770386282434657232442987151443958282470703125p3 - 1.351672747426644338730739036691375076770782470703125p158 == -1.351672747426644338730739036691375076770782470703125p158
; [HW: -1.351672747426644338730739036691375076770782470703125p158] 

; mpf : - 1583793254266994 158
; mpfd: - 1583793254266994 158 (-4.93868e+047) class: Neg. norm. non-zero
; hwf : - 1583793254266994 158 (-4.93868e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000010 #b0100001100101010010011000111100000000101110110100101)))
(assert (= y (fp #b0 #b10010011101 #b0101101000000111001110011010010100010111100001110010)))
(assert (= r (fp #b1 #b10010011101 #b0101101000000111001110011010010100010111100001110010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
