(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.835569014594649051019814578467048704624176025390625p-630 {- 3763068302770794 -630 (-4.11977e-190)}
; Y = -1.5298097981768770114996414122288115322589874267578125p-577 {- 2386051209646621 -577 (-3.09264e-174)}
; -1.835569014594649051019814578467048704624176025390625p-630 - -1.5298097981768770114996414122288115322589874267578125p-577 == 1.52980979817687678945503648719750344753265380859375p-577
; [HW: 1.52980979817687678945503648719750344753265380859375p-577] 

; mpf : + 2386051209646620 -577
; mpfd: + 2386051209646620 -577 (3.09264e-174) class: Pos. norm. non-zero
; hwf : + 2386051209646620 -577 (3.09264e-174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001001 #b1101010111100111110110011101011100111100001001101010)))
(assert (= y (fp #b1 #b00110111110 #b1000011110100001100111010110110001000101001000011101)))
(assert (= r (fp #b0 #b00110111110 #b1000011110100001100111010110110001000101001000011100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
