(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6428463536176034498481612899922765791416168212890625p-575 {+ 2895122598608721 -575 (1.32846e-173)}
; Y = 1.1288143915696264851789010208449326455593109130859375p615 {+ 580128445872927 615 (1.53486e+185)}
; 1.6428463536176034498481612899922765791416168212890625p-575 - 1.1288143915696264851789010208449326455593109130859375p615 == -1.1288143915696264851789010208449326455593109130859375p615
; [HW: -1.1288143915696264851789010208449326455593109130859375p615] 

; mpf : - 580128445872927 615
; mpfd: - 580128445872927 615 (-1.53486e+185) class: Neg. norm. non-zero
; hwf : - 580128445872927 615 (-1.53486e+185) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000000 #b1010010010010001100101000010000100100011111101010001)))
(assert (= y (fp #b0 #b11001100110 #b0010000011111001111110101101111100001011101100011111)))
(assert (= r (fp #b1 #b11001100110 #b0010000011111001111110101101111100001011101100011111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
