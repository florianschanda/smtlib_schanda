(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8186042622691480641350381119991652667522430419921875p831 {+ 3686665850519235 831 (2.60414e+250)}
; Y = -1.87456379703971176553523037000559270381927490234375p760 {- 3938685190459772 760 (-1.13683e+229)}
; 1.8186042622691480641350381119991652667522430419921875p831 - -1.87456379703971176553523037000559270381927490234375p760 == 1.8186042622691480641350381119991652667522430419921875p831
; [HW: 1.8186042622691480641350381119991652667522430419921875p831] 

; mpf : + 3686665850519235 831
; mpfd: + 3686665850519235 831 (2.60414e+250) class: Pos. norm. non-zero
; hwf : + 3686665850519235 831 (2.60414e+250) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111110 #b1101000110010000000011001000011011001111111011000011)))
(assert (= y (fp #b1 #b11011110111 #b1101111111100011011010011011101010001101000101111100)))
(assert (= r (fp #b0 #b11100111110 #b1101000110010000000011001000011011001111111011000011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
