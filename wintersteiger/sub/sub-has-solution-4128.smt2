(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8526722449474430920446366144460625946521759033203125p-792 {+ 3840094404614469 -792 (7.11282e-239)}
; Y = 1.8975142659375443532354665876482613384723663330078125p641 {+ 4042044913636029 641 (1.73146e+193)}
; 1.8526722449474430920446366144460625946521759033203125p-792 - 1.8975142659375443532354665876482613384723663330078125p641 == -1.89751426593754413119086166261695325374603271484375p641
; [HW: -1.89751426593754413119086166261695325374603271484375p641] 

; mpf : - 4042044913636028 641
; mpfd: - 4042044913636028 641 (-1.73146e+193) class: Neg. norm. non-zero
; hwf : - 4042044913636028 641 (-1.73146e+193) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100111 #b1101101001001000101110100110111001000001100101000101)))
(assert (= y (fp #b0 #b11010000000 #b1110010111000011011111101011001111100101001010111101)))
(assert (= r (fp #b1 #b11010000000 #b1110010111000011011111101011001111100101001010111100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
