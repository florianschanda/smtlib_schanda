(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.48020866472649981204767755116336047649383544921875p690 {+ 2162667563522348 690 (7.60361e+207)}
; Y = 1.620416519600193172578883604728616774082183837890625p20 {+ 2794107606485930 20 (1.69913e+006)}
; 1.48020866472649981204767755116336047649383544921875p690 - 1.620416519600193172578883604728616774082183837890625p20 == 1.48020866472649981204767755116336047649383544921875p690
; [HW: 1.48020866472649981204767755116336047649383544921875p690] 

; mpf : + 2162667563522348 690
; mpfd: + 2162667563522348 690 (7.60361e+207) class: Pos. norm. non-zero
; hwf : + 2162667563522348 690 (7.60361e+207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110001 #b0111101011101110111101000111111001000001100100101100)))
(assert (= y (fp #b0 #b10000010011 #b1001111011010011100111011111010110010100101110101010)))
(assert (= r (fp #b0 #b11010110001 #b0111101011101110111101000111111001000001100100101100)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
