(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.854754866669160673353644597227685153484344482421875p453 {+ 3849473699024350 453 (4.31394e+136)}
; Y = 1.3301408365030560343456045302446000277996063232421875p-127 {+ 1486822148254947 -127 (7.81787e-039)}
; 1.854754866669160673353644597227685153484344482421875p453 - 1.3301408365030560343456045302446000277996063232421875p-127 == 1.8547548666691604513090396721963770687580108642578125p453
; [HW: 1.8547548666691604513090396721963770687580108642578125p453] 

; mpf : + 3849473699024349 453
; mpfd: + 3849473699024349 453 (4.31394e+136) class: Pos. norm. non-zero
; hwf : + 3849473699024349 453 (4.31394e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000100 #b1101101011010001001101110000011001110000110111011110)))
(assert (= y (fp #b0 #b01110000000 #b0101010010000100000111000001111111011010110011100011)))
(assert (= r (fp #b0 #b10111000100 #b1101101011010001001101110000011001110000110111011101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
