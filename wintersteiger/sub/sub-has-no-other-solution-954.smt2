(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1201849141908051255001055324100889265537261962890625p243 {- 541264734765265 243 (-1.58336e+073)}
; Y = -1.79262415404008645936073662596754729747772216796875p-139 {- 3569661844779788 -139 (-2.57229e-042)}
; -1.1201849141908051255001055324100889265537261962890625p243 - -1.79262415404008645936073662596754729747772216796875p-139 == -1.1201849141908051255001055324100889265537261962890625p243
; [HW: -1.1201849141908051255001055324100889265537261962890625p243] 

; mpf : - 541264734765265 243
; mpfd: - 541264734765265 243 (-1.58336e+073) class: Neg. norm. non-zero
; hwf : - 541264734765265 243 (-1.58336e+073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110010 #b0001111011000100011100000100001111101100000011010001)))
(assert (= y (fp #b1 #b01101110100 #b1100101011101001011010101010001110011111001100001100)))
(assert (= r (fp #b1 #b10011110010 #b0001111011000100011100000100001111101100000011010001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
