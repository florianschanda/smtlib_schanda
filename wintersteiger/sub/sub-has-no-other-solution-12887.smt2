(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3704915497814607050486301886849105358123779296875p-17 {+ 1668545605539704 -17 (1.0456e-005)}
; Y = 1.276117126728081974107453788747079670429229736328125p-793 {+ 1243520989043202 -793 (2.44965e-239)}
; 1.3704915497814607050486301886849105358123779296875p-17 - 1.276117126728081974107453788747079670429229736328125p-793 == 1.3704915497814607050486301886849105358123779296875p-17
; [HW: 1.3704915497814607050486301886849105358123779296875p-17] 

; mpf : + 1668545605539704 -17
; mpfd: + 1668545605539704 -17 (1.0456e-005) class: Pos. norm. non-zero
; hwf : + 1668545605539704 -17 (1.0456e-005) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101110 #b0101111011011000100010001100000111000001011101111000)))
(assert (= y (fp #b0 #b00011100110 #b0100011010101111100111001010110100101001101000000010)))
(assert (= r (fp #b0 #b01111101110 #b0101111011011000100010001100000111000001011101111000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
