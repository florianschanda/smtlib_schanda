(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.003882857688108032334639574401080608367919921875p-754 {+ 17486836437296 -754 (1.05942e-227)}
; Y = 1.180815444623539267610112801776267588138580322265625p-286 {+ 814320369029402 -286 (9.49737e-087)}
; 1.003882857688108032334639574401080608367919921875p-754 - 1.180815444623539267610112801776267588138580322265625p-286 == -1.180815444623539267610112801776267588138580322265625p-286
; [HW: -1.180815444623539267610112801776267588138580322265625p-286] 

; mpf : - 814320369029402 -286
; mpfd: - 814320369029402 -286 (-9.49737e-087) class: Neg. norm. non-zero
; hwf : - 814320369029402 -286 (-9.49737e-087) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001101 #b0000000011111110011101111000101011001001000100110000)))
(assert (= y (fp #b0 #b01011100001 #b0010111001001001111010111100010101000101000100011010)))
(assert (= r (fp #b1 #b01011100001 #b0010111001001001111010111100010101000101000100011010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
