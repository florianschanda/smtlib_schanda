(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0408126116368274782786329524242319166660308837890625p-995 {+ 183803662559633 -995 (3.10833e-300)}
; Y = -1.003186616875739733956152122118510305881500244140625p809 {- 14351246574154 809 (-3.4249e+243)}
; 1.0408126116368274782786329524242319166660308837890625p-995 - -1.003186616875739733956152122118510305881500244140625p809 == 1.003186616875739733956152122118510305881500244140625p809
; [HW: 1.003186616875739733956152122118510305881500244140625p809] 

; mpf : + 14351246574154 809
; mpfd: + 14351246574154 809 (3.4249e+243) class: Pos. norm. non-zero
; hwf : + 14351246574154 809 (3.4249e+243) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011100 #b0000101001110010101100100000000000111110100110010001)))
(assert (= y (fp #b1 #b11100101000 #b0000000011010000110101101000111101000100001001001010)))
(assert (= r (fp #b0 #b11100101000 #b0000000011010000110101101000111101000100001001001010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
