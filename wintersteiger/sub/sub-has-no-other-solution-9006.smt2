(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1660588992224827364907469018362462520599365234375p248 {+ 747862796659928 248 (5.27423e+074)}
; Y = -1.4484580580403527694244303347659297287464141845703125p-100 {- 2019675543081829 -100 (-1.14263e-030)}
; 1.1660588992224827364907469018362462520599365234375p248 - -1.4484580580403527694244303347659297287464141845703125p-100 == 1.1660588992224827364907469018362462520599365234375p248
; [HW: 1.1660588992224827364907469018362462520599365234375p248] 

; mpf : + 747862796659928 248
; mpfd: + 747862796659928 248 (5.27423e+074) class: Pos. norm. non-zero
; hwf : + 747862796659928 248 (5.27423e+074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110111 #b0010101010000010110101100000010101011110110011011000)))
(assert (= y (fp #b1 #b01110011011 #b0111001011001110001001011011010011101001001101100101)))
(assert (= r (fp #b0 #b10011110111 #b0010101010000010110101100000010101011110110011011000)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
