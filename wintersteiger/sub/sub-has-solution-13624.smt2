(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.890876861584590784559622989036142826080322265625p592 {- 4012152701865360 592 (-3.06493e+178)}
; Y = 1.72780932431513978286830024444498121738433837890625p891 {+ 3277761801782436 891 (2.85248e+268)}
; -1.890876861584590784559622989036142826080322265625p592 - 1.72780932431513978286830024444498121738433837890625p891 == -1.72780932431513978286830024444498121738433837890625p891
; [HW: -1.72780932431513978286830024444498121738433837890625p891] 

; mpf : - 3277761801782436 891
; mpfd: - 3277761801782436 891 (-2.85248e+268) class: Neg. norm. non-zero
; hwf : - 3277761801782436 891 (-2.85248e+268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001111 #b1110010000010000100000011000100101000100110110010000)))
(assert (= y (fp #b0 #b11101111010 #b1011101001010001101101100011110110101000010010100100)))
(assert (= r (fp #b1 #b11101111010 #b1011101001010001101101100011110110101000010010100100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
