(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8697338484843510908461894359788857400417327880859375p397 {+ 3916933035945631 397 (6.03515e+119)}
; Y = 1.974069991851288730089208911522291600704193115234375p312 {+ 4386821252334246 312 (1.6471e+094)}
; 1.8697338484843510908461894359788857400417327880859375p397 - 1.974069991851288730089208911522291600704193115234375p312 == 1.8697338484843510908461894359788857400417327880859375p397
; [HW: 1.8697338484843510908461894359788857400417327880859375p397] 

; mpf : + 3916933035945631 397
; mpfd: + 3916933035945631 397 (6.03515e+119) class: Pos. norm. non-zero
; hwf : + 3916933035945631 397 (6.03515e+119) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110001100 #b1101111010100110111000001010001101110110111010011111)))
(assert (= y (fp #b0 #b10100110111 #b1111100101011100101001101010011100000100001010100110)))
(assert (= r (fp #b0 #b10110001100 #b1101111010100110111000001010001101110110111010011111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
