(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6330422898562060307625642963103018701076507568359375p-724 {+ 2850969020706175 -724 (1.85046e-218)}
; Y = -1.4877893841703073718463201657868921756744384765625p-888 {- 2196808088784680 -888 (-7.2095e-268)}
; 1.6330422898562060307625642963103018701076507568359375p-724 - -1.4877893841703073718463201657868921756744384765625p-888 == 1.633042289856206252807169221341609954833984375p-724
; [HW: 1.633042289856206252807169221341609954833984375p-724] 

; mpf : + 2850969020706176 -724
; mpfd: + 2850969020706176 -724 (1.85046e-218) class: Pos. norm. non-zero
; hwf : + 2850969020706176 -724 (1.85046e-218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101011 #b1010001000001111000011110011101111101010110101111111)))
(assert (= y (fp #b1 #b00010000111 #b0111110011011111110000111101110001011000111100101000)))
(assert (= r (fp #b0 #b00100101011 #b1010001000001111000011110011101111101010110110000000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
