(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.940091508581877288719397256500087678432464599609375p890 {+ 4233795767743510 890 (1.60147e+268)}
; Y = -1.8577364248794554502097753356792964041233062744140625p178 {- 3862901443469217 178 (-7.11743e+053)}
; 1.940091508581877288719397256500087678432464599609375p890 - -1.8577364248794554502097753356792964041233062744140625p178 == 1.940091508581877288719397256500087678432464599609375p890
; [HW: 1.940091508581877288719397256500087678432464599609375p890] 

; mpf : + 4233795767743510 890
; mpfd: + 4233795767743510 890 (1.60147e+268) class: Pos. norm. non-zero
; hwf : + 4233795767743510 890 (1.60147e+268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111001 #b1111000010101001110101100100110010011011010000010110)))
(assert (= y (fp #b1 #b10010110001 #b1101101110010100100111010100010101110001111110100001)))
(assert (= r (fp #b0 #b11101111001 #b1111000010101001110101100100110010011011010000010110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
