(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5079833876215473775772579756448976695537567138671875p786 {- 2287753795202803 786 (-6.13724e+236)}
; Y = 1.01645144268750531324485564255155622959136962890625p753 {+ 74090711157156 753 (4.81585e+226)}
; -1.5079833876215473775772579756448976695537567138671875p786 - 1.01645144268750531324485564255155622959136962890625p753 == -1.50798338773987783412167118513025343418121337890625p786
; [HW: -1.50798338773987783412167118513025343418121337890625p786] 

; mpf : - 2287753795735716 786
; mpfd: - 2287753795735716 786 (-6.13724e+236) class: Neg. norm. non-zero
; hwf : - 2287753795735716 786 (-6.13724e+236) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010001 #b1000001000001011001100110000010010111110111011110011)))
(assert (= y (fp #b0 #b11011110000 #b0000010000110110001010010110100001010000100110100100)))
(assert (= r (fp #b1 #b11100010001 #b1000001000001011001100110000010101000001000010100100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
