(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9266316117865940338305108525673858821392059326171875p797 {+ 4173177781551827 797 (1.60585e+240)}
; Y = 1.17354237805496186553000370622612535953521728515625p-408 {+ 781565389141316 -408 (1.77525e-123)}
; 1.9266316117865940338305108525673858821392059326171875p797 - 1.17354237805496186553000370622612535953521728515625p-408 == 1.926631611786593811785905927536077797412872314453125p797
; [HW: 1.926631611786593811785905927536077797412872314453125p797] 

; mpf : + 4173177781551826 797
; mpfd: + 4173177781551826 797 (1.60585e+240) class: Pos. norm. non-zero
; hwf : + 4173177781551826 797 (1.60585e+240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011100 #b1110110100110111101110101011010000010000001011010011)))
(assert (= y (fp #b0 #b01001100111 #b0010110001101101010001011111011000110111010101000100)))
(assert (= r (fp #b0 #b11100011100 #b1110110100110111101110101011010000010000001011010010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
