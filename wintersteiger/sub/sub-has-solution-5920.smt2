(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.841545277453141782331158537999726831912994384765625p27 {+ 3789982997953370 27 (2.47168e+008)}
; Y = -1.17507492293254234283494952251203358173370361328125p757 {- 788467357680916 757 (-8.90784e+227)}
; 1.841545277453141782331158537999726831912994384765625p27 - -1.17507492293254234283494952251203358173370361328125p757 == 1.17507492293254234283494952251203358173370361328125p757
; [HW: 1.17507492293254234283494952251203358173370361328125p757] 

; mpf : + 788467357680916 757
; mpfd: + 788467357680916 757 (8.90784e+227) class: Pos. norm. non-zero
; hwf : + 788467357680916 757 (8.90784e+227) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011010 #b1101011101101111100000101110010011000011101101011010)))
(assert (= y (fp #b1 #b11011110100 #b0010110011010001101101011100110001011000010100010100)))
(assert (= r (fp #b0 #b11011110100 #b0010110011010001101101011100110001011000010100010100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
