(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.369275855847627898498330978327430784702301025390625p572 {+ 1663070606792298 572 (2.11665e+172)}
; Y = 1.591534450839279468681297657894901931285858154296875p236 {+ 2664034332376590 236 (1.7575e+071)}
; 1.369275855847627898498330978327430784702301025390625p572 - 1.591534450839279468681297657894901931285858154296875p236 == 1.369275855847627898498330978327430784702301025390625p572
; [HW: 1.369275855847627898498330978327430784702301025390625p572] 

; mpf : + 1663070606792298 572
; mpfd: + 1663070606792298 572 (2.11665e+172) class: Pos. norm. non-zero
; hwf : + 1663070606792298 572 (2.11665e+172) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111011 #b0101111010001000110111001100110000010001011001101010)))
(assert (= y (fp #b0 #b10011101011 #b1001011101101110110011010100000011001111111000001110)))
(assert (= r (fp #b0 #b11000111011 #b0101111010001000110111001100110000010001011001101010)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
