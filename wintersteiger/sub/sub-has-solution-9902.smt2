(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8810444151520346878214695607312023639678955078125p-399 {- 3967871299775560 -399 (-1.4569e-120)}
; Y = -1.3228046518452283297762051006429828703403472900390625p12 {- 1453782909763633 12 (-5418.21)}
; -1.8810444151520346878214695607312023639678955078125p-399 - -1.3228046518452283297762051006429828703403472900390625p12 == 1.3228046518452283297762051006429828703403472900390625p12
; [HW: 1.3228046518452283297762051006429828703403472900390625p12] 

; mpf : + 1453782909763633 12
; mpfd: + 1453782909763633 12 (5418.21) class: Pos. norm. non-zero
; hwf : + 1453782909763633 12 (5418.21) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001110000 #b1110000110001100001000000111010101100110110001001000)))
(assert (= y (fp #b1 #b10000001011 #b0101001010100011010100110101111010101100000000110001)))
(assert (= r (fp #b0 #b10000001011 #b0101001010100011010100110101111010101100000000110001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
