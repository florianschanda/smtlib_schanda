(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7124495923757143689414306209073401987552642822265625p-804 {+ 3208587718743529 -804 (1.6051e-242)}
; Y = 1.0870692787445317417649448543670587241649627685546875p-775 {+ 392125171309291 -775 (5.47029e-234)}
; 1.7124495923757143689414306209073401987552642822265625p-804 - 1.0870692787445317417649448543670587241649627685546875p-775 == -1.0870692755548458929837352116010151803493499755859375p-775
; [HW: -1.0870692755548458929837352116010151803493499755859375p-775] 

; mpf : - 392125156944223 -775
; mpfd: - 392125156944223 -775 (-5.47029e-234) class: Neg. norm. non-zero
; hwf : - 392125156944223 -775 (-5.47029e-234) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011011011 #b1011011001100011000110001011001101001101010111101001)))
(assert (= y (fp #b0 #b00011111000 #b0001011001001010001011000001100010110001101011101011)))
(assert (= r (fp #b1 #b00011111000 #b0001011001001010001011000000101011111110100101011111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
