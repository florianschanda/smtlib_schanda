(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.875669796806151534696027738391421735286712646484375p292 {+ 3943666170595782 292 (1.4925e+088)}
; Y = -1.4365773219677253624837476309039629995822906494140625p-740 {- 1966169464532257 -740 (-2.48389e-223)}
; 1.875669796806151534696027738391421735286712646484375p292 - -1.4365773219677253624837476309039629995822906494140625p-740 == 1.875669796806151534696027738391421735286712646484375p292
; [HW: 1.875669796806151534696027738391421735286712646484375p292] 

; mpf : + 3943666170595782 292
; mpfd: + 3943666170595782 292 (1.4925e+088) class: Pos. norm. non-zero
; hwf : + 3943666170595782 292 (1.4925e+088) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100011 #b1110000000101011111001010101001101100000100111000110)))
(assert (= y (fp #b1 #b00100011011 #b0110111111000011100010000000100000000110110100100001)))
(assert (= r (fp #b0 #b10100100011 #b1110000000101011111001010101001101100000100111000110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
