(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2225733526589073196788604036555625498294830322265625p216 {- 1002381268097257 216 (-1.28752e+065)}
; Y = 1.26959982321519593284619986661709845066070556640625p325 {+ 1214169663371108 325 (8.67792e+097)}
; -1.2225733526589073196788604036555625498294830322265625p216 - 1.26959982321519593284619986661709845066070556640625p325 == -1.26959982321519593284619986661709845066070556640625p325
; [HW: -1.26959982321519593284619986661709845066070556640625p325] 

; mpf : - 1214169663371108 325
; mpfd: - 1214169663371108 325 (-8.67792e+097) class: Neg. norm. non-zero
; hwf : - 1214169663371108 325 (-8.67792e+097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010111 #b0011100011111010100100010011011010100001100011101001)))
(assert (= y (fp #b0 #b10101000100 #b0100010100000100011111100111011110110111011101100100)))
(assert (= r (fp #b1 #b10101000100 #b0100010100000100011111100111011110110111011101100100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
