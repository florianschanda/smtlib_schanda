(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.930648885951288473705744763719849288463592529296875p935 {+ 4191269975982990 935 (5.60724e+281)}
; Y = -1.955407225369707457929280280950479209423065185546875p126 {- 4302771624162094 126 (-1.66348e+038)}
; 1.930648885951288473705744763719849288463592529296875p935 - -1.955407225369707457929280280950479209423065185546875p126 == 1.930648885951288473705744763719849288463592529296875p935
; [HW: 1.930648885951288473705744763719849288463592529296875p935] 

; mpf : + 4191269975982990 935
; mpfd: + 4191269975982990 935 (5.60724e+281) class: Pos. norm. non-zero
; hwf : + 4191269975982990 935 (5.60724e+281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110100110 #b1110111000111111000000010110000100111000001110001110)))
(assert (= y (fp #b1 #b10001111101 #b1111010010010101100100010110001101010011001100101110)))
(assert (= r (fp #b0 #b11110100110 #b1110111000111111000000010110000100111000001110001110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
