(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.33151692361305862277731648646295070648193359375p804 {- 1493019493650784 804 (-1.42057e+242)}
; Y = 1.6374020870799075311197157134301960468292236328125p-323 {+ 2870603801858248 -323 (9.58223e-098)}
; -1.33151692361305862277731648646295070648193359375p804 - 1.6374020870799075311197157134301960468292236328125p-323 == -1.33151692361305862277731648646295070648193359375p804
; [HW: -1.33151692361305862277731648646295070648193359375p804] 

; mpf : - 1493019493650784 804
; mpfd: - 1493019493650784 804 (-1.42057e+242) class: Neg. norm. non-zero
; hwf : - 1493019493650784 804 (-1.42057e+242) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100100011 #b0101010011011110010010110000100011111101000101100000)))
(assert (= y (fp #b0 #b01010111100 #b1010001100101100110010000111111001101001000011001000)))
(assert (= r (fp #b1 #b11100100011 #b0101010011011110010010110000100011111101000101100000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
