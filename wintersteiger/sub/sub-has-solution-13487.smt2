(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0457984563453048831860314749064855277538299560546875p10 {+ 206257910930859 10 (1070.9)}
; Y = 1.446795225958871444760234226123429834842681884765625p-160 {+ 2012186813139290 -160 (9.89937e-049)}
; 1.0457984563453048831860314749064855277538299560546875p10 - 1.446795225958871444760234226123429834842681884765625p-160 == 1.0457984563453048831860314749064855277538299560546875p10
; [HW: 1.0457984563453048831860314749064855277538299560546875p10] 

; mpf : + 206257910930859 10
; mpfd: + 206257910930859 10 (1070.9) class: Pos. norm. non-zero
; hwf : + 206257910930859 10 (1070.9) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001001 #b0000101110111001011100101001100000110101110110101011)))
(assert (= y (fp #b0 #b01101011111 #b0111001001100001001011000000001110000000100101011010)))
(assert (= r (fp #b0 #b10000001001 #b0000101110111001011100101001100000110101110110101011)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
