(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2162678547212804058830215581110678613185882568359375p-451 {+ 973983829934975 -451 (2.09171e-136)}
; Y = -1.19030929418189668211880416492931544780731201171875p401 {- 857076866362732 401 (-6.14735e+120)}
; 1.2162678547212804058830215581110678613185882568359375p-451 - -1.19030929418189668211880416492931544780731201171875p401 == 1.19030929418189668211880416492931544780731201171875p401
; [HW: 1.19030929418189668211880416492931544780731201171875p401] 

; mpf : + 857076866362732 401
; mpfd: + 857076866362732 401 (6.14735e+120) class: Pos. norm. non-zero
; hwf : + 857076866362732 401 (6.14735e+120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111100 #b0011011101011101010101001000001100110100001101111111)))
(assert (= y (fp #b1 #b10110010000 #b0011000010111000000111000010001010100010110101101100)))
(assert (= r (fp #b0 #b10110010000 #b0011000010111000000111000010001010100010110101101100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
