(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.42282565356857571003956763888709247112274169921875p1021 {+ 1904237455854124 1021 (3.19725e+307)}
; Y = -1.89428466792542327112869315897114574909210205078125p-6 {- 4027500097232084 -6 (-0.0295982)}
; 1.42282565356857571003956763888709247112274169921875p1021 - -1.89428466792542327112869315897114574909210205078125p-6 == 1.42282565356857571003956763888709247112274169921875p1021
; [HW: 1.42282565356857571003956763888709247112274169921875p1021] 

; mpf : + 1904237455854124 1021
; mpfd: + 1904237455854124 1021 (3.19725e+307) class: Pos. norm. non-zero
; hwf : + 1904237455854124 1021 (3.19725e+307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111100 #b0110110000111110010011010101000111111100101000101100)))
(assert (= y (fp #b1 #b01111111001 #b1110010011101111110101110000101000001101110011010100)))
(assert (= r (fp #b0 #b11111111100 #b0110110000111110010011010101000111111100101000101100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
