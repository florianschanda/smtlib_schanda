(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.87977577387046768109257754986174404621124267578125p-408 {- 3962157847372628 -408 (-2.8436e-123)}
; Y = 1.63789559162466868968976996256969869136810302734375p-356 {+ 2872826348742140 -356 (1.11585e-107)}
; -1.87977577387046768109257754986174404621124267578125p-408 - 1.63789559162466868968976996256969869136810302734375p-356 == -1.637895591624669133778979812632314860820770263671875p-356
; [HW: -1.637895591624669133778979812632314860820770263671875p-356] 

; mpf : - 2872826348742142 -356
; mpfd: - 2872826348742142 -356 (-1.11585e-107) class: Neg. norm. non-zero
; hwf : - 2872826348742142 -356 (-1.11585e-107) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100111 #b1110000100111000111111000011000010010110001101010100)))
(assert (= y (fp #b0 #b01010011011 #b1010001101001101001000000010000001001010010111111100)))
(assert (= r (fp #b1 #b01010011011 #b1010001101001101001000000010000001001010010111111110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
