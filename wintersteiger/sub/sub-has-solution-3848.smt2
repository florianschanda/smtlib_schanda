(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9055394680593593648154637776315212249755859375p772 {+ 4078187210921408 772 (4.73342e+232)}
; Y = 1.903669026615719683803717998671345412731170654296875p-498 {+ 4069763491532814 -498 (2.32624e-150)}
; 1.9055394680593593648154637776315212249755859375p772 - 1.903669026615719683803717998671345412731170654296875p-498 == 1.9055394680593593648154637776315212249755859375p772
; [HW: 1.9055394680593593648154637776315212249755859375p772] 

; mpf : + 4078187210921408 772
; mpfd: + 4078187210921408 772 (4.73342e+232) class: Pos. norm. non-zero
; hwf : + 4078187210921408 772 (4.73342e+232) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100000011 #b1110011111010001011011110100000010001101010111000000)))
(assert (= y (fp #b0 #b01000001101 #b1110011101010110110110100111001110111001000000001110)))
(assert (= r (fp #b0 #b11100000011 #b1110011111010001011011110100000010001101010111000000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
