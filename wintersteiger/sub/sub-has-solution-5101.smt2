(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2551147568666609632970221355208195745944976806640625p818 {- 1148934723961409 818 (-2.19392e+246)}
; Y = -1.095718858702313003306016980786807835102081298828125p-918 {- 431079416384066 -918 (-4.94496e-277)}
; -1.2551147568666609632970221355208195745944976806640625p818 - -1.095718858702313003306016980786807835102081298828125p-918 == -1.2551147568666607412524172104895114898681640625p818
; [HW: -1.2551147568666607412524172104895114898681640625p818] 

; mpf : - 1148934723961408 818
; mpfd: - 1148934723961408 818 (-2.19392e+246) class: Neg. norm. non-zero
; hwf : - 1148934723961408 818 (-2.19392e+246) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110001 #b0100000101001111001100110110000101111000001001000001)))
(assert (= y (fp #b1 #b00001101001 #b0001100010000001000001111111011110111100101001000010)))
(assert (= r (fp #b1 #b11100110001 #b0100000101001111001100110110000101111000001001000000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
