(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.40267983365556592190159790334291756153106689453125p612 {- 1813508748800820 612 (-2.38405e+184)}
; Y = -1.6604224222077517136852975454530678689479827880859375p613 {- 2974278174561951 613 (-5.64425e+184)}
; -1.40267983365556592190159790334291756153106689453125p612 - -1.6604224222077517136852975454530678689479827880859375p613 == 1.918165010759937505468997187563218176364898681640625p612
; [HW: 1.918165010759937505468997187563218176364898681640625p612] 

; mpf : + 4135047600323082 612
; mpfd: + 4135047600323082 612 (3.26019e+184) class: Pos. norm. non-zero
; hwf : + 4135047600323082 612 (3.26019e+184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100011 #b0110011100010110000001101000110001001111001100110100)))
(assert (= y (fp #b1 #b11001100100 #b1010100100010001011100011010000011101101011010011111)))
(assert (= r (fp #b0 #b11001100011 #b1110101100001100110111001011010110001011101000001010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
