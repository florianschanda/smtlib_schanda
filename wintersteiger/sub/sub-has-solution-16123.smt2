(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4128687219260360752315364152309484779834747314453125p-889 {- 1859395422219029 -889 (-3.42323e-268)}
; Y = -1.472635886860709231171995270415209233760833740234375p655 {- 2128562803947814 655 (-2.20162e+197)}
; -1.4128687219260360752315364152309484779834747314453125p-889 - -1.472635886860709231171995270415209233760833740234375p655 == 1.472635886860709231171995270415209233760833740234375p655
; [HW: 1.472635886860709231171995270415209233760833740234375p655] 

; mpf : + 2128562803947814 655
; mpfd: + 2128562803947814 655 (2.20162e+197) class: Pos. norm. non-zero
; hwf : + 2128562803947814 655 (2.20162e+197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010000110 #b0110100110110001110000111011101000110110101100010101)))
(assert (= y (fp #b1 #b11010001110 #b0111100011111110101010100101110011111011100100100110)))
(assert (= r (fp #b0 #b11010001110 #b0111100011111110101010100101110011111011100100100110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
