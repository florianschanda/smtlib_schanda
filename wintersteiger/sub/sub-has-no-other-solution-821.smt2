(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1267193863015390054016506837797351181507110595703125p168 {+ 570693380928229 168 (4.21556e+050)}
; Y = 1.8030769153757677525362623782712034881114959716796875p-834 {+ 3616736896836155 -834 (1.57398e-251)}
; 1.1267193863015390054016506837797351181507110595703125p168 - 1.8030769153757677525362623782712034881114959716796875p-834 == 1.12671938630153878335704575874842703342437744140625p168
; [HW: 1.12671938630153878335704575874842703342437744140625p168] 

; mpf : + 570693380928228 168
; mpfd: + 570693380928228 168 (4.21556e+050) class: Pos. norm. non-zero
; hwf : + 570693380928228 168 (4.21556e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100111 #b0010000001110000101011101000001111101111001011100101)))
(assert (= y (fp #b0 #b00010111101 #b1100110110010110011100101101111110110110001000111011)))
(assert (= r (fp #b0 #b10010100111 #b0010000001110000101011101000001111101111001011100100)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
