(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0425909782501474598603863341850228607654571533203125p722 {- 191812713776709 722 (-2.30023e+217)}
; Y = -1.125375036963647712440206305473111569881439208984375p268 {- 564638969751046 268 (-5.33748e+080)}
; -1.0425909782501474598603863341850228607654571533203125p722 - -1.125375036963647712440206305473111569881439208984375p268 == -1.0425909782501474598603863341850228607654571533203125p722
; [HW: -1.0425909782501474598603863341850228607654571533203125p722] 

; mpf : - 191812713776709 722
; mpfd: - 191812713776709 722 (-2.30023e+217) class: Neg. norm. non-zero
; hwf : - 191812713776709 722 (-2.30023e+217) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011010001 #b0000101011100111001111100000101010110000011001000101)))
(assert (= y (fp #b1 #b10100001011 #b0010000000011000100101000001001101111110011000000110)))
(assert (= r (fp #b1 #b11011010001 #b0000101011100111001111100000101010110000011001000101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
