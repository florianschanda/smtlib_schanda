(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.622194761458591205638413157430477440357208251953125p896 {- 2802116095856786 896 (-8.56997e+269)}
; Y = 1.87654517281873811640480198548175394535064697265625p529 {+ 3947608513679876 529 (3.29782e+159)}
; -1.622194761458591205638413157430477440357208251953125p896 - 1.87654517281873811640480198548175394535064697265625p529 == -1.622194761458591205638413157430477440357208251953125p896
; [HW: -1.622194761458591205638413157430477440357208251953125p896] 

; mpf : - 2802116095856786 896
; mpfd: - 2802116095856786 896 (-8.56997e+269) class: Neg. norm. non-zero
; hwf : - 2802116095856786 896 (-8.56997e+269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111111 #b1001111101001000001001111110100000110101000010010010)))
(assert (= y (fp #b0 #b11000010000 #b1110000001100101010000111011001010111001001000000100)))
(assert (= r (fp #b1 #b11101111111 #b1001111101001000001001111110100000110101000010010010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
