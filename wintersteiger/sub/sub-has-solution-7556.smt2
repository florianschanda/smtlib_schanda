(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.22471519535175854542785600642673671245574951171875p-277 {+ 1012027270050668 -277 (5.04343e-084)}
; Y = 1.01872286380606791311720371595583856105804443359375p772 {+ 84320282460316 772 (2.53054e+232)}
; 1.22471519535175854542785600642673671245574951171875p-277 - 1.01872286380606791311720371595583856105804443359375p772 == -1.0187228638060676910725987909245304763317108154296875p772
; [HW: -1.0187228638060676910725987909245304763317108154296875p772] 

; mpf : - 84320282460315 772
; mpfd: - 84320282460315 772 (-2.53054e+232) class: Neg. norm. non-zero
; hwf : - 84320282460315 772 (-2.53054e+232) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101010 #b0011100110000110111011110101111011110011001101101100)))
(assert (= y (fp #b0 #b11100000011 #b0000010011001011000001011000011110111100000010011100)))
(assert (= r (fp #b1 #b11100000011 #b0000010011001011000001011000011110111100000010011011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
