(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6956851944457278502653707619174383580684661865234375p149 {- 3133087582472951 149 (-1.21008e+045)}
; Y = 1.2952837588203804930486739976913668215274810791015625p197 {+ 1329839826192025 197 (2.6018e+059)}
; -1.6956851944457278502653707619174383580684661865234375p149 - 1.2952837588203804930486739976913668215274810791015625p197 == -1.29528375882038648825300697353668510913848876953125p197
; [HW: -1.29528375882038648825300697353668510913848876953125p197] 

; mpf : - 1329839826192052 197
; mpfd: - 1329839826192052 197 (-2.6018e+059) class: Neg. norm. non-zero
; hwf : - 1329839826192052 197 (-2.6018e+059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010100 #b1011001000011000011011001100011001110100101011110111)))
(assert (= y (fp #b0 #b10011000100 #b0100101110010111101101110110011100101100011010011001)))
(assert (= r (fp #b1 #b10011000100 #b0100101110010111101101110110011100101100011010110100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
