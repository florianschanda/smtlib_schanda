(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4769844111770977779229951920569874346256256103515625p707 {- 2148146816438713 707 (-9.9445e+212)}
; Y = -1.4640785146021537688199032345437444746494293212890625p114 {- 2090023825432913 114 (-3.04077e+034)}
; -1.4769844111770977779229951920569874346256256103515625p707 - -1.4640785146021537688199032345437444746494293212890625p114 == -1.4769844111770977779229951920569874346256256103515625p707
; [HW: -1.4769844111770977779229951920569874346256256103515625p707] 

; mpf : - 2148146816438713 707
; mpfd: - 2148146816438713 707 (-9.9445e+212) class: Neg. norm. non-zero
; hwf : - 2148146816438713 707 (-9.9445e+212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000010 #b0111101000011011101001100111111010110101000110111001)))
(assert (= y (fp #b1 #b10001110001 #b0111011011001101110110010111101011111110000101010001)))
(assert (= r (fp #b1 #b11011000010 #b0111101000011011101001100111111010110101000110111001)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
