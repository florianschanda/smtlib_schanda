(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6030379414761295464586510206572711467742919921875p-617 {+ 2715841448522168 -617 (2.94738e-186)}
; Y = -1.3862358555763314438280531248892657458782196044921875p775 {- 1739451655250691 775 (-2.75476e+233)}
; 1.6030379414761295464586510206572711467742919921875p-617 - -1.3862358555763314438280531248892657458782196044921875p775 == 1.3862358555763314438280531248892657458782196044921875p775
; [HW: 1.3862358555763314438280531248892657458782196044921875p775] 

; mpf : + 1739451655250691 775
; mpfd: + 1739451655250691 775 (2.75476e+233) class: Pos. norm. non-zero
; hwf : + 1739451655250691 775 (2.75476e+233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110010110 #b1001101001100000101100011100110011100011000110111000)))
(assert (= y (fp #b1 #b11100000110 #b0110001011100000010110100110000000111110001100000011)))
(assert (= r (fp #b0 #b11100000110 #b0110001011100000010110100110000000111110001100000011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
