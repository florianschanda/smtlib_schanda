(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.864688643072030860281529385247267782688140869140625p87 {- 3894211450730698 87 (-2.88547e+026)}
; Y = -1.391334892698045333503387155360542237758636474609375p-154 {- 1762415676931990 -154 (-6.09274e-047)}
; -1.864688643072030860281529385247267782688140869140625p87 - -1.391334892698045333503387155360542237758636474609375p-154 == -1.864688643072030860281529385247267782688140869140625p87
; [HW: -1.864688643072030860281529385247267782688140869140625p87] 

; mpf : - 3894211450730698 87
; mpfd: - 3894211450730698 87 (-2.88547e+026) class: Neg. norm. non-zero
; hwf : - 3894211450730698 87 (-2.88547e+026) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010110 #b1101110101011100001111000010001100110111100011001010)))
(assert (= y (fp #b1 #b01101100101 #b0110010000101110100001100000010111101011111110010110)))
(assert (= r (fp #b1 #b10001010110 #b1101110101011100001111000010001100110111100011001010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
