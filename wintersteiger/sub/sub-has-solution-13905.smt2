(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.414041687029472083025893880403600633144378662109375p-235 {+ 1864677987421782 -235 (2.56102e-071)}
; Y = -1.883459380919218606464937693090178072452545166015625p-868 {- 3978747338704762 -868 (-9.57018e-262)}
; 1.414041687029472083025893880403600633144378662109375p-235 - -1.883459380919218606464937693090178072452545166015625p-868 == 1.414041687029472083025893880403600633144378662109375p-235
; [HW: 1.414041687029472083025893880403600633144378662109375p-235] 

; mpf : + 1864677987421782 -235
; mpfd: + 1864677987421782 -235 (2.56102e-071) class: Pos. norm. non-zero
; hwf : + 1864677987421782 -235 (2.56102e-071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100010100 #b0110100111111110101000101101000011111000111001010110)))
(assert (= y (fp #b1 #b00010011011 #b1110001000101010011001001101110001100100011101111010)))
(assert (= r (fp #b0 #b01100010100 #b0110100111111110101000101101000011111000111001010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
