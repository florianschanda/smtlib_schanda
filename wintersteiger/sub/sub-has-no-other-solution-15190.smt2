(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.862717805687393646252303369692526757717132568359375p-473 {- 3885335588219638 -473 (-7.63764e-143)}
; Y = -1.9310438195863539601049296834389679133892059326171875p100 {- 4193048598954707 100 (-2.44789e+030)}
; -1.862717805687393646252303369692526757717132568359375p-473 - -1.9310438195863539601049296834389679133892059326171875p100 == 1.9310438195863539601049296834389679133892059326171875p100
; [HW: 1.9310438195863539601049296834389679133892059326171875p100] 

; mpf : + 4193048598954707 100
; mpfd: + 4193048598954707 100 (2.44789e+030) class: Pos. norm. non-zero
; hwf : + 4193048598954707 100 (2.44789e+030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100110 #b1101110011011011000100101111100100011010101011110110)))
(assert (= y (fp #b1 #b10001100011 #b1110111001011000111000110100010001000100001011010011)))
(assert (= r (fp #b0 #b10001100011 #b1110111001011000111000110100010001000100001011010011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
