(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6312937942596368312564436564571224153041839599609375p35 {+ 2843094496589007 35 (5.60508e+010)}
; Y = -1.609929447712367345246775585110299289226531982421875p-758 {- 2746878033439710 -758 (-1.06187e-228)}
; 1.6312937942596368312564436564571224153041839599609375p35 - -1.609929447712367345246775585110299289226531982421875p-758 == 1.6312937942596368312564436564571224153041839599609375p35
; [HW: 1.6312937942596368312564436564571224153041839599609375p35] 

; mpf : + 2843094496589007 35
; mpfd: + 2843094496589007 35 (5.60508e+010) class: Pos. norm. non-zero
; hwf : + 2843094496589007 35 (5.60508e+010) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100010 #b1010000110011100011110000101100010000011010011001111)))
(assert (= y (fp #b1 #b00100001001 #b1001110000100100010101100001011011001010101111011110)))
(assert (= r (fp #b0 #b10000100010 #b1010000110011100011110000101100010000011010011001111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
