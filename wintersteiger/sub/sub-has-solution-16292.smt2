(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9002843713702672889809264233917929232120513916015625p406 {+ 4054520359430617 406 (3.14049e+122)}
; Y = -1.8198235486826626061684919477556832134723663330078125p-367 {- 3692157028356797 -367 (-6.0537e-111)}
; 1.9002843713702672889809264233917929232120513916015625p406 - -1.8198235486826626061684919477556832134723663330078125p-367 == 1.9002843713702672889809264233917929232120513916015625p406
; [HW: 1.9002843713702672889809264233917929232120513916015625p406] 

; mpf : + 4054520359430617 406
; mpfd: + 4054520359430617 406 (3.14049e+122) class: Pos. norm. non-zero
; hwf : + 4054520359430617 406 (3.14049e+122) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010101 #b1110011001111001000010010101110000100010100111011001)))
(assert (= y (fp #b1 #b01010010000 #b1101000111011111111101001100001000010101001010111101)))
(assert (= r (fp #b0 #b10110010101 #b1110011001111001000010010101110000100010100111011001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
