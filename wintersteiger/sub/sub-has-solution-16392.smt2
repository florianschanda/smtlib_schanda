(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7308442558947951805947695902432315051555633544921875p453 {+ 3291429918513667 453 (4.02574e+136)}
; Y = 0.801316409130393036974737697164528071880340576171875p-1022 {+ 3608808281565502 -1023 (1.78299e-308)}
; 1.7308442558947951805947695902432315051555633544921875p453 - 0.801316409130393036974737697164528071880340576171875p-1022 == 1.730844255894794958550164665211923420429229736328125p453
; [HW: 1.730844255894794958550164665211923420429229736328125p453] 

; mpf : + 3291429918513666 453
; mpfd: + 3291429918513666 453 (4.02574e+136) class: Pos. norm. non-zero
; hwf : + 3291429918513666 453 (4.02574e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000100 #b1011101100011000100110111111000110001001101000000011)))
(assert (= y (fp #b0 #b00000000000 #b1100110100100011000100100111101011110110100100111110)))
(assert (= r (fp #b0 #b10111000100 #b1011101100011000100110111111000110001001101000000010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
