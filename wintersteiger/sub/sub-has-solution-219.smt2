(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8269555417837433086702958462410606443881988525390625p173 {- 3724276669829233 173 (-2.18734e+052)}
; Y = 1.65040075216703652216665432206355035305023193359375p-386 {+ 2929144585100956 -386 (1.04716e-116)}
; -1.8269555417837433086702958462410606443881988525390625p173 - 1.65040075216703652216665432206355035305023193359375p-386 == -1.8269555417837433086702958462410606443881988525390625p173
; [HW: -1.8269555417837433086702958462410606443881988525390625p173] 

; mpf : - 3724276669829233 173
; mpfd: - 3724276669829233 173 (-2.18734e+052) class: Neg. norm. non-zero
; hwf : - 3724276669829233 173 (-2.18734e+052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010101100 #b1101001110110011010110111011111100110101000001110001)))
(assert (= y (fp #b0 #b01001111101 #b1010011010000000101010011110011111011001111010011100)))
(assert (= r (fp #b1 #b10010101100 #b1101001110110011010110111011111100110101000001110001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
