(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.747780989779780913551121557247824966907501220703125p401 {+ 3367706186926962 401 (9.02641e+120)}
; Y = -1.8887907543135693533287167156231589615345001220703125p107 {- 4002757709936933 107 (-3.06474e+032)}
; 1.747780989779780913551121557247824966907501220703125p401 - -1.8887907543135693533287167156231589615345001220703125p107 == 1.747780989779780913551121557247824966907501220703125p401
; [HW: 1.747780989779780913551121557247824966907501220703125p401] 

; mpf : + 3367706186926962 401
; mpfd: + 3367706186926962 401 (9.02641e+120) class: Pos. norm. non-zero
; hwf : + 3367706186926962 401 (9.02641e+120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010000 #b1011111101101110100100110010111110101100101101110010)))
(assert (= y (fp #b1 #b10001101010 #b1110001110000111110010100111011011000011100100100101)))
(assert (= r (fp #b0 #b10110010000 #b1011111101101110100100110010111110101100101101110010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
