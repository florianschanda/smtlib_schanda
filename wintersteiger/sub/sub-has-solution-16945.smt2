(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8878713493936374323567406463553197681903839111328125p76 {- 3998617078282125 76 (-1.42644e+023)}
; Y = 1.760464251326350648696461576037108898162841796875p1020 {+ 3424826518901936 1020 (1.97798e+307)}
; -1.8878713493936374323567406463553197681903839111328125p76 - 1.760464251326350648696461576037108898162841796875p1020 == -1.760464251326350648696461576037108898162841796875p1020
; [HW: -1.760464251326350648696461576037108898162841796875p1020] 

; mpf : - 3424826518901936 1020
; mpfd: - 3424826518901936 1020 (-1.97798e+307) class: Neg. norm. non-zero
; hwf : - 3424826518901936 1020 (-1.97798e+307) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001011 #b1110001101001011100010010110100010110011011110001101)))
(assert (= y (fp #b0 #b11111111011 #b1100001010101101110010010000000100111001010010110000)))
(assert (= r (fp #b1 #b11111111011 #b1100001010101101110010010000000100111001010010110000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
