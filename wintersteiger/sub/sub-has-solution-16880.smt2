(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1739159342833398458338933778577484190464019775390625p-388 {- 783247736832241 -388 (-1.86208e-117)}
; Y = -1.89337354800018697886798690888099372386932373046875p861 {- 4023396777876300 861 (-2.91114e+259)}
; -1.1739159342833398458338933778577484190464019775390625p-388 - -1.89337354800018697886798690888099372386932373046875p861 == 1.8933735480001867568233819838496856391429901123046875p861
; [HW: 1.8933735480001867568233819838496856391429901123046875p861] 

; mpf : + 4023396777876299 861
; mpfd: + 4023396777876299 861 (2.91114e+259) class: Pos. norm. non-zero
; hwf : + 4023396777876299 861 (2.91114e+259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001111011 #b0010110010000101110000010011001000000000000011110001)))
(assert (= y (fp #b1 #b11101011100 #b1110010010110100001000001111101111000101101101001100)))
(assert (= r (fp #b0 #b11101011100 #b1110010010110100001000001111101111000101101101001011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
