(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8921947665082929912472309297299943864345550537109375p-965 {- 4018088017988655 -965 (-6.06764e-291)}
; Y = -1.1970755253150440200471393836778588593006134033203125p670 {- 887549262372677 670 (-5.86433e+201)}
; -1.8921947665082929912472309297299943864345550537109375p-965 - -1.1970755253150440200471393836778588593006134033203125p670 == 1.1970755253150440200471393836778588593006134033203125p670
; [HW: 1.1970755253150440200471393836778588593006134033203125p670] 

; mpf : + 887549262372677 670
; mpfd: + 887549262372677 670 (5.86433e+201) class: Pos. norm. non-zero
; hwf : + 887549262372677 670 (5.86433e+201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111010 #b1110010001100110111000000100111111010000110000101111)))
(assert (= y (fp #b1 #b11010011101 #b0011001001110011100010101010100000010001111101000101)))
(assert (= r (fp #b0 #b11010011101 #b0011001001110011100010101010100000010001111101000101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
