(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.80246592106742742345204533194191753864288330078125p901 {+ 3613985223096788 901 (3.04715e+271)}
; Y = -1.6673291763775102136690975385135971009731292724609375p-893 {- 3005383430067215 -893 (-2.52485e-269)}
; 1.80246592106742742345204533194191753864288330078125p901 - -1.6673291763775102136690975385135971009731292724609375p-893 == 1.80246592106742742345204533194191753864288330078125p901
; [HW: 1.80246592106742742345204533194191753864288330078125p901] 

; mpf : + 3613985223096788 901
; mpfd: + 3613985223096788 901 (3.04715e+271) class: Pos. norm. non-zero
; hwf : + 3613985223096788 901 (3.04715e+271) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000100 #b1100110101101110011010000001011100100011100111010100)))
(assert (= y (fp #b1 #b00010000010 #b1010101011010110000101011011110000110101010000001111)))
(assert (= r (fp #b0 #b11110000100 #b1100110101101110011010000001011100100011100111010100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
