(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1224617820661848544006033989717252552509307861328125p-404 {- 551518836080397 -404 (-2.71677e-122)}
; Y = 1.12391480570427493290708298445679247379302978515625p757 {+ 558062672795460 757 (8.52001e+227)}
; -1.1224617820661848544006033989717252552509307861328125p-404 - 1.12391480570427493290708298445679247379302978515625p757 == -1.12391480570427493290708298445679247379302978515625p757
; [HW: -1.12391480570427493290708298445679247379302978515625p757] 

; mpf : - 558062672795460 757
; mpfd: - 558062672795460 757 (-8.52001e+227) class: Neg. norm. non-zero
; hwf : - 558062672795460 757 (-8.52001e+227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101011 #b0001111101011001101001111100010011111011111100001101)))
(assert (= y (fp #b0 #b11011110100 #b0001111110111000111000010111010111111101011101000100)))
(assert (= r (fp #b1 #b11011110100 #b0001111110111000111000010111010111111101011101000100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
