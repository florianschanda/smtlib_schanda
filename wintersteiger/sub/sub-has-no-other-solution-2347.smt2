(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.826053483853848913298634215607307851314544677734375p710 {+ 3720214162072294 710 (9.83582e+213)}
; Y = -1.9288755899692764383956955498433671891689300537109375p300 {- 4183283760859183 300 (-3.92919e+090)}
; 1.826053483853848913298634215607307851314544677734375p710 - -1.9288755899692764383956955498433671891689300537109375p300 == 1.826053483853848913298634215607307851314544677734375p710
; [HW: 1.826053483853848913298634215607307851314544677734375p710] 

; mpf : + 3720214162072294 710
; mpfd: + 3720214162072294 710 (9.83582e+213) class: Pos. norm. non-zero
; hwf : + 3720214162072294 710 (9.83582e+213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000101 #b1101001101111000001111011011100111100110001011100110)))
(assert (= y (fp #b1 #b10100101011 #b1110110111001010110010100110100011111000100000101111)))
(assert (= r (fp #b0 #b11011000101 #b1101001101111000001111011011100111100110001011100110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
