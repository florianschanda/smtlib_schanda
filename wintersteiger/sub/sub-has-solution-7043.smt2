(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2603445647660016515345660081948153674602508544921875p-151 {+ 1172487684868099 -151 (4.4153e-046)}
; Y = 1.946030794031597732640648246160708367824554443359375p289 {+ 4260543931481718 289 (1.93561e+087)}
; 1.2603445647660016515345660081948153674602508544921875p-151 - 1.946030794031597732640648246160708367824554443359375p289 == -1.9460307940315975105960433211294002830982208251953125p289
; [HW: -1.9460307940315975105960433211294002830982208251953125p289] 

; mpf : - 4260543931481717 289
; mpfd: - 4260543931481717 289 (-1.93561e+087) class: Neg. norm. non-zero
; hwf : - 4260543931481717 289 (-1.93561e+087) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101000 #b0100001010100101111100001111111101011100100000000011)))
(assert (= y (fp #b0 #b10100100000 #b1111001000101111000100101111100101011111111001110110)))
(assert (= r (fp #b1 #b10100100000 #b1111001000101111000100101111100101011111111001110101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
