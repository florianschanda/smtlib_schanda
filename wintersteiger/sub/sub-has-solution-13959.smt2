(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.322495234170606437373862718231976032257080078125p343 {+ 1452389416439504 343 (2.36964e+103)}
; Y = -1.6360967232666754345160597949870862066745758056640625p299 {- 2864724965875393 299 (-1.66639e+090)}
; 1.322495234170606437373862718231976032257080078125p343 - -1.6360967232666754345160597949870862066745758056640625p299 == 1.322495234170699252018721381318755447864532470703125p343
; [HW: 1.322495234170699252018721381318755447864532470703125p343] 

; mpf : + 1452389416439922 343
; mpfd: + 1452389416439922 343 (2.36964e+103) class: Pos. norm. non-zero
; hwf : + 1452389416439922 343 (2.36964e+103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010110 #b0101001010001111000011000011001111100000111011010000)))
(assert (= y (fp #b1 #b10100101010 #b1010001011010111001111000001111110000101111011000001)))
(assert (= r (fp #b0 #b10101010110 #b0101001010001111000011000011001111100001000001110010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
