(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2208675827258212986947683020844124257564544677734375p296 {+ 994699163262231 296 (1.55434e+089)}
; Y = -1.805262213761328116135018717614002525806427001953125p-1021 {- 3626578605831058 -1021 (-8.03368e-308)}
; 1.2208675827258212986947683020844124257564544677734375p296 - -1.805262213761328116135018717614002525806427001953125p-1021 == 1.2208675827258212986947683020844124257564544677734375p296
; [HW: 1.2208675827258212986947683020844124257564544677734375p296] 

; mpf : + 994699163262231 296
; mpfd: + 994699163262231 296 (1.55434e+089) class: Pos. norm. non-zero
; hwf : + 994699163262231 296 (1.55434e+089) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100111 #b0011100010001010110001110010010010001101110100010111)))
(assert (= y (fp #b1 #b00000000010 #b1100111000100101101010100001100011001111001110010010)))
(assert (= r (fp #b0 #b10100100111 #b0011100010001010110001110010010010001101110100010111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
