(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6286526711035878012268085512914694845676422119140625p-747 {+ 2831199935327585 -747 (2.2e-225)}
; Y = -1.7248063218048936828807882193359546363353729248046875p-267 {- 3264237480796299 -267 (-7.2733e-081)}
; 1.6286526711035878012268085512914694845676422119140625p-747 - -1.7248063218048936828807882193359546363353729248046875p-267 == 1.7248063218048936828807882193359546363353729248046875p-267
; [HW: 1.7248063218048936828807882193359546363353729248046875p-267] 

; mpf : + 3264237480796299 -267
; mpfd: + 3264237480796299 -267 (7.2733e-081) class: Pos. norm. non-zero
; hwf : + 3264237480796299 -267 (7.2733e-081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010100 #b1010000011101111011000011010011011101110110101100001)))
(assert (= y (fp #b1 #b01011110100 #b1011100110001100111010000011100000010110000010001011)))
(assert (= r (fp #b0 #b01011110100 #b1011100110001100111010000011100000010110000010001011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
