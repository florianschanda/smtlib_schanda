(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9049676207489845136677786285872571170330047607421875p433 {+ 4075611839587491 433 (4.22548e+130)}
; Y = -1.4352933855336866830754161128425039350986480712890625p-267 {- 1960387128886353 -267 (-6.05246e-081)}
; 1.9049676207489845136677786285872571170330047607421875p433 - -1.4352933855336866830754161128425039350986480712890625p-267 == 1.9049676207489845136677786285872571170330047607421875p433
; [HW: 1.9049676207489845136677786285872571170330047607421875p433] 

; mpf : + 4075611839587491 433
; mpfd: + 4075611839587491 433 (4.22548e+130) class: Pos. norm. non-zero
; hwf : + 4075611839587491 433 (4.22548e+130) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110000 #b1110011110101011111101010011111100001110010010100011)))
(assert (= y (fp #b1 #b01011110100 #b0110111101101111011000110010011100001000010001010001)))
(assert (= r (fp #b0 #b10110110000 #b1110011110101011111101010011111100001110010010100011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
