(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.048429120477206044625972936046309769153594970703125p258 {- 218105368935026 258 (-4.85599e+077)}
; Y = -1.7278622230122113734296362963505089282989501953125p-547 {- 3278000036334856 -547 (-3.75061e-165)}
; -1.048429120477206044625972936046309769153594970703125p258 - -1.7278622230122113734296362963505089282989501953125p-547 == -1.048429120477206044625972936046309769153594970703125p258
; [HW: -1.048429120477206044625972936046309769153594970703125p258] 

; mpf : - 218105368935026 258
; mpfd: - 218105368935026 258 (-4.85599e+077) class: Neg. norm. non-zero
; hwf : - 218105368935026 258 (-4.85599e+077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000001 #b0000110001100101110110011101000010011111101001110010)))
(assert (= y (fp #b1 #b00111011100 #b1011101001010101001011011011101111010100110100001000)))
(assert (= r (fp #b1 #b10100000001 #b0000110001100101110110011101000010011111101001110010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
