(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.101747523427100805548661810462363064289093017578125p-52 {+ 458230108592162 -52 (2.44637e-016)}
; Y = -1.0000040653153881020642756993765942752361297607421875p326 {- 18308552867 326 (-1.36704e+098)}
; 1.101747523427100805548661810462363064289093017578125p-52 - -1.0000040653153881020642756993765942752361297607421875p326 == 1.0000040653153881020642756993765942752361297607421875p326
; [HW: 1.0000040653153881020642756993765942752361297607421875p326] 

; mpf : + 18308552867 326
; mpfd: + 18308552867 326 (1.36704e+098) class: Pos. norm. non-zero
; hwf : + 18308552867 326 (1.36704e+098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111001011 #b0001101000001100001000000010110110010001100000100010)))
(assert (= y (fp #b1 #b10101000101 #b0000000000000000010001000011010001100101100010100011)))
(assert (= r (fp #b0 #b10101000101 #b0000000000000000010001000011010001100101100010100011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
