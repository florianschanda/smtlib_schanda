(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1402785327999069853177616096218116581439971923828125p-908 {- 631758348045741 -908 (-5.26957e-274)}
; Y = -1.41027417302068069915321757434867322444915771484375p-249 {- 1847710612735676 -249 (-1.55896e-075)}
; -1.1402785327999069853177616096218116581439971923828125p-908 - -1.41027417302068069915321757434867322444915771484375p-249 == 1.4102741730206804771086126493173651397228240966796875p-249
; [HW: 1.4102741730206804771086126493173651397228240966796875p-249] 

; mpf : + 1847710612735675 -249
; mpfd: + 1847710612735675 -249 (1.55896e-075) class: Pos. norm. non-zero
; hwf : + 1847710612735675 -249 (1.55896e-075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110011 #b0010001111101001010010110011111010110100110110101101)))
(assert (= y (fp #b1 #b01100000110 #b0110100100000111101110100110101110000100011010111100)))
(assert (= r (fp #b0 #b01100000110 #b0110100100000111101110100110101110000100011010111011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
