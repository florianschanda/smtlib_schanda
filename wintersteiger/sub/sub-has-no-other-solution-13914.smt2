(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5113310714190806294254798558540642261505126953125p-685 {- 2302830422705928 -685 (-9.41483e-207)}
; Y = 1.69466837159762917508487589657306671142578125p-712 {+ 3128508219473152 -712 (7.86553e-215)}
; -1.5113310714190806294254798558540642261505126953125p-685 - 1.69466837159762917508487589657306671142578125p-712 == -1.511331084045343775557057597325183451175689697265625p-685
; [HW: -1.511331084045343775557057597325183451175689697265625p-685] 

; mpf : - 2302830479569562 -685
; mpfd: - 2302830479569562 -685 (-9.41483e-207) class: Neg. norm. non-zero
; hwf : - 2302830479569562 -685 (-9.41483e-207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101010010 #b1000001011100110100101111101010100101100011100001000)))
(assert (= y (fp #b0 #b00100110111 #b1011000111010101110010010101000110010011110100000000)))
(assert (= r (fp #b1 #b00101010010 #b1000001011100110100110000000101101100111001010011010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
