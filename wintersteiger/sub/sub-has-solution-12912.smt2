(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1285862932810262204696982735185883939266204833984375p-888 {+ 579101182505383 -888 (5.46888e-268)}
; Y = 1.637713479873174282630543530103750526905059814453125p539 {+ 2872006190325970 539 (2.94717e+162)}
; 1.1285862932810262204696982735185883939266204833984375p-888 - 1.637713479873174282630543530103750526905059814453125p539 == -1.6377134798731740605859386050724424421787261962890625p539
; [HW: -1.6377134798731740605859386050724424421787261962890625p539] 

; mpf : - 2872006190325969 539
; mpfd: - 2872006190325969 539 (-2.94717e+162) class: Neg. norm. non-zero
; hwf : - 2872006190325969 539 (-2.94717e+162) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010000111 #b0010000011101011000010000000010001011011000110100111)))
(assert (= y (fp #b0 #b11000011010 #b1010001101000001001100001100110001000110000011010010)))
(assert (= r (fp #b1 #b11000011010 #b1010001101000001001100001100110001000110000011010001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
