(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.193882007128892919212148626684211194515228271484375p257 {- 873166935059526 257 (-2.76484e+077)}
; Y = -1.717694938471622467801580569357611238956451416015625p739 {- 3232210657466490 739 (-4.96721e+222)}
; -1.193882007128892919212148626684211194515228271484375p257 - -1.717694938471622467801580569357611238956451416015625p739 == 1.717694938471622467801580569357611238956451416015625p739
; [HW: 1.717694938471622467801580569357611238956451416015625p739] 

; mpf : + 3232210657466490 739
; mpfd: + 3232210657466490 739 (4.96721e+222) class: Pos. norm. non-zero
; hwf : + 3232210657466490 739 (4.96721e+222) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000000 #b0011000110100010010000000100111111100110110001000110)))
(assert (= y (fp #b1 #b11011100010 #b1011011110111010110110110000000100111101100001111010)))
(assert (= r (fp #b0 #b11011100010 #b1011011110111010110110110000000100111101100001111010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
