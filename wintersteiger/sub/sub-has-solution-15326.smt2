(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3719949495691021734700143497320823371410369873046875p1016 {+ 1675316316263115 1016 (9.63448e+305)}
; Y = -1.2980459286508321259390186241944320499897003173828125p216 {- 1342279533211181 216 (-1.367e+065)}
; 1.3719949495691021734700143497320823371410369873046875p1016 - -1.2980459286508321259390186241944320499897003173828125p216 == 1.37199494956910239551461927476339042186737060546875p1016
; [HW: 1.37199494956910239551461927476339042186737060546875p1016] 

; mpf : + 1675316316263116 1016
; mpfd: + 1675316316263116 1016 (9.63448e+305) class: Pos. norm. non-zero
; hwf : + 1675316316263116 1016 (9.63448e+305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111110111 #b0101111100111011000011111001111010101101001011001011)))
(assert (= y (fp #b1 #b10011010111 #b0100110001001100101111001110110001000010111000101101)))
(assert (= r (fp #b0 #b11111110111 #b0101111100111011000011111001111010101101001011001100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
