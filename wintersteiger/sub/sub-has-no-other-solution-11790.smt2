(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6712871995636195965317938316729851067066192626953125p-85 {- 3023208781813301 -85 (-4.32018e-026)}
; Y = -1.8331927498544768884158884247881360352039337158203125p172 {- 3752366557772421 172 (-1.09741e+052)}
; -1.6712871995636195965317938316729851067066192626953125p-85 - -1.8331927498544768884158884247881360352039337158203125p172 == 1.8331927498544768884158884247881360352039337158203125p172
; [HW: 1.8331927498544768884158884247881360352039337158203125p172] 

; mpf : + 3752366557772421 172
; mpfd: + 3752366557772421 172 (1.09741e+052) class: Pos. norm. non-zero
; hwf : + 3752366557772421 172 (1.09741e+052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101010 #b1010101111011001011110100101100001011001011000110101)))
(assert (= y (fp #b1 #b10010101011 #b1101010101001100000111101011101111100011101010000101)))
(assert (= r (fp #b0 #b10010101011 #b1101010101001100000111101011101111100011101010000101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
