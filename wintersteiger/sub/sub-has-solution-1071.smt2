(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1364368797920783027421975930337794125080108642578125p213 {- 614457080991197 213 (-1.49601e+064)}
; Y = 1.8977578329409185986520469668903388082981109619140625p114 {+ 4043141841901665 114 (3.94149e+034)}
; -1.1364368797920783027421975930337794125080108642578125p213 - 1.8977578329409185986520469668903388082981109619140625p114 == -1.1364368797920783027421975930337794125080108642578125p213
; [HW: -1.1364368797920783027421975930337794125080108642578125p213] 

; mpf : - 614457080991197 213
; mpfd: - 614457080991197 213 (-1.49601e+064) class: Neg. norm. non-zero
; hwf : - 614457080991197 213 (-1.49601e+064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010100 #b0010001011101101100001110000000010101100110111011101)))
(assert (= y (fp #b0 #b10001110001 #b1110010111010011011101010001010000110101100001100001)))
(assert (= r (fp #b1 #b10011010100 #b0010001011101101100001110000000010101100110111011101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
