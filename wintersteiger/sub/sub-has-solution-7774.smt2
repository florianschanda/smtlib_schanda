(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1835959962670672407369920620112679898738861083984375p630 {+ 826842860375079 630 (5.27352e+189)}
; Y = -1.1343481142896312263701474876143038272857666015625p21 {- 605050117452712 21 (-2.3789e+006)}
; 1.1835959962670672407369920620112679898738861083984375p630 - -1.1343481142896312263701474876143038272857666015625p21 == 1.1835959962670672407369920620112679898738861083984375p630
; [HW: 1.1835959962670672407369920620112679898738861083984375p630] 

; mpf : + 826842860375079 630
; mpfd: + 826842860375079 630 (5.27352e+189) class: Pos. norm. non-zero
; hwf : + 826842860375079 630 (5.27352e+189) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001110101 #b0010111100000000001001011010111110100100110000100111)))
(assert (= y (fp #b1 #b10000010100 #b0010001001100100101000110101010100100111001110101000)))
(assert (= r (fp #b0 #b11001110101 #b0010111100000000001001011010111110100100110000100111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
