(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0068245061413085839063796811387874186038970947265625p-345 {- 30734843314985 -345 (-1.40477e-104)}
; Y = -1.672501187940998779168921828386373817920684814453125p-59 {- 3028676099417298 -59 (-2.90133e-018)}
; -1.0068245061413085839063796811387874186038970947265625p-345 - -1.672501187940998779168921828386373817920684814453125p-59 == 1.672501187940998779168921828386373817920684814453125p-59
; [HW: 1.672501187940998779168921828386373817920684814453125p-59] 

; mpf : + 3028676099417298 -59
; mpfd: + 3028676099417298 -59 (2.90133e-018) class: Pos. norm. non-zero
; hwf : + 3028676099417298 -59 (2.90133e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100110 #b0000000110111111010000000011011010110000001100101001)))
(assert (= y (fp #b1 #b01111000100 #b1010110000101001000010011011000010111010010011010010)))
(assert (= r (fp #b0 #b01111000100 #b1010110000101001000010011011000010111010010011010010)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
