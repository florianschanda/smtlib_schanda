(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.59740772161612287760590334073640406131744384765625p-268 {- 2690485192458628 -268 (-3.36804e-081)}
; Y = -1.9784702073770805696995012112893164157867431640625p-572 {- 4406638061336552 -572 (-1.27989e-172)}
; -1.59740772161612287760590334073640406131744384765625p-268 - -1.9784702073770805696995012112893164157867431640625p-572 == -1.5974077216161226555612984157050959765911102294921875p-268
; [HW: -1.5974077216161226555612984157050959765911102294921875p-268] 

; mpf : - 2690485192458627 -268
; mpfd: - 2690485192458627 -268 (-3.36804e-081) class: Neg. norm. non-zero
; hwf : - 2690485192458627 -268 (-3.36804e-081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011110011 #b1001100011101111101101100110001010111000000110000100)))
(assert (= y (fp #b1 #b00111000011 #b1111101001111101000001100000010011001011011111101000)))
(assert (= r (fp #b1 #b01011110011 #b1001100011101111101101100110001010111000000110000011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
