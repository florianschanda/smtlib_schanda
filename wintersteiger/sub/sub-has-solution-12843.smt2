(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7683381162987543699927073248545639216899871826171875p658 {- 3460287254257619 658 (-2.11496e+198)}
; Y = -1.1300748766892521057769727121922187507152557373046875p-171 {- 585805166187979 -171 (-3.77553e-052)}
; -1.7683381162987543699927073248545639216899871826171875p658 - -1.1300748766892521057769727121922187507152557373046875p-171 == -1.7683381162987543699927073248545639216899871826171875p658
; [HW: -1.7683381162987543699927073248545639216899871826171875p658] 

; mpf : - 3460287254257619 658
; mpfd: - 3460287254257619 658 (-2.11496e+198) class: Neg. norm. non-zero
; hwf : - 3460287254257619 658 (-2.11496e+198) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010010001 #b1100010010110001110011101000100111000101111111010011)))
(assert (= y (fp #b1 #b01101010100 #b0010000101001100100101100100110101101001010111001011)))
(assert (= r (fp #b1 #b11010010001 #b1100010010110001110011101000100111000101111111010011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
