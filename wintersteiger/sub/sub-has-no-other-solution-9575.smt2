(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8016643900500499686501143514760769903659820556640625p-791 {- 3610375448305601 -791 (-1.3834e-238)}
; Y = -1.79007658410180425789803848601877689361572265625p-677 {- 3558188609755040 -677 (-2.85473e-204)}
; -1.8016643900500499686501143514760769903659820556640625p-791 - -1.79007658410180425789803848601877689361572265625p-677 == 1.79007658410180425789803848601877689361572265625p-677
; [HW: 1.79007658410180425789803848601877689361572265625p-677] 

; mpf : + 3558188609755040 -677
; mpfd: + 3558188609755040 -677 (2.85473e-204) class: Pos. norm. non-zero
; hwf : + 3558188609755040 -677 (2.85473e-204) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101000 #b1100110100111001111000001010000110100001111111000001)))
(assert (= y (fp #b1 #b00101011010 #b1100101001000010011101011000001000001101011110100000)))
(assert (= r (fp #b0 #b00101011010 #b1100101001000010011101011000001000001101011110100000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
