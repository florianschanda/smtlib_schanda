(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.203976620719826140515351653448306024074554443359375p-149 {- 918629033066102 -149 (-1.68713e-045)}
; Y = 1.8367695458520660878320995834656059741973876953125p897 {+ 3768475014894344 897 (1.94071e+270)}
; -1.203976620719826140515351653448306024074554443359375p-149 - 1.8367695458520660878320995834656059741973876953125p897 == -1.8367695458520660878320995834656059741973876953125p897
; [HW: -1.8367695458520660878320995834656059741973876953125p897] 

; mpf : - 3768475014894344 897
; mpfd: - 3768475014894344 897 (-1.94071e+270) class: Neg. norm. non-zero
; hwf : - 3768475014894344 897 (-1.94071e+270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101101010 #b0011010000110111110011111101001100100011111001110110)))
(assert (= y (fp #b0 #b11110000000 #b1101011000110110100001110110100110111001001100001000)))
(assert (= r (fp #b1 #b11110000000 #b1101011000110110100001110110100110111001001100001000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
