(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.69454832900482177393541860510595142841339111328125p950 {- 3127967595696916 950 (-1.61269e+286)}
; Y = 1.4602788462356410814635410133632831275463104248046875p-554 {+ 2072911640393355 -554 (2.47639e-167)}
; -1.69454832900482177393541860510595142841339111328125p950 - 1.4602788462356410814635410133632831275463104248046875p-554 == -1.69454832900482177393541860510595142841339111328125p950
; [HW: -1.69454832900482177393541860510595142841339111328125p950] 

; mpf : - 3127967595696916 950
; mpfd: - 3127967595696916 950 (-1.61269e+286) class: Neg. norm. non-zero
; hwf : - 3127967595696916 950 (-1.61269e+286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110101 #b1011000111001101111010110101011010010001001100010100)))
(assert (= y (fp #b0 #b00111010101 #b0111010111010100110101011001111110011111011010001011)))
(assert (= r (fp #b1 #b11110110101 #b1011000111001101111010110101011010010001001100010100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
