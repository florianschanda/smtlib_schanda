(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0557173917029516463372829093714244663715362548828125p-55 {- 250928824511469 -55 (-2.9302e-017)}
; Y = 1.3661360722422042357493410236202180385589599609375p39 {+ 1648930278516888 39 (7.51041e+011)}
; -1.0557173917029516463372829093714244663715362548828125p-55 - 1.3661360722422042357493410236202180385589599609375p39 == -1.3661360722422042357493410236202180385589599609375p39
; [HW: -1.3661360722422042357493410236202180385589599609375p39] 

; mpf : - 1648930278516888 39
; mpfd: - 1648930278516888 39 (-7.51041e+011) class: Neg. norm. non-zero
; hwf : - 1648930278516888 39 (-7.51041e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001000 #b0000111001000011011111101011011100101110101111101101)))
(assert (= y (fp #b0 #b10000100110 #b0101110110111011000101111111100000101010100010011000)))
(assert (= r (fp #b1 #b10000100110 #b0101110110111011000101111111100000101010100010011000)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
