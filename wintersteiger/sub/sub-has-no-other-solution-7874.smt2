(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.17065040176819668005236962926574051380157470703125p315 {- 768541085813876 315 (-7.81404e+094)}
; Y = -1.890457839342747803357269731350243091583251953125p231 {- 4010265593453136 231 (-6.52373e+069)}
; -1.17065040176819668005236962926574051380157470703125p315 - -1.890457839342747803357269731350243091583251953125p231 == -1.1706504017681964580077647042344324290752410888671875p315
; [HW: -1.1706504017681964580077647042344324290752410888671875p315] 

; mpf : - 768541085813875 315
; mpfd: - 768541085813875 315 (-7.81404e+094) class: Neg. norm. non-zero
; hwf : - 768541085813875 315 (-7.81404e+094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100111010 #b0010101110101111101111101010011010100100110001110100)))
(assert (= y (fp #b1 #b10011100110 #b1110001111110101000010111000001001110001101001010000)))
(assert (= r (fp #b1 #b10100111010 #b0010101110101111101111101010011010100100110001110011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
