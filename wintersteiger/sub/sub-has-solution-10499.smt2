(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.670621019430858833487718584365211427211761474609375p-927 {- 3020208573215638 -927 (-1.47256e-279)}
; Y = -1.5944640617349161715310401632450520992279052734375p237 {- 2677228126914520 237 (-3.52147e+071)}
; -1.670621019430858833487718584365211427211761474609375p-927 - -1.5944640617349161715310401632450520992279052734375p237 == 1.5944640617349159494864352382137440145015716552734375p237
; [HW: 1.5944640617349159494864352382137440145015716552734375p237] 

; mpf : + 2677228126914519 237
; mpfd: + 2677228126914519 237 (3.52147e+071) class: Pos. norm. non-zero
; hwf : + 2677228126914519 237 (3.52147e+071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100000 #b1010101110101101110100011011001001110111001110010110)))
(assert (= y (fp #b1 #b10011101100 #b1001100000101110110010111111011111001100011111011000)))
(assert (= r (fp #b0 #b10011101100 #b1001100000101110110010111111011111001100011111010111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
