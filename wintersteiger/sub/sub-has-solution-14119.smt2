(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.845584363212695588885026154457591474056243896484375p6 {- 3808173423075014 6 (-118.117)}
; Y = -1.3097614517837918857168233444099314510822296142578125p-680 {- 1395041558827229 -680 (-2.61093e-205)}
; -1.845584363212695588885026154457591474056243896484375p6 - -1.3097614517837918857168233444099314510822296142578125p-680 == -1.8455843632126953668404212294262833893299102783203125p6
; [HW: -1.8455843632126953668404212294262833893299102783203125p6] 

; mpf : - 3808173423075013 6
; mpfd: - 3808173423075013 6 (-118.117) class: Neg. norm. non-zero
; hwf : - 3808173423075013 6 (-118.117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000000101 #b1101100001111000001101111000001000000001111011000110)))
(assert (= y (fp #b1 #b00101010111 #b0100111101001100100001101100100011111001000011011101)))
(assert (= r (fp #b1 #b10000000101 #b1101100001111000001101111000001000000001111011000101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
