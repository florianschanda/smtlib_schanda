(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.39985892984693816032404356519691646099090576171875p891 {- 1800804527459436 891 (-2.31106e+268)}
; Y = 1.7523731719894037883733517446671612560749053955078125p596 {+ 3388387537015037 596 (4.54469e+179)}
; -1.39985892984693816032404356519691646099090576171875p891 - 1.7523731719894037883733517446671612560749053955078125p596 == -1.39985892984693816032404356519691646099090576171875p891
; [HW: -1.39985892984693816032404356519691646099090576171875p891] 

; mpf : - 1800804527459436 891
; mpfd: - 1800804527459436 891 (-2.31106e+268) class: Neg. norm. non-zero
; hwf : - 1800804527459436 891 (-2.31106e+268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111010 #b0110011001011101001001111010001010110100110001101100)))
(assert (= y (fp #b0 #b11001010011 #b1100000010011011100001110011100000010101000011111101)))
(assert (= r (fp #b1 #b11101111010 #b0110011001011101001001111010001010110100110001101100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
