(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4700485027249945435556810480193234980106353759765625p-40 {- 2116910261718345 -40 (-1.337e-012)}
; Y = 1.5115047888701040879055881305248476564884185791015625p313 {+ 2303612776553625 313 (2.52231e+094)}
; -1.4700485027249945435556810480193234980106353759765625p-40 - 1.5115047888701040879055881305248476564884185791015625p313 == -1.5115047888701040879055881305248476564884185791015625p313
; [HW: -1.5115047888701040879055881305248476564884185791015625p313] 

; mpf : - 2303612776553625 313
; mpfd: - 2303612776553625 313 (-2.52231e+094) class: Neg. norm. non-zero
; hwf : - 2303612776553625 313 (-2.52231e+094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111010111 #b0111100001010101000110010100001010111100110101001001)))
(assert (= y (fp #b0 #b10100111000 #b1000001011110001111110100101001111110001110010011001)))
(assert (= r (fp #b1 #b10100111000 #b1000001011110001111110100101001111110001110010011001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
