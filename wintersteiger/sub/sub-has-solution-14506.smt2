(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.523629614414851562997910150443203747272491455078125p-410 {- 2358218136358882 -410 (-5.76211e-124)}
; Y = -1.1914633872457276453360464074648916721343994140625p960 {- 862274439454952 960 (-1.16112e+289)}
; -1.523629614414851562997910150443203747272491455078125p-410 - -1.1914633872457276453360464074648916721343994140625p960 == 1.1914633872457274232914414824335835874080657958984375p960
; [HW: 1.1914633872457274232914414824335835874080657958984375p960] 

; mpf : + 862274439454951 960
; mpfd: + 862274439454951 960 (1.16112e+289) class: Pos. norm. non-zero
; hwf : + 862274439454951 960 (1.16112e+289) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100101 #b1000011000001100100101110010010100100000111111100010)))
(assert (= y (fp #b1 #b11110111111 #b0011000100000011101111101001101010011010000011101000)))
(assert (= r (fp #b0 #b11110111111 #b0011000100000011101111101001101010011010000011100111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
