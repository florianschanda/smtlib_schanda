(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.34469435215756494272909549181349575519561767578125p-884 {+ 1552365355933524 -884 (1.04258e-266)}
; Y = 1.689264388719647680403568301699124276638031005859375p-103 {+ 3104170844197558 -103 (1.66574e-031)}
; 1.34469435215756494272909549181349575519561767578125p-884 - 1.689264388719647680403568301699124276638031005859375p-103 == -1.689264388719647680403568301699124276638031005859375p-103
; [HW: -1.689264388719647680403568301699124276638031005859375p-103] 

; mpf : - 3104170844197558 -103
; mpfd: - 3104170844197558 -103 (-1.66574e-031) class: Neg. norm. non-zero
; hwf : - 3104170844197558 -103 (-1.66574e-031) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001011 #b0101100000111101111000111001100110100001111101010100)))
(assert (= y (fp #b0 #b01110011000 #b1011000001110011101000011000011111011001001010110110)))
(assert (= r (fp #b1 #b01110011000 #b1011000001110011101000011000011111011001001010110110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
