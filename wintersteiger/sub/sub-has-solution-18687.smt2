(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2683135349181362538928397043491713702678680419921875p841 {- 1208376735875779 841 (-1.85974e+253)}
; Y = -1.8386944505845395081422566363471560180187225341796875p120 {- 3777144015130235 120 (-2.44404e+036)}
; -1.2683135349181362538928397043491713702678680419921875p841 - -1.8386944505845395081422566363471560180187225341796875p120 == -1.2683135349181362538928397043491713702678680419921875p841
; [HW: -1.2683135349181362538928397043491713702678680419921875p841] 

; mpf : - 1208376735875779 841
; mpfd: - 1208376735875779 841 (-1.85974e+253) class: Neg. norm. non-zero
; hwf : - 1208376735875779 841 (-1.85974e+253) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001000 #b0100010010110000001100100010000110001100001011000011)))
(assert (= y (fp #b1 #b10001110111 #b1101011010110100101011011111010010011000111001111011)))
(assert (= r (fp #b1 #b11101001000 #b0100010010110000001100100010000110001100001011000011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
