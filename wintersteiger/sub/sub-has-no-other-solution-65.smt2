(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5780382015962033381839546564151532948017120361328125p-104 {- 2603252629314573 -104 (-7.78033e-032)}
; Y = -0.25005775387429451939169666729867458343505859375p-1022 {- 1126160007169376 -1023 (-5.56397e-309)}
; -1.5780382015962033381839546564151532948017120361328125p-104 - -0.25005775387429451939169666729867458343505859375p-1022 == -1.5780382015962033381839546564151532948017120361328125p-104
; [HW: -1.5780382015962033381839546564151532948017120361328125p-104] 

; mpf : - 2603252629314573 -104
; mpfd: - 2603252629314573 -104 (-7.78033e-032) class: Neg. norm. non-zero
; hwf : - 2603252629314573 -104 (-7.78033e-032) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010111 #b1001001111111010010011111100001110110001110000001101)))
(assert (= y (fp #b1 #b00000000000 #b0100000000000011110010001111001100000000010101100000)))
(assert (= r (fp #b1 #b01110010111 #b1001001111111010010011111100001110110001110000001101)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
