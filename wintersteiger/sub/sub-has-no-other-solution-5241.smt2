(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2666289084370976336657577121513895690441131591796875p579 {+ 1200789852683515 579 (2.50621e+174)}
; Y = -1.157120135766418922429465965251438319683074951171875p-259 {- 707606184890046 -259 (-1.24914e-078)}
; 1.2666289084370976336657577121513895690441131591796875p579 - -1.157120135766418922429465965251438319683074951171875p-259 == 1.2666289084370976336657577121513895690441131591796875p579
; [HW: 1.2666289084370976336657577121513895690441131591796875p579] 

; mpf : + 1200789852683515 579
; mpfd: + 1200789852683515 579 (2.50621e+174) class: Pos. norm. non-zero
; hwf : + 1200789852683515 579 (2.50621e+174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000010 #b0100010001000001110010101100100111100111110011111011)))
(assert (= y (fp #b1 #b01011111100 #b0010100000111001000001100111010010101000111010111110)))
(assert (= r (fp #b0 #b11001000010 #b0100010001000001110010101100100111100111110011111011)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
