(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9438250037275024428851111224503256380558013916015625p-918 {+ 4250609935090137 -918 (8.77245e-277)}
; Y = -1.4726454173681400305895294877700507640838623046875p-190 {- 2128605725537528 -190 (-9.38424e-058)}
; 1.9438250037275024428851111224503256380558013916015625p-918 - -1.4726454173681400305895294877700507640838623046875p-190 == 1.4726454173681400305895294877700507640838623046875p-190
; [HW: 1.4726454173681400305895294877700507640838623046875p-190] 

; mpf : + 2128605725537528 -190
; mpfd: + 2128605725537528 -190 (9.38424e-058) class: Pos. norm. non-zero
; hwf : + 2128605725537528 -190 (9.38424e-058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101001 #b1111000110011110100000111111010000101000000111011001)))
(assert (= y (fp #b1 #b01101000001 #b0111100011111111010010100100001000110011010011111000)))
(assert (= r (fp #b0 #b01101000001 #b0111100011111111010010100100001000110011010011111000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
