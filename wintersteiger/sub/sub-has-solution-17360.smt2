(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2593285602344790330420210011652670800685882568359375p-991 {- 1167912007238527 -991 (-6.01746e-299)}
; Y = 1.556811845863730781047706841491162776947021484375p175 {+ 2507657621547376 175 (7.45565e+052)}
; -1.2593285602344790330420210011652670800685882568359375p-991 - 1.556811845863730781047706841491162776947021484375p175 == -1.556811845863730781047706841491162776947021484375p175
; [HW: -1.556811845863730781047706841491162776947021484375p175] 

; mpf : - 2507657621547376 175
; mpfd: - 2507657621547376 175 (-7.45565e+052) class: Neg. norm. non-zero
; hwf : - 2507657621547376 175 (-7.45565e+052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000100000 #b0100001001100011010110110100010100100000001101111111)))
(assert (= y (fp #b0 #b10010101110 #b1000111010001011001110001001110000000010100101110000)))
(assert (= r (fp #b1 #b10010101110 #b1000111010001011001110001001110000000010100101110000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
