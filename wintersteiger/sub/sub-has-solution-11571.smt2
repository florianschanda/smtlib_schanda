(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9142484838613784692284980337717570364475250244140625p72 {- 4117409131242145 72 (-9.03978e+021)}
; Y = 1.956355771633540019394104092498309910297393798828125p-967 {+ 4307043496762434 -967 (1.56835e-291)}
; -1.9142484838613784692284980337717570364475250244140625p72 - 1.956355771633540019394104092498309910297393798828125p-967 == -1.914248483861378691273102958803065121173858642578125p72
; [HW: -1.914248483861378691273102958803065121173858642578125p72] 

; mpf : - 4117409131242146 72
; mpfd: - 4117409131242146 72 (-9.03978e+021) class: Neg. norm. non-zero
; hwf : - 4117409131242146 72 (-9.03978e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000111 #b1110101000001100001100000100101010011010001010100001)))
(assert (= y (fp #b0 #b00000111000 #b1111010011010011101110110101101010000001110001000010)))
(assert (= r (fp #b1 #b10001000111 #b1110101000001100001100000100101010011010001010100010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
