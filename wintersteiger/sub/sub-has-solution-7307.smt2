(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -0.973725872964439798096236700075678527355194091796875p-1022 {- 4385271478643662 -1023 (-2.16661e-308)}
; Y = 1.6111565734624762047388912833412177860736846923828125p297 {+ 2752404516510637 297 (4.10248e+089)}
; -0.973725872964439798096236700075678527355194091796875p-1022 - 1.6111565734624762047388912833412177860736846923828125p297 == -1.6111565734624762047388912833412177860736846923828125p297
; [HW: -1.6111565734624762047388912833412177860736846923828125p297] 

; mpf : - 2752404516510637 297
; mpfd: - 2752404516510637 297 (-4.10248e+089) class: Neg. norm. non-zero
; hwf : - 2752404516510637 297 (-4.10248e+089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1111100101000110000110010100101110100110101111001110)))
(assert (= y (fp #b0 #b10100101000 #b1001110001110100110000011101011111000001101110101101)))
(assert (= r (fp #b1 #b10100101000 #b1001110001110100110000011101011111000001101110101101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
