(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4842859937604260256449606458772905170917510986328125p-741 {+ 2181030221040205 -741 (1.28319e-223)}
; Y = -1.358691466228715061248522033565677702426910400390625p143 {- 1615402753648618 143 (-1.51499e+043)}
; 1.4842859937604260256449606458772905170917510986328125p-741 - -1.358691466228715061248522033565677702426910400390625p143 == 1.358691466228715061248522033565677702426910400390625p143
; [HW: 1.358691466228715061248522033565677702426910400390625p143] 

; mpf : + 1615402753648618 143
; mpfd: + 1615402753648618 143 (1.51499e+043) class: Pos. norm. non-zero
; hwf : + 1615402753648618 143 (1.51499e+043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100011010 #b0111101111111010001010101011100100011100101001001101)))
(assert (= y (fp #b1 #b10010001110 #b0101101111010011001101000011010011001110011111101010)))
(assert (= r (fp #b0 #b10010001110 #b0101101111010011001101000011010011001110011111101010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
