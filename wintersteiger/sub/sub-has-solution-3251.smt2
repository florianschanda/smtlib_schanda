(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.551867760940325968732622641255147755146026611328125p832 {- 2485391442528642 832 (-4.44438e+250)}
; Y = 1.032295562742723493698804304585792124271392822265625p-930 {+ 145446284333850 -930 (1.13739e-280)}
; -1.551867760940325968732622641255147755146026611328125p832 - 1.032295562742723493698804304585792124271392822265625p-930 == -1.5518677609403261907772275662864558398723602294921875p832
; [HW: -1.5518677609403261907772275662864558398723602294921875p832] 

; mpf : - 2485391442528643 832
; mpfd: - 2485391442528643 832 (-4.44438e+250) class: Neg. norm. non-zero
; hwf : - 2485391442528643 832 (-4.44438e+250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100111111 #b1000110101000111001101001010000011110100100110000010)))
(assert (= y (fp #b0 #b00001011101 #b0000100001000100100001011010000111001001001100011010)))
(assert (= r (fp #b1 #b11100111111 #b1000110101000111001101001010000011110100100110000011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
