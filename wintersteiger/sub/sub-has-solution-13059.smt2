(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7765466784952244072570692878798581659793853759765625p739 {- 3497255331906889 739 (-5.1374e+222)}
; Y = -1.3335410710792665600621376142953522503376007080078125p-272 {- 1502135443425341 -272 (-1.75731e-082)}
; -1.7765466784952244072570692878798581659793853759765625p739 - -1.3335410710792665600621376142953522503376007080078125p-272 == -1.7765466784952241852124643628485500812530517578125p739
; [HW: -1.7765466784952241852124643628485500812530517578125p739] 

; mpf : - 3497255331906888 739
; mpfd: - 3497255331906888 739 (-5.1374e+222) class: Neg. norm. non-zero
; hwf : - 3497255331906888 739 (-5.1374e+222) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100010 #b1100011011001011110000110101101111110100010101001001)))
(assert (= y (fp #b1 #b01011101111 #b0101010101100010111100101001100000101000100000111101)))
(assert (= r (fp #b1 #b11011100010 #b1100011011001011110000110101101111110100010101001000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
