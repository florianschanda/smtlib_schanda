(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3494158249779883984587058876059018075466156005859375p-187 {- 1573628979168223 -187 (-6.87918e-057)}
; Y = 1.66892898797869104754454383510164916515350341796875p-312 {+ 3012588340998156 -312 (2.00023e-094)}
; -1.3494158249779883984587058876059018075466156005859375p-187 - 1.66892898797869104754454383510164916515350341796875p-312 == -1.3494158249779883984587058876059018075466156005859375p-187
; [HW: -1.3494158249779883984587058876059018075466156005859375p-187] 

; mpf : - 1573628979168223 -187
; mpfd: - 1573628979168223 -187 (-6.87918e-057) class: Neg. norm. non-zero
; hwf : - 1573628979168223 -187 (-6.87918e-057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101000100 #b0101100101110011010100001100010011111100001111011111)))
(assert (= y (fp #b0 #b01011000111 #b1010101100111110111011100001111010110111000000001100)))
(assert (= r (fp #b1 #b01101000100 #b0101100101110011010100001100010011111100001111011111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
