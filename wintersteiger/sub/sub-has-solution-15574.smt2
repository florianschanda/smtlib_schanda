(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9517076822437309235880320557043887674808502197265625p-632 {+ 4286110363118505 -632 (1.09511e-190)}
; Y = 1.8893538784427901244811209835461340844631195068359375p648 {+ 4005293795555455 648 (2.20674e+195)}
; 1.9517076822437309235880320557043887674808502197265625p-632 - 1.8893538784427901244811209835461340844631195068359375p648 == -1.889353878442789902436516058514825999736785888671875p648
; [HW: -1.889353878442789902436516058514825999736785888671875p648] 

; mpf : - 4005293795555454 648
; mpfd: - 4005293795555454 648 (-2.20674e+195) class: Neg. norm. non-zero
; hwf : - 4005293795555454 648 (-2.20674e+195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110000111 #b1111001110100011000111010101101010010110101110101001)))
(assert (= y (fp #b0 #b11010000111 #b1110001110101100101100100001111001111011100001111111)))
(assert (= r (fp #b1 #b11010000111 #b1110001110101100101100100001111001111011100001111110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
