(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4425230161930724381846857795608229935169219970703125p107 {+ 1992946490829989 107 (2.34063e+032)}
; Y = 1.9874017815460292002427422630717046558856964111328125p-491 {+ 4446862295435661 -491 (3.10855e-148)}
; 1.4425230161930724381846857795608229935169219970703125p107 - 1.9874017815460292002427422630717046558856964111328125p-491 == 1.44252301619307221614008085452951490879058837890625p107
; [HW: 1.44252301619307221614008085452951490879058837890625p107] 

; mpf : + 1992946490829988 107
; mpfd: + 1992946490829988 107 (2.34063e+032) class: Pos. norm. non-zero
; hwf : + 1992946490829988 107 (2.34063e+032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101010 #b0111000101001001001100000011101001000110110010100101)))
(assert (= y (fp #b0 #b01000010100 #b1111110011000110010111001111011111000000100110001101)))
(assert (= r (fp #b0 #b10001101010 #b0111000101001001001100000011101001000110110010100100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
