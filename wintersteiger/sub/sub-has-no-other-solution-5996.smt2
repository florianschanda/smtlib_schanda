(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.65220668284181027019030807423405349254608154296875p-178 {+ 2937277773814924 -178 (4.31246e-054)}
; Y = -1.6036308209957130799239166663028299808502197265625p-364 {- 2718511540505640 -364 (-4.26762e-110)}
; 1.65220668284181027019030807423405349254608154296875p-178 - -1.6036308209957130799239166663028299808502197265625p-364 == 1.65220668284181027019030807423405349254608154296875p-178
; [HW: 1.65220668284181027019030807423405349254608154296875p-178] 

; mpf : + 2937277773814924 -178
; mpfd: + 2937277773814924 -178 (4.31246e-054) class: Pos. norm. non-zero
; hwf : + 2937277773814924 -178 (4.31246e-054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001101 #b1010011011110111000001000110010100001001110010001100)))
(assert (= y (fp #b1 #b01010010011 #b1001101010000111100011001010101100001000110000101000)))
(assert (= r (fp #b0 #b01101001101 #b1010011011110111000001000110010100001001110010001100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
