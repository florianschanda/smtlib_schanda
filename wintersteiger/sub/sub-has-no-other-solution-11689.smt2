(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.318463107778291121263691820786334574222564697265625p-719 {- 1434230333521562 -719 (-4.78081e-217)}
; Y = -1.0544918633608586500116643946967087686061859130859375p66 {- 245409535526687 66 (-7.78078e+019)}
; -1.318463107778291121263691820786334574222564697265625p-719 - -1.0544918633608586500116643946967087686061859130859375p66 == 1.0544918633608586500116643946967087686061859130859375p66
; [HW: 1.0544918633608586500116643946967087686061859130859375p66] 

; mpf : + 245409535526687 66
; mpfd: + 245409535526687 66 (7.78078e+019) class: Pos. norm. non-zero
; hwf : + 245409535526687 66 (7.78078e+019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110000 #b0101000110000110110011000101100011100011111010011010)))
(assert (= y (fp #b1 #b10001000001 #b0000110111110011001011011100001100001000011100011111)))
(assert (= r (fp #b0 #b10001000001 #b0000110111110011001011011100001100001000011100011111)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
