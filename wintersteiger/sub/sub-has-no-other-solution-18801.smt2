(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4782266488769268963920922033139504492282867431640625p605 {+ 2153741357680769 605 (1.96286e+182)}
; Y = 1.84670095850764948153255318175069987773895263671875p-857 {+ 3813202121229292 -857 (1.92172e-258)}
; 1.4782266488769268963920922033139504492282867431640625p605 - 1.84670095850764948153255318175069987773895263671875p-857 == 1.4782266488769268963920922033139504492282867431640625p605
; [HW: 1.4782266488769268963920922033139504492282867431640625p605] 

; mpf : + 2153741357680769 605
; mpfd: + 2153741357680769 605 (1.96286e+182) class: Pos. norm. non-zero
; hwf : + 2153741357680769 605 (1.96286e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011100 #b0111101001101101000011111100100100000000100010000001)))
(assert (= y (fp #b0 #b00010100110 #b1101100011000001011001001101111001001000001111101100)))
(assert (= r (fp #b0 #b11001011100 #b0111101001101101000011111100100100000000100010000001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
