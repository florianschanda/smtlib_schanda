(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2338244062247334387194541704957373440265655517578125p839 {+ 1053051508743837 839 (4.52293e+252)}
; Y = -1.571018009188742237114411182119511067867279052734375p911 {- 2571636493404262 911 (-2.71961e+274)}
; 1.2338244062247334387194541704957373440265655517578125p839 - -1.571018009188742237114411182119511067867279052734375p911 == 1.571018009188742237114411182119511067867279052734375p911
; [HW: 1.571018009188742237114411182119511067867279052734375p911] 

; mpf : + 2571636493404262 911
; mpfd: + 2571636493404262 911 (2.71961e+274) class: Pos. norm. non-zero
; hwf : + 2571636493404262 911 (2.71961e+274) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000110 #b0011101111011011111010101001000110111101111010011101)))
(assert (= y (fp #b1 #b11110001110 #b1001001000101110001111000111101011100100100001100110)))
(assert (= r (fp #b0 #b11110001110 #b1001001000101110001111000111101011100100100001100110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
