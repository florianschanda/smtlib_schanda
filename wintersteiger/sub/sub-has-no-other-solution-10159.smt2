(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5379895694072018841325188986957073211669921875p392 {+ 2422889624311488 392 (1.55136e+118)}
; Y = -1.60882958290367117371033600647933781147003173828125p-471 {- 2741924682697108 -471 (-2.63865e-142)}
; 1.5379895694072018841325188986957073211669921875p392 - -1.60882958290367117371033600647933781147003173828125p-471 == 1.5379895694072018841325188986957073211669921875p392
; [HW: 1.5379895694072018841325188986957073211669921875p392] 

; mpf : + 2422889624311488 392
; mpfd: + 2422889624311488 392 (1.55136e+118) class: Pos. norm. non-zero
; hwf : + 2422889624311488 392 (1.55136e+118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000111 #b1000100110111001101011110011011000110001011011000000)))
(assert (= y (fp #b1 #b01000101000 #b1001101111011100010000010110101101101000100110010100)))
(assert (= r (fp #b0 #b10110000111 #b1000100110111001101011110011011000110001011011000000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
