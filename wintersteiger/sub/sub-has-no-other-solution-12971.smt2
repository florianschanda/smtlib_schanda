(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6565139678387783561674950760789215564727783203125p321 {+ 2956676060922248 321 (7.07658e+096)}
; Y = 1.7442089896655732506047797869541682302951812744140625p-870 {+ 3351619328543649 -870 (2.21566e-262)}
; 1.6565139678387783561674950760789215564727783203125p321 - 1.7442089896655732506047797869541682302951812744140625p-870 == 1.6565139678387783561674950760789215564727783203125p321
; [HW: 1.6565139678387783561674950760789215564727783203125p321] 

; mpf : + 2956676060922248 321
; mpfd: + 2956676060922248 321 (7.07658e+096) class: Pos. norm. non-zero
; hwf : + 2956676060922248 321 (7.07658e+096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000000 #b1010100000010001010011001010010100111100000110001000)))
(assert (= y (fp #b0 #b00010011001 #b1011111010000100011110101111100000000000101110100001)))
(assert (= r (fp #b0 #b10101000000 #b1010100000010001010011001010010100111100000110001000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
