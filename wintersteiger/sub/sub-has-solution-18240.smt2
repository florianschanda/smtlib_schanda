(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6825066785830207205520991919911466538906097412109375p-938 {+ 3073736823344367 -938 (7.24137e-283)}
; Y = -1.493047330959404117578515069908462464809417724609375p-292 {- 2220487775984790 -292 (-1.87635e-088)}
; 1.6825066785830207205520991919911466538906097412109375p-938 - -1.493047330959404117578515069908462464809417724609375p-292 == 1.493047330959404117578515069908462464809417724609375p-292
; [HW: 1.493047330959404117578515069908462464809417724609375p-292] 

; mpf : + 2220487775984790 -292
; mpfd: + 2220487775984790 -292 (1.87635e-088) class: Pos. norm. non-zero
; hwf : + 2220487775984790 -292 (1.87635e-088) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010101 #b1010111010111000110000011111011111010000110011101111)))
(assert (= y (fp #b1 #b01011011011 #b0111111000111000010110011001000111011001110010010110)))
(assert (= r (fp #b0 #b01011011011 #b0111111000111000010110011001000111011001110010010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
