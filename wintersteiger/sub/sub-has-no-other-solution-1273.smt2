(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4733718260222261609015959038515575230121612548828125p247 {- 2131877179281389 247 (-3.33213e+074)}
; Y = 1.5739065364104136701683955834596417844295501708984375p-776 {+ 2584645263523431 -776 (3.96006e-234)}
; -1.4733718260222261609015959038515575230121612548828125p247 - 1.5739065364104136701683955834596417844295501708984375p-776 == -1.4733718260222261609015959038515575230121612548828125p247
; [HW: -1.4733718260222261609015959038515575230121612548828125p247] 

; mpf : - 2131877179281389 247
; mpfd: - 2131877179281389 247 (-3.33213e+074) class: Neg. norm. non-zero
; hwf : - 2131877179281389 247 (-3.33213e+074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110110 #b0111100100101110111001010101111110011100111111101101)))
(assert (= y (fp #b0 #b00011110111 #b1001001011101011100010011110110011010111111001100111)))
(assert (= r (fp #b1 #b10011110110 #b0111100100101110111001010101111110011100111111101101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
