(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.09550782240557165181371601647697389125823974609375p896 {- 430128993396700 896 (-5.78751e+269)}
; Y = -1.58559798392205930639420330408029258251190185546875p995 {- 2637298862180300 995 (-5.30932e+299)}
; -1.09550782240557165181371601647697389125823974609375p896 - -1.58559798392205930639420330408029258251190185546875p995 == 1.5855979839220590843495983790489844977855682373046875p995
; [HW: 1.5855979839220590843495983790489844977855682373046875p995] 

; mpf : + 2637298862180299 995
; mpfd: + 2637298862180299 995 (5.30932e+299) class: Pos. norm. non-zero
; hwf : + 2637298862180299 995 (5.30932e+299) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111111 #b0001100001110011001100110101110110111110011111011100)))
(assert (= y (fp #b1 #b11111100010 #b1001010111101001101111111101110110001100011111001100)))
(assert (= r (fp #b0 #b11111100010 #b1001010111101001101111111101110110001100011111001011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
