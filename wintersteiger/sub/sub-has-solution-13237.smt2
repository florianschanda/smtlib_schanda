(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7417352283230049803108840933418832719326019287109375p91 {- 3340478497883055 91 (-4.31233e+027)}
; Y = -1.12327828485609959585644901380874216556549072265625p469 {- 555196037740804 469 (-1.7122e+141)}
; -1.7417352283230049803108840933418832719326019287109375p91 - -1.12327828485609959585644901380874216556549072265625p469 == 1.12327828485609959585644901380874216556549072265625p469
; [HW: 1.12327828485609959585644901380874216556549072265625p469] 

; mpf : + 555196037740804 469
; mpfd: + 555196037740804 469 (1.7122e+141) class: Pos. norm. non-zero
; hwf : + 555196037740804 469 (1.7122e+141) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001011010 #b1011110111100010010111000010001111110000001110101111)))
(assert (= y (fp #b1 #b10111010100 #b0001111110001111001010100110100111000011100100000100)))
(assert (= r (fp #b0 #b10111010100 #b0001111110001111001010100110100111000011100100000100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
