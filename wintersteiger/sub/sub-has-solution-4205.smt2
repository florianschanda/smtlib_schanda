(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.382471637801039765491850630496628582477569580078125p-316 {- 1722499125480546 -316 (-1.03557e-095)}
; Y = 1.3556049721734828583663556855753995478153228759765625p-151 {+ 1601502420171593 -151 (4.74902e-046)}
; -1.382471637801039765491850630496628582477569580078125p-316 - 1.3556049721734828583663556855753995478153228759765625p-151 == -1.3556049721734828583663556855753995478153228759765625p-151
; [HW: -1.3556049721734828583663556855753995478153228759765625p-151] 

; mpf : - 1601502420171593 -151
; mpfd: - 1601502420171593 -151 (-4.74902e-046) class: Neg. norm. non-zero
; hwf : - 1601502420171593 -151 (-4.74902e-046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000011 #b0110000111101001101010010100100000000000110001100010)))
(assert (= y (fp #b0 #b01101101000 #b0101101100001000111011010110110111000111101101001001)))
(assert (= r (fp #b1 #b01101101000 #b0101101100001000111011010110110111000111101101001001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
