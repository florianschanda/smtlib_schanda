(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.747163895085997342704331458662636578083038330078125p107 {+ 3364927039493986 107 (2.83494e+032)}
; Y = -1.992472954757388503566062354366295039653778076171875p-483 {- 4469700829220670 -483 (-7.97819e-146)}
; 1.747163895085997342704331458662636578083038330078125p107 - -1.992472954757388503566062354366295039653778076171875p-483 == 1.747163895085997342704331458662636578083038330078125p107
; [HW: 1.747163895085997342704331458662636578083038330078125p107] 

; mpf : + 3364927039493986 107
; mpfd: + 3364927039493986 107 (2.83494e+032) class: Pos. norm. non-zero
; hwf : + 3364927039493986 107 (2.83494e+032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101010 #b1011111101000110001000100000111000100101011101100010)))
(assert (= y (fp #b1 #b01000011100 #b1111111000010010101101010010001011011000111100111110)))
(assert (= r (fp #b0 #b10001101010 #b1011111101000110001000100000111000100101011101100010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
