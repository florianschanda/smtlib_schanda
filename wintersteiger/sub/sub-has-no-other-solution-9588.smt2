(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.471509721354724131714419854688458144664764404296875p65 {- 2123491005394702 65 (-5.42891e+019)}
; Y = -1.9605785735858554108546059069340117275714874267578125p418 {- 4326061306061341 418 (-1.32716e+126)}
; -1.471509721354724131714419854688458144664764404296875p65 - -1.9605785735858554108546059069340117275714874267578125p418 == 1.96057857358585518881000098190270364284515380859375p418
; [HW: 1.96057857358585518881000098190270364284515380859375p418] 

; mpf : + 4326061306061340 418
; mpfd: + 4326061306061340 418 (1.32716e+126) class: Pos. norm. non-zero
; hwf : + 4326061306061340 418 (1.32716e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000000 #b0111100010110100110111000111000011110110111100001110)))
(assert (= y (fp #b1 #b10110100001 #b1111010111101000011110100011011011001010001000011101)))
(assert (= r (fp #b0 #b10110100001 #b1111010111101000011110100011011011001010001000011100)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
