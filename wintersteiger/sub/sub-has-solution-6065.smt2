(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.55421083003265270150450305663980543613433837890625p-183 {- 2495943687619748 -183 (-1.26771e-055)}
; Y = 1.473201715609190554090446312329731881618499755859375p-541 {+ 2131111070088630 -541 (2.04661e-163)}
; -1.55421083003265270150450305663980543613433837890625p-183 - 1.473201715609190554090446312329731881618499755859375p-541 == -1.5542108300326529235491079816711135208606719970703125p-183
; [HW: -1.5542108300326529235491079816711135208606719970703125p-183] 

; mpf : - 2495943687619749 -183
; mpfd: - 2495943687619749 -183 (-1.26771e-055) class: Neg. norm. non-zero
; hwf : - 2495943687619749 -183 (-1.26771e-055) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001000 #b1000110111100000110000101100111000010100010010100100)))
(assert (= y (fp #b0 #b00111100010 #b0111100100100011101111110110010011110011110110110110)))
(assert (= r (fp #b1 #b01101001000 #b1000110111100000110000101100111000010100010010100101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
