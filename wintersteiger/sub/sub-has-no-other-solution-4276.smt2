(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.25777755248189038184136734344065189361572265625p165 {- 1160926889301920 165 (-5.88238e+049)}
; Y = 1.0847394494208011384017709133331663906574249267578125p-878 {+ 381632552835101 -878 (5.38256e-265)}
; -1.25777755248189038184136734344065189361572265625p165 - 1.0847394494208011384017709133331663906574249267578125p-878 == -1.25777755248189038184136734344065189361572265625p165
; [HW: -1.25777755248189038184136734344065189361572265625p165] 

; mpf : - 1160926889301920 165
; mpfd: - 1160926889301920 165 (-5.88238e+049) class: Neg. norm. non-zero
; hwf : - 1160926889301920 165 (-5.88238e+049) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100100 #b0100000111111101101101011010110110001101011110100000)))
(assert (= y (fp #b0 #b00010010001 #b0001010110110001011111000000101111110001100000011101)))
(assert (= r (fp #b1 #b10010100100 #b0100000111111101101101011010110110001101011110100000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
