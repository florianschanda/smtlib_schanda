(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.2747449406230229040914991855970583856105804443359375p-1022 {+ 1237341212211775 -1023 (6.11328e-309)}
; Y = 1.7674900092707159782179360263398848474025726318359375p825 {+ 3456467719762175 825 (3.95461e+248)}
; 0.2747449406230229040914991855970583856105804443359375p-1022 - 1.7674900092707159782179360263398848474025726318359375p825 == -1.767490009270715756173331101308576762676239013671875p825
; [HW: -1.767490009270715756173331101308576762676239013671875p825] 

; mpf : - 3456467719762174 825
; mpfd: - 3456467719762174 825 (-3.95461e+248) class: Neg. norm. non-zero
; hwf : - 3456467719762174 825 (-3.95461e+248) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0100011001010101101011110011011010110111101000111111)))
(assert (= y (fp #b0 #b11100111000 #b1100010001111010001110011010100111010011000011111111)))
(assert (= r (fp #b1 #b11100111000 #b1100010001111010001110011010100111010011000011111110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
