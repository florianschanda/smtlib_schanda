(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.365031244995865478131236159242689609527587890625p-551 {+ 1643954578941968 -551 (1.85189e-166)}
; Y = 1.2598888311600580092175505342311225831508636474609375p-881 {+ 1170435243170191 -881 (7.81459e-266)}
; 1.365031244995865478131236159242689609527587890625p-551 - 1.2598888311600580092175505342311225831508636474609375p-881 == 1.365031244995865478131236159242689609527587890625p-551
; [HW: 1.365031244995865478131236159242689609527587890625p-551] 

; mpf : + 1643954578941968 -551
; mpfd: + 1643954578941968 -551 (1.85189e-166) class: Pos. norm. non-zero
; hwf : + 1643954578941968 -551 (1.85189e-166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011000 #b0101110101110010101100000000101101000110100000010000)))
(assert (= y (fp #b0 #b00010001110 #b0100001010001000000100110000111001101101100110001111)))
(assert (= r (fp #b0 #b00111011000 #b0101110101110010101100000000101101000110100000010000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
