(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6898545635241435380891061868169344961643218994140625p-58 {+ 3106828755227169 -58 (5.86286e-018)}
; Y = 1.310337110939859162073162224260158836841583251953125p387 {+ 1397634097187986 387 (4.13039e+116)}
; 1.6898545635241435380891061868169344961643218994140625p-58 - 1.310337110939859162073162224260158836841583251953125p387 == -1.310337110939859162073162224260158836841583251953125p387
; [HW: -1.310337110939859162073162224260158836841583251953125p387] 

; mpf : - 1397634097187986 387
; mpfd: - 1397634097187986 387 (-4.13039e+116) class: Neg. norm. non-zero
; hwf : - 1397634097187986 387 (-4.13039e+116) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000101 #b1011000010011010010011110000010101010101001000100001)))
(assert (= y (fp #b0 #b10110000010 #b0100111101110010010000001011111000111000110010010010)))
(assert (= r (fp #b1 #b10110000010 #b0100111101110010010000001011111000111000110010010010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
