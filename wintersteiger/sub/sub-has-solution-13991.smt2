(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.98000692397691846480256572249345481395721435546875p-67 {+ 4413558817642956 -67 (1.3417e-020)}
; Y = -1.3054613547780835602907245629467070102691650390625p-189 {- 1375675643554664 -189 (-1.66378e-057)}
; 1.98000692397691846480256572249345481395721435546875p-67 - -1.3054613547780835602907245629467070102691650390625p-189 == 1.98000692397691846480256572249345481395721435546875p-67
; [HW: 1.98000692397691846480256572249345481395721435546875p-67] 

; mpf : + 4413558817642956 -67
; mpfd: + 4413558817642956 -67 (1.3417e-020) class: Pos. norm. non-zero
; hwf : + 4413558817642956 -67 (1.3417e-020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111100 #b1111101011100001101110111101100001010101100111001100)))
(assert (= y (fp #b1 #b01101000010 #b0100111000110010101101110010000011110110101101101000)))
(assert (= r (fp #b0 #b01110111100 #b1111101011100001101110111101100001010101100111001100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
