(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8341104909783183529725647531449794769287109375p117 {- 3756499696355776 117 (-3.04744e+035)}
; Y = -1.5312321673133630905994095883215777575969696044921875p793 {- 2392456990759683 793 (-7.97678e+238)}
; -1.8341104909783183529725647531449794769287109375p117 - -1.5312321673133630905994095883215777575969696044921875p793 == 1.531232167313362868554804663290269672870635986328125p793
; [HW: 1.531232167313362868554804663290269672870635986328125p793] 

; mpf : + 2392456990759682 793
; mpfd: + 2392456990759682 793 (7.97678e+238) class: Pos. norm. non-zero
; hwf : + 2392456990759682 793 (7.97678e+238) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001110100 #b1101010110001000010000111110000000000000100111000000)))
(assert (= y (fp #b1 #b11100011000 #b1000011111111110110101001101000100110001101100000011)))
(assert (= r (fp #b0 #b11100011000 #b1000011111111110110101001101000100110001101100000010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
