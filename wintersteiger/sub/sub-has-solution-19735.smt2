(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9264392100816536412821733392775058746337890625p966 {- 4172311281305152 966 (-1.20152e+291)}
; Y = 1.5646707876676113624370145771536044776439666748046875p672 {+ 2543051148926859 672 (3.06606e+202)}
; -1.9264392100816536412821733392775058746337890625p966 - 1.5646707876676113624370145771536044776439666748046875p672 == -1.9264392100816536412821733392775058746337890625p966
; [HW: -1.9264392100816536412821733392775058746337890625p966] 

; mpf : - 4172311281305152 966
; mpfd: - 4172311281305152 966 (-1.20152e+291) class: Neg. norm. non-zero
; hwf : - 4172311281305152 966 (-1.20152e+291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111000101 #b1110110100101011000111101011110100001000011001000000)))
(assert (= y (fp #b0 #b11010011111 #b1001000010001110010000111100011000001001111110001011)))
(assert (= r (fp #b1 #b11111000101 #b1110110100101011000111101011110100001000011001000000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
