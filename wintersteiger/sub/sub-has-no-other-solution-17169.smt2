(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.061142243084228997673790217959322035312652587890625p362 {- 275360183170730 362 (-9.96855e+108)}
; Y = -1.4922594375933557753199920625775121152400970458984375p-298 {- 2216939419715047 -298 (-2.93026e-090)}
; -1.061142243084228997673790217959322035312652587890625p362 - -1.4922594375933557753199920625775121152400970458984375p-298 == -1.061142243084228997673790217959322035312652587890625p362
; [HW: -1.061142243084228997673790217959322035312652587890625p362] 

; mpf : - 275360183170730 362
; mpfd: - 275360183170730 362 (-9.96855e+108) class: Neg. norm. non-zero
; hwf : - 275360183170730 362 (-9.96855e+108) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101001 #b0000111110100111000001001001111001110011011010101010)))
(assert (= y (fp #b1 #b01011010101 #b0111111000000100101101101110100110011100010111100111)))
(assert (= r (fp #b1 #b10101101001 #b0000111110100111000001001001111001110011011010101010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
