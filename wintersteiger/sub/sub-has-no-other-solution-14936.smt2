(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.519247316412617010428220964968204498291015625p425 {+ 2338482020708992 425 (1.31637e+128)}
; Y = 1.6571429691359707003783796608331613242626190185546875p-842 {+ 2959508830929899 -842 (5.65072e-254)}
; 1.519247316412617010428220964968204498291015625p425 - 1.6571429691359707003783796608331613242626190185546875p-842 == 1.519247316412617010428220964968204498291015625p425
; [HW: 1.519247316412617010428220964968204498291015625p425] 

; mpf : + 2338482020708992 425
; mpfd: + 2338482020708992 425 (1.31637e+128) class: Pos. norm. non-zero
; hwf : + 2338482020708992 425 (1.31637e+128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101000 #b1000010011101101011001000110001010000111001010000000)))
(assert (= y (fp #b0 #b00010110101 #b1010100000111010100001011000100100111100001111101011)))
(assert (= r (fp #b0 #b10110101000 #b1000010011101101011001000110001010000111001010000000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
