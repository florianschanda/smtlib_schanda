(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9454058118524510945235306280665099620819091796875p418 {+ 4257729261972600 418 (1.31689e+126)}
; Y = 1.09564734003490737990205161622725427150726318359375p-449 {+ 430757324940188 -449 (7.53707e-136)}
; 1.9454058118524510945235306280665099620819091796875p418 - 1.09564734003490737990205161622725427150726318359375p-449 == 1.9454058118524510945235306280665099620819091796875p418
; [HW: 1.9454058118524510945235306280665099620819091796875p418] 

; mpf : + 4257729261972600 418
; mpfd: + 4257729261972600 418 (1.31689e+126) class: Pos. norm. non-zero
; hwf : + 4257729261972600 418 (1.31689e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100001 #b1111001000000110000111011000001101011010110001111000)))
(assert (= y (fp #b0 #b01000111110 #b0001100001111100010110000001010101100110001110011100)))
(assert (= r (fp #b0 #b10110100001 #b1111001000000110000111011000001101011010110001111000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
