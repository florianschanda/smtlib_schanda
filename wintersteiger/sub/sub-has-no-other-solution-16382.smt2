(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.376306542026557000468756086775101721286773681640625p313 {- 1694734002447882 313 (-2.2967e+094)}
; Y = 1.5259201197105414227195296916761435568332672119140625p296 {+ 2368533655155041 296 (1.94272e+089)}
; -1.376306542026557000468756086775101721286773681640625p313 - 1.5259201197105414227195296916761435568332672119140625p296 == -1.3763181838731732842262545091216452419757843017578125p313
; [HW: -1.3763181838731732842262545091216452419757843017578125p313] 

; mpf : - 1694786432663965 313
; mpfd: - 1694786432663965 313 (-2.29672e+094) class: Neg. norm. non-zero
; hwf : - 1694786432663965 313 (-2.29672e+094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100111000 #b0110000001010101101000000010001101000110011000001010)))
(assert (= y (fp #b0 #b10100100111 #b1000011010100010101100110111001001110111000101100001)))
(assert (= r (fp #b1 #b10100111000 #b0110000001010110011000110111010010100000000110011101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
