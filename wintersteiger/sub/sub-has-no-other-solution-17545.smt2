(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.905196027312585638213704442023299634456634521484375p-590 {+ 4076640491302214 -590 (4.70156e-178)}
; Y = -1.4255140919215925077168094503576867282390594482421875p-424 {- 1916345105818979 -424 (-3.29044e-128)}
; 1.905196027312585638213704442023299634456634521484375p-590 - -1.4255140919215925077168094503576867282390594482421875p-424 == 1.4255140919215925077168094503576867282390594482421875p-424
; [HW: 1.4255140919215925077168094503576867282390594482421875p-424] 

; mpf : + 1916345105818979 -424
; mpfd: + 1916345105818979 -424 (3.29044e-128) class: Pos. norm. non-zero
; hwf : + 1916345105818979 -424 (3.29044e-128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110110001 #b1110011110111010111011010100010111000110110101000110)))
(assert (= y (fp #b1 #b01001010111 #b0110110011101110011111011101010011001010010101100011)))
(assert (= r (fp #b0 #b01001010111 #b0110110011101110011111011101010011001010010101100011)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
