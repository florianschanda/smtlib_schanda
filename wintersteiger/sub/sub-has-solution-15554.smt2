(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.525815173461136708965568686835467815399169921875p882 {- 2368061019265328 882 (-4.91992e+265)}
; Y = -1.266319228635423232987022856832481920719146728515625p-388 {- 1199395178844090 -388 (-2.00865e-117)}
; -1.525815173461136708965568686835467815399169921875p882 - -1.266319228635423232987022856832481920719146728515625p-388 == -1.525815173461136708965568686835467815399169921875p882
; [HW: -1.525815173461136708965568686835467815399169921875p882] 

; mpf : - 2368061019265328 882
; mpfd: - 2368061019265328 882 (-4.91992e+265) class: Neg. norm. non-zero
; hwf : - 2368061019265328 882 (-4.91992e+265) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110001 #b1000011010011011110100101011110111000001100100110000)))
(assert (= y (fp #b1 #b01001111011 #b0100010000101101011111110011100101001000111110111010)))
(assert (= r (fp #b1 #b11101110001 #b1000011010011011110100101011110111000001100100110000)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
