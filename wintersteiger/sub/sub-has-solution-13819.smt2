(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2516461373473337648221104245749302208423614501953125p465 {- 1133313450386677 465 (-1.19242e+140)}
; Y = -1.6615912383484270353761758087784983217716217041015625p822 {- 2979542054497561 822 (-4.64709e+247)}
; -1.2516461373473337648221104245749302208423614501953125p465 - -1.6615912383484270353761758087784983217716217041015625p822 == 1.6615912383484268133315708837471902370452880859375p822
; [HW: 1.6615912383484268133315708837471902370452880859375p822] 

; mpf : + 2979542054497560 822
; mpfd: + 2979542054497560 822 (4.64709e+247) class: Pos. norm. non-zero
; hwf : + 2979542054497560 822 (4.64709e+247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010000 #b0100000001101011111000011001101000010010010011110101)))
(assert (= y (fp #b1 #b11100110101 #b1010100101011110000010110001110000000110110100011001)))
(assert (= r (fp #b0 #b11100110101 #b1010100101011110000010110001110000000110110100011000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
