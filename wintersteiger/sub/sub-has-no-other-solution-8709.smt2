(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.234433896219700788066120367147959768772125244140625p-632 {+ 1055796407658058 -632 (6.92645e-191)}
; Y = 0.2816014476603798666332068023621104657649993896484375p-1022 {+ 1268220174750279 -1023 (6.26584e-309)}
; 1.234433896219700788066120367147959768772125244140625p-632 - 0.2816014476603798666332068023621104657649993896484375p-1022 == 1.2344338962197005660215154421166516840457916259765625p-632
; [HW: 1.2344338962197005660215154421166516840457916259765625p-632] 

; mpf : + 1055796407658057 -632
; mpfd: + 1055796407658057 -632 (6.92645e-191) class: Pos. norm. non-zero
; hwf : + 1055796407658057 -632 (6.92645e-191) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110000111 #b0011110000000011110111000001110101010110011001001010)))
(assert (= y (fp #b0 #b00000000000 #b0100100000010111000010000101000000110101001001000111)))
(assert (= r (fp #b0 #b00110000111 #b0011110000000011110111000001110101010110011001001001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
