(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0297556645245526940612990074441768229007720947265625p257 {- 134007599664937 257 (-2.38475e+077)}
; Y = -1.9238656534984197588045162774506025016307830810546875p711 {- 4160721012835883 711 (-2.07253e+214)}
; -1.0297556645245526940612990074441768229007720947265625p257 - -1.9238656534984197588045162774506025016307830810546875p711 == 1.923865653498419536759911352419294416904449462890625p711
; [HW: 1.923865653498419536759911352419294416904449462890625p711] 

; mpf : + 4160721012835882 711
; mpfd: + 4160721012835882 711 (2.07253e+214) class: Pos. norm. non-zero
; hwf : + 4160721012835882 711 (2.07253e+214) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000000 #b0000011110011110000100010011011000000000111100101001)))
(assert (= y (fp #b1 #b11011000110 #b1110110010000010011101011001111110101100011000101011)))
(assert (= r (fp #b0 #b11011000110 #b1110110010000010011101011001111110101100011000101010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
