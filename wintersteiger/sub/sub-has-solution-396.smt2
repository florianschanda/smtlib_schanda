(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9982099641068422624101685869391076266765594482421875p135 {+ 4495538022389091 135 (8.70343e+040)}
; Y = -1.2827858945866754680764643126167356967926025390625p-189 {- 1273554449486184 -189 (-1.63488e-057)}
; 1.9982099641068422624101685869391076266765594482421875p135 - -1.2827858945866754680764643126167356967926025390625p-189 == 1.9982099641068422624101685869391076266765594482421875p135
; [HW: 1.9982099641068422624101685869391076266765594482421875p135] 

; mpf : + 4495538022389091 135
; mpfd: + 4495538022389091 135 (8.70343e+040) class: Pos. norm. non-zero
; hwf : + 4495538022389091 135 (8.70343e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000110 #b1111111110001010101100000010111001100001010101100011)))
(assert (= y (fp #b1 #b01101000010 #b0100100001100100101010000000100100000101000101101000)))
(assert (= r (fp #b0 #b10010000110 #b1111111110001010101100000010111001100001010101100011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
