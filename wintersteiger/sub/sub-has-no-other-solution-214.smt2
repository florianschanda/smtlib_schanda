(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2811527779928379988660935850930400192737579345703125p701 {+ 1266199546202725 701 (1.34781e+211)}
; Y = 1.1407888270730131008434682371444068849086761474609375p-249 {+ 634056509143951 -249 (1.26106e-075)}
; 1.2811527779928379988660935850930400192737579345703125p701 - 1.1407888270730131008434682371444068849086761474609375p-249 == 1.28115277799283777682148866006173193454742431640625p701
; [HW: 1.28115277799283777682148866006173193454742431640625p701] 

; mpf : + 1266199546202724 701
; mpfd: + 1266199546202724 701 (1.34781e+211) class: Pos. norm. non-zero
; hwf : + 1266199546202724 701 (1.34781e+211) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111100 #b0100011111111001101000001110001010101000101001100101)))
(assert (= y (fp #b0 #b01100000110 #b0010010000001010101111001000111111101011101110001111)))
(assert (= r (fp #b0 #b11010111100 #b0100011111111001101000001110001010101000101001100100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
