(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.469512504701843358390078719821758568286895751953125p57 {+ 2114496341221010 57 (2.11779e+017)}
; Y = -1.656051427803533204752284291316755115985870361328125p-230 {- 2954592965791874 -230 (-9.59787e-070)}
; 1.469512504701843358390078719821758568286895751953125p57 - -1.656051427803533204752284291316755115985870361328125p-230 == 1.469512504701843358390078719821758568286895751953125p57
; [HW: 1.469512504701843358390078719821758568286895751953125p57] 

; mpf : + 2114496341221010 57
; mpfd: + 2114496341221010 57 (2.11779e+017) class: Pos. norm. non-zero
; hwf : + 2114496341221010 57 (2.11779e+017) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111000 #b0111100000110001111110001011010011000001111010010010)))
(assert (= y (fp #b1 #b01100011001 #b1010011111110010111111001000001011101001000010000010)))
(assert (= r (fp #b0 #b10000111000 #b0111100000110001111110001011010011000001111010010010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
