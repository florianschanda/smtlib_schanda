(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.395814703096458941899982164613902568817138671875p-667 {- 1782590949372976 -667 (-2.2794e-201)}
; Y = -1.750652811138585729366923260386101901531219482421875p948 {- 3380639720528350 948 (-4.1652e+285)}
; -1.395814703096458941899982164613902568817138671875p-667 - -1.750652811138585729366923260386101901531219482421875p948 == 1.7506528111385855073223183353547938168048858642578125p948
; [HW: 1.7506528111385855073223183353547938168048858642578125p948] 

; mpf : + 3380639720528349 948
; mpfd: + 3380639720528349 948 (4.1652e+285) class: Pos. norm. non-zero
; hwf : + 3380639720528349 948 (4.1652e+285) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100100 #b0110010101010100000111001100010100010011010000110000)))
(assert (= y (fp #b1 #b11110110011 #b1100000000101010110010000101101001111101100111011110)))
(assert (= r (fp #b0 #b11110110011 #b1100000000101010110010000101101001111101100111011101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
