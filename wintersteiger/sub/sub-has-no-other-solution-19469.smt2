(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3280747231656369056196353994891978800296783447265625p47 {+ 1477517200998441 47 (1.8691e+014)}
; Y = -1.0250331865780755169481608390924520790576934814453125p811 {- 112739449744917 811 (-1.39979e+244)}
; 1.3280747231656369056196353994891978800296783447265625p47 - -1.0250331865780755169481608390924520790576934814453125p811 == 1.0250331865780755169481608390924520790576934814453125p811
; [HW: 1.0250331865780755169481608390924520790576934814453125p811] 

; mpf : + 112739449744917 811
; mpfd: + 112739449744917 811 (1.39979e+244) class: Pos. norm. non-zero
; hwf : + 112739449744917 811 (1.39979e+244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101110 #b0101001111111100101101000111111010100100000000101001)))
(assert (= y (fp #b1 #b11100101010 #b0000011001101000100100110010110110101010111000010101)))
(assert (= r (fp #b0 #b11100101010 #b0000011001101000100100110010110110101010111000010101)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
