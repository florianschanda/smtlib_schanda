(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3238588582970278739736613715649582445621490478515625p-649 {- 1458530633547129 -649 (-5.66728e-196)}
; Y = -1.2111677240836671298751525682746432721614837646484375p777 {- 951014883495879 777 (-9.62744e+233)}
; -1.3238588582970278739736613715649582445621490478515625p-649 - -1.2111677240836671298751525682746432721614837646484375p777 == 1.211167724083666907830547643243335187435150146484375p777
; [HW: 1.211167724083666907830547643243335187435150146484375p777] 

; mpf : + 951014883495878 777
; mpfd: + 951014883495878 777 (9.62744e+233) class: Pos. norm. non-zero
; hwf : + 951014883495878 777 (9.62744e+233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101110110 #b0101001011101000011010100000010011100111110101111001)))
(assert (= y (fp #b1 #b11100001000 #b0011011000001111000101101000010011101000111111000111)))
(assert (= r (fp #b0 #b11100001000 #b0011011000001111000101101000010011101000111111000110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
