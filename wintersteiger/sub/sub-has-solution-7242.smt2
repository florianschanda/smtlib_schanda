(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7548481764765118118276632230845279991626739501953125p-645 {- 3399533966300917 -645 (-1.20197e-194)}
; Y = -1.62574339438449566586086802999489009380340576171875p399 {- 2818097717779564 399 (-2.09904e+120)}
; -1.7548481764765118118276632230845279991626739501953125p-645 - -1.62574339438449566586086802999489009380340576171875p399 == 1.6257433943844954438162631049635820090770721435546875p399
; [HW: 1.6257433943844954438162631049635820090770721435546875p399] 

; mpf : + 2818097717779563 399
; mpfd: + 2818097717779563 399 (2.09904e+120) class: Pos. norm. non-zero
; hwf : + 2818097717779563 399 (2.09904e+120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111010 #b1100000100111101101110101110011101101001011011110101)))
(assert (= y (fp #b1 #b10110001110 #b1010000000110000101110000001011010010001110001101100)))
(assert (= r (fp #b0 #b10110001110 #b1010000000110000101110000001011010010001110001101011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
