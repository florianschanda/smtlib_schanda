(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.528710911889263446283848679740913212299346923828125p461 {- 2381102265771202 461 (-9.10235e+138)}
; Y = -1.4812744244682829464210271908086724579334259033203125p-120 {- 2167467318698309 -120 (-1.11439e-036)}
; -1.528710911889263446283848679740913212299346923828125p461 - -1.4812744244682829464210271908086724579334259033203125p-120 == -1.5287109118892632242392437547096051275730133056640625p461
; [HW: -1.5287109118892632242392437547096051275730133056640625p461] 

; mpf : - 2381102265771201 461
; mpfd: - 2381102265771201 461 (-9.10235e+138) class: Neg. norm. non-zero
; hwf : - 2381102265771201 461 (-9.10235e+138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111001100 #b1000011101011001100110010010101110011010010011000010)))
(assert (= y (fp #b1 #b01110000111 #b0111101100110100110011001111100101111110000101000101)))
(assert (= r (fp #b1 #b10111001100 #b1000011101011001100110010010101110011010010011000001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
