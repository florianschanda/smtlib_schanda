(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6882727203811278560152686623041518032550811767578125p734 {- 3099704767037725 734 (-1.52567e+221)}
; Y = -1.432698916703423197560596236144192516803741455078125p764 {- 1948702680029154 764 (-1.39018e+230)}
; -1.6882727203811278560152686623041518032550811767578125p734 - -1.432698916703423197560596236144192516803741455078125p764 == 1.4326989151310967063324142145575024187564849853515625p764
; [HW: 1.4326989151310967063324142145575024187564849853515625p764] 

; mpf : + 1948702672948025 764
; mpfd: + 1948702672948025 764 (1.39018e+230) class: Pos. norm. non-zero
; hwf : + 1948702672948025 764 (1.39018e+230) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011101 #b1011000000110010101001000001100011000100000100011101)))
(assert (= y (fp #b1 #b11011111011 #b0110111011000101010110110011000001000001011111100010)))
(assert (= r (fp #b0 #b11011111011 #b0110111011000101010110110010100110000000101100111001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
