(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.130150066973488076627063492196612060070037841796875p477 {+ 586143793124046 477 (4.41006e+143)}
; Y = -1.52557974014771158266512429690919816493988037109375p-681 {- 2367000721882716 -681 (-1.52058e-205)}
; 1.130150066973488076627063492196612060070037841796875p477 - -1.52557974014771158266512429690919816493988037109375p-681 == 1.130150066973488076627063492196612060070037841796875p477
; [HW: 1.130150066973488076627063492196612060070037841796875p477] 

; mpf : + 586143793124046 477
; mpfd: + 586143793124046 477 (4.41006e+143) class: Pos. norm. non-zero
; hwf : + 586143793124046 477 (4.41006e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011100 #b0010000101010001100000111100100100111001001011001110)))
(assert (= y (fp #b1 #b00101010110 #b1000011010001100011001001101001101011111111001011100)))
(assert (= r (fp #b0 #b10111011100 #b0010000101010001100000111100100100111001001011001110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
