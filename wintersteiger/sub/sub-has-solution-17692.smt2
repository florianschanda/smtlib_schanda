(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.641459793754447726854550637654028832912445068359375p626 {- 2888878088125686 626 (-4.57096e+188)}
; Y = 1.1178539494805754817008391910349018871784210205078125p-807 {+ 530767002964861 -807 (1.30972e-243)}
; -1.641459793754447726854550637654028832912445068359375p626 - 1.1178539494805754817008391910349018871784210205078125p-807 == -1.6414597937544479488991555626853369176387786865234375p626
; [HW: -1.6414597937544479488991555626853369176387786865234375p626] 

; mpf : - 2888878088125687 626
; mpfd: - 2888878088125687 626 (-4.57096e+188) class: Neg. norm. non-zero
; hwf : - 2888878088125687 626 (-4.57096e+188) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001110001 #b1010010000110110101101011000001111011111110011110110)))
(assert (= y (fp #b0 #b00011011000 #b0001111000101011101011010010101010111001001101111101)))
(assert (= r (fp #b1 #b11001110001 #b1010010000110110101101011000001111011111110011110111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
