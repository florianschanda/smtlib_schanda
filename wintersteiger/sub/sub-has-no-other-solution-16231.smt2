(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.113270511870263046461104750051163136959075927734375p-979 {- 510125035050982 -979 (-2.17889e-295)}
; Y = -1.446511045961730079767448842176236212253570556640625p-300 {- 2010906980210058 -300 (-7.10106e-091)}
; -1.113270511870263046461104750051163136959075927734375p-979 - -1.446511045961730079767448842176236212253570556640625p-300 == 1.446511045961730079767448842176236212253570556640625p-300
; [HW: 1.446511045961730079767448842176236212253570556640625p-300] 

; mpf : + 2010906980210058 -300
; mpfd: + 2010906980210058 -300 (7.10106e-091) class: Pos. norm. non-zero
; hwf : + 2010906980210058 -300 (7.10106e-091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101100 #b0001110011111111010010111101100000010101011111100110)))
(assert (= y (fp #b1 #b01011010011 #b0111001001001110100011000100001110110101010110001010)))
(assert (= r (fp #b0 #b01011010011 #b0111001001001110100011000100001110110101010110001010)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
