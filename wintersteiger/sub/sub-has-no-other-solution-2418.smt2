(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.709176148401037931279233816894702613353729248046875p430 {+ 3193845437678958 430 (4.73898e+129)}
; Y = -1.5263956899701349723130761049105785787105560302734375p58 {- 2370675433198935 58 (-4.39954e+017)}
; 1.709176148401037931279233816894702613353729248046875p430 - -1.5263956899701349723130761049105785787105560302734375p58 == 1.709176148401037931279233816894702613353729248046875p430
; [HW: 1.709176148401037931279233816894702613353729248046875p430] 

; mpf : + 3193845437678958 430
; mpfd: + 3193845437678958 430 (4.73898e+129) class: Pos. norm. non-zero
; hwf : + 3193845437678958 430 (4.73898e+129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101101 #b1011010110001100100100010110110001111100010101101110)))
(assert (= y (fp #b1 #b10000111001 #b1000011011000001110111100011000100101101010101010111)))
(assert (= r (fp #b0 #b10110101101 #b1011010110001100100100010110110001111100010101101110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
