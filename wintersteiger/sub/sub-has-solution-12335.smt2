(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0991508921482611160769238267675973474979400634765625p-812 {- 446535920932361 -812 (-4.0244e-245)}
; Y = 1.289966300605003279855509390472434461116790771484375p460 {+ 1305892123354694 460 (3.8404e+138)}
; -1.0991508921482611160769238267675973474979400634765625p-812 - 1.289966300605003279855509390472434461116790771484375p460 == -1.289966300605003279855509390472434461116790771484375p460
; [HW: -1.289966300605003279855509390472434461116790771484375p460] 

; mpf : - 1305892123354694 460
; mpfd: - 1305892123354694 460 (-3.8404e+138) class: Neg. norm. non-zero
; hwf : - 1305892123354694 460 (-3.8404e+138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010011 #b0001100101100001111100111110111100100101011000001001)))
(assert (= y (fp #b0 #b10111001011 #b0100101000111011001110110100001000001010011001000110)))
(assert (= r (fp #b1 #b10111001011 #b0100101000111011001110110100001000001010011001000110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
