(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.71502787154326608032306467066518962383270263671875p640 {- 3220199255841772 640 (-7.82471e+192)}
; Y = -1.945227230402430951272663151030428707599639892578125p-380 {- 4256925002620834 -380 (-7.899e-115)}
; -1.71502787154326608032306467066518962383270263671875p640 - -1.945227230402430951272663151030428707599639892578125p-380 == -1.7150278715432658582784597456338815391063690185546875p640
; [HW: -1.7150278715432658582784597456338815391063690185546875p640] 

; mpf : - 3220199255841771 640
; mpfd: - 3220199255841771 640 (-7.82471e+192) class: Neg. norm. non-zero
; hwf : - 3220199255841771 640 (-7.82471e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111111 #b1011011100001100000100010000110000000001101111101100)))
(assert (= y (fp #b1 #b01010000011 #b1111000111111010011010010110100111011101111110100010)))
(assert (= r (fp #b1 #b11001111111 #b1011011100001100000100010000110000000001101111101011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
