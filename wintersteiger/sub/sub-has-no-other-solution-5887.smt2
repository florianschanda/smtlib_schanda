(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.383266292743216663296834667562507092952728271484375p724 {- 1726077933182022 724 (-1.22074e+218)}
; Y = -1.5022153835281997213968452342669479548931121826171875p-649 {- 2261777014117331 -649 (-6.4308e-196)}
; -1.383266292743216663296834667562507092952728271484375p724 - -1.5022153835281997213968452342669479548931121826171875p-649 == -1.3832662927432164412522297425311990082263946533203125p724
; [HW: -1.3832662927432164412522297425311990082263946533203125p724] 

; mpf : - 1726077933182021 724
; mpfd: - 1726077933182021 724 (-1.22074e+218) class: Neg. norm. non-zero
; hwf : - 1726077933182021 724 (-1.22074e+218) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011010011 #b0110001000011101101111010110000011111101110001000110)))
(assert (= y (fp #b1 #b00101110110 #b1000000010010001001011111111011111001101001111010011)))
(assert (= r (fp #b1 #b11011010011 #b0110001000011101101111010110000011111101110001000101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
