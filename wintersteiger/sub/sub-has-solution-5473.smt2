(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.278411619272601829067070866585709154605865478515625p-142 {+ 1253854464811706 -142 (2.29304e-043)}
; Y = -1.9710562050202469208670663647353649139404296875p-155 {- 4373248363084992 -155 (-4.31568e-047)}
; 1.278411619272601829067070866585709154605865478515625p-142 - -1.9710562050202469208670663647353649139404296875p-155 == 1.2786522267195035151843285348149947822093963623046875p-142
; [HW: 1.2786522267195035151843285348149947822093963623046875p-142] 

; mpf : + 1254938064419915 -142
; mpfd: + 1254938064419915 -142 (2.29347e-043) class: Pos. norm. non-zero
; hwf : + 1254938064419915 -142 (2.29347e-043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110001 #b0100011101000101111110111101111110011010001010111010)))
(assert (= y (fp #b1 #b01101100100 #b1111100010010111001000111011001100100011110011000000)))
(assert (= r (fp #b0 #b01101110001 #b0100011101010101110000001001100010110111110001001011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
