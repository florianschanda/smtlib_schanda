(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.266132427905517499056031738291494548320770263671875p491 {+ 1198553903146494 491 (8.09482e+147)}
; Y = 1.1771130189779068775379755606991238892078399658203125p-291 {+ 797646126271365 -291 (2.95862e-088)}
; 1.266132427905517499056031738291494548320770263671875p491 - 1.1771130189779068775379755606991238892078399658203125p-291 == 1.266132427905517499056031738291494548320770263671875p491
; [HW: 1.266132427905517499056031738291494548320770263671875p491] 

; mpf : + 1198553903146494 491
; mpfd: + 1198553903146494 491 (8.09482e+147) class: Pos. norm. non-zero
; hwf : + 1198553903146494 491 (8.09482e+147) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101010 #b0100010000100001010000010011101001000010010111111110)))
(assert (= y (fp #b0 #b01011011100 #b0010110101010111010001110110000000110100101110000101)))
(assert (= r (fp #b0 #b10111101010 #b0100010000100001010000010011101001000010010111111110)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
