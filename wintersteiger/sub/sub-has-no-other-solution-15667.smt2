(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.81662374002369997327832606970332562923431396484375p639 {+ 3677746371272636 639 (4.14412e+192)}
; Y = -1.4427823525810368199273625577916391193866729736328125p273 {- 1994114438090189 273 (-2.18973e+082)}
; 1.81662374002369997327832606970332562923431396484375p639 - -1.4427823525810368199273625577916391193866729736328125p273 == 1.81662374002369997327832606970332562923431396484375p639
; [HW: 1.81662374002369997327832606970332562923431396484375p639] 

; mpf : + 3677746371272636 639
; mpfd: + 3677746371272636 639 (4.14412e+192) class: Pos. norm. non-zero
; hwf : + 3677746371272636 639 (4.14412e+192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111110 #b1101000100001110010000001110000010001001111110111100)))
(assert (= y (fp #b1 #b10100010000 #b0111000101011010001011110010101110010100110111001101)))
(assert (= r (fp #b0 #b11001111110 #b1101000100001110010000001110000010001001111110111100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
