(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.753902477647937274696232634596526622772216796875p-759 {+ 3395274917408944 -759 (5.78414e-229)}
; Y = 1.81877435987656976834614397375844419002532958984375p904 {+ 3687431902040636 904 (2.45977e+272)}
; 1.753902477647937274696232634596526622772216796875p-759 - 1.81877435987656976834614397375844419002532958984375p904 == -1.81877435987656976834614397375844419002532958984375p904
; [HW: -1.81877435987656976834614397375844419002532958984375p904] 

; mpf : - 3687431902040636 904
; mpfd: - 3687431902040636 904 (-2.45977e+272) class: Neg. norm. non-zero
; hwf : - 3687431902040636 904 (-2.45977e+272) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001000 #b1100000011111111110000001011010111011111000010110000)))
(assert (= y (fp #b0 #b11110000111 #b1101000110011011001100100100101001111001001000111100)))
(assert (= r (fp #b1 #b11110000111 #b1101000110011011001100100100101001111001001000111100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
