(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7987402935116205693333313320181332528591156005859375p-218 {+ 3597206488224735 -218 (4.27002e-066)}
; Y = 1.982630699606789281830288018682040274143218994140625p866 {+ 4425375252591946 866 (9.75479e+260)}
; 1.7987402935116205693333313320181332528591156005859375p-218 - 1.982630699606789281830288018682040274143218994140625p866 == -1.9826306996067890597856830936507321894168853759765625p866
; [HW: -1.9826306996067890597856830936507321894168853759765625p866] 

; mpf : - 4425375252591945 866
; mpfd: - 4425375252591945 866 (-9.75479e+260) class: Neg. norm. non-zero
; hwf : - 4425375252591945 866 (-9.75479e+260) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100100101 #b1100110001111010001111100110111010100001001111011111)))
(assert (= y (fp #b0 #b11101100001 #b1111101110001101101011110111111011011011010101001010)))
(assert (= r (fp #b1 #b11101100001 #b1111101110001101101011110111111011011011010101001001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
