(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2526980214453173889666004470200277864933013916015625p329 {+ 1138050715218393 329 (1.36998e+099)}
; Y = 1.2699603948999358404847725978470407426357269287109375p24 {+ 1215793533876143 24 (2.13064e+007)}
; 1.2526980214453173889666004470200277864933013916015625p329 - 1.2699603948999358404847725978470407426357269287109375p24 == 1.2526980214453173889666004470200277864933013916015625p329
; [HW: 1.2526980214453173889666004470200277864933013916015625p329] 

; mpf : + 1138050715218393 329
; mpfd: + 1138050715218393 329 (1.36998e+099) class: Pos. norm. non-zero
; hwf : + 1138050715218393 329 (1.36998e+099) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001000 #b0100000010110000110100010100100111011111000111011001)))
(assert (= y (fp #b0 #b10000010111 #b0100010100011100000111111101101101001111011110101111)))
(assert (= r (fp #b0 #b10101001000 #b0100000010110000110100010100100111011111000111011001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
