(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.93678851275460583991616658749990165233612060546875p111 {- 4218920396966604 111 (-5.02819e+033)}
; Y = 1.8211501156599954054371437450754456222057342529296875p-728 {+ 3698131354901595 -728 (1.28976e-219)}
; -1.93678851275460583991616658749990165233612060546875p111 - 1.8211501156599954054371437450754456222057342529296875p-728 == -1.93678851275460583991616658749990165233612060546875p111
; [HW: -1.93678851275460583991616658749990165233612060546875p111] 

; mpf : - 4218920396966604 111
; mpfd: - 4218920396966604 111 (-5.02819e+033) class: Neg. norm. non-zero
; hwf : - 4218920396966604 111 (-5.02819e+033) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101110 #b1110111111010001010111110011100110001100101011001100)))
(assert (= y (fp #b0 #b00100100111 #b1101001000110110111001001101101111011101110001011011)))
(assert (= r (fp #b1 #b10001101110 #b1110111111010001010111110011100110001100101011001100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
