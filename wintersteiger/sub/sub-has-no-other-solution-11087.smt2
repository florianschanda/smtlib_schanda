(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.187937789946470701352154719643294811248779296875p716 {- 846396560771760 716 (-4.09516e+215)}
; Y = -1.0277492003190704661363952254760079085826873779296875p799 {- 124971288216795 799 (-3.42652e+240)}
; -1.187937789946470701352154719643294811248779296875p716 - -1.0277492003190704661363952254760079085826873779296875p799 == 1.0277492003190704661363952254760079085826873779296875p799
; [HW: 1.0277492003190704661363952254760079085826873779296875p799] 

; mpf : + 124971288216795 799
; mpfd: + 124971288216795 799 (3.42652e+240) class: Pos. norm. non-zero
; hwf : + 124971288216795 799 (3.42652e+240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001011 #b0011000000011100101100001110010110000000101010110000)))
(assert (= y (fp #b1 #b11100011110 #b0000011100011010100100100101001111011100010011011011)))
(assert (= r (fp #b0 #b11100011110 #b0000011100011010100100100101001111011100010011011011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
