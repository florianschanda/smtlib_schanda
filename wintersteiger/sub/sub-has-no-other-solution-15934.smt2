(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8393495036195559588776404780219309031963348388671875p195 {- 3780094111734643 195 (-9.23663e+058)}
; Y = -1.8076250529502078112642493579187430441379547119140625p-250 {- 3637219887521633 -250 (-9.99101e-076)}
; -1.8393495036195559588776404780219309031963348388671875p195 - -1.8076250529502078112642493579187430441379547119140625p-250 == -1.8393495036195559588776404780219309031963348388671875p195
; [HW: -1.8393495036195559588776404780219309031963348388671875p195] 

; mpf : - 3780094111734643 195
; mpfd: - 3780094111734643 195 (-9.23663e+058) class: Neg. norm. non-zero
; hwf : - 3780094111734643 195 (-9.23663e+058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000010 #b1101011011011111100110111110101111110101101101110011)))
(assert (= y (fp #b1 #b01100000101 #b1100111011000000100000111111010111011001111101100001)))
(assert (= r (fp #b1 #b10011000010 #b1101011011011111100110111110101111110101101101110011)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
