(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8835422373663630590812090304098092019557952880859375p201 {+ 3979120490969247 201 (6.05347e+060)}
; Y = -1.1039591429774286979181852075271308422088623046875p-391 {- 468190357574904 -391 (-2.18889e-118)}
; 1.8835422373663630590812090304098092019557952880859375p201 - -1.1039591429774286979181852075271308422088623046875p-391 == 1.8835422373663630590812090304098092019557952880859375p201
; [HW: 1.8835422373663630590812090304098092019557952880859375p201] 

; mpf : + 3979120490969247 201
; mpfd: + 3979120490969247 201 (6.05347e+060) class: Pos. norm. non-zero
; hwf : + 3979120490969247 201 (6.05347e+060) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011001000 #b1110001000101111110100101111011000011111100010011111)))
(assert (= y (fp #b1 #b01001111000 #b0001101010011101000100001111111100110101010011111000)))
(assert (= r (fp #b0 #b10011001000 #b1110001000101111110100101111011000011111100010011111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
