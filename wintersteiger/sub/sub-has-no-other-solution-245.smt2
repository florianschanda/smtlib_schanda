(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0485368250789954824853111858828924596309661865234375p-105 {+ 218590427339511 -105 (2.58484e-032)}
; Y = -1.9023701369674406169707481240038760006427764892578125p532 {- 4063913812596829 532 (-2.67456e+160)}
; 1.0485368250789954824853111858828924596309661865234375p-105 - -1.9023701369674406169707481240038760006427764892578125p532 == 1.9023701369674406169707481240038760006427764892578125p532
; [HW: 1.9023701369674406169707481240038760006427764892578125p532] 

; mpf : + 4063913812596829 532
; mpfd: + 4063913812596829 532 (2.67456e+160) class: Pos. norm. non-zero
; hwf : + 4063913812596829 532 (2.67456e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010110 #b0000110001101100111010001100110001011101101011110111)))
(assert (= y (fp #b1 #b11000010011 #b1110011100000001101110101011001100101001100001011101)))
(assert (= r (fp #b0 #b11000010011 #b1110011100000001101110101011001100101001100001011101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
