(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.762412925628620286033765296451747417449951171875p-461 {- 3433602567763504 -461 (-2.95992e-139)}
; Y = 1.226357304510681700548957451246678829193115234375p54 {+ 1019422672246896 54 (2.20921e+016)}
; -1.762412925628620286033765296451747417449951171875p-461 - 1.226357304510681700548957451246678829193115234375p54 == -1.226357304510681700548957451246678829193115234375p54
; [HW: -1.226357304510681700548957451246678829193115234375p54] 

; mpf : - 1019422672246896 54
; mpfd: - 1019422672246896 54 (-2.20921e+016) class: Neg. norm. non-zero
; hwf : - 1019422672246896 54 (-2.20921e+016) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110010 #b1100001100101101011111100101010110011111011000110000)))
(assert (= y (fp #b0 #b10000110101 #b0011100111110010100011010110010000010101100001110000)))
(assert (= r (fp #b1 #b10000110101 #b0011100111110010100011010110010000010101100001110000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
