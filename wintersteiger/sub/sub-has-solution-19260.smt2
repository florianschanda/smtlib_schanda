(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.220739213074823137361590852378867566585540771484375p765 {+ 994121037749830 765 (2.36902e+230)}
; Y = 1.31631573890252440151016344316303730010986328125p-232 {+ 1424559443852832 -232 (1.90722e-070)}
; 1.220739213074823137361590852378867566585540771484375p765 - 1.31631573890252440151016344316303730010986328125p-232 == 1.220739213074823137361590852378867566585540771484375p765
; [HW: 1.220739213074823137361590852378867566585540771484375p765] 

; mpf : + 994121037749830 765
; mpfd: + 994121037749830 765 (2.36902e+230) class: Pos. norm. non-zero
; hwf : + 994121037749830 765 (2.36902e+230) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111100 #b0011100010000010010111010111010100011001111001000110)))
(assert (= y (fp #b0 #b01100010111 #b0101000011111010000100010111100111001011111000100000)))
(assert (= r (fp #b0 #b11011111100 #b0011100010000010010111010111010100011001111001000110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
