(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9110392527367074944066871466930024325847625732421875p410 {- 4102956039144931 410 (-5.05322e+123)}
; Y = -1.6780577731830941257129552468541078269481658935546875p-513 {- 3053700734643051 -513 (-6.25776e-155)}
; -1.9110392527367074944066871466930024325847625732421875p410 - -1.6780577731830941257129552468541078269481658935546875p-513 == -1.9110392527367074944066871466930024325847625732421875p410
; [HW: -1.9110392527367074944066871466930024325847625732421875p410] 

; mpf : - 4102956039144931 410
; mpfd: - 4102956039144931 410 (-5.05322e+123) class: Neg. norm. non-zero
; hwf : - 4102956039144931 410 (-5.05322e+123) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011001 #b1110100100111001110111100101001111100000010111100011)))
(assert (= y (fp #b1 #b00111111110 #b1010110110010101001100011011100010011110101101101011)))
(assert (= r (fp #b1 #b10110011001 #b1110100100111001110111100101001111100000010111100011)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
