(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4415397298215661958664668418350629508495330810546875p-1000 {- 1988518162693675 -1000 (-1.34534e-301)}
; Y = -1.843482159664887376493425108492374420166015625p-380 {- 3798705939960448 -380 (-7.48584e-115)}
; -1.4415397298215661958664668418350629508495330810546875p-1000 - -1.843482159664887376493425108492374420166015625p-380 == 1.843482159664887376493425108492374420166015625p-380
; [HW: 1.843482159664887376493425108492374420166015625p-380] 

; mpf : + 3798705939960448 -380
; mpfd: + 3798705939960448 -380 (7.48584e-115) class: Pos. norm. non-zero
; hwf : + 3798705939960448 -380 (7.48584e-115) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000010111 #b0111000100001000101111110110101101110111111000101011)))
(assert (= y (fp #b1 #b01010000011 #b1101011111101110011100100110001010000101001010000000)))
(assert (= r (fp #b0 #b01010000011 #b1101011111101110011100100110001010000101001010000000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
