(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7511188562645474409151802319684065878391265869140625p427 {+ 3382738601183969 427 (6.06909e+128)}
; Y = -1.927486758593983662279924828908406198024749755859375p169 {- 4177029020394934 169 (-1.44232e+051)}
; 1.7511188562645474409151802319684065878391265869140625p427 - -1.927486758593983662279924828908406198024749755859375p169 == 1.7511188562645474409151802319684065878391265869140625p427
; [HW: 1.7511188562645474409151802319684065878391265869140625p427] 

; mpf : + 3382738601183969 427
; mpfd: + 3382738601183969 427 (6.06909e+128) class: Pos. norm. non-zero
; hwf : + 3382738601183969 427 (6.06909e+128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101010 #b1100000001001001010100110100101100010000101011100001)))
(assert (= y (fp #b1 #b10010101000 #b1110110101101111110001011010111110100010010110110110)))
(assert (= r (fp #b0 #b10110101010 #b1100000001001001010100110100101100010000101011100001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
