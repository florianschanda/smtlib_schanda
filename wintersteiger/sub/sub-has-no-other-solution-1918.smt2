(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6353190039766285490685504555585794150829315185546875p-30 {- 2861222429570539 -30 (-1.52301e-009)}
; Y = -1.6941948017256829306376175736659206449985504150390625p47 {- 3126375450374321 47 (-2.38437e+014)}
; -1.6353190039766285490685504555585794150829315185546875p-30 - -1.6941948017256829306376175736659206449985504150390625p47 == 1.694194801725682708593012648634612560272216796875p47
; [HW: 1.694194801725682708593012648634612560272216796875p47] 

; mpf : + 3126375450374320 47
; mpfd: + 3126375450374320 47 (2.38437e+014) class: Pos. norm. non-zero
; hwf : + 3126375450374320 47 (2.38437e+014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100001 #b1010001010100100010001000010100010011011010111101011)))
(assert (= y (fp #b1 #b10000101110 #b1011000110110110110000000010001001110111000010110001)))
(assert (= r (fp #b0 #b10000101110 #b1011000110110110110000000010001001110111000010110000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
