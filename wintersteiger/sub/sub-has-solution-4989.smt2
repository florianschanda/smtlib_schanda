(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5930470557756508664937200592248700559139251708984375p-347 {- 2670846499404391 -347 (-5.55674e-105)}
; Y = -1.9974625113228920980645852978341281414031982421875p-880 {- 4492171794309816 -880 (-2.47789e-265)}
; -1.5930470557756508664937200592248700559139251708984375p-347 - -1.9974625113228920980645852978341281414031982421875p-880 == -1.593047055775650644449115134193561971187591552734375p-347
; [HW: -1.593047055775650644449115134193561971187591552734375p-347] 

; mpf : - 2670846499404390 -347
; mpfd: - 2670846499404390 -347 (-5.55674e-105) class: Neg. norm. non-zero
; hwf : - 2670846499404390 -347 (-5.55674e-105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100100 #b1001011111010001111011101000110110001011101001100111)))
(assert (= y (fp #b1 #b00010001111 #b1111111101011001101101000000000100011110001010111000)))
(assert (= r (fp #b1 #b01010100100 #b1001011111010001111011101000110110001011101001100110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
