(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4727893383189945009092980399145744740962982177734375p-533 {+ 2129253887878167 -533 (5.23785e-161)}
; Y = 1.911442683188693703044691574177704751491546630859375p67 {+ 4104772928378166 67 (2.82079e+020)}
; 1.4727893383189945009092980399145744740962982177734375p-533 - 1.911442683188693703044691574177704751491546630859375p67 == -1.911442683188693703044691574177704751491546630859375p67
; [HW: -1.911442683188693703044691574177704751491546630859375p67] 

; mpf : - 4104772928378166 67
; mpfd: - 4104772928378166 67 (-2.82079e+020) class: Neg. norm. non-zero
; hwf : - 4104772928378166 67 (-2.82079e+020) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101010 #b0111100100001000101110001101100111111010010000010111)))
(assert (= y (fp #b0 #b10001000010 #b1110100101010100010011101100010001111001010100110110)))
(assert (= r (fp #b1 #b10001000010 #b1110100101010100010011101100010001111001010100110110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
