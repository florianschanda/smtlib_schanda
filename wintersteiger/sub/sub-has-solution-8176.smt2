(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.32996207058759541297376927104778587818145751953125p-320 {+ 1486017058144692 -320 (6.22645e-097)}
; Y = 1.740416283951064624346827258705161511898040771484375p-526 {+ 3334538500501062 -526 (7.92274e-159)}
; 1.32996207058759541297376927104778587818145751953125p-320 - 1.740416283951064624346827258705161511898040771484375p-526 == 1.32996207058759541297376927104778587818145751953125p-320
; [HW: 1.32996207058759541297376927104778587818145751953125p-320] 

; mpf : + 1486017058144692 -320
; mpfd: + 1486017058144692 -320 (6.22645e-097) class: Pos. norm. non-zero
; hwf : + 1486017058144692 -320 (6.22645e-097) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010111111 #b0101010001111000011001001110111000011000000110110100)))
(assert (= y (fp #b0 #b00111110001 #b1011110110001011111010111110110011111110111001000110)))
(assert (= r (fp #b0 #b01010111111 #b0101010001111000011001001110111000011000000110110100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
