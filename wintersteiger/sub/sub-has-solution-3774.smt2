(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.05598565520953879826038246392272412776947021484375p375 {- 252136975939772 375 (-8.12655e+112)}
; Y = -1.954399322145597306388253855402581393718719482421875p-931 {- 4298232431577566 -931 (-1.07668e-280)}
; -1.05598565520953879826038246392272412776947021484375p375 - -1.954399322145597306388253855402581393718719482421875p-931 == -1.0559856552095385762157775388914160430431365966796875p375
; [HW: -1.0559856552095385762157775388914160430431365966796875p375] 

; mpf : - 252136975939771 375
; mpfd: - 252136975939771 375 (-8.12655e+112) class: Neg. norm. non-zero
; hwf : - 252136975939771 375 (-8.12655e+112) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101110110 #b0000111001010101000100110110111000101011100010111100)))
(assert (= y (fp #b1 #b00001011100 #b1111010001010011100000111001001111110000100111011110)))
(assert (= r (fp #b1 #b10101110110 #b0000111001010101000100110110111000101011100010111011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
