(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.309367262502623585618266588426195085048675537109375p-961 {- 1393266288127446 -961 (-6.71793e-290)}
; Y = 1.044705248886807158470446665887720882892608642578125p664 {+ 201334542228130 664 (7.9967e+199)}
; -1.309367262502623585618266588426195085048675537109375p-961 - 1.044705248886807158470446665887720882892608642578125p664 == -1.044705248886807158470446665887720882892608642578125p664
; [HW: -1.044705248886807158470446665887720882892608642578125p664] 

; mpf : - 201334542228130 664
; mpfd: - 201334542228130 664 (-7.9967e+199) class: Neg. norm. non-zero
; hwf : - 201334542228130 664 (-7.9967e+199) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111110 #b0100111100110010101100010110001011100110110111010110)))
(assert (= y (fp #b0 #b11010010111 #b0000101101110001110011011001110111101101101010100010)))
(assert (= r (fp #b1 #b11010010111 #b0000101101110001110011011001110111101101101010100010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
