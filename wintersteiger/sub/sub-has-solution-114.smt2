(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9048968567670045981543580637662671506404876708984375p731 {+ 4075293146944615 731 (2.15178e+220)}
; Y = -1.9817971710981872046630769546027295291423797607421875p763 {- 4421621373911203 763 (-9.61492e+229)}
; 1.9048968567670045981543580637662671506404876708984375p731 - -1.9817971710981872046630769546027295291423797607421875p763 == 1.9817971715417055378338773152790963649749755859375p763
; [HW: 1.9817971715417055378338773152790963649749755859375p763] 

; mpf : + 4421621375908632 763
; mpfd: + 4421621375908632 763 (9.61492e+229) class: Pos. norm. non-zero
; hwf : + 4421621375908632 763 (9.61492e+229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011010 #b1110011110100111010100100000011000010001010001100111)))
(assert (= y (fp #b1 #b11011111010 #b1111101101010111000011110011010100101100000010100011)))
(assert (= r (fp #b0 #b11011111010 #b1111101101010111000011110011011100010011101100011000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
