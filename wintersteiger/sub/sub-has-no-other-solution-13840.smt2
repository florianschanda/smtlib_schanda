(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2282651004776872216694982853368856012821197509765625p780 {+ 1028014621453001 780 (7.81068e+234)}
; Y = -0.0842379206018499804287102961097843945026397705078125p-1022 {- 379373867832957 -1023 (-1.87436e-309)}
; 1.2282651004776872216694982853368856012821197509765625p780 - -0.0842379206018499804287102961097843945026397705078125p-1022 == 1.2282651004776872216694982853368856012821197509765625p780
; [HW: 1.2282651004776872216694982853368856012821197509765625p780] 

; mpf : + 1028014621453001 780
; mpfd: + 1028014621453001 780 (7.81068e+234) class: Pos. norm. non-zero
; hwf : + 1028014621453001 780 (7.81068e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001011 #b0011101001101111100101001110010101011110101011001001)))
(assert (= y (fp #b1 #b00000000000 #b0001010110010000100111011100101000010001011001111101)))
(assert (= r (fp #b0 #b11100001011 #b0011101001101111100101001110010101011110101011001001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
