(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.46180257518095491064968882710672914981842041015625p143 {+ 2079773905503684 143 (1.62996e+043)}
; Y = 1.3291048290052993596788155628019012510776519775390625p959 {+ 1482156385274097 959 (6.47627e+288)}
; 1.46180257518095491064968882710672914981842041015625p143 - 1.3291048290052993596788155628019012510776519775390625p959 == -1.3291048290052993596788155628019012510776519775390625p959
; [HW: -1.3291048290052993596788155628019012510776519775390625p959] 

; mpf : - 1482156385274097 959
; mpfd: - 1482156385274097 959 (-6.47627e+288) class: Neg. norm. non-zero
; hwf : - 1482156385274097 959 (-6.47627e+288) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001110 #b0111011000111000101100011000110110011100010111000100)))
(assert (= y (fp #b0 #b11110111110 #b0101010001000000001101101100110110001000100011110001)))
(assert (= r (fp #b1 #b11110111110 #b0101010001000000001101101100110110001000100011110001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
