(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3498893751939069485246136537170968949794769287109375p980 {- 1575761659744175 980 (-1.37941e+295)}
; Y = 1.2900703203227952275966572415200062096118927001953125p980 {+ 1306360586516981 980 (1.31828e+295)}
; -1.3498893751939069485246136537170968949794769287109375p980 - 1.2900703203227952275966572415200062096118927001953125p980 == -1.319979847758351088060635447618551552295684814453125p981
; [HW: -1.319979847758351088060635447618551552295684814453125p981] 

; mpf : - 1441061123130578 981
; mpfd: - 1441061123130578 981 (-2.6977e+295) class: Neg. norm. non-zero
; hwf : - 1441061123130578 981 (-2.6977e+295) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010011 #b0101100110010010010110011001111110101100111110101111)))
(assert (= y (fp #b0 #b11111010011 #b0100101001000010000011000110101101010011100111110101)))
(assert (= r (fp #b1 #b11111010100 #b0101000111101010001100110000010110000000010011010010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
