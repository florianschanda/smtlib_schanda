(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9440497706278800915669080495717935264110565185546875p722 {+ 4251622195218923 722 (4.28908e+217)}
; Y = -1.2315463523678540358474720051162876188755035400390625p-651 {- 1042792066242865 -651 (-1.31802e-196)}
; 1.9440497706278800915669080495717935264110565185546875p722 - -1.2315463523678540358474720051162876188755035400390625p-651 == 1.94404977062788031361151297460310161113739013671875p722
; [HW: 1.94404977062788031361151297460310161113739013671875p722] 

; mpf : + 4251622195218924 722
; mpfd: + 4251622195218924 722 (4.28908e+217) class: Pos. norm. non-zero
; hwf : + 4251622195218924 722 (4.28908e+217) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010001 #b1111000110101101001111101110101010100100100111101011)))
(assert (= y (fp #b1 #b00101110100 #b0011101101000110100111110010101011101101100100110001)))
(assert (= r (fp #b0 #b11011010001 #b1111000110101101001111101110101010100100100111101100)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
