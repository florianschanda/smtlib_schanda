(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.98153072373240579651110238046385347843170166015625p-255 {- 4420421401653956 -255 (-3.42257e-077)}
; Y = -1.3004803566369667056079606481944210827350616455078125p682 {- 1353243222182397 682 (-2.60952e+205)}
; -1.98153072373240579651110238046385347843170166015625p-255 - -1.3004803566369667056079606481944210827350616455078125p682 == 1.30048035663696648356335572316311299800872802734375p682
; [HW: 1.30048035663696648356335572316311299800872802734375p682] 

; mpf : + 1353243222182396 682
; mpfd: + 1353243222182396 682 (2.60952e+205) class: Pos. norm. non-zero
; hwf : + 1353243222182396 682 (2.60952e+205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000000 #b1111101101000101100110001111011001110011001011000100)))
(assert (= y (fp #b1 #b11010101001 #b0100110011101100010001111101100011011000100111111101)))
(assert (= r (fp #b0 #b11010101001 #b0100110011101100010001111101100011011000100111111100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
