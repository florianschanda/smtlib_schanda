(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5621185988353403217843151651322841644287109375p331 {+ 2531557112252864 331 (6.83349e+099)}
; Y = -1.72740848096447763282412779517471790313720703125p115 {- 3275956563817760 115 (-7.17537e+034)}
; 1.5621185988353403217843151651322841644287109375p331 - -1.72740848096447763282412779517471790313720703125p115 == 1.5621185988353403217843151651322841644287109375p331
; [HW: 1.5621185988353403217843151651322841644287109375p331] 

; mpf : + 2531557112252864 331
; mpfd: + 2531557112252864 331 (6.83349e+099) class: Pos. norm. non-zero
; hwf : + 2531557112252864 331 (6.83349e+099) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001010 #b1000111111100111000000010010011001111000100111000000)))
(assert (= y (fp #b1 #b10001110010 #b1011101000110111011100010011010010010011010100100000)))
(assert (= r (fp #b0 #b10101001010 #b1000111111100111000000010010011001111000100111000000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
