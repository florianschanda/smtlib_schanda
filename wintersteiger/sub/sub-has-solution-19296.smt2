(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7129986137278823132845673171686939895153045654296875p384 {- 3211060291100571 384 (-6.74956e+115)}
; Y = 1.762373838171497286708699903101660311222076416015625p-218 {+ 3433426533506170 -218 (4.18369e-066)}
; -1.7129986137278823132845673171686939895153045654296875p384 - 1.762373838171497286708699903101660311222076416015625p-218 == -1.71299861372788253532917224220000207424163818359375p384
; [HW: -1.71299861372788253532917224220000207424163818359375p384] 

; mpf : - 3211060291100572 384
; mpfd: - 3211060291100572 384 (-6.74956e+115) class: Neg. norm. non-zero
; hwf : - 3211060291100572 384 (-6.74956e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111111 #b1011011010000111000100111100000000001101111110011011)))
(assert (= y (fp #b0 #b01100100101 #b1100001100101010111011101000111001000101110001111010)))
(assert (= r (fp #b1 #b10101111111 #b1011011010000111000100111100000000001101111110011100)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
