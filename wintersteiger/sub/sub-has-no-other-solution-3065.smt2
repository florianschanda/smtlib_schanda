(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7640891522989179396319059378583915531635284423828125p339 {+ 3441151621571245 339 (1.97555e+102)}
; Y = 1.4399527156159319662975804021698422729969024658203125p-756 {+ 1981370886108549 -756 (3.79902e-228)}
; 1.7640891522989179396319059378583915531635284423828125p339 - 1.4399527156159319662975804021698422729969024658203125p-756 == 1.76408915229891771758730101282708346843719482421875p339
; [HW: 1.76408915229891771758730101282708346843719482421875p339] 

; mpf : + 3441151621571244 339
; mpfd: + 3441151621571244 339 (1.97555e+102) class: Pos. norm. non-zero
; hwf : + 3441151621571244 339 (1.97555e+102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010010 #b1100001110011011010110001100000001011010001010101101)))
(assert (= y (fp #b0 #b00100001011 #b0111000010100000101111011011110101011011010110000101)))
(assert (= r (fp #b0 #b10101010010 #b1100001110011011010110001100000001011010001010101100)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
