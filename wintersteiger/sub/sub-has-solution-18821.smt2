(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1538686627108682980491494163288734853267669677734375p-554 {- 692962852048663 -554 (-1.95677e-167)}
; Y = -1.113214030059484827006599516607820987701416015625p193 {- 509870663589008 193 (-1.39755e+058)}
; -1.1538686627108682980491494163288734853267669677734375p-554 - -1.113214030059484827006599516607820987701416015625p193 == 1.1132140300594846049619945915765129029750823974609375p193
; [HW: 1.1132140300594846049619945915765129029750823974609375p193] 

; mpf : + 509870663589007 193
; mpfd: + 509870663589007 193 (1.39755e+058) class: Pos. norm. non-zero
; hwf : + 509870663589007 193 (1.39755e+058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010101 #b0010011101100011111011111100101000111000111100010111)))
(assert (= y (fp #b1 #b10011000000 #b0001110011111011100110000011110010001101110010010000)))
(assert (= r (fp #b0 #b10011000000 #b0001110011111011100110000011110010001101110010001111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
