(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0509039083271509706918322990532033145427703857421875p-395 {- 229250822573859 -395 (-1.30231e-119)}
; Y = 1.088317788148858600294488496729172766208648681640625p396 {+ 397747957797386 396 (1.75644e+119)}
; -1.0509039083271509706918322990532033145427703857421875p-395 - 1.088317788148858600294488496729172766208648681640625p396 == -1.088317788148858600294488496729172766208648681640625p396
; [HW: -1.088317788148858600294488496729172766208648681640625p396] 

; mpf : - 397747957797386 396
; mpfd: - 397747957797386 396 (-1.75644e+119) class: Neg. norm. non-zero
; hwf : - 397747957797386 396 (-1.75644e+119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001110100 #b0000110100001000000010011101110110000000111100100011)))
(assert (= y (fp #b0 #b10110001011 #b0001011010011011111111101001101111000001001000001010)))
(assert (= r (fp #b1 #b10110001011 #b0001011010011011111111101001101111000001001000001010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
