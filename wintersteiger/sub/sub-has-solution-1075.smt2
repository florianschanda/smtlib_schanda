(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.258868944957348023905296940938569605350494384765625p433 {+ 1165842084047706 433 (2.79234e+130)}
; Y = -1.5600795764512016550185080632218159735202789306640625p-512 {- 2522374171803457 -512 (-1.16356e-154)}
; 1.258868944957348023905296940938569605350494384765625p433 - -1.5600795764512016550185080632218159735202789306640625p-512 == 1.258868944957348023905296940938569605350494384765625p433
; [HW: 1.258868944957348023905296940938569605350494384765625p433] 

; mpf : + 1165842084047706 433
; mpfd: + 1165842084047706 433 (2.79234e+130) class: Pos. norm. non-zero
; hwf : + 1165842084047706 433 (2.79234e+130) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110000 #b0100001001000101001111000011010010001010101101011010)))
(assert (= y (fp #b1 #b00111111111 #b1000111101100001011000000000100000000011111101000001)))
(assert (= r (fp #b0 #b10110110000 #b0100001001000101001111000011010010001010101101011010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
