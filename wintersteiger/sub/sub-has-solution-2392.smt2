(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7209754867967614888613070434075780212879180908203125p-50 {+ 3246984933681157 -50 (1.52853e-015)}
; Y = 1.34411376751967992504432913847267627716064453125p927 {+ 1549750635174688 927 (1.5249e+279)}
; 1.7209754867967614888613070434075780212879180908203125p-50 - 1.34411376751967992504432913847267627716064453125p927 == -1.34411376751967992504432913847267627716064453125p927
; [HW: -1.34411376751967992504432913847267627716064453125p927] 

; mpf : - 1549750635174688 927
; mpfd: - 1549750635174688 927 (-1.5249e+279) class: Neg. norm. non-zero
; hwf : - 1549750635174688 927 (-1.5249e+279) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111001101 #b1011100010010001110110010111100100000010100000000101)))
(assert (= y (fp #b0 #b11110011110 #b0101100000010111110101110000000110011001101100100000)))
(assert (= r (fp #b1 #b11110011110 #b0101100000010111110101110000000110011001101100100000)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
