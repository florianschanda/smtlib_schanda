(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5962581591975091299673294997774064540863037109375p-825 {+ 2685308023578520 -825 (7.13439e-249)}
; Y = 1.7441688028028732304619552451185882091522216796875p-355 {+ 3351438343003768 -355 (2.37651e-107)}
; 1.5962581591975091299673294997774064540863037109375p-825 - 1.7441688028028732304619552451185882091522216796875p-355 == -1.7441688028028730084173503200872801244258880615234375p-355
; [HW: -1.7441688028028730084173503200872801244258880615234375p-355] 

; mpf : - 3351438343003767 -355
; mpfd: - 3351438343003767 -355 (-2.37651e-107) class: Neg. norm. non-zero
; hwf : - 3351438343003767 -355 (-2.37651e-107) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000110 #b1001100010100100010111111110110110111001111110011000)))
(assert (= y (fp #b0 #b01010011100 #b1011111010000001110110001011111010111101111001111000)))
(assert (= r (fp #b1 #b01010011100 #b1011111010000001110110001011111010111101111001110111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
