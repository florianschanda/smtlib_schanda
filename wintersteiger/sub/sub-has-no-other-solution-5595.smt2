(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7376901631397030367764955371967516839504241943359375p-230 {+ 3322261143830847 -230 (1.0071e-069)}
; Y = -1.9065595259091079327617990202270448207855224609375p-530 {- 4082781143073432 -530 (-5.42441e-160)}
; 1.7376901631397030367764955371967516839504241943359375p-230 - -1.9065595259091079327617990202270448207855224609375p-530 == 1.7376901631397030367764955371967516839504241943359375p-230
; [HW: 1.7376901631397030367764955371967516839504241943359375p-230] 

; mpf : + 3322261143830847 -230
; mpfd: + 3322261143830847 -230 (1.0071e-069) class: Pos. norm. non-zero
; hwf : + 3322261143830847 -230 (1.0071e-069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011001 #b1011110011011001010000110011010101000100000100111111)))
(assert (= y (fp #b1 #b00111101101 #b1110100000010100010010001111101110101000001010011000)))
(assert (= r (fp #b0 #b01100011001 #b1011110011011001010000110011010101000100000100111111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
