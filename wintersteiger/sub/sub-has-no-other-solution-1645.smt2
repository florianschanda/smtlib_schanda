(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.30160276786067097276600179611705243587493896484375p324 {+ 1358298112951228 324 (4.44833e+097)}
; Y = -1.86264973525427546263699696282856166362762451171875p857 {- 3885029026242412 857 (-1.78994e+258)}
; 1.30160276786067097276600179611705243587493896484375p324 - -1.86264973525427546263699696282856166362762451171875p857 == 1.86264973525427546263699696282856166362762451171875p857
; [HW: 1.86264973525427546263699696282856166362762451171875p857] 

; mpf : + 3885029026242412 857
; mpfd: + 3885029026242412 857 (1.78994e+258) class: Pos. norm. non-zero
; hwf : + 3885029026242412 857 (1.78994e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000011 #b0100110100110101110101101100100001011000001110111100)))
(assert (= y (fp #b1 #b11101011000 #b1101110011010110100111001111000011010001111101101100)))
(assert (= r (fp #b0 #b11101011000 #b1101110011010110100111001111000011010001111101101100)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
