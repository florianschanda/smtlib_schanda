(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.838085546964663308244780637323856353759765625p-819 {+ 3774401757014656 -819 (5.25774e-247)}
; Y = -1.7627193511742209608428311184979975223541259765625p-117 {- 3434982585736488 -117 (-1.0609e-035)}
; 1.838085546964663308244780637323856353759765625p-819 - -1.7627193511742209608428311184979975223541259765625p-117 == 1.7627193511742209608428311184979975223541259765625p-117
; [HW: 1.7627193511742209608428311184979975223541259765625p-117] 

; mpf : + 3434982585736488 -117
; mpfd: + 3434982585736488 -117 (1.0609e-035) class: Pos. norm. non-zero
; hwf : + 3434982585736488 -117 (1.0609e-035) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001100 #b1101011010001100110001100011111101110110101010000000)))
(assert (= y (fp #b1 #b01110001010 #b1100001101000001100100110100110101010001110100101000)))
(assert (= r (fp #b0 #b01110001010 #b1100001101000001100100110100110101010001110100101000)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
