(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9757196599047526230918947476311586797237396240234375p858 {- 4394250696765111 858 (-3.79718e+258)}
; Y = 1.151231839116567012837322181439958512783050537109375p-333 {+ 681087654291926 -333 (6.57922e-101)}
; -1.9757196599047526230918947476311586797237396240234375p858 - 1.151231839116567012837322181439958512783050537109375p-333 == -1.9757196599047528451364996726624667644500732421875p858
; [HW: -1.9757196599047528451364996726624667644500732421875p858] 

; mpf : - 4394250696765112 858
; mpfd: - 4394250696765112 858 (-3.79718e+258) class: Neg. norm. non-zero
; hwf : - 4394250696765112 858 (-3.79718e+258) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101011001 #b1111100111001000110000110111110101011010111010110111)))
(assert (= y (fp #b0 #b01010110010 #b0010011010110111001000010011101100011110100111010110)))
(assert (= r (fp #b1 #b11101011001 #b1111100111001000110000110111110101011010111010111000)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
