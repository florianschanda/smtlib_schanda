(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9822068736713667203019895168836228549480438232421875p-972 {- 4423466510267107 -972 (-4.96585e-293)}
; Y = 1.5895025472395178933737724946695379912853240966796875p220 {+ 2654883452081851 220 (2.67831e+066)}
; -1.9822068736713667203019895168836228549480438232421875p-972 - 1.5895025472395178933737724946695379912853240966796875p220 == -1.5895025472395178933737724946695379912853240966796875p220
; [HW: -1.5895025472395178933737724946695379912853240966796875p220] 

; mpf : - 2654883452081851 220
; mpfd: - 2654883452081851 220 (-2.67831e+066) class: Neg. norm. non-zero
; hwf : - 2654883452081851 220 (-2.67831e+066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000110011 #b1111101101110001111010001110000001010011001011100011)))
(assert (= y (fp #b0 #b10011011011 #b1001011011101001101000111001000101001101011010111011)))
(assert (= r (fp #b1 #b10011011011 #b1001011011101001101000111001000101001101011010111011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
