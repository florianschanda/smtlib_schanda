(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.03324283366872204936726120649836957454681396484375p-965 {+ 149712413323196 -965 (3.31327e-291)}
; Y = -1.2495719946356427243472353438846766948699951171875p-978 {- 1123972342043192 -978 (-4.89131e-295)}
; 1.03324283366872204936726120649836957454681396484375p-965 - -1.2495719946356427243472353438846766948699951171875p-978 == 1.0333953693125985662248922380967997014522552490234375p-965
; [HW: 1.0333953693125985662248922380967997014522552490234375p-965] 

; mpf : + 150399372792119 -965
; mpfd: + 150399372792119 -965 (3.31376e-291) class: Pos. norm. non-zero
; hwf : + 150399372792119 -965 (3.31376e-291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000111010 #b0000100010000010100110100011001101101110111110111100)))
(assert (= y (fp #b1 #b00000101101 #b0011111111100011111100110100001011110101001000111000)))
(assert (= r (fp #b0 #b00000111010 #b0000100010001100100110010101001100001001000100110111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
