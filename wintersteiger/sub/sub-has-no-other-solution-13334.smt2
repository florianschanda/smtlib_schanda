(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5824565606685698782030158326961100101470947265625p653 {- 2623151149586472 653 (-5.91451e+196)}
; Y = -1.0949007370385539505974747953587211668491363525390625p956 {- 427394923964017 956 (-6.66884e+287)}
; -1.5824565606685698782030158326961100101470947265625p653 - -1.0949007370385539505974747953587211668491363525390625p956 == 1.0949007370385539505974747953587211668491363525390625p956
; [HW: 1.0949007370385539505974747953587211668491363525390625p956] 

; mpf : + 427394923964017 956
; mpfd: + 427394923964017 956 (6.66884e+287) class: Pos. norm. non-zero
; hwf : + 427394923964017 956 (6.66884e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001100 #b1001010100011011110111111000011101101001100000101000)))
(assert (= y (fp #b1 #b11110111011 #b0001100001001011011010100010100111110010011001110001)))
(assert (= r (fp #b0 #b11110111011 #b0001100001001011011010100010100111110010011001110001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
