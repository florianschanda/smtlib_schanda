(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.505293572283146641410667143645696341991424560546875p955 {+ 2275639943847086 955 (4.58424e+287)}
; Y = 1.434741638762105697679771765251643955707550048828125p542 {+ 1957902282331458 542 (2.06553e+163)}
; 1.505293572283146641410667143645696341991424560546875p955 - 1.434741638762105697679771765251643955707550048828125p542 == 1.505293572283146641410667143645696341991424560546875p955
; [HW: 1.505293572283146641410667143645696341991424560546875p955] 

; mpf : + 2275639943847086 955
; mpfd: + 2275639943847086 955 (4.58424e+287) class: Pos. norm. non-zero
; hwf : + 2275639943847086 955 (4.58424e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110111010 #b1000000101011010111010110110011111010101110010101110)))
(assert (= y (fp #b0 #b11000011101 #b0110111101001011001110100110000010110001010101000010)))
(assert (= r (fp #b0 #b11110111010 #b1000000101011010111010110110011111010101110010101110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
