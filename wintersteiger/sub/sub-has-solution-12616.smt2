(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.259964529684879153137444518506526947021484375p216 {+ 1170776159018368 216 (1.3269e+065)}
; Y = 1.261270996539488375987048129900358617305755615234375p139 {+ 1176659962657958 139 (8.78978e+041)}
; 1.259964529684879153137444518506526947021484375p216 - 1.261270996539488375987048129900358617305755615234375p139 == 1.2599645296848789310928395934752188622951507568359375p216
; [HW: 1.2599645296848789310928395934752188622951507568359375p216] 

; mpf : + 1170776159018367 216
; mpfd: + 1170776159018367 216 (1.3269e+065) class: Pos. norm. non-zero
; hwf : + 1170776159018367 216 (1.3269e+065) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011010111 #b0100001010001101000010010001000100011101110110000000)))
(assert (= y (fp #b0 #b10010001010 #b0100001011100010101001111111000110000111110010100110)))
(assert (= r (fp #b0 #b10011010111 #b0100001010001101000010010001000100011101110101111111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
