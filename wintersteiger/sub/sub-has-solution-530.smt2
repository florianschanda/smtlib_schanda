(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4329537378330077235233375176903791725635528564453125p516 {+ 1949850292373397 516 (3.07404e+155)}
; Y = 1.8620733523865802272467817601864226162433624267578125p978 {+ 3882433228574237 978 (4.75699e+294)}
; 1.4329537378330077235233375176903791725635528564453125p516 - 1.8620733523865802272467817601864226162433624267578125p978 == -1.86207335238658000520217683515511453151702880859375p978
; [HW: -1.86207335238658000520217683515511453151702880859375p978] 

; mpf : - 3882433228574236 978
; mpfd: - 3882433228574236 978 (-4.75699e+294) class: Neg. norm. non-zero
; hwf : - 3882433228574236 978 (-4.75699e+294) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000011 #b0110111011010110000011100110000010101100011110010101)))
(assert (= y (fp #b0 #b11111010001 #b1101110010110000110101101101011101000000111000011101)))
(assert (= r (fp #b1 #b11111010001 #b1101110010110000110101101101011101000000111000011100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
