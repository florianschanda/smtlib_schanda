(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8993875944421017010199648211710155010223388671875p-250 {+ 4050481635191096 -250 (1.04982e-075)}
; Y = 1.8577980361610004766959036714979447424411773681640625p640 {+ 3863178916013825 640 (8.47609e+192)}
; 1.8993875944421017010199648211710155010223388671875p-250 - 1.8577980361610004766959036714979447424411773681640625p640 == -1.8577980361610004766959036714979447424411773681640625p640
; [HW: -1.8577980361610004766959036714979447424411773681640625p640] 

; mpf : - 3863178916013825 640
; mpfd: - 3863178916013825 640 (-8.47609e+192) class: Neg. norm. non-zero
; hwf : - 3863178916013825 640 (-8.47609e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000101 #b1110011000111110010000111111000010001110100100111000)))
(assert (= y (fp #b0 #b11001111111 #b1101101110011000101001101110111111100010011100000001)))
(assert (= r (fp #b1 #b11001111111 #b1101101110011000101001101110111111100010011100000001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
