(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.64615900511337986955595624749548733234405517578125p917 {- 2910041454650708 917 (-1.8238e+276)}
; Y = -1.7414884687781360117497797546093352138996124267578125p-301 {- 3339367191688733 -301 (-4.27456e-091)}
; -1.64615900511337986955595624749548733234405517578125p917 - -1.7414884687781360117497797546093352138996124267578125p-301 == -1.6461590051133796475113513224641792476177215576171875p917
; [HW: -1.6461590051133796475113513224641792476177215576171875p917] 

; mpf : - 2910041454650707 917
; mpfd: - 2910041454650707 917 (-1.8238e+276) class: Neg. norm. non-zero
; hwf : - 2910041454650707 917 (-1.8238e+276) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110010100 #b1010010101101010101011010011001011111010010101010100)))
(assert (= y (fp #b1 #b01011010010 #b1011110111010010001100000011001111000011011000011101)))
(assert (= r (fp #b1 #b11110010100 #b1010010101101010101011010011001011111010010101010011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
