(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.65025710370633849066734910593368113040924072265625p868 {- 2928497649946884 868 (-3.24779e+261)}
; Y = 1.570822001319516658668362651951611042022705078125p922 {+ 2570753752437456 922 (5.56907e+277)}
; -1.65025710370633849066734910593368113040924072265625p868 - 1.570822001319516658668362651951611042022705078125p922 == -1.570822001319516658668362651951611042022705078125p922
; [HW: -1.570822001319516658668362651951611042022705078125p922] 

; mpf : - 2570753752437456 922
; mpfd: - 2570753752437456 922 (-5.56907e+277) class: Neg. norm. non-zero
; hwf : - 2570753752437456 922 (-5.56907e+277) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101100011 #b1010011001110111001111111110001001101001000100000100)))
(assert (= y (fp #b0 #b11110011001 #b1001001000100001011001000000001110000001001011010000)))
(assert (= r (fp #b1 #b11110011001 #b1001001000100001011001000000001110000001001011010000)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
