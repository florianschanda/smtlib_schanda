(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6279330295168008557737948649446479976177215576171875p-841 {- 2827958957745491 -841 (-1.11022e-253)}
; Y = -1.3981713204819314899651772066135890781879425048828125p-182 {- 1793204210552045 -182 (-2.28087e-055)}
; -1.6279330295168008557737948649446479976177215576171875p-841 - -1.3981713204819314899651772066135890781879425048828125p-182 == 1.39817132048193126792057228158228099346160888671875p-182
; [HW: 1.39817132048193126792057228158228099346160888671875p-182] 

; mpf : + 1793204210552044 -182
; mpfd: + 1793204210552044 -182 (2.28087e-055) class: Pos. norm. non-zero
; hwf : + 1793204210552044 -182 (2.28087e-055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110110 #b1010000011000000001110000001000111011010010101010011)))
(assert (= y (fp #b1 #b01101001001 #b0110010111101110100011100011111110101100110011101101)))
(assert (= r (fp #b0 #b01101001001 #b0110010111101110100011100011111110101100110011101100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
