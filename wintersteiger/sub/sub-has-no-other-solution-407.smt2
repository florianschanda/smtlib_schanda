(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0590975005183553836474175113835372030735015869140625p-726 {+ 266151481312993 -726 (3.00026e-219)}
; Y = -1.056219212878927837806486422778107225894927978515625p-505 {- 253188826172602 -505 (-1.00834e-152)}
; 1.0590975005183553836474175113835372030735015869140625p-726 - -1.056219212878927837806486422778107225894927978515625p-505 == 1.056219212878927837806486422778107225894927978515625p-505
; [HW: 1.056219212878927837806486422778107225894927978515625p-505] 

; mpf : + 253188826172602 -505
; mpfd: + 253188826172602 -505 (1.00834e-152) class: Pos. norm. non-zero
; hwf : + 253188826172602 -505 (1.00834e-152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101001 #b0000111100100001000000111000100000000000011011100001)))
(assert (= y (fp #b1 #b01000000110 #b0000111001100100011000011110000010111000110010111010)))
(assert (= r (fp #b0 #b01000000110 #b0000111001100100011000011110000010111000110010111010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
