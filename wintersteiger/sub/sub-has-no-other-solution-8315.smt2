(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6689433676315525989508614657097496092319488525390625p924 {- 3012653101197425 924 (-2.36678e+278)}
; Y = 1.6284329662557956996948860250995494425296783447265625p-100 {+ 2830210472656937 -100 (1.28461e-030)}
; -1.6689433676315525989508614657097496092319488525390625p924 - 1.6284329662557956996948860250995494425296783447265625p-100 == -1.6689433676315525989508614657097496092319488525390625p924
; [HW: -1.6689433676315525989508614657097496092319488525390625p924] 

; mpf : - 3012653101197425 924
; mpfd: - 3012653101197425 924 (-2.36678e+278) class: Neg. norm. non-zero
; hwf : - 3012653101197425 924 (-2.36678e+278) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011011 #b1010101100111111110111110101111011011010100001110001)))
(assert (= y (fp #b0 #b01110011011 #b1010000011100000111110111001110111001100000000101001)))
(assert (= r (fp #b1 #b11110011011 #b1010101100111111110111110101111011011010100001110001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
