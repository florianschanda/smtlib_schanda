(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6254001865346012767332695148070342838764190673828125p135 {- 2816552047034669 135 (-7.07962e+040)}
; Y = -1.06965866939286247117024686303921043872833251953125p617 {- 313714757520820 617 (-5.81772e+185)}
; -1.6254001865346012767332695148070342838764190673828125p135 - -1.06965866939286247117024686303921043872833251953125p617 == 1.06965866939286247117024686303921043872833251953125p617
; [HW: 1.06965866939286247117024686303921043872833251953125p617] 

; mpf : + 313714757520820 617
; mpfd: + 313714757520820 617 (5.81772e+185) class: Pos. norm. non-zero
; hwf : + 313714757520820 617 (5.81772e+185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000110 #b1010000000011010001110100000010000010100000100101101)))
(assert (= y (fp #b1 #b11001101000 #b0001000111010101001001101000101011101100110110110100)))
(assert (= r (fp #b0 #b11001101000 #b0001000111010101001001101000101011101100110110110100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
