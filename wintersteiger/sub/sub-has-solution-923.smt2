(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.687856847126645742918071846361272037029266357421875p-108 {- 3097831840403806 -108 (-5.20111e-033)}
; Y = -1.436445243741542032722691146773286163806915283203125p1003 {- 1965574637082034 1003 (-1.23133e+302)}
; -1.687856847126645742918071846361272037029266357421875p-108 - -1.436445243741542032722691146773286163806915283203125p1003 == 1.4364452437415418106780862217419780790805816650390625p1003
; [HW: 1.4364452437415418106780862217419780790805816650390625p1003] 

; mpf : + 1965574637082033 1003
; mpfd: + 1965574637082033 1003 (1.23133e+302) class: Pos. norm. non-zero
; hwf : + 1965574637082033 1003 (1.23133e+302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010011 #b1011000000010111011000101110011010111101000101011110)))
(assert (= y (fp #b1 #b11111101010 #b0110111110111010111000000010000001011101010110110010)))
(assert (= r (fp #b0 #b11111101010 #b0110111110111010111000000010000001011101010110110001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
