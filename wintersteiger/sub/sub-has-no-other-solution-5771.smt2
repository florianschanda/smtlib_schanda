(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8800212990817872782400854703155346214771270751953125p902 {- 3963263594622837 902 (-6.35651e+271)}
; Y = -1.1857219669237457626564946622238494455814361572265625p543 {- 836417381032297 543 (-3.41405e+163)}
; -1.8800212990817872782400854703155346214771270751953125p902 - -1.1857219669237457626564946622238494455814361572265625p543 == -1.8800212990817872782400854703155346214771270751953125p902
; [HW: -1.8800212990817872782400854703155346214771270751953125p902] 

; mpf : - 3963263594622837 902
; mpfd: - 3963263594622837 902 (-6.35651e+271) class: Neg. norm. non-zero
; hwf : - 3963263594622837 902 (-6.35651e+271) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110000101 #b1110000101001001000100110110101101010110111101110101)))
(assert (= y (fp #b1 #b11000011110 #b0010111110001011011110011000111000010110000101101001)))
(assert (= r (fp #b1 #b11110000101 #b1110000101001001000100110110101101010110111101110101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
