(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5230078526419779105793850249028764665126800537109375p886 {+ 2355417970270255 886 (7.85739e+266)}
; Y = -1.67790166870375845320495500345714390277862548828125p-545 {- 3052997702568084 -545 (-1.45686e-164)}
; 1.5230078526419779105793850249028764665126800537109375p886 - -1.67790166870375845320495500345714390277862548828125p-545 == 1.523007852641978132623989949934184551239013671875p886
; [HW: 1.523007852641978132623989949934184551239013671875p886] 

; mpf : + 2355417970270256 886
; mpfd: + 2355417970270256 886 (7.85739e+266) class: Pos. norm. non-zero
; hwf : + 2355417970270256 886 (7.85739e+266) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110101 #b1000010111100011110101111011011010100110000000101111)))
(assert (= y (fp #b1 #b00111011110 #b1010110110001010111101101011100011111100100010010100)))
(assert (= r (fp #b0 #b11101110101 #b1000010111100011110101111011011010100110000000110000)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
