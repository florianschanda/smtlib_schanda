(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.21080008565936569908672026940621435642242431640625p9 {- 949359187225188 9 (-619.93)}
; Y = 1.3323262428658428913053057840443216264247894287109375p-441 {+ 1496664343536047 -441 (2.34629e-133)}
; -1.21080008565936569908672026940621435642242431640625p9 - 1.3323262428658428913053057840443216264247894287109375p-441 == -1.21080008565936569908672026940621435642242431640625p9
; [HW: -1.21080008565936569908672026940621435642242431640625p9] 

; mpf : - 949359187225188 9
; mpfd: - 949359187225188 9 (-619.93) class: Neg. norm. non-zero
; hwf : - 949359187225188 9 (-619.93) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001000 #b0011010111110110111111101001000111100110101001100100)))
(assert (= y (fp #b0 #b01001000110 #b0101010100010011010101010010100010110110000110101111)))
(assert (= r (fp #b1 #b10000001000 #b0011010111110110111111101001000111100110101001100100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
