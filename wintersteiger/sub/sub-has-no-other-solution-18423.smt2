(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2084778427869331540733810470555908977985382080078125p-627 {+ 938900735090237 -627 (2.16986e-189)}
; Y = -1.6961076425838619297081777403946034610271453857421875p-901 {- 3134990119750435 -901 (-1.00329e-271)}
; 1.2084778427869331540733810470555908977985382080078125p-627 - -1.6961076425838619297081777403946034610271453857421875p-901 == 1.2084778427869331540733810470555908977985382080078125p-627
; [HW: 1.2084778427869331540733810470555908977985382080078125p-627] 

; mpf : + 938900735090237 -627
; mpfd: + 938900735090237 -627 (2.16986e-189) class: Pos. norm. non-zero
; hwf : + 938900735090237 -627 (2.16986e-189) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001100 #b0011010101011110110011011100110010110101111000111101)))
(assert (= y (fp #b1 #b00001111010 #b1011001000110100000111000100011101100100101100100011)))
(assert (= r (fp #b0 #b00110001100 #b0011010101011110110011011100110010110101111000111101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
