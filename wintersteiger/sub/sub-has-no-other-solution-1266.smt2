(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.33945698010174130132554637384600937366485595703125p894 {+ 1528778329094516 894 (1.76907e+269)}
; Y = -1.2981534844701994035887082645785994827747344970703125p-652 {- 1342763921559205 -652 (-6.94655e-197)}
; 1.33945698010174130132554637384600937366485595703125p894 - -1.2981534844701994035887082645785994827747344970703125p-652 == 1.33945698010174130132554637384600937366485595703125p894
; [HW: 1.33945698010174130132554637384600937366485595703125p894] 

; mpf : + 1528778329094516 894
; mpfd: + 1528778329094516 894 (1.76907e+269) class: Pos. norm. non-zero
; hwf : + 1528778329094516 894 (1.76907e+269) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111101 #b0101011011100110101001110001001111101111100101110100)))
(assert (= y (fp #b1 #b00101110011 #b0100110001010011110010010110100011111100111010100101)))
(assert (= r (fp #b0 #b11101111101 #b0101011011100110101001110001001111101111100101110100)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
