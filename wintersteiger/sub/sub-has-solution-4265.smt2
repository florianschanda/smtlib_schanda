(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2758858456588038077228475231095217168331146240234375p9 {- 1242479391705783 9 (-653.254)}
; Y = -1.40572730096146170097881622496061027050018310546875p365 {- 1827233321424076 365 (-1.05645e+110)}
; -1.2758858456588038077228475231095217168331146240234375p9 - -1.40572730096146170097881622496061027050018310546875p365 == 1.40572730096146170097881622496061027050018310546875p365
; [HW: 1.40572730096146170097881622496061027050018310546875p365] 

; mpf : + 1827233321424076 365
; mpfd: + 1827233321424076 365 (1.05645e+110) class: Pos. norm. non-zero
; hwf : + 1827233321424076 365 (1.05645e+110) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001000 #b0100011010100000011101000110110010001000101010110111)))
(assert (= y (fp #b1 #b10101101100 #b0110011111011101101111101001000010111001010011001100)))
(assert (= r (fp #b0 #b10101101100 #b0110011111011101101111101001000010111001010011001100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
