(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8101659461256167649167991839931346476078033447265625p847 {+ 3648663053079593 847 (1.69873e+255)}
; Y = 1.3854559099792911336379575004684738814830780029296875p179 {+ 1735939092550491 179 (1.0616e+054)}
; 1.8101659461256167649167991839931346476078033447265625p847 - 1.3854559099792911336379575004684738814830780029296875p179 == 1.8101659461256165428721942589618265628814697265625p847
; [HW: 1.8101659461256165428721942589618265628814697265625p847] 

; mpf : + 3648663053079592 847
; mpfd: + 3648663053079592 847 (1.69873e+255) class: Pos. norm. non-zero
; hwf : + 3648663053079592 847 (1.69873e+255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001110 #b1100111101100111000010010001001011110001010000101001)))
(assert (= y (fp #b0 #b10010110010 #b0110001010101101001111010000111101101001001101011011)))
(assert (= r (fp #b0 #b11101001110 #b1100111101100111000010010001001011110001010000101000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
