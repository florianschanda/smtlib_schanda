(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.797920959147230490771107724867761135101318359375p-1022 {+ 3593516534286576 -1023 (1.77543e-308)}
; Y = -1.3096408493606019884936131347785703837871551513671875p-606 {- 1394498413799091 -606 (-4.93145e-183)}
; 0.797920959147230490771107724867761135101318359375p-1022 - -1.3096408493606019884936131347785703837871551513671875p-606 == 1.3096408493606019884936131347785703837871551513671875p-606
; [HW: 1.3096408493606019884936131347785703837871551513671875p-606] 

; mpf : + 1394498413799091 -606
; mpfd: + 1394498413799091 -606 (4.93145e-183) class: Pos. norm. non-zero
; hwf : + 1394498413799091 -606 (4.93145e-183) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1100110001000100100011000100100001010100100011110000)))
(assert (= y (fp #b1 #b00110100001 #b0100111101000100100111110110100110000010011010110011)))
(assert (= r (fp #b0 #b00110100001 #b0100111101000100100111110110100110000010011010110011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
