(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3245890913617375250765917371609248220920562744140625p898 {+ 1461819310905249 898 (2.79909e+270)}
; Y = -1.8099504408256397169907359057106077671051025390625p367 {- 3647692503490920 367 (-5.44095e+110)}
; 1.3245890913617375250765917371609248220920562744140625p898 - -1.8099504408256397169907359057106077671051025390625p367 == 1.3245890913617375250765917371609248220920562744140625p898
; [HW: 1.3245890913617375250765917371609248220920562744140625p898] 

; mpf : + 1461819310905249 898
; mpfd: + 1461819310905249 898 (2.79909e+270) class: Pos. norm. non-zero
; hwf : + 1461819310905249 898 (2.79909e+270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000001 #b0101001100011000010001010100110000001001011110100001)))
(assert (= y (fp #b1 #b10101101110 #b1100111101011000111010010111111010111010000101101000)))
(assert (= r (fp #b0 #b11110000001 #b0101001100011000010001010100110000001001011110100001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
