(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.47050399560231870310644808341749012470245361328125p951 {+ 2118961619270932 951 (2.79893e+286)}
; Y = -1.08860996802511778014377341605722904205322265625p191 {- 399063818979232 191 (-3.41666e+057)}
; 1.47050399560231870310644808341749012470245361328125p951 - -1.08860996802511778014377341605722904205322265625p191 == 1.47050399560231870310644808341749012470245361328125p951
; [HW: 1.47050399560231870310644808341749012470245361328125p951] 

; mpf : + 2118961619270932 951
; mpfd: + 2118961619270932 951 (2.79893e+286) class: Pos. norm. non-zero
; hwf : + 2118961619270932 951 (2.79893e+286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110110 #b0111100001110010111100110010100110111111110100010100)))
(assert (= y (fp #b1 #b10010111110 #b0001011010101111001001001001001011000100011110100000)))
(assert (= r (fp #b0 #b11110110110 #b0111100001110010111100110010100110111111110100010100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
