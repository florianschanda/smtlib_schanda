(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1905270933436591374032786916359327733516693115234375p-943 {- 858057746586487 -943 (-1.60123e-284)}
; Y = -1.213535328460650486448457741062156856060028076171875p266 {- 961677625685822 266 (-1.4389e+080)}
; -1.1905270933436591374032786916359327733516693115234375p-943 - -1.213535328460650486448457741062156856060028076171875p266 == 1.213535328460650486448457741062156856060028076171875p266
; [HW: 1.213535328460650486448457741062156856060028076171875p266] 

; mpf : + 961677625685822 266
; mpfd: + 961677625685822 266 (1.4389e+080) class: Pos. norm. non-zero
; hwf : + 961677625685822 266 (1.4389e+080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010000 #b0011000011000110011000100011001011101001101101110111)))
(assert (= y (fp #b1 #b10100001001 #b0011011010101010010000000101010001000111011100111110)))
(assert (= r (fp #b0 #b10100001001 #b0011011010101010010000000101010001000111011100111110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
