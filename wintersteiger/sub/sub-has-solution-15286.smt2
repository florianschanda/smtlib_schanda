(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.28060679942401645092786566237919032573699951171875p-22 {+ 1263740677323628 -22 (3.0532e-007)}
; Y = 1.506092985660033800598966990946792066097259521484375p409 {+ 2279240181633350 409 (1.99122e+123)}
; 1.28060679942401645092786566237919032573699951171875p-22 - 1.506092985660033800598966990946792066097259521484375p409 == -1.5060929856600335785543620659154839813709259033203125p409
; [HW: -1.5060929856600335785543620659154839813709259033203125p409] 

; mpf : - 2279240181633349 409
; mpfd: - 2279240181633349 409 (-1.99122e+123) class: Neg. norm. non-zero
; hwf : - 2279240181633349 409 (-1.99122e+123) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101001 #b0100011111010101110110001110001010001111101101101100)))
(assert (= y (fp #b0 #b10110011000 #b1000000110001111010011110101011000100101000101000110)))
(assert (= r (fp #b1 #b10110011000 #b1000000110001111010011110101011000100101000101000101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
