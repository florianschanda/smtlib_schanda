(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6615977619410937649035986396484076976776123046875p835 {- 2979571434147064 835 (-3.80691e+251)}
; Y = 1.8013061896603315137355139086139388382434844970703125p-743 {+ 3608762257163941 -743 (3.89315e-224)}
; -1.6615977619410937649035986396484076976776123046875p835 - 1.8013061896603315137355139086139388382434844970703125p-743 == -1.6615977619410937649035986396484076976776123046875p835
; [HW: -1.6615977619410937649035986396484076976776123046875p835] 

; mpf : - 2979571434147064 835
; mpfd: - 2979571434147064 835 (-3.80691e+251) class: Neg. norm. non-zero
; hwf : - 2979571434147064 835 (-3.80691e+251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000010 #b1010100101011110011110001000111010100100110011111000)))
(assert (= y (fp #b0 #b00100011000 #b1100110100100010011001110000011010101100011010100101)))
(assert (= r (fp #b1 #b11101000010 #b1010100101011110011110001000111010100100110011111000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
