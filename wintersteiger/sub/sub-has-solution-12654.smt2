(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.27805203510973530711680723470635712146759033203125p424 {- 1252235041709812 424 (-5.5369e+127)}
; Y = -1.5383376564187891677448760674451477825641632080078125p-291 {- 2424457268847165 -291 (-3.86654e-088)}
; -1.27805203510973530711680723470635712146759033203125p424 - -1.5383376564187891677448760674451477825641632080078125p-291 == -1.27805203510973530711680723470635712146759033203125p424
; [HW: -1.27805203510973530711680723470635712146759033203125p424] 

; mpf : - 1252235041709812 424
; mpfd: - 1252235041709812 424 (-5.5369e+127) class: Neg. norm. non-zero
; hwf : - 1252235041709812 424 (-5.5369e+127) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100111 #b0100011100101110011010110000110101100001111011110100)))
(assert (= y (fp #b1 #b01011011100 #b1000100111010000011111110010010010000110001000111101)))
(assert (= r (fp #b1 #b10110100111 #b0100011100101110011010110000110101100001111011110100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
