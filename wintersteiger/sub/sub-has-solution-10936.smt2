(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.507138576018087317009985781623981893062591552734375p-228 {- 2283949101980262 -228 (-3.49393e-069)}
; Y = -1.8702339243470309515515737075475044548511505126953125p365 {- 3919185177414453 365 (-1.40554e+110)}
; -1.507138576018087317009985781623981893062591552734375p-228 - -1.8702339243470309515515737075475044548511505126953125p365 == 1.8702339243470309515515737075475044548511505126953125p365
; [HW: 1.8702339243470309515515737075475044548511505126953125p365] 

; mpf : + 3919185177414453 365
; mpfd: + 3919185177414453 365 (1.40554e+110) class: Pos. norm. non-zero
; hwf : + 3919185177414453 365 (1.40554e+110) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011011 #b1000000111010011110101010110111010001001101001100110)))
(assert (= y (fp #b1 #b10101101100 #b1101111011000111101001101000010011110000101100110101)))
(assert (= r (fp #b0 #b10101101100 #b1101111011000111101001101000010011110000101100110101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
