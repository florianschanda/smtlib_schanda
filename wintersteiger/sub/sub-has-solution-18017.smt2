(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.82190616792918813615642648073844611644744873046875p394 {+ 3701536311619404 394 (7.35096e+118)}
; Y = -1.5165601556171390829064193894737400114536285400390625p-466 {- 2326380124351793 -466 (-7.95942e-141)}
; 1.82190616792918813615642648073844611644744873046875p394 - -1.5165601556171390829064193894737400114536285400390625p-466 == 1.82190616792918813615642648073844611644744873046875p394
; [HW: 1.82190616792918813615642648073844611644744873046875p394] 

; mpf : + 3701536311619404 394
; mpfd: + 3701536311619404 394 (7.35096e+118) class: Pos. norm. non-zero
; hwf : + 3701536311619404 394 (7.35096e+118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110001001 #b1101001001101000011100010100111110100010111101001100)))
(assert (= y (fp #b1 #b01000101101 #b1000010000111101010010010100111011001010110100110001)))
(assert (= r (fp #b0 #b10110001001 #b1101001001101000011100010100111110100010111101001100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
