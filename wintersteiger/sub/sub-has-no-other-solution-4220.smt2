(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.751879472147352512223505982547067105770111083984375p956 {+ 3386164110590342 956 (1.06704e+288)}
; Y = -1.4952974067368576260861345872399397194385528564453125p702 {- 2230621216417685 702 (-3.14619e+211)}
; 1.751879472147352512223505982547067105770111083984375p956 - -1.4952974067368576260861345872399397194385528564453125p702 == 1.751879472147352512223505982547067105770111083984375p956
; [HW: 1.751879472147352512223505982547067105770111083984375p956] 

; mpf : + 3386164110590342 956
; mpfd: + 3386164110590342 956 (1.06704e+288) class: Pos. norm. non-zero
; hwf : + 3386164110590342 956 (1.06704e+288) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110111011 #b1100000001111011001011000100111101101000000110000110)))
(assert (= y (fp #b1 #b11010111101 #b0111111011001011110011111001001110111010011110010101)))
(assert (= r (fp #b0 #b11110111011 #b1100000001111011001011000100111101101000000110000110)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
