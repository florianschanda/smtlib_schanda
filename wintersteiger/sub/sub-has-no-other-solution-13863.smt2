(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.750621052567743252126319930539466440677642822265625p176 {+ 3380496692640538 176 (1.67676e+053)}
; Y = 1.397253436193617748273254619562067091464996337890625p-889 {+ 1789070427213226 -889 (3.38539e-268)}
; 1.750621052567743252126319930539466440677642822265625p176 - 1.397253436193617748273254619562067091464996337890625p-889 == 1.750621052567743252126319930539466440677642822265625p176
; [HW: 1.750621052567743252126319930539466440677642822265625p176] 

; mpf : + 3380496692640538 176
; mpfd: + 3380496692640538 176 (1.67676e+053) class: Pos. norm. non-zero
; hwf : + 3380496692640538 176 (1.67676e+053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010101111 #b1100000000101000101100111000100001110111101100011010)))
(assert (= y (fp #b0 #b00010000110 #b0110010110110010011001101011010010101100110110101010)))
(assert (= r (fp #b0 #b10010101111 #b1100000000101000101100111000100001110111101100011010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
