(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.510562893289201458202342109871096909046173095703125p83 {- 2299370855966450 83 (-1.46093e+025)}
; Y = -1.2303356169063734970592349782236851751804351806640625p-772 {- 1037339398469697 -772 (-4.95298e-233)}
; -1.510562893289201458202342109871096909046173095703125p83 - -1.2303356169063734970592349782236851751804351806640625p-772 == -1.5105628932892012361577371848397888243198394775390625p83
; [HW: -1.5105628932892012361577371848397888243198394775390625p83] 

; mpf : - 2299370855966449 83
; mpfd: - 2299370855966449 83 (-1.46093e+025) class: Neg. norm. non-zero
; hwf : - 2299370855966449 83 (-1.46093e+025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010010 #b1000001010110100001111111111000100111010011011110010)))
(assert (= y (fp #b1 #b00011111011 #b0011101011110111010001100110010110110111100001000001)))
(assert (= r (fp #b1 #b10001010010 #b1000001010110100001111111111000100111010011011110001)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
