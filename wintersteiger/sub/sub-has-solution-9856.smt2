(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.988411124393978379742975448607467114925384521484375p-502 {- 4451407971509574 -502 (-1.51862e-151)}
; Y = -1.6177957744338640200254531009704805910587310791015625p785 {- 2782304819531417 785 (-3.29208e+236)}
; -1.988411124393978379742975448607467114925384521484375p-502 - -1.6177957744338640200254531009704805910587310791015625p785 == 1.6177957744338637979808481759391725063323974609375p785
; [HW: 1.6177957744338637979808481759391725063323974609375p785] 

; mpf : + 2782304819531416 785
; mpfd: + 2782304819531416 785 (3.29208e+236) class: Pos. norm. non-zero
; hwf : + 2782304819531416 785 (3.29208e+236) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000001001 #b1111110100001000100000101110111001000110010101000110)))
(assert (= y (fp #b1 #b11100010000 #b1001111000100111110111010010011011001100111010011001)))
(assert (= r (fp #b0 #b11100010000 #b1001111000100111110111010010011011001100111010011000)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
