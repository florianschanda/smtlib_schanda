(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2820290318787288530444357093074358999729156494140625p-157 {- 1270145842876705 -157 (-7.0176e-048)}
; Y = 1.8277620840706418903209851123392581939697265625p-981 {+ 3727909013371968 -981 (8.94322e-296)}
; -1.2820290318787288530444357093074358999729156494140625p-157 - 1.8277620840706418903209851123392581939697265625p-981 == -1.2820290318787288530444357093074358999729156494140625p-157
; [HW: -1.2820290318787288530444357093074358999729156494140625p-157] 

; mpf : - 1270145842876705 -157
; mpfd: - 1270145842876705 -157 (-7.0176e-048) class: Neg. norm. non-zero
; hwf : - 1270145842876705 -157 (-7.0176e-048) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100010 #b0100100000110011000011011111110001110001000100100001)))
(assert (= y (fp #b0 #b00000101010 #b1101001111101000001101110100011111110011110001000000)))
(assert (= r (fp #b1 #b01101100010 #b0100100000110011000011011111110001110001000100100001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
