(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.653791424115091057700510646100156009197235107421875p246 {- 2944414814022750 246 (-1.87008e+074)}
; Y = -1.4054982867856582462451342507847584784030914306640625p-138 {- 1826201933267265 -138 (-4.03358e-042)}
; -1.653791424115091057700510646100156009197235107421875p246 - -1.4054982867856582462451342507847584784030914306640625p-138 == -1.653791424115091057700510646100156009197235107421875p246
; [HW: -1.653791424115091057700510646100156009197235107421875p246] 

; mpf : - 2944414814022750 246
; mpfd: - 2944414814022750 246 (-1.87008e+074) class: Neg. norm. non-zero
; hwf : - 2944414814022750 246 (-1.87008e+074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110101 #b1010011101011110110111111111000011111010110001011110)))
(assert (= y (fp #b1 #b01101110101 #b0110011111001110101111000101100001010100000101000001)))
(assert (= r (fp #b1 #b10011110101 #b1010011101011110110111111111000011111010110001011110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
