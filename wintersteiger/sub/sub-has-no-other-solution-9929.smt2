(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.49834606902456091148678751778788864612579345703125p58 {- 2244351170760564 58 (-4.31869e+017)}
; Y = -1.5687081617904119479334212883259169757366180419921875p141 {- 2561233865521859 141 (-4.37292e+042)}
; -1.49834606902456091148678751778788864612579345703125p58 - -1.5687081617904119479334212883259169757366180419921875p141 == 1.5687081617904119479334212883259169757366180419921875p141
; [HW: 1.5687081617904119479334212883259169757366180419921875p141] 

; mpf : + 2561233865521859 141
; mpfd: + 2561233865521859 141 (4.37292e+042) class: Pos. norm. non-zero
; hwf : + 2561233865521859 141 (4.37292e+042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111001 #b0111111110010011100110111010010010001100111101110100)))
(assert (= y (fp #b1 #b10010001100 #b1001000110010110110110111010101111011011101011000011)))
(assert (= r (fp #b0 #b10010001100 #b1001000110010110110110111010101111011011101011000011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
