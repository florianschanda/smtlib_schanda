(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.025967295459994321760177626856602728366851806640625p365 {+ 116946302157450 365 (7.71049e+109)}
; Y = -1.3439014582772681460909325323882512748241424560546875p238 {- 1548794479349675 238 (-5.93617e+071)}
; 1.025967295459994321760177626856602728366851806640625p365 - -1.3439014582772681460909325323882512748241424560546875p238 == 1.0259672954599945438047825518879108130931854248046875p365
; [HW: 1.0259672954599945438047825518879108130931854248046875p365] 

; mpf : + 116946302157451 365
; mpfd: + 116946302157451 365 (7.71049e+109) class: Pos. norm. non-zero
; hwf : + 116946302157451 365 (7.71049e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101100 #b0000011010100101110010101110110011000100001010001010)))
(assert (= y (fp #b1 #b10011101101 #b0101100000001001111011010000110001011000111110101011)))
(assert (= r (fp #b0 #b10101101100 #b0000011010100101110010101110110011000100001010001011)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
