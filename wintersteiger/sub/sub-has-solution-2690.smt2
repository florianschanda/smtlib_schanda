(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6502102653904788809313686215318739414215087890625p-1006 {+ 2928286708925032 -1006 (2.40638e-303)}
; Y = 1.6763120565100326775365147113916464149951934814453125p-124 {+ 3045838725684757 -124 (7.88198e-038)}
; 1.6502102653904788809313686215318739414215087890625p-1006 - 1.6763120565100326775365147113916464149951934814453125p-124 == -1.67631205651003245549190978636033833026885986328125p-124
; [HW: -1.67631205651003245549190978636033833026885986328125p-124] 

; mpf : - 3045838725684756 -124
; mpfd: - 3045838725684756 -124 (-7.88198e-038) class: Neg. norm. non-zero
; hwf : - 3045838725684756 -124 (-7.88198e-038) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000010001 #b1010011001110100001011100001000101100000001001101000)))
(assert (= y (fp #b0 #b01110000011 #b1010110100100010110010010111010010011001111000010101)))
(assert (= r (fp #b1 #b01110000011 #b1010110100100010110010010111010010011001111000010100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
