(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2684294374957569839779125686618499457836151123046875p522 {+ 1208898714681163 522 (1.7415e+157)}
; Y = 1.579927577249158776595550079946406185626983642578125p-416 {+ 2611761620801186 -416 (9.33596e-126)}
; 1.2684294374957569839779125686618499457836151123046875p522 - 1.579927577249158776595550079946406185626983642578125p-416 == 1.268429437495756761933307643630541861057281494140625p522
; [HW: 1.268429437495756761933307643630541861057281494140625p522] 

; mpf : + 1208898714681162 522
; mpfd: + 1208898714681162 522 (1.7415e+157) class: Pos. norm. non-zero
; hwf : + 1208898714681162 522 (1.7415e+157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001001 #b0100010010110111110010101010011101010011111101001011)))
(assert (= y (fp #b0 #b01001011111 #b1001010001110110001000100011101001010101011010100010)))
(assert (= r (fp #b0 #b11000001001 #b0100010010110111110010101010011101010011111101001010)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
