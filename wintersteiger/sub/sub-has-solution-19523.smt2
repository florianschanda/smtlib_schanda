(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.48606266610356296808959086774848401546478271484375p489 {+ 2189031641942716 489 (2.37523e+147)}
; Y = 1.238979490491299628729393589310348033905029296875p757 {+ 1076267944325808 757 (9.39228e+227)}
; 1.48606266610356296808959086774848401546478271484375p489 - 1.238979490491299628729393589310348033905029296875p757 == -1.2389794904912994066847886642790399491786956787109375p757
; [HW: -1.2389794904912994066847886642790399491786956787109375p757] 

; mpf : - 1076267944325807 757
; mpfd: - 1076267944325807 757 (-9.39228e+227) class: Neg. norm. non-zero
; hwf : - 1076267944325807 757 (-9.39228e+227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101000 #b0111110001101110100110100101011010111000101010111100)))
(assert (= y (fp #b0 #b11011110100 #b0011110100101101110000101000100000010011001010110000)))
(assert (= r (fp #b1 #b11011110100 #b0011110100101101110000101000100000010011001010101111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
