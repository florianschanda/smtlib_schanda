(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.426617909703726372327992066857405006885528564453125p394 {- 1921316259171282 394 (-5.75607e+118)}
; Y = 1.0235443695670394248509182943962514400482177734375p-672 {+ 106034414008792 -672 (5.22336e-203)}
; -1.426617909703726372327992066857405006885528564453125p394 - 1.0235443695670394248509182943962514400482177734375p-672 == -1.426617909703726372327992066857405006885528564453125p394
; [HW: -1.426617909703726372327992066857405006885528564453125p394] 

; mpf : - 1921316259171282 394
; mpfd: - 1921316259171282 394 (-5.75607e+118) class: Neg. norm. non-zero
; hwf : - 1921316259171282 394 (-5.75607e+118) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001001 #b0110110100110110110101001101001000010000101111010010)))
(assert (= y (fp #b0 #b00101011111 #b0000011000000111000000001111100101001011100111011000)))
(assert (= r (fp #b1 #b10110001001 #b0110110100110110110101001101001000010000101111010010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
