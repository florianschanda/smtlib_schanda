(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.60424574653629736786797366221435368061065673828125p598 {+ 2721280918941076 598 (1.66421e+180)}
; Y = 1.830091152802358234197299680090509355068206787109375p-734 {+ 3738398206444246 -734 (2.02514e-221)}
; 1.60424574653629736786797366221435368061065673828125p598 - 1.830091152802358234197299680090509355068206787109375p-734 == 1.60424574653629736786797366221435368061065673828125p598
; [HW: 1.60424574653629736786797366221435368061065673828125p598] 

; mpf : + 2721280918941076 598
; mpfd: + 2721280918941076 598 (1.66421e+180) class: Pos. norm. non-zero
; hwf : + 2721280918941076 598 (1.66421e+180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010101 #b1001101010101111110110010110100000011110110110010100)))
(assert (= y (fp #b0 #b00100100001 #b1101010010000000110110101001000111111100001011010110)))
(assert (= r (fp #b0 #b11001010101 #b1001101010101111110110010110100000011110110110010100)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
