(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8191695555832569919374464006978087127208709716796875p-629 {+ 3689211705278011 -629 (8.16593e-190)}
; Y = 1.38138724200624363191991506027989089488983154296875p270 {+ 1717615440983180 270 (2.62068e+081)}
; 1.8191695555832569919374464006978087127208709716796875p-629 - 1.38138724200624363191991506027989089488983154296875p270 == -1.38138724200624363191991506027989089488983154296875p270
; [HW: -1.38138724200624363191991506027989089488983154296875p270] 

; mpf : - 1717615440983180 270
; mpfd: - 1717615440983180 270 (-2.62068e+081) class: Neg. norm. non-zero
; hwf : - 1717615440983180 270 (-2.62068e+081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001010 #b1101000110110101000110001001001100011011111000111011)))
(assert (= y (fp #b0 #b10100001101 #b0110000110100010100110000010001110000111010010001100)))
(assert (= r (fp #b1 #b10100001101 #b0110000110100010100110000010001110000111010010001100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
