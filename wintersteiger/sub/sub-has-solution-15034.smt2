(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.194131448541086104597752637346275150775909423828125p16 {- 874290319310530 16 (-78258.6)}
; Y = 1.853730509707624651838386853341944515705108642578125p704 {+ 3844860405394082 704 (1.56014e+212)}
; -1.194131448541086104597752637346275150775909423828125p16 - 1.853730509707624651838386853341944515705108642578125p704 == -1.853730509707624651838386853341944515705108642578125p704
; [HW: -1.853730509707624651838386853341944515705108642578125p704] 

; mpf : - 3844860405394082 704
; mpfd: - 3844860405394082 704 (-1.56014e+212) class: Neg. norm. non-zero
; hwf : - 3844860405394082 704 (-1.56014e+212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001111 #b0011000110110010100110010011111010011011111011000010)))
(assert (= y (fp #b0 #b11010111111 #b1101101010001110000101010010101011001010101010100010)))
(assert (= r (fp #b1 #b11010111111 #b1101101010001110000101010010101011001010101010100010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
