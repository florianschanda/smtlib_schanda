(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7023319772539304839398255353444255888462066650390625p848 {+ 3163022031051185 848 (3.19507e+255)}
; Y = 0.1304175480036613432588410432799719274044036865234375p-1022 {+ 587348420591863 -1023 (2.90189e-309)}
; 1.7023319772539304839398255353444255888462066650390625p848 - 0.1304175480036613432588410432799719274044036865234375p-1022 == 1.702331977253930261895220610313117504119873046875p848
; [HW: 1.702331977253930261895220610313117504119873046875p848] 

; mpf : + 3163022031051184 848
; mpfd: + 3163022031051184 848 (3.19507e+255) class: Pos. norm. non-zero
; hwf : + 3163022031051184 848 (3.19507e+255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001111 #b1011001111001100000001110100100100111101100110110001)))
(assert (= y (fp #b0 #b00000000000 #b0010000101100011000010110101111110000000000011110111)))
(assert (= r (fp #b0 #b11101001111 #b1011001111001100000001110100100100111101100110110000)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
