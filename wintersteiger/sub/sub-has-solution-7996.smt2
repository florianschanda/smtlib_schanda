(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5006670473842713686707384113105945289134979248046875p698 {- 2254803928036491 698 (-1.97343e+210)}
; Y = 1.515250012703479143283402663655579090118408203125p-378 {+ 2320479765214032 -378 (2.46119e-114)}
; -1.5006670473842713686707384113105945289134979248046875p698 - 1.515250012703479143283402663655579090118408203125p-378 == -1.5006670473842713686707384113105945289134979248046875p698
; [HW: -1.5006670473842713686707384113105945289134979248046875p698] 

; mpf : - 2254803928036491 698
; mpfd: - 2254803928036491 698 (-1.97343e+210) class: Neg. norm. non-zero
; hwf : - 2254803928036491 698 (-1.97343e+210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111001 #b1000000000101011101101110011001010110011010010001011)))
(assert (= y (fp #b0 #b01010000101 #b1000001111100111011011001100000111010011001101010000)))
(assert (= r (fp #b1 #b11010111001 #b1000000000101011101101110011001010110011010010001011)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
