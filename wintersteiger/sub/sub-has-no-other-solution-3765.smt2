(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9923411782696949234860994693008251488208770751953125p-1011 {- 4469107360679797 -1011 (-9.079e-305)}
; Y = -1.733477120770448465236768242903053760528564453125p819 {- 3303287287786576 819 (-6.06017e+246)}
; -1.9923411782696949234860994693008251488208770751953125p-1011 - -1.733477120770448465236768242903053760528564453125p819 == 1.7334771207704482431921633178717456758022308349609375p819
; [HW: 1.7334771207704482431921633178717456758022308349609375p819] 

; mpf : + 3303287287786575 819
; mpfd: + 3303287287786575 819 (6.06017e+246) class: Pos. norm. non-zero
; hwf : + 3303287287786575 819 (6.06017e+246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001100 #b1111111000001010000100100100101100100100011101110101)))
(assert (= y (fp #b1 #b11100110010 #b1011101111000101001010000001011000010010110001010000)))
(assert (= r (fp #b0 #b11100110010 #b1011101111000101001010000001011000010010110001001111)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
