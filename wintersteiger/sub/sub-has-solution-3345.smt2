(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6479323406867363299710405044606886804103851318359375p-684 {+ 2918027848078079 -684 (2.05316e-206)}
; Y = -1.8503172543885650913608742484939284622669219970703125p-850 {- 3829488470011045 -850 (-2.46462e-256)}
; 1.6479323406867363299710405044606886804103851318359375p-684 - -1.8503172543885650913608742484939284622669219970703125p-850 == 1.6479323406867363299710405044606886804103851318359375p-684
; [HW: 1.6479323406867363299710405044606886804103851318359375p-684] 

; mpf : + 2918027848078079 -684
; mpfd: + 2918027848078079 -684 (2.05316e-206) class: Pos. norm. non-zero
; hwf : + 2918027848078079 -684 (2.05316e-206) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010011 #b1010010111011110111001001101010101000101001011111111)))
(assert (= y (fp #b1 #b00010101101 #b1101100110101110011001000011111011010010110010100101)))
(assert (= r (fp #b0 #b00101010011 #b1010010111011110111001001101010101000101001011111111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
