(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1337903471241601582875091480673290789127349853515625p577 {- 602538157454137 577 (-5.60842e+173)}
; Y = 1.586330884466203627880531712435185909271240234375p761 {+ 2640599552797808 761 (1.92407e+229)}
; -1.1337903471241601582875091480673290789127349853515625p577 - 1.586330884466203627880531712435185909271240234375p761 == -1.5863308844662038499251366374664939939975738525390625p761
; [HW: -1.5863308844662038499251366374664939939975738525390625p761] 

; mpf : - 2640599552797809 761
; mpfd: - 2640599552797809 761 (-1.92407e+229) class: Neg. norm. non-zero
; hwf : - 2640599552797809 761 (-1.92407e+229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001000000 #b0010001001000000000101011000110101101011001100111001)))
(assert (= y (fp #b0 #b11011111000 #b1001011000011001110001111110010101101010110001110000)))
(assert (= r (fp #b1 #b11011111000 #b1001011000011001110001111110010101101010110001110001)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
