(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.635483037163445008133066949085332453250885009765625p-943 {- 2861961169369562 -943 (-2.19968e-284)}
; Y = -1.8418330591042406663149222367792390286922454833984375p-543 {- 3791279051290023 -543 (-6.3968e-164)}
; -1.635483037163445008133066949085332453250885009765625p-943 - -1.8418330591042406663149222367792390286922454833984375p-543 == 1.841833059104240444270317311747930943965911865234375p-543
; [HW: 1.841833059104240444270317311747930943965911865234375p-543] 

; mpf : + 3791279051290022 -543
; mpfd: + 3791279051290022 -543 (6.3968e-164) class: Pos. norm. non-zero
; hwf : + 3791279051290022 -543 (6.3968e-164) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010000 #b1010001010101111000001000010110111000111100111011010)))
(assert (= y (fp #b1 #b00111100000 #b1101011110000010010111110001000110001011010110100111)))
(assert (= r (fp #b0 #b00111100000 #b1101011110000010010111110001000110001011010110100110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
