(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2876447460439626180317418402410112321376800537109375p744 {- 1295436771098671 744 (-1.19155e+224)}
; Y = 0.340836244531103726984611057559959590435028076171875p-1022 {+ 1534989983864638 -1023 (7.58386e-309)}
; -1.2876447460439626180317418402410112321376800537109375p744 - 0.340836244531103726984611057559959590435028076171875p-1022 == -1.2876447460439626180317418402410112321376800537109375p744
; [HW: -1.2876447460439626180317418402410112321376800537109375p744] 

; mpf : - 1295436771098671 744
; mpfd: - 1295436771098671 744 (-1.19155e+224) class: Neg. norm. non-zero
; hwf : - 1295436771098671 744 (-1.19155e+224) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100111 #b0100100110100011000101100000100100100000000000101111)))
(assert (= y (fp #b0 #b00000000000 #b0101011101000001000010110100101110001101011100111110)))
(assert (= r (fp #b1 #b11011100111 #b0100100110100011000101100000100100100000000000101111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
