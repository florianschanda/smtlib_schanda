(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5124515390984083484937627872568555176258087158203125p-116 {- 2307876560529029 -116 (-1.82055e-035)}
; Y = -1.464740727019397947827883399440906941890716552734375p-17 {- 2093006165028454 -17 (-1.11751e-005)}
; -1.5124515390984083484937627872568555176258087158203125p-116 - -1.464740727019397947827883399440906941890716552734375p-17 == 1.464740727019397947827883399440906941890716552734375p-17
; [HW: 1.464740727019397947827883399440906941890716552734375p-17] 

; mpf : + 2093006165028454 -17
; mpfd: + 2093006165028454 -17 (1.11751e-005) class: Pos. norm. non-zero
; hwf : + 2093006165028454 -17 (1.11751e-005) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001011 #b1000001100110000000001100010100100110110011010000101)))
(assert (= y (fp #b1 #b01111101110 #b0111011011111001001111111000111110101010111001100110)))
(assert (= r (fp #b0 #b01111101110 #b0111011011111001001111111000111110101010111001100110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
