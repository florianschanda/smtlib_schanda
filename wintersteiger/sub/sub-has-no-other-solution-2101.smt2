(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8666482842352685178610727234627120196819305419921875p918 {- 3903036889943235 918 (-4.13617e+276)}
; Y = 1.9482498688973983735905903813545592129230499267578125p-784 {+ 4270537756220445 -784 (1.91482e-236)}
; -1.8666482842352685178610727234627120196819305419921875p918 - 1.9482498688973983735905903813545592129230499267578125p-784 == -1.8666482842352685178610727234627120196819305419921875p918
; [HW: -1.8666482842352685178610727234627120196819305419921875p918] 

; mpf : - 3903036889943235 918
; mpfd: - 3903036889943235 918 (-4.13617e+276) class: Neg. norm. non-zero
; hwf : - 3903036889943235 918 (-4.13617e+276) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110010101 #b1101110111011100101010010111010111101100110011000011)))
(assert (= y (fp #b0 #b00011101111 #b1111001011000000100000001101111101011001110000011101)))
(assert (= r (fp #b1 #b11110010101 #b1101110111011100101010010111010111101100110011000011)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
