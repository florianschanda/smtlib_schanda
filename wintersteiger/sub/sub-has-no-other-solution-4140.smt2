(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.49784675996418314980473951436579227447509765625p-365 {- 2242102482662304 -365 (-1.99305e-110)}
; Y = 1.61110282824793937805907262372784316539764404296875p-813 {+ 2752162469582476 -813 (2.94942e-245)}
; -1.49784675996418314980473951436579227447509765625p-365 - 1.61110282824793937805907262372784316539764404296875p-813 == -1.49784675996418314980473951436579227447509765625p-365
; [HW: -1.49784675996418314980473951436579227447509765625p-365] 

; mpf : - 2242102482662304 -365
; mpfd: - 2242102482662304 -365 (-1.99305e-110) class: Neg. norm. non-zero
; hwf : - 2242102482662304 -365 (-1.99305e-110) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010010 #b0111111101110010111000101010000001110111001110100000)))
(assert (= y (fp #b0 #b00011010010 #b1001110001110001001111000010010111010001011010001100)))
(assert (= r (fp #b1 #b01010010010 #b0111111101110010111000101010000001110111001110100000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
