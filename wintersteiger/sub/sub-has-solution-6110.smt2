(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5688992275714193080915492828353308141231536865234375p-958 {- 2562094349302007 -958 (-6.4396e-289)}
; Y = 1.38212388339602387787863335688598453998565673828125p550 {+ 1720932978871700 550 (5.09383e+165)}
; -1.5688992275714193080915492828353308141231536865234375p-958 - 1.38212388339602387787863335688598453998565673828125p550 == -1.38212388339602387787863335688598453998565673828125p550
; [HW: -1.38212388339602387787863335688598453998565673828125p550] 

; mpf : - 1720932978871700 550
; mpfd: - 1720932978871700 550 (-5.09383e+165) class: Neg. norm. non-zero
; hwf : - 1720932978871700 550 (-5.09383e+165) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001000001 #b1001000110100011011000010011100100100011100011110111)))
(assert (= y (fp #b0 #b11000100101 #b0110000111010010110111101110111000110100110110010100)))
(assert (= r (fp #b1 #b11000100101 #b0110000111010010110111101110111000110100110110010100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
