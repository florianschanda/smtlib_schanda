(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.075528569088087582628077143453992903232574462890625p539 {+ 340150435600938 539 (1.93548e+162)}
; Y = 1.2428343567290129900726469713845290243625640869140625p468 {+ 1093628718477537 468 (9.47221e+140)}
; 1.075528569088087582628077143453992903232574462890625p539 - 1.2428343567290129900726469713845290243625640869140625p468 == 1.0755285690880873605834722184226848185062408447265625p539
; [HW: 1.0755285690880873605834722184226848185062408447265625p539] 

; mpf : + 340150435600937 539
; mpfd: + 340150435600937 539 (1.93548e+162) class: Pos. norm. non-zero
; hwf : + 340150435600937 539 (1.93548e+162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011010 #b0001001101010101110101110001111000100101101000101010)))
(assert (= y (fp #b0 #b10111010011 #b0011111000101010011001000111010001111111000011100001)))
(assert (= r (fp #b0 #b11000011010 #b0001001101010101110101110001111000100101101000101001)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
