(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.277521878797258647608714454690925776958465576171875p969 {- 1249847429938494 969 (-6.37432e+291)}
; Y = 1.0890544089420799434009268225054256618022918701171875p552 {+ 401065402927251 552 (1.60549e+166)}
; -1.277521878797258647608714454690925776958465576171875p969 - 1.0890544089420799434009268225054256618022918701171875p552 == -1.2775218787972588696533193797222338616847991943359375p969
; [HW: -1.2775218787972588696533193797222338616847991943359375p969] 

; mpf : - 1249847429938495 969
; mpfd: - 1249847429938495 969 (-6.37432e+291) class: Neg. norm. non-zero
; hwf : - 1249847429938495 969 (-6.37432e+291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001000 #b0100011100001011101011001000000101011011110100111110)))
(assert (= y (fp #b0 #b11000100111 #b0001011011001100010001010000110111111000100010010011)))
(assert (= r (fp #b1 #b11111001000 #b0100011100001011101011001000000101011011110100111111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
