(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1114068739919442663222071132622659206390380859375p-866 {+ 501731956196632 -866 (2.2589e-261)}
; Y = -1.2271342354589773737671976050478406250476837158203125p715 {- 1022921658176133 715 (-2.11514e+215)}
; 1.1114068739919442663222071132622659206390380859375p-866 - -1.2271342354589773737671976050478406250476837158203125p715 == 1.227134235458977595811802530079148709774017333984375p715
; [HW: 1.227134235458977595811802530079148709774017333984375p715] 

; mpf : + 1022921658176134 715
; mpfd: + 1022921658176134 715 (2.11514e+215) class: Pos. norm. non-zero
; hwf : + 1022921658176134 715 (2.11514e+215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011101 #b0001110010000101001010010011000001011000010100011000)))
(assert (= y (fp #b1 #b11011001010 #b0011101000100101011110000010000100011001001010000101)))
(assert (= r (fp #b0 #b11011001010 #b0011101000100101011110000010000100011001001010000110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
