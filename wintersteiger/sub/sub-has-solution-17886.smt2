(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.938007020540878588832356399507261812686920166015625p475 {+ 4224408068178810 475 (1.89062e+143)}
; Y = -1.251033659371357575906813508481718599796295166015625p487 {- 1130555094802298 487 (-4.99893e+146)}
; 1.938007020540878588832356399507261812686920166015625p475 - -1.251033659371357575906813508481718599796295166015625p487 == 1.251506805616606765596543482388369739055633544921875p487
; [HW: 1.251506805616606765596543482388369739055633544921875p487] 

; mpf : + 1132685956056094 487
; mpfd: + 1132685956056094 487 (5.00082e+146) class: Pos. norm. non-zero
; hwf : + 1132685956056094 487 (5.00082e+146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011010 #b1111000000100001001110100110010010100100001101111010)))
(assert (= y (fp #b1 #b10111100110 #b0100000001000011101111011110110100110001111101111010)))
(assert (= r (fp #b0 #b10111100110 #b0100000001100010110000000000000011011000010000011110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
