(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.923820353304000807526108474121429026126861572265625p844 {- 4160516998897178 844 (-2.25674e+254)}
; Y = -1.3292661348338221660725366746191866695880889892578125p841 {- 1482882842143325 841 (-1.94912e+253)}
; -1.923820353304000807526108474121429026126861572265625p844 - -1.3292661348338221660725366746191866695880889892578125p841 == -1.757662086449772953500314542907290160655975341796875p844
; [HW: -1.757662086449772953500314542907290160655975341796875p844] 

; mpf : - 3412206690207950 844
; mpfd: - 3412206690207950 844 (-2.06182e+254) class: Neg. norm. non-zero
; hwf : - 3412206690207950 844 (-2.06182e+254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001011 #b1110110001111111011111011001110011010001111000011010)))
(assert (= y (fp #b1 #b11101001000 #b0101010001001010110010010001000011001010101001011101)))
(assert (= r (fp #b1 #b11101001011 #b1100000111110110001001000111101010111000100011001110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
