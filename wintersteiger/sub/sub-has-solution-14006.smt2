(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8102442915167167303280848500435240566730499267578125p-674 {- 3649015889353757 -674 (-2.30951e-203)}
; Y = -1.186428467217341964357046890654601156711578369140625p19 {- 839599175491274 19 (-622030)}
; -1.8102442915167167303280848500435240566730499267578125p-674 - -1.186428467217341964357046890654601156711578369140625p19 == 1.1864284672173417423124419656232930719852447509765625p19
; [HW: 1.1864284672173417423124419656232930719852447509765625p19] 

; mpf : + 839599175491273 19
; mpfd: + 839599175491273 19 (622030) class: Pos. norm. non-zero
; hwf : + 839599175491273 19 (622030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101011101 #b1100111101101100001010110111110111010101110000011101)))
(assert (= y (fp #b1 #b10000010010 #b0010111110111001110001101010100110111101111011001010)))
(assert (= r (fp #b0 #b10000010010 #b0010111110111001110001101010100110111101111011001001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
