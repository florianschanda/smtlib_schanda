(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7774031854949263742327048021252267062664031982421875p420 {- 3501112696511587 420 (-4.81265e+126)}
; Y = -1.52497883349208951386799526517279446125030517578125p-353 {- 2364294478892372 -353 (-8.31142e-107)}
; -1.7774031854949263742327048021252267062664031982421875p420 - -1.52497883349208951386799526517279446125030517578125p-353 == -1.777403185494926152188099877093918621540069580078125p420
; [HW: -1.777403185494926152188099877093918621540069580078125p420] 

; mpf : - 3501112696511586 420
; mpfd: - 3501112696511586 420 (-4.81265e+126) class: Neg. norm. non-zero
; hwf : - 3501112696511586 420 (-4.81265e+126) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100011 #b1100011100000011111001010010100110000001110001100011)))
(assert (= y (fp #b1 #b01010011110 #b1000011001100101000000110100100011110000110101010100)))
(assert (= r (fp #b1 #b10110100011 #b1100011100000011111001010010100110000001110001100010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
