(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2656724111211368200002880257670767605304718017578125p342 {+ 1196482171727773 342 (1.13391e+103)}
; Y = -1.0234376407949288267928977802512235939502716064453125p-374 {- 105553750350485 -374 (-2.65976e-113)}
; 1.2656724111211368200002880257670767605304718017578125p342 - -1.0234376407949288267928977802512235939502716064453125p-374 == 1.2656724111211368200002880257670767605304718017578125p342
; [HW: 1.2656724111211368200002880257670767605304718017578125p342] 

; mpf : + 1196482171727773 342
; mpfd: + 1196482171727773 342 (1.13391e+103) class: Pos. norm. non-zero
; hwf : + 1196482171727773 342 (1.13391e+103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010101 #b0100010000000011000110110110110100110110111110011101)))
(assert (= y (fp #b1 #b01010001001 #b0000011000000000000000100101110010110101101010010101)))
(assert (= r (fp #b0 #b10101010101 #b0100010000000011000110110110110100110110111110011101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
