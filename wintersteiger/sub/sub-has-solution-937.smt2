(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3371413642807741251061770526575855910778045654296875p-725 {+ 1518349722546075 -725 (7.57583e-219)}
; Y = -1.646437049924259543587368170847184956073760986328125p906 {- 2911293657157378 906 (-8.90679e+272)}
; 1.3371413642807741251061770526575855910778045654296875p-725 - -1.646437049924259543587368170847184956073760986328125p906 == 1.646437049924259543587368170847184956073760986328125p906
; [HW: 1.646437049924259543587368170847184956073760986328125p906] 

; mpf : + 2911293657157378 906
; mpfd: + 2911293657157378 906 (8.90679e+272) class: Pos. norm. non-zero
; hwf : + 2911293657157378 906 (8.90679e+272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101010 #b0101011001001110111001010111110110110110111110011011)))
(assert (= y (fp #b1 #b11110001001 #b1010010101111100111001100000010001011000111100000010)))
(assert (= r (fp #b0 #b11110001001 #b1010010101111100111001100000010001011000111100000010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
