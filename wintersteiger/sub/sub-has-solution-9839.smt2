(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6273424158450671139775067786104045808315277099609375p-788 {- 2825299070233551 -788 (-9.99637e-238)}
; Y = -1.1912885192092905750627096495009027421474456787109375p-188 {- 861486903831215 -188 (-3.03653e-057)}
; -1.6273424158450671139775067786104045808315277099609375p-788 - -1.1912885192092905750627096495009027421474456787109375p-188 == 1.1912885192092905750627096495009027421474456787109375p-188
; [HW: 1.1912885192092905750627096495009027421474456787109375p-188] 

; mpf : + 861486903831215 -188
; mpfd: + 861486903831215 -188 (3.03653e-057) class: Pos. norm. non-zero
; hwf : + 861486903831215 -188 (3.03653e-057) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101011 #b1010000010011001100000110011011101110010101111001111)))
(assert (= y (fp #b1 #b01101000011 #b0011000011111000010010001100111000011010101010101111)))
(assert (= r (fp #b0 #b01101000011 #b0011000011111000010010001100111000011010101010101111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
