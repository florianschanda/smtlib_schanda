(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3815446711226451181886432095780037343502044677734375p284 {- 1718324438693143 284 (-4.29421e+085)}
; Y = 1.7436241439996102986498272002791054546833038330078125p648 {+ 3348985417820349 648 (2.03653e+195)}
; -1.3815446711226451181886432095780037343502044677734375p284 - 1.7436241439996102986498272002791054546833038330078125p648 == -1.7436241439996102986498272002791054546833038330078125p648
; [HW: -1.7436241439996102986498272002791054546833038330078125p648] 

; mpf : - 3348985417820349 648
; mpfd: - 3348985417820349 648 (-2.03653e+195) class: Neg. norm. non-zero
; hwf : - 3348985417820349 648 (-2.03653e+195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011011 #b0110000110101100111010010101110001101111010100010111)))
(assert (= y (fp #b0 #b11010000111 #b1011111001011110001001101110001011111110100010111101)))
(assert (= r (fp #b1 #b11010000111 #b1011111001011110001001101110001011111110100010111101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
