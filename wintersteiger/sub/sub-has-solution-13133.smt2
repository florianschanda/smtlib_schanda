(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6702555722215064459845734745613299310207366943359375p-372 {- 3018562745299775 -372 (-1.7363e-112)}
; Y = -1.800781676080097870595864151255227625370025634765625p-190 {- 3606400057999450 -190 (-1.14752e-057)}
; -1.6702555722215064459845734745613299310207366943359375p-372 - -1.800781676080097870595864151255227625370025634765625p-190 == 1.800781676080097870595864151255227625370025634765625p-190
; [HW: 1.800781676080097870595864151255227625370025634765625p-190] 

; mpf : + 3606400057999450 -190
; mpfd: + 3606400057999450 -190 (1.14752e-057) class: Pos. norm. non-zero
; hwf : + 3606400057999450 -190 (1.14752e-057) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010001011 #b1010101110010101110111101000001010100111001100111111)))
(assert (= y (fp #b1 #b01101000001 #b1100110100000000000001110010011000000000000001011010)))
(assert (= r (fp #b0 #b01101000001 #b1100110100000000000001110010011000000000000001011010)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
