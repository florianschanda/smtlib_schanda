(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7988373232809415913635575634543783962726593017578125p-248 {+ 3597643471457693 -248 (3.97698e-075)}
; Y = -1.7061235295788248489401439655921421945095062255859375p-185 {- 3180097664688735 -185 (-3.47905e-056)}
; 1.7988373232809415913635575634543783962726593017578125p-248 - -1.7061235295788248489401439655921421945095062255859375p-185 == 1.7061235295788248489401439655921421945095062255859375p-185
; [HW: 1.7061235295788248489401439655921421945095062255859375p-185] 

; mpf : + 3180097664688735 -185
; mpfd: + 3180097664688735 -185 (3.47905e-056) class: Pos. norm. non-zero
; hwf : + 3180097664688735 -185 (3.47905e-056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000111 #b1100110010000000100110100101001001010000110110011101)))
(assert (= y (fp #b1 #b01101000110 #b1011010011000100100000101111101001111010001001011111)))
(assert (= r (fp #b0 #b01101000110 #b1011010011000100100000101111101001111010001001011111)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
