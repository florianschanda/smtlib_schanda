(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8735113170822670358717232375056482851505279541015625p-350 {+ 3933945242115609 -350 (8.16879e-106)}
; Y = -1.814929631519826447316745543503202497959136962890625p826 {- 3670116784845866 826 (-8.1215e+248)}
; 1.8735113170822670358717232375056482851505279541015625p-350 - -1.814929631519826447316745543503202497959136962890625p826 == 1.814929631519826447316745543503202497959136962890625p826
; [HW: 1.814929631519826447316745543503202497959136962890625p826] 

; mpf : + 3670116784845866 826
; mpfd: + 3670116784845866 826 (8.1215e+248) class: Pos. norm. non-zero
; hwf : + 3670116784845866 826 (8.1215e+248) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100001 #b1101111110011110011100000000101110001101111000011001)))
(assert (= y (fp #b1 #b11100111001 #b1101000010011111001110100111001111101011010000101010)))
(assert (= r (fp #b0 #b11100111001 #b1101000010011111001110100111001111101011010000101010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
