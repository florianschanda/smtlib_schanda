(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4610425157777326976571430350304581224918365478515625p667 {+ 2076350902258553 667 (8.94685e+200)}
; Y = -1.4008073031799275209863253621733747422695159912109375p350 {- 1805075621248495 350 (-3.21275e+105)}
; 1.4610425157777326976571430350304581224918365478515625p667 - -1.4008073031799275209863253621733747422695159912109375p350 == 1.4610425157777326976571430350304581224918365478515625p667
; [HW: 1.4610425157777326976571430350304581224918365478515625p667] 

; mpf : + 2076350902258553 667
; mpfd: + 2076350902258553 667 (8.94685e+200) class: Pos. norm. non-zero
; hwf : + 2076350902258553 667 (8.94685e+200) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011010 #b0111011000000110111000011101111101010100101101111001)))
(assert (= y (fp #b1 #b10101011101 #b0110011010011011010011101011001100100111110111101111)))
(assert (= r (fp #b0 #b11010011010 #b0111011000000110111000011101111101010100101101111001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
