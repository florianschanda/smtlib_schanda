(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0763872991853407068418846392887644469738006591796875p564 {+ 344017812146939 564 (6.49959e+169)}
; Y = -1.4940498705352454056338729060371406376361846923828125p-689 {- 2225002812844973 -689 (-5.81699e-208)}
; 1.0763872991853407068418846392887644469738006591796875p564 - -1.4940498705352454056338729060371406376361846923828125p-689 == 1.0763872991853407068418846392887644469738006591796875p564
; [HW: 1.0763872991853407068418846392887644469738006591796875p564] 

; mpf : + 344017812146939 564
; mpfd: + 344017812146939 564 (6.49959e+169) class: Pos. norm. non-zero
; hwf : + 344017812146939 564 (6.49959e+169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110011 #b0001001110001110000111100011011111010100101011111011)))
(assert (= y (fp #b1 #b00101001110 #b0111111001111010000011010110010010001010101110101101)))
(assert (= r (fp #b0 #b11000110011 #b0001001110001110000111100011011111010100101011111011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
