(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9708356899693242336724097185651771724224090576171875p-67 {+ 4372255251583827 -67 (1.33549e-020)}
; Y = -1.420439917877843516436087156762368977069854736328125p-497 {- 1893493057486338 -497 (-3.47148e-150)}
; 1.9708356899693242336724097185651771724224090576171875p-67 - -1.420439917877843516436087156762368977069854736328125p-497 == 1.9708356899693242336724097185651771724224090576171875p-67
; [HW: 1.9708356899693242336724097185651771724224090576171875p-67] 

; mpf : + 4372255251583827 -67
; mpfd: + 4372255251583827 -67 (1.33549e-020) class: Pos. norm. non-zero
; hwf : + 4372255251583827 -67 (1.33549e-020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111100 #b1111100010001000101100000001001000110101001101010011)))
(assert (= y (fp #b1 #b01000001110 #b0110101110100001111100110101000100110111111000000010)))
(assert (= r (fp #b0 #b01110111100 #b1111100010001000101100000001001000110101001101010011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
