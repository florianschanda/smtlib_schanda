(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3281627772673838538963764221989549696445465087890625p200 {- 1477913761418257 200 (-2.13428e+060)}
; Y = 1.8285782395761780438903087997459806501865386962890625p328 {+ 3731584651002577 328 (9.9989e+098)}
; -1.3281627772673838538963764221989549696445465087890625p200 - 1.8285782395761780438903087997459806501865386962890625p328 == -1.8285782395761780438903087997459806501865386962890625p328
; [HW: -1.8285782395761780438903087997459806501865386962890625p328] 

; mpf : - 3731584651002577 328
; mpfd: - 3731584651002577 328 (-9.9989e+098) class: Neg. norm. non-zero
; hwf : - 3731584651002577 328 (-9.9989e+098) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000111 #b0101010000000010011110011100110000100000110000010001)))
(assert (= y (fp #b0 #b10101000111 #b1101010000011101101101000001100100101000001011010001)))
(assert (= r (fp #b1 #b10101000111 #b1101010000011101101101000001100100101000001011010001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
