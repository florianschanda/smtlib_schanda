(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.19644524692129916587646221159957349300384521484375p740 {- 884710740833468 740 (-6.91974e+222)}
; Y = 1.1071565336043793781328758996096439659595489501953125p-645 {+ 482590124810997 -645 (7.58336e-195)}
; -1.19644524692129916587646221159957349300384521484375p740 - 1.1071565336043793781328758996096439659595489501953125p-645 == -1.19644524692129916587646221159957349300384521484375p740
; [HW: -1.19644524692129916587646221159957349300384521484375p740] 

; mpf : - 884710740833468 740
; mpfd: - 884710740833468 740 (-6.91974e+222) class: Neg. norm. non-zero
; hwf : - 884710740833468 740 (-6.91974e+222) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100011 #b0011001001001010001111000101011011111011010010111100)))
(assert (= y (fp #b0 #b00101111010 #b0001101101101110100111000100111101100010001011110101)))
(assert (= r (fp #b1 #b11011100011 #b0011001001001010001111000101011011111011010010111100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
