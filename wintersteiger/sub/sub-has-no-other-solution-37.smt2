(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9361412849682719805599617757252417504787445068359375p88 {- 4216005542149247 88 (-5.99207e+026)}
; Y = -1.9885670004243112263253578930743969976902008056640625p-649 {- 4452109974741697 -649 (-8.51281e-196)}
; -1.9361412849682719805599617757252417504787445068359375p88 - -1.9885670004243112263253578930743969976902008056640625p-649 == -1.9361412849682719805599617757252417504787445068359375p88
; [HW: -1.9361412849682719805599617757252417504787445068359375p88] 

; mpf : - 4216005542149247 88
; mpfd: - 4216005542149247 88 (-5.99207e+026) class: Neg. norm. non-zero
; hwf : - 4216005542149247 88 (-5.99207e+026) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010111 #b1110111110100110111101001000101101011111110001111111)))
(assert (= y (fp #b1 #b00101110110 #b1111110100010010101110100001100010111010001011000001)))
(assert (= r (fp #b1 #b10001010111 #b1110111110100110111101001000101101011111110001111111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
