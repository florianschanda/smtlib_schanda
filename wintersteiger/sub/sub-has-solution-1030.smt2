(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7315184634588256518128446259652264416217803955078125p-337 {+ 3294466279447805 -337 (6.1847e-102)}
; Y = -1.837015133363939067834280649549327790737152099609375p-368 {- 3769581042721302 -368 (-3.05544e-111)}
; 1.7315184634588256518128446259652264416217803955078125p-337 - -1.837015133363939067834280649549327790737152099609375p-368 == 1.731518464314252270241922815330326557159423828125p-337
; [HW: 1.731518464314252270241922815330326557159423828125p-337] 

; mpf : + 3294466283300304 -337
; mpfd: + 3294466283300304 -337 (6.1847e-102) class: Pos. norm. non-zero
; hwf : + 3294466283300304 -337 (6.1847e-102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101110 #b1011101101000100110010110100010011111001110011111101)))
(assert (= y (fp #b1 #b01010001111 #b1101011001000110100111111011000000001110001000010110)))
(assert (= r (fp #b0 #b01010101110 #b1011101101000100110010110100100010100110010111010000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
