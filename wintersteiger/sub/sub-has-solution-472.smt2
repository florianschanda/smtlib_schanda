(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.74787540430536036950570633052848279476165771484375p961 {- 3368131392149180 961 (-3.40672e+289)}
; Y = 1.263661659765844991198946445365436375141143798828125p-121 {+ 1187426552673346 -121 (4.75337e-037)}
; -1.74787540430536036950570633052848279476165771484375p961 - 1.263661659765844991198946445365436375141143798828125p-121 == -1.74787540430536036950570633052848279476165771484375p961
; [HW: -1.74787540430536036950570633052848279476165771484375p961] 

; mpf : - 3368131392149180 961
; mpfd: - 3368131392149180 961 (-3.40672e+289) class: Neg. norm. non-zero
; hwf : - 3368131392149180 961 (-3.40672e+289) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111000000 #b1011111101110100110000110011001011111001011010111100)))
(assert (= y (fp #b0 #b01110000110 #b0100001101111111010101001001110111100111010001000010)))
(assert (= r (fp #b1 #b11111000000 #b1011111101110100110000110011001011111001011010111100)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
