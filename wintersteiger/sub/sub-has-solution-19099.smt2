(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.501109180695379574643766318331472575664520263671875p-596 {+ 2256795119451646 -596 (5.78808e-180)}
; Y = 1.2005761201640401392154444693005643784999847412109375p-406 {+ 903314540030191 -406 (7.2646e-123)}
; 1.501109180695379574643766318331472575664520263671875p-596 - 1.2005761201640401392154444693005643784999847412109375p-406 == -1.200576120164039917170839544269256293773651123046875p-406
; [HW: -1.200576120164039917170839544269256293773651123046875p-406] 

; mpf : - 903314540030190 -406
; mpfd: - 903314540030190 -406 (-7.2646e-123) class: Neg. norm. non-zero
; hwf : - 903314540030190 -406 (-7.2646e-123) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101011 #b1000000001001000101100001111011011001111110111111110)))
(assert (= y (fp #b0 #b01001101001 #b0011001101011000111101001110010001110110100011101111)))
(assert (= r (fp #b1 #b01001101001 #b0011001101011000111101001110010001110110100011101110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
