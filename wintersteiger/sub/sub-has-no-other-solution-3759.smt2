(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.16797379503627407615340416668914258480072021484375p551 {+ 756486720733372 551 (8.60916e+165)}
; Y = -1.3635518834566460188995051794336177408695220947265625p-531 {- 1637292126865193 -531 (-1.93974e-160)}
; 1.16797379503627407615340416668914258480072021484375p551 - -1.3635518834566460188995051794336177408695220947265625p-531 == 1.16797379503627407615340416668914258480072021484375p551
; [HW: 1.16797379503627407615340416668914258480072021484375p551] 

; mpf : + 756486720733372 551
; mpfd: + 756486720733372 551 (8.60916e+165) class: Pos. norm. non-zero
; hwf : + 756486720733372 551 (8.60916e+165) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100110 #b0010101100000000010101001010010001000100000010111100)))
(assert (= y (fp #b1 #b00111101100 #b0101110100010001101111000111100111011000011100101001)))
(assert (= r (fp #b0 #b11000100110 #b0010101100000000010101001010010001000100000010111100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
