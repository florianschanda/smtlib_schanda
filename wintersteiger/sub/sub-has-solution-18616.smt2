(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.026377074113389742393565029487945139408111572265625p816 {+ 118791781148186 816 (4.48522e+245)}
; Y = -1.6069208232818239512340596775175072252750396728515625p580 {- 2733328393575417 580 (-6.35905e+174)}
; 1.026377074113389742393565029487945139408111572265625p816 - -1.6069208232818239512340596775175072252750396728515625p580 == 1.026377074113389742393565029487945139408111572265625p816
; [HW: 1.026377074113389742393565029487945139408111572265625p816] 

; mpf : + 118791781148186 816
; mpfd: + 118791781148186 816 (4.48522e+245) class: Pos. norm. non-zero
; hwf : + 118791781148186 816 (4.48522e+245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100101111 #b0000011011000000101001011101111010101110011000011010)))
(assert (= y (fp #b1 #b11001000011 #b1001101101011111001010011011111101000001101111111001)))
(assert (= r (fp #b0 #b11100101111 #b0000011011000000101001011101111010101110011000011010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
