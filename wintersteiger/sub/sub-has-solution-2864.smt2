(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4361708298361934854625587831833399832248687744140625p-829 {+ 1964338786720161 -829 (4.0118e-250)}
; Y = 1.9915965716925152495520023876451887190341949462890625p-672 {+ 4465753950776273 -672 (1.01635e-202)}
; 1.4361708298361934854625587831833399832248687744140625p-829 - 1.9915965716925152495520023876451887190341949462890625p-672 == -1.9915965716925152495520023876451887190341949462890625p-672
; [HW: -1.9915965716925152495520023876451887190341949462890625p-672] 

; mpf : - 4465753950776273 -672
; mpfd: - 4465753950776273 -672 (-1.01635e-202) class: Neg. norm. non-zero
; hwf : - 4465753950776273 -672 (-1.01635e-202) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000010 #b0110111110101000111001000011100110011101100110100001)))
(assert (= y (fp #b0 #b00101011111 #b1111110111011001010001011101111000111110101111010001)))
(assert (= r (fp #b1 #b00101011111 #b1111110111011001010001011101111000111110101111010001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
