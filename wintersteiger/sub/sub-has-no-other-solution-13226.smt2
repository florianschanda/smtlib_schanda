(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1125006132025918592631796855130232870578765869140625p-513 {- 506657719698145 -513 (-4.1487e-155)}
; Y = -1.4917347446421074241840187823981977999210357666015625p-549 {- 2214576412735321 -549 (-8.09513e-166)}
; -1.1125006132025918592631796855130232870578765869140625p-513 - -1.4917347446421074241840187823981977999210357666015625p-549 == -1.112500613180884112551893849740736186504364013671875p-513
; [HW: -1.112500613180884112551893849740736186504364013671875p-513] 

; mpf : - 506657719600382 -513
; mpfd: - 506657719600382 -513 (-4.1487e-155) class: Neg. norm. non-zero
; hwf : - 506657719600382 -513 (-4.1487e-155) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111110 #b0001110011001100110101110001011001111100001011100001)))
(assert (= y (fp #b1 #b00111011010 #b0111110111100010010101000000011010001011011101011001)))
(assert (= r (fp #b1 #b00111111110 #b0001110011001100110101110001011001100100010011111110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
