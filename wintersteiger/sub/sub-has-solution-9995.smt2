(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0016553916109796062983150477521121501922607421875p-348 {- 7455221042360 -348 (-1.74695e-105)}
; Y = -1.5264393041428638841949805282638408243656158447265625p-488 {- 2370871853970985 -488 (-1.91004e-147)}
; -1.0016553916109796062983150477521121501922607421875p-348 - -1.5264393041428638841949805282638408243656158447265625p-488 == -1.0016553916109796062983150477521121501922607421875p-348
; [HW: -1.0016553916109796062983150477521121501922607421875p-348] 

; mpf : - 7455221042360 -348
; mpfd: - 7455221042360 -348 (-1.74695e-105) class: Neg. norm. non-zero
; hwf : - 7455221042360 -348 (-1.74695e-105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100011 #b0000000001101100011111001101110011010100110010111000)))
(assert (= y (fp #b1 #b01000010111 #b1000011011000100101110011110101010011111011000101001)))
(assert (= r (fp #b1 #b01010100011 #b0000000001101100011111001101110011010100110010111000)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
