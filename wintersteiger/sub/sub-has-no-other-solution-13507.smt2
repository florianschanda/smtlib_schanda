(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7132389238442977674736766857677139341831207275390625p414 {+ 3212142551651313 414 (7.2483e+124)}
; Y = -1.4196337383088095673855377754080109298229217529296875p-242 {- 1889862347479643 -242 (-2.00871e-073)}
; 1.7132389238442977674736766857677139341831207275390625p414 - -1.4196337383088095673855377754080109298229217529296875p-242 == 1.7132389238442977674736766857677139341831207275390625p414
; [HW: 1.7132389238442977674736766857677139341831207275390625p414] 

; mpf : + 3212142551651313 414
; mpfd: + 3212142551651313 414 (7.2483e+124) class: Pos. norm. non-zero
; hwf : + 3212142551651313 414 (7.2483e+124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011101 #b1011011010010110110100110111110000100101001111110001)))
(assert (= y (fp #b1 #b01100001101 #b0110101101101101000111011101111001010101101001011011)))
(assert (= r (fp #b0 #b10110011101 #b1011011010010110110100110111110000100101001111110001)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
