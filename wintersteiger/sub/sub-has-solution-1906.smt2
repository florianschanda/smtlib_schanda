(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.811824134999501456633197449264116585254669189453125p442 {- 3656130871874130 442 (-2.05766e+133)}
; Y = 1.5783572771686971147886424660100601613521575927734375p-285 {+ 2604689617943959 -285 (2.53896e-086)}
; -1.811824134999501456633197449264116585254669189453125p442 - 1.5783572771686971147886424660100601613521575927734375p-285 == -1.8118241349995016786778023742954246699810028076171875p442
; [HW: -1.8118241349995016786778023742954246699810028076171875p442] 

; mpf : - 3656130871874131 442
; mpfd: - 3656130871874131 442 (-2.05766e+133) class: Neg. norm. non-zero
; hwf : - 3656130871874131 442 (-2.05766e+133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111001 #b1100111111010011101101001101110111101101001001010010)))
(assert (= y (fp #b0 #b01011100010 #b1001010000001111001110001111011011010111110110010111)))
(assert (= r (fp #b1 #b10110111001 #b1100111111010011101101001101110111101101001001010011)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
