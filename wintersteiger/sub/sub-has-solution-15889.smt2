(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0613065158218064620854192980914376676082611083984375p189 {+ 276100001810471 189 (8.32741e+056)}
; Y = -1.5173561028473943057548467550077475607395172119140625p155 {- 2329964752001377 155 (-6.93006e+046)}
; 1.0613065158218064620854192980914376676082611083984375p189 - -1.5173561028473943057548467550077475607395172119140625p155 == 1.0613065159101282564080293013830669224262237548828125p189
; [HW: 1.0613065159101282564080293013830669224262237548828125p189] 

; mpf : + 276100002208237 189
; mpfd: + 276100002208237 189 (8.32741e+056) class: Pos. norm. non-zero
; hwf : + 276100002208237 189 (8.32741e+056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111100 #b0000111110110001110010001010100001111100100000100111)))
(assert (= y (fp #b1 #b10010011010 #b1000010001110001011100110001011000011101100101100001)))
(assert (= r (fp #b0 #b10010111100 #b0000111110110001110010001010100011011101100111101101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
