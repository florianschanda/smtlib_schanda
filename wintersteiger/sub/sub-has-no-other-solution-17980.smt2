(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2749202781759247926629541325382888317108154296875p692 {- 1238130862349688 692 (-2.61963e+208)}
; Y = 1.3736791078261221255019108866690658032894134521484375p27 {+ 1682901090761863 27 (1.84372e+008)}
; -1.2749202781759247926629541325382888317108154296875p692 - 1.3736791078261221255019108866690658032894134521484375p27 == -1.2749202781759247926629541325382888317108154296875p692
; [HW: -1.2749202781759247926629541325382888317108154296875p692] 

; mpf : - 1238130862349688 692
; mpfd: - 1238130862349688 692 (-2.61963e+208) class: Neg. norm. non-zero
; hwf : - 1238130862349688 692 (-2.61963e+208) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110011 #b0100011001100001001011001110001111000101110101111000)))
(assert (= y (fp #b0 #b10000011010 #b0101111110101001011011110001101101001111110010000111)))
(assert (= r (fp #b1 #b11010110011 #b0100011001100001001011001110001111000101110101111000)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
