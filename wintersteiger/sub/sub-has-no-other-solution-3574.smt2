(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8937774808536798065716766359400935471057891845703125p889 {+ 4025215929724773 889 (7.81619e+267)}
; Y = -1.762107863029954035738455786486156284809112548828125p269 {- 3432228687957826 269 (-1.67148e+081)}
; 1.8937774808536798065716766359400935471057891845703125p889 - -1.762107863029954035738455786486156284809112548828125p269 == 1.8937774808536798065716766359400935471057891845703125p889
; [HW: 1.8937774808536798065716766359400935471057891845703125p889] 

; mpf : + 4025215929724773 889
; mpfd: + 4025215929724773 889 (7.81619e+267) class: Pos. norm. non-zero
; hwf : + 4025215929724773 889 (7.81619e+267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111000 #b1110010011001110100110011101101000101010111101100101)))
(assert (= y (fp #b1 #b10100001100 #b1100001100011001100000000011101110111100111101000010)))
(assert (= r (fp #b0 #b11101111000 #b1110010011001110100110011101101000101010111101100101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
