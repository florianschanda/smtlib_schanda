(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6822956382538480912813838585861958563327789306640625p-659 {+ 3072786382196545 -659 (7.03291e-199)}
; Y = -1.0233285940096548127797859706333838403224945068359375p-578 {- 105062647288959 -578 (-1.03437e-174)}
; 1.6822956382538480912813838585861958563327789306640625p-659 - -1.0233285940096548127797859706333838403224945068359375p-578 == 1.0233285940096548127797859706333838403224945068359375p-578
; [HW: 1.0233285940096548127797859706333838403224945068359375p-578] 

; mpf : + 105062647288959 -578
; mpfd: + 105062647288959 -578 (1.03437e-174) class: Pos. norm. non-zero
; hwf : + 105062647288959 -578 (1.03437e-174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101100 #b1010111010101010111011010100110010000000111101000001)))
(assert (= y (fp #b1 #b00110111101 #b0000010111111000110111001101110001010101010001111111)))
(assert (= r (fp #b0 #b00110111101 #b0000010111111000110111001101110001010101010001111111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
