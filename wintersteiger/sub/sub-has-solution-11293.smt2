(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.675042151466958895156267317361198365688323974609375p-514 {- 3040119581805974 -514 (-3.12326e-155)}
; Y = -1.4178654974023032764307572506368160247802734375p773 {- 1881898898392000 773 (-7.04404e+232)}
; -1.675042151466958895156267317361198365688323974609375p-514 - -1.4178654974023032764307572506368160247802734375p773 == 1.4178654974023030543861523256055079400539398193359375p773
; [HW: 1.4178654974023030543861523256055079400539398193359375p773] 

; mpf : + 1881898898391999 773
; mpfd: + 1881898898391999 773 (7.04404e+232) class: Pos. norm. non-zero
; hwf : + 1881898898391999 773 (7.04404e+232) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111101 #b1010110011001111100011111111101111111000110110010110)))
(assert (= y (fp #b1 #b11100000100 #b0110101011111001001110111011010101111000001111000000)))
(assert (= r (fp #b0 #b11100000100 #b0110101011111001001110111011010101111000001110111111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
