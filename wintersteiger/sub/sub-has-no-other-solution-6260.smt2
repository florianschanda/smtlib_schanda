(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2170420962758037308759639927302487194538116455078125p-897 {- 977470703911421 -897 (-1.15186e-270)}
; Y = 1.8456753323562298252369373585679568350315093994140625p193 {+ 3808583111675937 193 (2.3171e+058)}
; -1.2170420962758037308759639927302487194538116455078125p-897 - 1.8456753323562298252369373585679568350315093994140625p193 == -1.8456753323562298252369373585679568350315093994140625p193
; [HW: -1.8456753323562298252369373585679568350315093994140625p193] 

; mpf : - 3808583111675937 193
; mpfd: - 3808583111675937 193 (-2.3171e+058) class: Neg. norm. non-zero
; hwf : - 3808583111675937 193 (-2.3171e+058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001111110 #b0011011110010000000100100010000101011100000111111101)))
(assert (= y (fp #b0 #b10011000000 #b1101100001111110001011011011011110000001000000100001)))
(assert (= r (fp #b1 #b10011000000 #b1101100001111110001011011011011110000001000000100001)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
