(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5380915029434465424174049985595047473907470703125p359 {+ 2423348692147336 359 (1.80614e+108)}
; Y = -1.0365931668085217598473946054582484066486358642578125p-474 {- 164800972403165 -474 (-2.12515e-143)}
; 1.5380915029434465424174049985595047473907470703125p359 - -1.0365931668085217598473946054582484066486358642578125p-474 == 1.5380915029434467644620099235908128321170806884765625p359
; [HW: 1.5380915029434467644620099235908128321170806884765625p359] 

; mpf : + 2423348692147337 359
; mpfd: + 2423348692147337 359 (1.80614e+108) class: Pos. norm. non-zero
; hwf : + 2423348692147337 359 (1.80614e+108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100110 #b1000100111000000010111010101111101100101110010001000)))
(assert (= y (fp #b1 #b01000100101 #b0000100101011110001010110111011010110011000111011101)))
(assert (= r (fp #b0 #b10101100110 #b1000100111000000010111010101111101100101110010001001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
