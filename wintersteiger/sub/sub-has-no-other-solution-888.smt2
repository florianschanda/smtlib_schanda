(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.19302918716802519583097819122485816478729248046875p-820 {+ 869326175401548 -820 (1.7063e-247)}
; Y = 1.1057506056760970647445674330811016261577606201171875p165 {+ 476258388317075 165 (5.17138e+049)}
; 1.19302918716802519583097819122485816478729248046875p-820 - 1.1057506056760970647445674330811016261577606201171875p165 == -1.105750605676096842699962508049793541431427001953125p165
; [HW: -1.105750605676096842699962508049793541431427001953125p165] 

; mpf : - 476258388317074 165
; mpfd: - 476258388317074 165 (-5.17138e+049) class: Neg. norm. non-zero
; hwf : - 476258388317074 165 (-5.17138e+049) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001011 #b0011000101101010010111000101111000001111011001001100)))
(assert (= y (fp #b0 #b10010100100 #b0001101100010010011110001100000011101001001110010011)))
(assert (= r (fp #b1 #b10010100100 #b0001101100010010011110001100000011101001001110010010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
