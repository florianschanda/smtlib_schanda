(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3961761575557207759601396901416592299938201904296875p-476 {+ 1784218795541019 -476 (7.15587e-144)}
; Y = 1.504920197412819238280690115061588585376739501953125p842 {+ 2273958412920210 842 (4.41336e+253)}
; 1.3961761575557207759601396901416592299938201904296875p-476 - 1.504920197412819238280690115061588585376739501953125p842 == -1.5049201974128190162360851900302805006504058837890625p842
; [HW: -1.5049201974128190162360851900302805006504058837890625p842] 

; mpf : - 2273958412920209 842
; mpfd: - 2273958412920209 842 (-4.41336e+253) class: Neg. norm. non-zero
; hwf : - 2273958412920209 842 (-4.41336e+253) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000100011 #b0110010101101011110011001111100000101000001000011011)))
(assert (= y (fp #b0 #b11101001001 #b1000000101000010011100110011011011111010010110010010)))
(assert (= r (fp #b1 #b11101001001 #b1000000101000010011100110011011011111010010110010001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
