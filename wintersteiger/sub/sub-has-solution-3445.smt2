(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.83997084494809914900770309031940996646881103515625p-366 {- 3782892384310340 -366 (-1.22414e-110)}
; Y = -1.426788895349944130686026255716569721698760986328125p-781 {- 1922086310063874 -781 (-1.12185e-235)}
; -1.83997084494809914900770309031940996646881103515625p-366 - -1.426788895349944130686026255716569721698760986328125p-781 == -1.8399708449480989269630981652881018817424774169921875p-366
; [HW: -1.8399708449480989269630981652881018817424774169921875p-366] 

; mpf : - 3782892384310339 -366
; mpfd: - 3782892384310339 -366 (-1.22414e-110) class: Neg. norm. non-zero
; hwf : - 3782892384310339 -366 (-1.22414e-110) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010001 #b1101011100001000010101000100110010100101010001000100)))
(assert (= y (fp #b1 #b00011110010 #b0110110101000010000010010111101111010010111100000010)))
(assert (= r (fp #b1 #b01010010001 #b1101011100001000010101000100110010100101010001000011)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
