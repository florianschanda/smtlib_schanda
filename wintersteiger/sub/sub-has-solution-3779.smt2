(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6725914942661426199066454501007683575153350830078125p916 {- 3029082802949565 916 (-9.26544e+275)}
; Y = 1.3779477819595167265021018465631641447544097900390625p482 {+ 1702125489998385 482 (1.72064e+145)}
; -1.6725914942661426199066454501007683575153350830078125p916 - 1.3779477819595167265021018465631641447544097900390625p482 == -1.6725914942661426199066454501007683575153350830078125p916
; [HW: -1.6725914942661426199066454501007683575153350830078125p916] 

; mpf : - 3029082802949565 916
; mpfd: - 3029082802949565 916 (-9.26544e+275) class: Neg. norm. non-zero
; hwf : - 3029082802949565 916 (-9.26544e+275) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110010011 #b1010110000101110111101001100011101110000110110111101)))
(assert (= y (fp #b0 #b10111100001 #b0110000011000001001011111001001100011100101000110001)))
(assert (= r (fp #b1 #b11110010011 #b1010110000101110111101001100011101110000110110111101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
