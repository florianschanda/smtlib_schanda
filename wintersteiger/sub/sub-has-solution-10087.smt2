(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.360034805874991814533814249443821609020233154296875p-62 {+ 1621452617579022 -62 (2.94911e-019)}
; Y = 1.39736460683202867727459306479431688785552978515625p-807 {+ 1789571095258948 -807 (1.63721e-243)}
; 1.360034805874991814533814249443821609020233154296875p-62 - 1.39736460683202867727459306479431688785552978515625p-807 == 1.3600348058749915924892093244125135242938995361328125p-62
; [HW: 1.3600348058749915924892093244125135242938995361328125p-62] 

; mpf : + 1621452617579021 -62
; mpfd: + 1621452617579021 -62 (2.94911e-019) class: Pos. norm. non-zero
; hwf : + 1621452617579021 -62 (2.94911e-019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000001 #b0101110000101011001111011011010010100111101000001110)))
(assert (= y (fp #b0 #b00011011000 #b0110010110111001101011111101011011101110011101000100)))
(assert (= r (fp #b0 #b01111000001 #b0101110000101011001111011011010010100111101000001101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
