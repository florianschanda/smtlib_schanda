(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8579946277681493871369866610621102154254913330078125p112 {- 3864064285902525 112 (-9.64726e+033)}
; Y = 1.6240409299998030956402317315223626792430877685546875p-89 {+ 2810430499811051 -89 (2.62378e-027)}
; -1.8579946277681493871369866610621102154254913330078125p112 - 1.6240409299998030956402317315223626792430877685546875p-89 == -1.8579946277681493871369866610621102154254913330078125p112
; [HW: -1.8579946277681493871369866610621102154254913330078125p112] 

; mpf : - 3864064285902525 112
; mpfd: - 3864064285902525 112 (-9.64726e+033) class: Neg. norm. non-zero
; hwf : - 3864064285902525 112 (-9.64726e+033) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101111 #b1101101110100101100010010011001001101000011010111101)))
(assert (= y (fp #b0 #b01110100110 #b1001111111000001001001010111100110110110111011101011)))
(assert (= r (fp #b1 #b10001101111 #b1101101110100101100010010011001001101000011010111101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
