(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.076138500537485054309172483044676482677459716796875p-111 {- 342897322649166 -111 (-4.14513e-034)}
; Y = -1.469378439449007256456525283283554017543792724609375p-58 {- 2113892564998294 -58 (-5.09793e-018)}
; -1.076138500537485054309172483044676482677459716796875p-111 - -1.469378439449007256456525283283554017543792724609375p-58 == 1.469378439449007256456525283283554017543792724609375p-58
; [HW: 1.469378439449007256456525283283554017543792724609375p-58] 

; mpf : + 2113892564998294 -58
; mpfd: + 2113892564998294 -58 (5.09793e-018) class: Pos. norm. non-zero
; hwf : + 2113892564998294 -58 (5.09793e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010000 #b0001001101111101110100000001000111000110011001001110)))
(assert (= y (fp #b1 #b01111000101 #b0111100000101001001011110111011011100001100010010110)))
(assert (= r (fp #b0 #b01111000101 #b0111100000101001001011110111011011100001100010010110)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
