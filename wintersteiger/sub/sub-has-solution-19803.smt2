(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.625983516305602893936566033517010509967803955078125p495 {+ 2819179130773986 495 (1.66327e+149)}
; Y = 1.380541940479842910605157157988287508487701416015625p-455 {+ 1713808541343866 -455 (1.48389e-137)}
; 1.625983516305602893936566033517010509967803955078125p495 - 1.380541940479842910605157157988287508487701416015625p-455 == 1.6259835163056026718919611084857024252414703369140625p495
; [HW: 1.6259835163056026718919611084857024252414703369140625p495] 

; mpf : + 2819179130773985 495
; mpfd: + 2819179130773985 495 (1.66327e+149) class: Pos. norm. non-zero
; hwf : + 2819179130773985 495 (1.66327e+149) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101110 #b1010000001000000011101001010101001011110000111100010)))
(assert (= y (fp #b0 #b01000111000 #b0110000101101011001100100101010100011110000001111010)))
(assert (= r (fp #b0 #b10111101110 #b1010000001000000011101001010101001011110000111100001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
