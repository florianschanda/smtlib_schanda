(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1358699147823714259430971651454456150531768798828125p411 {+ 611903697584749 411 (6.00699e+123)}
; Y = -1.4660339760295257871547391914646141231060028076171875p-183 {- 2098830440788563 -183 (-1.19579e-055)}
; 1.1358699147823714259430971651454456150531768798828125p411 - -1.4660339760295257871547391914646141231060028076171875p-183 == 1.1358699147823714259430971651454456150531768798828125p411
; [HW: 1.1358699147823714259430971651454456150531768798828125p411] 

; mpf : + 611903697584749 411
; mpfd: + 611903697584749 411 (6.00699e+123) class: Pos. norm. non-zero
; hwf : + 611903697584749 411 (6.00699e+123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011010 #b0010001011001000010111101110100010000000001001101101)))
(assert (= y (fp #b1 #b01101001000 #b0111011101001110000000001010110111011111001001010011)))
(assert (= r (fp #b0 #b10110011010 #b0010001011001000010111101110100010000000001001101101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
