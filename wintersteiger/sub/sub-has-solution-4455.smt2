(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4544279497892669272829380133771337568759918212890625p482 {+ 2046561545337681 482 (1.81614e+145)}
; Y = -1.2075279097184841159418056122376583516597747802734375p111 {- 934622616877143 111 (-3.13492e+033)}
; 1.4544279497892669272829380133771337568759918212890625p482 - -1.2075279097184841159418056122376583516597747802734375p111 == 1.454427949789267149327542938408441841602325439453125p482
; [HW: 1.454427949789267149327542938408441841602325439453125p482] 

; mpf : + 2046561545337682 482
; mpfd: + 2046561545337682 482 (1.81614e+145) class: Pos. norm. non-zero
; hwf : + 2046561545337682 482 (1.81614e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100001 #b0111010001010101011000111101111010111011101101010001)))
(assert (= y (fp #b1 #b10001101110 #b0011010100100000100011001001000100111111100001010111)))
(assert (= r (fp #b0 #b10111100001 #b0111010001010101011000111101111010111011101101010010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
