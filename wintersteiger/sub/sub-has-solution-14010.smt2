(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.815075070173282512087098439224064350128173828125p704 {- 3670771782311376 704 (-1.52761e+212)}
; Y = -1.821422414850432769384269704460166394710540771484375p-697 {- 3699357681434182 -697 (-2.77015e-210)}
; -1.815075070173282512087098439224064350128173828125p704 - -1.821422414850432769384269704460166394710540771484375p-697 == -1.8150750701732822900424935141927562654018402099609375p704
; [HW: -1.8150750701732822900424935141927562654018402099609375p704] 

; mpf : - 3670771782311375 704
; mpfd: - 3670771782311375 704 (-1.52761e+212) class: Neg. norm. non-zero
; hwf : - 3670771782311375 704 (-1.52761e+212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111111 #b1101000010101000110000101000001000101101110111010000)))
(assert (= y (fp #b1 #b00101000110 #b1101001001001000101111010100011111111011111001000110)))
(assert (= r (fp #b1 #b11010111111 #b1101000010101000110000101000001000101101110111001111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
