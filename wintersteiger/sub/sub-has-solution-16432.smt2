(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5212106624989838454808932510786689817905426025390625p499 {- 2347324145411953 499 (-2.48976e+150)}
; Y = -1.3842077240089938339195896332967095077037811279296875p-707 {- 1730317762679771 -707 (-2.05586e-213)}
; -1.5212106624989838454808932510786689817905426025390625p499 - -1.3842077240089938339195896332967095077037811279296875p-707 == -1.5212106624989838454808932510786689817905426025390625p499
; [HW: -1.5212106624989838454808932510786689817905426025390625p499] 

; mpf : - 2347324145411953 499
; mpfd: - 2347324145411953 499 (-2.48976e+150) class: Neg. norm. non-zero
; hwf : - 2347324145411953 499 (-2.48976e+150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110010 #b1000010101101110000011111101110111000010011101110001)))
(assert (= y (fp #b1 #b00100111100 #b0110001001011011011011111111100101111101001111011011)))
(assert (= r (fp #b1 #b10111110010 #b1000010101101110000011111101110111000010011101110001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
