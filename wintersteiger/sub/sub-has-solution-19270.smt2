(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4194893876629155471391641185618937015533447265625p273 {- 1889212249964584 273 (-2.15437e+082)}
; Y = 1.4062764123220572454187049515894614160060882568359375p-591 {+ 1829706299143039 -591 (1.73517e-178)}
; -1.4194893876629155471391641185618937015533447265625p273 - 1.4062764123220572454187049515894614160060882568359375p-591 == -1.4194893876629155471391641185618937015533447265625p273
; [HW: -1.4194893876629155471391641185618937015533447265625p273] 

; mpf : - 1889212249964584 273
; mpfd: - 1889212249964584 273 (-2.15437e+082) class: Neg. norm. non-zero
; hwf : - 1889212249964584 273 (-2.15437e+082) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010000 #b0110101101100011101010000001000100001000000000101000)))
(assert (= y (fp #b0 #b00110110000 #b0110100000000001101110110010000000001111001101111111)))
(assert (= r (fp #b1 #b10100010000 #b0110101101100011101010000001000100001000000000101000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
