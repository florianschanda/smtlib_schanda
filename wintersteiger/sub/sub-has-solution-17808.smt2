(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7566091984557130611932507235906086862087249755859375p378 {- 3407464904230239 378 (-1.08147e+114)}
; Y = -1.041908268298181727828932707780040800571441650390625p-998 {- 188738061491434 -998 (-3.8895e-301)}
; -1.7566091984557130611932507235906086862087249755859375p378 - -1.041908268298181727828932707780040800571441650390625p-998 == -1.756609198455712839148645798559300601482391357421875p378
; [HW: -1.756609198455712839148645798559300601482391357421875p378] 

; mpf : - 3407464904230238 378
; mpfd: - 3407464904230238 378 (-1.08147e+114) class: Neg. norm. non-zero
; hwf : - 3407464904230238 378 (-1.08147e+114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111001 #b1100000110110001001000111111001100111000010101011111)))
(assert (= y (fp #b1 #b00000011001 #b0000101010111010100000000001000111000101110011101010)))
(assert (= r (fp #b1 #b10101111001 #b1100000110110001001000111111001100111000010101011110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
