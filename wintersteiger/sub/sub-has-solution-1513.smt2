(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6018033940360927314117134301341138780117034912109375p948 {- 2710281541131247 948 (-3.81105e+285)}
; Y = -1.993847078905621739153275484568439424037933349609375p252 {- 4475889334222614 252 (-1.44295e+076)}
; -1.6018033940360927314117134301341138780117034912109375p948 - -1.993847078905621739153275484568439424037933349609375p252 == -1.601803394036092509367108505102805793285369873046875p948
; [HW: -1.601803394036092509367108505102805793285369873046875p948] 

; mpf : - 2710281541131246 948
; mpfd: - 2710281541131246 948 (-3.81105e+285) class: Neg. norm. non-zero
; hwf : - 2710281541131246 948 (-3.81105e+285) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110011 #b1001101000001111110010011000100000000001101111101111)))
(assert (= y (fp #b1 #b10011111011 #b1111111001101100110000110001110100011111111100010110)))
(assert (= r (fp #b1 #b11110110011 #b1001101000001111110010011000100000000001101111101110)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
