(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9469877879465486980592459076433442533016204833984375p593 {+ 4264853848920487 593 (6.31176e+178)}
; Y = 1.3607160019322768196303741206065751612186431884765625p591 {+ 1624520451888777 591 (1.1028e+178)}
; 1.9469877879465486980592459076433442533016204833984375p593 - 1.3607160019322768196303741206065751612186431884765625p591 == 1.60680878746347932661819868371821939945220947265625p593
; [HW: 1.60680878746347932661819868371821939945220947265625p593] 

; mpf : + 2732823829105668 593
; mpfd: + 2732823829105668 593 (5.20897e+178) class: Pos. norm. non-zero
; hwf : + 2732823829105668 593 (5.20897e+178) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010000 #b1111001001101101110010101010101011110001000110100111)))
(assert (= y (fp #b0 #b11001001110 #b0101110001010111111000100100011101110001011010001001)))
(assert (= r (fp #b0 #b11001010000 #b1001101101010111110100100001100100010100110000000100)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
