(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8761536226964976581399469068855978548526763916015625p-399 {+ 3945845128695257 -399 (1.45312e-120)}
; Y = 1.0711295087788188507005315841524861752986907958984375p829 {+ 320338829231335 829 (3.8345e+249)}
; 1.8761536226964976581399469068855978548526763916015625p-399 - 1.0711295087788188507005315841524861752986907958984375p829 == -1.0711295087788188507005315841524861752986907958984375p829
; [HW: -1.0711295087788188507005315841524861752986907958984375p829] 

; mpf : - 320338829231335 829
; mpfd: - 320338829231335 829 (-3.8345e+249) class: Neg. norm. non-zero
; hwf : - 320338829231335 829 (-3.8345e+249) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001110000 #b1110000001001011100110101001001111000000110111011001)))
(assert (= y (fp #b0 #b11100111100 #b0001001000110101100010110010000111111100010011100111)))
(assert (= r (fp #b1 #b11100111100 #b0001001000110101100010110010000111111100010011100111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
