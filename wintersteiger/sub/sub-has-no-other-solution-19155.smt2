(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6767749544105348125100363176898099482059478759765625p-62 {+ 3047923432496969 -62 (3.63593e-019)}
; Y = 1.1340665336147310870984483699430711567401885986328125p421 {+ 603781990830157 421 (6.14139e+126)}
; 1.6767749544105348125100363176898099482059478759765625p-62 - 1.1340665336147310870984483699430711567401885986328125p421 == -1.1340665336147310870984483699430711567401885986328125p421
; [HW: -1.1340665336147310870984483699430711567401885986328125p421] 

; mpf : - 603781990830157 421
; mpfd: - 603781990830157 421 (-6.14139e+126) class: Neg. norm. non-zero
; hwf : - 603781990830157 421 (-6.14139e+126) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000001 #b1010110101000001000111111001011111110001111101001001)))
(assert (= y (fp #b0 #b10110100100 #b0010001001010010001011110011000101011101000001001101)))
(assert (= r (fp #b1 #b10110100100 #b0010001001010010001011110011000101011101000001001101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
