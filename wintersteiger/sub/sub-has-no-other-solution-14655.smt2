(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7417172049170395187189797070459462702274322509765625p34 {+ 3340397327678665 34 (2.99225e+010)}
; Y = 1.2649847561490374925341484413365833461284637451171875p479 {+ 1193385249051667 479 (1.97448e+144)}
; 1.7417172049170395187189797070459462702274322509765625p34 - 1.2649847561490374925341484413365833461284637451171875p479 == -1.2649847561490374925341484413365833461284637451171875p479
; [HW: -1.2649847561490374925341484413365833461284637451171875p479] 

; mpf : - 1193385249051667 479
; mpfd: - 1193385249051667 479 (-1.97448e+144) class: Neg. norm. non-zero
; hwf : - 1193385249051667 479 (-1.97448e+144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100001 #b1011110111100001001011011100000111111111110011001001)))
(assert (= y (fp #b0 #b10111011110 #b0100001111010110000010100111110110011001010000010011)))
(assert (= r (fp #b1 #b10111011110 #b0100001111010110000010100111110110011001010000010011)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
