(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8191931662420148807512987332302145659923553466796875p-579 {+ 3689318038231995 -579 (9.19414e-175)}
; Y = 1.8226566937836785609050593848223797976970672607421875p-872 {+ 3704916379578019 -872 (5.78827e-263)}
; 1.8191931662420148807512987332302145659923553466796875p-579 - 1.8226566937836785609050593848223797976970672607421875p-872 == 1.819193166242014658706693808198906481266021728515625p-579
; [HW: 1.819193166242014658706693808198906481266021728515625p-579] 

; mpf : + 3689318038231994 -579
; mpfd: + 3689318038231994 -579 (9.19414e-175) class: Pos. norm. non-zero
; hwf : + 3689318038231994 -579 (9.19414e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111100 #b1101000110110110101001001011001000011101101110111011)))
(assert (= y (fp #b0 #b00010010111 #b1101001010011001101000010000101110100010111010100011)))
(assert (= r (fp #b0 #b00110111100 #b1101000110110110101001001011001000011101101110111010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
