(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9105412084189625776531329393037594854831695556640625p317 {+ 4100713046941121 317 (5.10111e+095)}
; Y = 1.1235065903487473359945170159335248172283172607421875p263 {+ 556224234272419 263 (1.66519e+079)}
; 1.9105412084189625776531329393037594854831695556640625p317 - 1.1235065903487473359945170159335248172283172607421875p263 == 1.9105412084189623556085280142724514007568359375p317
; [HW: 1.9105412084189623556085280142724514007568359375p317] 

; mpf : + 4100713046941120 317
; mpfd: + 4100713046941120 317 (5.10111e+095) class: Pos. norm. non-zero
; hwf : + 4100713046941120 317 (5.10111e+095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111100 #b1110100100011001001110101000011111010001110111000001)))
(assert (= y (fp #b0 #b10100000110 #b0001111110011110001000001011111001100011011010100011)))
(assert (= r (fp #b0 #b10100111100 #b1110100100011001001110101000011111010001110111000000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
