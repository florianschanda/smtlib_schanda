(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.481094337935398019823196591460146009922027587890625p-809 {- 2166656281055914 -809 (-4.33827e-244)}
; Y = 1.2227449053915340204667927537229843437671661376953125p755 {+ 1003153872919989 755 (2.3173e+227)}
; -1.481094337935398019823196591460146009922027587890625p-809 - 1.2227449053915340204667927537229843437671661376953125p755 == -1.222744905391534242511397678754292428493499755859375p755
; [HW: -1.222744905391534242511397678754292428493499755859375p755] 

; mpf : - 1003153872919990 755
; mpfd: - 1003153872919990 755 (-2.3173e+227) class: Neg. norm. non-zero
; hwf : - 1003153872919990 755 (-2.3173e+227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010110 #b0111101100101000111111111001111110111001001010101010)))
(assert (= y (fp #b0 #b11011110010 #b0011100100000101110011110110010000000001110110110101)))
(assert (= r (fp #b1 #b11011110010 #b0011100100000101110011110110010000000001110110110110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
