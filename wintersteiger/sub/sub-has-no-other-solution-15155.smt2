(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.14901501651427651040648925118148326873779296875p1 {+ 671103972846304 1 (2.29803)}
; Y = 1.2742053338068617396316994927474297583103179931640625p688 {+ 1234911039155585 688 (1.63635e+207)}
; 1.14901501651427651040648925118148326873779296875p1 - 1.2742053338068617396316994927474297583103179931640625p688 == -1.274205333806861517587094567716121673583984375p688
; [HW: -1.274205333806861517587094567716121673583984375p688] 

; mpf : - 1234911039155584 688
; mpfd: - 1234911039155584 688 (-1.63635e+207) class: Neg. norm. non-zero
; hwf : - 1234911039155584 688 (-1.63635e+207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000000 #b0010011000100101110110010001111010001010101011100000)))
(assert (= y (fp #b0 #b11010101111 #b0100011000110010010100100001110100010110110110000001)))
(assert (= r (fp #b1 #b11010101111 #b0100011000110010010100100001110100010110110110000000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
