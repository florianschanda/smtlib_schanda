(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.45600750036220372152229174389503896236419677734375p950 {+ 2053675208709372 950 (1.38567e+286)}
; Y = -1.07946203882288926934052142314612865447998046875p-793 {- 357865208432864 -793 (-2.07215e-239)}
; 1.45600750036220372152229174389503896236419677734375p950 - -1.07946203882288926934052142314612865447998046875p-793 == 1.45600750036220372152229174389503896236419677734375p950
; [HW: 1.45600750036220372152229174389503896236419677734375p950] 

; mpf : + 2053675208709372 950
; mpfd: + 2053675208709372 950 (1.38567e+286) class: Pos. norm. non-zero
; hwf : + 2053675208709372 950 (1.38567e+286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110101 #b0111010010111100111010000101010011001001010011111100)))
(assert (= y (fp #b1 #b00011100110 #b0001010001010111100111111100101000000100100011100000)))
(assert (= r (fp #b0 #b11110110101 #b0111010010111100111010000101010011001001010011111100)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
