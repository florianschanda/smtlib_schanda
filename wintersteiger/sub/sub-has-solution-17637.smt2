(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.444677369990620352524501868174411356449127197265625p195 {- 2002648837789850 195 (-7.25471e+058)}
; Y = -1.46882660640801798734855765360407531261444091796875p-663 {- 2111407329920524 -663 (-3.83781e-200)}
; -1.444677369990620352524501868174411356449127197265625p195 - -1.46882660640801798734855765360407531261444091796875p-663 == -1.444677369990620352524501868174411356449127197265625p195
; [HW: -1.444677369990620352524501868174411356449127197265625p195] 

; mpf : - 2002648837789850 195
; mpfd: - 2002648837789850 195 (-7.25471e+058) class: Neg. norm. non-zero
; hwf : - 2002648837789850 195 (-7.25471e+058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000010 #b0111000111010110011000000100100101100001100010011010)))
(assert (= y (fp #b1 #b00101101000 #b0111100000000101000001010011111000000100011000001100)))
(assert (= r (fp #b1 #b10011000010 #b0111000111010110011000000100100101100001100010011010)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
