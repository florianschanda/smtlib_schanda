(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.52938719585754068219785040128044784069061279296875p381 {+ 2384147977998732 381 (7.53262e+114)}
; Y = 1.3685218873614506396307888280716724693775177001953125p182 {+ 1659675034598901 182 (8.38901e+054)}
; 1.52938719585754068219785040128044784069061279296875p381 - 1.3685218873614506396307888280716724693775177001953125p182 == 1.52938719585754068219785040128044784069061279296875p381
; [HW: 1.52938719585754068219785040128044784069061279296875p381] 

; mpf : + 2384147977998732 381
; mpfd: + 2384147977998732 381 (7.53262e+114) class: Pos. norm. non-zero
; hwf : + 2384147977998732 381 (7.53262e+114) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101111100 #b1000011110000101111010110101010100100001000110001100)))
(assert (= y (fp #b0 #b10010110101 #b0101111001010111011100110100111000010011110111110101)))
(assert (= r (fp #b0 #b10101111100 #b1000011110000101111010110101010100100001000110001100)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
