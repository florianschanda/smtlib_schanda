(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.181251783425218970791092942818067967891693115234375p188 {+ 816285464294054 188 (4.63427e+056)}
; Y = 1.9428162680248302063290566366049461066722869873046875p-762 {+ 4246066993355467 -762 (8.00894e-230)}
; 1.181251783425218970791092942818067967891693115234375p188 - 1.9428162680248302063290566366049461066722869873046875p-762 == 1.1812517834252187487464880177867598831653594970703125p188
; [HW: 1.1812517834252187487464880177867598831653594970703125p188] 

; mpf : + 816285464294053 188
; mpfd: + 816285464294053 188 (4.63427e+056) class: Pos. norm. non-zero
; hwf : + 816285464294053 188 (4.63427e+056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111011 #b0010111001100110100001000101001000100111001010100110)))
(assert (= y (fp #b0 #b00100000101 #b1111000101011100011010000010110101001101101011001011)))
(assert (= r (fp #b0 #b10010111011 #b0010111001100110100001000101001000100111001010100101)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
