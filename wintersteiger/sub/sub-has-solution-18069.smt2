(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.400300923797999086417576108942739665508270263671875p38 {- 1802795091252734 38 (-3.84912e+011)}
; Y = -1.4753061132968714463942205838975496590137481689453125p271 {- 2140588434730709 271 (-5.59772e+081)}
; -1.400300923797999086417576108942739665508270263671875p38 - -1.4753061132968714463942205838975496590137481689453125p271 == 1.4753061132968714463942205838975496590137481689453125p271
; [HW: 1.4753061132968714463942205838975496590137481689453125p271] 

; mpf : + 2140588434730709 271
; mpfd: + 2140588434730709 271 (5.59772e+081) class: Pos. norm. non-zero
; hwf : + 2140588434730709 271 (5.59772e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100101 #b0110011001111010000111110001000001000101010111111110)))
(assert (= y (fp #b1 #b10100001110 #b0111100110101101101010010101010000110010111011010101)))
(assert (= r (fp #b0 #b10100001110 #b0111100110101101101010010101010000110010111011010101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
