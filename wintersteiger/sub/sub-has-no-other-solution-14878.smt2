(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2020954237892185201275196959613822400569915771484375p-707 {- 910156875270407 -707 (-1.78539e-213)}
; Y = -1.779166597133157612375953249284066259860992431640625p-172 {- 3509054396508426 -172 (-2.97206e-052)}
; -1.2020954237892185201275196959613822400569915771484375p-707 - -1.779166597133157612375953249284066259860992431640625p-172 == 1.7791665971331573903313483242527581751346588134765625p-172
; [HW: 1.7791665971331573903313483242527581751346588134765625p-172] 

; mpf : + 3509054396508425 -172
; mpfd: + 3509054396508425 -172 (2.97206e-052) class: Pos. norm. non-zero
; hwf : + 3509054396508425 -172 (2.97206e-052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100111100 #b0011001110111100100001101001001111011000100100000111)))
(assert (= y (fp #b1 #b01101010011 #b1100011101110111011101100100110011010010100100001010)))
(assert (= r (fp #b0 #b01101010011 #b1100011101110111011101100100110011010010100100001001)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
