(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.146512274622608185126182434032671153545379638671875p536 {+ 659832625395582 536 (2.57903e+161)}
; Y = 1.052582216508655132969352052896283566951751708984375p-295 {+ 236809250674694 -295 (1.65351e-089)}
; 1.146512274622608185126182434032671153545379638671875p536 - 1.052582216508655132969352052896283566951751708984375p-295 == 1.1465122746226079630815775090013630688190460205078125p536
; [HW: 1.1465122746226079630815775090013630688190460205078125p536] 

; mpf : + 659832625395581 536
; mpfd: + 659832625395581 536 (2.57903e+161) class: Pos. norm. non-zero
; hwf : + 659832625395581 536 (2.57903e+161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010111 #b0010010110000001110101000001001111110111011101111110)))
(assert (= y (fp #b0 #b01011011000 #b0000110101110110000001110011010001000001100000000110)))
(assert (= r (fp #b0 #b11000010111 #b0010010110000001110101000001001111110111011101111101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
