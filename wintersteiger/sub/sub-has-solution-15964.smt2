(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.57006565288989730078128559398464858531951904296875p-6 {- 2567347461931660 -6 (-0.0245323)}
; Y = 1.4905999143298307441085626123822294175624847412109375p995 {+ 2209465591363823 995 (4.99122e+299)}
; -1.57006565288989730078128559398464858531951904296875p-6 - 1.4905999143298307441085626123822294175624847412109375p995 == -1.4905999143298307441085626123822294175624847412109375p995
; [HW: -1.4905999143298307441085626123822294175624847412109375p995] 

; mpf : - 2209465591363823 995
; mpfd: - 2209465591363823 995 (-4.99122e+299) class: Neg. norm. non-zero
; hwf : - 2209465591363823 995 (-4.99122e+299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111111001 #b1001000111101111110100101001011110111100001010001100)))
(assert (= y (fp #b0 #b11111100010 #b0111110110010111111101001011101101110111100011101111)))
(assert (= r (fp #b1 #b11111100010 #b0111110110010111111101001011101101110111100011101111)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
