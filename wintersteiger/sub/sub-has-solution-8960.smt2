(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.953837562945488048882225484703667461872100830078125p38 {- 4295702493053282 38 (-5.37067e+011)}
; Y = -1.8243572212608973881486917889560572803020477294921875p-384 {- 3712574874490755 -384 (-4.63011e-116)}
; -1.953837562945488048882225484703667461872100830078125p38 - -1.8243572212608973881486917889560572803020477294921875p-384 == -1.9538375629454878268376205596723593771457672119140625p38
; [HW: -1.9538375629454878268376205596723593771457672119140625p38] 

; mpf : - 4295702493053281 38
; mpfd: - 4295702493053281 38 (-5.37067e+011) class: Neg. norm. non-zero
; hwf : - 4295702493053281 38 (-5.37067e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100101 #b1111010000101110101100101101001010001100000101100010)))
(assert (= y (fp #b1 #b01001111111 #b1101001100001001000100110010100110001001011110000011)))
(assert (= r (fp #b1 #b10000100101 #b1111010000101110101100101101001010001100000101100001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
