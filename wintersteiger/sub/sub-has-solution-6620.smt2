(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1625584419267747104953514281078241765499114990234375p833 {- 732098138487351 833 (-6.65888e+250)}
; Y = 1.96742208648419758532099876902066171169281005859375p97 {+ 4356881748200220 97 (3.1175e+029)}
; -1.1625584419267747104953514281078241765499114990234375p833 - 1.96742208648419758532099876902066171169281005859375p97 == -1.1625584419267747104953514281078241765499114990234375p833
; [HW: -1.1625584419267747104953514281078241765499114990234375p833] 

; mpf : - 732098138487351 833
; mpfd: - 732098138487351 833 (-6.65888e+250) class: Neg. norm. non-zero
; hwf : - 732098138487351 833 (-6.65888e+250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000000 #b0010100110011101011011100001011111000011101000110111)))
(assert (= y (fp #b0 #b10001100000 #b1111011110101000111110010100111011100000101100011100)))
(assert (= r (fp #b1 #b11101000000 #b0010100110011101011011100001011111000011101000110111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
