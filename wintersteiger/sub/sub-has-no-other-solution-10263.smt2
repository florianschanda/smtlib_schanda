(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.861898353465714084364890368306078016757965087890625p677 {+ 3881645103499434 677 (1.16752e+204)}
; Y = -1.321357744044058701859967186464928090572357177734375p415 {- 1447266616329446 415 (-1.11807e+125)}
; 1.861898353465714084364890368306078016757965087890625p677 - -1.321357744044058701859967186464928090572357177734375p415 == 1.861898353465714084364890368306078016757965087890625p677
; [HW: 1.861898353465714084364890368306078016757965087890625p677] 

; mpf : + 3881645103499434 677
; mpfd: + 3881645103499434 677 (1.16752e+204) class: Pos. norm. non-zero
; hwf : + 3881645103499434 677 (1.16752e+204) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010100100 #b1101110010100101010111101101100010011100100010101010)))
(assert (= y (fp #b1 #b10110011110 #b0101001001000100100000000100100011111100010011100110)))
(assert (= r (fp #b0 #b11010100100 #b1101110010100101010111101101100010011100100010101010)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
