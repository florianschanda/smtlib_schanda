(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2825697874666388553777096603880636394023895263671875p158 {- 1272581189540915 158 (-4.68619e+047)}
; Y = 1.6333435277995302925546639016829431056976318359375p-849 {+ 2852325675795480 -849 (4.35122e-256)}
; -1.2825697874666388553777096603880636394023895263671875p158 - 1.6333435277995302925546639016829431056976318359375p-849 == -1.2825697874666388553777096603880636394023895263671875p158
; [HW: -1.2825697874666388553777096603880636394023895263671875p158] 

; mpf : - 1272581189540915 158
; mpfd: - 1272581189540915 158 (-4.68619e+047) class: Neg. norm. non-zero
; hwf : - 1272581189540915 158 (-4.68619e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011101 #b0100100001010110011111100101110000000001110000110011)))
(assert (= y (fp #b0 #b00010101110 #b1010001000100010110011010010101100001000010000011000)))
(assert (= r (fp #b1 #b10010011101 #b0100100001010110011111100101110000000001110000110011)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
