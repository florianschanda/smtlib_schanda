(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8445250343692334293876911033294163644313812255859375p107 {+ 3803402630090335 107 (2.99291e+032)}
; Y = -1.8829491348884073165237396096927113831043243408203125p-923 {- 3976449394870533 -923 (-2.65554e-278)}
; 1.8445250343692334293876911033294163644313812255859375p107 - -1.8829491348884073165237396096927113831043243408203125p-923 == 1.8445250343692334293876911033294163644313812255859375p107
; [HW: 1.8445250343692334293876911033294163644313812255859375p107] 

; mpf : + 3803402630090335 107
; mpfd: + 3803402630090335 107 (2.99291e+032) class: Pos. norm. non-zero
; hwf : + 3803402630090335 107 (2.99291e+032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101010 #b1101100000110010110010101110101101000100111001011111)))
(assert (= y (fp #b1 #b00001100100 #b1110001000001000111101000101101001100000100100000101)))
(assert (= r (fp #b0 #b10001101010 #b1101100000110010110010101110101101000100111001011111)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
