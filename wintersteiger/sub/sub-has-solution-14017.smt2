(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8552945510315812516211053662118501961231231689453125p-706 {+ 3851904221317845 -706 (5.51107e-213)}
; Y = 1.4785565784703524894183601645636372268199920654296875p511 {+ 2155227228474779 511 (9.9121e+153)}
; 1.8552945510315812516211053662118501961231231689453125p-706 - 1.4785565784703524894183601645636372268199920654296875p511 == -1.478556578470352267373755239532329142093658447265625p511
; [HW: -1.478556578470352267373755239532329142093658447265625p511] 

; mpf : - 2155227228474778 511
; mpfd: - 2155227228474778 511 (-9.9121e+153) class: Neg. norm. non-zero
; hwf : - 2155227228474778 511 (-9.9121e+153) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111101 #b1101101011110100100101010110110100100000101011010101)))
(assert (= y (fp #b0 #b10111111110 #b0111101010000010101011110001010111010000110110011011)))
(assert (= r (fp #b1 #b10111111110 #b0111101010000010101011110001010111010000110110011010)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
