(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9808001648359592206105617151479236781597137451171875p141 {+ 4417131256880147 141 (5.52166e+042)}
; Y = 1.4985429275527273329515764999086968600749969482421875p470 {+ 2245237742754659 470 (4.56843e+141)}
; 1.9808001648359592206105617151479236781597137451171875p141 - 1.4985429275527273329515764999086968600749969482421875p470 == -1.4985429275527273329515764999086968600749969482421875p470
; [HW: -1.4985429275527273329515764999086968600749969482421875p470] 

; mpf : - 2245237742754659 470
; mpfd: - 2245237742754659 470 (-4.56843e+141) class: Neg. norm. non-zero
; hwf : - 2245237742754659 470 (-4.56843e+141) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001100 #b1111101100010101101110000011011111100001110000010011)))
(assert (= y (fp #b0 #b10111010101 #b0111111110100000100000100110000101111101101101100011)))
(assert (= r (fp #b1 #b10111010101 #b0111111110100000100000100110000101111101101101100011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
