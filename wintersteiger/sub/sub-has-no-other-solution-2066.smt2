(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.835347669225798394876392194419167935848236083984375p157 {+ 3762071451850118 157 (3.35295e+047)}
; Y = -1.29432808539974075756617821753025054931640625p-47 {- 1325535855730944 -47 (-9.19675e-015)}
; 1.835347669225798394876392194419167935848236083984375p157 - -1.29432808539974075756617821753025054931640625p-47 == 1.835347669225798394876392194419167935848236083984375p157
; [HW: 1.835347669225798394876392194419167935848236083984375p157] 

; mpf : + 3762071451850118 157
; mpfd: + 3762071451850118 157 (3.35295e+047) class: Pos. norm. non-zero
; hwf : + 3762071451850118 157 (3.35295e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010011100 #b1101010111011001010110000100100000011101010110000110)))
(assert (= y (fp #b1 #b01111010000 #b0100101101011001000101011101110100010110000100000000)))
(assert (= r (fp #b0 #b10010011100 #b1101010111011001010110000100100000011101010110000110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
