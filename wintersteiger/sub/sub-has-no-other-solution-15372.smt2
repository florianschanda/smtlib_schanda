(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5085693655655110223534620672580786049365997314453125p727 {+ 2290392805252885 727 (1.06506e+219)}
; Y = -0.906997843393373859299799732980318367481231689453125p-1022 {- 4084755149532242 -1023 (-2.01814e-308)}
; 1.5085693655655110223534620672580786049365997314453125p727 - -0.906997843393373859299799732980318367481231689453125p-1022 == 1.5085693655655110223534620672580786049365997314453125p727
; [HW: 1.5085693655655110223534620672580786049365997314453125p727] 

; mpf : + 2290392805252885 727
; mpfd: + 2290392805252885 727 (1.06506e+219) class: Pos. norm. non-zero
; hwf : + 2290392805252885 727 (1.06506e+219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010110 #b1000001000110001100110100001100011011001111100010101)))
(assert (= y (fp #b1 #b00000000000 #b1110100000110001000000101011101011101010110001010010)))
(assert (= r (fp #b0 #b11011010110 #b1000001000110001100110100001100011011001111100010101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
