(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.46989358814420878474038545391522347927093505859375p-392 {- 2116212588470044 -392 (-1.45723e-118)}
; Y = 1.6110801113667070350032872738665901124477386474609375p293 {+ 2752060161844623 293 (2.56393e+088)}
; -1.46989358814420878474038545391522347927093505859375p-392 - 1.6110801113667070350032872738665901124477386474609375p293 == -1.6110801113667070350032872738665901124477386474609375p293
; [HW: -1.6110801113667070350032872738665901124477386474609375p293] 

; mpf : - 2752060161844623 293
; mpfd: - 2752060161844623 293 (-2.56393e+088) class: Neg. norm. non-zero
; hwf : - 2752060161844623 293 (-2.56393e+088) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001110111 #b0111100001001010111100100011100110101101111100011100)))
(assert (= y (fp #b0 #b10100100100 #b1001110001101111101111110000010110001110010110001111)))
(assert (= r (fp #b1 #b10100100100 #b1001110001101111101111110000010110001110010110001111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
