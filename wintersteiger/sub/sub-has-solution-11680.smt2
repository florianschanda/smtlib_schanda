(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1507141852614466426274475452373735606670379638671875p2 {+ 678756348582899 2 (4.60286)}
; Y = -1.9320739044398467232355187661596573889255523681640625p171 {- 4197687688717057 171 (-5.783e+051)}
; 1.1507141852614466426274475452373735606670379638671875p2 - -1.9320739044398467232355187661596573889255523681640625p171 == 1.9320739044398467232355187661596573889255523681640625p171
; [HW: 1.9320739044398467232355187661596573889255523681640625p171] 

; mpf : + 4197687688717057 171
; mpfd: + 4197687688717057 171 (5.783e+051) class: Pos. norm. non-zero
; hwf : + 4197687688717057 171 (5.783e+051) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000001 #b0010011010010101001101000111000010111101101111110011)))
(assert (= y (fp #b1 #b10010101010 #b1110111010011100011001010011100100000110001100000001)))
(assert (= r (fp #b0 #b10010101010 #b1110111010011100011001010011100100000110001100000001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
