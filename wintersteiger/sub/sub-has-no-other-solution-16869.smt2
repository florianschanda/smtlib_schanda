(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4630203962319738852926320760161615908145904541015625p-696 {+ 2085258483935257 -696 (4.45014e-210)}
; Y = 1.165587874699141490708598212222568690776824951171875p-747 {+ 745741490792126 -747 (1.57448e-225)}
; 1.4630203962319738852926320760161615908145904541015625p-696 - 1.165587874699141490708598212222568690776824951171875p-747 == 1.463020396231973219158817300922237336635589599609375p-696
; [HW: 1.463020396231973219158817300922237336635589599609375p-696] 

; mpf : + 2085258483935254 -696
; mpfd: + 2085258483935254 -696 (4.45014e-210) class: Pos. norm. non-zero
; hwf : + 2085258483935254 -696 (4.45014e-210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000111 #b0111011010001000100000010011001100110010100000011001)))
(assert (= y (fp #b0 #b00100010100 #b0010101001100011111101111000101001110010011010111110)))
(assert (= r (fp #b0 #b00101000111 #b0111011010001000100000010011001100110010100000010110)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
