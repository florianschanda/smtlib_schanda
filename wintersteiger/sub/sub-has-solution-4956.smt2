(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4833868825044895789488919035647995769977569580078125p564 {- 2176980983923005 564 (-8.95719e+169)}
; Y = -1.6230076693794999176390092543442733585834503173828125p-825 {- 2805777107666477 -825 (-7.25394e-249)}
; -1.4833868825044895789488919035647995769977569580078125p564 - -1.6230076693794999176390092543442733585834503173828125p-825 == -1.4833868825044895789488919035647995769977569580078125p564
; [HW: -1.4833868825044895789488919035647995769977569580078125p564] 

; mpf : - 2176980983923005 564
; mpfd: - 2176980983923005 564 (-8.95719e+169) class: Neg. norm. non-zero
; hwf : - 2176980983923005 564 (-8.95719e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110011 #b0111101110111111001111100010001110101100000100111101)))
(assert (= y (fp #b1 #b00011000110 #b1001111101111101011011100011110100100100011000101101)))
(assert (= r (fp #b1 #b11000110011 #b0111101110111111001111100010001110101100000100111101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
