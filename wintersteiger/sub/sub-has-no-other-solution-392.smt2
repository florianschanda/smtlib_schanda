(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5043917444342789213607147758011706173419952392578125p-712 {- 2271578472282973 -712 (-6.98239e-215)}
; Y = 1.7219322419635643139912417609593831002712249755859375p950 {+ 3251293775893855 950 (1.63875e+286)}
; -1.5043917444342789213607147758011706173419952392578125p-712 - 1.7219322419635643139912417609593831002712249755859375p950 == -1.72193224196356453603584668599069118499755859375p950
; [HW: -1.72193224196356453603584668599069118499755859375p950] 

; mpf : - 3251293775893856 950
; mpfd: - 3251293775893856 950 (-1.63875e+286) class: Neg. norm. non-zero
; hwf : - 3251293775893856 950 (-1.63875e+286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110111 #b1000000100011111110100010011111010110111101101011101)))
(assert (= y (fp #b0 #b11110110101 #b1011100011010000100011010010100100101001010101011111)))
(assert (= r (fp #b1 #b11110110101 #b1011100011010000100011010010100100101001010101100000)))
(assert  (not (= (fp.sub roundTowardNegative x y) r)))
(check-sat)
(exit)
