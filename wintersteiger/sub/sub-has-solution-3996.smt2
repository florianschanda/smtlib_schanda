(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8445076121135006719242710460093803703784942626953125p-494 {+ 3803324167225909 -494 (3.60631e-149)}
; Y = -1.5789213669485209212695053793140687048435211181640625p-370 {- 2607230052466177 -370 (-6.56541e-112)}
; 1.8445076121135006719242710460093803703784942626953125p-494 - -1.5789213669485209212695053793140687048435211181640625p-370 == 1.5789213669485209212695053793140687048435211181640625p-370
; [HW: 1.5789213669485209212695053793140687048435211181640625p-370] 

; mpf : + 2607230052466177 -370
; mpfd: + 2607230052466177 -370 (6.56541e-112) class: Pos. norm. non-zero
; hwf : + 2607230052466177 -370 (6.56541e-112) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000010001 #b1101100000110001101001101001111101000000001000110101)))
(assert (= y (fp #b1 #b01010001101 #b1001010000110100001100001101000111111111111000000001)))
(assert (= r (fp #b0 #b01010001101 #b1001010000110100001100001101000111111111111000000001)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
