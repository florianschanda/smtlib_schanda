(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.26055997531364827324296129518188536167144775390625p556 {+ 1173457807730212 556 (2.97332e+167)}
; Y = -1.5117418730453817676817607207340188324451446533203125p634 {- 2304680508757061 634 (-1.07769e+191)}
; 1.26055997531364827324296129518188536167144775390625p556 - -1.5117418730453817676817607207340188324451446533203125p634 == 1.5117418730453817676817607207340188324451446533203125p634
; [HW: 1.5117418730453817676817607207340188324451446533203125p634] 

; mpf : + 2304680508757061 634
; mpfd: + 2304680508757061 634 (1.07769e+191) class: Pos. norm. non-zero
; hwf : + 2304680508757061 634 (1.07769e+191) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101011 #b0100001010110100000011101111110010011110011000100100)))
(assert (= y (fp #b1 #b11001111001 #b1000001100000001100000111111000010111001010001000101)))
(assert (= r (fp #b0 #b11001111001 #b1000001100000001100000111111000010111001010001000101)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
