(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7187117033605308069610373422619886696338653564453125p-947 {- 3236789759441301 -947 (-1.44476e-285)}
; Y = 1.1207748594953301779497678580810315907001495361328125p-326 {+ 543921612218893 -326 (8.1986e-099)}
; -1.7187117033605308069610373422619886696338653564453125p-947 - 1.1207748594953301779497678580810315907001495361328125p-326 == -1.1207748594953301779497678580810315907001495361328125p-326
; [HW: -1.1207748594953301779497678580810315907001495361328125p-326] 

; mpf : - 543921612218893 -326
; mpfd: - 543921612218893 -326 (-8.1986e-099) class: Neg. norm. non-zero
; hwf : - 543921612218893 -326 (-8.1986e-099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001001100 #b1011011111111101011111010111110100101111100110010101)))
(assert (= y (fp #b0 #b01010111001 #b0001111011101011000110011110011110110110001000001101)))
(assert (= r (fp #b1 #b01010111001 #b0001111011101011000110011110011110110110001000001101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
