(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.466826756632644279676469523110426962375640869140625p613 {+ 2102400807217354 613 (4.98616e+184)}
; Y = 1.354045551735638230894664957304485142230987548828125p165 {+ 1594479414868802 165 (6.33261e+049)}
; 1.466826756632644279676469523110426962375640869140625p613 - 1.354045551735638230894664957304485142230987548828125p165 == 1.466826756632644279676469523110426962375640869140625p613
; [HW: 1.466826756632644279676469523110426962375640869140625p613] 

; mpf : + 2102400807217354 613
; mpfd: + 2102400807217354 613 (4.98616e+184) class: Pos. norm. non-zero
; hwf : + 2102400807217354 613 (4.98616e+184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001100100 #b0111011110000001111101010101010010100010100011001010)))
(assert (= y (fp #b0 #b10010100100 #b0101101010100010101110101011000111111111101101000010)))
(assert (= r (fp #b0 #b11001100100 #b0111011110000001111101010101010010100010100011001010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
