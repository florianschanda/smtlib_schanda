(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0712412505792541228544223486096598207950592041015625p-163 {- 320842069562137 -163 (-9.16216e-050)}
; Y = -1.235212727365129214973649141029454767704010009765625p-629 {- 1059303951314394 -629 (-5.54465e-190)}
; -1.0712412505792541228544223486096598207950592041015625p-163 - -1.235212727365129214973649141029454767704010009765625p-629 == -1.0712412505792541228544223486096598207950592041015625p-163
; [HW: -1.0712412505792541228544223486096598207950592041015625p-163] 

; mpf : - 320842069562137 -163
; mpfd: - 320842069562137 -163 (-9.16216e-050) class: Neg. norm. non-zero
; hwf : - 320842069562137 -163 (-9.16216e-050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101011100 #b0001001000111100110111011101100101011101001100011001)))
(assert (= y (fp #b1 #b00110001010 #b0011110000110110111001101011101110100010110111011010)))
(assert (= r (fp #b1 #b01101011100 #b0001001000111100110111011101100101011101001100011001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
