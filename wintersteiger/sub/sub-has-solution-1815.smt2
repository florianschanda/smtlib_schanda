(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.11237601646269457233984212507493793964385986328125p590 {+ 506096585866772 590 (4.50764e+177)}
; Y = -1.6914048240264438760505072423256933689117431640625p976 {- 3113810507847656 976 (-1.08025e+294)}
; 1.11237601646269457233984212507493793964385986328125p590 - -1.6914048240264438760505072423256933689117431640625p976 == 1.6914048240264440980951121673570014536380767822265625p976
; [HW: 1.6914048240264440980951121673570014536380767822265625p976] 

; mpf : + 3113810507847657 976
; mpfd: + 3113810507847657 976 (1.08025e+294) class: Pos. norm. non-zero
; hwf : + 3113810507847657 976 (1.08025e+294) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001101 #b0001110011000100101011001011001110001111111000010100)))
(assert (= y (fp #b1 #b11111001111 #b1011000011111111111010000001001101111101011111101000)))
(assert (= r (fp #b0 #b11111001111 #b1011000011111111111010000001001101111101011111101001)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
