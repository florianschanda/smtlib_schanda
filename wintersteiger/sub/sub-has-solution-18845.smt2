(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.179811339737728115295567477005533874034881591796875p336 {+ 809798282639822 336 (1.65155e+101)}
; Y = -1.3053663269645900957272033338085748255252838134765625p80 {- 1375247676329225 80 (-1.57809e+024)}
; 1.179811339737728115295567477005533874034881591796875p336 - -1.3053663269645900957272033338085748255252838134765625p80 == 1.179811339737728115295567477005533874034881591796875p336
; [HW: 1.179811339737728115295567477005533874034881591796875p336] 

; mpf : + 809798282639822 336
; mpfd: + 809798282639822 336 (1.65155e+101) class: Pos. norm. non-zero
; hwf : + 809798282639822 336 (1.65155e+101) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001111 #b0010111000001000000111011010111110011111100111001110)))
(assert (= y (fp #b1 #b10001001111 #b0100111000101100011111001101001110011100110100001001)))
(assert (= r (fp #b0 #b10101001111 #b0010111000001000000111011010111110011111100111001110)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
