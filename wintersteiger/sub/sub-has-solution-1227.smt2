(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2305915866897667587664955135551281273365020751953125p-25 {+ 1038492183890805 -25 (3.66745e-008)}
; Y = -1.6600895718359975905542569307726807892322540283203125p318 {- 2972779149751749 318 (-8.86482e+095)}
; 1.2305915866897667587664955135551281273365020751953125p-25 - -1.6600895718359975905542569307726807892322540283203125p318 == 1.6600895718359975905542569307726807892322540283203125p318
; [HW: 1.6600895718359975905542569307726807892322540283203125p318] 

; mpf : + 2972779149751749 318
; mpfd: + 2972779149751749 318 (8.86482e+095) class: Pos. norm. non-zero
; hwf : + 2972779149751749 318 (8.86482e+095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111100110 #b0011101100001000000011001101101110010000101101110101)))
(assert (= y (fp #b1 #b10100111101 #b1010100011111011101000010101001101110111010111000101)))
(assert (= r (fp #b0 #b10100111101 #b1010100011111011101000010101001101110111010111000101)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
