(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.551468601673524627670985864824615418910980224609375p-733 {- 2483593789003414 -733 (-3.43365e-221)}
; Y = 1.5764675951001183573652042468893341720104217529296875p-1003 {+ 2596179246484059 -1003 (1.83907e-302)}
; -1.551468601673524627670985864824615418910980224609375p-733 - 1.5764675951001183573652042468893341720104217529296875p-1003 == -1.551468601673524627670985864824615418910980224609375p-733
; [HW: -1.551468601673524627670985864824615418910980224609375p-733] 

; mpf : - 2483593789003414 -733
; mpfd: - 2483593789003414 -733 (-3.43365e-221) class: Neg. norm. non-zero
; hwf : - 2483593789003414 -733 (-3.43365e-221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100010 #b1000110100101101000010111101100011110101011010010110)))
(assert (= y (fp #b0 #b00000010100 #b1001001110010011011000010101110000101000101001011011)))
(assert (= r (fp #b1 #b00100100010 #b1000110100101101000010111101100011110101011010010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
