(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3104140231574081809640119899995625019073486328125p-44 {+ 1397980479022280 -44 (7.44884e-014)}
; Y = 1.8088000100827594796015773681574501097202301025390625p415 {+ 3642511424025969 415 (1.53052e+125)}
; 1.3104140231574081809640119899995625019073486328125p-44 - 1.8088000100827594796015773681574501097202301025390625p415 == -1.808800010082759257556972443126142024993896484375p415
; [HW: -1.808800010082759257556972443126142024993896484375p415] 

; mpf : - 3642511424025968 415
; mpfd: - 3642511424025968 415 (-1.53052e+125) class: Neg. norm. non-zero
; hwf : - 3642511424025968 415 (-1.53052e+125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010011 #b0100111101110111010010110001110110101110010011001000)))
(assert (= y (fp #b0 #b10110011110 #b1100111100001101100001000111100001001111010101110001)))
(assert (= r (fp #b1 #b10110011110 #b1100111100001101100001000111100001001111010101110000)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
