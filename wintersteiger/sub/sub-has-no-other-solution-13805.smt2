(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6580194931681500047915278628352098166942596435546875p-661 {+ 2963456344234603 -661 (1.73286e-199)}
; Y = 1.9879044775057119753824963481747545301914215087890625p525 {+ 4449126236772369 525 (2.18345e+158)}
; 1.6580194931681500047915278628352098166942596435546875p-661 - 1.9879044775057119753824963481747545301914215087890625p525 == -1.987904477505711753337891423143446445465087890625p525
; [HW: -1.987904477505711753337891423143446445465087890625p525] 

; mpf : - 4449126236772368 525
; mpfd: - 4449126236772368 525 (-2.18345e+158) class: Neg. norm. non-zero
; hwf : - 4449126236772368 525 (-2.18345e+158) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101010 #b1010100001110011111101110010101101001001101001101011)))
(assert (= y (fp #b0 #b11000001100 #b1111110011100111010011101100111001110101100000010001)))
(assert (= r (fp #b1 #b11000001100 #b1111110011100111010011101100111001110101100000010000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
