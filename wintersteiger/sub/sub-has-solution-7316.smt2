(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8111033921303398841473608626984059810638427734375p-94 {- 3652884934557144 -94 (-9.14374e-029)}
; Y = -1.55561236698793692312392522580921649932861328125p102 {- 2502255648929312 102 (-7.88789e+030)}
; -1.8111033921303398841473608626984059810638427734375p-94 - -1.55561236698793692312392522580921649932861328125p102 == 1.5556123669879367010793203007779084146022796630859375p102
; [HW: 1.5556123669879367010793203007779084146022796630859375p102] 

; mpf : + 2502255648929311 102
; mpfd: + 2502255648929311 102 (7.88789e+030) class: Pos. norm. non-zero
; hwf : + 2502255648929311 102 (7.88789e+030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100001 #b1100111110100100011110001100111011011111110111011000)))
(assert (= y (fp #b1 #b10001100101 #b1000111000111100100111001011000101110111011000100000)))
(assert (= r (fp #b0 #b10001100101 #b1000111000111100100111001011000101110111011000011111)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
