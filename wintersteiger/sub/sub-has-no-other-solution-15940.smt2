(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.347588878059909678341909966547973453998565673828125p557 {+ 1565401141708738 557 (6.35719e+167)}
; Y = 1.494229141837912333556914745713584125041961669921875p-535 {+ 2225810179016862 -535 (1.32852e-161)}
; 1.347588878059909678341909966547973453998565673828125p557 - 1.494229141837912333556914745713584125041961669921875p-535 == 1.347588878059909678341909966547973453998565673828125p557
; [HW: 1.347588878059909678341909966547973453998565673828125p557] 

; mpf : + 1565401141708738 557
; mpfd: + 1565401141708738 557 (6.35719e+167) class: Pos. norm. non-zero
; hwf : + 1565401141708738 557 (6.35719e+167) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101100 #b0101100011111011100101011010111110111000011111000010)))
(assert (= y (fp #b0 #b00111101000 #b0111111010000101110011010001000011101100100010011110)))
(assert (= r (fp #b0 #b11000101100 #b0101100011111011100101011010111110111000011111000010)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
