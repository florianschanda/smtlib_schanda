(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.566084713025681640630182300810702145099639892578125p-251 {- 2549418902642594 -251 (-4.32799e-076)}
; Y = 1.86832366602279620337867527268826961517333984375p885 {+ 3910582138737248 885 (4.81946e+266)}
; -1.566084713025681640630182300810702145099639892578125p-251 - 1.86832366602279620337867527268826961517333984375p885 == -1.86832366602279620337867527268826961517333984375p885
; [HW: -1.86832366602279620337867527268826961517333984375p885] 

; mpf : - 3910582138737248 885
; mpfd: - 3910582138737248 885 (-4.81946e+266) class: Neg. norm. non-zero
; hwf : - 3910582138737248 885 (-4.81946e+266) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000100 #b1001000011101010111011011000000100110101111110100010)))
(assert (= y (fp #b0 #b11101110100 #b1101111001001010011101011011001111101001001001100000)))
(assert (= r (fp #b1 #b11101110100 #b1101111001001010011101011011001111101001001001100000)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
