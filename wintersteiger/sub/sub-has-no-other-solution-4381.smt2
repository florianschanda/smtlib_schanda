(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.448962687416675887419614809914492070674896240234375p710 {+ 2021948191752998 710 (7.80466e+213)}
; Y = -1.271399971302304976461527985520660877227783203125p917 {- 1222276809625424 917 (-1.4086e+276)}
; 1.448962687416675887419614809914492070674896240234375p710 - -1.271399971302304976461527985520660877227783203125p917 == 1.271399971302304976461527985520660877227783203125p917
; [HW: 1.271399971302304976461527985520660877227783203125p917] 

; mpf : + 1222276809625424 917
; mpfd: + 1222276809625424 917 (1.4086e+276) class: Pos. norm. non-zero
; hwf : + 1222276809625424 917 (1.4086e+276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000101 #b0111001011101111001101111111101110010100001100100110)))
(assert (= y (fp #b1 #b11110010100 #b0100010101111010011101111111000011100000111101010000)))
(assert (= r (fp #b0 #b11110010100 #b0100010101111010011101111111000011100000111101010000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
