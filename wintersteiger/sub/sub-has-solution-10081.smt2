(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3140650631861292563229426377802155911922454833984375p315 {- 1414423301535143 315 (-8.77133e+094)}
; Y = 1.2885167320025232573499351929058320820331573486328125p952 {+ 1299363846736717 952 (4.90508e+286)}
; -1.3140650631861292563229426377802155911922454833984375p315 - 1.2885167320025232573499351929058320820331573486328125p952 == -1.2885167320025232573499351929058320820331573486328125p952
; [HW: -1.2885167320025232573499351929058320820331573486328125p952] 

; mpf : - 1299363846736717 952
; mpfd: - 1299363846736717 952 (-4.90508e+286) class: Neg. norm. non-zero
; hwf : - 1299363846736717 952 (-4.90508e+286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100111010 #b0101000001100110100100010110011100110011010110100111)))
(assert (= y (fp #b0 #b11110110111 #b0100100111011100001110111000100001001100101101001101)))
(assert (= r (fp #b1 #b11110110111 #b0100100111011100001110111000100001001100101101001101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
