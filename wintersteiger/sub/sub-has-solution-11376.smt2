(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0022301200347192295936338268802501261234283447265625p-95 {+ 10043567757353 -95 (2.52998e-029)}
; Y = 1.825805274733105054707493763999082148075103759765625p-891 {+ 3719096327568602 -891 (1.10593e-268)}
; 1.0022301200347192295936338268802501261234283447265625p-95 - 1.825805274733105054707493763999082148075103759765625p-891 == 1.0022301200347192295936338268802501261234283447265625p-95
; [HW: 1.0022301200347192295936338268802501261234283447265625p-95] 

; mpf : + 10043567757353 -95
; mpfd: + 10043567757353 -95 (2.52998e-029) class: Pos. norm. non-zero
; hwf : + 10043567757353 -95 (2.52998e-029) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110100000 #b0000000010010010001001110011010010011101100000101001)))
(assert (= y (fp #b0 #b00010000100 #b1101001101100111111110010111011111010111110011011010)))
(assert (= r (fp #b0 #b01110100000 #b0000000010010010001001110011010010011101100000101001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
