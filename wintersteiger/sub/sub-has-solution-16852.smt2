(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.940856369881895471252164497855119407176971435546875p-258 {+ 4237240396809262 -258 (4.19039e-078)}
; Y = 1.7907388549440270697488131190766580402851104736328125p-976 {+ 3561171212473293 -976 (2.80386e-294)}
; 1.940856369881895471252164497855119407176971435546875p-258 - 1.7907388549440270697488131190766580402851104736328125p-976 == 1.9408563698818952492075595728238113224506378173828125p-258
; [HW: 1.9408563698818952492075595728238113224506378173828125p-258] 

; mpf : + 4237240396809261 -258
; mpfd: + 4237240396809261 -258 (4.19039e-078) class: Pos. norm. non-zero
; hwf : + 4237240396809261 -258 (4.19039e-078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111101 #b1111000011011011111101101000101011100000010000101110)))
(assert (= y (fp #b0 #b00000101111 #b1100101001101101110111001001000110101001001111001101)))
(assert (= r (fp #b0 #b01011111101 #b1111000011011011111101101000101011100000010000101101)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
