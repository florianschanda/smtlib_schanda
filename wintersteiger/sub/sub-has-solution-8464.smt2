(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.050985559577535699560257853590883314609527587890625p561 {- 229618547114666 561 (-7.93276e+168)}
; Y = -1.1243879708513151438609156684833578765392303466796875p550 {- 560193619175355 550 (-4.14394e+165)}
; -1.050985559577535699560257853590883314609527587890625p561 - -1.1243879708513151438609156684833578765392303466796875p550 == -1.0504365420136434483566745257121510803699493408203125p561
; [HW: -1.0504365420136434483566745257121510803699493408203125p561] 

; mpf : - 227145991818501 561
; mpfd: - 227145991818501 561 (-7.92862e+168) class: Neg. norm. non-zero
; hwf : - 227145991818501 561 (-7.92862e+168) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110000 #b0000110100001101011000111011111011110100001010101010)))
(assert (= y (fp #b1 #b11000100101 #b0001111111010111111000111101101011010010011110111011)))
(assert (= r (fp #b1 #b11000110000 #b0000110011101001011010001100001001111000110100000101)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
