(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9152061180258745931581643162644468247890472412109375p-971 {- 4121721932108527 -971 (-9.59599e-293)}
; Y = 1.5462708286290347547975443376344628632068634033203125p-976 {+ 2460185100257093 -976 (2.42108e-294)}
; -1.9152061180258745931581643162644468247890472412109375p-971 - 1.5462708286290347547975443376344628632068634033203125p-976 == -1.9635270814205318945511180572793819010257720947265625p-971
; [HW: -1.9635270814205318945511180572793819010257720947265625p-971] 

; mpf : - 4339340204846889 -971
; mpfd: - 4339340204846889 -971 (-9.8381e-293) class: Neg. norm. non-zero
; hwf : - 4339340204846889 -971 (-9.8381e-293) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000110100 #b1110101001001010111100101011101000000101001011101111)))
(assert (= y (fp #b0 #b00000101111 #b1000101111011000011001111010111110111000011101000101)))
(assert (= r (fp #b1 #b00000110100 #b1111011010101001101101011111011110000010111100101001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
