(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0401762533947029876202350351377390325069427490234375p-732 {+ 180937759817527 -732 (4.60416e-221)}
; Y = -1.373437997676443256267475589993409812450408935546875p-1 {- 1681815227181614 -1 (-0.686719)}
; 1.0401762533947029876202350351377390325069427490234375p-732 - -1.373437997676443256267475589993409812450408935546875p-1 == 1.373437997676443256267475589993409812450408935546875p-1
; [HW: 1.373437997676443256267475589993409812450408935546875p-1] 

; mpf : + 1681815227181614 -1
; mpfd: + 1681815227181614 -1 (0.686719) class: Pos. norm. non-zero
; hwf : + 1681815227181614 -1 (0.686719) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100100011 #b0000101001001000111111011010111001100111111100110111)))
(assert (= y (fp #b1 #b01111111110 #b0101111110011001101000011111001100011010101000101110)))
(assert (= r (fp #b0 #b01111111110 #b0101111110011001101000011111001100011010101000101110)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
