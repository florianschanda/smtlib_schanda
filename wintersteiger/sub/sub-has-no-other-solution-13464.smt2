(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.121398164767109850714632557355798780918121337890625p-743 {- 546728729608618 -743 (-2.42367e-224)}
; Y = 1.849874347146190256552245045895688235759735107421875p-124 {+ 3827493793119326 -124 (8.69807e-038)}
; -1.121398164767109850714632557355798780918121337890625p-743 - 1.849874347146190256552245045895688235759735107421875p-124 == -1.849874347146190256552245045895688235759735107421875p-124
; [HW: -1.849874347146190256552245045895688235759735107421875p-124] 

; mpf : - 3827493793119326 -124
; mpfd: - 3827493793119326 -124 (-8.69807e-038) class: Neg. norm. non-zero
; hwf : - 3827493793119326 -124 (-8.69807e-038) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011000 #b0001111100010011111100110011101101111000000110101010)))
(assert (= y (fp #b0 #b01110000011 #b1101100110010001010111010111111010110011110001011110)))
(assert (= r (fp #b1 #b01110000011 #b1101100110010001010111010111111010110011110001011110)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
