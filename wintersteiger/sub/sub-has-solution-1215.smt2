(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9431335171336965306210231574368663132190704345703125p-19 {+ 4247495756323941 -19 (3.70623e-006)}
; Y = 1.976980043157064326209138016565702855587005615234375p-548 {+ 4399926958310566 -548 (2.14568e-165)}
; 1.9431335171336965306210231574368663132190704345703125p-19 - 1.976980043157064326209138016565702855587005615234375p-548 == 1.9431335171336965306210231574368663132190704345703125p-19
; [HW: 1.9431335171336965306210231574368663132190704345703125p-19] 

; mpf : + 4247495756323941 -19
; mpfd: + 4247495756323941 -19 (3.70623e-006) class: Pos. norm. non-zero
; hwf : + 4247495756323941 -19 (3.70623e-006) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101100 #b1111000101110001001100101011101111011001110001100101)))
(assert (= y (fp #b0 #b00111011011 #b1111101000011011010111010011011000110100010010100110)))
(assert (= r (fp #b0 #b01111101100 #b1111000101110001001100101011101111011001110001100101)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
