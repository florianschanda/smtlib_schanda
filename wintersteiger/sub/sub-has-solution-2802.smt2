(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.026131492745177009595636263838969171047210693359375p-942 {+ 117685780989814 -942 (2.76024e-284)}
; Y = 1.1287091959930986018179055463406257331371307373046875p618 {+ 579654687113675 618 (1.22778e+186)}
; 1.026131492745177009595636263838969171047210693359375p-942 - 1.1287091959930986018179055463406257331371307373046875p618 == -1.1287091959930986018179055463406257331371307373046875p618
; [HW: -1.1287091959930986018179055463406257331371307373046875p618] 

; mpf : - 579654687113675 618
; mpfd: - 579654687113675 618 (-1.22778e+186) class: Neg. norm. non-zero
; hwf : - 579654687113675 618 (-1.22778e+186) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010001 #b0000011010110000100011011011001010111100011101110110)))
(assert (= y (fp #b0 #b11001101001 #b0010000011110011000101011111101101111100000111001011)))
(assert (= r (fp #b1 #b11001101001 #b0010000011110011000101011111101101111100000111001011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
