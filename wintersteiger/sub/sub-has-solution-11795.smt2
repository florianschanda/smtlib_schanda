(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2927569279593924544968785994569770991802215576171875p639 {+ 1318459991668051 639 (2.94906e+192)}
; Y = 1.35026448387067166123642891761846840381622314453125p-605 {+ 1577450999041076 -605 (1.01688e-182)}
; 1.2927569279593924544968785994569770991802215576171875p639 - 1.35026448387067166123642891761846840381622314453125p-605 == 1.2927569279593924544968785994569770991802215576171875p639
; [HW: 1.2927569279593924544968785994569770991802215576171875p639] 

; mpf : + 1318459991668051 639
; mpfd: + 1318459991668051 639 (2.94906e+192) class: Pos. norm. non-zero
; hwf : + 1318459991668051 639 (2.94906e+192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111110 #b0100101011110010000111100011011101000011010101010011)))
(assert (= y (fp #b0 #b00110100010 #b0101100110101010111011101110011100101100110000110100)))
(assert (= r (fp #b0 #b11001111110 #b0100101011110010000111100011011101000011010101010011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
