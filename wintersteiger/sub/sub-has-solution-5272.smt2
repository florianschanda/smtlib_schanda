(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8277017339737271495181403224705718457698822021484375p782 {+ 3727637220697991 782 (4.64903e+235)}
; Y = 1.466886059899198624378868771600537002086639404296875p750 {+ 2102667885386510 750 (8.68747e+225)}
; 1.8277017339737271495181403224705718457698822021484375p782 - 1.466886059899198624378868771600537002086639404296875p750 == 1.8277017336321910168095428161905147135257720947265625p782
; [HW: 1.8277017336321910168095428161905147135257720947265625p782] 

; mpf : + 3727637219159849 782
; mpfd: + 3727637219159849 782 (4.64903e+235) class: Pos. norm. non-zero
; hwf : + 3727637219159849 782 (4.64903e+235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001101 #b1101001111100100010000101100011001000010011110000111)))
(assert (= y (fp #b0 #b11011101101 #b0111011110000101110110000100011000111001101100001110)))
(assert (= r (fp #b0 #b11100001101 #b1101001111100100010000101100010011001010111100101001)))
(assert (= (fp.sub roundTowardNegative x y) r))
(check-sat)
(exit)
