(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.83028814778568449384010818903334438800811767578125p850 {+ 3739285392977748 850 (1.37409e+256)}
; Y = 1.5971855589768895189450859106727875769138336181640625p933 {+ 2689484660879361 933 (1.15969e+281)}
; 1.83028814778568449384010818903334438800811767578125p850 - 1.5971855589768895189450859106727875769138336181640625p933 == -1.5971855589768892969004809856414794921875p933
; [HW: -1.5971855589768892969004809856414794921875p933] 

; mpf : - 2689484660879360 933
; mpfd: - 2689484660879360 933 (-1.15969e+281) class: Neg. norm. non-zero
; hwf : - 2689484660879360 933 (-1.15969e+281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101010001 #b1101010010001101110000111001100011111110111101010100)))
(assert (= y (fp #b0 #b11110100100 #b1001100011100001001001110001110101110011000000000001)))
(assert (= r (fp #b1 #b11110100100 #b1001100011100001001001110001110101110011000000000000)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
