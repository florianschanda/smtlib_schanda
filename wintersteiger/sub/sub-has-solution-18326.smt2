(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 0.5214322584899038215411337660043500363826751708984375p-1022 {+ 2348322125034087 -1023 (1.16023e-308)}
; Y = 1.7837659374962651082086040332796983420848846435546875p329 {+ 3529767984053867 329 (1.95077e+099)}
; 0.5214322584899038215411337660043500363826751708984375p-1022 - 1.7837659374962651082086040332796983420848846435546875p329 == -1.783765937496264886163999108248390257358551025390625p329
; [HW: -1.783765937496264886163999108248390257358551025390625p329] 

; mpf : - 3529767984053866 329
; mpfd: - 3529767984053866 329 (-1.95077e+099) class: Neg. norm. non-zero
; hwf : - 3529767984053866 329 (-1.95077e+099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1000010101111100100101011010000101001011001001100111)))
(assert (= y (fp #b0 #b10101001000 #b1100100010100100111000100110110101000011111001101011)))
(assert (= r (fp #b1 #b10101001000 #b1100100010100100111000100110110101000011111001101010)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
