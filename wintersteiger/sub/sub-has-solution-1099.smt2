(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.611524202361356739032771656638942658901214599609375p221 {- 2754060169882646 221 (-5.43083e+066)}
; Y = -1.4730599027612409912535440525971353054046630859375p-853 {- 2130472401799448 -853 (-2.45264e-257)}
; -1.611524202361356739032771656638942658901214599609375p221 - -1.4730599027612409912535440525971353054046630859375p-853 == -1.611524202361356739032771656638942658901214599609375p221
; [HW: -1.611524202361356739032771656638942658901214599609375p221] 

; mpf : - 2754060169882646 221
; mpfd: - 2754060169882646 221 (-5.43083e+066) class: Neg. norm. non-zero
; hwf : - 2754060169882646 221 (-5.43083e+066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011100 #b1001110010001100110110011010000111011010110000010110)))
(assert (= y (fp #b1 #b00010101010 #b0111100100011010011101000010101101101000100100011000)))
(assert (= r (fp #b1 #b10011011100 #b1001110010001100110110011010000111011010110000010110)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
