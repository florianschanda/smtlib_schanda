(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7038997371388828749871890977374278008937835693359375p-326 {- 3170082593884863 -326 (-1.24642e-098)}
; Y = 1.7275806025771147655945014776079915463924407958984375p-344 {+ 3276731730648295 -344 (4.82081e-104)}
; -1.7038997371388828749871890977374278008937835693359375p-326 - 1.7275806025771147655945014776079915463924407958984375p-344 == -1.70390632733588365255172902834601700305938720703125p-326
; [HW: -1.70390632733588365255172902834601700305938720703125p-326] 

; mpf : - 3170112273493620 -326
; mpfd: - 3170112273493620 -326 (-1.24643e-098) class: Neg. norm. non-zero
; hwf : - 3170112273493620 -326 (-1.24643e-098) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111001 #b1011010000110010110001011110111010101100101010111111)))
(assert (= y (fp #b0 #b01010100111 #b1011101001000010101110001110110101000101110011100111)))
(assert (= r (fp #b1 #b01010111001 #b1011010000110011001101000111111101011010111001110100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
