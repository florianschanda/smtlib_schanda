(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3438345492609864439970124294632114470005035400390625p-51 {+ 1548493147928881 -51 (5.96782e-016)}
; Y = 1.85074948740553413273346450296230614185333251953125p575 {+ 3831435074465204 575 (2.28873e+173)}
; 1.3438345492609864439970124294632114470005035400390625p-51 - 1.85074948740553413273346450296230614185333251953125p575 == -1.8507494874055339106888595779309980571269989013671875p575
; [HW: -1.8507494874055339106888595779309980571269989013671875p575] 

; mpf : - 3831435074465203 575
; mpfd: - 3831435074465203 575 (-2.28873e+173) class: Neg. norm. non-zero
; hwf : - 3831435074465203 575 (-2.28873e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111001100 #b0101100000000101100010101000000001001111100100110001)))
(assert (= y (fp #b0 #b11000111110 #b1101100111001010101101111110100101111110110110110100)))
(assert (= r (fp #b1 #b11000111110 #b1101100111001010101101111110100101111110110110110011)))
(assert (= (fp.sub roundTowardZero x y) r))
(check-sat)
(exit)
