(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8429789653598032117542970809154212474822998046875p482 {+ 3796439754275576 482 (2.30133e+145)}
; Y = 1.447810606448345804864175079273991286754608154296875p-331 {+ 2016759680333326 -331 (3.30966e-100)}
; 1.8429789653598032117542970809154212474822998046875p482 - 1.447810606448345804864175079273991286754608154296875p-331 == 1.8429789653598029897096921558841131627559661865234375p482
; [HW: 1.8429789653598029897096921558841131627559661865234375p482] 

; mpf : + 3796439754275575 482
; mpfd: + 3796439754275575 482 (2.30133e+145) class: Pos. norm. non-zero
; hwf : + 3796439754275575 482 (2.30133e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100001 #b1101011111001101011110000010111101101111101011111000)))
(assert (= y (fp #b0 #b01010110100 #b0111001010100011101101110100010101111111011000001110)))
(assert (= r (fp #b0 #b10111100001 #b1101011111001101011110000010111101101111101011110111)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
