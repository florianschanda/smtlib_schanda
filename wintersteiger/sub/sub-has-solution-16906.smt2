(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3927975651519799438204927355400286614894866943359375p980 {+ 1769002968050495 980 (1.42326e+295)}
; Y = -1.0411159127823823578040673965006135404109954833984375p-510 {- 185169609485735 -510 (-3.106e-154)}
; 1.3927975651519799438204927355400286614894866943359375p980 - -1.0411159127823823578040673965006135404109954833984375p-510 == 1.3927975651519799438204927355400286614894866943359375p980
; [HW: 1.3927975651519799438204927355400286614894866943359375p980] 

; mpf : + 1769002968050495 980
; mpfd: + 1769002968050495 980 (1.42326e+295) class: Pos. norm. non-zero
; hwf : + 1769002968050495 980 (1.42326e+295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010011 #b0110010010001110011000011001100001000110101100111111)))
(assert (= y (fp #b1 #b01000000001 #b0000101010000110100100101000110010111110110110100111)))
(assert (= r (fp #b0 #b11111010011 #b0110010010001110011000011001100001000110101100111111)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
