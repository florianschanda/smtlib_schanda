(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2531242517861971297321588281192816793918609619140625p422 {+ 1139970286022753 422 (1.35723e+127)}
; Y = 1.667999681867612604690975786070339381694793701171875p-438 {+ 3008403118342590 -438 (2.34995e-132)}
; 1.2531242517861971297321588281192816793918609619140625p422 - 1.667999681867612604690975786070339381694793701171875p-438 == 1.2531242517861971297321588281192816793918609619140625p422
; [HW: 1.2531242517861971297321588281192816793918609619140625p422] 

; mpf : + 1139970286022753 422
; mpfd: + 1139970286022753 422 (1.35723e+127) class: Pos. norm. non-zero
; hwf : + 1139970286022753 422 (1.35723e+127) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100101 #b0100000011001100110000000011111100111111000001100001)))
(assert (= y (fp #b0 #b01001001001 #b1010101100000010000001101111001101011100000110111110)))
(assert (= r (fp #b0 #b10110100101 #b0100000011001100110000000011111100111111000001100001)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
