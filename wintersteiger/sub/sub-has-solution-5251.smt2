(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9356603601339104070433450033306144177913665771484375p-950 {+ 4213839649244423 -950 (2.03392e-286)}
; Y = 1.4250730238629560897578585354494862258434295654296875p-395 {+ 1914358711874459 -395 (1.76599e-119)}
; 1.9356603601339104070433450033306144177913665771484375p-950 - 1.4250730238629560897578585354494862258434295654296875p-395 == -1.4250730238629560897578585354494862258434295654296875p-395
; [HW: -1.4250730238629560897578585354494862258434295654296875p-395] 

; mpf : - 1914358711874459 -395
; mpfd: - 1914358711874459 -395 (-1.76599e-119) class: Neg. norm. non-zero
; hwf : - 1914358711874459 -395 (-1.76599e-119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001001 #b1110111110000111011011111111011011110000010100000111)))
(assert (= y (fp #b0 #b01001110100 #b0110110011010001100101011110111111100111001110011011)))
(assert (= r (fp #b1 #b01001110100 #b0110110011010001100101011110111111100111001110011011)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
