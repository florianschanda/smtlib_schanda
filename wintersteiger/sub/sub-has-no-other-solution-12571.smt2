(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.369031729725685320175898596062324941158294677734375p-823 {+ 1661971160480486 -823 (2.44752e-248)}
; Y = 1.2611000789044444214681561788893304765224456787109375p-110 {+ 1175890218060463 -110 (9.71516e-034)}
; 1.369031729725685320175898596062324941158294677734375p-823 - 1.2611000789044444214681561788893304765224456787109375p-110 == -1.261100078904444199423551253858022391796112060546875p-110
; [HW: -1.261100078904444199423551253858022391796112060546875p-110] 

; mpf : - 1175890218060462 -110
; mpfd: - 1175890218060462 -110 (-9.71516e-034) class: Neg. norm. non-zero
; hwf : - 1175890218060462 -110 (-9.71516e-034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001000 #b0101111001111000110111010000101001011011101011100110)))
(assert (= y (fp #b0 #b01110010001 #b0100001011010111011101000110101111100000101010101111)))
(assert (= r (fp #b1 #b01110010001 #b0100001011010111011101000110101111100000101010101110)))
(assert  (not (= (fp.sub roundTowardPositive x y) r)))
(check-sat)
(exit)
