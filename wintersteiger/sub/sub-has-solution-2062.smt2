(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6709384887980538447749268016195856034755706787109375p-131 {- 3021638328139439 -131 (-6.13806e-040)}
; Y = -1.7501681517089606732184847714961506426334381103515625p367 {- 3378457008501689 367 (-5.26124e+110)}
; -1.6709384887980538447749268016195856034755706787109375p-131 - -1.7501681517089606732184847714961506426334381103515625p367 == 1.7501681517089606732184847714961506426334381103515625p367
; [HW: 1.7501681517089606732184847714961506426334381103515625p367] 

; mpf : + 3378457008501689 367
; mpfd: + 3378457008501689 367 (5.26124e+110) class: Pos. norm. non-zero
; hwf : + 3378457008501689 367 (5.26124e+110) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111100 #b1010101111000010100111111111001100000011111010101111)))
(assert (= y (fp #b1 #b10101101110 #b1100000000001011000001010001111000010111001110111001)))
(assert (= r (fp #b0 #b10101101110 #b1100000000001011000001010001111000010111001110111001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
