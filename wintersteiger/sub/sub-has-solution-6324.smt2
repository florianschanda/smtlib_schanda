(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.66966376876384803296105019398964941501617431640625p438 {- 3015897499468388 438 (-1.18513e+132)}
; Y = 1.7117947733436638113602157318382523953914642333984375p604 {+ 3205638675994791 604 (1.1365e+182)}
; -1.66966376876384803296105019398964941501617431640625p438 - 1.7117947733436638113602157318382523953914642333984375p604 == -1.7117947733436638113602157318382523953914642333984375p604
; [HW: -1.7117947733436638113602157318382523953914642333984375p604] 

; mpf : - 3205638675994791 604
; mpfd: - 3205638675994791 604 (-1.1365e+182) class: Neg. norm. non-zero
; hwf : - 3205638675994791 604 (-1.1365e+182) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110110101 #b1010101101101111000101011011001000101000001001100100)))
(assert (= y (fp #b0 #b11001011011 #b1011011000111000001011101010100011111001100010100111)))
(assert (= r (fp #b1 #b11001011011 #b1011011000111000001011101010100011111001100010100111)))
(assert (= (fp.sub roundTowardPositive x y) r))
(check-sat)
(exit)
