(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0302598835629377393985350863658823072910308837890625p366 {+ 136278400338321 366 (1.54855e+110)}
; Y = 1.739758536078123807300244152429513633251190185546875p980 {+ 3331576267425582 980 (1.77781e+295)}
; 1.0302598835629377393985350863658823072910308837890625p366 - 1.739758536078123807300244152429513633251190185546875p980 == -1.7397585360781235852556392273982055485248565673828125p980
; [HW: -1.7397585360781235852556392273982055485248565673828125p980] 

; mpf : - 3331576267425581 980
; mpfd: - 3331576267425581 980 (-1.77781e+295) class: Neg. norm. non-zero
; hwf : - 3331576267425581 980 (-1.77781e+295) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101101 #b0000011110111111000111001001101001001000100110010001)))
(assert (= y (fp #b0 #b11111010011 #b1011110101100000110100001011111101100100011100101110)))
(assert (= r (fp #b1 #b11111010011 #b1011110101100000110100001011111101100100011100101101)))
(assert  (not (= (fp.sub roundTowardZero x y) r)))
(check-sat)
(exit)
