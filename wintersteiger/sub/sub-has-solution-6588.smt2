(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2426688193074453270270396387786604464054107666015625p260 {- 1092883204207449 260 (-2.30226e+078)}
; Y = 1.2540049545564908584083241294138133525848388671875p-980 {+ 1143936618690872 -980 (1.22717e-295)}
; -1.2426688193074453270270396387786604464054107666015625p260 - 1.2540049545564908584083241294138133525848388671875p-980 == -1.2426688193074453270270396387786604464054107666015625p260
; [HW: -1.2426688193074453270270396387786604464054107666015625p260] 

; mpf : - 1092883204207449 260
; mpfd: - 1092883204207449 260 (-2.30226e+078) class: Neg. norm. non-zero
; hwf : - 1092883204207449 260 (-2.30226e+078) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000011 #b0011111000011111100010110011001010101111001101011001)))
(assert (= y (fp #b0 #b00000101011 #b0100000100000110011101111111110011010111100100111000)))
(assert (= r (fp #b1 #b10100000011 #b0011111000011111100010110011001010101111001101011001)))
(assert (= (fp.sub roundNearestTiesToEven x y) r))
(check-sat)
(exit)
