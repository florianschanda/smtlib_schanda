(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.34327917316762945887376190512441098690032958984375p271 {+ 1545991956361788 271 (5.09677e+081)}
; Y = 1.5407663969914295876151300035417079925537109375p-284 {+ 2435395343985088 -284 (4.95699e-086)}
; 1.34327917316762945887376190512441098690032958984375p271 - 1.5407663969914295876151300035417079925537109375p-284 == 1.34327917316762945887376190512441098690032958984375p271
; [HW: 1.34327917316762945887376190512441098690032958984375p271] 

; mpf : + 1545991956361788 271
; mpfd: + 1545991956361788 271 (5.09677e+081) class: Pos. norm. non-zero
; hwf : + 1545991956361788 271 (5.09677e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001110 #b0101011111100001001001001101011000100111001000111100)))
(assert (= y (fp #b0 #b01011100011 #b1000101001101111101010101010010111011010100111000000)))
(assert (= r (fp #b0 #b10100001110 #b0101011111100001001001001101011000100111001000111100)))
(assert  (not (= (fp.sub roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
