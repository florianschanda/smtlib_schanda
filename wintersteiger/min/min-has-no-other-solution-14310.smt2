(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.942304582132566626029301914968527853488922119140625p-83 {- 4243762564961738 -83 (-2.0083e-025)}
; Y = -1.156741985208516343419660188374109566211700439453125p-421 {- 705903146178386 -421 (-2.13603e-127)}
; -1.942304582132566626029301914968527853488922119140625p-83 m -1.156741985208516343419660188374109566211700439453125p-421 == -1.942304582132566626029301914968527853488922119140625p-83
; [HW: -1.942304582132566626029301914968527853488922119140625p-83] 

; mpf : - 4243762564961738 -83
; mpfd: - 4243762564961738 -83 (-2.0083e-025) class: Neg. norm. non-zero
; hwf : - 4243762564961738 -83 (-2.0083e-025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101100 #b1111000100111010110111111000001100100001010111001010)))
(assert (= y (fp #b1 #b01001011010 #b0010100000100000001111100010010001100001011101010010)))
(assert (= r (fp #b1 #b01110101100 #b1111000100111010110111111000001100100001010111001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
