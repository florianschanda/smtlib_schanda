(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3155096887590940202272804526728577911853790283203125p69 {+ 1420929316727237 69 (7.7654e+020)}
; Y = -1.4933179732586878696309895531157962977886199951171875p343 {- 2221706640542995 343 (-2.67572e+103)}
; 1.3155096887590940202272804526728577911853790283203125p69 m -1.4933179732586878696309895531157962977886199951171875p343 == -1.4933179732586878696309895531157962977886199951171875p343
; [HW: -1.4933179732586878696309895531157962977886199951171875p343] 

; mpf : - 2221706640542995 343
; mpfd: - 2221706640542995 343 (-2.67572e+103) class: Neg. norm. non-zero
; hwf : - 2221706640542995 343 (-2.67572e+103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000100 #b0101000011000101001111100011001011001010100111000101)))
(assert (= y (fp #b1 #b10101010110 #b0111111001001010000101100011000110101100110100010011)))
(assert (= r (fp #b1 #b10101010110 #b0111111001001010000101100011000110101100110100010011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
