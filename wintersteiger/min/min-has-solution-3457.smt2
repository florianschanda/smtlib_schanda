(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9307029082778546236198735641664825379848480224609375p163 {+ 4191513270912783 163 (2.25738e+049)}
; Y = -1.0469335204894780755324745769030414521694183349609375p-436 {- 211369785387599 -436 (-5.89985e-132)}
; 1.9307029082778546236198735641664825379848480224609375p163 m -1.0469335204894780755324745769030414521694183349609375p-436 == -1.0469335204894780755324745769030414521694183349609375p-436
; [HW: -1.0469335204894780755324745769030414521694183349609375p-436] 

; mpf : - 211369785387599 -436
; mpfd: - 211369785387599 -436 (-5.89985e-132) class: Neg. norm. non-zero
; hwf : - 211369785387599 -436 (-5.89985e-132) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100010 #b1110111001000010100010111011100101011000011100001111)))
(assert (= y (fp #b1 #b01001001011 #b0000110000000011110101011100111110010110101001001111)))
(assert (= r (fp #b1 #b01001001011 #b0000110000000011110101011100111110010110101001001111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
