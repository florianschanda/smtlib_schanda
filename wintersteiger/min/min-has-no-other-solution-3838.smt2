(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -0.0351222440376834921238469178206287324428558349609375p-1022 {- 158176525160527 -1023 (-7.81496e-310)}
; Y = 1.6434397879978768219899620817159302532672882080078125p-984 {+ 2897795189462589 -984 (1.00517e-296)}
; -0.0351222440376834921238469178206287324428558349609375p-1022 m 1.6434397879978768219899620817159302532672882080078125p-984 == -0.0351222440376834921238469178206287324428558349609375p-1022
; [HW: -0.0351222440376834921238469178206287324428558349609375p-1022] 

; mpf : - 158176525160527 -1023
; mpfd: - 158176525160527 -1023 (-7.81496e-310) class: Neg. denorm.
; hwf : - 158176525160527 -1023 (-7.81496e-310) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0000100011111101110001010111100110000001000001001111)))
(assert (= y (fp #b0 #b00000100111 #b1010010010111000011110000100111001100101011000111101)))
(assert (= r (fp #b1 #b00000000000 #b0000100011111101110001010111100110000001000001001111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
