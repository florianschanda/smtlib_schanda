(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.781827754682427933374810891109518706798553466796875p-915 {+ 3521039184655694 -915 (6.43309e-276)}
; Y = 1.3918847841851047508754390946705825626850128173828125p480 {+ 1764892168028205 480 (4.34511e+144)}
; 1.781827754682427933374810891109518706798553466796875p-915 m 1.3918847841851047508754390946705825626850128173828125p480 == 1.781827754682427933374810891109518706798553466796875p-915
; [HW: 1.781827754682427933374810891109518706798553466796875p-915] 

; mpf : + 3521039184655694 -915
; mpfd: + 3521039184655694 -915 (6.43309e-276) class: Pos. norm. non-zero
; hwf : + 3521039184655694 -915 (6.43309e-276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101100 #b1100100000100101110111010001110101110111010101001110)))
(assert (= y (fp #b0 #b10111011111 #b0110010001010010100011111010101111100000000000101101)))
(assert (= r (fp #b0 #b00001101100 #b1100100000100101110111010001110101110111010101001110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
