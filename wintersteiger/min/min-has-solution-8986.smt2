(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.56329179647908045325266357394866645336151123046875p599 {+ 2536840724724044 599 (3.24345e+180)}
; Y = 1.7206840613145908402970007955445908010005950927734375p-1013 {+ 3245672469988247 -1013 (1.96027e-305)}
; 1.56329179647908045325266357394866645336151123046875p599 m 1.7206840613145908402970007955445908010005950927734375p-1013 == 1.7206840613145908402970007955445908010005950927734375p-1013
; [HW: 1.7206840613145908402970007955445908010005950927734375p-1013] 

; mpf : + 3245672469988247 -1013
; mpfd: + 3245672469988247 -1013 (1.96027e-305) class: Pos. norm. non-zero
; hwf : + 3245672469988247 -1013 (1.96027e-305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010110 #b1001000000110011111001000010001111111011100101001100)))
(assert (= y (fp #b0 #b00000001010 #b1011100001111110110000000010101000011000001110010111)))
(assert (= r (fp #b0 #b00000001010 #b1011100001111110110000000010101000011000001110010111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
