(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3818510874326570547765413721208460628986358642578125p67 {+ 1719704415072733 67 (2.03925e+020)}
; Y = 0.426780664282860211500292280106805264949798583984375p-1022 {+ 1922049240633222 -1023 (9.49618e-309)}
; 1.3818510874326570547765413721208460628986358642578125p67 m 0.426780664282860211500292280106805264949798583984375p-1022 == 0.426780664282860211500292280106805264949798583984375p-1022
; [HW: 0.426780664282860211500292280106805264949798583984375p-1022] 

; mpf : + 1922049240633222 -1023
; mpfd: + 1922049240633222 -1023 (9.49618e-309) class: Pos. denorm.
; hwf : + 1922049240633222 -1023 (9.49618e-309) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000010 #b0110000111000000111111100010110001110111000111011101)))
(assert (= y (fp #b0 #b00000000000 #b0110110101000001011111110110001110101000111110000110)))
(assert (= r (fp #b0 #b00000000000 #b0110110101000001011111110110001110101000111110000110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
