(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.911922402819786981353900046087801456451416015625p993 {- 4106933393530000 993 (-1.6005e+299)}
; Y = 1.6927821616443814445318594152922742068767547607421875p-574 {+ 3120013485030563 -574 (2.73769e-173)}
; -1.911922402819786981353900046087801456451416015625p993 m 1.6927821616443814445318594152922742068767547607421875p-574 == -1.911922402819786981353900046087801456451416015625p993
; [HW: -1.911922402819786981353900046087801456451416015625p993] 

; mpf : - 4106933393530000 993
; mpfd: - 4106933393530000 993 (-1.6005e+299) class: Neg. norm. non-zero
; hwf : - 4106933393530000 993 (-1.6005e+299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100000 #b1110100101110011101111110010000010011001110010010000)))
(assert (= y (fp #b0 #b00111000001 #b1011000101011010001010111111011110000011110010100011)))
(assert (= r (fp #b1 #b11111100000 #b1110100101110011101111110010000010011001110010010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
