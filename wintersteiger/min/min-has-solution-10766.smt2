(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.57994509307976027656650330754928290843963623046875p-376 {- 2611840505089356 -376 (-1.02651e-113)}
; Y = -1.8457466407146707609854274778626859188079833984375p-101 {- 3808904255972440 -101 (-7.28019e-031)}
; -1.57994509307976027656650330754928290843963623046875p-376 m -1.8457466407146707609854274778626859188079833984375p-101 == -1.8457466407146707609854274778626859188079833984375p-101
; [HW: -1.8457466407146707609854274778626859188079833984375p-101] 

; mpf : - 3808904255972440 -101
; mpfd: - 3808904255972440 -101 (-7.28019e-031) class: Neg. norm. non-zero
; hwf : - 3808904255972440 -101 (-7.28019e-031) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000111 #b1001010001110111010010000001100001000000110101001100)))
(assert (= y (fp #b1 #b01110011010 #b1101100010000010110110100001001010010010010001011000)))
(assert (= r (fp #b1 #b01110011010 #b1101100010000010110110100001001010010010010001011000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
