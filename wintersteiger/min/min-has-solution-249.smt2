(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.560826259918141278859593512606807053089141845703125p-808 {+ 2525736935186930 -808 (9.14362e-244)}
; Y = 1.9890026157693403430215539628989063203334808349609375p13 {+ 4454071811847247 13 (16293.9)}
; 1.560826259918141278859593512606807053089141845703125p-808 m 1.9890026157693403430215539628989063203334808349609375p13 == 1.560826259918141278859593512606807053089141845703125p-808
; [HW: 1.560826259918141278859593512606807053089141845703125p-808] 

; mpf : + 2525736935186930 -808
; mpfd: + 2525736935186930 -808 (9.14362e-244) class: Pos. norm. non-zero
; hwf : + 2525736935186930 -808 (9.14362e-244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010111 #b1000111110010010010011110100110100010110000111110010)))
(assert (= y (fp #b0 #b10000001100 #b1111110100101111010001101000001001100011010001001111)))
(assert (= r (fp #b0 #b00011010111 #b1000111110010010010011110100110100010110000111110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
