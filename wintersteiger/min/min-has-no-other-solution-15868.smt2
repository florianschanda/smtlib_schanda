(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9657950464264504208955486319609917700290679931640625p974 {- 4349554211202433 974 (-3.13873e+293)}
; Y = -1.3917671482716951203428834560327231884002685546875p-219 {- 1764362382972408 -219 (-1.65195e-066)}
; -1.9657950464264504208955486319609917700290679931640625p974 m -1.3917671482716951203428834560327231884002685546875p-219 == -1.9657950464264504208955486319609917700290679931640625p974
; [HW: -1.9657950464264504208955486319609917700290679931640625p974] 

; mpf : - 4349554211202433 974
; mpfd: - 4349554211202433 974 (-3.13873e+293) class: Neg. norm. non-zero
; hwf : - 4349554211202433 974 (-3.13873e+293) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001101 #b1111011100111110010110000001101100001010010110000001)))
(assert (= y (fp #b1 #b01100100100 #b0110010001001010110110100001000101111001010111111000)))
(assert (= r (fp #b1 #b11111001101 #b1111011100111110010110000001101100001010010110000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
