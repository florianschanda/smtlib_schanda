(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3094519166649949415415221665170975029468536376953125p932 {- 1393647536581557 932 (-4.75385e+280)}
; Y = -1.851460524824716014080649983952753245830535888671875p-691 {- 3834637302321278 -691 (-1.80214e-208)}
; -1.3094519166649949415415221665170975029468536376953125p932 m -1.851460524824716014080649983952753245830535888671875p-691 == -1.3094519166649949415415221665170975029468536376953125p932
; [HW: -1.3094519166649949415415221665170975029468536376953125p932] 

; mpf : - 1393647536581557 932
; mpfd: - 1393647536581557 932 (-4.75385e+280) class: Neg. norm. non-zero
; hwf : - 1393647536581557 932 (-4.75385e+280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110100011 #b0100111100111000001111011010010111000010101110110101)))
(assert (= y (fp #b1 #b00101001100 #b1101100111111001010100010010001111110101000001111110)))
(assert (= r (fp #b1 #b11110100011 #b0100111100111000001111011010010111000010101110110101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
