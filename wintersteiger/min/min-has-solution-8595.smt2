(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9706743463022349249769149537314660847187042236328125p341 {- 4371528624304845 341 (-8.82762e+102)}
; Y = 1.0020888497678115403033416441758163273334503173828125p-453 {+ 9407343035949 -453 (4.30842e-137)}
; -1.9706743463022349249769149537314660847187042236328125p341 m 1.0020888497678115403033416441758163273334503173828125p-453 == -1.9706743463022349249769149537314660847187042236328125p341
; [HW: -1.9706743463022349249769149537314660847187042236328125p341] 

; mpf : - 4371528624304845 341
; mpfd: - 4371528624304845 341 (-8.82762e+102) class: Neg. norm. non-zero
; hwf : - 4371528624304845 341 (-8.82762e+102) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010100 #b1111100001111110000111010010110001101111001011001101)))
(assert (= y (fp #b0 #b01000111010 #b0000000010001000111001010001010101110000011000101101)))
(assert (= r (fp #b1 #b10101010100 #b1111100001111110000111010010110001101111001011001101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
