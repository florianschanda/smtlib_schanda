(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6501356090938401610657138007809408009052276611328125p-496 {- 2927950486855309 -496 (-8.06569e-150)}
; Y = 1.8119350347832205994080823074909858405590057373046875p-181 {+ 3656630320098763 -181 (5.91171e-055)}
; -1.6501356090938401610657138007809408009052276611328125p-496 m 1.8119350347832205994080823074909858405590057373046875p-181 == -1.6501356090938401610657138007809408009052276611328125p-496
; [HW: -1.6501356090938401610657138007809408009052276611328125p-496] 

; mpf : - 2927950486855309 -496
; mpfd: - 2927950486855309 -496 (-8.06569e-150) class: Neg. norm. non-zero
; hwf : - 2927950486855309 -496 (-8.06569e-150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000001111 #b1010011001101111010010011000101100000101111010001101)))
(assert (= y (fp #b0 #b01101001010 #b1100111111011010111110010111010011011110110111001011)))
(assert (= r (fp #b1 #b01000001111 #b1010011001101111010010011000101100000101111010001101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
