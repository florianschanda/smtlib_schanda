(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8203634955905936276820966668310575187206268310546875p-843 {- 3694588733050155 -843 (-3.10364e-254)}
; Y = 1.217239291692548963652598104090429842472076416015625p947 {+ 978358793116794 947 (1.44804e+285)}
; -1.8203634955905936276820966668310575187206268310546875p-843 m 1.217239291692548963652598104090429842472076416015625p947 == -1.8203634955905936276820966668310575187206268310546875p-843
; [HW: -1.8203634955905936276820966668310575187206268310546875p-843] 

; mpf : - 3694588733050155 -843
; mpfd: - 3694588733050155 -843 (-3.10364e-254) class: Neg. norm. non-zero
; hwf : - 3694588733050155 -843 (-3.10364e-254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110100 #b1101001000000011010101111001000001100100110100101011)))
(assert (= y (fp #b0 #b11110110010 #b0011011110011100111111101000010100111001110001111010)))
(assert (= r (fp #b1 #b00010110100 #b1101001000000011010101111001000001100100110100101011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
