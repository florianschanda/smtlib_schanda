(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9696987150431890523094580203178338706493377685546875p-956 {+ 4367134771730155 -956 (3.23388e-288)}
; Y = -1.158729226968898462502011170727200806140899658203125p-825 {- 714852887429938 -825 (-5.17888e-249)}
; 1.9696987150431890523094580203178338706493377685546875p-956 m -1.158729226968898462502011170727200806140899658203125p-825 == -1.158729226968898462502011170727200806140899658203125p-825
; [HW: -1.158729226968898462502011170727200806140899658203125p-825] 

; mpf : - 714852887429938 -825
; mpfd: - 714852887429938 -825 (-5.17888e-249) class: Neg. norm. non-zero
; hwf : - 714852887429938 -825 (-5.17888e-249) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001000011 #b1111100000111110001011001100110000010101011011101011)))
(assert (= y (fp #b1 #b00011000110 #b0010100010100010011110101000011011000000001100110010)))
(assert (= r (fp #b1 #b00011000110 #b0010100010100010011110101000011011000000001100110010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
