(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8525544522466430574780815732083283364772796630859375p311 {+ 3839563913451039 311 (7.72858e+093)}
; Y = -1.3074591486748767810155413826578296720981597900390625p47 {- 1384672907403825 47 (-1.84009e+014)}
; 1.8525544522466430574780815732083283364772796630859375p311 m -1.3074591486748767810155413826578296720981597900390625p47 == -1.3074591486748767810155413826578296720981597900390625p47
; [HW: -1.3074591486748767810155413826578296720981597900390625p47] 

; mpf : - 1384672907403825 47
; mpfd: - 1384672907403825 47 (-1.84009e+014) class: Neg. norm. non-zero
; hwf : - 1384672907403825 47 (-1.84009e+014) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110110 #b1101101001000001000000100011001001110101011000011111)))
(assert (= y (fp #b1 #b10000101110 #b0100111010110101101001001000110001101010001000110001)))
(assert (= r (fp #b1 #b10000101110 #b0100111010110101101001001000110001101010001000110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
