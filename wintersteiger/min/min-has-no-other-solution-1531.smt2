(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2324492403324665001917992412927560508251190185546875p-121 {- 1046858312143851 -121 (-4.63596e-037)}
; Y = -1.362756236371008622398903753492049872875213623046875p240 {- 1633708850946798 240 (-2.40778e+072)}
; -1.2324492403324665001917992412927560508251190185546875p-121 m -1.362756236371008622398903753492049872875213623046875p240 == -1.362756236371008622398903753492049872875213623046875p240
; [HW: -1.362756236371008622398903753492049872875213623046875p240] 

; mpf : - 1633708850946798 240
; mpfd: - 1633708850946798 240 (-2.40778e+072) class: Neg. norm. non-zero
; hwf : - 1633708850946798 240 (-2.40778e+072) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000110 #b0011101110000001110010110001110100110101001111101011)))
(assert (= y (fp #b1 #b10011101111 #b0101110011011101100101111011101110100010001011101110)))
(assert (= r (fp #b1 #b10011101111 #b0101110011011101100101111011101110100010001011101110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
