(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.570705197902830807521468159393407404422760009765625p-988 {+ 2570227716613594 -988 (6.00425e-298)}
; Y = -1.20104829890589481777851688093505799770355224609375p-493 {- 905441044036060 -493 (-4.69648e-149)}
; 1.570705197902830807521468159393407404422760009765625p-988 m -1.20104829890589481777851688093505799770355224609375p-493 == -1.20104829890589481777851688093505799770355224609375p-493
; [HW: -1.20104829890589481777851688093505799770355224609375p-493] 

; mpf : - 905441044036060 -493
; mpfd: - 905441044036060 -493 (-4.69648e-149) class: Neg. norm. non-zero
; hwf : - 905441044036060 -493 (-4.69648e-149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100011 #b1001001000011001101111000110000010100110010111011010)))
(assert (= y (fp #b1 #b01000010010 #b0011001101110111111001101011110010110111100111011100)))
(assert (= r (fp #b1 #b01000010010 #b0011001101110111111001101011110010110111100111011100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
