(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -0.2227916645071699175417734295479021966457366943359375p-1022 {- 1003364457255743 -1023 (-4.95728e-309)}
; Y = 1.6657948596848786149138277323800139129161834716796875p260 {+ 2998473481982011 260 (3.08617e+078)}
; -0.2227916645071699175417734295479021966457366943359375p-1022 m 1.6657948596848786149138277323800139129161834716796875p260 == -0.2227916645071699175417734295479021966457366943359375p-1022
; [HW: -0.2227916645071699175417734295479021966457366943359375p-1022] 

; mpf : - 1003364457255743 -1023
; mpfd: - 1003364457255743 -1023 (-4.95728e-309) class: Neg. denorm.
; hwf : - 1003364457255743 -1023 (-4.95728e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0011100100001000110111111110000011100001001100111111)))
(assert (= y (fp #b0 #b10100000011 #b1010101001110001100010000010110000110001000000111011)))
(assert (= r (fp #b1 #b00000000000 #b0011100100001000110111111110000011100001001100111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
