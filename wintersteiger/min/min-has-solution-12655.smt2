(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4744794323780048284078247888828627765178680419921875p-481 {+ 2136865394852547 -481 (2.36162e-145)}
; Y = -1.594013452517618389947529067285358905792236328125p-831 {- 2675198763411408 -831 (-1.11318e-250)}
; 1.4744794323780048284078247888828627765178680419921875p-481 m -1.594013452517618389947529067285358905792236328125p-831 == -1.594013452517618389947529067285358905792236328125p-831
; [HW: -1.594013452517618389947529067285358905792236328125p-831] 

; mpf : - 2675198763411408 -831
; mpfd: - 2675198763411408 -831 (-1.11318e-250) class: Neg. norm. non-zero
; hwf : - 2675198763411408 -831 (-1.11318e-250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011110 #b0111100101110111011110111110110010110000001011000011)))
(assert (= y (fp #b1 #b00011000000 #b1001100000010001010000111111111111110010011111010000)))
(assert (= r (fp #b1 #b00011000000 #b1001100000010001010000111111111111110010011111010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
