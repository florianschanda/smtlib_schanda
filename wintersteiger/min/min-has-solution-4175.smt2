(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9864306733852050701472080618259496986865997314453125p-146 {+ 4442488813084437 -146 (2.22687e-044)}
; Y = 1.4191764325539331093040118503267876803874969482421875p-772 {+ 1887802825452387 -772 (5.7132e-233)}
; 1.9864306733852050701472080618259496986865997314453125p-146 m 1.4191764325539331093040118503267876803874969482421875p-772 == 1.4191764325539331093040118503267876803874969482421875p-772
; [HW: 1.4191764325539331093040118503267876803874969482421875p-772] 

; mpf : + 1887802825452387 -772
; mpfd: + 1887802825452387 -772 (5.7132e-233) class: Pos. norm. non-zero
; hwf : + 1887802825452387 -772 (5.7132e-233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101101 #b1111110010000110101110000111100111110101111100010101)))
(assert (= y (fp #b0 #b00011111011 #b0110101101001111001001011000110100010010101101100011)))
(assert (= r (fp #b0 #b00011111011 #b0110101101001111001001011000110100010010101101100011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
