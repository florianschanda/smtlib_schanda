(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.17670227307855856935248084482736885547637939453125p-547 {+ 795796291192116 -547 (2.55422e-165)}
; Y = 1.048992021426698784125619567930698394775390625p-404 {+ 220640449441408 -404 (2.53895e-122)}
; 1.17670227307855856935248084482736885547637939453125p-547 m 1.048992021426698784125619567930698394775390625p-404 == 1.17670227307855856935248084482736885547637939453125p-547
; [HW: 1.17670227307855856935248084482736885547637939453125p-547] 

; mpf : + 795796291192116 -547
; mpfd: + 795796291192116 -547 (2.55422e-165) class: Pos. norm. non-zero
; hwf : + 795796291192116 -547 (2.55422e-165) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011100 #b0010110100111100010111000011010000000000010100110100)))
(assert (= y (fp #b0 #b01001101011 #b0000110010001010101111011011100111001010111010000000)))
(assert (= r (fp #b0 #b00111011100 #b0010110100111100010111000011010000000000010100110100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
