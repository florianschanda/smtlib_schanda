(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.72629690916632849706502383924089372158050537109375p-208 {+ 3270950489481820 -208 (4.1964e-063)}
; Y = -1.5542931653171105921273920102976262569427490234375p-890 {- 2496314492776152 -890 (-1.88294e-268)}
; 1.72629690916632849706502383924089372158050537109375p-208 m -1.5542931653171105921273920102976262569427490234375p-890 == -1.5542931653171105921273920102976262569427490234375p-890
; [HW: -1.5542931653171105921273920102976262569427490234375p-890] 

; mpf : - 2496314492776152 -890
; mpfd: - 2496314492776152 -890 (-1.88294e-268) class: Neg. norm. non-zero
; hwf : - 2496314492776152 -890 (-1.88294e-268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100101111 #b1011100111101110100110000010000000001110001001011100)))
(assert (= y (fp #b1 #b00010000101 #b1000110111100110001010000010100101101110111011011000)))
(assert (= r (fp #b1 #b00010000101 #b1000110111100110001010000010100101101110111011011000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
