(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.584783841950727634184659109450876712799072265625p359 {+ 2633632292701584 359 (1.86097e+108)}
; Y = -1.7535369163304312944973162302630953490734100341796875p898 {- 3393628575595643 898 (-3.70554e+270)}
; 1.584783841950727634184659109450876712799072265625p359 m -1.7535369163304312944973162302630953490734100341796875p898 == -1.7535369163304312944973162302630953490734100341796875p898
; [HW: -1.7535369163304312944973162302630953490734100341796875p898] 

; mpf : - 3393628575595643 898
; mpfd: - 3393628575595643 898 (-3.70554e+270) class: Neg. norm. non-zero
; hwf : - 3393628575595643 898 (-3.70554e+270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100110 #b1001010110110100011001001101010001101000010110010000)))
(assert (= y (fp #b1 #b11110000001 #b1100000011100111110010111001101111110111110001111011)))
(assert (= r (fp #b1 #b11110000001 #b1100000011100111110010111001101111110111110001111011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
