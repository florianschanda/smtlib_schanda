(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8853851708269624420921672935946844518184661865234375p715 {+ 3987420325415671 715 (3.24973e+215)}
; Y = 1.45831264704143226396126920008100569248199462890625p-624 {+ 2064056666434980 -624 (2.09476e-188)}
; 1.8853851708269624420921672935946844518184661865234375p715 m 1.45831264704143226396126920008100569248199462890625p-624 == 1.45831264704143226396126920008100569248199462890625p-624
; [HW: 1.45831264704143226396126920008100569248199462890625p-624] 

; mpf : + 2064056666434980 -624
; mpfd: + 2064056666434980 -624 (2.09476e-188) class: Pos. norm. non-zero
; hwf : + 2064056666434980 -624 (2.09476e-188) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001010 #b1110001010101000100110100100000100010000101011110111)))
(assert (= y (fp #b0 #b00110001111 #b0111010101010011111110100100011001100010110110100100)))
(assert (= r (fp #b0 #b00110001111 #b0111010101010011111110100100011001100010110110100100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
