(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6758587167840406362273597551393322646617889404296875p166 {+ 3043797065063707 166 (1.56753e+050)}
; Y = 1.259270216077668091969599117874167859554290771484375p550 {+ 1167649248515654 550 (4.64105e+165)}
; 1.6758587167840406362273597551393322646617889404296875p166 m 1.259270216077668091969599117874167859554290771484375p550 == 1.6758587167840406362273597551393322646617889404296875p166
; [HW: 1.6758587167840406362273597551393322646617889404296875p166] 

; mpf : + 3043797065063707 166
; mpfd: + 3043797065063707 166 (1.56753e+050) class: Pos. norm. non-zero
; hwf : + 3043797065063707 166 (1.56753e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100101 #b1010110100000101000100111010110101001101110100011011)))
(assert (= y (fp #b0 #b11000100101 #b0100001001011111100010000110101011100001011001000110)))
(assert (= r (fp #b0 #b10010100101 #b1010110100000101000100111010110101001101110100011011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
