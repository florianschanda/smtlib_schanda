(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.50516464322099086103889931109733879566192626953125p-780 {+ 2275059298970804 -780 (2.36694e-235)}
; Y = 1.1595446574937244843539474459248594939708709716796875p187 {+ 718525260037691 187 (2.27456e+056)}
; 1.50516464322099086103889931109733879566192626953125p-780 m 1.1595446574937244843539474459248594939708709716796875p187 == 1.50516464322099086103889931109733879566192626953125p-780
; [HW: 1.50516464322099086103889931109733879566192626953125p-780] 

; mpf : + 2275059298970804 -780
; mpfd: + 2275059298970804 -780 (2.36694e-235) class: Pos. norm. non-zero
; hwf : + 2275059298970804 -780 (2.36694e-235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110011 #b1000000101010010011110000101010110111010110010110100)))
(assert (= y (fp #b0 #b10010111010 #b0010100011010111111010110010111000101111111000111011)))
(assert (= r (fp #b0 #b00011110011 #b1000000101010010011110000101010110111010110010110100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
