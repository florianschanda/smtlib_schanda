(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6749909368041724366804601231706328690052032470703125p187 {+ 3039888931469733 187 (3.28565e+056)}
; Y = -1.063869540161331617156292850268073379993438720703125p261 {- 287642837270898 261 (-3.94201e+078)}
; 1.6749909368041724366804601231706328690052032470703125p187 m -1.063869540161331617156292850268073379993438720703125p261 == -1.063869540161331617156292850268073379993438720703125p261
; [HW: -1.063869540161331617156292850268073379993438720703125p261] 

; mpf : - 287642837270898 261
; mpfd: - 287642837270898 261 (-3.94201e+078) class: Neg. norm. non-zero
; hwf : - 287642837270898 261 (-3.94201e+078) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111010 #b1010110011001100001101001011111010101011100110100101)))
(assert (= y (fp #b1 #b10100000100 #b0001000001011001110000010001001000110100000101110010)))
(assert (= r (fp #b1 #b10100000100 #b0001000001011001110000010001001000110100000101110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
