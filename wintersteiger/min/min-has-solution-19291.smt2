(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.890926508253846893836680465028621256351470947265625p15 {+ 4012376290586522 15 (61961.9)}
; Y = 0.4876295892514195262634757455089129507541656494140625p-1022 {+ 2196088436447521 -1023 (1.08501e-308)}
; 1.890926508253846893836680465028621256351470947265625p15 m 0.4876295892514195262634757455089129507541656494140625p-1022 == 0.4876295892514195262634757455089129507541656494140625p-1022
; [HW: 0.4876295892514195262634757455089129507541656494140625p-1022] 

; mpf : + 2196088436447521 -1023
; mpfd: + 2196088436447521 -1023 (1.08501e-308) class: Pos. denorm.
; hwf : + 2196088436447521 -1023 (1.08501e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001110 #b1110010000010011110000100111100000010110111110011010)))
(assert (= y (fp #b0 #b00000000000 #b0111110011010101010010101111001001100101100100100001)))
(assert (= r (fp #b0 #b00000000000 #b0111110011010101010010101111001001100101100100100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
