(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8841367591072797349482925710617564618587493896484375p468 {- 3981797978860103 468 (-1.43599e+141)}
; Y = -1.100849035455034208297320219571702182292938232421875p599 {- 454183678495966 599 (-2.284e+180)}
; -1.8841367591072797349482925710617564618587493896484375p468 m -1.100849035455034208297320219571702182292938232421875p599 == -1.100849035455034208297320219571702182292938232421875p599
; [HW: -1.100849035455034208297320219571702182292938232421875p599] 

; mpf : - 454183678495966 599
; mpfd: - 454183678495966 599 (-2.284e+180) class: Neg. norm. non-zero
; hwf : - 454183678495966 599 (-2.284e+180) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010011 #b1110001001010110110010010110000110001110101001000111)))
(assert (= y (fp #b1 #b11001010110 #b0001100111010001001111100000110100011100110011011110)))
(assert (= r (fp #b1 #b11001010110 #b0001100111010001001111100000110100011100110011011110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
