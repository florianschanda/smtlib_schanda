(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5598425524562384847371276919147931039333343505859375p-898 {- 2521306710628063 -898 (-7.3815e-271)}
; Y = 1.02055143106673451569577082409523427486419677734375p-850 {+ 92555417294076 -850 (1.35937e-256)}
; -1.5598425524562384847371276919147931039333343505859375p-898 m 1.02055143106673451569577082409523427486419677734375p-850 == -1.5598425524562384847371276919147931039333343505859375p-898
; [HW: -1.5598425524562384847371276919147931039333343505859375p-898] 

; mpf : - 2521306710628063 -898
; mpfd: - 2521306710628063 -898 (-7.3815e-271) class: Neg. norm. non-zero
; hwf : - 2521306710628063 -898 (-7.3815e-271) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001111101 #b1000111101010001110101110110110110110101011011011111)))
(assert (= y (fp #b0 #b00010101101 #b0000010101000010110110111100110001010001010011111100)))
(assert (= r (fp #b1 #b00001111101 #b1000111101010001110101110110110110110101011011011111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
