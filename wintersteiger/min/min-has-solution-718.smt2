(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3937568046722967896045020097517408430576324462890625p190 {- 1773322998796753 190 (-2.18719e+057)}
; Y = 1.4702724385357368586113580022356472909450531005859375p637 {+ 2117918778952159 637 (8.38504e+191)}
; -1.3937568046722967896045020097517408430576324462890625p190 m 1.4702724385357368586113580022356472909450531005859375p637 == -1.3937568046722967896045020097517408430576324462890625p190
; [HW: -1.3937568046722967896045020097517408430576324462890625p190] 

; mpf : - 1773322998796753 190
; mpfd: - 1773322998796753 190 (-2.18719e+057) class: Neg. norm. non-zero
; hwf : - 1773322998796753 190 (-2.18719e+057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010111101 #b0110010011001101001111101111011010100101000111010001)))
(assert (= y (fp #b0 #b11001111100 #b0111100001100011110001100100011110111000100111011111)))
(assert (= r (fp #b1 #b10010111101 #b0110010011001101001111101111011010100101000111010001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
