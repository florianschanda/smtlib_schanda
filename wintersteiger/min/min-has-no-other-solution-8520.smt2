(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5114963505797895937377006703172810375690460205078125p-624 {+ 2303574773872509 -624 (2.17115e-188)}
; Y = -1.8649775987642220886897348464117385447025299072265625p276 {- 3895512791478377 276 (-2.2644e+083)}
; 1.5114963505797895937377006703172810375690460205078125p-624 m -1.8649775987642220886897348464117385447025299072265625p276 == -1.8649775987642220886897348464117385447025299072265625p276
; [HW: -1.8649775987642220886897348464117385447025299072265625p276] 

; mpf : - 3895512791478377 276
; mpfd: - 3895512791478377 276 (-2.2644e+083) class: Neg. norm. non-zero
; hwf : - 3895512791478377 276 (-2.2644e+083) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001111 #b1000001011110001011011001100000111000011011101111101)))
(assert (= y (fp #b1 #b10100010011 #b1101110101101111001011000000001001110111000001101001)))
(assert (= r (fp #b1 #b10100010011 #b1101110101101111001011000000001001110111000001101001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
