(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.91507934111061928206254378892481327056884765625p-579 {+ 4121150979640224 -579 (9.67875e-175)}
; Y = 1.1675558085829835786029207156389020383358001708984375p-274 {+ 754604277098087 -274 (3.84644e-083)}
; 1.91507934111061928206254378892481327056884765625p-579 m 1.1675558085829835786029207156389020383358001708984375p-274 == 1.91507934111061928206254378892481327056884765625p-579
; [HW: 1.91507934111061928206254378892481327056884765625p-579] 

; mpf : + 4121150979640224 -579
; mpfd: + 4121150979640224 -579 (9.67875e-175) class: Pos. norm. non-zero
; hwf : + 4121150979640224 -579 (9.67875e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111100 #b1110101001000010101000111100001101010000101110100000)))
(assert (= y (fp #b0 #b01011101101 #b0010101011100100111011111111111000011110011001100111)))
(assert (= r (fp #b0 #b00110111100 #b1110101001000010101000111100001101010000101110100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
