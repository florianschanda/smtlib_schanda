(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.77310744648231111142422378179617226123809814453125p-303 {- 3481766407895092 -303 (-1.08804e-091)}
; Y = 1.87853303084565492753199578146450221538543701171875p395 {+ 3956561030349164 395 (1.51589e+119)}
; -1.77310744648231111142422378179617226123809814453125p-303 m 1.87853303084565492753199578146450221538543701171875p395 == -1.77310744648231111142422378179617226123809814453125p-303
; [HW: -1.77310744648231111142422378179617226123809814453125p-303] 

; mpf : - 3481766407895092 -303
; mpfd: - 3481766407895092 -303 (-1.08804e-091) class: Neg. norm. non-zero
; hwf : - 3481766407895092 -303 (-1.08804e-091) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010000 #b1100010111101010010111101001111011101111100000110100)))
(assert (= y (fp #b0 #b10110001010 #b1110000011100111100010100110101111110000000101101100)))
(assert (= r (fp #b1 #b01011010000 #b1100010111101010010111101001111011101111100000110100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
