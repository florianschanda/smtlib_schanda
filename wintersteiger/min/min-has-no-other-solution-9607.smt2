(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5777288101785325036274798549129627645015716552734375p43 {- 2601859254241239 43 (-1.38778e+013)}
; Y = 1.1490718496540279769391190711758099496364593505859375p644 {+ 671359926553311 644 (8.38812e+193)}
; -1.5777288101785325036274798549129627645015716552734375p43 m 1.1490718496540279769391190711758099496364593505859375p644 == -1.5777288101785325036274798549129627645015716552734375p43
; [HW: -1.5777288101785325036274798549129627645015716552734375p43] 

; mpf : - 2601859254241239 43
; mpfd: - 2601859254241239 43 (-1.38778e+013) class: Neg. norm. non-zero
; hwf : - 2601859254241239 43 (-1.38778e+013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101010 #b1001001111100110000010010000100110101100011111010111)))
(assert (= y (fp #b0 #b11010000011 #b0010011000101001100100101001111100000100101011011111)))
(assert (= r (fp #b1 #b10000101010 #b1001001111100110000010010000100110101100011111010111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
