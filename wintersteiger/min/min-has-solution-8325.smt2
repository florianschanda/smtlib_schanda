(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.418984407959550164690654128207825124263763427734375p-354 {+ 1886938023560678 -354 (3.86687e-107)}
; Y = 1.3303999065706424431709820055402815341949462890625p916 {+ 1487988896114792 916 (7.36984e+275)}
; 1.418984407959550164690654128207825124263763427734375p-354 m 1.3303999065706424431709820055402815341949462890625p916 == 1.418984407959550164690654128207825124263763427734375p-354
; [HW: 1.418984407959550164690654128207825124263763427734375p-354] 

; mpf : + 1886938023560678 -354
; mpfd: + 1886938023560678 -354 (3.86687e-107) class: Pos. norm. non-zero
; hwf : + 1886938023560678 -354 (3.86687e-107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011101 #b0110101101000010100011111110100110111000010111100110)))
(assert (= y (fp #b0 #b11110010011 #b0101010010010101000101101001100101010010100001101000)))
(assert (= r (fp #b0 #b01010011101 #b0110101101000010100011111110100110111000010111100110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
