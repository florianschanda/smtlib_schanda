(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.41091929251684167212488318909890949726104736328125p-671 {- 1850615972658196 -671 (-1.44004e-202)}
; Y = -1.060781260421965299656221759505569934844970703125p243 {- 273734461787472 243 (-1.49939e+073)}
; -1.41091929251684167212488318909890949726104736328125p-671 m -1.060781260421965299656221759505569934844970703125p243 == -1.060781260421965299656221759505569934844970703125p243
; [HW: -1.060781260421965299656221759505569934844970703125p243] 

; mpf : - 273734461787472 243
; mpfd: - 273734461787472 243 (-1.49939e+073) class: Neg. norm. non-zero
; hwf : - 273734461787472 243 (-1.49939e+073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100000 #b0110100100110010000000011011101010100111110000010100)))
(assert (= y (fp #b1 #b10011110010 #b0000111110001111010111000101010110111000110101010000)))
(assert (= r (fp #b1 #b10011110010 #b0000111110001111010111000101010110111000110101010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
