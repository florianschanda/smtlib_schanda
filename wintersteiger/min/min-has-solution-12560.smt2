(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8881596610384523415859803208149969577789306640625p412 {- 3999915518498280 412 (-1.99709e+124)}
; Y = -1.729743500816374623951787725673057138919830322265625p-211 {- 3286472558352666 -211 (-5.25597e-064)}
; -1.8881596610384523415859803208149969577789306640625p412 m -1.729743500816374623951787725673057138919830322265625p-211 == -1.8881596610384523415859803208149969577789306640625p412
; [HW: -1.8881596610384523415859803208149969577789306640625p412] 

; mpf : - 3999915518498280 412
; mpfd: - 3999915518498280 412 (-1.99709e+124) class: Neg. norm. non-zero
; hwf : - 3999915518498280 412 (-1.99709e+124) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011011 #b1110001101011110011011100111100111001001010111101000)))
(assert (= y (fp #b1 #b01100101100 #b1011101011010000011110000101011001111001100100011010)))
(assert (= r (fp #b1 #b10110011011 #b1110001101011110011011100111100111001001010111101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
