(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.275119151481987511687066216836683452129364013671875p725 {+ 1239026508096766 725 (2.2506e+218)}
; Y = -1.911359721535117017765514901839196681976318359375p-109 {- 4104399302306032 -109 (-2.94492e-033)}
; 1.275119151481987511687066216836683452129364013671875p725 m -1.911359721535117017765514901839196681976318359375p-109 == -1.911359721535117017765514901839196681976318359375p-109
; [HW: -1.911359721535117017765514901839196681976318359375p-109] 

; mpf : - 4104399302306032 -109
; mpfd: - 4104399302306032 -109 (-2.94492e-033) class: Neg. norm. non-zero
; hwf : - 4104399302306032 -109 (-2.94492e-033) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010100 #b0100011001101110001101010110111000011110010011111110)))
(assert (= y (fp #b1 #b01110010010 #b1110100101001110110111101110011011100010100011110000)))
(assert (= r (fp #b1 #b01110010010 #b1110100101001110110111101110011011100010100011110000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
