(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3226822120486121381333077806630171835422515869140625p834 {- 1453231489941217 834 (-1.51521e+251)}
; Y = -1.1587855327442857511499596512294374406337738037109375p-933 {- 715106466098991 -933 (-1.59594e-281)}
; -1.3226822120486121381333077806630171835422515869140625p834 m -1.1587855327442857511499596512294374406337738037109375p-933 == -1.3226822120486121381333077806630171835422515869140625p834
; [HW: -1.3226822120486121381333077806630171835422515869140625p834] 

; mpf : - 1453231489941217 834
; mpfd: - 1453231489941217 834 (-1.51521e+251) class: Neg. norm. non-zero
; hwf : - 1453231489941217 834 (-1.51521e+251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000001 #b0101001010011011010011010010101110111111111011100001)))
(assert (= y (fp #b1 #b00001011010 #b0010100010100110001010110010111000110110111100101111)))
(assert (= r (fp #b1 #b11101000001 #b0101001010011011010011010010101110111111111011100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
