(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.251358727651819879866934570600278675556182861328125p697 {+ 1132019072189058 697 (8.2279e+209)}
; Y = -1.558935122971577325046155237942002713680267333984375p390 {- 2517220011539078 390 (-3.93121e+117)}
; 1.251358727651819879866934570600278675556182861328125p697 m -1.558935122971577325046155237942002713680267333984375p390 == -1.558935122971577325046155237942002713680267333984375p390
; [HW: -1.558935122971577325046155237942002713680267333984375p390] 

; mpf : - 2517220011539078 390
; mpfd: - 2517220011539078 390 (-3.93121e+117) class: Neg. norm. non-zero
; hwf : - 2517220011539078 390 (-3.93121e+117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111000 #b0100000001011001000010111010101011010100001010000010)))
(assert (= y (fp #b1 #b10110000101 #b1000111100010110010111110100100110111111101010000110)))
(assert (= r (fp #b1 #b10110000101 #b1000111100010110010111110100100110111111101010000110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
