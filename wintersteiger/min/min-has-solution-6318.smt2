(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.472273789642537078492523505701683461666107177734375p45 {+ 2126932063050982 45 (5.1801e+013)}
; Y = -1.3779579223030309353958955398411490023136138916015625p600 {- 1702171158045657 600 (-5.71786e+180)}
; 1.472273789642537078492523505701683461666107177734375p45 m -1.3779579223030309353958955398411490023136138916015625p600 == -1.3779579223030309353958955398411490023136138916015625p600
; [HW: -1.3779579223030309353958955398411490023136138916015625p600] 

; mpf : - 1702171158045657 600
; mpfd: - 1702171158045657 600 (-5.71786e+180) class: Neg. norm. non-zero
; hwf : - 1702171158045657 600 (-5.71786e+180) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101100 #b0111100011100110111011110110000101000101110011100110)))
(assert (= y (fp #b1 #b11001010111 #b0110000011000001110110011011001110001110001111011001)))
(assert (= r (fp #b1 #b11001010111 #b0110000011000001110110011011001110001110001111011001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
