(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6303345609367909663234286199440248310565948486328125p-200 {- 2838774493753677 -200 (-1.01456e-060)}
; Y = -1.188573970397555523703658764134161174297332763671875p-634 {- 849261662814206 -634 (-1.66728e-191)}
; -1.6303345609367909663234286199440248310565948486328125p-200 m -1.188573970397555523703658764134161174297332763671875p-634 == -1.6303345609367909663234286199440248310565948486328125p-200
; [HW: -1.6303345609367909663234286199440248310565948486328125p-200] 

; mpf : - 2838774493753677 -200
; mpfd: - 2838774493753677 -200 (-1.01456e-060) class: Neg. norm. non-zero
; hwf : - 2838774493753677 -200 (-1.01456e-060) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100110111 #b1010000101011101100110110001010011000011000101001101)))
(assert (= y (fp #b1 #b00110000101 #b0011000001000110011000100011101110111011111111111110)))
(assert (= r (fp #b1 #b01100110111 #b1010000101011101100110110001010011000011000101001101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
