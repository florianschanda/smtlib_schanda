(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.030621644954468951738135729101486504077911376953125p694 {+ 137907628806418 694 (8.47064e+208)}
; Y = 1.4577869793149973443036060416488908231258392333984375p-374 {+ 2061689269458087 -374 (3.78857e-113)}
; 1.030621644954468951738135729101486504077911376953125p694 m 1.4577869793149973443036060416488908231258392333984375p-374 == 1.4577869793149973443036060416488908231258392333984375p-374
; [HW: 1.4577869793149973443036060416488908231258392333984375p-374] 

; mpf : + 2061689269458087 -374
; mpfd: + 2061689269458087 -374 (3.78857e-113) class: Pos. norm. non-zero
; hwf : + 2061689269458087 -374 (3.78857e-113) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110101 #b0000011111010110110100011111001110100001000100010010)))
(assert (= y (fp #b0 #b01010001001 #b0111010100110001100001110000100010110001010010100111)))
(assert (= r (fp #b0 #b01010001001 #b0111010100110001100001110000100010110001010010100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
