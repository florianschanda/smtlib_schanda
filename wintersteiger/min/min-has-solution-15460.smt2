(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8603698920459874610600081723532639443874359130859375p-948 {+ 3874761525219103 -948 (7.81922e-286)}
; Y = -1.9277517123486485051131467116647399961948394775390625p-754 {- 4178222266025713 -754 (-2.03439e-227)}
; 1.8603698920459874610600081723532639443874359130859375p-948 m -1.9277517123486485051131467116647399961948394775390625p-754 == -1.9277517123486485051131467116647399961948394775390625p-754
; [HW: -1.9277517123486485051131467116647399961948394775390625p-754] 

; mpf : - 4178222266025713 -754
; mpfd: - 4178222266025713 -754 (-2.03439e-227) class: Neg. norm. non-zero
; hwf : - 4178222266025713 -754 (-2.03439e-227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001011 #b1101110001000001001100111000010011001100111100011111)))
(assert (= y (fp #b1 #b00100001101 #b1110110110000001001000101101111101011000011011110001)))
(assert (= r (fp #b1 #b00100001101 #b1110110110000001001000101101111101011000011011110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
