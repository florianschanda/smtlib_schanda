(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9450513193305372094954464046168141067028045654296875p-475 {- 4256132769583003 -475 (-1.99381e-143)}
; Y = -1.327269454157565586882583374972455203533172607421875p377 {- 1473890591793758 377 (-4.08571e+113)}
; -1.9450513193305372094954464046168141067028045654296875p-475 m -1.327269454157565586882583374972455203533172607421875p377 == -1.327269454157565586882583374972455203533172607421875p377
; [HW: -1.327269454157565586882583374972455203533172607421875p377] 

; mpf : - 1473890591793758 377
; mpfd: - 1473890591793758 377 (-4.08571e+113) class: Neg. norm. non-zero
; hwf : - 1473890591793758 377 (-4.08571e+113) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100100 #b1111000111101110111000100001110110010000111110011011)))
(assert (= y (fp #b1 #b10101111000 #b0101001111000111111011100101001010010110001001011110)))
(assert (= r (fp #b1 #b10101111000 #b0101001111000111111011100101001010010110001001011110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
