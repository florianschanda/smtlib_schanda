(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.217570417721773434749366060714237391948699951171875p-262 {- 979850052178622 -262 (-1.64299e-079)}
; Y = 1.7329497245646126035723000313737429678440093994140625p-358 {+ 3300912106430497 -358 (2.95153e-108)}
; -1.217570417721773434749366060714237391948699951171875p-262 m 1.7329497245646126035723000313737429678440093994140625p-358 == -1.217570417721773434749366060714237391948699951171875p-262
; [HW: -1.217570417721773434749366060714237391948699951171875p-262] 

; mpf : - 979850052178622 -262
; mpfd: - 979850052178622 -262 (-1.64299e-079) class: Neg. norm. non-zero
; hwf : - 979850052178622 -262 (-1.64299e-079) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111001 #b0011011110110010101100011110010010110001001010111110)))
(assert (= y (fp #b0 #b01010011001 #b1011101110100010100101111101100010011110000000100001)))
(assert (= r (fp #b1 #b01011111001 #b0011011110110010101100011110010010110001001010111110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
