(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.46704015411468891016966153983958065509796142578125p-19 {+ 2103361864037972 -19 (2.79816e-006)}
; Y = -1.6279830590395791833913108348497189581394195556640625p-815 {- 2828184270685633 -815 (-7.45081e-246)}
; 1.46704015411468891016966153983958065509796142578125p-19 m -1.6279830590395791833913108348497189581394195556640625p-815 == -1.6279830590395791833913108348497189581394195556640625p-815
; [HW: -1.6279830590395791833913108348497189581394195556640625p-815] 

; mpf : - 2828184270685633 -815
; mpfd: - 2828184270685633 -815 (-7.45081e-246) class: Neg. norm. non-zero
; hwf : - 2828184270685633 -815 (-7.45081e-246) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101100 #b0111011110001111111100011000101111010111011001010100)))
(assert (= y (fp #b1 #b00011010000 #b1010000011000011011111110110110100000100010111000001)))
(assert (= r (fp #b1 #b00011010000 #b1010000011000011011111110110110100000100010111000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
