(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.98651399051124855077432584948837757110595703125p-280 {- 4442864040062240 -280 (-1.02257e-084)}
; Y = -1.442825483209993375766089229728095233440399169921875p89 {- 1994308681174686 89 (-8.93066e+026)}
; -1.98651399051124855077432584948837757110595703125p-280 m -1.442825483209993375766089229728095233440399169921875p89 == -1.442825483209993375766089229728095233440399169921875p89
; [HW: -1.442825483209993375766089229728095233440399169921875p89] 

; mpf : - 1994308681174686 89
; mpfd: - 1994308681174686 89 (-8.93066e+026) class: Neg. norm. non-zero
; hwf : - 1994308681174686 89 (-8.93066e+026) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011100111 #b1111110010001100001011100100111001001010110100100000)))
(assert (= y (fp #b1 #b10001011000 #b0111000101011101000000101100100000111000111010011110)))
(assert (= r (fp #b1 #b10001011000 #b0111000101011101000000101100100000111000111010011110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
