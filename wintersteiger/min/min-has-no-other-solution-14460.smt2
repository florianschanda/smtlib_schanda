(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9441889962956853121767153425025753676891326904296875p-558 {+ 4252249211884571 -558 (2.06063e-168)}
; Y = -1.404437890471015304427737646619789302349090576171875p-256 {- 1821426332819774 -256 (-1.2129e-077)}
; 1.9441889962956853121767153425025753676891326904296875p-558 m -1.404437890471015304427737646619789302349090576171875p-256 == -1.404437890471015304427737646619789302349090576171875p-256
; [HW: -1.404437890471015304427737646619789302349090576171875p-256] 

; mpf : - 1821426332819774 -256
; mpfd: - 1821426332819774 -256 (-1.2129e-077) class: Neg. norm. non-zero
; hwf : - 1821426332819774 -256 (-1.2129e-077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111010001 #b1111000110110110010111101011110001010101010000011011)))
(assert (= y (fp #b1 #b01011111111 #b0110011110001001001111011101100011010110000100111110)))
(assert (= r (fp #b1 #b01011111111 #b0110011110001001001111011101100011010110000100111110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
