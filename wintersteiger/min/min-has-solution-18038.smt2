(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.930168457949380300675557009526528418064117431640625p296 {+ 4189106320612618 296 (2.45739e+089)}
; Y = -1.52656953678522189221666849334724247455596923828125p440 {- 2371458369650580 440 (-4.33426e+132)}
; 1.930168457949380300675557009526528418064117431640625p296 m -1.52656953678522189221666849334724247455596923828125p440 == -1.52656953678522189221666849334724247455596923828125p440
; [HW: -1.52656953678522189221666849334724247455596923828125p440] 

; mpf : - 2371458369650580 440
; mpfd: - 2371458369650580 440 (-4.33426e+132) class: Neg. norm. non-zero
; hwf : - 2371458369650580 440 (-4.33426e+132) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100111 #b1110111000011111100001010010001010101001110100001010)))
(assert (= y (fp #b1 #b10110110111 #b1000011011001101010000101101101110001111111110010100)))
(assert (= r (fp #b1 #b10110110111 #b1000011011001101010000101101101110001111111110010100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
