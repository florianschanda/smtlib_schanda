(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7330126992049572631771070518880151212215423583984375p-153 {- 3301195718997287 -153 (-1.51779e-046)}
; Y = -1.0539882691852950902244856479228474199771881103515625p-977 {- 243141548985273 -977 (-8.25145e-295)}
; -1.7330126992049572631771070518880151212215423583984375p-153 m -1.0539882691852950902244856479228474199771881103515625p-977 == -1.7330126992049572631771070518880151212215423583984375p-153
; [HW: -1.7330126992049572631771070518880151212215423583984375p-153] 

; mpf : - 3301195718997287 -153
; mpfd: - 3301195718997287 -153 (-1.51779e-046) class: Neg. norm. non-zero
; hwf : - 3301195718997287 -153 (-1.51779e-046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100110 #b1011101110100110101110000110001010100011010100100111)))
(assert (= y (fp #b1 #b00000101110 #b0000110111010010001011001101101010000100101110111001)))
(assert (= r (fp #b1 #b01101100110 #b1011101110100110101110000110001010100011010100100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
