(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.189043489158674304917440167628228664398193359375p-530 {- 851376187331824 -530 (-3.38298e-160)}
; Y = 1.105825700443882286805319381528533995151519775390625p885 {+ 476596585085290 885 (2.85255e+266)}
; -1.189043489158674304917440167628228664398193359375p-530 m 1.105825700443882286805319381528533995151519775390625p885 == -1.189043489158674304917440167628228664398193359375p-530
; [HW: -1.189043489158674304917440167628228664398193359375p-530] 

; mpf : - 851376187331824 -530
; mpfd: - 851376187331824 -530 (-3.38298e-160) class: Neg. norm. non-zero
; hwf : - 851376187331824 -530 (-3.38298e-160) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101101 #b0011000001100101001001110111001101110101010011110000)))
(assert (= y (fp #b0 #b11101110100 #b0001101100010111011001001010001001111011100101101010)))
(assert (= r (fp #b1 #b00111101101 #b0011000001100101001001110111001101110101010011110000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
