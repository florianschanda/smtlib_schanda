(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.976977220003913071622037023189477622509002685546875p37 {- 4399914243959086 37 (-2.71714e+011)}
; Y = -1.43710742587346818055493713472969830036163330078125p-479 {- 1968556840284628 -479 (-9.20707e-145)}
; -1.976977220003913071622037023189477622509002685546875p37 m -1.43710742587346818055493713472969830036163330078125p-479 == -1.976977220003913071622037023189477622509002685546875p37
; [HW: -1.976977220003913071622037023189477622509002685546875p37] 

; mpf : - 4399914243959086 37
; mpfd: - 4399914243959086 37 (-2.71714e+011) class: Neg. norm. non-zero
; hwf : - 4399914243959086 37 (-2.71714e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100100 #b1111101000011011001011011101100011011010100100101110)))
(assert (= y (fp #b1 #b01000100000 #b0110111111100110010001011011001011110111000111010100)))
(assert (= r (fp #b1 #b10000100100 #b1111101000011011001011011101100011011010100100101110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
