(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0610560729141018665444562429911457002162933349609375p449 {- 274972107224655 449 (-1.54243e+135)}
; Y = 1.5297353267439872670507838847697712481021881103515625p46 {+ 2385715820129209 46 (1.07646e+014)}
; -1.0610560729141018665444562429911457002162933349609375p449 m 1.5297353267439872670507838847697712481021881103515625p46 == -1.0610560729141018665444562429911457002162933349609375p449
; [HW: -1.0610560729141018665444562429911457002162933349609375p449] 

; mpf : - 274972107224655 449
; mpfd: - 274972107224655 449 (-1.54243e+135) class: Neg. norm. non-zero
; hwf : - 274972107224655 449 (-1.54243e+135) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000000 #b0000111110100001010111101110110001100011011001001111)))
(assert (= y (fp #b0 #b10000101101 #b1000011110011100101110111111111111100110101110111001)))
(assert (= r (fp #b1 #b10111000000 #b0000111110100001010111101110110001100011011001001111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
