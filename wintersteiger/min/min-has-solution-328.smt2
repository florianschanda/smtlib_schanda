(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1700040086886549506317578561720438301563262939453125p564 {- 765629990181717 564 (-7.06488e+169)}
; Y = 1.9850546607458177117422337687457911670207977294921875p109 {+ 4436291803074435 109 (1.28837e+033)}
; -1.1700040086886549506317578561720438301563262939453125p564 m 1.9850546607458177117422337687457911670207977294921875p109 == -1.1700040086886549506317578561720438301563262939453125p564
; [HW: -1.1700040086886549506317578561720438301563262939453125p564] 

; mpf : - 765629990181717 564
; mpfd: - 765629990181717 564 (-7.06488e+169) class: Neg. norm. non-zero
; hwf : - 765629990181717 564 (-7.06488e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110011 #b0010101110000101011000011111100110000001101101010101)))
(assert (= y (fp #b0 #b10001101100 #b1111110000101100100010101101000010101100111110000011)))
(assert (= r (fp #b1 #b11000110011 #b0010101110000101011000011111100110000001101101010101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
