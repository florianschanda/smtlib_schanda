(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.516281392548021411670333691290579736232757568359375p92 {- 2325124687097590 92 (-7.50826e+027)}
; Y = -1.0157146861409909188722622275236062705516815185546875p-909 {- 70772654648811 -909 (-2.34696e-274)}
; -1.516281392548021411670333691290579736232757568359375p92 m -1.0157146861409909188722622275236062705516815185546875p-909 == -1.516281392548021411670333691290579736232757568359375p92
; [HW: -1.516281392548021411670333691290579736232757568359375p92] 

; mpf : - 2325124687097590 92
; mpfd: - 2325124687097590 92 (-7.50826e+027) class: Neg. norm. non-zero
; hwf : - 2325124687097590 92 (-7.50826e+027) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001011011 #b1000010000101011000001000111000010000110111011110110)))
(assert (= y (fp #b1 #b00001110010 #b0000010000000101111000001010111100001010110111101011)))
(assert (= r (fp #b1 #b10001011011 #b1000010000101011000001000111000010000110111011110110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
