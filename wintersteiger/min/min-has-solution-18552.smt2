(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2634384770606386094726758528850041329860687255859375p-686 {- 1186421427125343 -686 (-3.93529e-207)}
; Y = -1.87364298104092963370703728287480771541595458984375p997 {- 3934538203870780 997 (-2.50953e+300)}
; -1.2634384770606386094726758528850041329860687255859375p-686 m -1.87364298104092963370703728287480771541595458984375p997 == -1.87364298104092963370703728287480771541595458984375p997
; [HW: -1.87364298104092963370703728287480771541595458984375p997] 

; mpf : - 3934538203870780 997
; mpfd: - 3934538203870780 997 (-2.50953e+300) class: Neg. norm. non-zero
; hwf : - 3934538203870780 997 (-2.50953e+300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101010001 #b0100001101110000101101000011101101111011110001011111)))
(assert (= y (fp #b1 #b11111100100 #b1101111110100111000100001111111111110011011000111100)))
(assert (= r (fp #b1 #b11111100100 #b1101111110100111000100001111111111110011011000111100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
