(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.05470190079530556914733097073622047901153564453125p474 {+ 246355460038196 474 (5.14455e+142)}
; Y = -1.491312886155363504059323531691916286945343017578125p11 {- 2212676531011618 11 (-3054.21)}
; 1.05470190079530556914733097073622047901153564453125p474 m -1.491312886155363504059323531691916286945343017578125p11 == -1.491312886155363504059323531691916286945343017578125p11
; [HW: -1.491312886155363504059323531691916286945343017578125p11] 

; mpf : - 2212676531011618 11
; mpfd: - 2212676531011618 11 (-3054.21) class: Neg. norm. non-zero
; hwf : - 2212676531011618 11 (-3054.21) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011001 #b0000111000000000111100011001101011110001111000110100)))
(assert (= y (fp #b1 #b10000001010 #b0111110111000110101011100110101000100100000000100010)))
(assert (= r (fp #b1 #b10000001010 #b0111110111000110101011100110101000100100000000100010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
