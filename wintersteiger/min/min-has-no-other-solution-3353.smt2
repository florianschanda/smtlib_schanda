(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.78006426449060750627495508524589240550994873046875p-945 {+ 3513097130884940 -945 (5.98535e-285)}
; Y = -1.8146921934466002657160288435989059507846832275390625p533 {- 3669047458827761 533 (-5.10259e+160)}
; 1.78006426449060750627495508524589240550994873046875p-945 m -1.8146921934466002657160288435989059507846832275390625p533 == -1.8146921934466002657160288435989059507846832275390625p533
; [HW: -1.8146921934466002657160288435989059507846832275390625p533] 

; mpf : - 3669047458827761 533
; mpfd: - 3669047458827761 533 (-5.10259e+160) class: Neg. norm. non-zero
; hwf : - 3669047458827761 533 (-5.10259e+160) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001110 #b1100011110110010010010101010100011000011111101001100)))
(assert (= y (fp #b1 #b11000010100 #b1101000010001111101010101110011100101000110111110001)))
(assert (= r (fp #b1 #b11000010100 #b1101000010001111101010101110011100101000110111110001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
