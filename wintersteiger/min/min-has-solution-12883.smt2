(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1752419951356081195825709073687903583049774169921875p389 {- 789219783992387 389 (-1.48182e+117)}
; Y = 1.233238693918123463078018176020123064517974853515625p-979 {+ 1050413695018042 -979 (2.41369e-295)}
; -1.1752419951356081195825709073687903583049774169921875p389 m 1.233238693918123463078018176020123064517974853515625p-979 == -1.1752419951356081195825709073687903583049774169921875p389
; [HW: -1.1752419951356081195825709073687903583049774169921875p389] 

; mpf : - 789219783992387 389
; mpfd: - 789219783992387 389 (-1.48182e+117) class: Neg. norm. non-zero
; hwf : - 789219783992387 389 (-1.48182e+117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000100 #b0010110011011100101010001100110111111110010001000011)))
(assert (= y (fp #b0 #b00000101100 #b0011101110110101100001111111001010001010010000111010)))
(assert (= r (fp #b1 #b10110000100 #b0010110011011100101010001100110111111110010001000011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
