(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.819030225464101757637536138645373284816741943359375p-350 {- 3688584218205302 -350 (-7.93125e-106)}
; Y = -1.076122021822678131997008676989935338497161865234375p817 {- 342823109115302 817 (-9.4052e+245)}
; -1.819030225464101757637536138645373284816741943359375p-350 m -1.076122021822678131997008676989935338497161865234375p817 == -1.076122021822678131997008676989935338497161865234375p817
; [HW: -1.076122021822678131997008676989935338497161865234375p817] 

; mpf : - 342823109115302 817
; mpfd: - 342823109115302 817 (-9.4052e+245) class: Neg. norm. non-zero
; hwf : - 342823109115302 817 (-9.4052e+245) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100001 #b1101000110101011111101110000000011001101110001110110)))
(assert (= y (fp #b1 #b11100110000 #b0001001101111100101110111001101000111011110110100110)))
(assert (= r (fp #b1 #b11100110000 #b0001001101111100101110111001101000111011110110100110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
