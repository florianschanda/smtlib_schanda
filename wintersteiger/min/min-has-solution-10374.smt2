(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.75725534484831058534837211482226848602294921875p415 {+ 3410374888883168 415 (1.4869e+125)}
; Y = -1.06205198963657831967566380626522004604339599609375p908 {- 279457317404892 908 (-2.29817e+273)}
; 1.75725534484831058534837211482226848602294921875p415 m -1.06205198963657831967566380626522004604339599609375p908 == -1.06205198963657831967566380626522004604339599609375p908
; [HW: -1.06205198963657831967566380626522004604339599609375p908] 

; mpf : - 279457317404892 908
; mpfd: - 279457317404892 908 (-2.29817e+273) class: Neg. norm. non-zero
; hwf : - 279457317404892 908 (-2.29817e+273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011110 #b1100000111011011011111000111110011011000001111100000)))
(assert (= y (fp #b1 #b11110001011 #b0000111111100010101000111010001000100100000011011100)))
(assert (= r (fp #b1 #b11110001011 #b0000111111100010101000111010001000100100000011011100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
