(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4687079216743701426395318776485510170459747314453125p-612 {+ 2110872821398293 -612 (8.64128e-185)}
; Y = -1.58291642632441753590910593629814684391021728515625p248 {- 2625222200382788 248 (-7.15973e+074)}
; 1.4687079216743701426395318776485510170459747314453125p-612 m -1.58291642632441753590910593629814684391021728515625p248 == -1.58291642632441753590910593629814684391021728515625p248
; [HW: -1.58291642632441753590910593629814684391021728515625p248] 

; mpf : - 2625222200382788 248
; mpfd: - 2625222200382788 248 (-7.15973e+074) class: Neg. norm. non-zero
; hwf : - 2625222200382788 248 (-7.15973e+074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011011 #b0111011111111101001111100000101011110111101100010101)))
(assert (= y (fp #b1 #b10011110111 #b1001010100111010000000101100101101011101010101000100)))
(assert (= r (fp #b1 #b10011110111 #b1001010100111010000000101100101101011101010101000100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
