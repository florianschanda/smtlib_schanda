(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.78007309189516238490114119485951960086822509765625p-480 {- 3513136885980804 -480 (-5.70217e-145)}
; Y = 1.33099421845744192438587560900487005710601806640625p-23 {+ 1490665438906724 -23 (1.58667e-007)}
; -1.78007309189516238490114119485951960086822509765625p-480 m 1.33099421845744192438587560900487005710601806640625p-23 == -1.78007309189516238490114119485951960086822509765625p-480
; [HW: -1.78007309189516238490114119485951960086822509765625p-480] 

; mpf : - 3513136885980804 -480
; mpfd: - 3513136885980804 -480 (-5.70217e-145) class: Neg. norm. non-zero
; hwf : - 3513136885980804 -480 (-5.70217e-145) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011111 #b1100011110110010110111101100001000101101111010000100)))
(assert (= y (fp #b0 #b01111101000 #b0101010010111100000010010111111101110000100101100100)))
(assert (= r (fp #b1 #b01000011111 #b1100011110110010110111101100001000101101111010000100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
