(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1739411991530730450250530338962562382221221923828125p1004 {- 783361519690157 1004 (-2.01262e+302)}
; Y = -1.7393970847112452116078884500893764197826385498046875p276 {- 3329948435184395 276 (-2.11192e+083)}
; -1.1739411991530730450250530338962562382221221923828125p1004 m -1.7393970847112452116078884500893764197826385498046875p276 == -1.1739411991530730450250530338962562382221221923828125p1004
; [HW: -1.1739411991530730450250530338962562382221221923828125p1004] 

; mpf : - 783361519690157 1004
; mpfd: - 783361519690157 1004 (-2.01262e+302) class: Neg. norm. non-zero
; hwf : - 783361519690157 1004 (-2.01262e+302) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101011 #b0010110010000111011010010001000111001010000110101101)))
(assert (= y (fp #b1 #b10100010011 #b1011110101001001001000001001100110010111101100001011)))
(assert (= r (fp #b1 #b11111101011 #b0010110010000111011010010001000111001010000110101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
