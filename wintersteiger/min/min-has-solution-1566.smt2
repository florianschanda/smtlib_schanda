(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0794031627266320594316084680031053721904754638671875p689 {- 357600054067699 689 (-2.77237e+207)}
; Y = -1.4285331592421801616410448332317173480987548828125p284 {- 1929941776278984 284 (-4.44027e+085)}
; -1.0794031627266320594316084680031053721904754638671875p689 m -1.4285331592421801616410448332317173480987548828125p284 == -1.0794031627266320594316084680031053721904754638671875p689
; [HW: -1.0794031627266320594316084680031053721904754638671875p689] 

; mpf : - 357600054067699 689
; mpfd: - 357600054067699 689 (-2.77237e+207) class: Neg. norm. non-zero
; hwf : - 357600054067699 689 (-2.77237e+207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110000 #b0001010001010011110001000000001100011100000111110011)))
(assert (= y (fp #b1 #b10100011011 #b0110110110110100010110010110000000110010010111001000)))
(assert (= r (fp #b1 #b11010110000 #b0001010001010011110001000000001100011100000111110011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
