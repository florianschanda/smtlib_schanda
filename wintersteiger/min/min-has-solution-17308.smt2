(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.889143822420960905361653203726746141910552978515625p-779 {- 4004347787333818 -779 (-5.94153e-235)}
; Y = -1.351458320594968398609125870279967784881591796875p563 {- 1582827561667760 563 (-4.08028e+169)}
; -1.889143822420960905361653203726746141910552978515625p-779 m -1.351458320594968398609125870279967784881591796875p563 == -1.351458320594968398609125870279967784881591796875p563
; [HW: -1.351458320594968398609125870279967784881591796875p563] 

; mpf : - 1582827561667760 563
; mpfd: - 1582827561667760 563 (-4.08028e+169) class: Neg. norm. non-zero
; hwf : - 1582827561667760 563 (-4.08028e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110100 #b1110001110011110111011011111011010111101000010111010)))
(assert (= y (fp #b1 #b11000110010 #b0101100111111001001011000010100011011100110010110000)))
(assert (= r (fp #b1 #b11000110010 #b0101100111111001001011000010100011011100110010110000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
