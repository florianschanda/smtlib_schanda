(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.183287806969517408361980415065772831439971923828125p69 {- 825454899169474 69 (-6.9849e+020)}
; Y = 1.932219175289919821381090514478273689746856689453125p-861 {+ 4198341930463314 -861 (1.2567e-259)}
; -1.183287806969517408361980415065772831439971923828125p69 m 1.932219175289919821381090514478273689746856689453125p-861 == -1.183287806969517408361980415065772831439971923828125p69
; [HW: -1.183287806969517408361980415065772831439971923828125p69] 

; mpf : - 825454899169474 69
; mpfd: - 825454899169474 69 (-6.9849e+020) class: Neg. norm. non-zero
; hwf : - 825454899169474 69 (-6.9849e+020) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000100 #b0010111011101011111100110010000010110000100011000010)))
(assert (= y (fp #b0 #b00010100010 #b1110111010100101111010100111011010010011000001010010)))
(assert (= r (fp #b1 #b10001000100 #b0010111011101011111100110010000010110000100011000010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
