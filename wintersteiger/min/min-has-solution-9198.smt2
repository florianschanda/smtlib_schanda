(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6492318914585599731736920148250646889209747314453125p-609 {- 2923880504449813 -609 (-7.76273e-184)}
; Y = -1.96444682401201031751725167850963771343231201171875p-25 {- 4343482357239148 -25 (-5.85451e-008)}
; -1.6492318914585599731736920148250646889209747314453125p-609 m -1.96444682401201031751725167850963771343231201171875p-25 == -1.96444682401201031751725167850963771343231201171875p-25
; [HW: -1.96444682401201031751725167850963771343231201171875p-25] 

; mpf : - 4343482357239148 -25
; mpfd: - 4343482357239148 -25 (-5.85451e-008) class: Neg. norm. non-zero
; hwf : - 4343482357239148 -25 (-5.85451e-008) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011110 #b1010011000110100000011111010110101010101101100010101)))
(assert (= y (fp #b1 #b01111100110 #b1111011011100101111111001010111111011100110101101100)))
(assert (= r (fp #b1 #b01111100110 #b1111011011100101111111001010111111011100110101101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
