(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5554779577844983773360354462056420743465423583984375p243 {+ 2501650323690791 243 (2.19863e+073)}
; Y = 1.7222329751804428266126478774822317063808441162109375p582 {+ 3252648157897327 582 (2.72615e+175)}
; 1.5554779577844983773360354462056420743465423583984375p243 m 1.7222329751804428266126478774822317063808441162109375p582 == 1.5554779577844983773360354462056420743465423583984375p243
; [HW: 1.5554779577844983773360354462056420743465423583984375p243] 

; mpf : + 2501650323690791 243
; mpfd: + 2501650323690791 243 (2.19863e+073) class: Pos. norm. non-zero
; hwf : + 2501650323690791 243 (2.19863e+073) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110010 #b1000111000110011110011011010111001010101010100100111)))
(assert (= y (fp #b0 #b11001000101 #b1011100011100100010000101010000001111110001001101111)))
(assert (= r (fp #b0 #b10011110010 #b1000111000110011110011011010111001010101010100100111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
