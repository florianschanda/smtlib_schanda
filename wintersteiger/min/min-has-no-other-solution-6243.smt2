(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.288851180659833506325639973510988056659698486328125p426 {+ 1300870069585154 426 (2.23347e+128)}
; Y = 1.780280434657978805290667878580279648303985595703125p-155 {+ 3514070674770162 -155 (3.89798e-047)}
; 1.288851180659833506325639973510988056659698486328125p426 m 1.780280434657978805290667878580279648303985595703125p-155 == 1.780280434657978805290667878580279648303985595703125p-155
; [HW: 1.780280434657978805290667878580279648303985595703125p-155] 

; mpf : + 3514070674770162 -155
; mpfd: + 3514070674770162 -155 (3.89798e-047) class: Pos. norm. non-zero
; hwf : + 3514070674770162 -155 (3.89798e-047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101001 #b0100100111110010001001101010011001011000010100000010)))
(assert (= y (fp #b0 #b01101100100 #b1100011111000000011101010110010010010000100011110010)))
(assert (= r (fp #b0 #b01101100100 #b1100011111000000011101010110010010010000100011110010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
