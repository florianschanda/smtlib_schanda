(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.817133936528553928013707263744436204433441162109375p653 {+ 3680044092061782 653 (6.79163e+196)}
; Y = -1.3400332408468773603971158081549219787120819091796875p801 {- 1531373576771579 801 (-1.78707e+241)}
; 1.817133936528553928013707263744436204433441162109375p653 m -1.3400332408468773603971158081549219787120819091796875p801 == -1.3400332408468773603971158081549219787120819091796875p801
; [HW: -1.3400332408468773603971158081549219787120819091796875p801] 

; mpf : - 1531373576771579 801
; mpfd: - 1531373576771579 801 (-1.78707e+241) class: Neg. norm. non-zero
; hwf : - 1531373576771579 801 (-1.78707e+241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010001100 #b1101000100101111101100001000110111010111100001010110)))
(assert (= y (fp #b1 #b11100100000 #b0101011100001100011010110010000011111101011111111011)))
(assert (= r (fp #b1 #b11100100000 #b0101011100001100011010110010000011111101011111111011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
