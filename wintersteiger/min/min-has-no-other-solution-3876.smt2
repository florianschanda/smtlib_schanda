(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5026318924623176531696344682131893932819366455078125p-463 {+ 2263652803597821 -463 (6.30906e-140)}
; Y = -1.3048751780413352374665691968402825295925140380859375p-9 {- 1373035738221471 -9 (-0.00254858)}
; 1.5026318924623176531696344682131893932819366455078125p-463 m -1.3048751780413352374665691968402825295925140380859375p-9 == -1.3048751780413352374665691968402825295925140380859375p-9
; [HW: -1.3048751780413352374665691968402825295925140380859375p-9] 

; mpf : - 1373035738221471 -9
; mpfd: - 1373035738221471 -9 (-0.00254858) class: Neg. norm. non-zero
; hwf : - 1373035738221471 -9 (-0.00254858) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000110000 #b1000000010101100011110111101010000001101010111111101)))
(assert (= y (fp #b1 #b01111110110 #b0100111000001100010011001011011100001100101110011111)))
(assert (= r (fp #b1 #b01111110110 #b0100111000001100010011001011011100001100101110011111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
