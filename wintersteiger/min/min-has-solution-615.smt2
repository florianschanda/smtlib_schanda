(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0366007106217460798092133700265549123287200927734375p-358 {+ 164834946717591 -358 (1.76552e-108)}
; Y = 0.151063520699410869241319232969544827938079833984375p-1022 {+ 680329615531142 -1023 (3.36127e-309)}
; 1.0366007106217460798092133700265549123287200927734375p-358 m 0.151063520699410869241319232969544827938079833984375p-1022 == 0.151063520699410869241319232969544827938079833984375p-1022
; [HW: 0.151063520699410869241319232969544827938079833984375p-1022] 

; mpf : + 680329615531142 -1023
; mpfd: + 680329615531142 -1023 (3.36127e-309) class: Pos. denorm.
; hwf : + 680329615531142 -1023 (3.36127e-309) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011001 #b0000100101011110101010100000011100100001011110010111)))
(assert (= y (fp #b0 #b00000000000 #b0010011010101100000110010101000100000101110010000110)))
(assert (= r (fp #b0 #b00000000000 #b0010011010101100000110010101000100000101110010000110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
