(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.85637813669718010345377479097805917263031005859375p144 {- 3856784257317660 144 (-4.13986e+043)}
; Y = -1.0317388082085130474041534398566000163555145263671875p881 {- 142938884821043 881 (-1.6634e+265)}
; -1.85637813669718010345377479097805917263031005859375p144 m -1.0317388082085130474041534398566000163555145263671875p881 == -1.0317388082085130474041534398566000163555145263671875p881
; [HW: -1.0317388082085130474041534398566000163555145263671875p881] 

; mpf : - 142938884821043 881
; mpfd: - 142938884821043 881 (-1.6634e+265) class: Neg. norm. non-zero
; hwf : - 142938884821043 881 (-1.6634e+265) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001111 #b1101101100111011100110001111101000011111101100011100)))
(assert (= y (fp #b1 #b11101110000 #b0000100000100000000010001101011101000101000000110011)))
(assert (= r (fp #b1 #b11101110000 #b0000100000100000000010001101011101000101000000110011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
