(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.619918094192559721022917074151337146759033203125p140 {+ 2791862898005840 140 (2.25784e+042)}
; Y = -1.0888234364519868702103622126742266118526458740234375p-176 {- 400025195306935 -176 (-1.13678e-053)}
; 1.619918094192559721022917074151337146759033203125p140 m -1.0888234364519868702103622126742266118526458740234375p-176 == -1.0888234364519868702103622126742266118526458740234375p-176
; [HW: -1.0888234364519868702103622126742266118526458740234375p-176] 

; mpf : - 400025195306935 -176
; mpfd: - 400025195306935 -176 (-1.13678e-053) class: Neg. norm. non-zero
; hwf : - 400025195306935 -176 (-1.13678e-053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001011 #b1001111010110010111100111100010011000001011101010000)))
(assert (= y (fp #b1 #b01101001111 #b0001011010111101001000011111101010101101111110110111)))
(assert (= r (fp #b1 #b01101001111 #b0001011010111101001000011111101010101101111110110111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
