(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8743232584219036152006765405531041324138641357421875p603 {+ 3937601900830243 603 (6.22203e+181)}
; Y = -1.0237399014842625266652476057060994207859039306640625p-678 {- 106915011478337 -678 (-8.16305e-205)}
; 1.8743232584219036152006765405531041324138641357421875p603 m -1.0237399014842625266652476057060994207859039306640625p-678 == -1.0237399014842625266652476057060994207859039306640625p-678
; [HW: -1.0237399014842625266652476057060994207859039306640625p-678] 

; mpf : - 106915011478337 -678
; mpfd: - 106915011478337 -678 (-8.16305e-205) class: Neg. norm. non-zero
; hwf : - 106915011478337 -678 (-8.16305e-205) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011010 #b1101111111010011101001100010100100001101111000100011)))
(assert (= y (fp #b1 #b00101011001 #b0000011000010011110100010111010001111100001101000001)))
(assert (= r (fp #b1 #b00101011001 #b0000011000010011110100010111010001111100001101000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
