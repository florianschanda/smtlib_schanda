(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.38299819550580505023162913857959210872650146484375p-613 {- 1724870530563516 -613 (-4.0685e-185)}
; Y = -1.05499161873049107640554211684502661228179931640625p900 {- 247660233623140 900 (-8.91754e+270)}
; -1.38299819550580505023162913857959210872650146484375p-613 m -1.05499161873049107640554211684502661228179931640625p900 == -1.05499161873049107640554211684502661228179931640625p900
; [HW: -1.05499161873049107640554211684502661228179931640625p900] 

; mpf : - 247660233623140 900
; mpfd: - 247660233623140 900 (-8.91754e+270) class: Neg. norm. non-zero
; hwf : - 247660233623140 900 (-8.91754e+270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011010 #b0110001000001100001010110111010000011111110110111100)))
(assert (= y (fp #b1 #b11110000011 #b0000111000010011111011100100010000000000011001100100)))
(assert (= r (fp #b1 #b11110000011 #b0000111000010011111011100100010000000000011001100100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
