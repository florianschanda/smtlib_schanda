(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0262833870823475646005817907280288636684417724609375p270 {+ 118369852270095 270 (1.947e+081)}
; Y = 1.9491582930365634052094492290052585303783416748046875p-784 {+ 4274628934835083 -784 (1.91571e-236)}
; 1.0262833870823475646005817907280288636684417724609375p270 m 1.9491582930365634052094492290052585303783416748046875p-784 == 1.9491582930365634052094492290052585303783416748046875p-784
; [HW: 1.9491582930365634052094492290052585303783416748046875p-784] 

; mpf : + 4274628934835083 -784
; mpfd: + 4274628934835083 -784 (1.91571e-236) class: Pos. norm. non-zero
; hwf : + 4274628934835083 -784 (1.91571e-236) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001101 #b0000011010111010100000100000111111110010011000001111)))
(assert (= y (fp #b0 #b00011101111 #b1111001011111100000010011011001101010001101110001011)))
(assert (= r (fp #b0 #b00011101111 #b1111001011111100000010011011001101010001101110001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
