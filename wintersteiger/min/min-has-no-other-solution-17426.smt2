(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5877955670036218993601551119354553520679473876953125p-451 {+ 2647195896527541 -451 (2.73065e-136)}
; Y = 1.175154173675478919136594413430429995059967041015625p286 {+ 788824271297274 286 (1.46108e+086)}
; 1.5877955670036218993601551119354553520679473876953125p-451 m 1.175154173675478919136594413430429995059967041015625p286 == 1.5877955670036218993601551119354553520679473876953125p-451
; [HW: 1.5877955670036218993601551119354553520679473876953125p-451] 

; mpf : + 2647195896527541 -451
; mpfd: + 2647195896527541 -451 (2.73065e-136) class: Pos. norm. non-zero
; hwf : + 2647195896527541 -451 (2.73065e-136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111100 #b1001011001111001110001010011000100000011101010110101)))
(assert (= y (fp #b0 #b10100011101 #b0010110011010110111001110110011110110001101011111010)))
(assert (= r (fp #b0 #b01000111100 #b1001011001111001110001010011000100000011101010110101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
