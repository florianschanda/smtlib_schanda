(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3529222573276216134985361350118182599544525146484375p-687 {+ 1589420546591431 -687 (2.10701e-207)}
; Y = -1.0139534915655243896281945126247592270374298095703125p-611 {- 62840939415013 -611 (-1.19314e-184)}
; 1.3529222573276216134985361350118182599544525146484375p-687 m -1.0139534915655243896281945126247592270374298095703125p-611 == -1.0139534915655243896281945126247592270374298095703125p-611
; [HW: -1.0139534915655243896281945126247592270374298095703125p-611] 

; mpf : - 62840939415013 -611
; mpfd: - 62840939415013 -611 (-1.19314e-184) class: Neg. norm. non-zero
; hwf : - 62840939415013 -611 (-1.19314e-184) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010000 #b0101101001011001000111001111000101000000101011000111)))
(assert (= y (fp #b1 #b00110011100 #b0000001110010010011101001011110111110000010111100101)))
(assert (= r (fp #b1 #b00110011100 #b0000001110010010011101001011110111110000010111100101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
