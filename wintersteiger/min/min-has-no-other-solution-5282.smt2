(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8687221510710063654414625489152967929840087890625p-367 {- 3912376755851880 -367 (-6.21636e-111)}
; Y = 1.9580344061020265034045451102429069578647613525390625p-95 {+ 4314603394329201 -95 (4.94277e-029)}
; -1.8687221510710063654414625489152967929840087890625p-367 m 1.9580344061020265034045451102429069578647613525390625p-95 == -1.8687221510710063654414625489152967929840087890625p-367
; [HW: -1.8687221510710063654414625489152967929840087890625p-367] 

; mpf : - 3912376755851880 -367
; mpfd: - 3912376755851880 -367 (-6.21636e-111) class: Neg. norm. non-zero
; hwf : - 3912376755851880 -367 (-6.21636e-111) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010000 #b1101111001100100100100110010110000101001001001101000)))
(assert (= y (fp #b0 #b01110100000 #b1111010101000001101111100010101010100110101001110001)))
(assert (= r (fp #b1 #b01010010000 #b1101111001100100100100110010110000101001001001101000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
