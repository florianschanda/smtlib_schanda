(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.91171803093481162960642905090935528278350830078125p152 {- 4106012984384980 152 (-1.0914e+046)}
; Y = -1.115221922422656941620289217098616063594818115234375p634 {- 518913406887590 634 (-7.95021e+190)}
; -1.91171803093481162960642905090935528278350830078125p152 m -1.115221922422656941620289217098616063594818115234375p634 == -1.115221922422656941620289217098616063594818115234375p634
; [HW: -1.115221922422656941620289217098616063594818115234375p634] 

; mpf : - 518913406887590 634
; mpfd: - 518913406887590 634 (-7.95021e+190) class: Neg. norm. non-zero
; hwf : - 518913406887590 634 (-7.95021e+190) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010111 #b1110100101100110010110100101011000001001110111010100)))
(assert (= y (fp #b1 #b11001111001 #b0001110101111111001011110001010010010110011010100110)))
(assert (= r (fp #b1 #b11001111001 #b0001110101111111001011110001010010010110011010100110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
