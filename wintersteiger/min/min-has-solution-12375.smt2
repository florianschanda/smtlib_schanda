(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.520086836642064564983911623130552470684051513671875p969 {+ 2342262883701502 969 (7.58463e+291)}
; Y = -1.3852998116464576572326450332184322178363800048828125p-827 {- 1735236088156909 -827 (-1.54788e-249)}
; 1.520086836642064564983911623130552470684051513671875p969 m -1.3852998116464576572326450332184322178363800048828125p-827 == -1.3852998116464576572326450332184322178363800048828125p-827
; [HW: -1.3852998116464576572326450332184322178363800048828125p-827] 

; mpf : - 1735236088156909 -827
; mpfd: - 1735236088156909 -827 (-1.54788e-249) class: Neg. norm. non-zero
; hwf : - 1735236088156909 -827 (-1.54788e-249) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111001000 #b1000010100100100011010010011001001110101001011111110)))
(assert (= y (fp #b1 #b00011000100 #b0110001010100011000000100010101000101101001011101101)))
(assert (= r (fp #b1 #b00011000100 #b0110001010100011000000100010101000101101001011101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
