(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5875107349565222847331824596039950847625732421875p528 {- 2645913127026360 528 (-1.39494e+159)}
; Y = 1.303895223760628940823380617075599730014801025390625p463 {+ 1368622416488042 463 (3.10549e+139)}
; -1.5875107349565222847331824596039950847625732421875p528 m 1.303895223760628940823380617075599730014801025390625p463 == -1.5875107349565222847331824596039950847625732421875p528
; [HW: -1.5875107349565222847331824596039950847625732421875p528] 

; mpf : - 2645913127026360 528
; mpfd: - 2645913127026360 528 (-1.39494e+159) class: Neg. norm. non-zero
; hwf : - 2645913127026360 528 (-1.39494e+159) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001111 #b1001011001100111000110101000000010101111111010111000)))
(assert (= y (fp #b0 #b10111001110 #b0100110111001100000100111100111101110110011001101010)))
(assert (= r (fp #b1 #b11000001111 #b1001011001100111000110101000000010101111111010111000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
