(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9409962274935017578769702595309354364871978759765625p650 {+ 4237870259496777 650 (9.06822e+195)}
; Y = 1.843371409607900801574942306615412235260009765625p-584 {+ 3798207166045072 -584 (2.91136e-176)}
; 1.9409962274935017578769702595309354364871978759765625p650 m 1.843371409607900801574942306615412235260009765625p-584 == 1.843371409607900801574942306615412235260009765625p-584
; [HW: 1.843371409607900801574942306615412235260009765625p-584] 

; mpf : + 3798207166045072 -584
; mpfd: + 3798207166045072 -584 (2.91136e-176) class: Pos. norm. non-zero
; hwf : + 3798207166045072 -584 (2.91136e-176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010001001 #b1111000011100101001000001111011010111110011101001001)))
(assert (= y (fp #b0 #b00110110111 #b1101011111100111001100000100111010100101101110010000)))
(assert (= r (fp #b0 #b00110110111 #b1101011111100111001100000100111010100101101110010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
