(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.581267358758284391484494335600174963474273681640625p206 {- 2617795460306442 206 (-1.62624e+062)}
; Y = 1.5422320237274629306511997128836810588836669921875p465 {+ 2441995940007352 465 (1.46926e+140)}
; -1.581267358758284391484494335600174963474273681640625p206 m 1.5422320237274629306511997128836810588836669921875p465 == -1.581267358758284391484494335600174963474273681640625p206
; [HW: -1.581267358758284391484494335600174963474273681640625p206] 

; mpf : - 2617795460306442 206
; mpfd: - 2617795460306442 206 (-1.62624e+062) class: Neg. norm. non-zero
; hwf : - 2617795460306442 206 (-1.62624e+062) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001101 #b1001010011001101111100000000100000011001011000001010)))
(assert (= y (fp #b0 #b10111010000 #b1000101011001111101101111100100011000000110110111000)))
(assert (= r (fp #b1 #b10011001101 #b1001010011001101111100000000100000011001011000001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
