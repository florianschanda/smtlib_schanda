(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.640098593039721830422195125720463693141937255859375p277 {- 2882747785094070 277 (-3.98271e+083)}
; Y = -1.07623278165685132279350000317208468914031982421875p865 {- 343321927063212 865 (-2.6476e+260)}
; -1.640098593039721830422195125720463693141937255859375p277 m -1.07623278165685132279350000317208468914031982421875p865 == -1.07623278165685132279350000317208468914031982421875p865
; [HW: -1.07623278165685132279350000317208468914031982421875p865] 

; mpf : - 343321927063212 865
; mpfd: - 343321927063212 865 (-2.6476e+260) class: Neg. norm. non-zero
; hwf : - 343321927063212 865 (-2.6476e+260) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010100 #b1010001111011101100000000101101101010010001110110110)))
(assert (= y (fp #b1 #b11101100000 #b0001001110000011111111011101100000011001011010101100)))
(assert (= r (fp #b1 #b11101100000 #b0001001110000011111111011101100000011001011010101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
