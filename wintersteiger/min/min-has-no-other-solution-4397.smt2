(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5262470368331653158833205452538095414638519287109375p-246 {- 2370005958986671 -246 (-1.34973e-074)}
; Y = -1.5191586654477731155310493704746477305889129638671875p-925 {- 2338082772256755 -925 (-5.3562e-279)}
; -1.5262470368331653158833205452538095414638519287109375p-246 m -1.5191586654477731155310493704746477305889129638671875p-925 == -1.5262470368331653158833205452538095414638519287109375p-246
; [HW: -1.5262470368331653158833205452538095414638519287109375p-246] 

; mpf : - 2370005958986671 -246
; mpfd: - 2370005958986671 -246 (-1.34973e-074) class: Neg. norm. non-zero
; hwf : - 2370005958986671 -246 (-1.34973e-074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100001001 #b1000011010111000001000000011010011010000101110101111)))
(assert (= y (fp #b1 #b00001100010 #b1000010011100111100101010001000110001000011111110011)))
(assert (= r (fp #b1 #b01100001001 #b1000011010111000001000000011010011010000101110101111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
