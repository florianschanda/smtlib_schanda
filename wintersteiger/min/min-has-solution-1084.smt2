(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.34810471308577550786367282853461802005767822265625p707 {+ 1567724256139012 707 (9.07675e+212)}
; Y = 1.9674891454565539561372133903205394744873046875p-108 {+ 4357183754963136 -108 (6.06279e-033)}
; 1.34810471308577550786367282853461802005767822265625p707 m 1.9674891454565539561372133903205394744873046875p-108 == 1.9674891454565539561372133903205394744873046875p-108
; [HW: 1.9674891454565539561372133903205394744873046875p-108] 

; mpf : + 4357183754963136 -108
; mpfd: + 4357183754963136 -108 (6.06279e-033) class: Pos. norm. non-zero
; hwf : + 4357183754963136 -108 (6.06279e-033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000010 #b0101100100011101011000111111011001001001011100000100)))
(assert (= y (fp #b0 #b01110010011 #b1111011110101101010111100101111011111000100011000000)))
(assert (= r (fp #b0 #b01110010011 #b1111011110101101010111100101111011111000100011000000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
