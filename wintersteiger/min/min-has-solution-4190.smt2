(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1352999882021570510204355741734616458415985107421875p-413 {+ 609336976450467 -413 (5.36689e-125)}
; Y = 1.8149145106128974358483674222952686250209808349609375p193 {+ 3670048686335055 193 (2.27848e+058)}
; 1.1352999882021570510204355741734616458415985107421875p-413 m 1.8149145106128974358483674222952686250209808349609375p193 == 1.1352999882021570510204355741734616458415985107421875p-413
; [HW: 1.1352999882021570510204355741734616458415985107421875p-413] 

; mpf : + 609336976450467 -413
; mpfd: + 609336976450467 -413 (5.36689e-125) class: Pos. norm. non-zero
; hwf : + 609336976450467 -413 (5.36689e-125) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100010 #b0010001010100011000001010010000001111010001110100011)))
(assert (= y (fp #b0 #b10011000000 #b1101000010011110001111001100010000011110010001001111)))
(assert (= r (fp #b0 #b01001100010 #b0010001010100011000001010010000001111010001110100011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
