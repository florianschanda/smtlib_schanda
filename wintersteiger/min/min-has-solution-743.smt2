(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.74503955833930746166515746153891086578369140625p361 {- 3355359877313184 361 (-8.1966e+108)}
; Y = 1.298754994007051077886671919259242713451385498046875p-656 {+ 1345472879685230 -656 (4.3436e-198)}
; -1.74503955833930746166515746153891086578369140625p361 m 1.298754994007051077886671919259242713451385498046875p-656 == -1.74503955833930746166515746153891086578369140625p361
; [HW: -1.74503955833930746166515746153891086578369140625p361] 

; mpf : - 3355359877313184 361
; mpfd: - 3355359877313184 361 (-8.1966e+108) class: Neg. norm. non-zero
; hwf : - 3355359877313184 361 (-8.1966e+108) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101000 #b1011111010111010111010011001100101001011001010100000)))
(assert (= y (fp #b0 #b00101101111 #b0100110001111011001101010001000011000110111001101110)))
(assert (= r (fp #b1 #b10101101000 #b1011111010111010111010011001100101001011001010100000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
