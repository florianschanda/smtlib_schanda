(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1164496238897483326724113794625736773014068603515625p-617 {- 524442482757305 -617 (-2.05273e-186)}
; Y = -0.260738537709302331535354824154637753963470458984375p-1022 {- 1174261981268742 -1023 (-5.80163e-309)}
; -1.1164496238897483326724113794625736773014068603515625p-617 m -0.260738537709302331535354824154637753963470458984375p-1022 == -1.1164496238897483326724113794625736773014068603515625p-617
; [HW: -1.1164496238897483326724113794625736773014068603515625p-617] 

; mpf : - 524442482757305 -617
; mpfd: - 524442482757305 -617 (-2.05273e-186) class: Neg. norm. non-zero
; hwf : - 524442482757305 -617 (-2.05273e-186) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110010110 #b0001110111001111101001000111111000111100111010111001)))
(assert (= y (fp #b1 #b00000000000 #b0100001010111111110000101100010001000100101100000110)))
(assert (= r (fp #b1 #b00110010110 #b0001110111001111101001000111111000111100111010111001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
