(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8215842981729297722637284095981158316135406494140625p-255 {+ 3700086739105057 -255 (3.1463e-077)}
; Y = -1.5131247896105097794361427077092230319976806640625p564 {- 2310908611284456 564 (-9.13676e+169)}
; 1.8215842981729297722637284095981158316135406494140625p-255 m -1.5131247896105097794361427077092230319976806640625p564 == -1.5131247896105097794361427077092230319976806640625p564
; [HW: -1.5131247896105097794361427077092230319976806640625p564] 

; mpf : - 2310908611284456 564
; mpfd: - 2310908611284456 564 (-9.13676e+169) class: Neg. norm. non-zero
; hwf : - 2310908611284456 564 (-9.13676e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000000 #b1101001001010011010110010011101110001111010100100001)))
(assert (= y (fp #b1 #b11000110011 #b1000001101011100001001010110111000100100110111101000)))
(assert (= r (fp #b1 #b11000110011 #b1000001101011100001001010110111000100100110111101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
