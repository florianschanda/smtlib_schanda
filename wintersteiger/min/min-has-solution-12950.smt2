(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.302762606357221297770365708856843411922454833984375p-259 {- 1363521561172102 -259 (-1.40636e-078)}
; Y = -1.180872015386661200153639583732001483440399169921875p58 {- 814575141097118 58 (-3.40363e+017)}
; -1.302762606357221297770365708856843411922454833984375p-259 m -1.180872015386661200153639583732001483440399169921875p58 == -1.180872015386661200153639583732001483440399169921875p58
; [HW: -1.180872015386661200153639583732001483440399169921875p58] 

; mpf : - 814575141097118 58
; mpfd: - 814575141097118 58 (-3.40363e+017) class: Neg. norm. non-zero
; hwf : - 814575141097118 58 (-3.40363e+017) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111100 #b0100110110000001110110011010010011000001100010000110)))
(assert (= y (fp #b1 #b10000111001 #b0010111001001101101000001101111011011000111010011110)))
(assert (= r (fp #b1 #b10000111001 #b0010111001001101101000001101111011011000111010011110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
