(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0314550891893385919928505245479755103588104248046875p534 {+ 141661127952011 534 (5.80053e+160)}
; Y = 1.622267371641019195749322534538805484771728515625p-1022 {+ 2802443103047312 -1022 (3.60966e-308)}
; 1.0314550891893385919928505245479755103588104248046875p534 m 1.622267371641019195749322534538805484771728515625p-1022 == 1.622267371641019195749322534538805484771728515625p-1022
; [HW: 1.622267371641019195749322534538805484771728515625p-1022] 

; mpf : + 2802443103047312 -1022
; mpfd: + 2802443103047312 -1022 (3.60966e-308) class: Pos. norm. non-zero
; hwf : + 2802443103047312 -1022 (3.60966e-308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010101 #b0000100000001101011100001101001101011100011010001011)))
(assert (= y (fp #b0 #b00000000001 #b1001111101001100111010100001101010010000111010010000)))
(assert (= r (fp #b0 #b00000000001 #b1001111101001100111010100001101010010000111010010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
