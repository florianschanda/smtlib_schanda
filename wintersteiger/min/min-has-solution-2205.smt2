(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4728000556793825470691672308021225035190582275390625p811 {- 2129302154578417 811 (-2.01127e+244)}
; Y = 1.9195561456451233350861684812116436660289764404296875p202 {+ 4141312714873627 202 (1.23384e+061)}
; -1.4728000556793825470691672308021225035190582275390625p811 m 1.9195561456451233350861684812116436660289764404296875p202 == -1.4728000556793825470691672308021225035190582275390625p811
; [HW: -1.4728000556793825470691672308021225035190582275390625p811] 

; mpf : - 2129302154578417 811
; mpfd: - 2129302154578417 811 (-2.01127e+244) class: Neg. norm. non-zero
; hwf : - 2129302154578417 811 (-2.01127e+244) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101010 #b0111100100001001011011001010100010110000100111110001)))
(assert (= y (fp #b0 #b10011001001 #b1110101101101000000010000001010001100001101100011011)))
(assert (= r (fp #b1 #b11100101010 #b0111100100001001011011001010100010110000100111110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
