(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4179901142655528811786780352122150361537933349609375p460 {- 1882460122850895 460 (-4.22154e+138)}
; Y = 1.9514168267526297295688664235058240592479705810546875p555 {+ 4284800466437163 555 (2.30143e+167)}
; -1.4179901142655528811786780352122150361537933349609375p460 m 1.9514168267526297295688664235058240592479705810546875p555 == -1.4179901142655528811786780352122150361537933349609375p460
; [HW: -1.4179901142655528811786780352122150361537933349609375p460] 

; mpf : - 1882460122850895 460
; mpfd: - 1882460122850895 460 (-4.22154e+138) class: Neg. norm. non-zero
; hwf : - 1882460122850895 460 (-4.22154e+138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111001011 #b0110101100000001011001100110111011010010011001001111)))
(assert (= y (fp #b0 #b11000101010 #b1111001110010000000011011001101111000100010000101011)))
(assert (= r (fp #b1 #b10111001011 #b0110101100000001011001100110111011010010011001001111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
