(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.19631094140301730277542446856386959552764892578125p219 {- 884105882551380 219 (-1.00789e+066)}
; Y = 1.9477957172217503778455238716560415923595428466796875p892 {+ 4268492438903227 892 (6.43131e+268)}
; -1.19631094140301730277542446856386959552764892578125p219 m 1.9477957172217503778455238716560415923595428466796875p892 == -1.19631094140301730277542446856386959552764892578125p219
; [HW: -1.19631094140301730277542446856386959552764892578125p219] 

; mpf : - 884105882551380 219
; mpfd: - 884105882551380 219 (-1.00789e+066) class: Neg. norm. non-zero
; hwf : - 884105882551380 219 (-1.00789e+066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011010 #b0011001001000001011011110001000100101100010001010100)))
(assert (= y (fp #b0 #b11101111011 #b1111001010100010101111010111100011000001100110111011)))
(assert (= r (fp #b1 #b10011011010 #b0011001001000001011011110001000100101100010001010100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
