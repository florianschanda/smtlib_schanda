(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.155967591649937897813060772023163735866546630859375p-580 {- 702415587636534 -580 (-2.92111e-175)}
; Y = 1.9215526653756029862307741495897062122821807861328125p495 {+ 4150304240387853 495 (1.96562e+149)}
; -1.155967591649937897813060772023163735866546630859375p-580 m 1.9215526653756029862307741495897062122821807861328125p495 == -1.155967591649937897813060772023163735866546630859375p-580
; [HW: -1.155967591649937897813060772023163735866546630859375p-580] 

; mpf : - 702415587636534 -580
; mpfd: - 702415587636534 -580 (-2.92111e-175) class: Neg. norm. non-zero
; hwf : - 702415587636534 -580 (-2.92111e-175) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110111011 #b0010011111101101011111011111100101011111010100110110)))
(assert (= y (fp #b0 #b10111101110 #b1110101111101010111000000001111101010100011100001101)))
(assert (= r (fp #b1 #b00110111011 #b0010011111101101011111011111100101011111010100110110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
