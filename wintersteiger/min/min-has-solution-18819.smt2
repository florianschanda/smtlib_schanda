(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8344904756566824399754978003329597413539886474609375p-341 {+ 3758210995211663 -341 (4.09531e-103)}
; Y = -1.8665003762684502230939642686280421912670135498046875p-399 {- 3902370771678987 -399 (-1.44564e-120)}
; 1.8344904756566824399754978003329597413539886474609375p-341 m -1.8665003762684502230939642686280421912670135498046875p-399 == -1.8665003762684502230939642686280421912670135498046875p-399
; [HW: -1.8665003762684502230939642686280421912670135498046875p-399] 

; mpf : - 3902370771678987 -399
; mpfd: - 3902370771678987 -399 (-1.44564e-120) class: Neg. norm. non-zero
; hwf : - 3902370771678987 -399 (-1.44564e-120) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101010 #b1101010110100001001010101111010111000100110110001111)))
(assert (= y (fp #b1 #b01001110000 #b1101110111010010111101111111101000001011011100001011)))
(assert (= r (fp #b1 #b01001110000 #b1101110111010010111101111111101000001011011100001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
