(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.988479949051565665030238960753194987773895263671875p713 {- 4451717930211838 713 (-8.56857e+214)}
; Y = 1.230663184502647222728910492151044309139251708984375p-103 {+ 1038814631774214 -103 (1.21353e-031)}
; -1.988479949051565665030238960753194987773895263671875p713 m 1.230663184502647222728910492151044309139251708984375p-103 == -1.988479949051565665030238960753194987773895263671875p713
; [HW: -1.988479949051565665030238960753194987773895263671875p713] 

; mpf : - 4451717930211838 713
; mpfd: - 4451717930211838 713 (-8.56857e+214) class: Neg. norm. non-zero
; hwf : - 4451717930211838 713 (-8.56857e+214) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001000 #b1111110100001101000001011001110111101101100111111110)))
(assert (= y (fp #b0 #b01110011000 #b0011101100001100101111100001000111010100100000000110)))
(assert (= r (fp #b1 #b11011001000 #b1111110100001101000001011001110111101101100111111110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
