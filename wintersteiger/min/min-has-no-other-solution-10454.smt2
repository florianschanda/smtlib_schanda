(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9682503045723789281140625462285242974758148193359375p92 {- 4360611710873535 92 (-9.7463e+027)}
; Y = 1.466496139357267747271862390334717929363250732421875p839 {+ 2100911839379166 839 (5.37585e+252)}
; -1.9682503045723789281140625462285242974758148193359375p92 m 1.466496139357267747271862390334717929363250732421875p839 == -1.9682503045723789281140625462285242974758148193359375p92
; [HW: -1.9682503045723789281140625462285242974758148193359375p92] 

; mpf : - 4360611710873535 92
; mpfd: - 4360611710873535 92 (-9.7463e+027) class: Neg. norm. non-zero
; hwf : - 4360611710873535 92 (-9.7463e+027) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001011011 #b1111011111011111010000001000000001111010111110111111)))
(assert (= y (fp #b0 #b11101000110 #b0111011101101100010010100111111000111111111011011110)))
(assert (= r (fp #b1 #b10001011011 #b1111011111011111010000001000000001111010111110111111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
