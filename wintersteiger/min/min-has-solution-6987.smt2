(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9012371087668153979421958865714259445667266845703125p-224 {- 4058811107214693 -224 (-7.05208e-068)}
; Y = -1.8542584248019224890668965599616058170795440673828125p177 {- 3847237923616045 177 (-3.55205e+053)}
; -1.9012371087668153979421958865714259445667266845703125p-224 m -1.8542584248019224890668965599616058170795440673828125p177 == -1.8542584248019224890668965599616058170795440673828125p177
; [HW: -1.8542584248019224890668965599616058170795440673828125p177] 

; mpf : - 3847237923616045 177
; mpfd: - 3847237923616045 177 (-3.55205e+053) class: Neg. norm. non-zero
; hwf : - 3847237923616045 177 (-3.55205e+053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011111 #b1110011010110111011110011010010000011000010101100101)))
(assert (= y (fp #b1 #b10010110000 #b1101101010110000101011100001110011011011010100101101)))
(assert (= r (fp #b1 #b10010110000 #b1101101010110000101011100001110011011011010100101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
