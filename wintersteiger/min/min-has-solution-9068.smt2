(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2282941911617772934306458409992046654224395751953125p566 {- 1028145634247029 566 (-2.96674e+170)}
; Y = -1.122356083752691358057518300483934581279754638671875p506 {- 551042813195134 506 (-2.3513e+152)}
; -1.2282941911617772934306458409992046654224395751953125p566 m -1.122356083752691358057518300483934581279754638671875p506 == -1.2282941911617772934306458409992046654224395751953125p566
; [HW: -1.2282941911617772934306458409992046654224395751953125p566] 

; mpf : - 1028145634247029 566
; mpfd: - 1028145634247029 566 (-2.96674e+170) class: Neg. norm. non-zero
; hwf : - 1028145634247029 566 (-2.96674e+170) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110101 #b0011101001110001011111001111010011101000000101110101)))
(assert (= y (fp #b1 #b10111111001 #b0001111101010010101110100111001000101111001101111110)))
(assert (= r (fp #b1 #b11000110101 #b0011101001110001011111001111010011101000000101110101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
