(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.430151590523892846107401055633090436458587646484375p838 {- 1937230542796230 838 (-2.62131e+252)}
; Y = 1.7533396348860674773817436289391480386257171630859375p736 {+ 3392740098956319 736 (6.33786e+221)}
; -1.430151590523892846107401055633090436458587646484375p838 m 1.7533396348860674773817436289391480386257171630859375p736 == -1.430151590523892846107401055633090436458587646484375p838
; [HW: -1.430151590523892846107401055633090436458587646484375p838] 

; mpf : - 1937230542796230 838
; mpfd: - 1937230542796230 838 (-2.62131e+252) class: Neg. norm. non-zero
; hwf : - 1937230542796230 838 (-2.62131e+252) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000101 #b0110111000011110011010100010010110011111010111000110)))
(assert (= y (fp #b0 #b11011011111 #b1100000011011010110111011100011010011101110000011111)))
(assert (= r (fp #b1 #b11101000101 #b0110111000011110011010100010010110011111010111000110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
