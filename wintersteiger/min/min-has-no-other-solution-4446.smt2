(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.541211076763624010510511652682907879352569580078125p-898 {+ 2437398003641442 -898 (7.29333e-271)}
; Y = -0.1738029796105251545412784253130666911602020263671875p-1022 {- 782739034209843 -1023 (-3.86724e-309)}
; 1.541211076763624010510511652682907879352569580078125p-898 m -0.1738029796105251545412784253130666911602020263671875p-1022 == -0.1738029796105251545412784253130666911602020263671875p-1022
; [HW: -0.1738029796105251545412784253130666911602020263671875p-1022] 

; mpf : - 782739034209843 -1023
; mpfd: - 782739034209843 -1023 (-3.86724e-309) class: Neg. denorm.
; hwf : - 782739034209843 -1023 (-3.86724e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001111101 #b1000101010001100110011110010001011101110110001100010)))
(assert (= y (fp #b1 #b00000000000 #b0010110001111110010110100010000101011111111000110011)))
(assert (= r (fp #b1 #b00000000000 #b0010110001111110010110100010000101011111111000110011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
