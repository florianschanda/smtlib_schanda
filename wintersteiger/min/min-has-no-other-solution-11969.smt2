(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.151631466610797627225792894023470580577850341796875p436 {+ 682887416526030 436 (2.04358e+131)}
; Y = 1.9995327814121426346360976822325028479099273681640625p132 {+ 4501495461912321 132 (1.08865e+040)}
; 1.151631466610797627225792894023470580577850341796875p436 m 1.9995327814121426346360976822325028479099273681640625p132 == 1.9995327814121426346360976822325028479099273681640625p132
; [HW: 1.9995327814121426346360976822325028479099273681640625p132] 

; mpf : + 4501495461912321 132
; mpfd: + 4501495461912321 132 (1.08865e+040) class: Pos. norm. non-zero
; hwf : + 4501495461912321 132 (1.08865e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110011 #b0010011011010001010100011101111000100011010011001110)))
(assert (= y (fp #b0 #b10010000011 #b1111111111100001011000010101111101110001111100000001)))
(assert (= r (fp #b0 #b10010000011 #b1111111111100001011000010101111101110001111100000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
