(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3257857481935075849577287954161874949932098388671875p-107 {+ 1467208574166899 -107 (8.17079e-033)}
; Y = 1.3363360066014944305123890444519929587841033935546875p419 {+ 1514722714001771 419 (1.80919e+126)}
; 1.3257857481935075849577287954161874949932098388671875p-107 m 1.3363360066014944305123890444519929587841033935546875p419 == 1.3257857481935075849577287954161874949932098388671875p-107
; [HW: 1.3257857481935075849577287954161874949932098388671875p-107] 

; mpf : + 1467208574166899 -107
; mpfd: + 1467208574166899 -107 (8.17079e-033) class: Pos. norm. non-zero
; hwf : + 1467208574166899 -107 (8.17079e-033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010100 #b0101001101100110101100011101110111111110011101110011)))
(assert (= y (fp #b0 #b10110100010 #b0101011000011010000111011101010011010010000101101011)))
(assert (= r (fp #b0 #b01110010100 #b0101001101100110101100011101110111111110011101110011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
