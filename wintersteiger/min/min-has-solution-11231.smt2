(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.318186613011468555356486831442452967166900634765625p-85 {+ 1432985111792730 -85 (3.40743e-026)}
; Y = 1.3560149644825496562106081910314969718456268310546875p661 {+ 1603348861381931 661 (1.29745e+199)}
; 1.318186613011468555356486831442452967166900634765625p-85 m 1.3560149644825496562106081910314969718456268310546875p661 == 1.318186613011468555356486831442452967166900634765625p-85
; [HW: 1.318186613011468555356486831442452967166900634765625p-85] 

; mpf : + 1432985111792730 -85
; mpfd: + 1432985111792730 -85 (3.40743e-026) class: Pos. norm. non-zero
; hwf : + 1432985111792730 -85 (3.40743e-026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110101010 #b0101000101110100101011011000100011101000110001011010)))
(assert (= y (fp #b0 #b11010010100 #b0101101100100011110010111111010101010110110100101011)))
(assert (= r (fp #b0 #b01110101010 #b0101000101110100101011011000100011101000110001011010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
