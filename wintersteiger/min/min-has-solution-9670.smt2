(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7277154988015619441199532957398332655429840087890625p837 {+ 3277339249234449 837 (1.58336e+252)}
; Y = 1.7844056393635308044309795150184072554111480712890625p-458 {+ 3532648945144913 -458 (2.39748e-138)}
; 1.7277154988015619441199532957398332655429840087890625p837 m 1.7844056393635308044309795150184072554111480712890625p-458 == 1.7844056393635308044309795150184072554111480712890625p-458
; [HW: 1.7844056393635308044309795150184072554111480712890625p-458] 

; mpf : + 3532648945144913 -458
; mpfd: + 3532648945144913 -458 (2.39748e-138) class: Pos. norm. non-zero
; hwf : + 3532648945144913 -458 (2.39748e-138) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000100 #b1011101001001011100100000001110000100101001000010001)))
(assert (= y (fp #b0 #b01000110101 #b1100100011001110110011101101011111011101010001010001)))
(assert (= r (fp #b0 #b01000110101 #b1100100011001110110011101101011111011101010001010001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
