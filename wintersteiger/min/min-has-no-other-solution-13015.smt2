(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8288520162937740298758626522612757980823516845703125p998 {- 3732817631725925 998 (-4.89908e+300)}
; Y = -1.837463211384557038030607145628891885280609130859375p-827 {- 3771599006727990 -827 (-2.05311e-249)}
; -1.8288520162937740298758626522612757980823516845703125p998 m -1.837463211384557038030607145628891885280609130859375p-827 == -1.8288520162937740298758626522612757980823516845703125p998
; [HW: -1.8288520162937740298758626522612757980823516845703125p998] 

; mpf : - 3732817631725925 998
; mpfd: - 3732817631725925 998 (-4.89908e+300) class: Neg. norm. non-zero
; hwf : - 3732817631725925 998 (-4.89908e+300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100101 #b1101010000101111101001010100111100110100100101100101)))
(assert (= y (fp #b1 #b00011000100 #b1101011001100011111111010011000001111111111100110110)))
(assert (= r (fp #b1 #b11111100101 #b1101010000101111101001010100111100110100100101100101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
