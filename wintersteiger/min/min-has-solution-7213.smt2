(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.39600131431985463592582163983024656772613525390625p419 {+ 1783431371609124 419 (1.88997e+126)}
; Y = -1.302232690008337190334941624314524233341217041015625p-304 {- 1361135030100730 -304 (-3.99549e-092)}
; 1.39600131431985463592582163983024656772613525390625p419 m -1.302232690008337190334941624314524233341217041015625p-304 == -1.302232690008337190334941624314524233341217041015625p-304
; [HW: -1.302232690008337190334941624314524233341217041015625p-304] 

; mpf : - 1361135030100730 -304
; mpfd: - 1361135030100730 -304 (-3.99549e-092) class: Neg. norm. non-zero
; hwf : - 1361135030100730 -304 (-3.99549e-092) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100010 #b0110010101100000010101111001011000101101010000100100)))
(assert (= y (fp #b1 #b01011001111 #b0100110101011111000111110001111101011110001011111010)))
(assert (= r (fp #b1 #b01011001111 #b0100110101011111000111110001111101011110001011111010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
