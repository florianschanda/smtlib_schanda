(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8137403665574314270969580320524983108043670654296875p-758 {+ 3664760811604379 -758 (1.1963e-228)}
; Y = -1.4162289221603046041053630688111297786235809326171875p-807 {- 1874528418741971 -807 (-1.65931e-243)}
; 1.8137403665574314270969580320524983108043670654296875p-758 m -1.4162289221603046041053630688111297786235809326171875p-807 == -1.4162289221603046041053630688111297786235809326171875p-807
; [HW: -1.4162289221603046041053630688111297786235809326171875p-807] 

; mpf : - 1874528418741971 -807
; mpfd: - 1874528418741971 -807 (-1.65931e-243) class: Neg. norm. non-zero
; hwf : - 1874528418741971 -807 (-1.65931e-243) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001001 #b1101000001010001010010011110010111001100100110011011)))
(assert (= y (fp #b1 #b00011011000 #b0110101010001101111110101000100001010011111011010011)))
(assert (= r (fp #b1 #b00011011000 #b0110101010001101111110101000100001010011111011010011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
