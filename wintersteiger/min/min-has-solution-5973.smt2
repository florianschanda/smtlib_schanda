(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.443592558131945313704136424348689615726470947265625p439 {- 1997763279507354 439 (-2.04933e+132)}
; Y = -1.7759696993094975514537736671627499163150787353515625p994 {- 3494656848661049 994 (-2.97339e+299)}
; -1.443592558131945313704136424348689615726470947265625p439 m -1.7759696993094975514537736671627499163150787353515625p994 == -1.7759696993094975514537736671627499163150787353515625p994
; [HW: -1.7759696993094975514537736671627499163150787353515625p994] 

; mpf : - 3494656848661049 994
; mpfd: - 3494656848661049 994 (-2.97339e+299) class: Neg. norm. non-zero
; hwf : - 3494656848661049 994 (-2.97339e+299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110110110 #b0111000110001111010010000010100111101100111110011010)))
(assert (= y (fp #b1 #b11111100001 #b1100011010100101111100110100000100111000101000111001)))
(assert (= r (fp #b1 #b11111100001 #b1100011010100101111100110100000100111000101000111001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
