(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0260887717604187940878546214662492275238037109375p991 {+ 117493382778776 991 (2.14739e+298)}
; Y = 1.1492821113095075258314636812428943812847137451171875p643 {+ 672306860866579 643 (4.19483e+193)}
; 1.0260887717604187940878546214662492275238037109375p991 m 1.1492821113095075258314636812428943812847137451171875p643 == 1.1492821113095075258314636812428943812847137451171875p643
; [HW: 1.1492821113095075258314636812428943812847137451171875p643] 

; mpf : + 672306860866579 643
; mpfd: + 672306860866579 643 (4.19483e+193) class: Pos. norm. non-zero
; hwf : + 672306860866579 643 (4.19483e+193) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011110 #b0000011010101101110000001111010110000000111110011000)))
(assert (= y (fp #b0 #b11010000010 #b0010011000110111010110100011100111110011110000010011)))
(assert (= r (fp #b0 #b11010000010 #b0010011000110111010110100011100111110011110000010011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
