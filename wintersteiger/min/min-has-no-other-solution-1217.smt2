(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.899809246600490997280985538964159786701202392578125p951 {- 4052380587694498 951 (-3.61606e+286)}
; Y = -1.89509761876298288285624948912300169467926025390625p-46 {- 4031161302321188 -46 (-2.6931e-014)}
; -1.899809246600490997280985538964159786701202392578125p951 m -1.89509761876298288285624948912300169467926025390625p-46 == -1.899809246600490997280985538964159786701202392578125p951
; [HW: -1.899809246600490997280985538964159786701202392578125p951] 

; mpf : - 4052380587694498 951
; mpfd: - 4052380587694498 951 (-3.61606e+286) class: Neg. norm. non-zero
; hwf : - 4052380587694498 951 (-3.61606e+286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110110 #b1110011001011001111001100001011011001001100110100010)))
(assert (= y (fp #b1 #b01111010001 #b1110010100100101000111100001011101010000100000100100)))
(assert (= r (fp #b1 #b11110110110 #b1110011001011001111001100001011011001001100110100010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
