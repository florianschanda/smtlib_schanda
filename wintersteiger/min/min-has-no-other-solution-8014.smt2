(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8300624171003045947969667395227588713169097900390625p-163 {+ 3738268792347185 -163 (1.56522e-049)}
; Y = -1.81674942168289721422524962690658867359161376953125p443 {- 3678312391146164 443 (-4.12651e+133)}
; 1.8300624171003045947969667395227588713169097900390625p-163 m -1.81674942168289721422524962690658867359161376953125p443 == -1.81674942168289721422524962690658867359161376953125p443
; [HW: -1.81674942168289721422524962690658867359161376953125p443] 

; mpf : - 3678312391146164 443
; mpfd: - 3678312391146164 443 (-4.12651e+133) class: Neg. norm. non-zero
; hwf : - 3678312391146164 443 (-4.12651e+133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101011100 #b1101010001111110111110000111011100010101101000110001)))
(assert (= y (fp #b1 #b10110111010 #b1101000100010110011111010111011100100111101010110100)))
(assert (= r (fp #b1 #b10110111010 #b1101000100010110011111010111011100100111101010110100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
