(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.893238799690738716208215919323265552520751953125p848 {+ 4022789925440080 848 (3.55338e+255)}
; Y = 1.542209430005148984577090232050977647304534912109375p-68 {+ 2441894186927958 -68 (5.22521e-021)}
; 1.893238799690738716208215919323265552520751953125p848 m 1.542209430005148984577090232050977647304534912109375p-68 == 1.542209430005148984577090232050977647304534912109375p-68
; [HW: 1.542209430005148984577090232050977647304534912109375p-68] 

; mpf : + 2441894186927958 -68
; mpfd: + 2441894186927958 -68 (5.22521e-021) class: Pos. norm. non-zero
; hwf : + 2441894186927958 -68 (5.22521e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001111 #b1110010010101011010011000100100000110000101001010000)))
(assert (= y (fp #b0 #b01110111011 #b1000101011001110001111001011100101110100011101010110)))
(assert (= r (fp #b0 #b01110111011 #b1000101011001110001111001011100101110100011101010110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
