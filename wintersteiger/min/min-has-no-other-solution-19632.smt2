(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9747862725770091163468578088213689625263214111328125p-704 {+ 4390047093943693 -704 (2.34641e-212)}
; Y = -1.0356393035726652041006445870152674615383148193359375p767 {- 160505154289599 767 (-8.03924e+230)}
; 1.9747862725770091163468578088213689625263214111328125p-704 m -1.0356393035726652041006445870152674615383148193359375p767 == -1.0356393035726652041006445870152674615383148193359375p767
; [HW: -1.0356393035726652041006445870152674615383148193359375p767] 

; mpf : - 160505154289599 767
; mpfd: - 160505154289599 767 (-8.03924e+230) class: Neg. norm. non-zero
; hwf : - 160505154289599 767 (-8.03924e+230) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111111 #b1111100110001011100101111101100101001110110110001101)))
(assert (= y (fp #b1 #b11011111110 #b0000100100011111101010000100101101001011111110111111)))
(assert (= r (fp #b1 #b11011111110 #b0000100100011111101010000100101101001011111110111111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
