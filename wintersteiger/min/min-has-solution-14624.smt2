(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.142849965365414721674142128904350101947784423828125p-916 {+ 643339050789570 -916 (2.06307e-276)}
; Y = 1.0029367919733929159775698281009681522846221923828125p-606 {+ 13226135237037 -606 (3.77656e-183)}
; 1.142849965365414721674142128904350101947784423828125p-916 m 1.0029367919733929159775698281009681522846221923828125p-606 == 1.142849965365414721674142128904350101947784423828125p-916
; [HW: 1.142849965365414721674142128904350101947784423828125p-916] 

; mpf : + 643339050789570 -916
; mpfd: + 643339050789570 -916 (2.06307e-276) class: Pos. norm. non-zero
; hwf : + 643339050789570 -916 (2.06307e-276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101011 #b0010010010010001110100001011100101111010101011000010)))
(assert (= y (fp #b0 #b00110100001 #b0000000011000000011101110011000101111011000110101101)))
(assert (= r (fp #b0 #b00001101011 #b0010010010010001110100001011100101111010101011000010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
