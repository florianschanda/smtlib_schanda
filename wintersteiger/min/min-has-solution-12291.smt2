(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.249477431955689166187539740349166095256805419921875p-993 {- 1123546469592990 -993 (-1.4926e-299)}
; Y = -1.305575296971037690951789045357145369052886962890625p216 {- 1376188793572394 216 (-1.37493e+065)}
; -1.249477431955689166187539740349166095256805419921875p-993 m -1.305575296971037690951789045357145369052886962890625p216 == -1.305575296971037690951789045357145369052886962890625p216
; [HW: -1.305575296971037690951789045357145369052886962890625p216] 

; mpf : - 1376188793572394 216
; mpfd: - 1376188793572394 216 (-1.37493e+065) class: Neg. norm. non-zero
; hwf : - 1376188793572394 216 (-1.37493e+065) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011110 #b0011111111011101110000001100001101010110111110011110)))
(assert (= y (fp #b1 #b10011010111 #b0100111000111010001011101100001011110100110000101010)))
(assert (= r (fp #b1 #b10011010111 #b0100111000111010001011101100001011110100110000101010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
