(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4980276994369414733654366500559262931346893310546875p131 {- 2242917361604395 131 (-4.07802e+039)}
; Y = -1.6873704641826539063487189196166582405567169189453125p-42 {- 3095641366358485 -42 (-3.83664e-013)}
; -1.4980276994369414733654366500559262931346893310546875p131 m -1.6873704641826539063487189196166582405567169189453125p-42 == -1.4980276994369414733654366500559262931346893310546875p131
; [HW: -1.4980276994369414733654366500559262931346893310546875p131] 

; mpf : - 2242917361604395 131
; mpfd: - 2242917361604395 131 (-4.07802e+039) class: Neg. norm. non-zero
; hwf : - 2242917361604395 131 (-4.07802e+039) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000010 #b0111111101111110101111100100100110010101011100101011)))
(assert (= y (fp #b1 #b01111010101 #b1010111111110111100000101011111111100110100111010101)))
(assert (= r (fp #b1 #b10010000010 #b0111111101111110101111100100100110010101011100101011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
