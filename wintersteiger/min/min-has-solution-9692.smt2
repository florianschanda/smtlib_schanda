(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.15566533698802942353722755797207355499267578125p362 {- 701054353653792 362 (-1.08565e+109)}
; Y = -1.8859680584623570442914797240518964827060699462890625p-746 {- 3990045417953233 -746 (-5.09516e-225)}
; -1.15566533698802942353722755797207355499267578125p362 m -1.8859680584623570442914797240518964827060699462890625p-746 == -1.15566533698802942353722755797207355499267578125p362
; [HW: -1.15566533698802942353722755797207355499267578125p362] 

; mpf : - 701054353653792 362
; mpfd: - 701054353653792 362 (-1.08565e+109) class: Neg. norm. non-zero
; hwf : - 701054353653792 362 (-1.08565e+109) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101001 #b0010011111011001101011101111101101111100000000100000)))
(assert (= y (fp #b1 #b00100010101 #b1110001011001110110011010111110001100101011111010001)))
(assert (= r (fp #b1 #b10101101001 #b0010011111011001101011101111101101111100000000100000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
