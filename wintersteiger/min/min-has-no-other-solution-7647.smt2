(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.936926310728293909591002375236712396144866943359375p563 {- 4219540983869558 563 (-5.84791e+169)}
; Y = -1.5210407116416033712624766849330626428127288818359375p723 {- 2346558754793983 723 (-6.71163e+217)}
; -1.936926310728293909591002375236712396144866943359375p563 m -1.5210407116416033712624766849330626428127288818359375p723 == -1.5210407116416033712624766849330626428127288818359375p723
; [HW: -1.5210407116416033712624766849330626428127288818359375p723] 

; mpf : - 2346558754793983 723
; mpfd: - 2346558754793983 723 (-6.71163e+217) class: Neg. norm. non-zero
; hwf : - 2346558754793983 723 (-6.71163e+217) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110010 #b1110111111011010011001110001011101010111000001110110)))
(assert (= y (fp #b1 #b11011010010 #b1000010101100010111011001001000001100010100111111111)))
(assert (= r (fp #b1 #b11011010010 #b1000010101100010111011001001000001100010100111111111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
