(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7164038748828229774545661712181754410266876220703125p-125 {+ 3226396223969061 -125 (4.03525e-038)}
; Y = -1.724271575950718560221730513148941099643707275390625p-222 {- 3261829199566698 -222 (-2.55827e-067)}
; 1.7164038748828229774545661712181754410266876220703125p-125 m -1.724271575950718560221730513148941099643707275390625p-222 == -1.724271575950718560221730513148941099643707275390625p-222
; [HW: -1.724271575950718560221730513148941099643707275390625p-222] 

; mpf : - 3261829199566698 -222
; mpfd: - 3261829199566698 -222 (-2.55827e-067) class: Neg. norm. non-zero
; hwf : - 3261829199566698 -222 (-2.55827e-067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110000010 #b1011011101100110001111101000110101011001011100100101)))
(assert (= y (fp #b1 #b01100100001 #b1011100101101001110111001010110000100001011101101010)))
(assert (= r (fp #b1 #b01100100001 #b1011100101101001110111001010110000100001011101101010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
