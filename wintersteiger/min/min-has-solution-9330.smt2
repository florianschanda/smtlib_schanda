(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2535110949855836626198879457660950720310211181640625p31 {- 1141712472911361 31 (-2.69189e+009)}
; Y = -1.7112421850374690546203737540054135024547576904296875p-933 {- 3203150039504923 -933 (-2.35682e-281)}
; -1.2535110949855836626198879457660950720310211181640625p31 m -1.7112421850374690546203737540054135024547576904296875p-933 == -1.2535110949855836626198879457660950720310211181640625p31
; [HW: -1.2535110949855836626198879457660950720310211181640625p31] 

; mpf : - 1141712472911361 31
; mpfd: - 1141712472911361 31 (-2.69189e+009) class: Neg. norm. non-zero
; hwf : - 1141712472911361 31 (-2.69189e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011110 #b0100000011100110000110100110011000100010111000000001)))
(assert (= y (fp #b1 #b00001011010 #b1011011000010011111101111100010001000101100000011011)))
(assert (= r (fp #b1 #b10000011110 #b0100000011100110000110100110011000100010111000000001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
