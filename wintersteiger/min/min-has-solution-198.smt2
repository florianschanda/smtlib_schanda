(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.653719214086636579708056160598061978816986083984375p256 {- 2944089608965510 256 (-1.91488e+077)}
; Y = 1.315252167114085324328698334284126758575439453125p-19 {+ 1419769542342736 -19 (2.50864e-006)}
; -1.653719214086636579708056160598061978816986083984375p256 m 1.315252167114085324328698334284126758575439453125p-19 == -1.653719214086636579708056160598061978816986083984375p256
; [HW: -1.653719214086636579708056160598061978816986083984375p256] 

; mpf : - 2944089608965510 256
; mpfd: - 2944089608965510 256 (-1.91488e+077) class: Neg. norm. non-zero
; hwf : - 2944089608965510 256 (-1.91488e+077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011111111 #b1010011101011010001001000111010101000100110110000110)))
(assert (= y (fp #b0 #b01111101100 #b0101000010110100010111011011001110111111100001010000)))
(assert (= r (fp #b1 #b10011111111 #b1010011101011010001001000111010101000100110110000110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
