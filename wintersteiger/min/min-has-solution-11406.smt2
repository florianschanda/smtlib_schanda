(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0094729191768483378410792283830232918262481689453125p712 {+ 42662235274965 712 (2.17496e+214)}
; Y = 1.7479864569182279598891227578860707581043243408203125p-1002 {+ 3368631528655109 -1002 (4.07833e-302)}
; 1.0094729191768483378410792283830232918262481689453125p712 m 1.7479864569182279598891227578860707581043243408203125p-1002 == 1.7479864569182279598891227578860707581043243408203125p-1002
; [HW: 1.7479864569182279598891227578860707581043243408203125p-1002] 

; mpf : + 3368631528655109 -1002
; mpfd: + 3368631528655109 -1002 (4.07833e-302) class: Pos. norm. non-zero
; hwf : + 3368631528655109 -1002 (4.07833e-302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000111 #b0000001001101100110100010011011000001111111011010101)))
(assert (= y (fp #b0 #b00000010101 #b1011111101111100000010100101101001010000100100000101)))
(assert (= r (fp #b0 #b00000010101 #b1011111101111100000010100101101001010000100100000101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
