(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3199042614727989342071623468655161559581756591796875p561 {+ 1440720712763131 561 (9.96254e+168)}
; Y = -1.74277965681687785348685792996548116207122802734375p406 {- 3345182185658876 406 (-2.88019e+122)}
; 1.3199042614727989342071623468655161559581756591796875p561 m -1.74277965681687785348685792996548116207122802734375p406 == -1.74277965681687785348685792996548116207122802734375p406
; [HW: -1.74277965681687785348685792996548116207122802734375p406] 

; mpf : - 3345182185658876 406
; mpfd: - 3345182185658876 406 (-2.88019e+122) class: Neg. norm. non-zero
; hwf : - 3345182185658876 406 (-2.88019e+122) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110000 #b0101000111100101001111101110010011100000011011111011)))
(assert (= y (fp #b1 #b10110010101 #b1011111000100110110011101011111000101001100111111100)))
(assert (= r (fp #b1 #b10110010101 #b1011111000100110110011101011111000101001100111111100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
