(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.970248294455625881482774275355041027069091796875p1002 {- 4369609857367216 1002 (-8.44455e+301)}
; Y = 1.403650075006293906909604629618115723133087158203125p641 {+ 1817878327386418 641 (1.28081e+193)}
; -1.970248294455625881482774275355041027069091796875p1002 m 1.403650075006293906909604629618115723133087158203125p641 == -1.970248294455625881482774275355041027069091796875p1002
; [HW: -1.970248294455625881482774275355041027069091796875p1002] 

; mpf : - 4369609857367216 1002
; mpfd: - 4369609857367216 1002 (-8.44455e+301) class: Neg. norm. non-zero
; hwf : - 4369609857367216 1002 (-8.44455e+301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101001 #b1111100001100010001100010011010110101111110010110000)))
(assert (= y (fp #b0 #b11010000000 #b0110011101010101100111000111111100101110000100110010)))
(assert (= r (fp #b1 #b11111101001 #b1111100001100010001100010011010110101111110010110000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
