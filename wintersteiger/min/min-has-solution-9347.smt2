(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.263460472466573225602815000456757843494415283203125p880 {- 1186520485627314 880 (-1.01849e+265)}
; Y = -1.3902635861956016416485226727672852575778961181640625p-807 {- 1757590941366785 -807 (-1.62889e-243)}
; -1.263460472466573225602815000456757843494415283203125p880 m -1.3902635861956016416485226727672852575778961181640625p-807 == -1.263460472466573225602815000456757843494415283203125p880
; [HW: -1.263460472466573225602815000456757843494415283203125p880] 

; mpf : - 1186520485627314 880
; mpfd: - 1186520485627314 880 (-1.01849e+265) class: Neg. norm. non-zero
; hwf : - 1186520485627314 880 (-1.01849e+265) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101111 #b0100001101110010001001010100000100001000010110110010)))
(assert (= y (fp #b1 #b00011011000 #b0110001111101000010100000111101110000111101000000001)))
(assert (= r (fp #b1 #b11101101111 #b0100001101110010001001010100000100001000010110110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
