(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.801665102758133851779120959690771996974945068359375p-594 {- 3610378658057462 -594 (-2.7788e-179)}
; Y = 0.5506675508111953387668791037867777049541473388671875p-1022 {+ 2479986176638323 -1023 (1.22528e-308)}
; -1.801665102758133851779120959690771996974945068359375p-594 m 0.5506675508111953387668791037867777049541473388671875p-1022 == -1.801665102758133851779120959690771996974945068359375p-594
; [HW: -1.801665102758133851779120959690771996974945068359375p-594] 

; mpf : - 3610378658057462 -594
; mpfd: - 3610378658057462 -594 (-2.7788e-179) class: Neg. norm. non-zero
; hwf : - 3610378658057462 -594 (-2.7788e-179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110101101 #b1100110100111001111011001001011010110000110011110110)))
(assert (= y (fp #b0 #b00000000000 #b1000110011111000100011000111000110110011110101110011)))
(assert (= r (fp #b1 #b00110101101 #b1100110100111001111011001001011010110000110011110110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
