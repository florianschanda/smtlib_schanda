(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7102064044441920298567083591478876769542694091796875p-152 {+ 3198485298411003 -152 (2.99564e-046)}
; Y = 1.8758147382640137923459633384482003748416900634765625p334 {+ 3944318928891401 334 (6.5646e+100)}
; 1.7102064044441920298567083591478876769542694091796875p-152 m 1.8758147382640137923459633384482003748416900634765625p334 == 1.7102064044441920298567083591478876769542694091796875p-152
; [HW: 1.7102064044441920298567083591478876769542694091796875p-152] 

; mpf : + 3198485298411003 -152
; mpfd: + 3198485298411003 -152 (2.99564e-046) class: Pos. norm. non-zero
; hwf : + 3198485298411003 -152 (2.99564e-046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100111 #b1011010111010000000101100100000001111111010111111011)))
(assert (= y (fp #b0 #b10101001101 #b1110000000110101011001010000101000110010111000001001)))
(assert (= r (fp #b0 #b01101100111 #b1011010111010000000101100100000001111111010111111011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
