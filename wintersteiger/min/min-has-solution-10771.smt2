(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.46413153910301208071587097947485744953155517578125p-47 {+ 2090262626555220 -47 (1.04033e-014)}
; Y = 1.8570287549990098785457348640193231403827667236328125p863 {+ 3859714381659341 863 (1.1421e+260)}
; 1.46413153910301208071587097947485744953155517578125p-47 m 1.8570287549990098785457348640193231403827667236328125p863 == 1.46413153910301208071587097947485744953155517578125p-47
; [HW: 1.46413153910301208071587097947485744953155517578125p-47] 

; mpf : + 2090262626555220 -47
; mpfd: + 2090262626555220 -47 (1.04033e-014) class: Pos. norm. non-zero
; hwf : + 2090262626555220 -47 (1.04033e-014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010000 #b0111011011010001010100110001010101111101010101010100)))
(assert (= y (fp #b0 #b11101011110 #b1101101101100110001111001000101001110011110011001101)))
(assert (= r (fp #b0 #b01111010000 #b0111011011010001010100110001010101111101010101010100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
