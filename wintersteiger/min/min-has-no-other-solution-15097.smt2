(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.31455018576771376359602072625420987606048583984375p176 {+ 1416608099412796 176 (1.25909e+053)}
; Y = 1.7991930365221253662610934043186716735363006591796875p956 {+ 3599245461478139 956 (1.09586e+288)}
; 1.31455018576771376359602072625420987606048583984375p176 m 1.7991930365221253662610934043186716735363006591796875p956 == 1.31455018576771376359602072625420987606048583984375p176
; [HW: 1.31455018576771376359602072625420987606048583984375p176] 

; mpf : + 1416608099412796 176
; mpfd: + 1416608099412796 176 (1.25909e+053) class: Pos. norm. non-zero
; hwf : + 1416608099412796 176 (1.25909e+053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010101111 #b0101000010000110010111000110100011010010101100111100)))
(assert (= y (fp #b0 #b11110111011 #b1100110010010111111010100011001100001101101011111011)))
(assert (= r (fp #b0 #b10010101111 #b0101000010000110010111000110100011010010101100111100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
