(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.279213028818432018596240595798008143901824951171875p-753 {- 1257463692543678 -753 (-2.69995e-227)}
; Y = -1.6227266916980556121785639334120787680149078369140625p-204 {- 2804511696685025 -204 (-6.31141e-062)}
; -1.279213028818432018596240595798008143901824951171875p-753 m -1.6227266916980556121785639334120787680149078369140625p-204 == -1.6227266916980556121785639334120787680149078369140625p-204
; [HW: -1.6227266916980556121785639334120787680149078369140625p-204] 

; mpf : - 2804511696685025 -204
; mpfd: - 2804511696685025 -204 (-6.31141e-062) class: Neg. norm. non-zero
; hwf : - 2804511696685025 -204 (-6.31141e-062) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001110 #b0100011101111010100000010100101101100100011010111110)))
(assert (= y (fp #b1 #b01100110011 #b1001111101101011000001000011011100110000011111100001)))
(assert (= r (fp #b1 #b01100110011 #b1001111101101011000001000011011100110000011111100001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
