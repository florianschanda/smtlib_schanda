(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.686282543516465892707856255583465099334716796875p264 {+ 3090741807251632 264 (4.99861e+079)}
; Y = -1.425503928664735742160019071889109909534454345703125p179 {- 1916299334579186 179 (-1.09229e+054)}
; 1.686282543516465892707856255583465099334716796875p264 m -1.425503928664735742160019071889109909534454345703125p179 == -1.425503928664735742160019071889109909534454345703125p179
; [HW: -1.425503928664735742160019071889109909534454345703125p179] 

; mpf : - 1916299334579186 179
; mpfd: - 1916299334579186 179 (-1.09229e+054) class: Neg. norm. non-zero
; hwf : - 1916299334579186 179 (-1.09229e+054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100000111 #b1010111110110000001101100111100000111000000010110000)))
(assert (= y (fp #b1 #b10010110010 #b0110110011101101110100110101000111101111001111110010)))
(assert (= r (fp #b1 #b10010110010 #b0110110011101101110100110101000111101111001111110010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
