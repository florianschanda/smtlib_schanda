(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6360552801785814835966448299586772918701171875p664 {- 2864538322799296 664 (-1.25232e+200)}
; Y = 1.529830264948497831056783979875035583972930908203125p591 {+ 2386143383791666 591 (1.23985e+178)}
; -1.6360552801785814835966448299586772918701171875p664 m 1.529830264948497831056783979875035583972930908203125p591 == -1.6360552801785814835966448299586772918701171875p664
; [HW: -1.6360552801785814835966448299586772918701171875p664] 

; mpf : - 2864538322799296 664
; mpfd: - 2864538322799296 664 (-1.25232e+200) class: Neg. norm. non-zero
; hwf : - 2864538322799296 664 (-1.25232e+200) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010010111 #b1010001011010100100001001101001011010000101011000000)))
(assert (= y (fp #b0 #b11001001110 #b1000011110100010111101001100110001100010100000110010)))
(assert (= r (fp #b1 #b11010010111 #b1010001011010100100001001101001011010000101011000000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
