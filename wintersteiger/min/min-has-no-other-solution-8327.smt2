(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.211409555307834562398738853516988456249237060546875p-537 {+ 952103994506926 -537 (2.69267e-162)}
; Y = 1.966997733764841438386383742908947169780731201171875p835 {+ 4354970633451454 835 (4.50661e+251)}
; 1.211409555307834562398738853516988456249237060546875p-537 m 1.966997733764841438386383742908947169780731201171875p835 == 1.211409555307834562398738853516988456249237060546875p-537
; [HW: 1.211409555307834562398738853516988456249237060546875p-537] 

; mpf : + 952103994506926 -537
; mpfd: + 952103994506926 -537 (2.69267e-162) class: Pos. norm. non-zero
; hwf : + 952103994506926 -537 (2.69267e-162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100110 #b0011011000011110111011111100011000011011111010101110)))
(assert (= y (fp #b0 #b11101000010 #b1111011110001101001010011101100111010011011110111110)))
(assert (= r (fp #b0 #b00111100110 #b0011011000011110111011111100011000011011111010101110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
