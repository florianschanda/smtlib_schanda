(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3728149974604166860814302708604373037815093994140625p14 {+ 1679009483640865 14 (22492.2)}
; Y = 1.7407277652093426922874641604721546173095703125p471 {+ 3335941287379776 471 (1.06135e+142)}
; 1.3728149974604166860814302708604373037815093994140625p14 m 1.7407277652093426922874641604721546173095703125p471 == 1.3728149974604166860814302708604373037815093994140625p14
; [HW: 1.3728149974604166860814302708604373037815093994140625p14] 

; mpf : + 1679009483640865 14
; mpfd: + 1679009483640865 14 (22492.2) class: Pos. norm. non-zero
; hwf : + 1679009483640865 14 (22492.2) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001101 #b0101111101110000110011011011110110001101000000100001)))
(assert (= y (fp #b0 #b10111010110 #b1011110110100000010101011011011011010000001101000000)))
(assert (= r (fp #b0 #b10000001101 #b0101111101110000110011011011110110001101000000100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
