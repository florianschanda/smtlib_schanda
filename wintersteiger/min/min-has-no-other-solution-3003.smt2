(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.163092287976283056849524655262939631938934326171875p-1005 {- 734502367356990 -1005 (-3.3921e-303)}
; Y = -1.2834345552057297989989592679194174706935882568359375p22 {- 1276475757208447 22 (-5.38311e+006)}
; -1.163092287976283056849524655262939631938934326171875p-1005 m -1.2834345552057297989989592679194174706935882568359375p22 == -1.2834345552057297989989592679194174706935882568359375p22
; [HW: -1.2834345552057297989989592679194174706935882568359375p22] 

; mpf : - 1276475757208447 22
; mpfd: - 1276475757208447 22 (-5.38311e+006) class: Neg. norm. non-zero
; hwf : - 1276475757208447 22 (-5.38311e+006) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000010010 #b0010100111000000011010101000101100010110100000111110)))
(assert (= y (fp #b1 #b10000010101 #b0100100010001111001010101100000100101010001101111111)))
(assert (= r (fp #b1 #b10000010101 #b0100100010001111001010101100000100101010001101111111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
