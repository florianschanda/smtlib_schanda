(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.147605570809279829092020008829422295093536376953125p-983 {+ 664756393694482 -983 (1.40381e-296)}
; Y = -1.2519700956906907318710864274180494248867034912109375p-559 {- 1134772429061103 -559 (-6.63478e-169)}
; 1.147605570809279829092020008829422295093536376953125p-983 m -1.2519700956906907318710864274180494248867034912109375p-559 == -1.2519700956906907318710864274180494248867034912109375p-559
; [HW: -1.2519700956906907318710864274180494248867034912109375p-559] 

; mpf : - 1134772429061103 -559
; mpfd: - 1134772429061103 -559 (-6.63478e-169) class: Neg. norm. non-zero
; hwf : - 1134772429061103 -559 (-6.63478e-169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000101000 #b0010010111001001011110101000101101010101010100010010)))
(assert (= y (fp #b1 #b00111010000 #b0100000010000001000111001011100010001111101111101111)))
(assert (= r (fp #b1 #b00111010000 #b0100000010000001000111001011100010001111101111101111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
