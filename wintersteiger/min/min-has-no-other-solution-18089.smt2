(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.186166130680182728696081539965234696865081787109375p788 {- 838417716760278 788 (-1.931e+237)}
; Y = 1.921427154211419630058799157268367707729339599609375p371 {+ 4149738988355606 371 (9.24171e+111)}
; -1.186166130680182728696081539965234696865081787109375p788 m 1.921427154211419630058799157268367707729339599609375p371 == -1.186166130680182728696081539965234696865081787109375p788
; [HW: -1.186166130680182728696081539965234696865081787109375p788] 

; mpf : - 838417716760278 788
; mpfd: - 838417716760278 788 (-1.931e+237) class: Neg. norm. non-zero
; hwf : - 838417716760278 788 (-1.931e+237) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010011 #b0010111110101000100101010110001011100100111011010110)))
(assert (= y (fp #b0 #b10101110010 #b1110101111100010101001100110010011111100000000010110)))
(assert (= r (fp #b1 #b11100010011 #b0010111110101000100101010110001011100100111011010110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
