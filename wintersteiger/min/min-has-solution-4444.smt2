(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6053589968080326233490495724254287779331207275390625p926 {- 2726294552450033 926 (-9.10643e+278)}
; Y = -1.1468334753080855481499611414619721472263336181640625p1002 {- 661279184683009 1002 (-4.91537e+301)}
; -1.6053589968080326233490495724254287779331207275390625p926 m -1.1468334753080855481499611414619721472263336181640625p1002 == -1.1468334753080855481499611414619721472263336181640625p1002
; [HW: -1.1468334753080855481499611414619721472263336181640625p1002] 

; mpf : - 661279184683009 1002
; mpfd: - 661279184683009 1002 (-4.91537e+301) class: Neg. norm. non-zero
; hwf : - 661279184683009 1002 (-4.91537e+301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011101 #b1001101011111000110011101010010110100001001111110001)))
(assert (= y (fp #b1 #b11111101001 #b0010010110010110111000001110111001101000000000000001)))
(assert (= r (fp #b1 #b11111101001 #b0010010110010110111000001110111001101000000000000001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
