(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1065484379054790764485005638562142848968505859375p-409 {- 479851505248024 -409 (-8.36955e-124)}
; Y = -1.3286042635107033760277772671543061733245849609375p228 {- 1479902038699160 228 (-5.73106e+068)}
; -1.1065484379054790764485005638562142848968505859375p-409 m -1.3286042635107033760277772671543061733245849609375p228 == -1.3286042635107033760277772671543061733245849609375p228
; [HW: -1.3286042635107033760277772671543061733245849609375p228] 

; mpf : - 1479902038699160 228
; mpfd: - 1479902038699160 228 (-5.73106e+068) class: Neg. norm. non-zero
; hwf : - 1479902038699160 228 (-5.73106e+068) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100110 #b0001101101000110110000100010100000111110011100011000)))
(assert (= y (fp #b1 #b10011100011 #b0101010000011111011010001011010100011010110010011000)))
(assert (= r (fp #b1 #b10011100011 #b0101010000011111011010001011010100011010110010011000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
