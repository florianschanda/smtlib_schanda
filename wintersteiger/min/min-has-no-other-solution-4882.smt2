(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0762614527822227383779818410403095185756683349609375p-612 {- 343451050332751 -612 (-6.33228e-185)}
; Y = -1.593381616493787955590732963173650205135345458984375p1023 {- 2672353226929926 1023 (-1.43221e+308)}
; -1.0762614527822227383779818410403095185756683349609375p-612 m -1.593381616493787955590732963173650205135345458984375p1023 == -1.593381616493787955590732963173650205135345458984375p1023
; [HW: -1.593381616493787955590732963173650205135345458984375p1023] 

; mpf : - 2672353226929926 1023
; mpfd: - 2672353226929926 1023 (-1.43221e+308) class: Neg. norm. non-zero
; hwf : - 2672353226929926 1023 (-1.43221e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011011 #b0001001110000101110111101101110110100101001001001111)))
(assert (= y (fp #b1 #b11111111110 #b1001011111100111110110111000110011100011011100000110)))
(assert (= r (fp #b1 #b11111111110 #b1001011111100111110110111000110011100011011100000110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
