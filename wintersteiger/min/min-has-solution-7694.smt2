(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.86991562201831840184240718372166156768798828125p-601 {+ 3917751671165472 -601 (2.25317e-181)}
; Y = -1.0473838777482260553597370744682848453521728515625p-104 {- 213398014170280 -104 (-5.164e-032)}
; 1.86991562201831840184240718372166156768798828125p-601 m -1.0473838777482260553597370744682848453521728515625p-104 == -1.0473838777482260553597370744682848453521728515625p-104
; [HW: -1.0473838777482260553597370744682848453521728515625p-104] 

; mpf : - 213398014170280 -104
; mpfd: - 213398014170280 -104 (-5.164e-032) class: Neg. norm. non-zero
; hwf : - 213398014170280 -104 (-5.164e-032) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100110 #b1101111010110010110010100100101011011001001000100000)))
(assert (= y (fp #b1 #b01110010111 #b0000110000100001010110011000110101001001010010101000)))
(assert (= r (fp #b1 #b01110010111 #b0000110000100001010110011000110101001001010010101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
