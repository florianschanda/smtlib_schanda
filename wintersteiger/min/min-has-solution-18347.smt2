(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7064456511186982812233736694906838238239288330078125p817 {- 3181548371135677 817 (-1.49142e+246)}
; Y = -1.14779919543256081482240915647707879543304443359375p-72 {- 665628401475740 -72 (-2.43056e-022)}
; -1.7064456511186982812233736694906838238239288330078125p817 m -1.14779919543256081482240915647707879543304443359375p-72 == -1.7064456511186982812233736694906838238239288330078125p817
; [HW: -1.7064456511186982812233736694906838238239288330078125p817] 

; mpf : - 3181548371135677 817
; mpfd: - 3181548371135677 817 (-1.49142e+246) class: Neg. norm. non-zero
; hwf : - 3181548371135677 817 (-1.49142e+246) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110000 #b1011010011011001100111110100011111110100110010111101)))
(assert (= y (fp #b1 #b01110110111 #b0010010111010110001010110000011011000010000010011100)))
(assert (= r (fp #b1 #b11100110000 #b1011010011011001100111110100011111110100110010111101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
