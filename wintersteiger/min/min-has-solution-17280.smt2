(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2186110124885385364024159571272321045398712158203125p-232 {+ 984536474382469 -232 (1.76566e-070)}
; Y = 1.174311745544093898985238411114551126956939697265625p731 {+ 785030312278682 731 (1.32651e+220)}
; 1.2186110124885385364024159571272321045398712158203125p-232 m 1.174311745544093898985238411114551126956939697265625p731 == 1.2186110124885385364024159571272321045398712158203125p-232
; [HW: 1.2186110124885385364024159571272321045398712158203125p-232] 

; mpf : + 984536474382469 -232
; mpfd: + 984536474382469 -232 (1.76566e-070) class: Pos. norm. non-zero
; hwf : + 984536474382469 -232 (1.76566e-070) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100010111 #b0011011111110110111001000010110100101111000010000101)))
(assert (= y (fp #b0 #b11011011010 #b0010110010011111101100011100111001101011101010011010)))
(assert (= r (fp #b0 #b01100010111 #b0011011111110110111001000010110100101111000010000101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
