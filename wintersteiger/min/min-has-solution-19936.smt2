(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.377838663521554707358518498949706554412841796875p347 {+ 1701634064241840 347 (3.95009e+104)}
; Y = 1.817821187592910892050213078618980944156646728515625p-878 {+ 3683139195699130 -878 (9.02018e-265)}
; 1.377838663521554707358518498949706554412841796875p347 m 1.817821187592910892050213078618980944156646728515625p-878 == 1.817821187592910892050213078618980944156646728515625p-878
; [HW: 1.817821187592910892050213078618980944156646728515625p-878] 

; mpf : + 3683139195699130 -878
; mpfd: + 3683139195699130 -878 (9.02018e-265) class: Pos. norm. non-zero
; hwf : + 3683139195699130 -878 (9.02018e-265) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101011010 #b0110000010111010000010001101111011111101010010110000)))
(assert (= y (fp #b0 #b00010010001 #b1101000101011100101110101011011010101111111110111010)))
(assert (= r (fp #b0 #b00010010001 #b1101000101011100101110101011011010101111111110111010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
