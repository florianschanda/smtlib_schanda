(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2288501652118972717886435930267907679080963134765625p-224 {- 1030649518771977 -224 (-4.55806e-068)}
; Y = -1.4820607038615907224965440036612562835216522216796875p123 {- 2171008406281019 123 (-1.576e+037)}
; -1.2288501652118972717886435930267907679080963134765625p-224 m -1.4820607038615907224965440036612562835216522216796875p123 == -1.4820607038615907224965440036612562835216522216796875p123
; [HW: -1.4820607038615907224965440036612562835216522216796875p123] 

; mpf : - 2171008406281019 123
; mpfd: - 2171008406281019 123 (-1.576e+037) class: Neg. norm. non-zero
; hwf : - 2171008406281019 123 (-1.576e+037) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011111 #b0011101010010101111011001010011101000100111100001001)))
(assert (= y (fp #b1 #b10001111010 #b0111101101101000010101001000110111000101101100111011)))
(assert (= r (fp #b1 #b10001111010 #b0111101101101000010101001000110111000101101100111011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
