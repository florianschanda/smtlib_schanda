(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.442591323303991313053984413272701203823089599609375p363 {- 1993254118709270 363 (-2.71039e+109)}
; Y = 1.294767632196522466614396762452088296413421630859375p-452 {+ 1327515398521142 -452 (1.11336e-136)}
; -1.442591323303991313053984413272701203823089599609375p363 m 1.294767632196522466614396762452088296413421630859375p-452 == -1.442591323303991313053984413272701203823089599609375p363
; [HW: -1.442591323303991313053984413272701203823089599609375p363] 

; mpf : - 1993254118709270 363
; mpfd: - 1993254118709270 363 (-2.71039e+109) class: Neg. norm. non-zero
; hwf : - 1993254118709270 363 (-2.71039e+109) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101010 #b0111000101001101101010100011101100010101100000010110)))
(assert (= y (fp #b0 #b01000111011 #b0100101101110101111001000011110000110100000100110110)))
(assert (= r (fp #b1 #b10101101010 #b0111000101001101101010100011101100010101100000010110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
