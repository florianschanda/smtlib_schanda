(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5160595444850166746419972696457989513874053955078125p-314 {- 2324125572243709 -314 (-4.54253e-095)}
; Y = 1.063978279016783989874284088728018105030059814453125p-335 {+ 288132553539794 -335 (1.52014e-101)}
; -1.5160595444850166746419972696457989513874053955078125p-314 m 1.063978279016783989874284088728018105030059814453125p-335 == -1.5160595444850166746419972696457989513874053955078125p-314
; [HW: -1.5160595444850166746419972696457989513874053955078125p-314] 

; mpf : - 2324125572243709 -314
; mpfd: - 2324125572243709 -314 (-4.54253e-095) class: Neg. norm. non-zero
; hwf : - 2324125572243709 -314 (-4.54253e-095) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000101 #b1000010000011100011110100111001001011010000011111101)))
(assert (= y (fp #b0 #b01010110000 #b0001000001100000111000010110100000001000000011010010)))
(assert (= r (fp #b1 #b01011000101 #b1000010000011100011110100111001001011010000011111101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
