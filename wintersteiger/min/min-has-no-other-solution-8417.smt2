(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4798708740858492749481456485227681696414947509765625p-641 {+ 2161146289718985 -641 (1.6218e-193)}
; Y = 1.446698041617116903267969973967410624027252197265625p-941 {+ 2011749133773978 -941 (7.78309e-284)}
; 1.4798708740858492749481456485227681696414947509765625p-641 m 1.446698041617116903267969973967410624027252197265625p-941 == 1.446698041617116903267969973967410624027252197265625p-941
; [HW: 1.446698041617116903267969973967410624027252197265625p-941] 

; mpf : + 2011749133773978 -941
; mpfd: + 2011749133773978 -941 (7.78309e-284) class: Pos. norm. non-zero
; hwf : + 2011749133773978 -941 (7.78309e-284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111110 #b0111101011011000110100010100111010000000011011001001)))
(assert (= y (fp #b0 #b00001010010 #b0111001001011010110011011000011111101110110010011010)))
(assert (= r (fp #b0 #b00001010010 #b0111001001011010110011011000011111101110110010011010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
