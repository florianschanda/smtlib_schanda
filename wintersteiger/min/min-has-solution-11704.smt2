(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7958071265142236949685639046947471797466278076171875p992 {+ 3583996678428243 992 (7.5165e+298)}
; Y = 1.20698331933939595472793371300213038921356201171875p-925 {+ 932169999848812 -925 (4.25555e-279)}
; 1.7958071265142236949685639046947471797466278076171875p992 m 1.20698331933939595472793371300213038921356201171875p-925 == 1.20698331933939595472793371300213038921356201171875p-925
; [HW: 1.20698331933939595472793371300213038921356201171875p-925] 

; mpf : + 932169999848812 -925
; mpfd: + 932169999848812 -925 (4.25555e-279) class: Pos. norm. non-zero
; hwf : + 932169999848812 -925 (4.25555e-279) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011111 #b1100101110111010000001000000111001001101011001010011)))
(assert (= y (fp #b0 #b00001100010 #b0011010011111100110110111101101101100001010101101100)))
(assert (= r (fp #b0 #b00001100010 #b0011010011111100110110111101101101100001010101101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
