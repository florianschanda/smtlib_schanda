(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.560161073923409968955411386559717357158660888671875p-978 {- 2522741203788926 -978 (-6.10708e-295)}
; Y = 1.8805280995000173138720356291742064058780670166015625p250 {+ 3965546020797529 250 (3.40235e+075)}
; -1.560161073923409968955411386559717357158660888671875p-978 m 1.8805280995000173138720356291742064058780670166015625p250 == -1.560161073923409968955411386559717357158660888671875p-978
; [HW: -1.560161073923409968955411386559717357158660888671875p-978] 

; mpf : - 2522741203788926 -978
; mpfd: - 2522741203788926 -978 (-6.10708e-295) class: Neg. norm. non-zero
; hwf : - 2522741203788926 -978 (-6.10708e-295) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101101 #b1000111101100110101101110101010011111110010001111110)))
(assert (= y (fp #b0 #b10011111001 #b1110000101101010010010100001111010001111110001011001)))
(assert (= r (fp #b1 #b00000101101 #b1000111101100110101101110101010011111110010001111110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
