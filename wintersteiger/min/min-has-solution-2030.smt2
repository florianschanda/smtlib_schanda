(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2559185483570376451467609513201750814914703369140625p-152 {- 1152554679017953 -152 (-2.1999e-046)}
; Y = 1.5827512743821141594224854998174123466014862060546875p798 {+ 2624478422156971 798 (2.63845e+240)}
; -1.2559185483570376451467609513201750814914703369140625p-152 m 1.5827512743821141594224854998174123466014862060546875p798 == -1.2559185483570376451467609513201750814914703369140625p-152
; [HW: -1.2559185483570376451467609513201750814914703369140625p-152] 

; mpf : - 1152554679017953 -152
; mpfd: - 1152554679017953 -152 (-2.1999e-046) class: Neg. norm. non-zero
; hwf : - 1152554679017953 -152 (-2.1999e-046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100111 #b0100000110000011111000001100001110100010000111100001)))
(assert (= y (fp #b0 #b11100011101 #b1001010100101111001100000000000100101100011010101011)))
(assert (= r (fp #b1 #b01101100111 #b0100000110000011111000001100001110100010000111100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
