(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0092756436965204525080253006308339536190032958984375p-809 {+ 41773785495271 -809 (2.95626e-244)}
; Y = 1.9712057257839366020135685175773687660694122314453125p-122 {+ 4373921744740629 -122 (3.70743e-037)}
; 1.0092756436965204525080253006308339536190032958984375p-809 m 1.9712057257839366020135685175773687660694122314453125p-122 == 1.0092756436965204525080253006308339536190032958984375p-809
; [HW: 1.0092756436965204525080253006308339536190032958984375p-809] 

; mpf : + 41773785495271 -809
; mpfd: + 41773785495271 -809 (2.95626e-244) class: Pos. norm. non-zero
; hwf : + 41773785495271 -809 (2.95626e-244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010110 #b0000001001011111111000110111101001010011011011100111)))
(assert (= y (fp #b0 #b01110000101 #b1111100010100000111100000011110111101110000100010101)))
(assert (= r (fp #b0 #b00011010110 #b0000001001011111111000110111101001010011011011100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
