(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4292505071998495846941068521118722856044769287109375p487 {- 1933172424273839 487 (-5.71105e+146)}
; Y = 1.85090807289491721121521550230681896209716796875p329 {+ 3832149280016096 329 (2.0242e+099)}
; -1.4292505071998495846941068521118722856044769287109375p487 m 1.85090807289491721121521550230681896209716796875p329 == -1.4292505071998495846941068521118722856044769287109375p487
; [HW: -1.4292505071998495846941068521118722856044769287109375p487] 

; mpf : - 1933172424273839 487
; mpfd: - 1933172424273839 487 (-5.71105e+146) class: Neg. norm. non-zero
; hwf : - 1933172424273839 487 (-5.71105e+146) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100110 #b0110110111100011010111000111101000110110111110101111)))
(assert (= y (fp #b0 #b10101001000 #b1101100111010101000111001000100011111100011011100000)))
(assert (= r (fp #b1 #b10111100110 #b0110110111100011010111000111101000110110111110101111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
