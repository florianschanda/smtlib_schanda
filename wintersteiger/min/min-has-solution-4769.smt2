(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8961803479579721898318211970035918056964874267578125p77 {+ 4036037481120285 77 (2.86543e+023)}
; Y = -1.118890968622981318958409246988594532012939453125p-585 {- 535437321988176 -585 (-8.83569e-177)}
; 1.8961803479579721898318211970035918056964874267578125p77 m -1.118890968622981318958409246988594532012939453125p-585 == -1.118890968622981318958409246988594532012939453125p-585
; [HW: -1.118890968622981318958409246988594532012939453125p-585] 

; mpf : - 535437321988176 -585
; mpfd: - 535437321988176 -585 (-8.83569e-177) class: Neg. norm. non-zero
; hwf : - 535437321988176 -585 (-8.83569e-177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001100 #b1110010101101100000100110100010111001100001000011101)))
(assert (= y (fp #b1 #b00110110110 #b0001111001101111101000110111011000000110100001010000)))
(assert (= r (fp #b1 #b00110110110 #b0001111001101111101000110111011000000110100001010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
