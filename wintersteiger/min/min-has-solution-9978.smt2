(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1716269792604812050029750025714747607707977294921875p-137 {+ 772939199844227 -137 (6.72481e-042)}
; Y = 1.444774764474590522667085679131560027599334716796875p417 {+ 2003087463551566 417 (4.88999e+125)}
; 1.1716269792604812050029750025714747607707977294921875p-137 m 1.444774764474590522667085679131560027599334716796875p417 == 1.1716269792604812050029750025714747607707977294921875p-137
; [HW: 1.1716269792604812050029750025714747607707977294921875p-137] 

; mpf : + 772939199844227 -137
; mpfd: + 772939199844227 -137 (6.72481e-042) class: Pos. norm. non-zero
; hwf : + 772939199844227 -137 (6.72481e-042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110110 #b0010101111101111101111101110011100001000111110000011)))
(assert (= y (fp #b0 #b10110100000 #b0111000111011100110000100100101110000001001001001110)))
(assert (= r (fp #b0 #b01101110110 #b0010101111101111101111101110011100001000111110000011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
