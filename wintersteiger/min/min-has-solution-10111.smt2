(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8965456126979296502810257152304984629154205322265625p-771 {+ 4037682487267049 -771 (1.52699e-232)}
; Y = -1.9654696808087830373068527478608302772045135498046875p-89 {- 4348088894727947 -89 (-3.17539e-027)}
; 1.8965456126979296502810257152304984629154205322265625p-771 m -1.9654696808087830373068527478608302772045135498046875p-89 == -1.9654696808087830373068527478608302772045135498046875p-89
; [HW: -1.9654696808087830373068527478608302772045135498046875p-89] 

; mpf : - 4348088894727947 -89
; mpfd: - 4348088894727947 -89 (-3.17539e-027) class: Neg. norm. non-zero
; hwf : - 4348088894727947 -89 (-3.17539e-027) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111100 #b1110010110000100000000110110010111101000111011101001)))
(assert (= y (fp #b1 #b01110100110 #b1111011100101001000001010110000001011010011100001011)))
(assert (= r (fp #b1 #b01110100110 #b1111011100101001000001010110000001011010011100001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
