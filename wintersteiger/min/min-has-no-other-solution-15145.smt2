(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8420604053770490704522444502799771726131439208984375p-814 {- 3792302927879527 -814 (-1.68612e-245)}
; Y = -1.5981712967152403859216747150640003383159637451171875p129 {- 2693924028990483 129 (-1.08766e+039)}
; -1.8420604053770490704522444502799771726131439208984375p-814 m -1.5981712967152403859216747150640003383159637451171875p129 == -1.5981712967152403859216747150640003383159637451171875p129
; [HW: -1.5981712967152403859216747150640003383159637451171875p129] 

; mpf : - 2693924028990483 129
; mpfd: - 2693924028990483 129 (-1.08766e+039) class: Neg. norm. non-zero
; hwf : - 2693924028990483 129 (-1.08766e+039) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010001 #b1101011110010001010001010100111001011001110101100111)))
(assert (= y (fp #b1 #b10010000000 #b1001100100100001110000010000110011001100010000010011)))
(assert (= r (fp #b1 #b10010000000 #b1001100100100001110000010000110011001100010000010011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
