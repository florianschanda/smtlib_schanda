(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5999168989750833791418926921323873102664947509765625p-156 {+ 2701785522677449 -156 (1.75153e-047)}
; Y = 1.082831315942711203348380877287127077579498291015625p8 {+ 373039083614202 8 (277.205)}
; 1.5999168989750833791418926921323873102664947509765625p-156 m 1.082831315942711203348380877287127077579498291015625p8 == 1.5999168989750833791418926921323873102664947509765625p-156
; [HW: 1.5999168989750833791418926921323873102664947509765625p-156] 

; mpf : + 2701785522677449 -156
; mpfd: + 2701785522677449 -156 (1.75153e-047) class: Pos. norm. non-zero
; hwf : + 2701785522677449 -156 (1.75153e-047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100011 #b1001100110010100001001110110010101101010011011001001)))
(assert (= y (fp #b0 #b10000000111 #b0001010100110100011011101110000100001110111111111010)))
(assert (= r (fp #b0 #b01101100011 #b1001100110010100001001110110010101101010011011001001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
