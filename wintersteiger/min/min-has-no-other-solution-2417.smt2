(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7405038344958398965900414623320102691650390625p432 {- 3334932793101888 432 (-1.93034e+130)}
; Y = -1.2687140246681003485917926809634082019329071044921875p-120 {- 1210180381364483 -120 (-9.54474e-037)}
; -1.7405038344958398965900414623320102691650390625p432 m -1.2687140246681003485917926809634082019329071044921875p-120 == -1.7405038344958398965900414623320102691650390625p432
; [HW: -1.7405038344958398965900414623320102691650390625p432] 

; mpf : - 3334932793101888 432
; mpfd: - 3334932793101888 432 (-1.93034e+130) class: Neg. norm. non-zero
; hwf : - 3334932793101888 432 (-1.93034e+130) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110101111 #b1011110110010001101010001100011110111000111001000000)))
(assert (= y (fp #b1 #b01110000111 #b0100010011001010011100010011101111101101000100000011)))
(assert (= r (fp #b1 #b10110101111 #b1011110110010001101010001100011110111000111001000000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
