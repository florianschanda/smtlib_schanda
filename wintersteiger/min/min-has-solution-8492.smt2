(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.23112538121616221786780442926101386547088623046875p-292 {- 1040896180720972 -292 (-1.54719e-088)}
; Y = -1.269538863697756259085736019187606871128082275390625p511 {- 1213895126111082 511 (-8.51087e+153)}
; -1.23112538121616221786780442926101386547088623046875p-292 m -1.269538863697756259085736019187606871128082275390625p511 == -1.269538863697756259085736019187606871128082275390625p511
; [HW: -1.269538863697756259085736019187606871128082275390625p511] 

; mpf : - 1213895126111082 511
; mpfd: - 1213895126111082 511 (-8.51087e+153) class: Neg. norm. non-zero
; hwf : - 1213895126111082 511 (-8.51087e+153) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011011 #b0011101100101011000010000111000110011001010101001100)))
(assert (= y (fp #b1 #b10111111110 #b0100010100000000011111111011110010010101001101101010)))
(assert (= r (fp #b1 #b10111111110 #b0100010100000000011111111011110010010101001101101010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
