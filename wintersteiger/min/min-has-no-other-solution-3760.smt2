(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2808120892294259096644282180932350456714630126953125p203 {- 1264665220414773 203 (-1.64655e+061)}
; Y = 1.0429021099054456289678682878729887306690216064453125p234 {+ 193213926183573 234 (2.87914e+070)}
; -1.2808120892294259096644282180932350456714630126953125p203 m 1.0429021099054456289678682878729887306690216064453125p234 == -1.2808120892294259096644282180932350456714630126953125p203
; [HW: -1.2808120892294259096644282180932350456714630126953125p203] 

; mpf : - 1264665220414773 203
; mpfd: - 1264665220414773 203 (-1.64655e+061) class: Neg. norm. non-zero
; hwf : - 1264665220414773 203 (-1.64655e+061) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001010 #b0100011111100011010011010001001110001111110100110101)))
(assert (= y (fp #b0 #b10011101001 #b0000101011111011101000011111011011111001001010010101)))
(assert (= r (fp #b1 #b10011001010 #b0100011111100011010011010001001110001111110100110101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
