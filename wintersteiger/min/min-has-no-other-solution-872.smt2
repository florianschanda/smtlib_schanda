(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.121568715238061120231805034563876688480377197265625p-515 {+ 547496820646042 -515 (1.04563e-155)}
; Y = 1.485412161972025302247857325710356235504150390625p666 {+ 2186102031778320 666 (4.54804e+200)}
; 1.121568715238061120231805034563876688480377197265625p-515 m 1.485412161972025302247857325710356235504150390625p666 == 1.121568715238061120231805034563876688480377197265625p-515
; [HW: 1.121568715238061120231805034563876688480377197265625p-515] 

; mpf : + 547496820646042 -515
; mpfd: + 547496820646042 -515 (1.04563e-155) class: Pos. norm. non-zero
; hwf : + 547496820646042 -515 (1.04563e-155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111100 #b0001111100011111001000001001100000101010000010011010)))
(assert (= y (fp #b0 #b11010011001 #b0111110001000011111110001011000011000000001000010000)))
(assert (= r (fp #b0 #b00111111100 #b0001111100011111001000001001100000101010000010011010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
