(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5379443492143689553586227702908217906951904296875p253 {+ 2422685970667896 253 (2.22602e+076)}
; Y = -1.429430574303006462599796577706001698970794677734375p53 {- 1933983374412518 53 (-1.28752e+016)}
; 1.5379443492143689553586227702908217906951904296875p253 m -1.429430574303006462599796577706001698970794677734375p53 == -1.429430574303006462599796577706001698970794677734375p53
; [HW: -1.429430574303006462599796577706001698970794677734375p53] 

; mpf : - 1933983374412518 53
; mpfd: - 1933983374412518 53 (-1.28752e+016) class: Neg. norm. non-zero
; hwf : - 1933983374412518 53 (-1.28752e+016) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111100 #b1000100110110110101110001000101011110001100101111000)))
(assert (= y (fp #b1 #b10000110100 #b0110110111101111001010011000000010001000101011100110)))
(assert (= r (fp #b1 #b10000110100 #b0110110111101111001010011000000010001000101011100110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
