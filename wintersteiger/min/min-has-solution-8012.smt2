(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.35460987423845846677750159869901835918426513671875p793 {+ 1597020897482220 793 (7.05669e+238)}
; Y = 1.59621336198070995493480950244702398777008056640625p782 {+ 2685106274849636 782 (4.0602e+235)}
; 1.35460987423845846677750159869901835918426513671875p793 m 1.59621336198070995493480950244702398777008056640625p782 == 1.59621336198070995493480950244702398777008056640625p782
; [HW: 1.59621336198070995493480950244702398777008056640625p782] 

; mpf : + 2685106274849636 782
; mpfd: + 2685106274849636 782 (4.0602e+235) class: Pos. norm. non-zero
; hwf : + 2685106274849636 782 (4.0602e+235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011000 #b0101101011000111101101100111010010110001010111101100)))
(assert (= y (fp #b0 #b11100001101 #b1001100010100001011100000101101100100101001101100100)))
(assert (= r (fp #b0 #b11100001101 #b1001100010100001011100000101101100100101001101100100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
