(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7528706741808119939918242380372248589992523193359375p-645 {- 3390628087698879 -645 (-1.20061e-194)}
; Y = 1.05791650184163810166637631482444703578948974609375p-822 {+ 260832736112604 -822 (3.78264e-248)}
; -1.7528706741808119939918242380372248589992523193359375p-645 m 1.05791650184163810166637631482444703578948974609375p-822 == -1.7528706741808119939918242380372248589992523193359375p-645
; [HW: -1.7528706741808119939918242380372248589992523193359375p-645] 

; mpf : - 3390628087698879 -645
; mpfd: - 3390628087698879 -645 (-1.20061e-194) class: Neg. norm. non-zero
; hwf : - 3390628087698879 -645 (-1.20061e-194) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111010 #b1100000010111100001000011110101110111001010110111111)))
(assert (= y (fp #b0 #b00011001001 #b0000111011010011100111011010100101001110111111011100)))
(assert (= r (fp #b1 #b00101111010 #b1100000010111100001000011110101110111001010110111111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
