(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7613532455137477228390707750804722309112548828125p-177 {- 3428830192793032 -177 (-9.19469e-054)}
; Y = 1.63505239665617363442606801982037723064422607421875p-731 {+ 2860021736941484 -731 (1.44745e-220)}
; -1.7613532455137477228390707750804722309112548828125p-177 m 1.63505239665617363442606801982037723064422607421875p-731 == -1.7613532455137477228390707750804722309112548828125p-177
; [HW: -1.7613532455137477228390707750804722309112548828125p-177] 

; mpf : - 3428830192793032 -177
; mpfd: - 3428830192793032 -177 (-9.19469e-054) class: Neg. norm. non-zero
; hwf : - 3428830192793032 -177 (-9.19469e-054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001110 #b1100001011101000000010111101101000101111010111001000)))
(assert (= y (fp #b0 #b00100100100 #b1010001010010010110010110011101011100010011110101100)))
(assert (= r (fp #b1 #b01101001110 #b1100001011101000000010111101101000101111010111001000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
