(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.254366198407464327857496755314059555530548095703125p437 {+ 1145563516363506 437 (4.45177e+131)}
; Y = 1.3204153110382232938491142704151570796966552734375p819 {+ 1443022275395544 819 (4.61612e+246)}
; 1.254366198407464327857496755314059555530548095703125p437 m 1.3204153110382232938491142704151570796966552734375p819 == 1.254366198407464327857496755314059555530548095703125p437
; [HW: 1.254366198407464327857496755314059555530548095703125p437] 

; mpf : + 1145563516363506 437
; mpfd: + 1145563516363506 437 (4.45177e+131) class: Pos. norm. non-zero
; hwf : + 1145563516363506 437 (4.45177e+131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110100 #b0100000100011110001001001010011101011110001011110010)))
(assert (= y (fp #b0 #b11100110010 #b0101001000000110101111001110001000001011111111011000)))
(assert (= r (fp #b0 #b10110110100 #b0100000100011110001001001010011101011110001011110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
