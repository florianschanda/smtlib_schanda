(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2677148277796828068630929919891059398651123046875p-248 {+ 1205680398630136 -248 (2.80274e-075)}
; Y = 1.553887999244878859173013552208431065082550048828125p-949 {+ 2494489787004226 -949 (3.26553e-286)}
; 1.2677148277796828068630929919891059398651123046875p-248 m 1.553887999244878859173013552208431065082550048828125p-949 == 1.553887999244878859173013552208431065082550048828125p-949
; [HW: 1.553887999244878859173013552208431065082550048828125p-949] 

; mpf : + 2494489787004226 -949
; mpfd: + 2494489787004226 -949 (3.26553e-286) class: Pos. norm. non-zero
; hwf : + 2494489787004226 -949 (3.26553e-286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000111 #b0100010010001000111101010111110111110111110011111000)))
(assert (= y (fp #b0 #b00001001010 #b1000110111001011100110101001101001100111010101000010)))
(assert (= r (fp #b0 #b00001001010 #b1000110111001011100110101001101001100111010101000010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
