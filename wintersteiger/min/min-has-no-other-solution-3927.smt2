(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.06524015616583778154335959698073565959930419921875p482 {- 293815542998060 482 (-1.33016e+145)}
; Y = 1.227047171513996115521649699076078832149505615234375p-353 {+ 1022529557025958 -353 (6.68764e-107)}
; -1.06524015616583778154335959698073565959930419921875p482 m 1.227047171513996115521649699076078832149505615234375p-353 == -1.06524015616583778154335959698073565959930419921875p482
; [HW: -1.06524015616583778154335959698073565959930419921875p482] 

; mpf : - 293815542998060 482
; mpfd: - 293815542998060 482 (-1.33016e+145) class: Neg. norm. non-zero
; hwf : - 293815542998060 482 (-1.33016e+145) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100001 #b0001000010110011100101000011000100011110010000101100)))
(assert (= y (fp #b0 #b01010011110 #b0011101000011111110000110111000001001101010010100110)))
(assert (= r (fp #b1 #b10111100001 #b0001000010110011100101000011000100011110010000101100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
