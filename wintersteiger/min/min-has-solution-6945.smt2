(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8166614048210394383175980692612938582897186279296875p768 {- 3677915998439899 768 (-2.8204e+231)}
; Y = 1.6636245045364732586534728397964499890804290771484375p428 {+ 2988699071344391 428 (1.15317e+129)}
; -1.8166614048210394383175980692612938582897186279296875p768 m 1.6636245045364732586534728397964499890804290771484375p428 == -1.8166614048210394383175980692612938582897186279296875p768
; [HW: -1.8166614048210394383175980692612938582897186279296875p768] 

; mpf : - 3677915998439899 768
; mpfd: - 3677915998439899 768 (-2.8204e+231) class: Neg. norm. non-zero
; hwf : - 3677915998439899 768 (-2.8204e+231) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111111 #b1101000100010000101110001100100110011100100111011011)))
(assert (= y (fp #b0 #b10110101011 #b1010100111100011010010111010011111001110111100000111)))
(assert (= r (fp #b1 #b11011111111 #b1101000100010000101110001100100110011100100111011011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
