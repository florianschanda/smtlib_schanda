(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.060118427601627555389995904988609254360198974609375p181 {- 270749328144790 181 (-3.24925e+054)}
; Y = -1.676338360138583283287516678683459758758544921875p-145 {- 3045957186696496 -145 (-3.75848e-044)}
; -1.060118427601627555389995904988609254360198974609375p181 m -1.676338360138583283287516678683459758758544921875p-145 == -1.060118427601627555389995904988609254360198974609375p181
; [HW: -1.060118427601627555389995904988609254360198974609375p181] 

; mpf : - 270749328144790 181
; mpfd: - 270749328144790 181 (-3.24925e+054) class: Neg. norm. non-zero
; hwf : - 270749328144790 181 (-3.24925e+054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110100 #b0000111101100011111010111101100001101111100110010110)))
(assert (= y (fp #b1 #b01101101110 #b1010110100100100100000101100000111010011010100110000)))
(assert (= r (fp #b1 #b10010110100 #b0000111101100011111010111101100001101111100110010110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
