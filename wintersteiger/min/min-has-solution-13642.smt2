(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.841570939154895558687030643341131508350372314453125p-310 {+ 3790098567983826 -310 (8.82856e-094)}
; Y = 1.743946326083592790467946542776189744472503662109375p1021 {+ 3350436396933718 1021 (3.91885e+307)}
; 1.841570939154895558687030643341131508350372314453125p-310 m 1.743946326083592790467946542776189744472503662109375p1021 == 1.841570939154895558687030643341131508350372314453125p-310
; [HW: 1.841570939154895558687030643341131508350372314453125p-310] 

; mpf : + 3790098567983826 -310
; mpfd: + 3790098567983826 -310 (8.82856e-094) class: Pos. norm. non-zero
; hwf : + 3790098567983826 -310 (8.82856e-094) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011001001 #b1101011101110001001100010110110011101111001011010010)))
(assert (= y (fp #b0 #b11111111100 #b1011111001110011010001000011010010000010001001010110)))
(assert (= r (fp #b0 #b01011001001 #b1101011101110001001100010110110011101111001011010010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
