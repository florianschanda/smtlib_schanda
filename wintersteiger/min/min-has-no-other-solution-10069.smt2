(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.435193459213649713746008274029009044170379638671875p314 {+ 1959937100748670 314 (4.78993e+094)}
; Y = -1.9210433759405087794647215559962205588817596435546875p352 {- 4148010604677739 352 (-1.76236e+106)}
; 1.435193459213649713746008274029009044170379638671875p314 m -1.9210433759405087794647215559962205588817596435546875p352 == -1.9210433759405087794647215559962205588817596435546875p352
; [HW: -1.9210433759405087794647215559962205588817596435546875p352] 

; mpf : - 4148010604677739 352
; mpfd: - 4148010604677739 352 (-1.76236e+106) class: Neg. norm. non-zero
; hwf : - 4148010604677739 352 (-1.76236e+106) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111001 #b0110111101101000110101101010101011000001011101111110)))
(assert (= y (fp #b1 #b10101011111 #b1110101111001001011111111010100111011100101001101011)))
(assert (= r (fp #b1 #b10101011111 #b1110101111001001011111111010100111011100101001101011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
