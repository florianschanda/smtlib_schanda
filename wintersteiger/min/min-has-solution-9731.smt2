(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4813082214868085184633628159645013511180877685546875p-833 {- 2167619526938347 -833 (-2.58618e-251)}
; Y = -1.19017766854791062769436393864452838897705078125p144 {- 856484077206560 144 (-2.65418e+043)}
; -1.4813082214868085184633628159645013511180877685546875p-833 m -1.19017766854791062769436393864452838897705078125p144 == -1.19017766854791062769436393864452838897705078125p144
; [HW: -1.19017766854791062769436393864452838897705078125p144] 

; mpf : - 856484077206560 144
; mpfd: - 856484077206560 144 (-2.65418e+043) class: Neg. norm. non-zero
; hwf : - 856484077206560 144 (-2.65418e+043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010111110 #b0111101100110111000000111111111010010100111011101011)))
(assert (= y (fp #b1 #b10010001111 #b0011000010101111011110111101001011010111110000100000)))
(assert (= r (fp #b1 #b10010001111 #b0011000010101111011110111101001011010111110000100000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
