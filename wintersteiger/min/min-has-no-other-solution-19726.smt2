(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.00347073341621051412175802397541701793670654296875p-906 {+ 15630793719948 -906 (1.85493e-273)}
; Y = 1.485546251548559126831605681218206882476806640625p-606 {+ 2186705917545232 -606 (5.59382e-183)}
; 1.00347073341621051412175802397541701793670654296875p-906 m 1.485546251548559126831605681218206882476806640625p-606 == 1.00347073341621051412175802397541701793670654296875p-906
; [HW: 1.00347073341621051412175802397541701793670654296875p-906] 

; mpf : + 15630793719948 -906
; mpfd: + 15630793719948 -906 (1.85493e-273) class: Pos. norm. non-zero
; hwf : + 15630793719948 -906 (1.85493e-273) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110101 #b0000000011100011011101010011111010000100000010001100)))
(assert (= y (fp #b0 #b00110100001 #b0111110001001100110000100101011100011000101100010000)))
(assert (= r (fp #b0 #b00001110101 #b0000000011100011011101010011111010000100000010001100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
