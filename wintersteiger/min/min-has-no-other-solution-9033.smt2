(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3772967283407211436241368573973886668682098388671875p17 {+ 1699193405163379 17 (180525)}
; Y = -1.4316555987380581438372928460012190043926239013671875p-596 {- 1944003993629107 -596 (-5.52028e-180)}
; 1.3772967283407211436241368573973886668682098388671875p17 m -1.4316555987380581438372928460012190043926239013671875p-596 == -1.4316555987380581438372928460012190043926239013671875p-596
; [HW: -1.4316555987380581438372928460012190043926239013671875p-596] 

; mpf : - 1944003993629107 -596
; mpfd: - 1944003993629107 -596 (-5.52028e-180) class: Neg. norm. non-zero
; hwf : - 1944003993629107 -596 (-5.52028e-180) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010000 #b0110000010010110100001001011010100011100011101110011)))
(assert (= y (fp #b1 #b00110101011 #b0110111010000000111110110011011110110111000110110011)))
(assert (= r (fp #b1 #b00110101011 #b0110111010000000111110110011011110110111000110110011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
