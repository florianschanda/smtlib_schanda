(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2691960429580702029994654367328621447086334228515625p672 {+ 1212351198755577 672 (2.48706e+202)}
; Y = -1.1748320127784632749268212137394584715366363525390625p-195 {- 787373387601521 -195 (-2.33952e-059)}
; 1.2691960429580702029994654367328621447086334228515625p672 m -1.1748320127784632749268212137394584715366363525390625p-195 == -1.1748320127784632749268212137394584715366363525390625p-195
; [HW: -1.1748320127784632749268212137394584715366363525390625p-195] 

; mpf : - 787373387601521 -195
; mpfd: - 787373387601521 -195 (-2.33952e-059) class: Neg. norm. non-zero
; hwf : - 787373387601521 -195 (-2.33952e-059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011111 #b0100010011101010000010000010100010110111101011111001)))
(assert (= y (fp #b1 #b01100111100 #b0010110011000001110010100111000100101101011001110001)))
(assert (= r (fp #b1 #b01100111100 #b0010110011000001110010100111000100101101011001110001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
