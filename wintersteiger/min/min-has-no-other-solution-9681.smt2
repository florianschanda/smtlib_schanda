(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8652397742777500067035134634352289140224456787109375p723 {+ 3896693525023407 723 (8.23041e+217)}
; Y = -1.265677215235533115134103354648686945438385009765625p-845 {- 1196503807535578 -845 (-5.39482e-255)}
; 1.8652397742777500067035134634352289140224456787109375p723 m -1.265677215235533115134103354648686945438385009765625p-845 == -1.265677215235533115134103354648686945438385009765625p-845
; [HW: -1.265677215235533115134103354648686945438385009765625p-845] 

; mpf : - 1196503807535578 -845
; mpfd: - 1196503807535578 -845 (-5.39482e-255) class: Neg. norm. non-zero
; hwf : - 1196503807535578 -845 (-5.39482e-255) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010010 #b1101110110000000010110101001010110111000101010101111)))
(assert (= y (fp #b1 #b00010110010 #b0100010000000011011011000000011010111010100111011010)))
(assert (= r (fp #b1 #b00010110010 #b0100010000000011011011000000011010111010100111011010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
