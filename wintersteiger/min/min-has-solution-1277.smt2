(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0124373809580029526244970838888548314571380615234375p-59 {- 56012984247927 -59 (-1.7563e-018)}
; Y = 1.3037637883085604340038798909517936408519744873046875p-758 {+ 1368030483835083 -758 (8.59928e-229)}
; -1.0124373809580029526244970838888548314571380615234375p-59 m 1.3037637883085604340038798909517936408519744873046875p-758 == -1.0124373809580029526244970838888548314571380615234375p-59
; [HW: -1.0124373809580029526244970838888548314571380615234375p-59] 

; mpf : - 56012984247927 -59
; mpfd: - 56012984247927 -59 (-1.7563e-018) class: Neg. norm. non-zero
; hwf : - 56012984247927 -59 (-1.7563e-018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111000100 #b0000001100101111000110001010000001110110011001110111)))
(assert (= y (fp #b0 #b00100001001 #b0100110111000011011101101011000001111110100011001011)))
(assert (= r (fp #b1 #b01111000100 #b0000001100101111000110001010000001110110011001110111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
