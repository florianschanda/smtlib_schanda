(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5265122538387030370898855835548602044582366943359375p-819 {+ 2371200390193983 -819 (4.3665e-247)}
; Y = -1.7789642183194838143123206464224494993686676025390625p-565 {- 3508142963358577 -565 (-1.47306e-170)}
; 1.5265122538387030370898855835548602044582366943359375p-819 m -1.7789642183194838143123206464224494993686676025390625p-565 == -1.7789642183194838143123206464224494993686676025390625p-565
; [HW: -1.7789642183194838143123206464224494993686676025390625p-565] 

; mpf : - 3508142963358577 -565
; mpfd: - 3508142963358577 -565 (-1.47306e-170) class: Neg. norm. non-zero
; hwf : - 3508142963358577 -565 (-1.47306e-170) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001100 #b1000011011001001100000011100111100101110001100111111)))
(assert (= y (fp #b1 #b00111001010 #b1100011101101010001100101111001001101111101101110001)))
(assert (= r (fp #b1 #b00111001010 #b1100011101101010001100101111001001101111101101110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
