(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0064840407238904163023107685148715972900390625p745 {- 29201523387968 745 (-1.86275e+224)}
; Y = 1.646039210669325569824650301598012447357177734375p67 {+ 2909501948437104 67 (2.42913e+020)}
; -1.0064840407238904163023107685148715972900390625p745 m 1.646039210669325569824650301598012447357177734375p67 == -1.0064840407238904163023107685148715972900390625p745
; [HW: -1.0064840407238904163023107685148715972900390625p745] 

; mpf : - 29201523387968 745
; mpfd: - 29201523387968 745 (-1.86275e+224) class: Neg. norm. non-zero
; hwf : - 29201523387968 745 (-1.86275e+224) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101000 #b0000000110101000111100000010011011011010111001000000)))
(assert (= y (fp #b0 #b10001000010 #b1010010101100010110100110110000111000010001001110000)))
(assert (= r (fp #b1 #b11011101000 #b0000000110101000111100000010011011011010111001000000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
