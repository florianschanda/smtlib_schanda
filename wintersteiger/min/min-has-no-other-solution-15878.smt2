(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9190815723317078411724878606037236750125885009765625p-222 {- 4139175426676169 -222 (-2.84731e-067)}
; Y = 1.403761677722985101723907064297236502170562744140625p371 {+ 1818380941339722 371 (6.75183e+111)}
; -1.9190815723317078411724878606037236750125885009765625p-222 m 1.403761677722985101723907064297236502170562744140625p371 == -1.9190815723317078411724878606037236750125885009765625p-222
; [HW: -1.9190815723317078411724878606037236750125885009765625p-222] 

; mpf : - 4139175426676169 -222
; mpfd: - 4139175426676169 -222 (-2.84731e-067) class: Neg. norm. non-zero
; hwf : - 4139175426676169 -222 (-2.84731e-067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100100001 #b1110101101001000111011100000111110000101010111001001)))
(assert (= y (fp #b0 #b10101110010 #b0110011101011100111011001110000100110010110001001010)))
(assert (= r (fp #b1 #b01100100001 #b1110101101001000111011100000111110000101010111001001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
