(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1315446765449379551427000478724949061870574951171875p-747 {- 592424556270355 -747 (-1.5285e-225)}
; Y = 1.553495445329682755897238166653551161289215087890625p92 {+ 2492721881338026 92 (7.69254e+027)}
; -1.1315446765449379551427000478724949061870574951171875p-747 m 1.553495445329682755897238166653551161289215087890625p92 == -1.1315446765449379551427000478724949061870574951171875p-747
; [HW: -1.1315446765449379551427000478724949061870574951171875p-747] 

; mpf : - 592424556270355 -747
; mpfd: - 592424556270355 -747 (-1.5285e-225) class: Neg. norm. non-zero
; hwf : - 592424556270355 -747 (-1.5285e-225) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010100 #b0010000110101100111010010111001110111001001100010011)))
(assert (= y (fp #b0 #b10001011011 #b1000110110110001111000001010010000101101000010101010)))
(assert (= r (fp #b1 #b00100010100 #b0010000110101100111010010111001110111001001100010011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
