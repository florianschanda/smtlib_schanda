(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 0.414536334680729812163235692423768341541290283203125p-1022 {+ 1866905682399666 -1023 (9.22374e-309)}
; Y = -1.056008975255807502691141053219325840473175048828125p-125 {- 252242000091458 -125 (-2.48267e-038)}
; 0.414536334680729812163235692423768341541290283203125p-1022 m -1.056008975255807502691141053219325840473175048828125p-125 == -1.056008975255807502691141053219325840473175048828125p-125
; [HW: -1.056008975255807502691141053219325840473175048828125p-125] 

; mpf : - 252242000091458 -125
; mpfd: - 252242000091458 -125 (-2.48267e-038) class: Neg. norm. non-zero
; hwf : - 252242000091458 -125 (-2.48267e-038) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0110101000011111000011011010000001110101000110110010)))
(assert (= y (fp #b1 #b01110000010 #b0000111001010110100110101010110100000001100101000010)))
(assert (= r (fp #b1 #b01110000010 #b0000111001010110100110101010110100000001100101000010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
