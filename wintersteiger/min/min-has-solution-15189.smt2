(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6242252254359346164136468360084109008312225341796875p-69 {- 2811260492668539 -69 (-2.75154e-021)}
; Y = -1.1045774061623492290351578049012459814548492431640625p-643 {- 470974767424129 -643 (-3.02628e-194)}
; -1.6242252254359346164136468360084109008312225341796875p-69 m -1.1045774061623492290351578049012459814548492431640625p-643 == -1.6242252254359346164136468360084109008312225341796875p-69
; [HW: -1.6242252254359346164136468360084109008312225341796875p-69] 

; mpf : - 2811260492668539 -69
; mpfd: - 2811260492668539 -69 (-2.75154e-021) class: Neg. norm. non-zero
; hwf : - 2811260492668539 -69 (-2.75154e-021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111010 #b1001111111001101001110010111000010010101111001111011)))
(assert (= y (fp #b1 #b00101111100 #b0001101011000101100101011011101101011110001010000001)))
(assert (= r (fp #b1 #b01110111010 #b1001111111001101001110010111000010010101111001111011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
