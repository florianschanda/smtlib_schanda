(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6804758474511343191437617861083708703517913818359375p6 {- 3064590773015551 6 (-107.55)}
; Y = -1.5106014171790274058793102085473947227001190185546875p-954 {- 2299544352142315 -954 (-9.92051e-288)}
; -1.6804758474511343191437617861083708703517913818359375p6 m -1.5106014171790274058793102085473947227001190185546875p-954 == -1.6804758474511343191437617861083708703517913818359375p6
; [HW: -1.6804758474511343191437617861083708703517913818359375p6] 

; mpf : - 3064590773015551 6
; mpfd: - 3064590773015551 6 (-107.55) class: Neg. norm. non-zero
; hwf : - 3064590773015551 6 (-107.55) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000000101 #b1010111000110011101010100100011010000101001111111111)))
(assert (= y (fp #b1 #b00001000101 #b1000001010110110110001100100010000010011001111101011)))
(assert (= r (fp #b1 #b10000000101 #b1010111000110011101010100100011010000101001111111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
