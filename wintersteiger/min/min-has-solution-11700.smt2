(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0695933179113783495495226816274225711822509765625p-640 {- 313420440613160 -640 (-2.34434e-193)}
; Y = -0.2280697249435508222603630201774649322032928466796875p-1022 {- 1027134728270267 -1023 (-5.07472e-309)}
; -1.0695933179113783495495226816274225711822509765625p-640 m -0.2280697249435508222603630201774649322032928466796875p-1022 == -1.0695933179113783495495226816274225711822509765625p-640
; [HW: -1.0695933179113783495495226816274225711822509765625p-640] 

; mpf : - 313420440613160 -640
; mpfd: - 313420440613160 -640 (-2.34434e-193) class: Neg. norm. non-zero
; hwf : - 313420440613160 -640 (-2.34434e-193) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111111 #b0001000111010000110111100010000001110011000100101000)))
(assert (= y (fp #b1 #b00000000000 #b0011101001100010110001110000100111010111000110111011)))
(assert (= r (fp #b1 #b00101111111 #b0001000111010000110111100010000001110011000100101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
