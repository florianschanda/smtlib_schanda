(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.721365188540326496280385981663130223751068115234375p962 {- 3248739994308262 962 (-6.7101e+289)}
; Y = -1.047440295460701609187026406289078295230865478515625p-801 {- 213652096959162 -801 (-7.85421e-242)}
; -1.721365188540326496280385981663130223751068115234375p962 m -1.047440295460701609187026406289078295230865478515625p-801 == -1.721365188540326496280385981663130223751068115234375p962
; [HW: -1.721365188540326496280385981663130223751068115234375p962] 

; mpf : - 3248739994308262 962
; mpfd: - 3248739994308262 962 (-6.7101e+289) class: Neg. norm. non-zero
; hwf : - 3248739994308262 962 (-6.7101e+289) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111000001 #b1011100010101011011000111001010101000000111010100110)))
(assert (= y (fp #b1 #b00011011110 #b0000110000100101000011000001010110000100001010111010)))
(assert (= r (fp #b1 #b11111000001 #b1011100010101011011000111001010101000000111010100110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
