(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9788605857363188444963952861144207417964935302734375p-1018 {+ 4408396169169751 -1018 (7.04498e-307)}
; Y = 1.9119823687334351891564665493206121027469635009765625p-44 {+ 4107203455996361 -44 (1.08684e-013)}
; 1.9788605857363188444963952861144207417964935302734375p-1018 m 1.9119823687334351891564665493206121027469635009765625p-44 == 1.9788605857363188444963952861144207417964935302734375p-1018
; [HW: 1.9788605857363188444963952861144207417964935302734375p-1018] 

; mpf : + 4408396169169751 -1018
; mpfd: + 4408396169169751 -1018 (7.04498e-307) class: Pos. norm. non-zero
; hwf : + 4408396169169751 -1018 (7.04498e-307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000101 #b1111101010010110100110110111101100010100101101010111)))
(assert (= y (fp #b0 #b01111010011 #b1110100101110111101011010011000000111101000111001001)))
(assert (= r (fp #b0 #b00000000101 #b1111101010010110100110110111101100010100101101010111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
