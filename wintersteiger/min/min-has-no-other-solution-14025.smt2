(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5594079983324722338267065424588508903980255126953125p-264 {+ 2519349652838197 -264 (5.26067e-080)}
; Y = 1.822373260705970832162847727886401116847991943359375p125 {+ 3703639910474870 125 (7.75152e+037)}
; 1.5594079983324722338267065424588508903980255126953125p-264 m 1.822373260705970832162847727886401116847991943359375p125 == 1.5594079983324722338267065424588508903980255126953125p-264
; [HW: 1.5594079983324722338267065424588508903980255126953125p-264] 

; mpf : + 2519349652838197 -264
; mpfd: + 2519349652838197 -264 (5.26067e-080) class: Pos. norm. non-zero
; hwf : + 2519349652838197 -264 (5.26067e-080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110111 #b1000111100110101010111001101000111110101011100110101)))
(assert (= y (fp #b0 #b10001111100 #b1101001010000111000011011101001111010110010001110110)))
(assert (= r (fp #b0 #b01011110111 #b1000111100110101010111001101000111110101011100110101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
