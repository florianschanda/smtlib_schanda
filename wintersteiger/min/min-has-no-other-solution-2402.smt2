(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6121888535086572602494925376959145069122314453125p-818 {+ 2757053492541960 -818 (9.22315e-247)}
; Y = 1.966742372397968896535758176469244062900543212890625p1002 {+ 4353820588094762 1002 (8.42953e+301)}
; 1.6121888535086572602494925376959145069122314453125p-818 m 1.966742372397968896535758176469244062900543212890625p1002 == 1.6121888535086572602494925376959145069122314453125p-818
; [HW: 1.6121888535086572602494925376959145069122314453125p-818] 

; mpf : + 2757053492541960 -818
; mpfd: + 2757053492541960 -818 (9.22315e-247) class: Pos. norm. non-zero
; hwf : + 2757053492541960 -818 (9.22315e-247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001101 #b1001110010111000011010001010000011001011101000001000)))
(assert (= y (fp #b0 #b11111101001 #b1111011101111100011011011001100100011011010100101010)))
(assert (= r (fp #b0 #b00011001101 #b1001110010111000011010001010000011001011101000001000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
