(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.409500833605938030501647517667151987552642822265625p-185 {+ 1844227801635610 -185 (2.87419e-056)}
; Y = 1.35777084926359759009528715978376567363739013671875p-741 {+ 1611256663427564 -741 (1.17382e-223)}
; 1.409500833605938030501647517667151987552642822265625p-185 m 1.35777084926359759009528715978376567363739013671875p-741 == 1.35777084926359759009528715978376567363739013671875p-741
; [HW: 1.35777084926359759009528715978376567363739013671875p-741] 

; mpf : + 1611256663427564 -741
; mpfd: + 1611256663427564 -741 (1.17382e-223) class: Pos. norm. non-zero
; hwf : + 1611256663427564 -741 (1.17382e-223) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000110 #b0110100011010101000010111111000000000101101100011010)))
(assert (= y (fp #b0 #b00100011010 #b0101101110010110110111101101000100001100100111101100)))
(assert (= r (fp #b0 #b00100011010 #b0101101110010110110111101101000100001100100111101100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
