(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.330783638468980623059678691788576543331146240234375p331 {- 1489717070949158 331 (-5.82151e+099)}
; Y = -1.4863701148138013241606358860735781490802764892578125p38 {- 2190416267839581 38 (-4.0857e+011)}
; -1.330783638468980623059678691788576543331146240234375p331 m -1.4863701148138013241606358860735781490802764892578125p38 == -1.330783638468980623059678691788576543331146240234375p331
; [HW: -1.330783638468980623059678691788576543331146240234375p331] 

; mpf : - 1489717070949158 331
; mpfd: - 1489717070949158 331 (-5.82151e+099) class: Neg. norm. non-zero
; hwf : - 1489717070949158 331 (-5.82151e+099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101001010 #b0101010010101110001111001000110101000110101100100110)))
(assert (= y (fp #b1 #b10000100101 #b0111110010000010110000000111100011100000100001011101)))
(assert (= r (fp #b1 #b10101001010 #b0101010010101110001111001000110101000110101100100110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
