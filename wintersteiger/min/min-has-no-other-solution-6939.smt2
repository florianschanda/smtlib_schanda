(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3740552040127378408129743547760881483554840087890625p755 {- 1684594877407761 755 (-2.60406e+227)}
; Y = -1.8794187727324287440211492139496840536594390869140625p-222 {- 3960550057180385 -222 (-2.78846e-067)}
; -1.3740552040127378408129743547760881483554840087890625p755 m -1.8794187727324287440211492139496840536594390869140625p-222 == -1.3740552040127378408129743547760881483554840087890625p755
; [HW: -1.3740552040127378408129743547760881483554840087890625p755] 

; mpf : - 1684594877407761 755
; mpfd: - 1684594877407761 755 (-2.60406e+227) class: Neg. norm. non-zero
; hwf : - 1684594877407761 755 (-2.60406e+227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011110010 #b0101111111000010000101001111010000100010001000010001)))
(assert (= y (fp #b1 #b01100100001 #b1110000100100001100101101011010001011111110011100001)))
(assert (= r (fp #b1 #b11011110010 #b0101111111000010000101001111010000100010001000010001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
