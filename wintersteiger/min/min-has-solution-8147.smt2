(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.155347300883980299346376341418363153934478759765625p-665 {+ 699622046374106 -665 (7.54685e-201)}
; Y = 1.432925080515520477320023928768932819366455078125p-725 {+ 1949721231289040 -725 (8.11852e-219)}
; 1.155347300883980299346376341418363153934478759765625p-665 m 1.432925080515520477320023928768932819366455078125p-725 == 1.432925080515520477320023928768932819366455078125p-725
; [HW: 1.432925080515520477320023928768932819366455078125p-725] 

; mpf : + 1949721231289040 -725
; mpfd: + 1949721231289040 -725 (8.11852e-219) class: Pos. norm. non-zero
; hwf : + 1949721231289040 -725 (8.11852e-219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101100110 #b0010011111000100110101110011100011010001100011011010)))
(assert (= y (fp #b0 #b00100101010 #b0110111011010100001011011001011001101110101011010000)))
(assert (= r (fp #b0 #b00100101010 #b0110111011010100001011011001011001101110101011010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
