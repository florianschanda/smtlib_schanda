(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.52139488360452279636092498549260199069976806640625p485 {+ 2348153803514212 485 (1.51981e+146)}
; Y = 1.0919809186001356859918587360880337655544281005859375p1023 {+ 414245230732767 1023 (9.81523e+307)}
; 1.52139488360452279636092498549260199069976806640625p485 m 1.0919809186001356859918587360880337655544281005859375p1023 == 1.52139488360452279636092498549260199069976806640625p485
; [HW: 1.52139488360452279636092498549260199069976806640625p485] 

; mpf : + 2348153803514212 485
; mpfd: + 2348153803514212 485 (1.51981e+146) class: Pos. norm. non-zero
; hwf : + 2348153803514212 485 (1.51981e+146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100100 #b1000010101111010001000101001010101100010000101100100)))
(assert (= y (fp #b0 #b11111111110 #b0001011110001100000011111011110100111110010111011111)))
(assert (= r (fp #b0 #b10111100100 #b1000010101111010001000101001010101100010000101100100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
