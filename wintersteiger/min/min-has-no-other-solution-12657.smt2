(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0410917097697180988546961089014075696468353271484375p-886 {+ 185060608806919 -886 (2.01796e-267)}
; Y = -1.9642343583692893904668608229258097708225250244140625p-242 {- 4342525497049761 -242 (-2.77929e-073)}
; 1.0410917097697180988546961089014075696468353271484375p-886 m -1.9642343583692893904668608229258097708225250244140625p-242 == -1.9642343583692893904668608229258097708225250244140625p-242
; [HW: -1.9642343583692893904668608229258097708225250244140625p-242] 

; mpf : - 4342525497049761 -242
; mpfd: - 4342525497049761 -242 (-2.77929e-073) class: Neg. norm. non-zero
; hwf : - 4342525497049761 -242 (-2.77929e-073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001001 #b0000101010000100111111000111110110011001000000000111)))
(assert (= y (fp #b1 #b01100001101 #b1111011011011000000100000001101011100000001010100001)))
(assert (= r (fp #b1 #b01100001101 #b1111011011011000000100000001101011100000001010100001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
