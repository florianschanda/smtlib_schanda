(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.274688526887661321751465948182158172130584716796875p-194 {+ 1237087147334222 -194 (5.07674e-059)}
; Y = -1.317023359726154918547535999095998704433441162109375p424 {- 1427746284730454 424 (-5.70574e+127)}
; 1.274688526887661321751465948182158172130584716796875p-194 m -1.317023359726154918547535999095998704433441162109375p424 == -1.317023359726154918547535999095998704433441162109375p424
; [HW: -1.317023359726154918547535999095998704433441162109375p424] 

; mpf : - 1427746284730454 424
; mpfd: - 1427746284730454 424 (-5.70574e+127) class: Neg. norm. non-zero
; hwf : - 1427746284730454 424 (-5.70574e+127) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100111101 #b0100011001010001111111001011111110010001101001001110)))
(assert (= y (fp #b1 #b10110100111 #b0101000100101000011100010110001000010111100001010110)))
(assert (= r (fp #b1 #b10110100111 #b0101000100101000011100010110001000010111100001010110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
