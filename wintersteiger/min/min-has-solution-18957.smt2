(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.45589672883216980636689186212606728076934814453125p572 {+ 2053176338087988 572 (2.25055e+172)}
; Y = -1.7633664515247158277588823693804442882537841796875p1010 {- 3437896866633848 1010 (-1.93481e+304)}
; 1.45589672883216980636689186212606728076934814453125p572 m -1.7633664515247158277588823693804442882537841796875p1010 == -1.7633664515247158277588823693804442882537841796875p1010
; [HW: -1.7633664515247158277588823693804442882537841796875p1010] 

; mpf : - 3437896866633848 1010
; mpfd: - 3437896866633848 1010 (-1.93481e+304) class: Neg. norm. non-zero
; hwf : - 3437896866633848 1010 (-1.93481e+304) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111011 #b0111010010110101101001011110010010110000000000110100)))
(assert (= y (fp #b1 #b11111110001 #b1100001101101011111110111101100000101001100001111000)))
(assert (= r (fp #b1 #b11111110001 #b1100001101101011111110111101100000101001100001111000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
