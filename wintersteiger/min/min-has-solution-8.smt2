(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.93009810004276882722251684754155576229095458984375p-573 {- 4188789456770620 -573 (-6.24298e-173)}
; Y = 1.951255914202018715286612859927117824554443359375p839 {+ 4284075780734192 839 (7.15287e+252)}
; -1.93009810004276882722251684754155576229095458984375p-573 m 1.951255914202018715286612859927117824554443359375p839 == -1.93009810004276882722251684754155576229095458984375p-573
; [HW: -1.93009810004276882722251684754155576229095458984375p-573] 

; mpf : - 4188789456770620 -573
; mpfd: - 4188789456770620 -573 (-6.24298e-173) class: Neg. norm. non-zero
; hwf : - 4188789456770620 -573 (-6.24298e-173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111000010 #b1110111000011010111010001011100111000001011000111100)))
(assert (= y (fp #b0 #b11101000110 #b1111001110000101100000011111000110011111110011110000)))
(assert (= r (fp #b1 #b00111000010 #b1110111000011010111010001011100111000001011000111100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
