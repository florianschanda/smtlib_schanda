(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7665122818837719620432835654355585575103759765625p794 {+ 3452064427066664 794 (1.84049e+239)}
; Y = 1.807432854084806361782966632745228707790374755859375p1 {+ 3636354300783030 1 (3.61487)}
; 1.7665122818837719620432835654355585575103759765625p794 m 1.807432854084806361782966632745228707790374755859375p1 == 1.807432854084806361782966632745228707790374755859375p1
; [HW: 1.807432854084806361782966632745228707790374755859375p1] 

; mpf : + 3636354300783030 1
; mpfd: + 3636354300783030 1 (3.61487) class: Pos. norm. non-zero
; hwf : + 3636354300783030 1 (3.61487) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011001 #b1100010000111010001001100001111010101100010100101000)))
(assert (= y (fp #b0 #b10000000000 #b1100111010110011111010110110011000000010100110110110)))
(assert (= r (fp #b0 #b10000000000 #b1100111010110011111010110110011000000010100110110110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
