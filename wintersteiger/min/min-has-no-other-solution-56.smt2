(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8964035204789302380135040948516689240932464599609375p80 {+ 4037042560802511 80 (2.29261e+024)}
; Y = 1.4810599158083104232019877599668689072132110595703125p-209 {+ 2166501257577189 -209 (1.80013e-063)}
; 1.8964035204789302380135040948516689240932464599609375p80 m 1.4810599158083104232019877599668689072132110595703125p-209 == 1.4810599158083104232019877599668689072132110595703125p-209
; [HW: 1.4810599158083104232019877599668689072132110595703125p-209] 

; mpf : + 2166501257577189 -209
; mpfd: + 2166501257577189 -209 (1.80013e-063) class: Pos. norm. non-zero
; hwf : + 2166501257577189 -209 (1.80013e-063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001111 #b1110010101111010101100110111110001111001111011001111)))
(assert (= y (fp #b0 #b01100101110 #b0111101100100110101111100001110111010000001011100101)))
(assert (= r (fp #b0 #b01100101110 #b0111101100100110101111100001110111010000001011100101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
