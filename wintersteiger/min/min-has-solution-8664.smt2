(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.153770370234959319333256644313223659992218017578125p-470 {+ 692520182090786 -470 (3.78461e-142)}
; Y = -1.3436776034659485556943536721519194543361663818359375p-47 {- 1547786326904831 -47 (-9.5474e-015)}
; 1.153770370234959319333256644313223659992218017578125p-470 m -1.3436776034659485556943536721519194543361663818359375p-47 == -1.3436776034659485556943536721519194543361663818359375p-47
; [HW: -1.3436776034659485556943536721519194543361663818359375p-47] 

; mpf : - 1547786326904831 -47
; mpfd: - 1547786326904831 -47 (-9.5474e-015) class: Neg. norm. non-zero
; hwf : - 1547786326904831 -47 (-9.5474e-015) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101001 #b0010011101011101011111101011011101000000110000100010)))
(assert (= y (fp #b1 #b01111010000 #b0101011111111011010000010110001101000000111111111111)))
(assert (= r (fp #b1 #b01111010000 #b0101011111111011010000010110001101000000111111111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
