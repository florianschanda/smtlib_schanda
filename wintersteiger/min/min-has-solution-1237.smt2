(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.54824194646885526793766985065303742885589599609375p286 {- 2469062225826012 286 (-1.92494e+086)}
; Y = 1.2043234450258488710261417509173043072223663330078125p-777 {+ 920190990881469 -777 (1.51508e-234)}
; -1.54824194646885526793766985065303742885589599609375p286 m 1.2043234450258488710261417509173043072223663330078125p-777 == -1.54824194646885526793766985065303742885589599609375p286
; [HW: -1.54824194646885526793766985065303742885589599609375p286] 

; mpf : - 2469062225826012 286
; mpfd: - 2469062225826012 286 (-1.92494e+086) class: Neg. norm. non-zero
; hwf : - 2469062225826012 286 (-1.92494e+086) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011101 #b1000110001011001100101011000111001100001000011011100)))
(assert (= y (fp #b0 #b00011110110 #b0011010001001110100010101001001000110001001010111101)))
(assert (= r (fp #b1 #b10100011101 #b1000110001011001100101011000111001100001000011011100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
