(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.767323937456421578673371186596341431140899658203125p788 {- 3455719798801202 788 (-2.87709e+237)}
; Y = 1.65020420501659970113905728794634342193603515625p259 {+ 2928259415427488 259 (1.52864e+078)}
; -1.767323937456421578673371186596341431140899658203125p788 m 1.65020420501659970113905728794634342193603515625p259 == -1.767323937456421578673371186596341431140899658203125p788
; [HW: -1.767323937456421578673371186596341431140899658203125p788] 

; mpf : - 3455719798801202 788
; mpfd: - 3455719798801202 788 (-2.87709e+237) class: Neg. norm. non-zero
; hwf : - 3455719798801202 788 (-2.87709e+237) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010011 #b1100010001101111010101110111000011010000001100110010)))
(assert (= y (fp #b0 #b10100000010 #b1010011001110011110010000110010001000100100110100000)))
(assert (= r (fp #b1 #b11100010011 #b1100010001101111010101110111000011010000001100110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
