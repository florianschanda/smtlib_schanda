(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.549446380472454531940229571773670613765716552734375p-886 {- 2474486514355814 -886 (-3.00331e-267)}
; Y = -1.8306484724811991071646843920461833477020263671875p-700 {- 3740908151142200 -700 (-3.48023e-211)}
; -1.549446380472454531940229571773670613765716552734375p-886 m -1.8306484724811991071646843920461833477020263671875p-700 == -1.8306484724811991071646843920461833477020263671875p-700
; [HW: -1.8306484724811991071646843920461833477020263671875p-700] 

; mpf : - 3740908151142200 -700
; mpfd: - 3740908151142200 -700 (-3.48023e-211) class: Neg. norm. non-zero
; hwf : - 3740908151142200 -700 (-3.48023e-211) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001001 #b1000110010101000100001001001101100001000111001100110)))
(assert (= y (fp #b1 #b00101000011 #b1101010010100101011000001101011111000111011100111000)))
(assert (= r (fp #b1 #b00101000011 #b1101010010100101011000001101011111000111011100111000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
