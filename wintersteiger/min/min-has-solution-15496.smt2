(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.53664158139733242336433249874971807003021240234375p-454 {- 2416818826012540 -454 (-3.30335e-137)}
; Y = -1.482279634605086382492800112231634557247161865234375p571 {- 2171994382695846 571 (-1.14567e+172)}
; -1.53664158139733242336433249874971807003021240234375p-454 m -1.482279634605086382492800112231634557247161865234375p571 == -1.482279634605086382492800112231634557247161865234375p571
; [HW: -1.482279634605086382492800112231634557247161865234375p571] 

; mpf : - 2171994382695846 571
; mpfd: - 2171994382695846 571 (-1.14567e+172) class: Neg. norm. non-zero
; hwf : - 2171994382695846 571 (-1.14567e+172) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000111001 #b1000100101100001010101111011100111000110011101111100)))
(assert (= y (fp #b1 #b11000111010 #b0111101101110110101011011001101000100111110110100110)))
(assert (= r (fp #b1 #b11000111010 #b0111101101110110101011011001101000100111110110100110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
