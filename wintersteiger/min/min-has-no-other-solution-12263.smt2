(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.324602471388355073855791488313116133213043212890625p105 {+ 1461879569188138 105 (5.37323e+031)}
; Y = 1.7250716208510452620572550586075522005558013916015625p-13 {+ 3265432281481689 -13 (0.00021058)}
; 1.324602471388355073855791488313116133213043212890625p105 m 1.7250716208510452620572550586075522005558013916015625p-13 == 1.7250716208510452620572550586075522005558013916015625p-13
; [HW: 1.7250716208510452620572550586075522005558013916015625p-13] 

; mpf : + 3265432281481689 -13
; mpfd: + 3265432281481689 -13 (0.00021058) class: Pos. norm. non-zero
; hwf : + 3265432281481689 -13 (0.00021058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101000 #b0101001100011001001001011100011011010000010100101010)))
(assert (= y (fp #b0 #b01111110010 #b1011100110011110010010110011001011010000000111011001)))
(assert (= r (fp #b0 #b01111110010 #b1011100110011110010010110011001011010000000111011001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
