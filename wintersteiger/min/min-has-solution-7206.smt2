(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5235038100537721117433420658926479518413543701171875p45 {+ 2357651563885203 45 (5.36035e+013)}
; Y = 1.1285546324324979838849003499490208923816680908203125p-964 {+ 578958594719749 -964 (7.2378e-291)}
; 1.5235038100537721117433420658926479518413543701171875p45 m 1.1285546324324979838849003499490208923816680908203125p-964 == 1.1285546324324979838849003499490208923816680908203125p-964
; [HW: 1.1285546324324979838849003499490208923816680908203125p-964] 

; mpf : + 578958594719749 -964
; mpfd: + 578958594719749 -964 (7.2378e-291) class: Pos. norm. non-zero
; hwf : + 578958594719749 -964 (7.2378e-291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101100 #b1000011000000100010110000111111110000011001010010011)))
(assert (= y (fp #b0 #b00000111011 #b0010000011101000111101001101011000001100000000000101)))
(assert (= r (fp #b0 #b00000111011 #b0010000011101000111101001101011000001100000000000101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
