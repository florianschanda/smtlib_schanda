(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4296934929951310433438038671738468110561370849609375p383 {- 1935167454936399 383 (-2.81664e+115)}
; Y = 1.1995814735016832042191481377813033759593963623046875p436 {+ 898835049692235 436 (2.12867e+131)}
; -1.4296934929951310433438038671738468110561370849609375p383 m 1.1995814735016832042191481377813033759593963623046875p436 == -1.4296934929951310433438038671738468110561370849609375p383
; [HW: -1.4296934929951310433438038671738468110561370849609375p383] 

; mpf : - 1935167454936399 383
; mpfd: - 1935167454936399 383 (-2.81664e+115) class: Neg. norm. non-zero
; hwf : - 1935167454936399 383 (-2.81664e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111110 #b0110111000000000011001001000101110110111110101001111)))
(assert (= y (fp #b0 #b10110110011 #b0011001100010111110001010111110110010011110001001011)))
(assert (= r (fp #b1 #b10101111110 #b0110111000000000011001001000101110110111110101001111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
