(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.511632390126148806075434549711644649505615234375p581 {- 2304187441522800 581 (-1.19639e+175)}
; Y = -1.8873640923916765732570866020978428423404693603515625p-141 {- 3996332595837113 -141 (-6.77059e-043)}
; -1.511632390126148806075434549711644649505615234375p581 m -1.8873640923916765732570866020978428423404693603515625p-141 == -1.511632390126148806075434549711644649505615234375p581
; [HW: -1.511632390126148806075434549711644649505615234375p581] 

; mpf : - 2304187441522800 581
; mpfd: - 2304187441522800 581 (-1.19639e+175) class: Neg. norm. non-zero
; hwf : - 2304187441522800 581 (-1.19639e+175) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001000100 #b1000001011111010010101110001111100101010100001110000)))
(assert (= y (fp #b1 #b01101110010 #b1110001100101010010010110000110001110111100010111001)))
(assert (= r (fp #b1 #b11001000100 #b1000001011111010010101110001111100101010100001110000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
