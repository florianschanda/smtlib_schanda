(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4355449334794958549110788226244039833545684814453125p-879 {+ 1961520000121365 -879 (3.56164e-265)}
; Y = -1.756305135778864379147989893681369721889495849609375p-678 {- 3406095527672086 -678 (-1.40043e-204)}
; 1.4355449334794958549110788226244039833545684814453125p-879 m -1.756305135778864379147989893681369721889495849609375p-678 == -1.756305135778864379147989893681369721889495849609375p-678
; [HW: -1.756305135778864379147989893681369721889495849609375p-678] 

; mpf : - 3406095527672086 -678
; mpfd: - 3406095527672086 -678 (-1.40043e-204) class: Neg. norm. non-zero
; hwf : - 3406095527672086 -678 (-1.40043e-204) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010010000 #b0110111101111111110111110110110100111011101000010101)))
(assert (= y (fp #b1 #b00101011001 #b1100000110011101001101101001111111110111100100010110)))
(assert (= r (fp #b1 #b00101011001 #b1100000110011101001101101001111111110111100100010110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
