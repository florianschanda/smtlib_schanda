(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.38361002275400668537486126297153532505035400390625p-845 {+ 1727625955530532 -845 (5.89749e-255)}
; Y = -1.9207587474084977241517435686546377837657928466796875p364 {- 4146728751727035 364 (-7.21757e+109)}
; 1.38361002275400668537486126297153532505035400390625p-845 m -1.9207587474084977241517435686546377837657928466796875p364 == -1.9207587474084977241517435686546377837657928466796875p364
; [HW: -1.9207587474084977241517435686546377837657928466796875p364] 

; mpf : - 4146728751727035 364
; mpfd: - 4146728751727035 364 (-7.21757e+109) class: Neg. norm. non-zero
; hwf : - 4146728751727035 364 (-7.21757e+109) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110010 #b0110001000110100010001000011011000100101011100100100)))
(assert (= y (fp #b1 #b10101101011 #b1110101110110110110110000110001110100000000110111011)))
(assert (= r (fp #b1 #b10101101011 #b1110101110110110110110000110001110100000000110111011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
