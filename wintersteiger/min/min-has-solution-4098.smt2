(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9257757851430328255304402773617766797542572021484375p911 {- 4169323480998791 911 (-3.33374e+274)}
; Y = -1.21069351391325330524750825134105980396270751953125p886 {- 948879230749108 886 (-6.24612e+266)}
; -1.9257757851430328255304402773617766797542572021484375p911 m -1.21069351391325330524750825134105980396270751953125p886 == -1.9257757851430328255304402773617766797542572021484375p911
; [HW: -1.9257757851430328255304402773617766797542572021484375p911] 

; mpf : - 4169323480998791 911
; mpfd: - 4169323480998791 911 (-3.33374e+274) class: Neg. norm. non-zero
; hwf : - 4169323480998791 911 (-3.33374e+274) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001110 #b1110110011111111101001000101000010011110001110000111)))
(assert (= y (fp #b1 #b11101110101 #b0011010111110000000000101001011110111100100110110100)))
(assert (= r (fp #b1 #b11110001110 #b1110110011111111101001000101000010011110001110000111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
