(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2425302033976988180796752203605137765407562255859375p-209 {+ 1092258933647967 -209 (1.51021e-063)}
; Y = -1.86051918172845187626762708532623946666717529296875p799 {- 3875433866177420 799 (-6.20298e+240)}
; 1.2425302033976988180796752203605137765407562255859375p-209 m -1.86051918172845187626762708532623946666717529296875p799 == -1.86051918172845187626762708532623946666717529296875p799
; [HW: -1.86051918172845187626762708532623946666717529296875p799] 

; mpf : - 3875433866177420 799
; mpfd: - 3875433866177420 799 (-6.20298e+240) class: Neg. norm. non-zero
; hwf : - 3875433866177420 799 (-6.20298e+240) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100101110 #b0011111000010110011101011001101111100010101001011111)))
(assert (= y (fp #b1 #b11100011110 #b1101110001001010111111000010111100011010101110001100)))
(assert (= r (fp #b1 #b11100011110 #b1101110001001010111111000010111100011010101110001100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
