(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6046677040972674443963796875323168933391571044921875p118 {- 2723181246855427 118 (-5.33242e+035)}
; Y = 1.2574154714567187252072244518785737454891204833984375p755 {+ 1159296221331879 755 (2.38301e+227)}
; -1.6046677040972674443963796875323168933391571044921875p118 m 1.2574154714567187252072244518785737454891204833984375p755 == -1.6046677040972674443963796875323168933391571044921875p118
; [HW: -1.6046677040972674443963796875323168933391571044921875p118] 

; mpf : - 2723181246855427 118
; mpfd: - 2723181246855427 118 (-5.33242e+035) class: Neg. norm. non-zero
; hwf : - 2723181246855427 118 (-5.33242e+035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001110101 #b1001101011001011100000001010111000001011100100000011)))
(assert (= y (fp #b0 #b11011110010 #b0100000111100101111110101111011101100100000110100111)))
(assert (= r (fp #b1 #b10001110101 #b1001101011001011100000001010111000001011100100000011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
