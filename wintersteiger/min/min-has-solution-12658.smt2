(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1379210966710733288209667080081999301910400390625p-799 {- 621141399574376 -799 (-3.41307e-241)}
; Y = 1.9317021630754316330325082162744365632534027099609375p841 {+ 4196013514446799 841 (2.83248e+253)}
; -1.1379210966710733288209667080081999301910400390625p-799 m 1.9317021630754316330325082162744365632534027099609375p841 == -1.1379210966710733288209667080081999301910400390625p-799
; [HW: -1.1379210966710733288209667080081999301910400390625p-799] 

; mpf : - 621141399574376 -799
; mpfd: - 621141399574376 -799 (-3.41307e-241) class: Neg. norm. non-zero
; hwf : - 621141399574376 -799 (-3.41307e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011100000 #b0010001101001110110011000000011110100001011101101000)))
(assert (= y (fp #b0 #b11101001000 #b1110111010000100000010000111000000000101011111001111)))
(assert (= r (fp #b1 #b00011100000 #b0010001101001110110011000000011110100001011101101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
