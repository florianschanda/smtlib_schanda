(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.32942936051596038993238835246302187442779541015625p186 {+ 1483617945264580 186 (1.3039e+056)}
; Y = 1.2370337402211204480551032247603870928287506103515625p-264 {+ 1067505064134073 -264 (4.17314e-080)}
; 1.32942936051596038993238835246302187442779541015625p186 m 1.2370337402211204480551032247603870928287506103515625p-264 == 1.2370337402211204480551032247603870928287506103515625p-264
; [HW: 1.2370337402211204480551032247603870928287506103515625p-264] 

; mpf : + 1067505064134073 -264
; mpfd: + 1067505064134073 -264 (4.17314e-080) class: Pos. norm. non-zero
; hwf : + 1067505064134073 -264 (4.17314e-080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111001 #b0101010001010101011110111000100111000010000111000100)))
(assert (= y (fp #b0 #b01011110111 #b0011110010101110001111100100001001001100010110111001)))
(assert (= r (fp #b0 #b01011110111 #b0011110010101110001111100100001001001100010110111001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
