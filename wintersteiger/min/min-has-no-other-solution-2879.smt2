(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9656166728909558738536134114838205277919769287109375p181 {- 4348750888214447 181 (-6.0246e+054)}
; Y = -1.671670919051895243256922185537405312061309814453125p-668 {- 3024936900757714 -668 (-1.36494e-201)}
; -1.9656166728909558738536134114838205277919769287109375p181 m -1.671670919051895243256922185537405312061309814453125p-668 == -1.9656166728909558738536134114838205277919769287109375p181
; [HW: -1.9656166728909558738536134114838205277919769287109375p181] 

; mpf : - 4348750888214447 181
; mpfd: - 4348750888214447 181 (-6.0246e+054) class: Neg. norm. non-zero
; hwf : - 4348750888214447 181 (-6.0246e+054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110100 #b1111011100110010101001110111111010001001111110101111)))
(assert (= y (fp #b1 #b00101100011 #b1010101111110010101000000001011100000000100011010010)))
(assert (= r (fp #b1 #b10010110100 #b1111011100110010101001110111111010001001111110101111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
