(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.02393829788767476429711678065359592437744140625p693 {- 107808509446816 693 (-4.20786e+208)}
; Y = -1.063197031075191034688032232224941253662109375p-638 {- 284614125601152 -638 (-9.3213e-193)}
; -1.02393829788767476429711678065359592437744140625p693 m -1.063197031075191034688032232224941253662109375p-638 == -1.02393829788767476429711678065359592437744140625p693
; [HW: -1.02393829788767476429711678065359592437744140625p693] 

; mpf : - 107808509446816 693
; mpfd: - 107808509446816 693 (-4.20786e+208) class: Neg. norm. non-zero
; hwf : - 107808509446816 693 (-4.20786e+208) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110100 #b0000011000100000110100011111111010001100101010100000)))
(assert (= y (fp #b1 #b00110000001 #b0001000000101101101011100011110110101100000110000000)))
(assert (= r (fp #b1 #b11010110100 #b0000011000100000110100011111111010001100101010100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
