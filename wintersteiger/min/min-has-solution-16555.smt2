(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.091132911813211148199798117275349795818328857421875p270 {- 410426147683166 270 (-2.07003e+081)}
; Y = 1.079711811369215457290238191490061581134796142578125p-672 {+ 358990083979426 -672 (5.50999e-203)}
; -1.091132911813211148199798117275349795818328857421875p270 m 1.079711811369215457290238191490061581134796142578125p-672 == -1.091132911813211148199798117275349795818328857421875p270
; [HW: -1.091132911813211148199798117275349795818328857421875p270] 

; mpf : - 410426147683166 270
; mpfd: - 410426147683166 270 (-2.07003e+081) class: Neg. norm. non-zero
; hwf : - 410426147683166 270 (-2.07003e+081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001101 #b0001011101010100011111001000101111010011101101011110)))
(assert (= y (fp #b0 #b00101011111 #b0001010001100111111111100100011011101111100010100010)))
(assert (= r (fp #b1 #b10100001101 #b0001011101010100011111001000101111010011101101011110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
