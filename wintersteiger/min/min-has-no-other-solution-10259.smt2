(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1688282214228300492919743192032910883426666259765625p983 {- 760334715089481 983 (-9.55513e+295)}
; Y = 1.96150558670765828850335310562513768672943115234375p370 {+ 4330236202011260 370 (4.71724e+111)}
; -1.1688282214228300492919743192032910883426666259765625p983 m 1.96150558670765828850335310562513768672943115234375p370 == -1.1688282214228300492919743192032910883426666259765625p983
; [HW: -1.1688282214228300492919743192032910883426666259765625p983] 

; mpf : - 760334715089481 983
; mpfd: - 760334715089481 983 (-9.55513e+295) class: Neg. norm. non-zero
; hwf : - 760334715089481 983 (-9.55513e+295) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010110 #b0010101100111000010100111000100110100111001001001001)))
(assert (= y (fp #b0 #b10101110001 #b1111011000100101001110101110100111010100101001111100)))
(assert (= r (fp #b1 #b11111010110 #b0010101100111000010100111000100110100111001001001001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
