(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8244753871040939596781527143321000039577484130859375p-777 {- 3713107046138143 -777 (-2.29526e-234)}
; Y = -1.63159558178565067265708421473391354084014892578125p274 {- 2844453626778708 274 (-4.95258e+082)}
; -1.8244753871040939596781527143321000039577484130859375p-777 m -1.63159558178565067265708421473391354084014892578125p274 == -1.63159558178565067265708421473391354084014892578125p274
; [HW: -1.63159558178565067265708421473391354084014892578125p274] 

; mpf : - 2844453626778708 274
; mpfd: - 2844453626778708 274 (-4.95258e+082) class: Neg. norm. non-zero
; hwf : - 2844453626778708 274 (-4.95258e+082) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110110 #b1101001100010000110100011010011111111000000100011111)))
(assert (= y (fp #b1 #b10100010001 #b1010000110110000001111111000000000010001010001010100)))
(assert (= r (fp #b1 #b10100010001 #b1010000110110000001111111000000000010001010001010100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
