(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8496958725428969128046219339012168347835540771484375p-101 {- 3826690014962439 -101 (-7.29576e-031)}
; Y = -1.02332457382643138288358386489562690258026123046875p-695 {- 105044541993292 -695 (-6.22539e-210)}
; -1.8496958725428969128046219339012168347835540771484375p-101 m -1.02332457382643138288358386489562690258026123046875p-695 == -1.8496958725428969128046219339012168347835540771484375p-101
; [HW: -1.8496958725428969128046219339012168347835540771484375p-101] 

; mpf : - 3826690014962439 -101
; mpfd: - 3826690014962439 -101 (-7.29576e-031) class: Neg. norm. non-zero
; hwf : - 3826690014962439 -101 (-7.29576e-031) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110011010 #b1101100110000101101010110011000000011110001100000111)))
(assert (= y (fp #b1 #b00101001000 #b0000010111111000100110010110100111000111000101001100)))
(assert (= r (fp #b1 #b01110011010 #b1101100110000101101010110011000000011110001100000111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
