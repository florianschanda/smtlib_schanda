(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8505428106113381847563914561760611832141876220703125p946 {- 3830504284931877 946 (-1.10072e+285)}
; Y = 1.39127825864892429308383725583553314208984375p79 {+ 1762160619849472 79 (8.40976e+023)}
; -1.8505428106113381847563914561760611832141876220703125p946 m 1.39127825864892429308383725583553314208984375p79 == -1.8505428106113381847563914561760611832141876220703125p946
; [HW: -1.8505428106113381847563914561760611832141876220703125p946] 

; mpf : - 3830504284931877 946
; mpfd: - 3830504284931877 946 (-1.10072e+285) class: Neg. norm. non-zero
; hwf : - 3830504284931877 946 (-1.10072e+285) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110001 #b1101100110111101001011000111001101101100011100100101)))
(assert (= y (fp #b0 #b10001001110 #b0110010000101010110011111101110010001000011100000000)))
(assert (= r (fp #b1 #b11110110001 #b1101100110111101001011000111001101101100011100100101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
