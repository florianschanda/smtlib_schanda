(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.62557120733369320220162990153767168521881103515625p615 {- 2817322256241732 615 (-2.21031e+185)}
; Y = -1.8779017043345345161498016750556416809558868408203125p-628 {- 3953717788508933 -628 (-1.68591e-189)}
; -1.62557120733369320220162990153767168521881103515625p615 m -1.8779017043345345161498016750556416809558868408203125p-628 == -1.62557120733369320220162990153767168521881103515625p615
; [HW: -1.62557120733369320220162990153767168521881103515625p615] 

; mpf : - 2817322256241732 615
; mpfd: - 2817322256241732 615 (-2.21031e+185) class: Neg. norm. non-zero
; hwf : - 2817322256241732 615 (-2.21031e+185) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100110 #b1010000000100101011011110100010011010001010001000100)))
(assert (= y (fp #b1 #b00110001011 #b1110000010111110001010101000010100111000001100000101)))
(assert (= r (fp #b1 #b11001100110 #b1010000000100101011011110100010011010001010001000100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
