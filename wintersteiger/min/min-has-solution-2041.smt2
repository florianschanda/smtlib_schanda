(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5485610032497874044565833173692226409912109375p34 {- 2470499129825728 34 (-2.66041e+010)}
; Y = -1.1060300617363265640591407645842991769313812255859375p-268 {- 477516946525791 -268 (-2.332e-081)}
; -1.5485610032497874044565833173692226409912109375p34 m -1.1060300617363265640591407645842991769313812255859375p-268 == -1.5485610032497874044565833173692226409912109375p34
; [HW: -1.5485610032497874044565833173692226409912109375p34] 

; mpf : - 2470499129825728 34
; mpfd: - 2470499129825728 34 (-2.66041e+010) class: Neg. norm. non-zero
; hwf : - 2470499129825728 34 (-2.66041e+010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100001 #b1000110001101110011111100111000011010001100111000000)))
(assert (= y (fp #b1 #b01011110011 #b0001101100100100110010010011111110001100111001011111)))
(assert (= r (fp #b1 #b10000100001 #b1000110001101110011111100111000011010001100111000000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
