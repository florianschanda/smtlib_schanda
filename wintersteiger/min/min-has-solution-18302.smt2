(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.242528207456563560384665834135375916957855224609375p189 {+ 1092249944728214 189 (9.74934e+056)}
; Y = 1.6625977412993029336263361983583308756351470947265625p377 {+ 2984074940812073 377 (5.11794e+113)}
; 1.242528207456563560384665834135375916957855224609375p189 m 1.6625977412993029336263361983583308756351470947265625p377 == 1.242528207456563560384665834135375916957855224609375p189
; [HW: 1.242528207456563560384665834135375916957855224609375p189] 

; mpf : + 1092249944728214 189
; mpfd: + 1092249944728214 189 (9.74934e+056) class: Pos. norm. non-zero
; hwf : + 1092249944728214 189 (9.74934e+056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111100 #b0011111000010110010101000001111101100010001010010110)))
(assert (= y (fp #b0 #b10101111000 #b1010100110100000000000010110110101001000101100101001)))
(assert (= r (fp #b0 #b10010111100 #b0011111000010110010101000001111101100010001010010110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
