(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9335908325670152496655873619602061808109283447265625p252 {- 4204519325665321 252 (-1.39934e+076)}
; Y = -1.828733985549277907267651244183070957660675048828125p-917 {- 3732286068508994 -917 (-1.65061e-276)}
; -1.9335908325670152496655873619602061808109283447265625p252 m -1.828733985549277907267651244183070957660675048828125p-917 == -1.9335908325670152496655873619602061808109283447265625p252
; [HW: -1.9335908325670152496655873619602061808109283447265625p252] 

; mpf : - 4204519325665321 252
; mpfd: - 4204519325665321 252 (-1.39934e+076) class: Neg. norm. non-zero
; hwf : - 4204519325665321 252 (-1.39934e+076) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011111011 #b1110111011111111110011110000110110111000100000101001)))
(assert (= y (fp #b1 #b00001101010 #b1101010000100111111010010001010100000100100101000010)))
(assert (= r (fp #b1 #b10011111011 #b1110111011111111110011110000110110111000100000101001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
