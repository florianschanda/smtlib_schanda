(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2614083156981596989254512664047069847583770751953125p107 {+ 1177278393169781 107 (2.04675e+032)}
; Y = -1.747817022309926304757254911237396299839019775390625p744 {- 3367868463016298 744 (-1.61738e+224)}
; 1.2614083156981596989254512664047069847583770751953125p107 m -1.747817022309926304757254911237396299839019775390625p744 == -1.747817022309926304757254911237396299839019775390625p744
; [HW: -1.747817022309926304757254911237396299839019775390625p744] 

; mpf : - 3367868463016298 744
; mpfd: - 3367868463016298 744 (-1.61738e+224) class: Neg. norm. non-zero
; hwf : - 3367868463016298 744 (-1.61738e+224) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101010 #b0100001011101011101001111100011011010011011101110101)))
(assert (= y (fp #b1 #b11011100111 #b1011111101110000111011111011011000110110100101101010)))
(assert (= r (fp #b1 #b11011100111 #b1011111101110000111011111011011000110110100101101010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
