(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.527485084931218040082967490889132022857666015625p1007 {- 2375581631939728 1007 (-2.09499e+303)}
; Y = -1.7528924398187426536566135837347246706485748291015625p24 {- 3390726111417753 24 (-2.94087e+007)}
; -1.527485084931218040082967490889132022857666015625p1007 m -1.7528924398187426536566135837347246706485748291015625p24 == -1.527485084931218040082967490889132022857666015625p1007
; [HW: -1.527485084931218040082967490889132022857666015625p1007] 

; mpf : - 2375581631939728 1007
; mpfd: - 2375581631939728 1007 (-2.09499e+303) class: Neg. norm. non-zero
; hwf : - 2375581631939728 1007 (-2.09499e+303) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101110 #b1000011100001001010000110011010011101000010010010000)))
(assert (= y (fp #b1 #b10000010111 #b1100000010111101100011110001011001101101010110011001)))
(assert (= r (fp #b1 #b11111101110 #b1000011100001001010000110011010011101000010010010000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
