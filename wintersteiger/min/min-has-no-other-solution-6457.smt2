(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.335564195171986767718408373184502124786376953125p-886 {- 1511246784335440 -886 (-2.58874e-267)}
; Y = 1.036772235752501547523252156679518520832061767578125p980 {+ 165607427232546 980 (1.05945e+295)}
; -1.335564195171986767718408373184502124786376953125p-886 m 1.036772235752501547523252156679518520832061767578125p980 == -1.335564195171986767718408373184502124786376953125p-886
; [HW: -1.335564195171986767718408373184502124786376953125p-886] 

; mpf : - 1511246784335440 -886
; mpfd: - 1511246784335440 -886 (-2.58874e-267) class: Neg. norm. non-zero
; hwf : - 1511246784335440 -886 (-2.58874e-267) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001001 #b0101010111100111100010001111101111111000111001010000)))
(assert (= y (fp #b0 #b11111010011 #b0000100101101001111001111011110111110101001100100010)))
(assert (= r (fp #b1 #b00010001001 #b0101010111100111100010001111101111111000111001010000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
