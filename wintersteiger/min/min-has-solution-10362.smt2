(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.240317358750973486536395284929312765598297119140625p-440 {+ 1082293167321546 -440 (4.36852e-133)}
; Y = 1.7105752045744233580393256488605402410030364990234375p-722 {+ 3200146226540087 -722 (7.75328e-218)}
; 1.240317358750973486536395284929312765598297119140625p-440 m 1.7105752045744233580393256488605402410030364990234375p-722 == 1.7105752045744233580393256488605402410030364990234375p-722
; [HW: 1.7105752045744233580393256488605402410030364990234375p-722] 

; mpf : + 3200146226540087 -722
; mpfd: + 3200146226540087 -722 (7.75328e-218) class: Pos. norm. non-zero
; hwf : + 3200146226540087 -722 (7.75328e-218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001000111 #b0011110110000101011100000011110001111111000111001010)))
(assert (= y (fp #b0 #b00100101101 #b1011010111101000010000011011000011111110111000110111)))
(assert (= r (fp #b0 #b00100101101 #b1011010111101000010000011011000011111110111000110111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
