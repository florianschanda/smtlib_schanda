(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.95467000537824642236728323041461408138275146484375p949 {- 4299451480483260 949 (-9.30121e+285)}
; Y = 1.9212618968119132834004858523258008062839508056640625p766 {+ 4148994735192769 766 (7.45698e+230)}
; -1.95467000537824642236728323041461408138275146484375p949 m 1.9212618968119132834004858523258008062839508056640625p766 == -1.95467000537824642236728323041461408138275146484375p949
; [HW: -1.95467000537824642236728323041461408138275146484375p949] 

; mpf : - 4299451480483260 949
; mpfd: - 4299451480483260 949 (-9.30121e+285) class: Neg. norm. non-zero
; hwf : - 4299451480483260 949 (-9.30121e+285) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110100 #b1111010001100101010000001110001110010010010110111100)))
(assert (= y (fp #b0 #b11011111101 #b1110101111010111110100011101010111011011101011000001)))
(assert (= r (fp #b1 #b11110110100 #b1111010001100101010000001110001110010010010110111100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
