(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1086905008507754732960393084795214235782623291015625p-849 {+ 489498499130265 -849 (2.95355e-256)}
; Y = 1.6452515179167181980091072546201758086681365966796875p706 {+ 2905954495649979 706 (5.53872e+212)}
; 1.1086905008507754732960393084795214235782623291015625p-849 m 1.6452515179167181980091072546201758086681365966796875p706 == 1.1086905008507754732960393084795214235782623291015625p-849
; [HW: 1.1086905008507754732960393084795214235782623291015625p-849] 

; mpf : + 489498499130265 -849
; mpfd: + 489498499130265 -849 (2.95355e-256) class: Pos. norm. non-zero
; hwf : + 489498499130265 -849 (2.95355e-256) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010101110 #b0001101111010011001001000000001010001010001110011001)))
(assert (= y (fp #b0 #b11011000001 #b1010010100101111001101000001011100100101100010111011)))
(assert (= r (fp #b0 #b00010101110 #b0001101111010011001001000000001010001010001110011001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
