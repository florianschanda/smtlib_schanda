(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4705716863362374713375402279780246317386627197265625p501 {+ 2119266471234985 501 (9.62751e+150)}
; Y = -1.3920737538444380998470251142862252891063690185546875p648 {- 1765743211715563 648 (-1.62592e+195)}
; 1.4705716863362374713375402279780246317386627197265625p501 m -1.3920737538444380998470251142862252891063690185546875p648 == -1.3920737538444380998470251142862252891063690185546875p648
; [HW: -1.3920737538444380998470251142862252891063690185546875p648] 

; mpf : - 1765743211715563 648
; mpfd: - 1765743211715563 648 (-1.62592e+195) class: Neg. norm. non-zero
; hwf : - 1765743211715563 648 (-1.62592e+195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110100 #b0111100001110111011000101101001100111100110110101001)))
(assert (= y (fp #b1 #b11010000111 #b0110010001011110111100100000111001100001101111101011)))
(assert (= r (fp #b1 #b11010000111 #b0110010001011110111100100000111001100001101111101011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
