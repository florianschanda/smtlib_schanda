(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8725808813954767373388676787726581096649169921875p930 {+ 3929754932303288 930 (1.69956e+280)}
; Y = 1.4768974460723678365781097454600967466831207275390625p-614 {+ 2147755160425457 -614 (2.17237e-185)}
; 1.8725808813954767373388676787726581096649169921875p930 m 1.4768974460723678365781097454600967466831207275390625p-614 == 1.4768974460723678365781097454600967466831207275390625p-614
; [HW: 1.4768974460723678365781097454600967466831207275390625p-614] 

; mpf : + 2147755160425457 -614
; mpfd: + 2147755160425457 -614 (2.17237e-185) class: Pos. norm. non-zero
; hwf : + 2147755160425457 -614 (2.17237e-185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110100001 #b1101111101100001011101011110110010110101010110111000)))
(assert (= y (fp #b0 #b00110011001 #b0111101000010101111100110111011001101101001111110001)))
(assert (= r (fp #b0 #b00110011001 #b0111101000010101111100110111011001101101001111110001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
