(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.87051098537065119131739265867508947849273681640625p628 {+ 3920432949337188 628 (2.08352e+189)}
; Y = -1.265785804962050509203663750668056309223175048828125p-844 {- 1196992852187458 -844 (-1.07906e-254)}
; 1.87051098537065119131739265867508947849273681640625p628 m -1.265785804962050509203663750668056309223175048828125p-844 == -1.265785804962050509203663750668056309223175048828125p-844
; [HW: -1.265785804962050509203663750668056309223175048828125p-844] 

; mpf : - 1196992852187458 -844
; mpfd: - 1196992852187458 -844 (-1.07906e-254) class: Neg. norm. non-zero
; hwf : - 1196992852187458 -844 (-1.07906e-254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001110011 #b1101111011011001110011101101010011111001110001100100)))
(assert (= y (fp #b1 #b00010110011 #b0100010000001010100010011101110000001101100101000010)))
(assert (= r (fp #b1 #b00010110011 #b0100010000001010100010011101110000001101100101000010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
