(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9693982863602472743735916083096526563167572021484375p-272 {+ 4365781761225607 -272 (2.59522e-082)}
; Y = 1.3901776741163442974169583976618014276027679443359375p-956 {+ 1757204027758655 -956 (2.28241e-288)}
; 1.9693982863602472743735916083096526563167572021484375p-272 m 1.3901776741163442974169583976618014276027679443359375p-956 == 1.3901776741163442974169583976618014276027679443359375p-956
; [HW: 1.3901776741163442974169583976618014276027679443359375p-956] 

; mpf : + 1757204027758655 -956
; mpfd: + 1757204027758655 -956 (2.28241e-288) class: Pos. norm. non-zero
; hwf : + 1757204027758655 -956 (2.28241e-288) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101111 #b1111100000101010011111000111000010110111001110000111)))
(assert (= y (fp #b0 #b00001000011 #b0110001111100010101011110001110111110101100000111111)))
(assert (= r (fp #b0 #b00001000011 #b0110001111100010101011110001110111110101100000111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
