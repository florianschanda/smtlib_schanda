(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -0.279618586223186138539631429011933505535125732421875p-1022 {- 1259290160720606 -1023 (-6.22172e-309)}
; Y = 1.5192800216332515983452822183608077466487884521484375p879 {+ 2338629311928455 879 (6.12356e+264)}
; -0.279618586223186138539631429011933505535125732421875p-1022 m 1.5192800216332515983452822183608077466487884521484375p879 == -0.279618586223186138539631429011933505535125732421875p-1022
; [HW: -0.279618586223186138539631429011933505535125732421875p-1022] 

; mpf : - 1259290160720606 -1023
; mpfd: - 1259290160720606 -1023 (-6.22172e-309) class: Neg. denorm.
; hwf : - 1259290160720606 -1023 (-6.22172e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0100011110010101000101010110101100101110101011011110)))
(assert (= y (fp #b0 #b11101101110 #b1000010011101111100010010001011001100001100010000111)))
(assert (= r (fp #b1 #b00000000000 #b0100011110010101000101010110101100101110101011011110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
