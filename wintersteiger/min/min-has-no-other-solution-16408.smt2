(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2052886987398847562502623986802063882350921630859375p-289 {+ 924538107148319 -289 (1.21178e-087)}
; Y = -1.1328066890251324849714364972896873950958251953125p142 {- 598108155205896 142 (-6.31561e+042)}
; 1.2052886987398847562502623986802063882350921630859375p-289 m -1.1328066890251324849714364972896873950958251953125p142 == -1.1328066890251324849714364972896873950958251953125p142
; [HW: -1.1328066890251324849714364972896873950958251953125p142] 

; mpf : - 598108155205896 142
; mpfd: - 598108155205896 142 (-6.31561e+042) class: Neg. norm. non-zero
; hwf : - 598108155205896 142 (-6.31561e+042) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011110 #b0011010010001101110011001101011101010011100000011111)))
(assert (= y (fp #b1 #b10010001101 #b0010000111111111100111101000001000001101100100001000)))
(assert (= r (fp #b1 #b10010001101 #b0010000111111111100111101000001000001101100100001000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
