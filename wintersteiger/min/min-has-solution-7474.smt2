(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.789250951828781577290783388889394700527191162109375p-514 {+ 3554470292557910 -514 (3.33621e-155)}
; Y = -1.697291522199833480044617317616939544677734375p771 {- 3140321839547776 771 (-2.10806e+232)}
; 1.789250951828781577290783388889394700527191162109375p-514 m -1.697291522199833480044617317616939544677734375p771 == -1.697291522199833480044617317616939544677734375p771
; [HW: -1.697291522199833480044617317616939544677734375p771] 

; mpf : - 3140321839547776 771
; mpfd: - 3140321839547776 771 (-2.10806e+232) class: Neg. norm. non-zero
; hwf : - 3140321839547776 771 (-2.10806e+232) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111101 #b1100101000001100010110011011001001110001000001010110)))
(assert (= y (fp #b1 #b11100000010 #b1011001010000001101100100111101110100000010110000000)))
(assert (= r (fp #b1 #b11100000010 #b1011001010000001101100100111101110100000010110000000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
