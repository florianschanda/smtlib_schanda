(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1803014727631435665244907795567996799945831298828125p-703 {- 812005645550445 -703 (-2.80483e-212)}
; Y = -1.65917018283290484959024979616515338420867919921875p-843 {- 2968638589780012 -843 (-2.82882e-254)}
; -1.1803014727631435665244907795567996799945831298828125p-703 m -1.65917018283290484959024979616515338420867919921875p-843 == -1.1803014727631435665244907795567996799945831298828125p-703
; [HW: -1.1803014727631435665244907795567996799945831298828125p-703] 

; mpf : - 812005645550445 -703
; mpfd: - 812005645550445 -703 (-2.80483e-212) class: Neg. norm. non-zero
; hwf : - 812005645550445 -703 (-2.80483e-212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101000000 #b0010111000101000001111001100000011110000001101101101)))
(assert (= y (fp #b1 #b00010110100 #b1010100010111111011000001000100111000100000000101100)))
(assert (= r (fp #b1 #b00101000000 #b0010111000101000001111001100000011110000001101101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
