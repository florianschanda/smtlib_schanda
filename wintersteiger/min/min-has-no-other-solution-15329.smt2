(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8570981356710720699965122548746876418590545654296875p416 {+ 3860026844428187 416 (3.14277e+125)}
; Y = 1.0280543374415944679611811807262711226940155029296875p-845 {+ 126345503648091 -845 (4.38197e-255)}
; 1.8570981356710720699965122548746876418590545654296875p416 m 1.0280543374415944679611811807262711226940155029296875p-845 == 1.0280543374415944679611811807262711226940155029296875p-845
; [HW: 1.0280543374415944679611811807262711226940155029296875p-845] 

; mpf : + 126345503648091 -845
; mpfd: + 126345503648091 -845 (4.38197e-255) class: Pos. norm. non-zero
; hwf : + 126345503648091 -845 (4.38197e-255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011111 #b1101101101101010110010001000111000101011011110011011)))
(assert (= y (fp #b0 #b00010110010 #b0000011100101110100100011010110111010010100101011011)))
(assert (= r (fp #b0 #b00010110010 #b0000011100101110100100011010110111010010100101011011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
