(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5595034524428437183729556636535562574863433837890625p-1013 {+ 2519779539934097 -1013 (1.77665e-305)}
; Y = 1.8853319769562462138168257297365926206111907958984375p248 {+ 3987180761519335 248 (8.5276e+074)}
; 1.5595034524428437183729556636535562574863433837890625p-1013 m 1.8853319769562462138168257297365926206111907958984375p248 == 1.5595034524428437183729556636535562574863433837890625p-1013
; [HW: 1.5595034524428437183729556636535562574863433837890625p-1013] 

; mpf : + 2519779539934097 -1013
; mpfd: + 2519779539934097 -1013 (1.77665e-305) class: Pos. norm. non-zero
; hwf : + 2519779539934097 -1013 (1.77665e-305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000001010 #b1000111100111011100111100100011000111101101110010001)))
(assert (= y (fp #b0 #b10011110111 #b1110001010100101000111011100111100100001010011100111)))
(assert (= r (fp #b0 #b00000001010 #b1000111100111011100111100100011000111101101110010001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
