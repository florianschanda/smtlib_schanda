(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4041047214747692795100419971277005970478057861328125p-1019 {+ 1819925873052429 -1019 (2.49939e-307)}
; Y = 1.524287636577261739745381419197656214237213134765625p-953 {+ 2361181604724314 -953 (2.00208e-287)}
; 1.4041047214747692795100419971277005970478057861328125p-1019 m 1.524287636577261739745381419197656214237213134765625p-953 == 1.4041047214747692795100419971277005970478057861328125p-1019
; [HW: 1.4041047214747692795100419971277005970478057861328125p-1019] 

; mpf : + 1819925873052429 -1019
; mpfd: + 1819925873052429 -1019 (2.49939e-307) class: Pos. norm. non-zero
; hwf : + 1819925873052429 -1019 (2.49939e-307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000100 #b0110011101110011011010000011001011100100101100001101)))
(assert (= y (fp #b0 #b00001000110 #b1000011000110111101101101110110011001011111001011010)))
(assert (= r (fp #b0 #b00000000100 #b0110011101110011011010000011001011100100101100001101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
