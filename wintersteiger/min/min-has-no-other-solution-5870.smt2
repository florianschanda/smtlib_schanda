(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.386569093222683957122853826149366796016693115234375p-168 {+ 1740952424190630 -168 (3.70597e-051)}
; Y = -1.003064343478514697238779262988828122615814208984375p-712 {- 13800576147974 -712 (-4.65556e-215)}
; 1.386569093222683957122853826149366796016693115234375p-168 m -1.003064343478514697238779262988828122615814208984375p-712 == -1.003064343478514697238779262988828122615814208984375p-712
; [HW: -1.003064343478514697238779262988828122615814208984375p-712] 

; mpf : - 13800576147974 -712
; mpfd: - 13800576147974 -712 (-4.65556e-215) class: Neg. norm. non-zero
; hwf : - 13800576147974 -712 (-4.65556e-215) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010111 #b0110001011110110001100010010110100001001001010100110)))
(assert (= y (fp #b1 #b00100110111 #b0000000011001000110100110010011100000110001000000110)))
(assert (= r (fp #b1 #b00100110111 #b0000000011001000110100110010011100000110001000000110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
