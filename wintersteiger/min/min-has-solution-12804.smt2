(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.613835316670656272464157154900021851062774658203125p808 {- 2764468503424818 808 (-2.75484e+243)}
; Y = -1.3620408556421683687887025371310301125049591064453125p53 {- 1630487062562965 53 (-1.22682e+016)}
; -1.613835316670656272464157154900021851062774658203125p808 m -1.3620408556421683687887025371310301125049591064453125p53 == -1.613835316670656272464157154900021851062774658203125p808
; [HW: -1.613835316670656272464157154900021851062774658203125p808] 

; mpf : - 2764468503424818 808
; mpfd: - 2764468503424818 808 (-2.75484e+243) class: Neg. norm. non-zero
; hwf : - 2764468503424818 808 (-2.75484e+243) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100100111 #b1001110100100100010011111011001000111010111100110010)))
(assert (= y (fp #b1 #b10000110100 #b0101110010101110101101011010001011001100100010010101)))
(assert (= r (fp #b1 #b11100100111 #b1001110100100100010011111011001000111010111100110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
