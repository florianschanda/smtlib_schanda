(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8823091742299684625550071359612047672271728515625p435 {+ 3973567268287656 435 (1.67009e+131)}
; Y = 1.395678714479875903720085261738859117031097412109375p-450 {+ 1781978511090006 -450 (4.80051e-136)}
; 1.8823091742299684625550071359612047672271728515625p435 m 1.395678714479875903720085261738859117031097412109375p-450 == 1.395678714479875903720085261738859117031097412109375p-450
; [HW: 1.395678714479875903720085261738859117031097412109375p-450] 

; mpf : + 1781978511090006 -450
; mpfd: + 1781978511090006 -450 (4.80051e-136) class: Pos. norm. non-zero
; hwf : + 1781978511090006 -450 (4.80051e-136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110010 #b1110000111011111000000111001100001000111010010101000)))
(assert (= y (fp #b0 #b01000111101 #b0110010101001011001100110100001001101010000101010110)))
(assert (= r (fp #b0 #b01000111101 #b0110010101001011001100110100001001101010000101010110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
