(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.740470451782787808525654327240772545337677001953125p-663 {+ 3334782450727826 -663 (4.54757e-200)}
; Y = -1.5302884127704057259933279055985622107982635498046875p701 {- 2388206698151691 701 (-1.60991e+211)}
; 1.740470451782787808525654327240772545337677001953125p-663 m -1.5302884127704057259933279055985622107982635498046875p701 == -1.5302884127704057259933279055985622107982635498046875p701
; [HW: -1.5302884127704057259933279055985622107982635498046875p701] 

; mpf : - 2388206698151691 701
; mpfd: - 2388206698151691 701 (-1.60991e+211) class: Neg. norm. non-zero
; hwf : - 2388206698151691 701 (-1.60991e+211) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101000 #b1011110110001111011110001011011000001111101110010010)))
(assert (= y (fp #b1 #b11010111100 #b1000011111000000111110110011111001001011111100001011)))
(assert (= r (fp #b1 #b11010111100 #b1000011111000000111110110011111001001011111100001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
