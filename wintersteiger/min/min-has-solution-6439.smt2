(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0261350426983033568006931091076694428920745849609375p869 {+ 117701768557391 869 (4.03897e+261)}
; Y = 1.816288962977955723232525997445918619632720947265625p854 {+ 3676238669494170 854 (2.18173e+257)}
; 1.0261350426983033568006931091076694428920745849609375p869 m 1.816288962977955723232525997445918619632720947265625p854 == 1.816288962977955723232525997445918619632720947265625p854
; [HW: 1.816288962977955723232525997445918619632720947265625p854] 

; mpf : + 3676238669494170 854
; mpfd: + 3676238669494170 854 (2.18173e+257) class: Pos. norm. non-zero
; hwf : + 3676238669494170 854 (2.18173e+257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100100 #b0000011010110000110010010100000110101011001101001111)))
(assert (= y (fp #b0 #b11101010101 #b1101000011111000010100000100000000010011011110011010)))
(assert (= r (fp #b0 #b11101010101 #b1101000011111000010100000100000000010011011110011010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
