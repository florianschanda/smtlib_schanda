(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.284994086240801802745181703357957303524017333984375p-267 {+ 1283499260596870 -267 (5.41866e-081)}
; Y = -1.7126651679779738568498714812449179589748382568359375p223 {- 3209558584945535 223 (-2.30867e+067)}
; 1.284994086240801802745181703357957303524017333984375p-267 m -1.7126651679779738568498714812449179589748382568359375p223 == -1.7126651679779738568498714812449179589748382568359375p223
; [HW: -1.7126651679779738568498714812449179589748382568359375p223] 

; mpf : - 3209558584945535 223
; mpfd: - 3209558584945535 223 (-2.30867e+067) class: Neg. norm. non-zero
; hwf : - 3209558584945535 223 (-2.30867e+067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110100 #b0100100011110101010111110101011111110101001010000110)))
(assert (= y (fp #b1 #b10011011110 #b1011011001110001001110010111010101110110101101111111)))
(assert (= r (fp #b1 #b10011011110 #b1011011001110001001110010111010101110110101101111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
