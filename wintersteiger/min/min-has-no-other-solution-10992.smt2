(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1704986836995681098727573044016025960445404052734375p421 {- 767857808376535 421 (-6.33868e+126)}
; Y = 1.00925033121765661547897252603434026241302490234375p295 {+ 41659788224892 295 (6.42462e+088)}
; -1.1704986836995681098727573044016025960445404052734375p421 m 1.00925033121765661547897252603434026241302490234375p295 == -1.1704986836995681098727573044016025960445404052734375p421
; [HW: -1.1704986836995681098727573044016025960445404052734375p421] 

; mpf : - 767857808376535 421
; mpfd: - 767857808376535 421 (-6.33868e+126) class: Neg. norm. non-zero
; hwf : - 767857808376535 421 (-6.33868e+126) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100100 #b0010101110100101110011010011111010000000001011010111)))
(assert (= y (fp #b0 #b10100100110 #b0000001001011110001110101100111000001110100101111100)))
(assert (= r (fp #b1 #b10110100100 #b0010101110100101110011010011111010000000001011010111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
