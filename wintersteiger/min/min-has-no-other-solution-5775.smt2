(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5486460796342769175026887751300819218158721923828125p-37 {+ 2470882279799213 -37 (1.12679e-011)}
; Y = 1.2405432003071557023332616154220886528491973876953125p883 {+ 1083310267269813 883 (8.00015e+265)}
; 1.5486460796342769175026887751300819218158721923828125p-37 m 1.2405432003071557023332616154220886528491973876953125p883 == 1.5486460796342769175026887751300819218158721923828125p-37
; [HW: 1.5486460796342769175026887751300819218158721923828125p-37] 

; mpf : + 2470882279799213 -37
; mpfd: + 2470882279799213 -37 (1.12679e-011) class: Pos. norm. non-zero
; hwf : + 2470882279799213 -37 (1.12679e-011) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011010 #b1000110001110100000100011100100100011011100110101101)))
(assert (= y (fp #b0 #b11101110010 #b0011110110010100001111010011101010011000001010110101)))
(assert (= r (fp #b0 #b01111011010 #b1000110001110100000100011100100100011011100110101101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
