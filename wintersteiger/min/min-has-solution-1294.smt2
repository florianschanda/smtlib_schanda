(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2376887777513603250412188572227023541927337646484375p327 {+ 1070455090911175 327 (3.38392e+098)}
; Y = -1.9531259524288986373363741222419776022434234619140625p-333 {- 4292497684195937 -333 (-1.1162e-100)}
; 1.2376887777513603250412188572227023541927337646484375p327 m -1.9531259524288986373363741222419776022434234619140625p-333 == -1.9531259524288986373363741222419776022434234619140625p-333
; [HW: -1.9531259524288986373363741222419776022434234619140625p-333] 

; mpf : - 4292497684195937 -333
; mpfd: - 4292497684195937 -333 (-1.1162e-100) class: Neg. norm. non-zero
; hwf : - 4292497684195937 -333 (-1.1162e-100) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000110 #b0011110011011001001010111111011100010001011111000111)))
(assert (= y (fp #b1 #b01010110010 #b1111010000000000000011111111101010100110101001100001)))
(assert (= r (fp #b1 #b01010110010 #b1111010000000000000011111111101010100110101001100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
