(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.376059839960367181532774338847957551479339599609375p-962 {- 1693622955114518 -962 (-3.53006e-290)}
; Y = -1.041051202110781392917715493240393698215484619140625p-501 {- 184878178529226 -501 (-1.59017e-151)}
; -1.376059839960367181532774338847957551479339599609375p-962 m -1.041051202110781392917715493240393698215484619140625p-501 == -1.041051202110781392917715493240393698215484619140625p-501
; [HW: -1.041051202110781392917715493240393698215484619140625p-501] 

; mpf : - 184878178529226 -501
; mpfd: - 184878178529226 -501 (-1.59017e-151) class: Neg. norm. non-zero
; hwf : - 184878178529226 -501 (-1.59017e-151) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111101 #b0110000001000101011101010010100111111000000000010110)))
(assert (= y (fp #b1 #b01000001010 #b0000101010000010010101001110001010000110111111001010)))
(assert (= r (fp #b1 #b01000001010 #b0000101010000010010101001110001010000110111111001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
