(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7325905514460397949250136662158183753490447998046875p-758 {+ 3299294534507531 -758 (1.14277e-228)}
; Y = -1.0980839428715800654146050874260254204273223876953125p-245 {- 441730808567477 -245 (-1.94217e-074)}
; 1.7325905514460397949250136662158183753490447998046875p-758 m -1.0980839428715800654146050874260254204273223876953125p-245 == -1.0980839428715800654146050874260254204273223876953125p-245
; [HW: -1.0980839428715800654146050874260254204273223876953125p-245] 

; mpf : - 441730808567477 -245
; mpfd: - 441730808567477 -245 (-1.94217e-074) class: Neg. norm. non-zero
; hwf : - 441730808567477 -245 (-1.94217e-074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001001 #b1011101110001011000011011110101111010001110000001011)))
(assert (= y (fp #b1 #b01100001010 #b0001100100011100000001110111111011100101011010110101)))
(assert (= r (fp #b1 #b01100001010 #b0001100100011100000001110111111011100101011010110101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
