(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2145029501221766832230741783860139548778533935546875p-34 {+ 966035406240107 -34 (7.06934e-011)}
; Y = -1.9454446882436531307547511460143141448497772216796875p734 {- 4257904345673531 734 (-1.75807e+221)}
; 1.2145029501221766832230741783860139548778533935546875p-34 m -1.9454446882436531307547511460143141448497772216796875p734 == -1.9454446882436531307547511460143141448497772216796875p734
; [HW: -1.9454446882436531307547511460143141448497772216796875p734] 

; mpf : - 4257904345673531 734
; mpfd: - 4257904345673531 734 (-1.75807e+221) class: Neg. norm. non-zero
; hwf : - 4257904345673531 734 (-1.75807e+221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011101 #b0011011011101001101010100101001110101011100101101011)))
(assert (= y (fp #b1 #b11011011101 #b1111001000001000101010011100000000101110111100111011)))
(assert (= r (fp #b1 #b11011011101 #b1111001000001000101010011100000000101110111100111011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
