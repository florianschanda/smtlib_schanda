(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0105501960519343018773952280753292143344879150390625p196 {+ 47513859008177 196 (1.01493e+059)}
; Y = -1.295385967013071848441541078500449657440185546875p562 {- 1330300130970544 562 (-1.9555e+169)}
; 1.0105501960519343018773952280753292143344879150390625p196 m -1.295385967013071848441541078500449657440185546875p562 == -1.295385967013071848441541078500449657440185546875p562
; [HW: -1.295385967013071848441541078500449657440185546875p562] 

; mpf : - 1330300130970544 562
; mpfd: - 1330300130970544 562 (-1.9555e+169) class: Neg. norm. non-zero
; hwf : - 1330300130970544 562 (-1.9555e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000011 #b0000001010110011011010101110101100000010011010110001)))
(assert (= y (fp #b1 #b11000110001 #b0100101110011110011010100010110000000100101110110000)))
(assert (= r (fp #b1 #b11000110001 #b0100101110011110011010100010110000000100101110110000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
