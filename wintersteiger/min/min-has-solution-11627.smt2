(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.26644831296417681443244873662479221820831298828125p-225 {+ 1199976522978964 -225 (2.34876e-068)}
; Y = 1.090715107375349379736917398986406624317169189453125p-930 {+ 408544523772498 -930 (1.20175e-280)}
; 1.26644831296417681443244873662479221820831298828125p-225 m 1.090715107375349379736917398986406624317169189453125p-930 == 1.090715107375349379736917398986406624317169189453125p-930
; [HW: 1.090715107375349379736917398986406624317169189453125p-930] 

; mpf : + 408544523772498 -930
; mpfd: + 408544523772498 -930 (1.20175e-280) class: Pos. norm. non-zero
; hwf : + 408544523772498 -930 (1.20175e-280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011110 #b0100010000110101111101001110011001000001011010010100)))
(assert (= y (fp #b0 #b00001011101 #b0001011100111001000110101111001101101110001001010010)))
(assert (= r (fp #b0 #b00001011101 #b0001011100111001000110101111001101101110001001010010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
