(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.222447986015570364770610467530786991119384765625p238 {- 1001816666929040 238 (-5.3997e+071)}
; Y = 1.0539820687883914018811992718838155269622802734375p1009 {+ 243113624880088 1009 (5.78228e+303)}
; -1.222447986015570364770610467530786991119384765625p238 m 1.0539820687883914018811992718838155269622802734375p1009 == -1.222447986015570364770610467530786991119384765625p238
; [HW: -1.222447986015570364770610467530786991119384765625p238] 

; mpf : - 1001816666929040 238
; mpfd: - 1001816666929040 238 (-5.3997e+071) class: Neg. norm. non-zero
; hwf : - 1001816666929040 238 (-5.3997e+071) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101101 #b0011100011110010010110011110100011111111011110010000)))
(assert (= y (fp #b0 #b11111110000 #b0000110111010001110001001101010000000100001111011000)))
(assert (= r (fp #b1 #b10011101101 #b0011100011110010010110011110100011111111011110010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
