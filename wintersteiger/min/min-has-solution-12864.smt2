(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6850047690158993507481000051484443247318267822265625p37 {- 3084987222487017 37 (-2.31585e+011)}
; Y = -1.617542337771082916475506863207556307315826416015625p6 {- 2781163442271354 6 (-103.523)}
; -1.6850047690158993507481000051484443247318267822265625p37 m -1.617542337771082916475506863207556307315826416015625p6 == -1.6850047690158993507481000051484443247318267822265625p37
; [HW: -1.6850047690158993507481000051484443247318267822265625p37] 

; mpf : - 3084987222487017 37
; mpfd: - 3084987222487017 37 (-2.31585e+011) class: Neg. norm. non-zero
; hwf : - 3084987222487017 37 (-2.31585e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100100 #b1010111101011100011110001111100010000110111111101001)))
(assert (= y (fp #b1 #b10000000101 #b1001111000010111010000010011000010011111010001111010)))
(assert (= r (fp #b1 #b10000100100 #b1010111101011100011110001111100010000110111111101001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
