(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.97244511049852366824097771313972771167755126953125p-322 {- 4379503437279412 -322 (-2.30859e-097)}
; Y = 1.3899041113443086903345147220534272491931915283203125p-984 {+ 1755972010560453 -984 (8.50098e-297)}
; -1.97244511049852366824097771313972771167755126953125p-322 m 1.3899041113443086903345147220534272491931915283203125p-984 == -1.97244511049852366824097771313972771167755126953125p-322
; [HW: -1.97244511049852366824097771313972771167755126953125p-322] 

; mpf : - 4379503437279412 -322
; mpfd: - 4379503437279412 -322 (-2.30859e-097) class: Neg. norm. non-zero
; hwf : - 4379503437279412 -322 (-2.30859e-097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111101 #b1111100011110010001010011010101010111111000010110100)))
(assert (= y (fp #b0 #b00000100111 #b0110001111010000110000010111111011001100101111000101)))
(assert (= r (fp #b1 #b01010111101 #b1111100011110010001010011010101010111111000010110100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
