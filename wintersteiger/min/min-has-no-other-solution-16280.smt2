(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.700818788918388779762835838482715189456939697265625p844 {- 3156207236627098 844 (-1.99514e+254)}
; Y = -0.7430431939485917514076618317631073296070098876953125p-1022 {- 3346369051387061 -1023 (-1.65333e-308)}
; -1.700818788918388779762835838482715189456939697265625p844 m -0.7430431939485917514076618317631073296070098876953125p-1022 == -1.700818788918388779762835838482715189456939697265625p844
; [HW: -1.700818788918388779762835838482715189456939697265625p844] 

; mpf : - 3156207236627098 844
; mpfd: - 3156207236627098 844 (-1.99514e+254) class: Neg. norm. non-zero
; hwf : - 3156207236627098 844 (-1.99514e+254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001011 #b1011001101101000110111000011001011010011101010011010)))
(assert (= y (fp #b1 #b00000000000 #b1011111000111000000101000010100110000110010010110101)))
(assert (= r (fp #b1 #b11101001011 #b1011001101101000110111000011001011010011101010011010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
