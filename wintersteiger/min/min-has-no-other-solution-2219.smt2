(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9652263827798923667700137229985557496547698974609375p428 {+ 4346993177815695 428 (1.36223e+129)}
; Y = 1.50016023076803861613370827399194240570068359375p151 {+ 2252521428912480 151 (4.2822e+045)}
; 1.9652263827798923667700137229985557496547698974609375p428 m 1.50016023076803861613370827399194240570068359375p151 == 1.50016023076803861613370827399194240570068359375p151
; [HW: 1.50016023076803861613370827399194240570068359375p151] 

; mpf : + 2252521428912480 151
; mpfd: + 2252521428912480 151 (4.2822e+045) class: Pos. norm. non-zero
; hwf : + 2252521428912480 151 (4.2822e+045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101011 #b1111011100011001000100111000001101000110101010001111)))
(assert (= y (fp #b0 #b10010010110 #b1000000000001010100000000011100111101000100101100000)))
(assert (= r (fp #b0 #b10010010110 #b1000000000001010100000000011100111101000100101100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
