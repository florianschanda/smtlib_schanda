(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.92097638574844875591907111811451613903045654296875p-714 {- 4147708907673740 -714 (-2.22897e-215)}
; Y = 1.0379231857926962678817517371498979628086090087890625p-54 {+ 170790845404689 -54 (5.76163e-017)}
; -1.92097638574844875591907111811451613903045654296875p-714 m 1.0379231857926962678817517371498979628086090087890625p-54 == -1.92097638574844875591907111811451613903045654296875p-714
; [HW: -1.92097638574844875591907111811451613903045654296875p-714] 

; mpf : - 4147708907673740 -714
; mpfd: - 4147708907673740 -714 (-2.22897e-215) class: Neg. norm. non-zero
; hwf : - 4147708907673740 -714 (-2.22897e-215) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110101 #b1110101111000101000110111100000100101101100010001100)))
(assert (= y (fp #b0 #b01111001001 #b0000100110110101010101010111101010111101011000010001)))
(assert (= r (fp #b1 #b00100110101 #b1110101111000101000110111100000100101101100010001100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
