(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1951197214499054144454248671536333858966827392578125p279 {- 878741104814429 279 (-1.16086e+084)}
; Y = 1.4532676789074956413827521828352473676204681396484375p420 {+ 2041336149826887 420 (3.93499e+126)}
; -1.1951197214499054144454248671536333858966827392578125p279 m 1.4532676789074956413827521828352473676204681396484375p420 == -1.1951197214499054144454248671536333858966827392578125p279
; [HW: -1.1951197214499054144454248671536333858966827392578125p279] 

; mpf : - 878741104814429 279
; mpfd: - 878741104814429 279 (-1.16086e+084) class: Neg. norm. non-zero
; hwf : - 878741104814429 279 (-1.16086e+084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010110 #b0011000111110011010111011011011001101110100101011101)))
(assert (= y (fp #b0 #b10110100011 #b0111010000001001010110011100000100111101110101000111)))
(assert (= r (fp #b1 #b10100010110 #b0011000111110011010111011011011001101110100101011101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
