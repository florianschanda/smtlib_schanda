(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0487865084982141983260817141854204237461090087890625p164 {- 219714901493265 164 (-2.45249e+049)}
; Y = -1.489630953633231502664102663402445614337921142578125p165 {- 2205101780331682 165 (-6.96671e+049)}
; -1.0487865084982141983260817141854204237461090087890625p164 m -1.489630953633231502664102663402445614337921142578125p165 == -1.489630953633231502664102663402445614337921142578125p165
; [HW: -1.489630953633231502664102663402445614337921142578125p165] 

; mpf : - 2205101780331682 165
; mpfd: - 2205101780331682 165 (-6.96671e+049) class: Neg. norm. non-zero
; hwf : - 2205101780331682 165 (-6.96671e+049) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100011 #b0000110001111101010001011100101001111100011000010001)))
(assert (= y (fp #b1 #b10010100100 #b0111110101011000011101000100010011110110110010100010)))
(assert (= r (fp #b1 #b10010100100 #b0111110101011000011101000100010011110110110010100010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
