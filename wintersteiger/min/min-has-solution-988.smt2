(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.165215921206640192764325547614134848117828369140625p-668 {- 744066361181898 -668 (-9.51413e-202)}
; Y = -1.150167256281276362273047197959385812282562255859375p390 {- 676293199431606 390 (-2.90041e+117)}
; -1.165215921206640192764325547614134848117828369140625p-668 m -1.150167256281276362273047197959385812282562255859375p390 == -1.150167256281276362273047197959385812282562255859375p390
; [HW: -1.150167256281276362273047197959385812282562255859375p390] 

; mpf : - 676293199431606 390
; mpfd: - 676293199431606 390 (-2.90041e+117) class: Neg. norm. non-zero
; hwf : - 676293199431606 390 (-2.90041e+117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100011 #b0010101001001011100101110011001001011100011011001010)))
(assert (= y (fp #b1 #b10110000101 #b0010011001110001010111000111111010101000011110110110)))
(assert (= r (fp #b1 #b10110000101 #b0010011001110001010111000111111010101000011110110110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
