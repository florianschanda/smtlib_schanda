(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.977509509157328704276324060629121959209442138671875p932 {- 4402311461192062 932 (-7.17917e+280)}
; Y = 1.4729689599363415819510692017502151429653167724609375p772 {+ 2130062831727119 772 (3.6589e+232)}
; -1.977509509157328704276324060629121959209442138671875p932 m 1.4729689599363415819510692017502151429653167724609375p772 == -1.977509509157328704276324060629121959209442138671875p932
; [HW: -1.977509509157328704276324060629121959209442138671875p932] 

; mpf : - 4402311461192062 932
; mpfd: - 4402311461192062 932 (-7.17917e+280) class: Neg. norm. non-zero
; hwf : - 4402311461192062 932 (-7.17917e+280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110100011 #b1111101000111110000100000010110101011100000101111110)))
(assert (= y (fp #b0 #b11100000011 #b0111100100010100011111100110011011110011001000001111)))
(assert (= r (fp #b1 #b11110100011 #b1111101000111110000100000010110101011100000101111110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
