(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1963011009929669370421834173612296581268310546875p-172 {+ 884061565284344 -172 (1.99839e-052)}
; Y = 1.20793954411400417114919036976061761379241943359375p501 {+ 936476453387420 501 (7.90812e+150)}
; 1.1963011009929669370421834173612296581268310546875p-172 m 1.20793954411400417114919036976061761379241943359375p501 == 1.1963011009929669370421834173612296581268310546875p-172
; [HW: 1.1963011009929669370421834173612296581268310546875p-172] 

; mpf : + 884061565284344 -172
; mpfd: + 884061565284344 -172 (1.99839e-052) class: Pos. norm. non-zero
; hwf : + 884061565284344 -172 (1.99839e-052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010011 #b0011001001000000110010011111100011101110111111111000)))
(assert (= y (fp #b0 #b10111110100 #b0011010100111011100001101010010110000011110010011100)))
(assert (= r (fp #b0 #b01101010011 #b0011001001000000110010011111100011101110111111111000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
