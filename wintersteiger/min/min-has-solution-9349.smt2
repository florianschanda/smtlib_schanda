(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5234050405228154456693800966604612767696380615234375p-251 {- 2357206745462391 -251 (-4.21004e-076)}
; Y = -1.1073582074907977190747487838962115347385406494140625p292 {- 483498383250721 292 (-8.81144e+087)}
; -1.5234050405228154456693800966604612767696380615234375p-251 m -1.1073582074907977190747487838962115347385406494140625p292 == -1.1073582074907977190747487838962115347385406494140625p292
; [HW: -1.1073582074907977190747487838962115347385406494140625p292] 

; mpf : - 483498383250721 292
; mpfd: - 483498383250721 292 (-8.81144e+087) class: Neg. norm. non-zero
; hwf : - 483498383250721 292 (-8.81144e+087) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000100 #b1000010111111101110111110110101110011011011001110111)))
(assert (= y (fp #b1 #b10100100011 #b0001101101111011110100111101011000100001010100100001)))
(assert (= r (fp #b1 #b10100100011 #b0001101101111011110100111101011000100001010100100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
