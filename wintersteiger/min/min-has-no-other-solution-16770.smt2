(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4313092855267386394046980058192275464534759521484375p968 {- 1942444337579655 968 (-3.57083e+291)}
; Y = -1.7565868046405679336885441443882882595062255859375p823 {- 3407364051452696 823 (-9.82553e+247)}
; -1.4313092855267386394046980058192275464534759521484375p968 m -1.7565868046405679336885441443882882595062255859375p823 == -1.4313092855267386394046980058192275464534759521484375p968
; [HW: -1.4313092855267386394046980058192275464534759521484375p968] 

; mpf : - 1942444337579655 968
; mpfd: - 1942444337579655 968 (-3.57083e+291) class: Neg. norm. non-zero
; hwf : - 1942444337579655 968 (-3.57083e+291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111000111 #b0110111001101010010010010000101111001100011010000111)))
(assert (= y (fp #b1 #b11100110110 #b1100000110101111101011000011111010000100001100011000)))
(assert (= r (fp #b1 #b11111000111 #b0110111001101010010010010000101111001100011010000111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
