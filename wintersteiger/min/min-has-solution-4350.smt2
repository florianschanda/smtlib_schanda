(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5447824856575227414623441291041672229766845703125p-903 {- 2453482199405192 -903 (-2.28445e-272)}
; Y = 1.0647983678439081334232696463004685938358306884765625p-93 {+ 291825905276041 -93 (1.07517e-028)}
; -1.5447824856575227414623441291041672229766845703125p-903 m 1.0647983678439081334232696463004685938358306884765625p-93 == -1.5447824856575227414623441291041672229766845703125p-903
; [HW: -1.5447824856575227414623441291041672229766845703125p-903] 

; mpf : - 2453482199405192 -903
; mpfd: - 2453482199405192 -903 (-2.28445e-272) class: Neg. norm. non-zero
; hwf : - 2453482199405192 -903 (-2.28445e-272) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001111000 #b1000101101110110110111010110111101010101001010001000)))
(assert (= y (fp #b0 #b01110100010 #b0001000010010110101000000011011010111001010010001001)))
(assert (= r (fp #b1 #b00001111000 #b1000101101110110110111010110111101010101001010001000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
