(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.874895468276033039245476174983195960521697998046875p-342 {- 3940178904916078 -342 (-2.09276e-103)}
; Y = -1.1688923778699464861574597307480871677398681640625p640 {- 760623650040808 640 (-5.333e+192)}
; -1.874895468276033039245476174983195960521697998046875p-342 m -1.1688923778699464861574597307480871677398681640625p640 == -1.1688923778699464861574597307480871677398681640625p640
; [HW: -1.1688923778699464861574597307480871677398681640625p640] 

; mpf : - 760623650040808 640
; mpfd: - 760623650040808 640 (-5.333e+192) class: Neg. norm. non-zero
; hwf : - 760623650040808 640 (-5.333e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101001 #b1101111111111001001001100011111110101010000001101110)))
(assert (= y (fp #b1 #b11001111111 #b0010101100111100100001111110011101111110101111101000)))
(assert (= r (fp #b1 #b11001111111 #b0010101100111100100001111110011101111110101111101000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
