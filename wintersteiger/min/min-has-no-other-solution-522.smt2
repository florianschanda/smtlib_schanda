(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8088258118381566053045617081806994974613189697265625p-696 {+ 3642627624801961 -696 (5.50199e-210)}
; Y = 1.9561754216340825340836317991488613188266754150390625p-290 {+ 4306231272572081 -290 (9.83352e-088)}
; 1.8088258118381566053045617081806994974613189697265625p-696 m 1.9561754216340825340836317991488613188266754150390625p-290 == 1.8088258118381566053045617081806994974613189697265625p-696
; [HW: 1.8088258118381566053045617081806994974613189697265625p-696] 

; mpf : + 3642627624801961 -696
; mpfd: + 3642627624801961 -696 (5.50199e-210) class: Pos. norm. non-zero
; hwf : + 3642627624801961 -696 (5.50199e-210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000111 #b1100111100001111001101010101101000000001011010101001)))
(assert (= y (fp #b0 #b01011011101 #b1111010011000111111010011001010100101000010010110001)))
(assert (= r (fp #b0 #b00101000111 #b1100111100001111001101010101101000000001011010101001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
