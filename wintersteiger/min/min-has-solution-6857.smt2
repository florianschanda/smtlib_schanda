(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.68564032683742315299468828015960752964019775390625p-942 {+ 3087849520455204 -942 (4.53429e-284)}
; Y = -1.3661820514482700961167438435950316488742828369140625p317 {- 1649137350452193 317 (-3.64768e+095)}
; 1.68564032683742315299468828015960752964019775390625p-942 m -1.3661820514482700961167438435950316488742828369140625p317 == -1.3661820514482700961167438435950316488742828369140625p317
; [HW: -1.3661820514482700961167438435950316488742828369140625p317] 

; mpf : - 1649137350452193 317
; mpfd: - 1649137350452193 317 (-3.64768e+095) class: Neg. norm. non-zero
; hwf : - 1649137350452193 317 (-3.64768e+095) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010001 #b1010111110000110000111111101110010010101111000100100)))
(assert (= y (fp #b1 #b10100111100 #b0101110110111110000110110101111101011010001111100001)))
(assert (= r (fp #b1 #b10100111100 #b0101110110111110000110110101111101011010001111100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
