(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.16254662440419398450330845662392675876617431640625p146 {+ 732044917097060 146 (1.03703e+044)}
; Y = 1.7664555334933467189983957723597995936870574951171875p-253 {+ 3451808855036691 -253 (1.22043e-076)}
; 1.16254662440419398450330845662392675876617431640625p146 m 1.7664555334933467189983957723597995936870574951171875p-253 == 1.7664555334933467189983957723597995936870574951171875p-253
; [HW: 1.7664555334933467189983957723597995936870574951171875p-253] 

; mpf : + 3451808855036691 -253
; mpfd: + 3451808855036691 -253 (1.22043e-076) class: Pos. norm. non-zero
; hwf : + 3451808855036691 -253 (1.22043e-076) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010001 #b0010100110011100101001111101001111100100001001100100)))
(assert (= y (fp #b0 #b01100000010 #b1100010000110110011011100000101000110001001100010011)))
(assert (= r (fp #b0 #b01100000010 #b1100010000110110011011100000101000110001001100010011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
