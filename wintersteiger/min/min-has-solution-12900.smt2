(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5371282636004155452980057816603220999240875244140625p822 {+ 2419010647800993 822 (4.29899e+247)}
; Y = -1.916678992285568483566748909652233123779296875p985 {- 4128355168075648 985 (-6.26751e+296)}
; 1.5371282636004155452980057816603220999240875244140625p822 m -1.916678992285568483566748909652233123779296875p985 == -1.916678992285568483566748909652233123779296875p985
; [HW: -1.916678992285568483566748909652233123779296875p985] 

; mpf : - 4128355168075648 985
; mpfd: - 4128355168075648 985 (-6.26751e+296) class: Neg. norm. non-zero
; hwf : - 4128355168075648 985 (-6.26751e+296) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100110101 #b1000100110000001001111001110010111101011110010100001)))
(assert (= y (fp #b1 #b11111011000 #b1110101010101011011110010111010011001011111110000000)))
(assert (= r (fp #b1 #b11111011000 #b1110101010101011011110010111010011001011111110000000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
