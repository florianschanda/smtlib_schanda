(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.46555050005450038241860966081731021404266357421875p941 {- 2096653058567596 941 (-2.72412e+283)}
; Y = -1.3461296562636617668573535411269403994083404541015625p818 {- 1558829390970905 818 (-2.35301e+246)}
; -1.46555050005450038241860966081731021404266357421875p941 m -1.3461296562636617668573535411269403994083404541015625p818 == -1.46555050005450038241860966081731021404266357421875p941
; [HW: -1.46555050005450038241860966081731021404266357421875p941] 

; mpf : - 2096653058567596 941
; mpfd: - 2096653058567596 941 (-2.72412e+283) class: Neg. norm. non-zero
; hwf : - 2096653058567596 941 (-2.72412e+283) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110101100 #b0111011100101110010100010100110001011110110110101100)))
(assert (= y (fp #b1 #b11100110001 #b0101100010011011111101000000000111010100000000011001)))
(assert (= r (fp #b1 #b11110101100 #b0111011100101110010100010100110001011110110110101100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
