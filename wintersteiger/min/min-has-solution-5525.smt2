(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1191089268066451989369625152903608977794647216796875p-199 {+ 536418918382907 -199 (1.39285e-060)}
; Y = 1.46927085268629031844511700910516083240509033203125p-258 {+ 2113408037293812 -258 (3.17222e-078)}
; 1.1191089268066451989369625152903608977794647216796875p-199 m 1.46927085268629031844511700910516083240509033203125p-258 == 1.46927085268629031844511700910516083240509033203125p-258
; [HW: 1.46927085268629031844511700910516083240509033203125p-258] 

; mpf : + 2113408037293812 -258
; mpfd: + 2113408037293812 -258 (3.17222e-078) class: Pos. norm. non-zero
; hwf : + 2113408037293812 -258 (3.17222e-078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100111000 #b0001111001111101111011000011000101001011110100111011)))
(assert (= y (fp #b0 #b01011111101 #b0111100000100010001000100111010101000000111011110100)))
(assert (= r (fp #b0 #b01011111101 #b0111100000100010001000100111010101000000111011110100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
