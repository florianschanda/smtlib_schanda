(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.386302558488314407014740936574526131153106689453125p-937 {- 1739752058460242 -937 (-1.19331e-282)}
; Y = -1.2700257242276788982593416221789084374904632568359375p107 {- 1216087751012223 107 (-2.06073e+032)}
; -1.386302558488314407014740936574526131153106689453125p-937 m -1.2700257242276788982593416221789084374904632568359375p107 == -1.2700257242276788982593416221789084374904632568359375p107
; [HW: -1.2700257242276788982593416221789084374904632568359375p107] 

; mpf : - 1216087751012223 107
; mpfd: - 1216087751012223 107 (-2.06073e+032) class: Neg. norm. non-zero
; hwf : - 1216087751012223 107 (-2.06073e+032) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010110 #b0110001011100100101110010111011100010001100001010010)))
(assert (= y (fp #b1 #b10001101010 #b0100010100100000011001111110011010100010111101111111)))
(assert (= r (fp #b1 #b10001101010 #b0100010100100000011001111110011010100010111101111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
