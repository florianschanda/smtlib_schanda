(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1361293635974847315850411177962087094783782958984375p-678 {+ 613072151171815 -678 (9.05922e-205)}
; Y = 1.7696183245023464625234055347391404211521148681640625p2 {+ 3466052799446273 2 (7.07847)}
; 1.1361293635974847315850411177962087094783782958984375p-678 m 1.7696183245023464625234055347391404211521148681640625p2 == 1.1361293635974847315850411177962087094783782958984375p-678
; [HW: 1.1361293635974847315850411177962087094783782958984375p-678] 

; mpf : + 613072151171815 -678
; mpfd: + 613072151171815 -678 (9.05922e-205) class: Pos. norm. non-zero
; hwf : + 613072151171815 -678 (9.05922e-205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101011001 #b0010001011011001010111111011110010101101001011100111)))
(assert (= y (fp #b0 #b10000000001 #b1100010100000101101101001101111000100011110100000001)))
(assert (= r (fp #b0 #b00101011001 #b0010001011011001010111111011110010101101001011100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
