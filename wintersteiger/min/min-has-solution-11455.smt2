(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9697718324213731033722751817549578845500946044921875p-813 {- 4367464063127299 -813 (-3.60603e-245)}
; Y = 1.9823794851567431152261633542366325855255126953125p379 {+ 4424243883288328 379 (2.44093e+114)}
; -1.9697718324213731033722751817549578845500946044921875p-813 m 1.9823794851567431152261633542366325855255126953125p379 == -1.9697718324213731033722751817549578845500946044921875p-813
; [HW: -1.9697718324213731033722751817549578845500946044921875p-813] 

; mpf : - 4367464063127299 -813
; mpfd: - 4367464063127299 -813 (-3.60603e-245) class: Neg. norm. non-zero
; hwf : - 4367464063127299 -813 (-3.60603e-245) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010010 #b1111100001000010111101111000000011010100111100000011)))
(assert (= y (fp #b0 #b10101111010 #b1111101101111101001110001101000100000010011100001000)))
(assert (= r (fp #b1 #b00011010010 #b1111100001000010111101111000000011010100111100000011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
