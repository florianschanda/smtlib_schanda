(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3233669849716758193380883312784135341644287109375p783 {- 1456315433022360 783 (-6.73235e+235)}
; Y = 1.6301702952761287779281929033459164202213287353515625p-1002 {+ 2838034706985529 -1002 (3.80345e-302)}
; -1.3233669849716758193380883312784135341644287109375p783 m 1.6301702952761287779281929033459164202213287353515625p-1002 == -1.3233669849716758193380883312784135341644287109375p783
; [HW: -1.3233669849716758193380883312784135341644287109375p783] 

; mpf : - 1456315433022360 783
; mpfd: - 1456315433022360 783 (-6.73235e+235) class: Neg. norm. non-zero
; hwf : - 1456315433022360 783 (-6.73235e+235) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001110 #b0101001011001000001011011100000100001111001110011000)))
(assert (= y (fp #b0 #b00000010101 #b1010000101010010110101110010100100011111001000111001)))
(assert (= r (fp #b1 #b11100001110 #b0101001011001000001011011100000100001111001110011000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
