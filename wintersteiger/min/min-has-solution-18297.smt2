(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.76449145458318934487351725692860782146453857421875p735 {+ 3442963429988780 735 (3.18909e+221)}
; Y = -1.06163625745392753429996446357108652591705322265625p495 {- 277585026102020 495 (-1.08598e+149)}
; 1.76449145458318934487351725692860782146453857421875p735 m -1.06163625745392753429996446357108652591705322265625p495 == -1.06163625745392753429996446357108652591705322265625p495
; [HW: -1.06163625745392753429996446357108652591705322265625p495] 

; mpf : - 277585026102020 495
; mpfd: - 277585026102020 495 (-1.08598e+149) class: Neg. norm. non-zero
; hwf : - 277585026102020 495 (-1.08598e+149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011110 #b1100001110110101101101100100001110000001100110101100)))
(assert (= y (fp #b1 #b10111101110 #b0000111111000111011001001100111000000011001100000100)))
(assert (= r (fp #b1 #b10111101110 #b0000111111000111011001001100111000000011001100000100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
