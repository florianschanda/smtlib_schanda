(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4772598057749919409076255760737694799900054931640625p730 {- 2149387083447169 730 (-8.3436e+219)}
; Y = -1.96970232295195302185675245709717273712158203125p-695 {- 4367151020306720 -695 (-1.19827e-209)}
; -1.4772598057749919409076255760737694799900054931640625p730 m -1.96970232295195302185675245709717273712158203125p-695 == -1.4772598057749919409076255760737694799900054931640625p730
; [HW: -1.4772598057749919409076255760737694799900054931640625p730] 

; mpf : - 2149387083447169 730
; mpfd: - 2149387083447169 730 (-8.3436e+219) class: Neg. norm. non-zero
; hwf : - 2149387083447169 730 (-8.3436e+219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011001 #b0111101000101101101100101101100101111111101110000001)))
(assert (= y (fp #b1 #b00101001000 #b1111100000111110011010010101001111101111000100100000)))
(assert (= r (fp #b1 #b11011011001 #b0111101000101101101100101101100101111111101110000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
