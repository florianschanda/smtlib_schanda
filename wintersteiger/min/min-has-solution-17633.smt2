(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5616281490486192407018961603171192109584808349609375p-606 {+ 2529348322776143 -606 (5.88031e-183)}
; Y = -1.9686825331944586281451847753487527370452880859375p546 {- 4362558295534872 546 (-4.53475e+164)}
; 1.5616281490486192407018961603171192109584808349609375p-606 m -1.9686825331944586281451847753487527370452880859375p546 == -1.9686825331944586281451847753487527370452880859375p546
; [HW: -1.9686825331944586281451847753487527370452880859375p546] 

; mpf : - 4362558295534872 546
; mpfd: - 4362558295534872 546 (-4.53475e+164) class: Neg. norm. non-zero
; hwf : - 4362558295534872 546 (-4.53475e+164) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100001 #b1000111111000110110111001100010010101101010001001111)))
(assert (= y (fp #b1 #b11000100001 #b1111011111111011100101000001100001000110110100011000)))
(assert (= r (fp #b1 #b11000100001 #b1111011111111011100101000001100001000110110100011000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
