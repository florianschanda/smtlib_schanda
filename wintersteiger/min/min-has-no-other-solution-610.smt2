(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -0.4986945205701502903394839449902065098285675048828125p-1022 {- 2245920457011437 -1023 (-1.10963e-308)}
; Y = 1.7054017365464926303531001394730992615222930908203125p-691 {+ 3176846997857285 -691 (1.65997e-208)}
; -0.4986945205701502903394839449902065098285675048828125p-1022 m 1.7054017365464926303531001394730992615222930908203125p-691 == -0.4986945205701502903394839449902065098285675048828125p-1022
; [HW: -0.4986945205701502903394839449902065098285675048828125p-1022] 

; mpf : - 2245920457011437 -1023
; mpfd: - 2245920457011437 -1023 (-1.10963e-308) class: Neg. denorm.
; hwf : - 2245920457011437 -1023 (-1.10963e-308) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0111111110101010011100011011000010001011000011101101)))
(assert (= y (fp #b0 #b00101001100 #b1011010010010101001101010100110100000010010000000101)))
(assert (= r (fp #b1 #b00000000000 #b0111111110101010011100011011000010001011000011101101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
