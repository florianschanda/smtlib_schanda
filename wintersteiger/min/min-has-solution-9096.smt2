(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.008897090807610918972159197437576949596405029296875p-598 {+ 40068934845838 -598 (9.72544e-181)}
; Y = 1.969266864652247317479805133189074695110321044921875p-62 {+ 4365189890470430 -62 (4.27017e-019)}
; 1.008897090807610918972159197437576949596405029296875p-598 m 1.969266864652247317479805133189074695110321044921875p-62 == 1.008897090807610918972159197437576949596405029296875p-598
; [HW: 1.008897090807610918972159197437576949596405029296875p-598] 

; mpf : + 40068934845838 -598
; mpfd: + 40068934845838 -598 (9.72544e-181) class: Pos. norm. non-zero
; hwf : + 40068934845838 -598 (9.72544e-181) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101001 #b0000001001000111000101000110101000001100010110001110)))
(assert (= y (fp #b0 #b01111000001 #b1111100000100001110111111000110011000111001000011110)))
(assert (= r (fp #b0 #b00110101001 #b0000001001000111000101000110101000001100010110001110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
