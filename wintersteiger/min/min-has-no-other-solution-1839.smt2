(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4383936581368887974718973055132664740085601806640625p-292 {- 1974349515426881 -292 (-1.80767e-088)}
; Y = -1.4246835524903651570838292172993533313274383544921875p-741 {- 1912604688745987 -741 (-1.23166e-223)}
; -1.4383936581368887974718973055132664740085601806640625p-292 m -1.4246835524903651570838292172993533313274383544921875p-741 == -1.4383936581368887974718973055132664740085601806640625p-292
; [HW: -1.4383936581368887974718973055132664740085601806640625p-292] 

; mpf : - 1974349515426881 -292
; mpfd: - 1974349515426881 -292 (-1.80767e-088) class: Neg. norm. non-zero
; hwf : - 1974349515426881 -292 (-1.80767e-088) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011011 #b0111000000111010100100010001100001111000110001000001)))
(assert (= y (fp #b1 #b00100011010 #b0110110010111000000011111011000100011000011000000011)))
(assert (= r (fp #b1 #b01011011011 #b0111000000111010100100010001100001111000110001000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
