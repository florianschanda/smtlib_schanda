(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3109868962469362063671951545984484255313873291015625p-346 {+ 1400560470054809 -346 (9.14576e-105)}
; Y = 1.376568749125465007665525263291783630847930908203125p-502 {+ 1695914878240818 -502 (1.05133e-151)}
; 1.3109868962469362063671951545984484255313873291015625p-346 m 1.376568749125465007665525263291783630847930908203125p-502 == 1.376568749125465007665525263291783630847930908203125p-502
; [HW: 1.376568749125465007665525263291783630847930908203125p-502] 

; mpf : + 1695914878240818 -502
; mpfd: + 1695914878240818 -502 (1.05133e-151) class: Pos. norm. non-zero
; hwf : + 1695914878240818 -502 (1.05133e-151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100101 #b0100111110011100110101100101010011011101011110011001)))
(assert (= y (fp #b0 #b01000001001 #b0110000001100110110011110011111000110000100000110010)))
(assert (= r (fp #b0 #b01000001001 #b0110000001100110110011110011111000110000100000110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
