(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5709019235493004718051679446944035589694976806640625p-879 {+ 2571113690161729 -879 (3.89747e-265)}
; Y = -1.7730243411782939944032477797009050846099853515625p-574 {- 3481392134878888 -574 (-2.86746e-173)}
; 1.5709019235493004718051679446944035589694976806640625p-879 m -1.7730243411782939944032477797009050846099853515625p-574 == -1.7730243411782939944032477797009050846099853515625p-574
; [HW: -1.7730243411782939944032477797009050846099853515625p-574] 

; mpf : - 3481392134878888 -574
; mpfd: - 3481392134878888 -574 (-2.86746e-173) class: Neg. norm. non-zero
; hwf : - 3481392134878888 -574 (-2.86746e-173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010010000 #b1001001000100110101000001110001011011110001001000001)))
(assert (= y (fp #b1 #b00111000001 #b1100010111100100111011000101100001011111011010101000)))
(assert (= r (fp #b1 #b00111000001 #b1100010111100100111011000101100001011111011010101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
