(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3456427243111039881995338873821310698986053466796875p-425 {+ 1556636444410811 -425 (1.55304e-128)}
; Y = -1.419517460251034979279438630328513681888580322265625p-505 {- 1889338677661978 -505 (-1.35517e-152)}
; 1.3456427243111039881995338873821310698986053466796875p-425 m -1.419517460251034979279438630328513681888580322265625p-505 == -1.419517460251034979279438630328513681888580322265625p-505
; [HW: -1.419517460251034979279438630328513681888580322265625p-505] 

; mpf : - 1889338677661978 -505
; mpfd: - 1889338677661978 -505 (-1.35517e-152) class: Neg. norm. non-zero
; hwf : - 1889338677661978 -505 (-1.35517e-152) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010110 #b0101100001111100000010101010010100000100001110111011)))
(assert (= y (fp #b1 #b01000000110 #b0110101101100101011111110000101111100001000100011010)))
(assert (= r (fp #b1 #b01000000110 #b0110101101100101011111110000101111100001000100011010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
