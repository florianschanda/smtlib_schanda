(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.76447657457742668185574075323529541492462158203125p227 {+ 3442896416400372 227 (3.80562e+068)}
; Y = -1.4396778073888594207119240309111773967742919921875p826 {- 1980132809519544 826 (-6.44231e+248)}
; 1.76447657457742668185574075323529541492462158203125p227 m -1.4396778073888594207119240309111773967742919921875p826 == -1.4396778073888594207119240309111773967742919921875p826
; [HW: -1.4396778073888594207119240309111773967742919921875p826] 

; mpf : - 1980132809519544 826
; mpfd: - 1980132809519544 826 (-6.44231e+248) class: Neg. norm. non-zero
; hwf : - 1980132809519544 826 (-6.44231e+248) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011100010 #b1100001110110100101111001001111001011110001111110100)))
(assert (= y (fp #b1 #b11100111001 #b0111000010001110101110011000101110000011000110111000)))
(assert (= r (fp #b1 #b11100111001 #b0111000010001110101110011000101110000011000110111000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
