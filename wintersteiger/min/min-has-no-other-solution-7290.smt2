(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2945613749734936614999014636850915849208831787109375p-866 {+ 1326586498568367 -866 (2.63115e-261)}
; Y = 1.6485474286382022501840083350543864071369171142578125p-271 {+ 2920797957947101 -271 (4.34483e-082)}
; 1.2945613749734936614999014636850915849208831787109375p-866 m 1.6485474286382022501840083350543864071369171142578125p-271 == 1.2945613749734936614999014636850915849208831787109375p-866
; [HW: 1.2945613749734936614999014636850915849208831787109375p-866] 

; mpf : + 1326586498568367 -866
; mpfd: + 1326586498568367 -866 (2.63115e-261) class: Pos. norm. non-zero
; hwf : + 1326586498568367 -866 (2.63115e-261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011101 #b0100101101101000010111111101000000101101000010101111)))
(assert (= y (fp #b0 #b01011110000 #b1010011000000111001101000100101111100111111011011101)))
(assert (= r (fp #b0 #b00010011101 #b0100101101101000010111111101000000101101000010101111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
