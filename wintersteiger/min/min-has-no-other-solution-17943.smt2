(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.57196826340349549155916974996216595172882080078125p-975 {+ 2575916057931732 -975 (4.92264e-294)}
; Y = -1.3185224968457933680809901488828472793102264404296875p-550 {- 1434497798103835 -550 (-3.57758e-166)}
; 1.57196826340349549155916974996216595172882080078125p-975 m -1.3185224968457933680809901488828472793102264404296875p-550 == -1.3185224968457933680809901488828472793102264404296875p-550
; [HW: -1.3185224968457933680809901488828472793102264404296875p-550] 

; mpf : - 1434497798103835 -550
; mpfd: - 1434497798103835 -550 (-3.57758e-166) class: Neg. norm. non-zero
; hwf : - 1434497798103835 -550 (-3.57758e-166) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110000 #b1001001001101100100000110001100110101010111111010100)))
(assert (= y (fp #b1 #b00111011001 #b0101000110001010101100001011101011111110001100011011)))
(assert (= r (fp #b1 #b00111011001 #b0101000110001010101100001011101011111110001100011011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
