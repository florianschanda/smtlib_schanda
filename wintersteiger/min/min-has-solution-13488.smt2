(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8660851424329347736374984378926455974578857421875p-643 {+ 3900500724732088 -643 (5.11263e-194)}
; Y = 1.5539294137116643756968414891161955893039703369140625p871 {+ 2494676301181409 871 (2.44657e+262)}
; 1.8660851424329347736374984378926455974578857421875p-643 m 1.5539294137116643756968414891161955893039703369140625p871 == 1.8660851424329347736374984378926455974578857421875p-643
; [HW: 1.8660851424329347736374984378926455974578857421875p-643] 

; mpf : + 3900500724732088 -643
; mpfd: + 3900500724732088 -643 (5.11263e-194) class: Pos. norm. non-zero
; hwf : + 3900500724732088 -643 (5.11263e-194) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111100 #b1101110110110111110000011000001001001101000010111000)))
(assert (= y (fp #b0 #b11101100110 #b1000110111001110010100010110110000101111000111100001)))
(assert (= r (fp #b0 #b00101111100 #b1101110110110111110000011000001001001101000010111000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
