(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3678973306673345433637223322875797748565673828125p266 {- 1656862281304008 266 (-1.62193e+080)}
; Y = -1.7973655336970242313299195302533917129039764404296875p-298 {- 3591015120435995 -298 (-3.52937e-090)}
; -1.3678973306673345433637223322875797748565673828125p266 m -1.7973655336970242313299195302533917129039764404296875p-298 == -1.3678973306673345433637223322875797748565673828125p266
; [HW: -1.3678973306673345433637223322875797748565673828125p266] 

; mpf : - 1656862281304008 266
; mpfd: - 1656862281304008 266 (-1.62193e+080) class: Neg. norm. non-zero
; hwf : - 1656862281304008 266 (-1.62193e+080) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001001 #b0101111000101110100001001111101110000000011111001000)))
(assert (= y (fp #b1 #b01011010101 #b1100110000100000001001011100101000101111101100011011)))
(assert (= r (fp #b1 #b10100001001 #b0101111000101110100001001111101110000000011111001000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
