(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9199338016566205311619341955520212650299072265625p-652 {+ 4143013526346280 -652 (1.02738e-196)}
; Y = 1.4769813115020127280985207107733003795146942138671875p894 {+ 2148132856743155 894 (1.9507e+269)}
; 1.9199338016566205311619341955520212650299072265625p-652 m 1.4769813115020127280985207107733003795146942138671875p894 == 1.9199338016566205311619341955520212650299072265625p-652
; [HW: 1.9199338016566205311619341955520212650299072265625p-652] 

; mpf : + 4143013526346280 -652
; mpfd: + 4143013526346280 -652 (1.02738e-196) class: Pos. norm. non-zero
; hwf : + 4143013526346280 -652 (1.02738e-196) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110011 #b1110101110000000110010000001100010011001101000101000)))
(assert (= y (fp #b0 #b11101111101 #b0111101000011011011100100111110110110100010011110011)))
(assert (= r (fp #b0 #b00101110011 #b1110101110000000110010000001100010011001101000101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
