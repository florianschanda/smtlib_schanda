(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.022186758631071779035437430138699710369110107421875p936 {- 99920277903454 936 (-5.93754e+281)}
; Y = 1.5011867756671459783746058747055940330028533935546875p636 {+ 2257144576137579 636 (4.28067e+191)}
; -1.022186758631071779035437430138699710369110107421875p936 m 1.5011867756671459783746058747055940330028533935546875p636 == -1.022186758631071779035437430138699710369110107421875p936
; [HW: -1.022186758631071779035437430138699710369110107421875p936] 

; mpf : - 99920277903454 936
; mpfd: - 99920277903454 936 (-5.93754e+281) class: Neg. norm. non-zero
; hwf : - 99920277903454 936 (-5.93754e+281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110100111 #b0000010110101110000010000000101010111001100001011110)))
(assert (= y (fp #b0 #b11001111011 #b1000000001001101110001101100101010101101100101101011)))
(assert (= r (fp #b1 #b11110100111 #b0000010110101110000010000000101010111001100001011110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
