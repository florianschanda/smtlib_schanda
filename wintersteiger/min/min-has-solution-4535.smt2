(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4651491347156031519460839263047091662883758544921875p334 {+ 2094845469776899 334 (5.12744e+100)}
; Y = -1.9237323625990878639413494965992867946624755859375p549 {- 4160120723991320 549 (-3.54497e+165)}
; 1.4651491347156031519460839263047091662883758544921875p334 m -1.9237323625990878639413494965992867946624755859375p549 == -1.9237323625990878639413494965992867946624755859375p549
; [HW: -1.9237323625990878639413494965992867946624755859375p549] 

; mpf : - 4160120723991320 549
; mpfd: - 4160120723991320 549 (-3.54497e+165) class: Neg. norm. non-zero
; hwf : - 4160120723991320 549 (-3.54497e+165) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001101 #b0111011100010100000000111000000101011101110000000011)))
(assert (= y (fp #b1 #b11000100100 #b1110110001111001101110010101111110011110101100011000)))
(assert (= r (fp #b1 #b11000100100 #b1110110001111001101110010101111110011110101100011000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
