(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8705744067867209334821154698147438466548919677734375p577 {- 3920718574002967 577 (-9.253e+173)}
; Y = -1.9627635533362954856073656628723256289958953857421875p-951 {- 4335901580051235 -951 (-1.0312e-286)}
; -1.8705744067867209334821154698147438466548919677734375p577 m -1.9627635533362954856073656628723256289958953857421875p-951 == -1.8705744067867209334821154698147438466548919677734375p577
; [HW: -1.8705744067867209334821154698147438466548919677734375p577] 

; mpf : - 3920718574002967 577
; mpfd: - 3920718574002967 577 (-9.253e+173) class: Neg. norm. non-zero
; hwf : - 3920718574002967 577 (-9.253e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001000000 #b1101111011011101111101101101110111100010001100010111)))
(assert (= y (fp #b1 #b00001001000 #b1111011001110111101011000001011101011100001100100011)))
(assert (= r (fp #b1 #b11001000000 #b1101111011011101111101101101110111100010001100010111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
