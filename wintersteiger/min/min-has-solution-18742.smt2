(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.328725399842073162659517038264311850070953369140625p649 {+ 1480447588235978 649 (3.10386e+195)}
; Y = -1.98655870948282053944922154187224805355072021484375p536 {- 4443065436405948 536 (-4.46868e+161)}
; 1.328725399842073162659517038264311850070953369140625p649 m -1.98655870948282053944922154187224805355072021484375p536 == -1.98655870948282053944922154187224805355072021484375p536
; [HW: -1.98655870948282053944922154187224805355072021484375p536] 

; mpf : - 4443065436405948 536
; mpfd: - 4443065436405948 536 (-4.46868e+161) class: Neg. norm. non-zero
; hwf : - 4443065436405948 536 (-4.46868e+161) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010001000 #b0101010000100111010110010000100110101111101011001010)))
(assert (= y (fp #b1 #b11000010111 #b1111110010001111000111001001000011010000000010111100)))
(assert (= r (fp #b1 #b11000010111 #b1111110010001111000111001001000011010000000010111100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
