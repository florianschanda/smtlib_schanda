(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3777621048060904040966079264762811362743377685546875p32 {- 1701289274439403 32 (-5.91744e+009)}
; Y = 1.089663785195672307537506640073843300342559814453125p-381 {+ 403809789595858 -381 (2.2124e-115)}
; -1.3777621048060904040966079264762811362743377685546875p32 m 1.089663785195672307537506640073843300342559814453125p-381 == -1.3777621048060904040966079264762811362743377685546875p32
; [HW: -1.3777621048060904040966079264762811362743377685546875p32] 

; mpf : - 1701289274439403 32
; mpfd: - 1701289274439403 32 (-5.91744e+009) class: Neg. norm. non-zero
; hwf : - 1701289274439403 32 (-5.91744e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011111 #b0110000010110101000001000110110111001111011011101011)))
(assert (= y (fp #b0 #b01010000010 #b0001011011110100001101001011000100001101000011010010)))
(assert (= r (fp #b1 #b10000011111 #b0110000010110101000001000110110111001111011011101011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
