(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.325080171567914799624077204498462378978729248046875p157 {+ 1464030939538798 157 (2.42076e+047)}
; Y = 1.8746810823886932428905538472463376820087432861328125p-740 {+ 3939213396713741 -740 (3.24138e-223)}
; 1.325080171567914799624077204498462378978729248046875p157 m 1.8746810823886932428905538472463376820087432861328125p-740 == 1.8746810823886932428905538472463376820087432861328125p-740
; [HW: 1.8746810823886932428905538472463376820087432861328125p-740] 

; mpf : + 3939213396713741 -740
; mpfd: + 3939213396713741 -740 (3.24138e-223) class: Pos. norm. non-zero
; hwf : + 3939213396713741 -740 (3.24138e-223) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010011100 #b0101001100111000011101000100000101110110010101101110)))
(assert (= y (fp #b0 #b00100011011 #b1101111111101011000110010111001101001010000100001101)))
(assert (= r (fp #b0 #b00100011011 #b1101111111101011000110010111001101001010000100001101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
