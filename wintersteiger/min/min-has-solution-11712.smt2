(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6372219565092229753844321749056689441204071044921875p305 {- 2869792565887235 305 (-1.06723e+092)}
; Y = -1.531336284009441772724358088453300297260284423828125p522 {- 2392925890673346 522 (-2.10246e+157)}
; -1.6372219565092229753844321749056689441204071044921875p305 m -1.531336284009441772724358088453300297260284423828125p522 == -1.531336284009441772724358088453300297260284423828125p522
; [HW: -1.531336284009441772724358088453300297260284423828125p522] 

; mpf : - 2392925890673346 522
; mpfd: - 2392925890673346 522 (-2.10246e+157) class: Neg. norm. non-zero
; hwf : - 2392925890673346 522 (-2.10246e+157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100110000 #b1010001100100000111110100110011110000000000100000011)))
(assert (= y (fp #b1 #b11000001001 #b1000100000000101101001111001101011111111101011000010)))
(assert (= r (fp #b1 #b11000001001 #b1000100000000101101001111001101011111111101011000010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
