(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4957087625673519681868128827773034572601318359375p-406 {- 2232473798382616 -406 (-9.05042e-123)}
; Y = -1.4971358448877791769149325773469172418117523193359375p-841 {- 2238900805789119 -841 (-1.02102e-253)}
; -1.4957087625673519681868128827773034572601318359375p-406 m -1.4971358448877791769149325773469172418117523193359375p-841 == -1.4957087625673519681868128827773034572601318359375p-406
; [HW: -1.4957087625673519681868128827773034572601318359375p-406] 

; mpf : - 2232473798382616 -406
; mpfd: - 2232473798382616 -406 (-9.05042e-123) class: Neg. norm. non-zero
; hwf : - 2232473798382616 -406 (-9.05042e-123) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101001 #b0111111011100110110001001111101110010001010000011000)))
(assert (= y (fp #b1 #b00010110110 #b0111111101000100010010110111001101110110010110111111)))
(assert (= r (fp #b1 #b01001101001 #b0111111011100110110001001111101110010001010000011000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
