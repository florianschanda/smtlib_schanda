(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.795721117756514662033850981970317661762237548828125p582 {+ 3583609329419074 582 (2.84247e+175)}
; Y = -1.59439289625094460234322468750178813934326171875p1011 {- 2676907626067424 1011 (-3.49881e+304)}
; 1.795721117756514662033850981970317661762237548828125p582 m -1.59439289625094460234322468750178813934326171875p1011 == -1.59439289625094460234322468750178813934326171875p1011
; [HW: -1.59439289625094460234322468750178813934326171875p1011] 

; mpf : - 2676907626067424 1011
; mpfd: - 2676907626067424 1011 (-3.49881e+304) class: Neg. norm. non-zero
; hwf : - 2676907626067424 1011 (-3.49881e+304) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000101 #b1100101110110100011000010001000110000000001101000010)))
(assert (= y (fp #b1 #b11111110010 #b1001100000101010001000100000001001011111010111100000)))
(assert (= r (fp #b1 #b11111110010 #b1001100000101010001000100000001001011111010111100000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
