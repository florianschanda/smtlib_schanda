(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.633057970285582083391773267067037522792816162109375p500 {- 2851039639082070 500 (-5.34564e+150)}
; Y = 1.9908262230986029095447520376183092594146728515625p-719 {+ 4462284609135784 -719 (7.21882e-217)}
; -1.633057970285582083391773267067037522792816162109375p500 m 1.9908262230986029095447520376183092594146728515625p-719 == -1.633057970285582083391773267067037522792816162109375p500
; [HW: -1.633057970285582083391773267067037522792816162109375p500] 

; mpf : - 2851039639082070 500
; mpfd: - 2851039639082070 500 (-5.34564e+150) class: Neg. norm. non-zero
; hwf : - 2851039639082070 500 (-5.34564e+150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110011 #b1010001000010000000101100100111011011001010001010110)))
(assert (= y (fp #b0 #b00100110000 #b1111110110100110110010011001000000111010010010101000)))
(assert (= r (fp #b1 #b10111110011 #b1010001000010000000101100100111011011001010001010110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
