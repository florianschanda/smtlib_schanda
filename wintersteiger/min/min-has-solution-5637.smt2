(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.445833463837848942290520426467992365360260009765625p-55 {- 2007855421609434 -55 (-4.01299e-017)}
; Y = -1.4938349365876855134871448171907104551792144775390625p366 {- 2224034836398833 366 (-2.24533e+110)}
; -1.445833463837848942290520426467992365360260009765625p-55 m -1.4938349365876855134871448171907104551792144775390625p366 == -1.4938349365876855134871448171907104551792144775390625p366
; [HW: -1.4938349365876855134871448171907104551792144775390625p366] 

; mpf : - 2224034836398833 366
; mpfd: - 2224034836398833 366 (-2.24533e+110) class: Neg. norm. non-zero
; hwf : - 2224034836398833 366 (-2.24533e+110) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001000 #b0111001000100010001001000101001010100101010111011010)))
(assert (= y (fp #b1 #b10101101101 #b0111111001101011111101110110011001000100001011110001)))
(assert (= r (fp #b1 #b10101101101 #b0111111001101011111101110110011001000100001011110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
