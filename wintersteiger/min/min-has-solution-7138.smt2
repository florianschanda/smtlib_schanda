(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2738821736661642969323793295188806951045989990234375p945 {- 1233455655266359 945 (-3.78857e+284)}
; Y = -1.3347611313593807924604561776504851877689361572265625p484 {- 1507630106448233 484 (-6.66686e+145)}
; -1.2738821736661642969323793295188806951045989990234375p945 m -1.3347611313593807924604561776504851877689361572265625p484 == -1.2738821736661642969323793295188806951045989990234375p945
; [HW: -1.2738821736661642969323793295188806951045989990234375p945] 

; mpf : - 1233455655266359 945
; mpfd: - 1233455655266359 945 (-3.78857e+284) class: Neg. norm. non-zero
; hwf : - 1233455655266359 945 (-3.78857e+284) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110000 #b0100011000011101001001000110001011011010100000110111)))
(assert (= y (fp #b1 #b10111100011 #b0101010110110010111001111100111100101001000101101001)))
(assert (= r (fp #b1 #b11110110000 #b0100011000011101001001000110001011011010100000110111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
