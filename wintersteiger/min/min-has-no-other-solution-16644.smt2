(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.611097352016970685184560352354310452938079833984375p653 {+ 2752137806830726 653 (6.02156e+196)}
; Y = 1.63775856448196410752871088334359228610992431640625p-442 {+ 2872209233353316 -442 (1.44209e-133)}
; 1.611097352016970685184560352354310452938079833984375p653 m 1.63775856448196410752871088334359228610992431640625p-442 == 1.63775856448196410752871088334359228610992431640625p-442
; [HW: 1.63775856448196410752871088334359228610992431640625p-442] 

; mpf : + 2872209233353316 -442
; mpfd: + 2872209233353316 -442 (1.44209e-133) class: Pos. norm. non-zero
; hwf : + 2872209233353316 -442 (1.44209e-133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010001100 #b1001110001110000111000000100010110010101110010000110)))
(assert (= y (fp #b0 #b01001000101 #b1010001101000100001001010011000100110001101001100100)))
(assert (= r (fp #b0 #b01001000101 #b1010001101000100001001010011000100110001101001100100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
