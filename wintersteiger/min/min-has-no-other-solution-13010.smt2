(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0417597647147152084556864792830310761928558349609375p-467 {+ 188069260808271 -467 (2.73376e-141)}
; Y = 1.6015355419126702241072734977933578193187713623046875p-392 {+ 2709075242408011 -392 (1.58774e-118)}
; 1.0417597647147152084556864792830310761928558349609375p-467 m 1.6015355419126702241072734977933578193187713623046875p-392 == 1.0417597647147152084556864792830310761928558349609375p-467
; [HW: 1.0417597647147152084556864792830310761928558349609375p-467] 

; mpf : + 188069260808271 -467
; mpfd: + 188069260808271 -467 (2.73376e-141) class: Pos. norm. non-zero
; hwf : + 188069260808271 -467 (2.73376e-141) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101100 #b0000101010110000110001001001011110111101000001001111)))
(assert (= y (fp #b0 #b01001110111 #b1001100111111110001110111011011111100101100001001011)))
(assert (= r (fp #b0 #b01000101100 #b0000101010110000110001001001011110111101000001001111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
