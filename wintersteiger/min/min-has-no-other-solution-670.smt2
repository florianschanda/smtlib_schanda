(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.945558827486021602481969239306636154651641845703125p916 {- 4258418383122930 916 (-1.07776e+276)}
; Y = 1.49655108345532195102123296237550675868988037109375p-342 {+ 2236267274419804 -342 (1.67045e-103)}
; -1.945558827486021602481969239306636154651641845703125p916 m 1.49655108345532195102123296237550675868988037109375p-342 == -1.945558827486021602481969239306636154651641845703125p916
; [HW: -1.945558827486021602481969239306636154651641845703125p916] 

; mpf : - 4258418383122930 916
; mpfd: - 4258418383122930 916 (-1.07776e+276) class: Neg. norm. non-zero
; hwf : - 4258418383122930 916 (-1.07776e+276) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110010011 #b1111001000010000001001001011000001111111000111110010)))
(assert (= y (fp #b0 #b01010101001 #b0111111100011101111110001100100000111011111001011100)))
(assert (= r (fp #b1 #b11110010011 #b1111001000010000001001001011000001111111000111110010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
