(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0780039649498787124315413166186772286891937255859375p83 {- 351298627481695 83 (-1.04258e+025)}
; Y = 1.09545989737357185589416985749267041683197021484375p113 {+ 429913158240444 113 (1.13759e+034)}
; -1.0780039649498787124315413166186772286891937255859375p83 m 1.09545989737357185589416985749267041683197021484375p113 == -1.0780039649498787124315413166186772286891937255859375p83
; [HW: -1.0780039649498787124315413166186772286891937255859375p83] 

; mpf : - 351298627481695 83
; mpfd: - 351298627481695 83 (-1.04258e+025) class: Neg. norm. non-zero
; hwf : - 351298627481695 83 (-1.04258e+025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010010 #b0001001111111000000100010101111001101011000001011111)))
(assert (= y (fp #b0 #b10001110000 #b0001100001110000000011110101000101001100100010111100)))
(assert (= r (fp #b1 #b10001010010 #b0001001111111000000100010101111001101011000001011111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
