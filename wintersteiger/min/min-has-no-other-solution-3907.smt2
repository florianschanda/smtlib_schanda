(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.806231360256153717358529320335946977138519287109375p-78 {- 3630943253624022 -78 (-5.97632e-024)}
; Y = -1.2513691052693693972486244092578999698162078857421875p121 {- 1132065808823587 121 (-3.32671e+036)}
; -1.806231360256153717358529320335946977138519287109375p-78 m -1.2513691052693693972486244092578999698162078857421875p121 == -1.2513691052693693972486244092578999698162078857421875p121
; [HW: -1.2513691052693693972486244092578999698162078857421875p121] 

; mpf : - 1132065808823587 121
; mpfd: - 1132065808823587 121 (-3.32671e+036) class: Neg. norm. non-zero
; hwf : - 1132065808823587 121 (-3.32671e+036) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110110001 #b1100111001100101001011011010110101001111010011010110)))
(assert (= y (fp #b1 #b10001111000 #b0100000001011001101110011100011001011011010100100011)))
(assert (= r (fp #b1 #b10001111000 #b0100000001011001101110011100011001011011010100100011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
