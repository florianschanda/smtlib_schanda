(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5345032422210491684921862542978487908840179443359375p-751 {+ 2407188602495039 -751 (1.29551e-226)}
; Y = 1.21880896792311776977157933288253843784332275390625p366 {+ 985427986403876 366 (1.83195e+110)}
; 1.5345032422210491684921862542978487908840179443359375p-751 m 1.21880896792311776977157933288253843784332275390625p366 == 1.5345032422210491684921862542978487908840179443359375p-751
; [HW: 1.5345032422210491684921862542978487908840179443359375p-751] 

; mpf : + 2407188602495039 -751
; mpfd: + 2407188602495039 -751 (1.29551e-226) class: Pos. norm. non-zero
; hwf : + 2407188602495039 -751 (1.29551e-226) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010000 #b1000100011010101001101000101100011110010000000111111)))
(assert (= y (fp #b0 #b10101101101 #b0011100000000011110111010101000101001101001000100100)))
(assert (= r (fp #b0 #b00100010000 #b1000100011010101001101000101100011110010000000111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
