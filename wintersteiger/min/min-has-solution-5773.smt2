(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.697894344449258685614267960772849619388580322265625p86 {+ 3143036709605658 86 (1.31368e+026)}
; Y = 1.4309953544186566620766143387299962341785430908203125p-397 {+ 1941030517558277 -397 (4.43333e-120)}
; 1.697894344449258685614267960772849619388580322265625p86 m 1.4309953544186566620766143387299962341785430908203125p-397 == 1.4309953544186566620766143387299962341785430908203125p-397
; [HW: 1.4309953544186566620766143387299962341785430908203125p-397] 

; mpf : + 1941030517558277 -397
; mpfd: + 1941030517558277 -397 (4.43333e-120) class: Pos. norm. non-zero
; hwf : + 1941030517558277 -397 (4.43333e-120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001010101 #b1011001010101001001101000010100101111001000100011010)))
(assert (= y (fp #b0 #b01001110010 #b0110111001010101101101100010011111110100110000000101)))
(assert (= r (fp #b0 #b01001110010 #b0110111001010101101101100010011111110100110000000101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
