(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.995279858182214649531260874937288463115692138671875p-215 {+ 4482341998438782 -215 (3.78926e-065)}
; Y = -1.355068313968910143074708685162477195262908935546875p889 {- 1599085526481454 889 (-5.59277e+267)}
; 1.995279858182214649531260874937288463115692138671875p-215 m -1.355068313968910143074708685162477195262908935546875p889 == -1.355068313968910143074708685162477195262908935546875p889
; [HW: -1.355068313968910143074708685162477195262908935546875p889] 

; mpf : - 1599085526481454 889
; mpfd: - 1599085526481454 889 (-5.59277e+267) class: Neg. norm. non-zero
; hwf : - 1599085526481454 889 (-5.59277e+267) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100101000 #b1111111011001010101010010010100101000010100101111110)))
(assert (= y (fp #b1 #b11101111000 #b0101101011100101110000011100110001010111101000101110)))
(assert (= r (fp #b1 #b11101111000 #b0101101011100101110000011100110001010111101000101110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
