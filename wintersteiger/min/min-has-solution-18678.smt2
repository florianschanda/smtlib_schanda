(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6358126167250024440846800644067116081714630126953125p142 {+ 2863445463760181 142 (9.11996e+042)}
; Y = 1.8588442016174806514783313104999251663684844970703125p742 {+ 3867890426373797 742 (4.30031e+223)}
; 1.6358126167250024440846800644067116081714630126953125p142 m 1.8588442016174806514783313104999251663684844970703125p742 == 1.6358126167250024440846800644067116081714630126953125p142
; [HW: 1.6358126167250024440846800644067116081714630126953125p142] 

; mpf : + 2863445463760181 142
; mpfd: + 2863445463760181 142 (9.11996e+042) class: Pos. norm. non-zero
; hwf : + 2863445463760181 142 (9.11996e+042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001101 #b1010001011000100100111011001101100110111110100110101)))
(assert (= y (fp #b0 #b11011100101 #b1101101111011101001101101010111001001110011010100101)))
(assert (= r (fp #b0 #b10010001101 #b1010001011000100100111011001101100110111110100110101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
