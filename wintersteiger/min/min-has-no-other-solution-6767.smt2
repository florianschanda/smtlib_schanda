(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.48053401718666943764901589020155370235443115234375p93 {- 2164132820740732 93 (-1.46625e+028)}
; Y = 1.2257421927533285188616218874813057482242584228515625p-406 {+ 1016652455165689 -406 (7.41687e-123)}
; -1.48053401718666943764901589020155370235443115234375p93 m 1.2257421927533285188616218874813057482242584228515625p-406 == -1.48053401718666943764901589020155370235443115234375p93
; [HW: -1.48053401718666943764901589020155370235443115234375p93] 

; mpf : - 2164132820740732 93
; mpfd: - 2164132820740732 93 (-1.46625e+028) class: Neg. norm. non-zero
; hwf : - 2164132820740732 93 (-1.46625e+028) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001011100 #b0111101100000100010001110000000001101110101001111100)))
(assert (= y (fp #b0 #b01001101001 #b0011100111001010001111011000011100110011111011111001)))
(assert (= r (fp #b1 #b10001011100 #b0111101100000100010001110000000001101110101001111100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
