(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5587542560723137707867635981529019773006439208984375p-174 {+ 2516405459438951 -174 (6.50966e-053)}
; Y = 1.93595531743630289156499202363193035125732421875p-579 {+ 4215168018841568 -579 (9.78426e-175)}
; 1.5587542560723137707867635981529019773006439208984375p-174 m 1.93595531743630289156499202363193035125732421875p-579 == 1.93595531743630289156499202363193035125732421875p-579
; [HW: 1.93595531743630289156499202363193035125732421875p-579] 

; mpf : + 4215168018841568 -579
; mpfd: + 4215168018841568 -579 (9.78426e-175) class: Pos. norm. non-zero
; hwf : + 4215168018841568 -579 (9.78426e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010001 #b1000111100001010100001001101100001010100110101100111)))
(assert (= y (fp #b0 #b00110111100 #b1110111110011010110001001000011011100111111111100000)))
(assert (= r (fp #b0 #b00110111100 #b1110111110011010110001001000011011100111111111100000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
