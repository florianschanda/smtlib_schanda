(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.500619616027616842757197446189820766448974609375p878 {- 2254590316196336 878 (-3.02417e+264)}
; Y = 1.7185216994473642149188208350096829235553741455078125p-882 {+ 3235934057888765 -882 (5.32965e-266)}
; -1.500619616027616842757197446189820766448974609375p878 m 1.7185216994473642149188208350096829235553741455078125p-882 == -1.500619616027616842757197446189820766448974609375p878
; [HW: -1.500619616027616842757197446189820766448974609375p878] 

; mpf : - 2254590316196336 878
; mpfd: - 2254590316196336 878 (-3.02417e+264) class: Neg. norm. non-zero
; hwf : - 2254590316196336 878 (-3.02417e+264) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101101 #b1000000000101000100110110110111010010011000111110000)))
(assert (= y (fp #b0 #b00010001101 #b1011011111110001000010011100000010010111101111111101)))
(assert (= r (fp #b1 #b11101101101 #b1000000000101000100110110110111010010011000111110000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
