(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.58002453975874868064011025126092135906219482421875p593 {- 2612198301123244 593 (-5.12214e+178)}
; Y = -1.34279858737151158720735111273825168609619140625p-563 {- 1543827590349472 -563 (-4.44758e-170)}
; -1.58002453975874868064011025126092135906219482421875p593 m -1.34279858737151158720735111273825168609619140625p-563 == -1.58002453975874868064011025126092135906219482421875p593
; [HW: -1.58002453975874868064011025126092135906219482421875p593] 

; mpf : - 2612198301123244 593
; mpfd: - 2612198301123244 593 (-5.12214e+178) class: Neg. norm. non-zero
; hwf : - 2612198301123244 593 (-5.12214e+178) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010000 #b1001010001111100011111001111110100100100001010101100)))
(assert (= y (fp #b1 #b00111001100 #b0101011111000001101001011111000111100000001010100000)))
(assert (= r (fp #b1 #b11001010000 #b1001010001111100011111001111110100100100001010101100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
