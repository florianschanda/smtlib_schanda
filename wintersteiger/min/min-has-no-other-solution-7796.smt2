(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4399392131867843058756761820404790341854095458984375p-757 {- 1981310076573671 -757 (-1.89949e-228)}
; Y = 1.631313661676359050289875085582025349140167236328125p-249 {+ 2843183971479554 -249 (1.8033e-075)}
; -1.4399392131867843058756761820404790341854095458984375p-757 m 1.631313661676359050289875085582025349140167236328125p-249 == -1.4399392131867843058756761820404790341854095458984375p-757
; [HW: -1.4399392131867843058756761820404790341854095458984375p-757] 

; mpf : - 1981310076573671 -757
; mpfd: - 1981310076573671 -757 (-1.89949e-228) class: Neg. norm. non-zero
; hwf : - 1981310076573671 -757 (-1.89949e-228) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001010 #b0111000010011111110110110011010011011101011111100111)))
(assert (= y (fp #b0 #b01100000110 #b1010000110011101110001011010101001101011000000000010)))
(assert (= r (fp #b1 #b00100001010 #b0111000010011111110110110011010011011101011111100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
