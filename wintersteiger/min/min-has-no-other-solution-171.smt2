(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2761963967161487065737901502870954573154449462890625p-526 {- 1243877989331921 -526 (-5.80951e-159)}
; Y = 1.489681339734875376024092474835924804210662841796875p266 {+ 2205328699160270 266 (1.76633e+080)}
; -1.2761963967161487065737901502870954573154449462890625p-526 m 1.489681339734875376024092474835924804210662841796875p266 == -1.2761963967161487065737901502870954573154449462890625p-526
; [HW: -1.2761963967161487065737901502870954573154449462890625p-526] 

; mpf : - 1243877989331921 -526
; mpfd: - 1243877989331921 -526 (-5.80951e-159) class: Neg. norm. non-zero
; hwf : - 1243877989331921 -526 (-5.80951e-159) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110001 #b0100011010110100110011101001101100101011001111010001)))
(assert (= y (fp #b0 #b10100001001 #b0111110101011011110000011001101110011111011011001110)))
(assert (= r (fp #b1 #b00111110001 #b0100011010110100110011101001101100101011001111010001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
