(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8460697716630056763875700198695994913578033447265625p724 {- 3810359508390953 724 (-1.62916e+218)}
; Y = -1.8992103679838796548295931643224321305751800537109375p234 {- 4049683478179887 234 (-5.24315e+070)}
; -1.8460697716630056763875700198695994913578033447265625p724 m -1.8992103679838796548295931643224321305751800537109375p234 == -1.8460697716630056763875700198695994913578033447265625p724
; [HW: -1.8460697716630056763875700198695994913578033447265625p724] 

; mpf : - 3810359508390953 724
; mpfd: - 3810359508390953 724 (-1.62916e+218) class: Neg. norm. non-zero
; hwf : - 3810359508390953 724 (-1.62916e+218) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011010011 #b1101100010011000000001110100111101101101010000101001)))
(assert (= y (fp #b1 #b10011101001 #b1110011000110010101001101001001010110111000000101111)))
(assert (= r (fp #b1 #b11011010011 #b1101100010011000000001110100111101101101010000101001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
