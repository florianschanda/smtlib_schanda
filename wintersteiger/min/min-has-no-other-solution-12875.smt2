(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5648164469244019159077652147971093654632568359375p-499 {+ 2543707139901464 -499 (9.56083e-151)}
; Y = 1.7354477183779952742526120346155948936939239501953125p305 {+ 3312162070437621 305 (1.13125e+092)}
; 1.5648164469244019159077652147971093654632568359375p-499 m 1.7354477183779952742526120346155948936939239501953125p305 == 1.5648164469244019159077652147971093654632568359375p-499
; [HW: 1.5648164469244019159077652147971093654632568359375p-499] 

; mpf : + 2543707139901464 -499
; mpfd: + 2543707139901464 -499 (9.56083e-151) class: Pos. norm. non-zero
; hwf : + 2543707139901464 -499 (9.56083e-151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000001100 #b1001000010010111110011111000011111001000100000011000)))
(assert (= y (fp #b0 #b10100110000 #b1011110001000110010011010011101001011001111011110101)))
(assert (= r (fp #b0 #b01000001100 #b1001000010010111110011111000011111001000100000011000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
