(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8702124442561809392060467871488071978092193603515625p322 {- 3919088439685305 322 (-1.5979e+097)}
; Y = 1.77167621496480709453180679702199995517730712890625p-646 {+ 3475320714166180 -646 (6.06746e-195)}
; -1.8702124442561809392060467871488071978092193603515625p322 m 1.77167621496480709453180679702199995517730712890625p-646 == -1.8702124442561809392060467871488071978092193603515625p322
; [HW: -1.8702124442561809392060467871488071978092193603515625p322] 

; mpf : - 3919088439685305 322
; mpfd: - 3919088439685305 322 (-1.5979e+097) class: Neg. norm. non-zero
; hwf : - 3919088439685305 322 (-1.5979e+097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101000001 #b1101111011000110001111100010010010100111000010111001)))
(assert (= y (fp #b0 #b00101111001 #b1100010110001100100100101000101001011111111110100100)))
(assert (= r (fp #b1 #b10101000001 #b1101111011000110001111100010010010100111000010111001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
