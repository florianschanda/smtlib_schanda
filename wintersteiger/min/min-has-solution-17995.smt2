(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2854359707527136524873867529095150530338287353515625p-813 {+ 1285489331520057 -813 (2.35323e-245)}
; Y = -1.365289694872818149207205351558513939380645751953125p633 {- 1645118533711506 633 (-4.86645e+190)}
; 1.2854359707527136524873867529095150530338287353515625p-813 m -1.365289694872818149207205351558513939380645751953125p633 == -1.365289694872818149207205351558513939380645751953125p633
; [HW: -1.365289694872818149207205351558513939380645751953125p633] 

; mpf : - 1645118533711506 633
; mpfd: - 1645118533711506 633 (-4.86645e+190) class: Neg. norm. non-zero
; hwf : - 1645118533711506 633 (-4.86645e+190) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010010 #b0100100100010010010101001110111101111100001000111001)))
(assert (= y (fp #b1 #b11001111000 #b0101110110000011101000000001110100001011011010010010)))
(assert (= r (fp #b1 #b11001111000 #b0101110110000011101000000001110100001011011010010010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
