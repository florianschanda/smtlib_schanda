(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.91143234360075897626529695116914808750152587890625p-597 {+ 4104726363013796 -597 (3.68512e-180)}
; Y = 1.2927667031243450512789650019840337336063385009765625p-876 {+ 1318504015097289 -876 (2.56592e-264)}
; 1.91143234360075897626529695116914808750152587890625p-597 m 1.2927667031243450512789650019840337336063385009765625p-876 == 1.2927667031243450512789650019840337336063385009765625p-876
; [HW: 1.2927667031243450512789650019840337336063385009765625p-876] 

; mpf : + 1318504015097289 -876
; mpfd: + 1318504015097289 -876 (2.56592e-264) class: Pos. norm. non-zero
; hwf : + 1318504015097289 -876 (2.56592e-264) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101010 #b1110100101010011101000010100110001001000001010100100)))
(assert (= y (fp #b0 #b00010010011 #b0100101011110010110000100011011101000110110111001001)))
(assert (= r (fp #b0 #b00010010011 #b0100101011110010110000100011011101000110110111001001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
