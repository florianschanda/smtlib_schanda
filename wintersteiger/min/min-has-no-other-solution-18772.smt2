(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7138134499647528219412606631522066891193389892578125p-133 {- 3214729987273309 -133 (-1.57389e-040)}
; Y = -1.2446534019607089494030560672399587929248809814453125p99 {- 1101820969905173 99 (-7.88893e+029)}
; -1.7138134499647528219412606631522066891193389892578125p-133 m -1.2446534019607089494030560672399587929248809814453125p99 == -1.2446534019607089494030560672399587929248809814453125p99
; [HW: -1.2446534019607089494030560672399587929248809814453125p99] 

; mpf : - 1101820969905173 99
; mpfd: - 1101820969905173 99 (-7.88893e+029) class: Neg. norm. non-zero
; hwf : - 1101820969905173 99 (-7.88893e+029) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111010 #b1011011010111100011110100110111100001011001001011101)))
(assert (= y (fp #b1 #b10001100010 #b0011111010100001100110101111100001000110110000010101)))
(assert (= r (fp #b1 #b10001100010 #b0011111010100001100110101111100001000110110000010101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
