(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.534695928160985989308073840220458805561065673828125p269 {+ 2408056382822338 269 (1.45576e+081)}
; Y = 1.619922121278531523813626336050219833850860595703125p946 {+ 2791881034388722 946 (9.63541e+284)}
; 1.534695928160985989308073840220458805561065673828125p269 m 1.619922121278531523813626336050219833850860595703125p946 == 1.534695928160985989308073840220458805561065673828125p269
; [HW: 1.534695928160985989308073840220458805561065673828125p269] 

; mpf : + 2408056382822338 269
; mpfd: + 2408056382822338 269 (1.45576e+081) class: Pos. norm. non-zero
; hwf : + 2408056382822338 269 (1.45576e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001100 #b1000100011100001110101010001010011000001011111000010)))
(assert (= y (fp #b0 #b11110110001 #b1001111010110011001101110101010011110101010011110010)))
(assert (= r (fp #b0 #b10100001100 #b1000100011100001110101010001010011000001011111000010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
