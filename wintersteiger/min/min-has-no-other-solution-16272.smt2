(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7841561912904360109877188733662478625774383544921875p141 {- 3531525530895875 141 (-4.9735e+042)}
; Y = -1.52948244550041323464029119350016117095947265625p-116 {- 2384576944254880 -116 (-1.84105e-035)}
; -1.7841561912904360109877188733662478625774383544921875p141 m -1.52948244550041323464029119350016117095947265625p-116 == -1.7841561912904360109877188733662478625774383544921875p141
; [HW: -1.7841561912904360109877188733662478625774383544921875p141] 

; mpf : - 3531525530895875 141
; mpfd: - 3531525530895875 141 (-4.9735e+042) class: Neg. norm. non-zero
; hwf : - 3531525530895875 141 (-4.9735e+042) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001100 #b1100100010111110011101011100110010001100011000000011)))
(assert (= y (fp #b1 #b01110001011 #b1000011110001100001010010101101100111010111110100000)))
(assert (= r (fp #b1 #b10010001100 #b1100100010111110011101011100110010001100011000000011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
