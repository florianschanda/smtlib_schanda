(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0734962984974056876552594985696487128734588623046875p887 {- 330997902526027 887 (-1.10766e+267)}
; Y = -1.7019496072428912381013788035488687455654144287109375p-692 {- 3161299989611951 -692 (-8.28304e-209)}
; -1.0734962984974056876552594985696487128734588623046875p887 m -1.7019496072428912381013788035488687455654144287109375p-692 == -1.0734962984974056876552594985696487128734588623046875p887
; [HW: -1.0734962984974056876552594985696487128734588623046875p887] 

; mpf : - 330997902526027 887
; mpfd: - 330997902526027 887 (-1.10766e+267) class: Neg. norm. non-zero
; hwf : - 330997902526027 887 (-1.10766e+267) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110110 #b0001001011010000101001110100011001101100011001001011)))
(assert (= y (fp #b1 #b00101001011 #b1011001110110010111110000010111010001100010110101111)))
(assert (= r (fp #b1 #b11101110110 #b0001001011010000101001110100011001101100011001001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
