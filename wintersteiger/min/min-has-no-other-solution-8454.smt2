(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.635064873786082007001141391810961067676544189453125p-756 {- 2860077928939090 -756 (-4.31378e-228)}
; Y = -1.4136116428450353765811087214387953281402587890625p-157 {- 1862741240593000 -157 (-7.73786e-048)}
; -1.635064873786082007001141391810961067676544189453125p-756 m -1.4136116428450353765811087214387953281402587890625p-157 == -1.4136116428450353765811087214387953281402587890625p-157
; [HW: -1.4136116428450353765811087214387953281402587890625p-157] 

; mpf : - 1862741240593000 -157
; mpfd: - 1862741240593000 -157 (-7.73786e-048) class: Neg. norm. non-zero
; hwf : - 1862741240593000 -157 (-7.73786e-048) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001011 #b1010001010010011100111001000111110111111111001010010)))
(assert (= y (fp #b1 #b01101100010 #b0110100111100010011100111101111101000011101001101000)))
(assert (= r (fp #b1 #b01101100010 #b0110100111100010011100111101111101000011101001101000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
