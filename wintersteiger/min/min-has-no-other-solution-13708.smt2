(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.543237217543662165297746469150297343730926513671875p-478 {+ 2446522930503422 -478 (1.9774e-144)}
; Y = -1.0838308432755014987236563683836720883846282958984375p-503 {- 377540554537703 -503 (-4.13879e-152)}
; 1.543237217543662165297746469150297343730926513671875p-478 m -1.0838308432755014987236563683836720883846282958984375p-503 == -1.0838308432755014987236563683836720883846282958984375p-503
; [HW: -1.0838308432755014987236563683836720883846282958984375p-503] 

; mpf : - 377540554537703 -503
; mpfd: - 377540554537703 -503 (-4.13879e-152) class: Neg. norm. non-zero
; hwf : - 377540554537703 -503 (-4.13879e-152) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000100001 #b1000101100010001100110000010001101010001111011111110)))
(assert (= y (fp #b1 #b01000001000 #b0001010101110101111100000010101001000011101011100111)))
(assert (= r (fp #b1 #b01000001000 #b0001010101110101111100000010101001000011101011100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
