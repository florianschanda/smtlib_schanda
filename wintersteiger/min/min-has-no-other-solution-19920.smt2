(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2214763202452039170253783595398999750614166259765625p479 {- 997440673327689 479 (-1.90657e+144)}
; Y = 1.645127449174178746460484035196714103221893310546875p-485 {+ 2905395739707310 -485 (1.64684e-146)}
; -1.2214763202452039170253783595398999750614166259765625p479 m 1.645127449174178746460484035196714103221893310546875p-485 == -1.2214763202452039170253783595398999750614166259765625p479
; [HW: -1.2214763202452039170253783595398999750614166259765625p479] 

; mpf : - 997440673327689 479
; mpfd: - 997440673327689 479 (-1.90657e+144) class: Neg. norm. non-zero
; hwf : - 997440673327689 479 (-1.90657e+144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011110 #b0011100010110010101011000001000001001010101001001001)))
(assert (= y (fp #b0 #b01000011010 #b1010010100100111000100101000111111110100011110101110)))
(assert (= r (fp #b1 #b10111011110 #b0011100010110010101011000001000001001010101001001001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
