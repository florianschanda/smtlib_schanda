(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.91187007722566537637476358213461935520172119140625p-28 {- 4106697740003812 -28 (-7.12227e-009)}
; Y = 1.4169536193408054369768933611339889466762542724609375p-495 {+ 1877792164694031 -495 (1.38519e-149)}
; -1.91187007722566537637476358213461935520172119140625p-28 m 1.4169536193408054369768933611339889466762542724609375p-495 == -1.91187007722566537637476358213461935520172119140625p-28
; [HW: -1.91187007722566537637476358213461935520172119140625p-28] 

; mpf : - 4106697740003812 -28
; mpfd: - 4106697740003812 -28 (-7.12227e-009) class: Neg. norm. non-zero
; hwf : - 4106697740003812 -28 (-7.12227e-009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100011 #b1110100101110000010100010011111111100010100111100100)))
(assert (= y (fp #b0 #b01000010000 #b0110101010111101011110001110111100000100100000001111)))
(assert (= r (fp #b1 #b01111100011 #b1110100101110000010100010011111111100010100111100100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
