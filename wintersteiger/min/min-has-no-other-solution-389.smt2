(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.738355318536008109475687888334505259990692138671875p-359 {+ 3325256737425790 -359 (1.48037e-108)}
; Y = 1.046599857123438059858244741917587816715240478515625p219 {+ 209867099176634 219 (8.81759e+065)}
; 1.738355318536008109475687888334505259990692138671875p-359 m 1.046599857123438059858244741917587816715240478515625p219 == 1.738355318536008109475687888334505259990692138671875p-359
; [HW: 1.738355318536008109475687888334505259990692138671875p-359] 

; mpf : + 3325256737425790 -359
; mpfd: + 3325256737425790 -359 (1.48037e-108) class: Pos. norm. non-zero
; hwf : + 3325256737425790 -359 (1.48037e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011000 #b1011110100000100110110101010100111110000100101111110)))
(assert (= y (fp #b0 #b10011011010 #b0000101111101101111101111101111001010111111010111010)))
(assert (= r (fp #b0 #b01010011000 #b1011110100000100110110101010100111110000100101111110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
