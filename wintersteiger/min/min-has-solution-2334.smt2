(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1763642962237537137326626179856248199939727783203125p672 {+ 794274178754757 672 (2.30515e+202)}
; Y = -1.49416617854037792056942635099403560161590576171875p155 {- 2225526617533548 155 (-6.82414e+046)}
; 1.1763642962237537137326626179856248199939727783203125p672 m -1.49416617854037792056942635099403560161590576171875p155 == -1.49416617854037792056942635099403560161590576171875p155
; [HW: -1.49416617854037792056942635099403560161590576171875p155] 

; mpf : - 2225526617533548 155
; mpfd: - 2225526617533548 155 (-6.82414e+046) class: Neg. norm. non-zero
; hwf : - 2225526617533548 155 (-6.82414e+046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011111 #b0010110100100110001101011110010001110110100011000101)))
(assert (= y (fp #b1 #b10010011010 #b0111111010000001101011001011011110011110110001101100)))
(assert (= r (fp #b1 #b10010011010 #b0111111010000001101011001011011110011110110001101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
