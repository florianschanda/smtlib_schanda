(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.90729981293839756517627392895519733428955078125p-176 {+ 4086115099462688 -176 (1.99131e-053)}
; Y = -1.952156078710581166291149202152155339717864990234375p-1009 {- 4288129761279526 -1009 (-3.55835e-304)}
; 1.90729981293839756517627392895519733428955078125p-176 m -1.952156078710581166291149202152155339717864990234375p-1009 == -1.952156078710581166291149202152155339717864990234375p-1009
; [HW: -1.952156078710581166291149202152155339717864990234375p-1009] 

; mpf : - 4288129761279526 -1009
; mpfd: - 4288129761279526 -1009 (-3.55835e-304) class: Neg. norm. non-zero
; hwf : - 4288129761279526 -1009 (-3.55835e-304) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001111 #b1110100001000100110011001111000000111100110000100000)))
(assert (= y (fp #b1 #b00000001110 #b1111001111000000100000000011001010111111111000100110)))
(assert (= r (fp #b1 #b00000001110 #b1111001111000000100000000011001010111111111000100110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
