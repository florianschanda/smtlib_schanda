(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.867128955761101050114803001633845269680023193359375p-213 {- 3905201642047862 -213 (-1.41836e-064)}
; Y = -1.4020491256843239380458498999360017478466033935546875p-757 {- 1810668292616555 -757 (-1.84951e-228)}
; -1.867128955761101050114803001633845269680023193359375p-213 m -1.4020491256843239380458498999360017478466033935546875p-757 == -1.867128955761101050114803001633845269680023193359375p-213
; [HW: -1.867128955761101050114803001633845269680023193359375p-213] 

; mpf : - 3905201642047862 -213
; mpfd: - 3905201642047862 -213 (-1.41836e-064) class: Neg. norm. non-zero
; hwf : - 3905201642047862 -213 (-1.41836e-064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100101010 #b1101110111111100001010011100101001101000100101110110)))
(assert (= y (fp #b1 #b00100001010 #b0110011011101100101100010000011000110011000101101011)))
(assert (= r (fp #b1 #b01100101010 #b1101110111111100001010011100101001101000100101110110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
