(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.22856354226957620312532526440918445587158203125p-43 {- 1029358683795744 -43 (-1.39672e-013)}
; Y = -1.53085977413125906565483091981150209903717041015625p868 {- 2390779880963524 868 (-3.01281e+261)}
; -1.22856354226957620312532526440918445587158203125p-43 m -1.53085977413125906565483091981150209903717041015625p868 == -1.53085977413125906565483091981150209903717041015625p868
; [HW: -1.53085977413125906565483091981150209903717041015625p868] 

; mpf : - 2390779880963524 868
; mpfd: - 2390779880963524 868 (-3.01281e+261) class: Neg. norm. non-zero
; hwf : - 2390779880963524 868 (-3.01281e+261) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111010100 #b0011101010000011001000111110101100011011000100100000)))
(assert (= y (fp #b1 #b11101100011 #b1000011111100110011011010001100010100111110111000100)))
(assert (= r (fp #b1 #b11101100011 #b1000011111100110011011010001100010100111110111000100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
