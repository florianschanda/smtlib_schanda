(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -0.7725498649061861566877951190690509974956512451171875p-1022 {- 3479255283716627 -1023 (-1.71898e-308)}
; Y = 1.9029899815985096278581067963386885821819305419921875p590 {+ 4066705344646339 590 (7.71141e+177)}
; -0.7725498649061861566877951190690509974956512451171875p-1022 m 1.9029899815985096278581067963386885821819305419921875p590 == -0.7725498649061861566877951190690509974956512451171875p-1022
; [HW: -0.7725498649061861566877951190690509974956512451171875p-1022] 

; mpf : - 3479255283716627 -1023
; mpfd: - 3479255283716627 -1023 (-1.71898e-308) class: Neg. denorm.
; hwf : - 3479255283716627 -1023 (-1.71898e-308) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1100010111000101110100111111010001001101001000010011)))
(assert (= y (fp #b0 #b11001001101 #b1110011100101010010110011111011110010100110011000011)))
(assert (= r (fp #b1 #b00000000000 #b1100010111000101110100111111010001001101001000010011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
