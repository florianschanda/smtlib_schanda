(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.913533778170339427759927275474183261394500732421875p757 {+ 4114190382958302 757 (1.45058e+228)}
; Y = 1.02234726116833574138809126452542841434478759765625p947 {+ 100643117070468 947 (1.2162e+285)}
; 1.913533778170339427759927275474183261394500732421875p757 m 1.02234726116833574138809126452542841434478759765625p947 == 1.913533778170339427759927275474183261394500732421875p757
; [HW: 1.913533778170339427759927275474183261394500732421875p757] 

; mpf : + 4114190382958302 757
; mpfd: + 4114190382958302 757 (1.45058e+228) class: Pos. norm. non-zero
; hwf : + 4114190382958302 757 (1.45058e+228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110100 #b1110100111011101010110011000010100001000011011011110)))
(assert (= y (fp #b0 #b11110110010 #b0000010110111000100011001101001111011111100010000100)))
(assert (= r (fp #b0 #b11011110100 #b1110100111011101010110011000010100001000011011011110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
