(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.236652713643454859493431285955011844635009765625p299 {+ 1065789072980880 299 (1.25955e+090)}
; Y = -1.313504655360831829824519445537589490413665771484375p415 {- 1411899449061958 415 (-1.11142e+125)}
; 1.236652713643454859493431285955011844635009765625p299 m -1.313504655360831829824519445537589490413665771484375p415 == -1.313504655360831829824519445537589490413665771484375p415
; [HW: -1.313504655360831829824519445537589490413665771484375p415] 

; mpf : - 1411899449061958 415
; mpfd: - 1411899449061958 415 (-1.11142e+125) class: Neg. norm. non-zero
; hwf : - 1411899449061958 415 (-1.11142e+125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101010 #b0011110010010101010001011011000110011011101110010000)))
(assert (= y (fp #b1 #b10110011110 #b0101000001000001110101110101000111101011001001000110)))
(assert (= r (fp #b1 #b10110011110 #b0101000001000001110101110101000111101011001001000110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
