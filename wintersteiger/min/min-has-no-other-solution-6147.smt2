(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4766426663946423669671048628515563905239105224609375p-14 {- 2146607734763791 -14 (-9.01271e-005)}
; Y = -1.1586013673769830489845844567753374576568603515625p144 {- 714277059019432 144 (-2.58377e+043)}
; -1.4766426663946423669671048628515563905239105224609375p-14 m -1.1586013673769830489845844567753374576568603515625p144 == -1.1586013673769830489845844567753374576568603515625p144
; [HW: -1.1586013673769830489845844567753374576568603515625p144] 

; mpf : - 714277059019432 144
; mpfd: - 714277059019432 144 (-2.58377e+043) class: Neg. norm. non-zero
; hwf : - 714277059019432 144 (-2.58377e+043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110001 #b0111101000000101010000001111100000001011000100001111)))
(assert (= y (fp #b1 #b10010001111 #b0010100010011010000110010110010111111100001010101000)))
(assert (= r (fp #b1 #b10010001111 #b0010100010011010000110010110010111111100001010101000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
