(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.737859163784883254066926383529789745807647705078125p-291 {+ 3323022255073506 -291 (4.36803e-088)}
; Y = -1.913319571192573231854794357786886394023895263671875p497 {- 4113225680493054 497 (-7.8288e+149)}
; 1.737859163784883254066926383529789745807647705078125p-291 m -1.913319571192573231854794357786886394023895263671875p497 == -1.913319571192573231854794357786886394023895263671875p497
; [HW: -1.913319571192573231854794357786886394023895263671875p497] 

; mpf : - 4113225680493054 497
; mpfd: - 4113225680493054 497 (-7.8288e+149) class: Neg. norm. non-zero
; hwf : - 4113225680493054 497 (-7.8288e+149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011100 #b1011110011100100010101101001000110000010100011100010)))
(assert (= y (fp #b1 #b10111110000 #b1110100111001111010011111011100100010001100111111110)))
(assert (= r (fp #b1 #b10111110000 #b1110100111001111010011111011100100010001100111111110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
