(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8139653687317913721699369489215314388275146484375p-961 {+ 3665774131312984 -961 (9.30686e-290)}
; Y = 1.6890335595132743851110035393503494560718536376953125p367 {+ 3103131281869749 367 (5.07746e+110)}
; 1.8139653687317913721699369489215314388275146484375p-961 m 1.6890335595132743851110035393503494560718536376953125p367 == 1.8139653687317913721699369489215314388275146484375p-961
; [HW: 1.8139653687317913721699369489215314388275146484375p-961] 

; mpf : + 3665774131312984 -961
; mpfd: + 3665774131312984 -961 (9.30686e-290) class: Pos. norm. non-zero
; hwf : + 3665774131312984 -961 (9.30686e-290) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000111110 #b1101000001100000000010001100111011000111100101011000)))
(assert (= y (fp #b0 #b10101101110 #b1011000001100100100000001101101111110100101110110101)))
(assert (= r (fp #b0 #b00000111110 #b1101000001100000000010001100111011000111100101011000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
