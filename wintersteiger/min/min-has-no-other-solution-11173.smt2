(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.91398785225052137093371129594743251800537109375p-825 {+ 4116235350816608 -825 (8.55446e-249)}
; Y = 1.5676125312714506154776472612866200506687164306640625p-476 {+ 2556299584324929 -476 (8.03454e-144)}
; 1.91398785225052137093371129594743251800537109375p-825 m 1.5676125312714506154776472612866200506687164306640625p-476 == 1.91398785225052137093371129594743251800537109375p-825
; [HW: 1.91398785225052137093371129594743251800537109375p-825] 

; mpf : + 4116235350816608 -825
; mpfd: + 4116235350816608 -825 (8.55446e-249) class: Pos. norm. non-zero
; hwf : + 4116235350816608 -825 (8.55446e-249) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000110 #b1110100111111011000110111001111001011011011101100000)))
(assert (= y (fp #b0 #b01000100011 #b1001000101001111000011100000101010011100010101000001)))
(assert (= r (fp #b0 #b00011000110 #b1110100111111011000110111001111001011011011101100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
