(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7471396974003410296205629492760635912418365478515625p702 {+ 3364818062805881 702 (3.67608e+211)}
; Y = 1.299714595598171928969577493262477219104766845703125p-16 {+ 1349794541053426 -16 (1.98321e-005)}
; 1.7471396974003410296205629492760635912418365478515625p702 m 1.299714595598171928969577493262477219104766845703125p-16 == 1.299714595598171928969577493262477219104766845703125p-16
; [HW: 1.299714595598171928969577493262477219104766845703125p-16] 

; mpf : + 1349794541053426 -16
; mpfd: + 1349794541053426 -16 (1.98321e-005) class: Pos. norm. non-zero
; hwf : + 1349794541053426 -16 (1.98321e-005) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111101 #b1011111101000100100011000001010111100000101101111001)))
(assert (= y (fp #b0 #b01111101111 #b0100110010111010000110001000001000111010010111110010)))
(assert (= r (fp #b0 #b01111101111 #b0100110010111010000110001000001000111010010111110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
