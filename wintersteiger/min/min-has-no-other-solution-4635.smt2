(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2275624089304653097087793867103755474090576171875p497 {- 1024849980062776 497 (-5.02286e+149)}
; Y = 1.824990319285924922354524824186228215694427490234375p89 {+ 3715426094520358 89 (1.12961e+027)}
; -1.2275624089304653097087793867103755474090576171875p497 m 1.824990319285924922354524824186228215694427490234375p89 == -1.2275624089304653097087793867103755474090576171875p497
; [HW: -1.2275624089304653097087793867103755474090576171875p497] 

; mpf : - 1024849980062776 497
; mpfd: - 1024849980062776 497 (-5.02286e+149) class: Neg. norm. non-zero
; hwf : - 1024849980062776 497 (-5.02286e+149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110000 #b0011101001000001100001111011000000100111110000111000)))
(assert (= y (fp #b0 #b10001011000 #b1101001100110010100100001100100011011001100000100110)))
(assert (= r (fp #b1 #b10111110000 #b0011101001000001100001111011000000100111110000111000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
