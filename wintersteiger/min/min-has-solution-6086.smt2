(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.1488993451336597662049143764306791126728057861328125p-1022 {+ 670583035259661 -1023 (3.31312e-309)}
; Y = -1.1795318215655494764604327428969554603099822998046875p346 {- 808539444703755 346 (-1.69078e+104)}
; 0.1488993451336597662049143764306791126728057861328125p-1022 m -1.1795318215655494764604327428969554603099822998046875p346 == -1.1795318215655494764604327428969554603099822998046875p346
; [HW: -1.1795318215655494764604327428969554603099822998046875p346] 

; mpf : - 808539444703755 346
; mpfd: - 808539444703755 346 (-1.69078e+104) class: Neg. norm. non-zero
; hwf : - 808539444703755 346 (-1.69078e+104) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0010011000011110010001000111100110111110101100001101)))
(assert (= y (fp #b1 #b10101011001 #b0010110111110101110011000010011000110111001000001011)))
(assert (= r (fp #b1 #b10101011001 #b0010110111110101110011000010011000110111001000001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
