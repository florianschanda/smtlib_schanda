(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.438800796354172462088172324001789093017578125p36 {- 1976183102950528 36 (-9.88736e+010)}
; Y = 1.23739729472774673268986589391715824604034423828125p298 {+ 1069142368074644 298 (6.30156e+089)}
; -1.438800796354172462088172324001789093017578125p36 m 1.23739729472774673268986589391715824604034423828125p298 == -1.438800796354172462088172324001789093017578125p36
; [HW: -1.438800796354172462088172324001789093017578125p36] 

; mpf : - 1976183102950528 36
; mpfd: - 1976183102950528 36 (-9.88736e+010) class: Neg. norm. non-zero
; hwf : - 1976183102950528 36 (-9.88736e+010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100011 #b0111000001010101001111111011110111001100110010000000)))
(assert (= y (fp #b0 #b10100101001 #b0011110011000110000100011011000100000011101110010100)))
(assert (= r (fp #b1 #b10000100011 #b0111000001010101001111111011110111001100110010000000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
