(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.100602203557912606157742629875428974628448486328125p608 {- 453072046456066 608 (-1.16914e+183)}
; Y = -1.3404018355088147540499221577192656695842742919921875p-4 {- 1533033579553731 -4 (-0.0837751)}
; -1.100602203557912606157742629875428974628448486328125p608 m -1.3404018355088147540499221577192656695842742919921875p-4 == -1.100602203557912606157742629875428974628448486328125p608
; [HW: -1.100602203557912606157742629875428974628448486328125p608] 

; mpf : - 453072046456066 608
; mpfd: - 453072046456066 608 (-1.16914e+183) class: Neg. norm. non-zero
; hwf : - 453072046456066 608 (-1.16914e+183) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001011111 #b0001100111000001000100001110011000101111110100000010)))
(assert (= y (fp #b1 #b01111111011 #b0101011100100100100100110001111100000010001111000011)))
(assert (= r (fp #b1 #b11001011111 #b0001100111000001000100001110011000101111110100000010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
