(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3126502825452270872830240477924235165119171142578125p-490 {- 1408051695967965 -490 (-4.1063e-148)}
; Y = 1.4366639636947946545575405252748169004917144775390625p245 {+ 1966559664182001 245 (8.12277e+073)}
; -1.3126502825452270872830240477924235165119171142578125p-490 m 1.4366639636947946545575405252748169004917144775390625p245 == -1.3126502825452270872830240477924235165119171142578125p-490
; [HW: -1.3126502825452270872830240477924235165119171142578125p-490] 

; mpf : - 1408051695967965 -490
; mpfd: - 1408051695967965 -490 (-4.1063e-148) class: Neg. norm. non-zero
; hwf : - 1408051695967965 -490 (-4.1063e-148) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000010101 #b0101000000001001110110010101001010011101111011011101)))
(assert (= y (fp #b0 #b10011110100 #b0110111111001001001101011010001101101001001011110001)))
(assert (= r (fp #b1 #b01000010101 #b0101000000001001110110010101001010011101111011011101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
