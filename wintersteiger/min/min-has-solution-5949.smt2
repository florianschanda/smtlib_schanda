(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.556965241813320854902258361107669770717620849609375p305 {- 2508348455488790 305 (-1.01491e+092)}
; Y = -1.61126444750194508515050983987748622894287109375p-823 {- 2752890337994592 -823 (-2.88058e-248)}
; -1.556965241813320854902258361107669770717620849609375p305 m -1.61126444750194508515050983987748622894287109375p-823 == -1.556965241813320854902258361107669770717620849609375p305
; [HW: -1.556965241813320854902258361107669770717620849609375p305] 

; mpf : - 2508348455488790 305
; mpfd: - 2508348455488790 305 (-1.01491e+092) class: Neg. norm. non-zero
; hwf : - 2508348455488790 305 (-1.01491e+092) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100110000 #b1000111010010101010001100010101010011000110100010110)))
(assert (= y (fp #b1 #b00011001000 #b1001110001111011110100111010101100111010011101100000)))
(assert (= r (fp #b1 #b10100110000 #b1000111010010101010001100010101010011000110100010110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
