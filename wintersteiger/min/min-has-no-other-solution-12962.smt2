(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9093163277034499447637472258065827190876007080078125p-887 {- 4095196674607165 -887 (-1.85043e-267)}
; Y = -1.106112424683458161922544604749418795108795166015625p222 {- 477887876263802 222 (-7.45518e+066)}
; -1.9093163277034499447637472258065827190876007080078125p-887 m -1.106112424683458161922544604749418795108795166015625p222 == -1.106112424683458161922544604749418795108795166015625p222
; [HW: -1.106112424683458161922544604749418795108795166015625p222] 

; mpf : - 477887876263802 222
; mpfd: - 477887876263802 222 (-7.45518e+066) class: Neg. norm. non-zero
; hwf : - 477887876263802 222 (-7.45518e+066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001000 #b1110100011001000111101000111000100110100100000111101)))
(assert (= y (fp #b1 #b10011011101 #b0001101100101010001011110001000110110110111101111010)))
(assert (= r (fp #b1 #b10011011101 #b0001101100101010001011110001000110110110111101111010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
