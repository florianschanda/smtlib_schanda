(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6719799899194389691814421894378028810024261474609375p103 {+ 3026328832201615 103 (1.69559e+031)}
; Y = 1.5685369472924779454814370183157734572887420654296875p420 {+ 2560462783972763 420 (4.2471e+126)}
; 1.6719799899194389691814421894378028810024261474609375p103 m 1.5685369472924779454814370183157734572887420654296875p420 == 1.6719799899194389691814421894378028810024261474609375p103
; [HW: 1.6719799899194389691814421894378028810024261474609375p103] 

; mpf : + 3026328832201615 103
; mpfd: + 3026328832201615 103 (1.69559e+031) class: Pos. norm. non-zero
; hwf : + 3026328832201615 103 (1.69559e+031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001100110 #b1010110000000110111000010111000001000101001110001111)))
(assert (= y (fp #b0 #b10110100011 #b1001000110001011101000110010101100110000010110011011)))
(assert (= r (fp #b0 #b10001100110 #b1010110000000110111000010111000001000101001110001111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
