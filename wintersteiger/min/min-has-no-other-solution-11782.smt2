(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.156389209293845254933330579660832881927490234375p732 {- 704314384700528 732 (-2.61253e+220)}
; Y = 1.1992817479852337925194660783745348453521728515625p-241 {+ 897485205968040 -241 (3.39385e-073)}
; -1.156389209293845254933330579660832881927490234375p732 m 1.1992817479852337925194660783745348453521728515625p-241 == -1.156389209293845254933330579660832881927490234375p732
; [HW: -1.156389209293845254933330579660832881927490234375p732] 

; mpf : - 704314384700528 732
; mpfd: - 704314384700528 732 (-2.61253e+220) class: Neg. norm. non-zero
; hwf : - 704314384700528 732 (-2.61253e+220) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011011 #b0010100000001001000111111000101101011101010001110000)))
(assert (= y (fp #b0 #b01100001110 #b0011001100000100001000001110111001001001010010101000)))
(assert (= r (fp #b1 #b11011011011 #b0010100000001001000111111000101101011101010001110000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
