(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5622441336377528298129391259863041341304779052734375p116 {- 2532122470742231 116 (-1.29786e+035)}
; Y = -1.230311985658758988648742160876281559467315673828125p-945 {- 1037232972791746 -945 (-4.13685e-285)}
; -1.5622441336377528298129391259863041341304779052734375p116 m -1.230311985658758988648742160876281559467315673828125p-945 == -1.5622441336377528298129391259863041341304779052734375p116
; [HW: -1.5622441336377528298129391259863041341304779052734375p116] 

; mpf : - 2532122470742231 116
; mpfd: - 2532122470742231 116 (-1.29786e+035) class: Neg. norm. non-zero
; hwf : - 2532122470742231 116 (-1.29786e+035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001110011 #b1000111111101111001110110100011001010111100011010111)))
(assert (= y (fp #b1 #b00001001110 #b0011101011110101101110011110111001000111111111000010)))
(assert (= r (fp #b1 #b10001110011 #b1000111111101111001110110100011001010111100011010111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
