(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4900033984076908044613674064748920500278472900390625p-819 {+ 2206779122479153 -819 (4.26207e-247)}
; Y = 1.0288848076363990013959437419543974101543426513671875p76 {+ 130085608907955 76 (7.77403e+022)}
; 1.4900033984076908044613674064748920500278472900390625p-819 m 1.0288848076363990013959437419543974101543426513671875p76 == 1.4900033984076908044613674064748920500278472900390625p-819
; [HW: 1.4900033984076908044613674064748920500278472900390625p-819] 

; mpf : + 2206779122479153 -819
; mpfd: + 2206779122479153 -819 (4.26207e-247) class: Pos. norm. non-zero
; hwf : + 2206779122479153 -819 (4.26207e-247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001100 #b0111110101110000110111001101101100010111000000110001)))
(assert (= y (fp #b0 #b10001001011 #b0000011101100100111111101010100000100110010010110011)))
(assert (= r (fp #b0 #b00011001100 #b0111110101110000110111001101101100010111000000110001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
