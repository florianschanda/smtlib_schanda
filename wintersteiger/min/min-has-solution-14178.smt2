(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2803069531383126644641379243694245815277099609375p761 {+ 1262390289703064 761 (1.55289e+229)}
; Y = 1.91139349505333289158670595497824251651763916015625p668 {+ 4104551404710084 668 (2.34092e+201)}
; 1.2803069531383126644641379243694245815277099609375p761 m 1.91139349505333289158670595497824251651763916015625p668 == 1.91139349505333289158670595497824251651763916015625p668
; [HW: 1.91139349505333289158670595497824251651763916015625p668] 

; mpf : + 4104551404710084 668
; mpfd: + 4104551404710084 668 (2.34092e+201) class: Pos. norm. non-zero
; hwf : + 4104551404710084 668 (2.34092e+201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111000 #b0100011111000010001100100100110010010010000010011000)))
(assert (= y (fp #b0 #b11010011011 #b1110100101010001000101011000011100001010100011000100)))
(assert (= r (fp #b0 #b11010011011 #b1110100101010001000101011000011100001010100011000100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
