(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3661367545869735895536223324597813189029693603515625p270 {+ 1648933351524537 270 (2.59175e+081)}
; Y = 1.23690589788161364737106850952841341495513916015625p1007 {+ 1066929313421508 1007 (1.69645e+303)}
; 1.3661367545869735895536223324597813189029693603515625p270 m 1.23690589788161364737106850952841341495513916015625p1007 == 1.3661367545869735895536223324597813189029693603515625p270
; [HW: 1.3661367545869735895536223324597813189029693603515625p270] 

; mpf : + 1648933351524537 270
; mpfd: + 1648933351524537 270 (2.59175e+081) class: Pos. norm. non-zero
; hwf : + 1648933351524537 270 (2.59175e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001101 #b0101110110111011001000110110101011010000100010111001)))
(assert (= y (fp #b0 #b11111101110 #b0011110010100101110111010110101110100001100011000100)))
(assert (= r (fp #b0 #b10100001101 #b0101110110111011001000110110101011010000100010111001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
