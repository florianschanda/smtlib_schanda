(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.74685745098471301162135205231606960296630859375p740 {- 3363546937953632 740 (-1.01031e+223)}
; Y = 1.165071266615541833999714071978814899921417236328125p634 {+ 743414894819330 634 (8.30558e+190)}
; -1.74685745098471301162135205231606960296630859375p740 m 1.165071266615541833999714071978814899921417236328125p634 == -1.74685745098471301162135205231606960296630859375p740
; [HW: -1.74685745098471301162135205231606960296630859375p740] 

; mpf : - 3363546937953632 740
; mpfd: - 3363546937953632 740 (-1.01031e+223) class: Neg. norm. non-zero
; hwf : - 3363546937953632 740 (-1.01031e+223) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100011 #b1011111100110010000011001100011011000000110101100000)))
(assert (= y (fp #b0 #b11001111001 #b0010101001000010000111000100101110011111100000000010)))
(assert (= r (fp #b1 #b11011100011 #b1011111100110010000011001100011011000000110101100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
