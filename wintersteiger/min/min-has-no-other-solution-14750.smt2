(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.87514612746910191987126381718553602695465087890625p-87 {- 3941307773564580 -87 (-1.21178e-026)}
; Y = -1.5765952426262568319970114316674880683422088623046875p-567 {- 2596754119835211 -567 (-3.26372e-171)}
; -1.87514612746910191987126381718553602695465087890625p-87 m -1.5765952426262568319970114316674880683422088623046875p-567 == -1.87514612746910191987126381718553602695465087890625p-87
; [HW: -1.87514612746910191987126381718553602695465087890625p-87] 

; mpf : - 3941307773564580 -87
; mpfd: - 3941307773564580 -87 (-1.21178e-026) class: Neg. norm. non-zero
; hwf : - 3941307773564580 -87 (-1.21178e-026) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101000 #b1110000000001001100100111001110010110011011010100100)))
(assert (= y (fp #b1 #b00111001000 #b1001001110011011101111101110111000011011111001001011)))
(assert (= r (fp #b1 #b01110101000 #b1110000000001001100100111001110010110011011010100100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
