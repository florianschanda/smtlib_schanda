(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.048241574123182306976787003804929554462432861328125p-565 {+ 217260735244930 -565 (8.67988e-171)}
; Y = 1.6206292515067810544593385202460922300815582275390625p-589 {+ 2795065665821169 -589 (7.99864e-178)}
; 1.048241574123182306976787003804929554462432861328125p-565 m 1.6206292515067810544593385202460922300815582275390625p-589 == 1.6206292515067810544593385202460922300815582275390625p-589
; [HW: 1.6206292515067810544593385202460922300815582275390625p-589] 

; mpf : + 2795065665821169 -589
; mpfd: + 2795065665821169 -589 (7.99864e-178) class: Pos. norm. non-zero
; hwf : + 2795065665821169 -589 (7.99864e-178) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111001010 #b0000110001011001100011110100111100101010101010000010)))
(assert (= y (fp #b0 #b00110110010 #b1001111011100001100011110000001000101001100111110001)))
(assert (= r (fp #b0 #b00110110010 #b1001111011100001100011110000001000101001100111110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
