(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1193231910396885808722799993120133876800537109375p894 {- 537383878703000 894 (-1.47833e+269)}
; Y = -1.7099762105617595242534889621310867369174957275390625p941 {- 3197448597327857 941 (-3.17845e+283)}
; -1.1193231910396885808722799993120133876800537109375p894 m -1.7099762105617595242534889621310867369174957275390625p941 == -1.7099762105617595242534889621310867369174957275390625p941
; [HW: -1.7099762105617595242534889621310867369174957275390625p941] 

; mpf : - 3197448597327857 941
; mpfd: - 3197448597327857 941 (-3.17845e+283) class: Neg. norm. non-zero
; hwf : - 3197448597327857 941 (-3.17845e+283) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111101 #b0001111010001011111101101111001100101011011110011000)))
(assert (= y (fp #b1 #b11110101100 #b1011010111000001000000000011110101001100111111110001)))
(assert (= r (fp #b1 #b11110101100 #b1011010111000001000000000011110101001100111111110001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
