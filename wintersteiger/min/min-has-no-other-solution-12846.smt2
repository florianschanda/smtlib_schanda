(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.249299193104927763187106393161229789257049560546875p616 {+ 1122743753171118 616 (3.39738e+185)}
; Y = 1.113868543381587361551510184654034674167633056640625p-531 {+ 512818329542538 -531 (1.58455e-160)}
; 1.249299193104927763187106393161229789257049560546875p616 m 1.113868543381587361551510184654034674167633056640625p-531 == 1.113868543381587361551510184654034674167633056640625p-531
; [HW: 1.113868543381587361551510184654034674167633056640625p-531] 

; mpf : + 512818329542538 -531
; mpfd: + 512818329542538 -531 (1.58455e-160) class: Pos. norm. non-zero
; hwf : + 512818329542538 -531 (1.58455e-160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001100111 #b0011111111010010000100100110100101001110000010101110)))
(assert (= y (fp #b0 #b00111101100 #b0001110100100110011111010010010111011101111110001010)))
(assert (= r (fp #b0 #b00111101100 #b0001110100100110011111010010010111011101111110001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
