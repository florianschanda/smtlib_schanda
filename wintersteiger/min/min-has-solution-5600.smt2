(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.38139219912165334136489036609418690204620361328125p176 {- 1717637765846292 176 (-1.32311e+053)}
; Y = 1.5397240391269397807860741522745229303836822509765625p520 {+ 2430700981494985 520 (5.28495e+156)}
; -1.38139219912165334136489036609418690204620361328125p176 m 1.5397240391269397807860741522745229303836822509765625p520 == -1.38139219912165334136489036609418690204620361328125p176
; [HW: -1.38139219912165334136489036609418690204620361328125p176] 

; mpf : - 1717637765846292 176
; mpfd: - 1717637765846292 176 (-1.32311e+053) class: Neg. norm. non-zero
; hwf : - 1717637765846292 176 (-1.32311e+053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010101111 #b0110000110100010111010110100111000101101010100010100)))
(assert (= y (fp #b0 #b11000000111 #b1000101000101011010110101100100011101010010011001001)))
(assert (= r (fp #b1 #b10010101111 #b0110000110100010111010110100111000101101010100010100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
