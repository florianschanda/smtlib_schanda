(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.925953117523111046693884418345987796783447265625p-800 {- 4170122115039632 -800 (-2.88835e-241)}
; Y = -1.312598764167657083845597298932261765003204345703125p-2 {- 1407819677821938 -2 (-0.32815)}
; -1.925953117523111046693884418345987796783447265625p-800 m -1.312598764167657083845597298932261765003204345703125p-2 == -1.312598764167657083845597298932261765003204345703125p-2
; [HW: -1.312598764167657083845597298932261765003204345703125p-2] 

; mpf : - 1407819677821938 -2
; mpfd: - 1407819677821938 -2 (-0.32815) class: Neg. norm. non-zero
; hwf : - 1407819677821938 -2 (-0.32815) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011011111 #b1110110100001011010000110111010101100100000110010000)))
(assert (= y (fp #b1 #b01111111101 #b0101000000000110011110001111110011011110101111110010)))
(assert (= r (fp #b1 #b01111111101 #b0101000000000110011110001111110011011110101111110010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
