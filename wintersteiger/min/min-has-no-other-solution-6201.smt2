(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6645524578641464064077126749907620251178741455078125p41 {+ 2992878201605117 41 (3.66039e+012)}
; Y = 1.0676978918087842718165347832837142050266265869140625p450 {+ 304884200323809 450 (3.10418e+135)}
; 1.6645524578641464064077126749907620251178741455078125p41 m 1.0676978918087842718165347832837142050266265869140625p450 == 1.6645524578641464064077126749907620251178741455078125p41
; [HW: 1.6645524578641464064077126749907620251178741455078125p41] 

; mpf : + 2992878201605117 41
; mpfd: + 2992878201605117 41 (3.66039e+012) class: Pos. norm. non-zero
; hwf : + 2992878201605117 41 (3.66039e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101000 #b1010101000100000000111000010000100000000101111111101)))
(assert (= y (fp #b0 #b10111000001 #b0001000101010100101001100010011101010011101011100001)))
(assert (= r (fp #b0 #b10000101000 #b1010101000100000000111000010000100000000101111111101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
