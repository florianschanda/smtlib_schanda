(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.16761893136053540587226962088607251644134521484375p-615 {- 754888556815548 -615 (-8.58724e-186)}
; Y = -1.547041409239898523964029664057306945323944091796875p118 {- 2463655486809038 118 (-5.14093e+035)}
; -1.16761893136053540587226962088607251644134521484375p-615 m -1.547041409239898523964029664057306945323944091796875p118 == -1.547041409239898523964029664057306945323944091796875p118
; [HW: -1.547041409239898523964029664057306945323944091796875p118] 

; mpf : - 2463655486809038 118
; mpfd: - 2463655486809038 118 (-5.14093e+035) class: Neg. norm. non-zero
; hwf : - 2463655486809038 118 (-5.14093e+035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011000 #b0010101011101001000100110000010001100010010010111100)))
(assert (= y (fp #b1 #b10001110101 #b1000110000001010111001111110001000111110001111001110)))
(assert (= r (fp #b1 #b10001110101 #b1000110000001010111001111110001000111110001111001110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
