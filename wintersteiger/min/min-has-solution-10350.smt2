(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1166709610136305030891890055499970912933349609375p571 {- 525439296545944 571 (-8.63083e+171)}
; Y = -1.60488858737854034330894137383438646793365478515625p-846 {- 2724176016718660 -846 (-3.42033e-255)}
; -1.1166709610136305030891890055499970912933349609375p571 m -1.60488858737854034330894137383438646793365478515625p-846 == -1.1166709610136305030891890055499970912933349609375p571
; [HW: -1.1166709610136305030891890055499970912933349609375p571] 

; mpf : - 525439296545944 571
; mpfd: - 525439296545944 571 (-8.63083e+171) class: Neg. norm. non-zero
; hwf : - 525439296545944 571 (-8.63083e+171) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000111010 #b0001110111011110001001011110100111110010010010011000)))
(assert (= y (fp #b1 #b00010110001 #b1001101011011001111110100111110010000011101101000100)))
(assert (= r (fp #b1 #b11000111010 #b0001110111011110001001011110100111110010010010011000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
