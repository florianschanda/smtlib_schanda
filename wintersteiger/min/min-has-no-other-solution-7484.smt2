(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8004455734664770449882098546368069946765899658203125p43 {+ 3604886386393989 43 (1.58369e+013)}
; Y = -1.25021623490309163884148802026174962520599365234375p311 {- 1126873742271612 311 (-5.21571e+093)}
; 1.8004455734664770449882098546368069946765899658203125p43 m -1.25021623490309163884148802026174962520599365234375p311 == -1.25021623490309163884148802026174962520599365234375p311
; [HW: -1.25021623490309163884148802026174962520599365234375p311] 

; mpf : - 1126873742271612 311
; mpfd: - 1126873742271612 311 (-5.21571e+093) class: Neg. norm. non-zero
; hwf : - 1126873742271612 311 (-5.21571e+093) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101010 #b1100110011101010000000000100100001000100001110000101)))
(assert (= y (fp #b1 #b10100110110 #b0100000000001110001010111101000111010110010001111100)))
(assert (= r (fp #b1 #b10100110110 #b0100000000001110001010111101000111010110010001111100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
