(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3182481452877603533835326743428595364093780517578125p-912 {- 1433262228529309 -912 (-3.80751e-275)}
; Y = -1.84838654667235235962152728461660444736480712890625p-760 {- 3820793335459748 -760 (-3.04787e-229)}
; -1.3182481452877603533835326743428595364093780517578125p-912 m -1.84838654667235235962152728461660444736480712890625p-760 == -1.84838654667235235962152728461660444736480712890625p-760
; [HW: -1.84838654667235235962152728461660444736480712890625p-760] 

; mpf : - 3820793335459748 -760
; mpfd: - 3820793335459748 -760 (-3.04787e-229) class: Neg. norm. non-zero
; hwf : - 3820793335459748 -760 (-3.04787e-229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101111 #b0101000101111000101101011110000000000110000010011101)))
(assert (= y (fp #b1 #b00100000111 #b1101100100101111110111000101100001010010111110100100)))
(assert (= r (fp #b1 #b00100000111 #b1101100100101111110111000101100001010010111110100100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
