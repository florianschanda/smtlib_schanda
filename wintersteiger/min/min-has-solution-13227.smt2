(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1681888904660644445954176262603141367435455322265625p996 {- 757455424430825 996 (-7.82328e+299)}
; Y = -1.8108414026554064957252876411075703799724578857421875p620 {- 3651705038855459 620 (-7.87912e+186)}
; -1.1681888904660644445954176262603141367435455322265625p996 m -1.8108414026554064957252876411075703799724578857421875p620 == -1.1681888904660644445954176262603141367435455322265625p996
; [HW: -1.1681888904660644445954176262603141367435455322265625p996] 

; mpf : - 757455424430825 996
; mpfd: - 757455424430825 996 (-7.82328e+299) class: Neg. norm. non-zero
; hwf : - 757455424430825 996 (-7.82328e+299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100011 #b0010101100001110011011010101100000011010001011101001)))
(assert (= y (fp #b1 #b11001101011 #b1100111110010011010011010101101010100101110100100011)))
(assert (= r (fp #b1 #b11111100011 #b0010101100001110011011010101100000011010001011101001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
