(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8730605541114047074557902305969037115573883056640625p-79 {+ 3931915186168001 -79 (3.09872e-024)}
; Y = 1.3663167701621308225412576575763523578643798828125p693 {+ 1649744069601736 693 (5.61485e+208)}
; 1.8730605541114047074557902305969037115573883056640625p-79 m 1.3663167701621308225412576575763523578643798828125p693 == 1.8730605541114047074557902305969037115573883056640625p-79
; [HW: 1.8730605541114047074557902305969037115573883056640625p-79] 

; mpf : + 3931915186168001 -79
; mpfd: + 3931915186168001 -79 (3.09872e-024) class: Pos. norm. non-zero
; hwf : + 3931915186168001 -79 (3.09872e-024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110110000 #b1101111110000000111001010111111101010110000011000001)))
(assert (= y (fp #b0 #b11010110100 #b0101110111000110111011111001001111010010100111001000)))
(assert (= r (fp #b0 #b01110110000 #b1101111110000000111001010111111101010110000011000001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
