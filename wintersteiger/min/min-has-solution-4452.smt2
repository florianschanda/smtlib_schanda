(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0934637813656113980442796673742122948169708251953125p829 {+ 420923450930805 829 (3.91445e+249)}
; Y = -1.9758993120657775133253153398982249200344085693359375p465 {- 4395059778170559 465 (-1.8824e+140)}
; 1.0934637813656113980442796673742122948169708251953125p829 m -1.9758993120657775133253153398982249200344085693359375p465 == -1.9758993120657775133253153398982249200344085693359375p465
; [HW: -1.9758993120657775133253153398982249200344085693359375p465] 

; mpf : - 4395059778170559 465
; mpfd: - 4395059778170559 465 (-1.8824e+140) class: Neg. norm. non-zero
; hwf : - 4395059778170559 465 (-1.8824e+140) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111100 #b0001011111101101001111100000110001010011011001110101)))
(assert (= y (fp #b1 #b10111010000 #b1111100111010100100010011000110110000010111010111111)))
(assert (= r (fp #b1 #b10111010000 #b1111100111010100100010011000110110000010111010111111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
