(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.876034330299763741578544795629568397998809814453125p224 {- 3945307883501778 224 (-5.05778e+067)}
; Y = -1.1319524157004778874835437818546779453754425048828125p751 {- 594260850179309 751 (-1.34077e+226)}
; -1.876034330299763741578544795629568397998809814453125p224 m -1.1319524157004778874835437818546779453754425048828125p751 == -1.1319524157004778874835437818546779453754425048828125p751
; [HW: -1.1319524157004778874835437818546779453754425048828125p751] 

; mpf : - 594260850179309 751
; mpfd: - 594260850179309 751 (-1.34077e+226) class: Neg. norm. non-zero
; hwf : - 594260850179309 751 (-1.34077e+226) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011111 #b1110000001000011110010010010111011001111100011010010)))
(assert (= y (fp #b1 #b11011101110 #b0010000111000111101000100010111000001111110011101101)))
(assert (= r (fp #b1 #b11011101110 #b0010000111000111101000100010111000001111110011101101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
