(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.956519835988671740523159314761869609355926513671875p-477 {- 4307782376931070 -477 (-5.01391e-144)}
; Y = 1.749551762343241723129949605208821594715118408203125p247 {+ 3375681037583922 247 (3.95672e+074)}
; -1.956519835988671740523159314761869609355926513671875p-477 m 1.749551762343241723129949605208821594715118408203125p247 == -1.956519835988671740523159314761869609355926513671875p-477
; [HW: -1.956519835988671740523159314761869609355926513671875p-477] 

; mpf : - 4307782376931070 -477
; mpfd: - 4307782376931070 -477 (-5.01391e-144) class: Neg. norm. non-zero
; hwf : - 4307782376931070 -477 (-5.01391e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100010 #b1111010011011110011110111110010110001011111011111110)))
(assert (= y (fp #b0 #b10011110110 #b1011111111100010100111111101000111101100011000110010)))
(assert (= r (fp #b1 #b01000100010 #b1111010011011110011110111110010110001011111011111110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
