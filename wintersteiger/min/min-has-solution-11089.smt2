(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4749386445217440577692968872725032269954681396484375p413 {+ 2138933502491975 413 (3.12005e+124)}
; Y = -1.85942258264436599546343131805770099163055419921875p-342 {- 3870495222950956 -342 (-2.07548e-103)}
; 1.4749386445217440577692968872725032269954681396484375p413 m -1.85942258264436599546343131805770099163055419921875p-342 == -1.85942258264436599546343131805770099163055419921875p-342
; [HW: -1.85942258264436599546343131805770099163055419921875p-342] 

; mpf : - 3870495222950956 -342
; mpfd: - 3870495222950956 -342 (-2.07548e-103) class: Neg. norm. non-zero
; hwf : - 3870495222950956 -342 (-2.07548e-103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011100 #b0111100110010101100101000011100111010011110101000111)))
(assert (= y (fp #b1 #b01010101001 #b1101110000000011000111100100110111100110110000101100)))
(assert (= r (fp #b1 #b01010101001 #b1101110000000011000111100100110111100110110000101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
