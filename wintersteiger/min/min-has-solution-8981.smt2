(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4422928655878448633842481285682879388332366943359375p269 {- 1991909984650047 269 (-1.36811e+081)}
; Y = -1.335922774672912538562741247005760669708251953125p466 {- 1512861682842192 466 (-2.54542e+140)}
; -1.4422928655878448633842481285682879388332366943359375p269 m -1.335922774672912538562741247005760669708251953125p466 == -1.335922774672912538562741247005760669708251953125p466
; [HW: -1.335922774672912538562741247005760669708251953125p466] 

; mpf : - 1512861682842192 466
; mpfd: - 1512861682842192 466 (-2.54542e+140) class: Neg. norm. non-zero
; hwf : - 1512861682842192 466 (-2.54542e+140) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001100 #b0111000100111010000110101111000011110100001100111111)))
(assert (= y (fp #b1 #b10111010001 #b0101010111111111000010001111001100110011101001010000)))
(assert (= r (fp #b1 #b10111010001 #b0101010111111111000010001111001100110011101001010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
