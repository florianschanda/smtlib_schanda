(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2521895856049451989377985228202305734157562255859375p-288 {+ 1135760923757151 -288 (2.51786e-087)}
; Y = 1.0567272437729815504070529641467146575450897216796875p331 {+ 255476793917755 331 (4.62265e+099)}
; 1.2521895856049451989377985228202305734157562255859375p-288 m 1.0567272437729815504070529641467146575450897216796875p331 == 1.2521895856049451989377985228202305734157562255859375p-288
; [HW: 1.2521895856049451989377985228202305734157562255859375p-288] 

; mpf : + 1135760923757151 -288
; mpfd: + 1135760923757151 -288 (2.51786e-087) class: Pos. norm. non-zero
; hwf : + 1135760923757151 -288 (2.51786e-087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011111 #b0100000010001111011111110010011010010000101001011111)))
(assert (= y (fp #b0 #b10101001010 #b0000111010000101101011010011100011001100000100111011)))
(assert (= r (fp #b0 #b01011011111 #b0100000010001111011111110010011010010000101001011111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
