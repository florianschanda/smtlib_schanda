(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3682021583423422672609603978344239294528961181640625p101 {+ 1658235103107585 101 (3.4688e+030)}
; Y = -1.840525230002915346716463318443857133388519287109375p175 {- 3785389112636630 175 (-8.81436e+052)}
; 1.3682021583423422672609603978344239294528961181640625p101 m -1.840525230002915346716463318443857133388519287109375p175 == -1.840525230002915346716463318443857133388519287109375p175
; [HW: -1.840525230002915346716463318443857133388519287109375p175] 

; mpf : - 3785389112636630 175
; mpfd: - 3785389112636630 175 (-8.81436e+052) class: Neg. norm. non-zero
; hwf : - 3785389112636630 175 (-8.81436e+052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001100100 #b0101111001000010011111110010010001100101101000000001)))
(assert (= y (fp #b1 #b10010101110 #b1101011100101100101010010101011001010011010011010110)))
(assert (= r (fp #b1 #b10010101110 #b1101011100101100101010010101011001010011010011010110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
