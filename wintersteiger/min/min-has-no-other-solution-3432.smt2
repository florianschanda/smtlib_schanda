(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.898934875771948416200984866009093821048736572265625p-49 {+ 4048442771556890 -49 (3.37319e-015)}
; Y = 1.40557318446934598199504762305878102779388427734375p858 {+ 1826539242447612 858 (2.70141e+258)}
; 1.898934875771948416200984866009093821048736572265625p-49 m 1.40557318446934598199504762305878102779388427734375p858 == 1.898934875771948416200984866009093821048736572265625p-49
; [HW: 1.898934875771948416200984866009093821048736572265625p-49] 

; mpf : + 4048442771556890 -49
; mpfd: + 4048442771556890 -49 (3.37319e-015) class: Pos. norm. non-zero
; hwf : + 4048442771556890 -49 (3.37319e-015) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111001110 #b1110011000100000100110001001010010101100101000011010)))
(assert (= y (fp #b0 #b11101011001 #b0110011111010011101001001110101101101110001011111100)))
(assert (= r (fp #b0 #b01111001110 #b1110011000100000100110001001010010101100101000011010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
