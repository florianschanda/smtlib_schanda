(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.339237763599472774700416266568936407566070556640625p-514 {- 1527791065736586 -514 (-2.49712e-155)}
; Y = -1.5017163794666377185649253078736364841461181640625p625 {- 2259529699611624 625 (-2.09091e+188)}
; -1.339237763599472774700416266568936407566070556640625p-514 m -1.5017163794666377185649253078736364841461181640625p625 == -1.5017163794666377185649253078736364841461181640625p625
; [HW: -1.5017163794666377185649253078736364841461181640625p625] 

; mpf : - 2259529699611624 625
; mpfd: - 2259529699611624 625 (-2.09091e+188) class: Neg. norm. non-zero
; hwf : - 2259529699611624 625 (-2.09091e+188) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111101 #b0101011011011000010010010011110000111010010110001010)))
(assert (= y (fp #b1 #b11001110000 #b1000000001110000011111000001000110101101001111101000)))
(assert (= r (fp #b1 #b11001110000 #b1000000001110000011111000001000110101101001111101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
