(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4036702352540999516605779717792756855487823486328125p343 {+ 1817969121070925 343 (2.51509e+103)}
; Y = -1.3419326117874954551467681085341610014438629150390625p639 {- 1539927583031985 639 (-3.06124e+192)}
; 1.4036702352540999516605779717792756855487823486328125p343 m -1.3419326117874954551467681085341610014438629150390625p639 == -1.3419326117874954551467681085341610014438629150390625p639
; [HW: -1.3419326117874954551467681085341610014438629150390625p639] 

; mpf : - 1539927583031985 639
; mpfd: - 1539927583031985 639 (-3.06124e+192) class: Neg. norm. non-zero
; hwf : - 1539927583031985 639 (-3.06124e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010110 #b0110011101010110111011101011101011001000111101001101)))
(assert (= y (fp #b1 #b11001111110 #b0101011110001000111001010100100100010000001010110001)))
(assert (= r (fp #b1 #b11001111110 #b0101011110001000111001010100100100010000001010110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
