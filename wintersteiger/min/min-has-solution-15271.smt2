(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2705858891760277717963845134363509714603424072265625p-553 {- 1218610509664873 -553 (-4.3094e-167)}
; Y = -1.461544356452508797161726761260069906711578369140625p-45 {- 2078610991734474 -45 (-4.15396e-014)}
; -1.2705858891760277717963845134363509714603424072265625p-553 m -1.461544356452508797161726761260069906711578369140625p-45 == -1.461544356452508797161726761260069906711578369140625p-45
; [HW: -1.461544356452508797161726761260069906711578369140625p-45] 

; mpf : - 2078610991734474 -45
; mpfd: - 2078610991734474 -45 (-4.15396e-014) class: Neg. norm. non-zero
; hwf : - 2078610991734474 -45 (-4.15396e-014) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010110 #b0100010101000101000111011110100011000101001001101001)))
(assert (= y (fp #b1 #b01111010010 #b0111011000100111110001010101110010011101111011001010)))
(assert (= r (fp #b1 #b01111010010 #b0111011000100111110001010101110010011101111011001010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
