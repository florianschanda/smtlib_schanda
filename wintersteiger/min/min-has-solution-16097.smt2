(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2554435589158721153779652013326995074748992919921875p466 {+ 1150415516747715 466 (2.39208e+140)}
; Y = -1.1165485039659401866884991250117309391498565673828125p-243 {- 524887799031597 -243 (-7.8993e-074)}
; 1.2554435589158721153779652013326995074748992919921875p466 m -1.1165485039659401866884991250117309391498565673828125p-243 == -1.1165485039659401866884991250117309391498565673828125p-243
; [HW: -1.1165485039659401866884991250117309391498565673828125p-243] 

; mpf : - 524887799031597 -243
; mpfd: - 524887799031597 -243 (-7.8993e-074) class: Neg. norm. non-zero
; hwf : - 524887799031597 -243 (-7.8993e-074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111010001 #b0100000101100100101111111100001110000100011111000011)))
(assert (= y (fp #b1 #b01100001100 #b0001110111010110000111110110110011101110011100101101)))
(assert (= r (fp #b1 #b01100001100 #b0001110111010110000111110110110011101110011100101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
