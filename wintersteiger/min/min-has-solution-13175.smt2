(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.585735944656752050008208243525587022304534912109375p334 {+ 2637920182093654 334 (5.54944e+100)}
; Y = -1.8306244492643453103397632730775512754917144775390625p-888 {- 3740799960191729 -888 (-8.87081e-268)}
; 1.585735944656752050008208243525587022304534912109375p334 m -1.8306244492643453103397632730775512754917144775390625p-888 == -1.8306244492643453103397632730775512754917144775390625p-888
; [HW: -1.8306244492643453103397632730775512754917144775390625p-888] 

; mpf : - 3740799960191729 -888
; mpfd: - 3740799960191729 -888 (-8.87081e-268) class: Neg. norm. non-zero
; hwf : - 3740799960191729 -888 (-8.87081e-268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001101 #b1001010111110010110010100111011001100100011101010110)))
(assert (= y (fp #b1 #b00010000111 #b1101010010100011110011011100110011011001001011110001)))
(assert (= r (fp #b1 #b00010000111 #b1101010010100011110011011100110011011001001011110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
