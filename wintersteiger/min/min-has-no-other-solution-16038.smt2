(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.790795024679131319800262645003385841846466064453125p-824 {- 3561424178471378 -824 (-1.60077e-248)}
; Y = -1.22110069409220844960373142384923994541168212890625p-995 {- 995749003525028 -995 (-3.64675e-300)}
; -1.790795024679131319800262645003385841846466064453125p-824 m -1.22110069409220844960373142384923994541168212890625p-995 == -1.790795024679131319800262645003385841846466064453125p-824
; [HW: -1.790795024679131319800262645003385841846466064453125p-824] 

; mpf : - 3561424178471378 -824
; mpfd: - 3561424178471378 -824 (-1.60077e-248) class: Neg. norm. non-zero
; hwf : - 3561424178471378 -824 (-1.60077e-248) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000111 #b1100101001110001100010101111000011010110000111010010)))
(assert (= y (fp #b1 #b00000011100 #b0011100010011010000011100001101000111111101110100100)))
(assert (= r (fp #b1 #b00011000111 #b1100101001110001100010101111000011010110000111010010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
