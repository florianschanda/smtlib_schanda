(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5364534636920283983130275373696349561214447021484375p-763 {- 2415971619185031 -763 (-3.16689e-230)}
; Y = -1.000070927199696146914220662438310682773590087890625p396 {- 319427710122 396 (-1.61402e+119)}
; -1.5364534636920283983130275373696349561214447021484375p-763 m -1.000070927199696146914220662438310682773590087890625p396 == -1.000070927199696146914220662438310682773590087890625p396
; [HW: -1.000070927199696146914220662438310682773590087890625p396] 

; mpf : - 319427710122 396
; mpfd: - 319427710122 396 (-1.61402e+119) class: Neg. norm. non-zero
; hwf : - 319427710122 396 (-1.61402e+119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000100 #b1000100101010101000000111010001001100010000110000111)))
(assert (= y (fp #b1 #b10110001011 #b0000000000000100101001011111011000000000110010101010)))
(assert (= r (fp #b1 #b10110001011 #b0000000000000100101001011111011000000000110010101010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
