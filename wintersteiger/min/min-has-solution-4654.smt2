(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2492783626624353043865767176612280309200286865234375p-367 {+ 1122649941198071 -367 (4.15576e-111)}
; Y = 1.3019931325371547625735502151655964553356170654296875p445 {+ 1360056159162779 445 (1.18292e+134)}
; 1.2492783626624353043865767176612280309200286865234375p-367 m 1.3019931325371547625735502151655964553356170654296875p445 == 1.2492783626624353043865767176612280309200286865234375p-367
; [HW: 1.2492783626624353043865767176612280309200286865234375p-367] 

; mpf : + 1122649941198071 -367
; mpfd: + 1122649941198071 -367 (4.15576e-111) class: Pos. norm. non-zero
; hwf : + 1122649941198071 -367 (4.15576e-111) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010000 #b0011111111010000101101001110111100111100010011110111)))
(assert (= y (fp #b0 #b10110111100 #b0100110101001111011011000000001111011101000110011011)))
(assert (= r (fp #b0 #b01010010000 #b0011111111010000101101001110111100111100010011110111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
