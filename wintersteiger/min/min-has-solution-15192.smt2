(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.238820255167057293732568723498843610286712646484375p-489 {+ 1075550812178886 -489 (7.75069e-148)}
; Y = -1.3217859555856434905507512667099945247173309326171875p240 {- 1449195109668563 240 (-2.33539e+072)}
; 1.238820255167057293732568723498843610286712646484375p-489 m -1.3217859555856434905507512667099945247173309326171875p240 == -1.3217859555856434905507512667099945247173309326171875p240
; [HW: -1.3217859555856434905507512667099945247173309326171875p240] 

; mpf : - 1449195109668563 240
; mpfd: - 1449195109668563 240 (-2.33539e+072) class: Neg. norm. non-zero
; hwf : - 1449195109668563 240 (-2.33539e+072) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000010110 #b0011110100100011010100110000000110010000100111000110)))
(assert (= y (fp #b1 #b10011101111 #b0101001001100000100100000111101110001101011011010011)))
(assert (= r (fp #b1 #b10011101111 #b0101001001100000100100000111101110001101011011010011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
