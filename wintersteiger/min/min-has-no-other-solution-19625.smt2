(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.825010403460279651000064404797740280628204345703125p-347 {- 3715516545600498 -347 (-6.36586e-105)}
; Y = -1.16276740568671499431729898788034915924072265625p-2 {- 733039227598752 -2 (-0.290692)}
; -1.825010403460279651000064404797740280628204345703125p-347 m -1.16276740568671499431729898788034915924072265625p-2 == -1.16276740568671499431729898788034915924072265625p-2
; [HW: -1.16276740568671499431729898788034915924072265625p-2] 

; mpf : - 733039227598752 -2
; mpfd: - 733039227598752 -2 (-0.290692) class: Neg. norm. non-zero
; hwf : - 733039227598752 -2 (-0.290692) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100100 #b1101001100110011111000011011110110111000101111110010)))
(assert (= y (fp #b1 #b01111111101 #b0010100110101011000111111110110001000111011110100000)))
(assert (= r (fp #b1 #b01111111101 #b0010100110101011000111111110110001000111011110100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
