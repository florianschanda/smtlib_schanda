(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6473424573762203149129845769493840634822845458984375p-128 {+ 2915371249820647 -128 (4.8411e-039)}
; Y = 1.0048502054817205486614284382085315883159637451171875p-584 {+ 21843383600147 -584 (1.58703e-176)}
; 1.6473424573762203149129845769493840634822845458984375p-128 m 1.0048502054817205486614284382085315883159637451171875p-584 == 1.0048502054817205486614284382085315883159637451171875p-584
; [HW: 1.0048502054817205486614284382085315883159637451171875p-584] 

; mpf : + 21843383600147 -584
; mpfd: + 21843383600147 -584 (1.58703e-176) class: Pos. norm. non-zero
; hwf : + 21843383600147 -584 (1.58703e-176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111111 #b1010010110111000001111000011101110111110001111100111)))
(assert (= y (fp #b0 #b00110110111 #b0000000100111101110111001111000111101100010000010011)))
(assert (= r (fp #b0 #b00110110111 #b0000000100111101110111001111000111101100010000010011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
