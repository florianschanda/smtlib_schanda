(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4754751195532644914010234060697257518768310546875p-585 {- 2141349571244024 -585 (-1.16516e-176)}
; Y = -1.7562932896496110668493884077179245650768280029296875p-513 {- 3406042177448795 -513 (-6.54952e-155)}
; -1.4754751195532644914010234060697257518768310546875p-585 m -1.7562932896496110668493884077179245650768280029296875p-513 == -1.7562932896496110668493884077179245650768280029296875p-513
; [HW: -1.7562932896496110668493884077179245650768280029296875p-513] 

; mpf : - 3406042177448795 -513
; mpfd: - 3406042177448795 -513 (-6.54952e-155) class: Neg. norm. non-zero
; hwf : - 3406042177448795 -513 (-6.54952e-155) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110110110 #b0111100110111000101111001100100010001010111111111000)))
(assert (= y (fp #b1 #b00111111110 #b1100000110011100011011111110000100111010101101011011)))
(assert (= r (fp #b1 #b00111111110 #b1100000110011100011011111110000100111010101101011011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
