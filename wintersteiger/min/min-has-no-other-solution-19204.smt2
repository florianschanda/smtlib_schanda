(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9964570943801505098491588796605356037616729736328125p857 {+ 4487643798941133 857 (1.91852e+258)}
; Y = 1.8057683495401988249540181641350500285625457763671875p398 {+ 3628858038736179 398 (1.16574e+120)}
; 1.9964570943801505098491588796605356037616729736328125p857 m 1.8057683495401988249540181641350500285625457763671875p398 == 1.8057683495401988249540181641350500285625457763671875p398
; [HW: 1.8057683495401988249540181641350500285625457763671875p398] 

; mpf : + 3628858038736179 398
; mpfd: + 3628858038736179 398 (1.16574e+120) class: Pos. norm. non-zero
; hwf : + 3628858038736179 398 (1.16574e+120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011000 #b1111111100010111110011111110100000111010110111001101)))
(assert (= y (fp #b0 #b10110001101 #b1100111001000110110101011010010101101101010100110011)))
(assert (= r (fp #b0 #b10110001101 #b1100111001000110110101011010010101101101010100110011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
