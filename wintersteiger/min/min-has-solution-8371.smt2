(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1023367118689957333543816275778226554393768310546875p61 {+ 460883577439531 61 (2.54182e+018)}
; Y = 1.453837993890079172132345775025896728038787841796875p-943 {+ 2043904620169934 -943 (1.95538e-284)}
; 1.1023367118689957333543816275778226554393768310546875p61 m 1.453837993890079172132345775025896728038787841796875p-943 == 1.453837993890079172132345775025896728038787841796875p-943
; [HW: 1.453837993890079172132345775025896728038787841796875p-943] 

; mpf : + 2043904620169934 -943
; mpfd: + 2043904620169934 -943 (1.95538e-284) class: Pos. norm. non-zero
; hwf : + 2043904620169934 -943 (1.95538e-284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111100 #b0001101000110010101111010001111010101000010100101011)))
(assert (= y (fp #b0 #b00001010000 #b0111010000101110101110100000110101110000101011001110)))
(assert (= r (fp #b0 #b00001010000 #b0111010000101110101110100000110101110000101011001110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
