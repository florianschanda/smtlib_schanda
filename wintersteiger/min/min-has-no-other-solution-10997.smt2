(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.590483608939892601341625777422450482845306396484375p-784 {- 2659301761190086 -784 (-1.56319e-236)}
; Y = 1.3432230372423268338621937800780870020389556884765625p340 {+ 1545739142629513 340 (3.00848e+102)}
; -1.590483608939892601341625777422450482845306396484375p-784 m 1.3432230372423268338621937800780870020389556884765625p340 == -1.590483608939892601341625777422450482845306396484375p-784
; [HW: -1.590483608939892601341625777422450482845306396484375p-784] 

; mpf : - 2659301761190086 -784
; mpfd: - 2659301761190086 -784 (-1.56319e-236) class: Neg. norm. non-zero
; hwf : - 2659301761190086 -784 (-1.56319e-236) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101111 #b1001011100101001111011110000110100111000100011000110)))
(assert (= y (fp #b0 #b10101010011 #b0101011111011101011101110000100000110000100010001001)))
(assert (= r (fp #b1 #b00011101111 #b1001011100101001111011110000110100111000100011000110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
