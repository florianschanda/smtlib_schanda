(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2831599906954267442671380194951780140399932861328125p1015 {- 1275239228582157 1015 (-4.50533e+305)}
; Y = -1.7440610724596987690659943837090395390987396240234375p-701 {- 3350953168670391 -701 (-1.65781e-211)}
; -1.2831599906954267442671380194951780140399932861328125p1015 m -1.7440610724596987690659943837090395390987396240234375p-701 == -1.2831599906954267442671380194951780140399932861328125p1015
; [HW: -1.2831599906954267442671380194951780140399932861328125p1015] 

; mpf : - 1275239228582157 1015
; mpfd: - 1275239228582157 1015 (-4.50533e+305) class: Neg. norm. non-zero
; hwf : - 1275239228582157 1015 (-4.50533e+305) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110110 #b0100100001111101001011000101001110010010100100001101)))
(assert (= y (fp #b1 #b00101000010 #b1011111001111010110010010101010001110000111010110111)))
(assert (= r (fp #b1 #b11111110110 #b0100100001111101001011000101001110010010100100001101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
