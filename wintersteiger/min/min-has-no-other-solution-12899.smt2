(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.546546223929988972400906277471221983432769775390625p761 {+ 2461425370431850 761 (1.87581e+229)}
; Y = 1.3882225265205507813703889041789807379245758056640625p167 {+ 1748398825774785 167 (2.59698e+050)}
; 1.546546223929988972400906277471221983432769775390625p761 m 1.3882225265205507813703889041789807379245758056640625p167 == 1.3882225265205507813703889041789807379245758056640625p167
; [HW: 1.3882225265205507813703889041789807379245758056640625p167] 

; mpf : + 1748398825774785 167
; mpfd: + 1748398825774785 167 (2.59698e+050) class: Pos. norm. non-zero
; hwf : + 1748398825774785 167 (2.59698e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111000 #b1000101111101010011101000000110110001000000101101010)))
(assert (= y (fp #b0 #b10010100110 #b0110001101100010100011010010111011111001111011000001)))
(assert (= r (fp #b0 #b10010100110 #b0110001101100010100011010010111011111001111011000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
