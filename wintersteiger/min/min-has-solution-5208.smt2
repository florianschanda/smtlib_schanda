(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6400374309929521832174259543535299599170684814453125p-670 {- 2882472335723029 -670 (-3.34778e-202)}
; Y = -1.631963271157918171638812054879963397979736328125p415 {- 2846109552498640 415 (-1.38089e+125)}
; -1.6400374309929521832174259543535299599170684814453125p-670 m -1.631963271157918171638812054879963397979736328125p415 == -1.631963271157918171638812054879963397979736328125p415
; [HW: -1.631963271157918171638812054879963397979736328125p415] 

; mpf : - 2846109552498640 415
; mpfd: - 2846109552498640 415 (-1.38089e+125) class: Neg. norm. non-zero
; hwf : - 2846109552498640 415 (-1.38089e+125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100001 #b1010001111011001011111100011101001010100101000010101)))
(assert (= y (fp #b1 #b10110011110 #b1010000111001000010110000100110111100101011111010000)))
(assert (= r (fp #b1 #b10110011110 #b1010000111001000010110000100110111100101011111010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
