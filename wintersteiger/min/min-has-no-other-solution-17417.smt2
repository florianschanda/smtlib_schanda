(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.364352379290146632939695336972363293170928955078125p-655 {+ 1640897239602658 -655 (9.12598e-198)}
; Y = 1.2809463137338468197157226313720457255840301513671875p333 {+ 1265269713842867 333 (2.2414e+100)}
; 1.364352379290146632939695336972363293170928955078125p-655 m 1.2809463137338468197157226313720457255840301513671875p333 == 1.364352379290146632939695336972363293170928955078125p-655
; [HW: 1.364352379290146632939695336972363293170928955078125p-655] 

; mpf : + 1640897239602658 -655
; mpfd: + 1640897239602658 -655 (9.12598e-198) class: Pos. norm. non-zero
; hwf : + 1640897239602658 -655 (9.12598e-198) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110000 #b0101110101000110001100101001000101000101010111100010)))
(assert (= y (fp #b0 #b10101001100 #b0100011111101100000110001111110101101011001010110011)))
(assert (= r (fp #b0 #b00101110000 #b0101110101000110001100101001000101000101010111100010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
