(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.751736362529701551693506189621984958648681640625p909 {- 3385519602169616 909 (-7.58115e+273)}
; Y = -1.423165597938204740557921468280255794525146484375p101 {- 1905768429190512 101 (-3.60815e+030)}
; -1.751736362529701551693506189621984958648681640625p909 m -1.423165597938204740557921468280255794525146484375p101 == -1.751736362529701551693506189621984958648681640625p909
; [HW: -1.751736362529701551693506189621984958648681640625p909] 

; mpf : - 3385519602169616 909
; mpfd: - 3385519602169616 909 (-7.58115e+273) class: Neg. norm. non-zero
; hwf : - 3385519602169616 909 (-7.58115e+273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001100 #b1100000001110001110010110101010001000111011100010000)))
(assert (= y (fp #b1 #b10001100100 #b0110110001010100100101001010001111101111110101110000)))
(assert (= r (fp #b1 #b11110001100 #b1100000001110001110010110101010001000111011100010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
