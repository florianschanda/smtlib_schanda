(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2795914952073974557578139865654520690441131591796875p-662 {+ 1259168153631995 -662 (6.68674e-200)}
; Y = 1.585500297060204122345794530701823532581329345703125p-593 {+ 2636858919665650 -593 (4.89079e-179)}
; 1.2795914952073974557578139865654520690441131591796875p-662 m 1.585500297060204122345794530701823532581329345703125p-593 == 1.2795914952073974557578139865654520690441131591796875p-662
; [HW: 1.2795914952073974557578139865654520690441131591796875p-662] 

; mpf : + 1259168153631995 -662
; mpfd: + 1259168153631995 -662 (6.68674e-200) class: Pos. norm. non-zero
; hwf : + 1259168153631995 -662 (6.68674e-200) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101001 #b0100011110010011010011101110100000100111110011111011)))
(assert (= y (fp #b0 #b00110101110 #b1001010111100011010110001111001110101011111111110010)))
(assert (= r (fp #b0 #b00101101001 #b0100011110010011010011101110100000100111110011111011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
