(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2859564014607547388635566676384769380092620849609375p912 {- 1287833143062863 912 (-4.45228e+274)}
; Y = 1.865620959904572107035392036777921020984649658203125p557 {+ 3898410232470322 557 (8.80098e+167)}
; -1.2859564014607547388635566676384769380092620849609375p912 m 1.865620959904572107035392036777921020984649658203125p557 == -1.2859564014607547388635566676384769380092620849609375p912
; [HW: -1.2859564014607547388635566676384769380092620849609375p912] 

; mpf : - 1287833143062863 912
; mpfd: - 1287833143062863 912 (-4.45228e+274) class: Neg. norm. non-zero
; hwf : - 1287833143062863 912 (-4.45228e+274) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001111 #b0100100100110100011100000101000001011011000101001111)))
(assert (= y (fp #b0 #b11000101100 #b1101110110011001010101011101000110000101101100110010)))
(assert (= r (fp #b1 #b11110001111 #b0100100100110100011100000101000001011011000101001111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
