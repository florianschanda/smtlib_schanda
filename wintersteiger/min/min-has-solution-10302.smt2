(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1757417158194052309028165836934931576251983642578125p949 {- 791470325877725 949 (-5.59471e+285)}
; Y = 1.1466634653722991288304910995066165924072265625p-372 {+ 660513527999552 -372 (1.192e-112)}
; -1.1757417158194052309028165836934931576251983642578125p949 m 1.1466634653722991288304910995066165924072265625p-372 == -1.1757417158194052309028165836934931576251983642578125p949
; [HW: -1.1757417158194052309028165836934931576251983642578125p949] 

; mpf : - 791470325877725 949
; mpfd: - 791470325877725 949 (-5.59471e+285) class: Neg. norm. non-zero
; hwf : - 791470325877725 949 (-5.59471e+285) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110100 #b0010110011111101011010001011100111111100101111011101)))
(assert (= y (fp #b0 #b01010001011 #b0010010110001011101111001010001101001010110001000000)))
(assert (= r (fp #b1 #b11110110100 #b0010110011111101011010001011100111111100101111011101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
