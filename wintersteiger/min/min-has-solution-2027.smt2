(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0347513619963759623487931094132363796234130859375p-346 {+ 156506220937496 -346 (7.21868e-105)}
; Y = -1.7665046511055810807278021457022987306118011474609375p313 {- 3452030061096847 313 (-2.94784e+094)}
; 1.0347513619963759623487931094132363796234130859375p-346 m -1.7665046511055810807278021457022987306118011474609375p313 == -1.7665046511055810807278021457022987306118011474609375p313
; [HW: -1.7665046511055810807278021457022987306118011474609375p313] 

; mpf : - 3452030061096847 313
; mpfd: - 3452030061096847 313 (-2.94784e+094) class: Neg. norm. non-zero
; hwf : - 3452030061096847 313 (-2.94784e+094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100101 #b0000100011100101011101110001101101000100000100011000)))
(assert (= y (fp #b1 #b10100111000 #b1100010000111001101001100001100010111010111110001111)))
(assert (= r (fp #b1 #b10100111000 #b1100010000111001101001100001100010111010111110001111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
