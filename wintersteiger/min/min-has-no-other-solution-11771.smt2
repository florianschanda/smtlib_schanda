(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1248159801508743615983121344470418989658355712890625p63 {+ 562121201697361 63 (1.03746e+019)}
; Y = 1.5287233422772359414665288568357937037944793701171875p935 {+ 2381158247261843 935 (4.43992e+281)}
; 1.1248159801508743615983121344470418989658355712890625p63 m 1.5287233422772359414665288568357937037944793701171875p935 == 1.1248159801508743615983121344470418989658355712890625p63
; [HW: 1.1248159801508743615983121344470418989658355712890625p63] 

; mpf : + 562121201697361 63
; mpfd: + 562121201697361 63 (1.03746e+019) class: Pos. norm. non-zero
; hwf : + 562121201697361 63 (1.03746e+019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111110 #b0001111111110011111100001010100011000100001001010001)))
(assert (= y (fp #b0 #b11110100110 #b1000011101011010011010011011011110110110011010010011)))
(assert (= r (fp #b0 #b10000111110 #b0001111111110011111100001010100011000100001001010001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
