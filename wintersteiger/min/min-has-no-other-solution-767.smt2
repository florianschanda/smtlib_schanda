(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.55021539904447447355551048531197011470794677734375p306 {+ 2477949866110204 306 (2.02102e+092)}
; Y = 1.65686959632623054261557626887224614620208740234375p-118 {+ 2958277669245820 -118 (4.98596e-036)}
; 1.55021539904447447355551048531197011470794677734375p306 m 1.65686959632623054261557626887224614620208740234375p-118 == 1.65686959632623054261557626887224614620208740234375p-118
; [HW: 1.65686959632623054261557626887224614620208740234375p-118] 

; mpf : + 2958277669245820 -118
; mpfd: + 2958277669245820 -118 (4.98596e-036) class: Pos. norm. non-zero
; hwf : + 2958277669245820 -118 (4.98596e-036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110001 #b1000110011011010111010101001100010100110110011111100)))
(assert (= y (fp #b0 #b01110001001 #b1010100000101000100110110001100111110101001101111100)))
(assert (= r (fp #b0 #b01110001001 #b1010100000101000100110110001100111110101001101111100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
