(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.94872577650991107844902217038907110691070556640625p-970 {+ 4272681053566820 -970 (1.95279e-292)}
; Y = 1.502306144692596934220318871666677296161651611328125p-416 {+ 2262185766063490 -416 (8.87729e-126)}
; 1.94872577650991107844902217038907110691070556640625p-970 m 1.502306144692596934220318871666677296161651611328125p-416 == 1.94872577650991107844902217038907110691070556640625p-970
; [HW: 1.94872577650991107844902217038907110691070556640625p-970] 

; mpf : + 4272681053566820 -970
; mpfd: + 4272681053566820 -970 (1.95279e-292) class: Pos. norm. non-zero
; hwf : + 4272681053566820 -970 (1.95279e-292) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110101 #b1111001011011111101100010100011011111011011101100100)))
(assert (= y (fp #b0 #b01001011111 #b1000000010010111001000101011000000001000110110000010)))
(assert (= r (fp #b0 #b00000110101 #b1111001011011111101100010100011011111011011101100100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
