(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.135370810422444254328411261667497456073760986328125p69 {- 609655931375362 69 (-6.70205e+020)}
; Y = -0.912234410759491520792607843759469687938690185546875p-1022 {- 4108338552370990 -1023 (-2.02979e-308)}
; -1.135370810422444254328411261667497456073760986328125p69 m -0.912234410759491520792607843759469687938690185546875p-1022 == -1.135370810422444254328411261667497456073760986328125p69
; [HW: -1.135370810422444254328411261667497456073760986328125p69] 

; mpf : - 609655931375362 69
; mpfd: - 609655931375362 69 (-6.70205e+020) class: Neg. norm. non-zero
; hwf : - 609655931375362 69 (-6.70205e+020) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000100 #b0010001010100111101010010101001110011000111100000010)))
(assert (= y (fp #b1 #b00000000000 #b1110100110001000001100011100000001111111011100101110)))
(assert (= r (fp #b1 #b10001000100 #b0010001010100111101010010101001110011000111100000010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
