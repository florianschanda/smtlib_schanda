(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7213346628439529784060368911013938486576080322265625p-548 {+ 3248602518793449 -548 (1.86822e-165)}
; Y = 1.3953929040833028540902205349993892014026641845703125p162 {+ 1780691335494501 162 (8.15748e+048)}
; 1.7213346628439529784060368911013938486576080322265625p-548 m 1.3953929040833028540902205349993892014026641845703125p162 == 1.7213346628439529784060368911013938486576080322265625p-548
; [HW: 1.7213346628439529784060368911013938486576080322265625p-548] 

; mpf : + 3248602518793449 -548
; mpfd: + 3248602518793449 -548 (1.86822e-165) class: Pos. norm. non-zero
; hwf : + 3248602518793449 -548 (1.86822e-165) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011011 #b1011100010101001011000110111001001100010110011101001)))
(assert (= y (fp #b0 #b10010100001 #b0110010100111000011110000010100000011011101101100101)))
(assert (= r (fp #b0 #b00111011011 #b1011100010101001011000110111001001100010110011101001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
