(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.064545577317591806831842404790222644805908203125p-684 {- 290687437955920 -684 (-1.32632e-206)}
; Y = 1.629099952197706979717395370244048535823822021484375p331 {+ 2833214310296390 331 (7.1265e+099)}
; -1.064545577317591806831842404790222644805908203125p-684 m 1.629099952197706979717395370244048535823822021484375p331 == -1.064545577317591806831842404790222644805908203125p-684
; [HW: -1.064545577317591806831842404790222644805908203125p-684] 

; mpf : - 290687437955920 -684
; mpfd: - 290687437955920 -684 (-1.32632e-206) class: Neg. norm. non-zero
; hwf : - 290687437955920 -684 (-1.32632e-206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101010011 #b0001000010000110000011110001011110101110001101010000)))
(assert (= y (fp #b0 #b10101001010 #b1010000100001100101100011100100010011010101101000110)))
(assert (= r (fp #b1 #b00101010011 #b0001000010000110000011110001011110101110001101010000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
