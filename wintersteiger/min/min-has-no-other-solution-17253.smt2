(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5400447972513606753608428334700874984264373779296875p-219 {+ 2432145547664603 -219 (1.82795e-066)}
; Y = -1.897408050248082123090398454223759472370147705078125p977 {- 4041566560696546 977 (-2.42363e+294)}
; 1.5400447972513606753608428334700874984264373779296875p-219 m -1.897408050248082123090398454223759472370147705078125p977 == -1.897408050248082123090398454223759472370147705078125p977
; [HW: -1.897408050248082123090398454223759472370147705078125p977] 

; mpf : - 4041566560696546 977
; mpfd: - 4041566560696546 977 (-2.42363e+294) class: Neg. norm. non-zero
; hwf : - 4041566560696546 977 (-2.42363e+294) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100100100 #b1000101001000000011000000011011010010001110011011011)))
(assert (= y (fp #b1 #b11111010000 #b1110010110111100100010001011001011111011100011100010)))
(assert (= r (fp #b1 #b11111010000 #b1110010110111100100010001011001011111011100011100010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
