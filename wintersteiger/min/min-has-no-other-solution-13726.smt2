(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1289177977197051294666607645922340452671051025390625p-365 {- 580594145771889 -365 (-1.50215e-110)}
; Y = 1.976525029107431219443924419465474784374237060546875p-341 {+ 4397877757206190 -341 (4.41239e-103)}
; -1.1289177977197051294666607645922340452671051025390625p-365 m 1.976525029107431219443924419465474784374237060546875p-341 == -1.1289177977197051294666607645922340452671051025390625p-365
; [HW: -1.1289177977197051294666607645922340452671051025390625p-365] 

; mpf : - 580594145771889 -365
; mpfd: - 580594145771889 -365 (-1.50215e-110) class: Neg. norm. non-zero
; hwf : - 580594145771889 -365 (-1.50215e-110) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010010 #b0010000100000000110000011011110100010100000101110001)))
(assert (= y (fp #b0 #b01010101010 #b1111100111111101100010110101011110111101111010101110)))
(assert (= r (fp #b1 #b01010010010 #b0010000100000000110000011011110100010100000101110001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
