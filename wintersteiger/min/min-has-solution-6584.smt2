(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7064492402004487470179583397111855447292327880859375p-275 {+ 3181564534922911 -275 (2.81089e-083)}
; Y = -1.6725863075472326979564741122885607182979583740234375p499 {- 3029059444044215 499 (-2.73751e+150)}
; 1.7064492402004487470179583397111855447292327880859375p-275 m -1.6725863075472326979564741122885607182979583740234375p499 == -1.6725863075472326979564741122885607182979583740234375p499
; [HW: -1.6725863075472326979564741122885607182979583740234375p499] 

; mpf : - 3029059444044215 499
; mpfd: - 3029059444044215 499 (-2.73751e+150) class: Neg. norm. non-zero
; hwf : - 3029059444044215 499 (-2.73751e+150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101100 #b1011010011011001110110110111111011110001111010011111)))
(assert (= y (fp #b1 #b10111110010 #b1010110000101110100111011100001010100111000110110111)))
(assert (= r (fp #b1 #b10111110010 #b1010110000101110100111011100001010100111000110110111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
