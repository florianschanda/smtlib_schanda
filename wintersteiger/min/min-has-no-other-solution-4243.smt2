(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1879958629689308935439839842729270458221435546875p-303 {+ 846658098414072 -303 (7.28998e-092)}
; Y = 1.7326478653332368917716621581348590552806854248046875p-478 {+ 3299552653308555 -478 (2.2201e-144)}
; 1.1879958629689308935439839842729270458221435546875p-303 m 1.7326478653332368917716621581348590552806854248046875p-478 == 1.7326478653332368917716621581348590552806854248046875p-478
; [HW: 1.7326478653332368917716621581348590552806854248046875p-478] 

; mpf : + 3299552653308555 -478
; mpfd: + 3299552653308555 -478 (2.2201e-144) class: Pos. norm. non-zero
; hwf : + 3299552653308555 -478 (2.2201e-144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011010000 #b0011000000100000011111110011001100111100000111111000)))
(assert (= y (fp #b0 #b01000100001 #b1011101110001110110011110111110100010111001010001011)))
(assert (= r (fp #b0 #b01000100001 #b1011101110001110110011110111110100010111001010001011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
