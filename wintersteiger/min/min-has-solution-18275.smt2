(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7618098996827773472517719710594974458217620849609375p806 {+ 3430886780338511 806 (7.51858e+242)}
; Y = 1.98548167350537685393874198780395090579986572265625p-872 {+ 4438214897579268 -872 (6.30536e-263)}
; 1.7618098996827773472517719710594974458217620849609375p806 m 1.98548167350537685393874198780395090579986572265625p-872 == 1.98548167350537685393874198780395090579986572265625p-872
; [HW: 1.98548167350537685393874198780395090579986572265625p-872] 

; mpf : + 4438214897579268 -872
; mpfd: + 4438214897579268 -872 (6.30536e-263) class: Pos. norm. non-zero
; hwf : + 4438214897579268 -872 (6.30536e-263) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100101 #b1100001100000101111110010011110011101000000101001111)))
(assert (= y (fp #b0 #b00010010111 #b1111110001001000100001101110011010000011010100000100)))
(assert (= r (fp #b0 #b00010010111 #b1111110001001000100001101110011010000011010100000100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
