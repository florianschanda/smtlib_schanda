(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4514643625406786764386879440280608832836151123046875p-378 {- 2033214734909259 -378 (-2.35759e-114)}
; Y = -1.5564836797210819252512692401069216430187225341796875p204 {- 2506179692629627 204 (-4.00188e+061)}
; -1.4514643625406786764386879440280608832836151123046875p-378 m -1.5564836797210819252512692401069216430187225341796875p204 == -1.5564836797210819252512692401069216430187225341796875p204
; [HW: -1.5564836797210819252512692401069216430187225341796875p204] 

; mpf : - 2506179692629627 204
; mpfd: - 2506179692629627 204 (-4.00188e+061) class: Neg. norm. non-zero
; hwf : - 2506179692629627 204 (-4.00188e+061) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000101 #b0111001110010011001010110010000001101011111101001011)))
(assert (= y (fp #b1 #b10011001011 #b1000111001110101101101101110010100101000111001111011)))
(assert (= r (fp #b1 #b10011001011 #b1000111001110101101101101110010100101000111001111011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
