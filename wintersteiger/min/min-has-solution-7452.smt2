(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4745093268509747996830583360861055552959442138671875p557 {- 2137000027589875 557 (-6.95593e+167)}
; Y = -1.6528508769796983468580720000318251550197601318359375p-494 {- 2940178966294271 -494 (-3.23159e-149)}
; -1.4745093268509747996830583360861055552959442138671875p557 m -1.6528508769796983468580720000318251550197601318359375p-494 == -1.4745093268509747996830583360861055552959442138671875p557
; [HW: -1.4745093268509747996830583360861055552959442138671875p557] 

; mpf : - 2137000027589875 557
; mpfd: - 2137000027589875 557 (-6.95593e+167) class: Neg. norm. non-zero
; hwf : - 2137000027589875 557 (-6.95593e+167) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101100 #b0111100101111001011100010111100001111000110011110011)))
(assert (= y (fp #b1 #b01000010001 #b1010011100100001001111000010110111001010111011111111)))
(assert (= r (fp #b1 #b11000101100 #b0111100101111001011100010111100001111000110011110011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
