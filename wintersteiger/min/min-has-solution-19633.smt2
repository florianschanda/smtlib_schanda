(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8493875191817792380533092000405304133892059326171875p1015 {- 3825301314880211 1015 (-6.49342e+305)}
; Y = -1.3942382893360745210742379640578292310237884521484375p769 {- 1775491412949127 769 (-4.32916e+231)}
; -1.8493875191817792380533092000405304133892059326171875p1015 m -1.3942382893360745210742379640578292310237884521484375p769 == -1.8493875191817792380533092000405304133892059326171875p1015
; [HW: -1.8493875191817792380533092000405304133892059326171875p1015] 

; mpf : - 3825301314880211 1015
; mpfd: - 3825301314880211 1015 (-6.49342e+305) class: Neg. norm. non-zero
; hwf : - 3825301314880211 1015 (-6.49342e+305) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110110 #b1101100101110001011101011110000010000100001011010011)))
(assert (= y (fp #b1 #b11100000000 #b0110010011101100110011001110111110000111100010000111)))
(assert (= r (fp #b1 #b11111110110 #b1101100101110001011101011110000010000100001011010011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
