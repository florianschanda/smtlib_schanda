(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.809020207552086478841602001921273767948150634765625p296 {+ 3643503105266778 296 (2.30315e+089)}
; Y = -1.1186610743621836494554599994444288313388824462890625p-763 {- 534401970280913 -763 (-2.30575e-230)}
; 1.809020207552086478841602001921273767948150634765625p296 m -1.1186610743621836494554599994444288313388824462890625p-763 == -1.1186610743621836494554599994444288313388824462890625p-763
; [HW: -1.1186610743621836494554599994444288313388824462890625p-763] 

; mpf : - 534401970280913 -763
; mpfd: - 534401970280913 -763 (-2.30575e-230) class: Neg. norm. non-zero
; hwf : - 534401970280913 -763 (-2.30575e-230) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100111 #b1100111100011011111100101100010100111101010001011010)))
(assert (= y (fp #b1 #b00100000100 #b0001111001100000100100100111100110110001100111010001)))
(assert (= r (fp #b1 #b00100000100 #b0001111001100000100100100111100110110001100111010001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
