(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9496513430430730817732865034486167132854461669921875p-588 {+ 4276849434660675 -588 (1.92451e-177)}
; Y = -1.7500355169512593622727081310586072504520416259765625p-940 {- 3377859674656329 -940 (-1.883e-283)}
; 1.9496513430430730817732865034486167132854461669921875p-588 m -1.7500355169512593622727081310586072504520416259765625p-940 == -1.7500355169512593622727081310586072504520416259765625p-940
; [HW: -1.7500355169512593622727081310586072504520416259765625p-940] 

; mpf : - 3377859674656329 -940
; mpfd: - 3377859674656329 -940 (-1.883e-283) class: Neg. norm. non-zero
; hwf : - 3377859674656329 -940 (-1.883e-283) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110110011 #b1111001100011100010110011011010011111000111101000011)))
(assert (= y (fp #b1 #b00001010011 #b1100000000000010010100111110000000100100111001001001)))
(assert (= r (fp #b1 #b00001010011 #b1100000000000010010100111110000000100100111001001001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
