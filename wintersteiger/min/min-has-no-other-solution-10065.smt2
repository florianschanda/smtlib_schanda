(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7131401861197359526300942889065481722354888916015625p-811 {+ 3211697876471769 -811 (1.25449e-244)}
; Y = 1.7245562750713201438657051767222583293914794921875p595 {+ 3263111370420152 595 (2.23627e+179)}
; 1.7131401861197359526300942889065481722354888916015625p-811 m 1.7245562750713201438657051767222583293914794921875p595 == 1.7131401861197359526300942889065481722354888916015625p-811
; [HW: 1.7131401861197359526300942889065481722354888916015625p-811] 

; mpf : + 3211697876471769 -811
; mpfd: + 3211697876471769 -811 (1.25449e-244) class: Pos. norm. non-zero
; hwf : + 3211697876471769 -811 (1.25449e-244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010100 #b1011011010010000010110101111000011011000111111011001)))
(assert (= y (fp #b0 #b11001010010 #b1011100101111100100001010010000110001010111110111000)))
(assert (= r (fp #b0 #b00011010100 #b1011011010010000010110101111000011011000111111011001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
