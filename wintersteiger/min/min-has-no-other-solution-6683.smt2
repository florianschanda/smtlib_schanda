(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6188350906964483755245964857749640941619873046875p-945 {+ 2786985483864312 -945 (5.44323e-285)}
; Y = -1.9960243186151342964507193755707703530788421630859375p-906 {- 4485694750167071 -906 (-3.68969e-273)}
; 1.6188350906964483755245964857749640941619873046875p-945 m -1.9960243186151342964507193755707703530788421630859375p-906 == -1.9960243186151342964507193755707703530788421630859375p-906
; [HW: -1.9960243186151342964507193755707703530788421630859375p-906] 

; mpf : - 4485694750167071 -906
; mpfd: - 4485694750167071 -906 (-3.68969e-273) class: Neg. norm. non-zero
; hwf : - 4485694750167071 -906 (-3.68969e-273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001110 #b1001111001101011111110011111110000101000100011111000)))
(assert (= y (fp #b1 #b00001110101 #b1111111011111011011100110010001001111001000000011111)))
(assert (= r (fp #b1 #b00001110101 #b1111111011111011011100110010001001111001000000011111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
