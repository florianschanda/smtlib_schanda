(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7556379898806595551974396585137583315372467041015625p-790 {+ 3403090969653529 -790 (2.69611e-238)}
; Y = -1.1472588768577984819074799816007725894451141357421875p-484 {- 663195022943779 -484 (-2.29691e-146)}
; 1.7556379898806595551974396585137583315372467041015625p-790 m -1.1472588768577984819074799816007725894451141357421875p-484 == -1.1472588768577984819074799816007725894451141357421875p-484
; [HW: -1.1472588768577984819074799816007725894451141357421875p-484] 

; mpf : - 663195022943779 -484
; mpfd: - 663195022943779 -484 (-2.29691e-146) class: Neg. norm. non-zero
; hwf : - 663195022943779 -484 (-2.29691e-146) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101001 #b1100000101110001011111011100011000100111000100011001)))
(assert (= y (fp #b1 #b01000011011 #b0010010110110010110000011111110000100110011000100011)))
(assert (= r (fp #b1 #b01000011011 #b0010010110110010110000011111110000100110011000100011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
