(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 0.5402771373825745460095504313358105719089508056640625p-1022 {+ 2433191914592961 -1023 (1.20216e-308)}
; Y = -1.6090391653772309066283696665777824819087982177734375p781 {- 2742868558246935 781 (-2.04641e+235)}
; 0.5402771373825745460095504313358105719089508056640625p-1022 m -1.6090391653772309066283696665777824819087982177734375p781 == -1.6090391653772309066283696665777824819087982177734375p781
; [HW: -1.6090391653772309066283696665777824819087982177734375p781] 

; mpf : - 2742868558246935 781
; mpfd: - 2742868558246935 781 (-2.04641e+235) class: Neg. norm. non-zero
; hwf : - 2742868558246935 781 (-2.04641e+235) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1000101001001111100110100011101111010101101011000001)))
(assert (= y (fp #b1 #b11100001100 #b1001101111101001111111011010000101000111010000010111)))
(assert (= r (fp #b1 #b11100001100 #b1001101111101001111111011010000101000111010000010111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
