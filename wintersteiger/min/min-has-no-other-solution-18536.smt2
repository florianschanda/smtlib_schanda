(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1781520460227838942302014402230270206928253173828125p144 {+ 802325488083501 144 (2.62737e+043)}
; Y = -1.4856081777906187113558189594186842441558837890625p-268 {- 2186984808545896 -268 (-3.13232e-081)}
; 1.1781520460227838942302014402230270206928253173828125p144 m -1.4856081777906187113558189594186842441558837890625p-268 == -1.4856081777906187113558189594186842441558837890625p-268
; [HW: -1.4856081777906187113558189594186842441558837890625p-268] 

; mpf : - 2186984808545896 -268
; mpfd: - 2186984808545896 -268 (-3.13232e-081) class: Neg. norm. non-zero
; hwf : - 2186984808545896 -268 (-3.13232e-081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001111 #b0010110110011011010111110101101101100010001000101101)))
(assert (= y (fp #b1 #b01011110011 #b0111110001010000110100010100101001000111111001101000)))
(assert (= r (fp #b1 #b01011110011 #b0111110001010000110100010100101001000111111001101000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
