(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6710835368209961959706788547919131815433502197265625p451 {- 3022291566361513 451 (-9.71687e+135)}
; Y = 1.6628982454364018561676630270085297524929046630859375p827 {+ 2985428291131935 827 (1.48824e+249)}
; -1.6710835368209961959706788547919131815433502197265625p451 m 1.6628982454364018561676630270085297524929046630859375p827 == -1.6710835368209961959706788547919131815433502197265625p451
; [HW: -1.6710835368209961959706788547919131815433502197265625p451] 

; mpf : - 3022291566361513 451
; mpfd: - 3022291566361513 451 (-9.71687e+135) class: Neg. norm. non-zero
; hwf : - 3022291566361513 451 (-9.71687e+135) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000010 #b1010101111001100001000010111001110000111101110101001)))
(assert (= y (fp #b0 #b11100111010 #b1010100110110011101100110000110010111001101000011111)))
(assert (= r (fp #b1 #b10111000010 #b1010101111001100001000010111001110000111101110101001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
