(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.492636146492994253520691927406005561351776123046875p547 {- 2218635965775086 547 (-6.87641e+164)}
; Y = 1.1207748236514449846623620032914914190769195556640625p-934 {+ 543921450792385 -934 (7.71796e-282)}
; -1.492636146492994253520691927406005561351776123046875p547 m 1.1207748236514449846623620032914914190769195556640625p-934 == -1.492636146492994253520691927406005561351776123046875p547
; [HW: -1.492636146492994253520691927406005561351776123046875p547] 

; mpf : - 2218635965775086 547
; mpfd: - 2218635965775086 547 (-6.87641e+164) class: Neg. norm. non-zero
; hwf : - 2218635965775086 547 (-6.87641e+164) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100010 #b0111111000011101011001110000101000000011110011101110)))
(assert (= y (fp #b0 #b00001011001 #b0001111011101011000110010100110111000011010111000001)))
(assert (= r (fp #b1 #b11000100010 #b0111111000011101011001110000101000000011110011101110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
