(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1933205573778915553617707701050676405429840087890625p-254 {- 870638390170129 -254 (-4.12229e-077)}
; Y = -1.70497699097541310919723400729708373546600341796875p-733 {- 3174934113861644 -733 (-3.77339e-221)}
; -1.1933205573778915553617707701050676405429840087890625p-254 m -1.70497699097541310919723400729708373546600341796875p-733 == -1.1933205573778915553617707701050676405429840087890625p-254
; [HW: -1.1933205573778915553617707701050676405429840087890625p-254] 

; mpf : - 870638390170129 -254
; mpfd: - 870638390170129 -254 (-4.12229e-077) class: Neg. norm. non-zero
; hwf : - 870638390170129 -254 (-4.12229e-077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000001 #b0011000101111101011101001011111110010101001000010001)))
(assert (= y (fp #b1 #b00100100010 #b1011010001111001010111110100000010101100000000001100)))
(assert (= r (fp #b1 #b01100000001 #b0011000101111101011101001011111110010101001000010001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
