(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.541363624673847798618453452945686876773834228515625p1012 {+ 2438085018353082 1012 (6.76489e+304)}
; Y = 1.0471321027119195878896107387845404446125030517578125p-286 {+ 212264120210589 -286 (8.42215e-087)}
; 1.541363624673847798618453452945686876773834228515625p1012 m 1.0471321027119195878896107387845404446125030517578125p-286 == 1.0471321027119195878896107387845404446125030517578125p-286
; [HW: 1.0471321027119195878896107387845404446125030517578125p-286] 

; mpf : + 212264120210589 -286
; mpfd: + 212264120210589 -286 (8.42215e-087) class: Pos. norm. non-zero
; hwf : + 212264120210589 -286 (8.42215e-087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111110011 #b1000101010010110110011100111011100110111110110111010)))
(assert (= y (fp #b0 #b01011100001 #b0000110000010000110110010111011110111101010010011101)))
(assert (= r (fp #b0 #b01011100001 #b0000110000010000110110010111011110111101010010011101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
