(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.27532333795780772334182984195649623870849609375p123 {+ 1239946082233184 123 (1.35616e+037)}
; Y = -1.395048384690167342370159531128592789173126220703125p-421 {- 1779139758083954 -421 (-2.57609e-127)}
; 1.27532333795780772334182984195649623870849609375p123 m -1.395048384690167342370159531128592789173126220703125p-421 == -1.395048384690167342370159531128592789173126220703125p-421
; [HW: -1.395048384690167342370159531128592789173126220703125p-421] 

; mpf : - 1779139758083954 -421
; mpfd: - 1779139758083954 -421 (-2.57609e-127) class: Neg. norm. non-zero
; hwf : - 1779139758083954 -421 (-2.57609e-127) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111010 #b0100011001111011100101110001110001011010101101100000)))
(assert (= y (fp #b1 #b01001011010 #b0110010100100001111001000001010010010100111101110010)))
(assert (= r (fp #b1 #b01001011010 #b0110010100100001111001000001010010010100111101110010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
