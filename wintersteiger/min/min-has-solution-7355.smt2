(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.898621194163820913303197812638245522975921630859375p-446 {- 4047030075183414 -446 (-1.04487e-134)}
; Y = -1.5277019971519447683050429986906237900257110595703125p582 {- 2376558517736165 582 (-2.41822e+175)}
; -1.898621194163820913303197812638245522975921630859375p-446 m -1.5277019971519447683050429986906237900257110595703125p582 == -1.5277019971519447683050429986906237900257110595703125p582
; [HW: -1.5277019971519447683050429986906237900257110595703125p582] 

; mpf : - 2376558517736165 582
; mpfd: - 2376558517736165 582 (-2.41822e+175) class: Neg. norm. non-zero
; hwf : - 2376558517736165 582 (-2.41822e+175) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001000001 #b1110011000001100000010011110000001101101000100110110)))
(assert (= y (fp #b1 #b11001000101 #b1000011100010111011110100110001111001101001011100101)))
(assert (= r (fp #b1 #b11001000101 #b1000011100010111011110100110001111001101001011100101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
