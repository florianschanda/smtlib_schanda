(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.648697867088749102748579389299266040325164794921875p860 {- 2921475472496926 860 (-1.26747e+259)}
; Y = 1.2058749119630316481988074883702211081981658935546875p-144 {+ 927178176801643 -144 (5.40733e-044)}
; -1.648697867088749102748579389299266040325164794921875p860 m 1.2058749119630316481988074883702211081981658935546875p-144 == -1.648697867088749102748579389299266040325164794921875p860
; [HW: -1.648697867088749102748579389299266040325164794921875p860] 

; mpf : - 2921475472496926 860
; mpfd: - 2921475472496926 860 (-1.26747e+259) class: Neg. norm. non-zero
; hwf : - 2921475472496926 860 (-1.26747e+259) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101011011 #b1010011000010001000100000011110000100001100100011110)))
(assert (= y (fp #b0 #b01101101111 #b0011010010110100001101111101110111110010101101101011)))
(assert (= r (fp #b1 #b11101011011 #b1010011000010001000100000011110000100001100100011110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
