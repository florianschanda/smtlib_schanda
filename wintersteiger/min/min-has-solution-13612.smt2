(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8400048084825637584316382344695739448070526123046875p-937 {+ 3783045342471499 -937 (1.58385e-282)}
; Y = -1.4089328828330189846695930100395344197750091552734375p-150 {- 1841669978746327 -150 (-9.87168e-046)}
; 1.8400048084825637584316382344695739448070526123046875p-937 m -1.4089328828330189846695930100395344197750091552734375p-150 == -1.4089328828330189846695930100395344197750091552734375p-150
; [HW: -1.4089328828330189846695930100395344197750091552734375p-150] 

; mpf : - 1841669978746327 -150
; mpfd: - 1841669978746327 -150 (-9.87168e-046) class: Neg. norm. non-zero
; hwf : - 1841669978746327 -150 (-9.87168e-046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010110 #b1101011100001010100011100001110011101010010101001011)))
(assert (= y (fp #b1 #b01101101001 #b0110100010101111110100110100111000000110110111010111)))
(assert (= r (fp #b1 #b01101101001 #b0110100010101111110100110100111000000110110111010111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
