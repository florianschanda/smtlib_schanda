(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5585815249271799398655957702430896461009979248046875p320 {- 2515627547518091 320 (-3.32911e+096)}
; Y = 1.93872765519795908772948678233660757541656494140625p91 {+ 4227653518151908 91 (4.80006e+027)}
; -1.5585815249271799398655957702430896461009979248046875p320 m 1.93872765519795908772948678233660757541656494140625p91 == -1.5585815249271799398655957702430896461009979248046875p320
; [HW: -1.5585815249271799398655957702430896461009979248046875p320] 

; mpf : - 2515627547518091 320
; mpfd: - 2515627547518091 320 (-3.32911e+096) class: Neg. norm. non-zero
; hwf : - 2515627547518091 320 (-3.32911e+096) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100111111 #b1000111011111111001100101110010110110110010010001011)))
(assert (= y (fp #b0 #b10001011010 #b1111000001010000011101001010001011101101000011100100)))
(assert (= r (fp #b1 #b10100111111 #b1000111011111111001100101110010110110110010010001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
