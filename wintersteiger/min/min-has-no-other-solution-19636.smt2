(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1779173373559739257387946054222993552684783935546875p157 {+ 801268454219115 157 (2.15191e+047)}
; Y = -1.070498416151558718212299936567433178424835205078125p852 {- 317496640710370 852 (-3.21471e+256)}
; 1.1779173373559739257387946054222993552684783935546875p157 m -1.070498416151558718212299936567433178424835205078125p852 == -1.070498416151558718212299936567433178424835205078125p852
; [HW: -1.070498416151558718212299936567433178424835205078125p852] 

; mpf : - 317496640710370 852
; mpfd: - 317496640710370 852 (-3.21471e+256) class: Neg. norm. non-zero
; hwf : - 317496640710370 852 (-3.21471e+256) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010011100 #b0010110110001011111111011001100101010101110101101011)))
(assert (= y (fp #b1 #b11101010011 #b0001001000001100001011110010011111001010011011100010)))
(assert (= r (fp #b1 #b11101010011 #b0001001000001100001011110010011111001010011011100010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
