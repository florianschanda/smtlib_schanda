(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6025435809914994056413206635625101625919342041015625p19 {+ 2713615046827801 19 (840194)}
; Y = 1.9067254258940111721898347241221927106380462646484375p-891 {+ 4083528290183623 -891 (1.15495e-268)}
; 1.6025435809914994056413206635625101625919342041015625p19 m 1.9067254258940111721898347241221927106380462646484375p-891 == 1.9067254258940111721898347241221927106380462646484375p-891
; [HW: 1.9067254258940111721898347241221927106380462646484375p-891] 

; mpf : + 4083528290183623 -891
; mpfd: + 4083528290183623 -891 (1.15495e-268) class: Pos. norm. non-zero
; hwf : + 4083528290183623 -891 (1.15495e-268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010010 #b1001101001000000010010111100111011000101111100011001)))
(assert (= y (fp #b0 #b00010000100 #b1110100000011111001010000101001010101010100111000111)))
(assert (= r (fp #b0 #b00010000100 #b1110100000011111001010000101001010101010100111000111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
