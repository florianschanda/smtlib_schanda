(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.52460382459659005149887889274396002292633056640625p978 {- 2362605588970340 978 (-3.89487e+294)}
; Y = -1.7862573323219212984014347966876812279224395751953125p-205 {- 3540988228862325 -205 (-3.47372e-062)}
; -1.52460382459659005149887889274396002292633056640625p978 m -1.7862573323219212984014347966876812279224395751953125p-205 == -1.52460382459659005149887889274396002292633056640625p978
; [HW: -1.52460382459659005149887889274396002292633056640625p978] 

; mpf : - 2362605588970340 978
; mpfd: - 2362605588970340 978 (-3.89487e+294) class: Neg. norm. non-zero
; hwf : - 2362605588970340 978 (-3.89487e+294) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010001 #b1000011001001100011011111010110111111111101101100100)))
(assert (= y (fp #b1 #b01100110010 #b1100100101001000001010010001100010010000000101110101)))
(assert (= r (fp #b1 #b11111010001 #b1000011001001100011011111010110111111111101101100100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
