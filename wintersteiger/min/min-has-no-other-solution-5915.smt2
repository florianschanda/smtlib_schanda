(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.46546639664454847462593534146435558795928955078125p460 {+ 2096274290481876 460 (4.36289e+138)}
; Y = 1.744118034020310847864720926736481487751007080078125p-675 {+ 3351209700733538 -675 (1.11257e-203)}
; 1.46546639664454847462593534146435558795928955078125p460 m 1.744118034020310847864720926736481487751007080078125p-675 == 1.744118034020310847864720926736481487751007080078125p-675
; [HW: 1.744118034020310847864720926736481487751007080078125p-675] 

; mpf : + 3351209700733538 -675
; mpfd: + 3351209700733538 -675 (1.11257e-203) class: Pos. norm. non-zero
; hwf : + 3351209700733538 -675 (1.11257e-203) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111001011 #b0111011100101000110011100100011011111001101011010100)))
(assert (= y (fp #b0 #b00101011100 #b1011111001111110100001001111110001111011001001100010)))
(assert (= r (fp #b0 #b00101011100 #b1011111001111110100001001111110001111011001001100010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
