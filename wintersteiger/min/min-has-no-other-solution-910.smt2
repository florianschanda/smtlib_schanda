(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6093699659988605077387546771205961704254150390625p899 {- 2744358351803240 899 (-6.80177e+270)}
; Y = -1.713377693503913778982905569137074053287506103515625p-458 {- 3212767514638650 -458 (-2.30205e-138)}
; -1.6093699659988605077387546771205961704254150390625p899 m -1.713377693503913778982905569137074053287506103515625p-458 == -1.6093699659988605077387546771205961704254150390625p899
; [HW: -1.6093699659988605077387546771205961704254150390625p899] 

; mpf : - 2744358351803240 899
; mpfd: - 2744358351803240 899 (-6.80177e+270) class: Neg. norm. non-zero
; hwf : - 2744358351803240 899 (-6.80177e+270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110000010 #b1001101111111111101010111000101100100001001101101000)))
(assert (= y (fp #b1 #b01000110101 #b1011011010011111111010111010011101001011100100111010)))
(assert (= r (fp #b1 #b11110000010 #b1001101111111111101010111000101100100001001101101000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
