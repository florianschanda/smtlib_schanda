(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0637484781069426187372073400183580815792083740234375p-73 {- 287097622247863 -73 (-1.12629e-022)}
; Y = -1.8551875765649927796374640820431523025035858154296875p-175 {- 3851422451149979 -175 (-3.87381e-053)}
; -1.0637484781069426187372073400183580815792083740234375p-73 m -1.8551875765649927796374640820431523025035858154296875p-175 == -1.0637484781069426187372073400183580815792083740234375p-73
; [HW: -1.0637484781069426187372073400183580815792083740234375p-73] 

; mpf : - 287097622247863 -73
; mpfd: - 287097622247863 -73 (-1.12629e-022) class: Neg. norm. non-zero
; hwf : - 287097622247863 -73 (-1.12629e-022) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110110110 #b0001000001010001110100011111110010100011100110110111)))
(assert (= y (fp #b1 #b01101010000 #b1101101011101101100100101011000101001010110010011011)))
(assert (= r (fp #b1 #b01110110110 #b0001000001010001110100011111110010100011100110110111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
