(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5123923770131264543437055181129835546016693115234375p73 {- 2307610118183799 73 (-1.42841e+022)}
; Y = 1.722262662664923116295767613337375223636627197265625p-433 {+ 3252781858441370 -433 (7.76446e-131)}
; -1.5123923770131264543437055181129835546016693115234375p73 m 1.722262662664923116295767613337375223636627197265625p-433 == -1.5123923770131264543437055181129835546016693115234375p73
; [HW: -1.5123923770131264543437055181129835546016693115234375p73] 

; mpf : - 2307610118183799 73
; mpfd: - 2307610118183799 73 (-1.42841e+022) class: Neg. norm. non-zero
; hwf : - 2307610118183799 73 (-1.42841e+022) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001000 #b1000001100101100001001011001010111111101101101110111)))
(assert (= y (fp #b0 #b01001001110 #b1011100011100110001101001011001101000100100010011010)))
(assert (= r (fp #b1 #b10001001000 #b1000001100101100001001011001010111111101101101110111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
