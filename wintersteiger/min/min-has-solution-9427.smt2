(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.453260261771875061498349168687127530574798583984375p-415 {- 2041302746017670 -415 (-1.71749e-125)}
; Y = 1.053038799738487796275876462459564208984375p423 {+ 238865518738432 423 (2.28104e+127)}
; -1.453260261771875061498349168687127530574798583984375p-415 m 1.053038799738487796275876462459564208984375p423 == -1.453260261771875061498349168687127530574798583984375p-415
; [HW: -1.453260261771875061498349168687127530574798583984375p-415] 

; mpf : - 2041302746017670 -415
; mpfd: - 2041302746017670 -415 (-1.71749e-125) class: Neg. norm. non-zero
; hwf : - 2041302746017670 -415 (-1.71749e-125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100000 #b0111010000001000110111010101000011100010111110000110)))
(assert (= y (fp #b0 #b10110100110 #b0000110110010011111100110110011001001011110000000000)))
(assert (= r (fp #b1 #b01001100000 #b0111010000001000110111010101000011100010111110000110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
