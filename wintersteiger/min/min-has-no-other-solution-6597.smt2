(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0134610011589746392246524919755756855010986328125p448 {+ 60622959803592 448 (7.36623e+134)}
; Y = -1.9403448794685356215694582715514115989208221435546875p480 {- 4234936848774251 480 (-6.05727e+144)}
; 1.0134610011589746392246524919755756855010986328125p448 m -1.9403448794685356215694582715514115989208221435546875p480 == -1.9403448794685356215694582715514115989208221435546875p480
; [HW: -1.9403448794685356215694582715514115989208221435546875p480] 

; mpf : - 4234936848774251 480
; mpfd: - 4234936848774251 480 (-6.05727e+144) class: Neg. norm. non-zero
; hwf : - 4234936848774251 480 (-6.05727e+144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111111 #b0000001101110010001011100001111110111111110011001000)))
(assert (= y (fp #b1 #b10111011111 #b1111000010111010011100010010100001000111010001101011)))
(assert (= r (fp #b1 #b10111011111 #b1111000010111010011100010010100001000111010001101011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
