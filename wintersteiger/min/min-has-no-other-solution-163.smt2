(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4791935553805846126351752900518476963043212890625p339 {+ 2158095917450344 339 (1.65651e+102)}
; Y = -1.662499082838950759111185107030905783176422119140625p-559 {- 2983630622606794 -559 (-8.81036e-169)}
; 1.4791935553805846126351752900518476963043212890625p339 m -1.662499082838950759111185107030905783176422119140625p-559 == -1.662499082838950759111185107030905783176422119140625p-559
; [HW: -1.662499082838950759111185107030905783176422119140625p-559] 

; mpf : - 2983630622606794 -559
; mpfd: - 2983630622606794 -559 (-8.81036e-169) class: Neg. norm. non-zero
; hwf : - 2983630622606794 -559 (-8.81036e-169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010010 #b0111101010101100011011011100100011010000010001101000)))
(assert (= y (fp #b1 #b00111010000 #b1010100110011001100010100011011001101100010111001010)))
(assert (= r (fp #b1 #b00111010000 #b1010100110011001100010100011011001101100010111001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
