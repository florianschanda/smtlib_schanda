(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9941831069734619052979951447923667728900909423828125p-349 {- 4477402670103725 -349 (-1.73899e-105)}
; Y = 1.37533434258028020025221849209628999233245849609375p392 {+ 1690355605383900 392 (1.38729e+118)}
; -1.9941831069734619052979951447923667728900909423828125p-349 m 1.37533434258028020025221849209628999233245849609375p392 == -1.9941831069734619052979951447923667728900909423828125p-349
; [HW: -1.9941831069734619052979951447923667728900909423828125p-349] 

; mpf : - 4477402670103725 -349
; mpfd: - 4477402670103725 -349 (-1.73899e-105) class: Neg. norm. non-zero
; hwf : - 4477402670103725 -349 (-1.73899e-105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100010 #b1111111010000010110010001011101010101111110010101101)))
(assert (= y (fp #b0 #b10110000111 #b0110000000010101111010010101011001110010101011011100)))
(assert (= r (fp #b1 #b01010100010 #b1111111010000010110010001011101010101111110010101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
