(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.29710030332895076554677871172316372394561767578125p34 {- 1338020815363924 34 (-2.2284e+010)}
; Y = -1.5549901789097722026866676969802938401699066162109375p-170 {- 2499453562932335 -170 (-1.03903e-051)}
; -1.29710030332895076554677871172316372394561767578125p34 m -1.5549901789097722026866676969802938401699066162109375p-170 == -1.29710030332895076554677871172316372394561767578125p34
; [HW: -1.29710030332895076554677871172316372394561767578125p34] 

; mpf : - 1338020815363924 34
; mpfd: - 1338020815363924 34 (-2.2284e+010) class: Neg. norm. non-zero
; hwf : - 1338020815363924 34 (-2.2284e+010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100001 #b0100110000001110110000111111011001101101111101010100)))
(assert (= y (fp #b1 #b01101010101 #b1000111000010011110101100001110000000100110001101111)))
(assert (= r (fp #b1 #b10000100001 #b0100110000001110110000111111011001101101111101010100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
