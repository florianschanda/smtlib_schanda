(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5807261888525385717940707763773389160633087158203125p985 {+ 2615358247720581 985 (5.16895e+296)}
; Y = -1.347501674100089363861343372263945639133453369140625p211 {- 1565008409987786 211 (-4.43464e+063)}
; 1.5807261888525385717940707763773389160633087158203125p985 m -1.347501674100089363861343372263945639133453369140625p211 == -1.347501674100089363861343372263945639133453369140625p211
; [HW: -1.347501674100089363861343372263945639133453369140625p211] 

; mpf : - 1565008409987786 211
; mpfd: - 1565008409987786 211 (-4.43464e+063) class: Neg. norm. non-zero
; hwf : - 1565008409987786 211 (-4.43464e+063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011000 #b1001010010101010011110001011010100001101011010000101)))
(assert (= y (fp #b1 #b10011010010 #b0101100011110101110111101010010110010000101011001010)))
(assert (= r (fp #b1 #b10011010010 #b0101100011110101110111101010010110010000101011001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
