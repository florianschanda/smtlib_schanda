(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8321685265436438161401611068868078291416168212890625p-992 {+ 3747753866051409 -992 (4.37733e-299)}
; Y = -1.2477243786365492805856547420262359082698822021484375p385 {- 1115651419318151 385 (-9.83257e+115)}
; 1.8321685265436438161401611068868078291416168212890625p-992 m -1.2477243786365492805856547420262359082698822021484375p385 == -1.2477243786365492805856547420262359082698822021484375p385
; [HW: -1.2477243786365492805856547420262359082698822021484375p385] 

; mpf : - 1115651419318151 385
; mpfd: - 1115651419318151 385 (-9.83257e+115) class: Neg. norm. non-zero
; hwf : - 1115651419318151 385 (-9.83257e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011111 #b1101010100001000111111110001111001000011111101010001)))
(assert (= y (fp #b1 #b10110000000 #b0011111101101010110111010110100010101010011110000111)))
(assert (= r (fp #b1 #b10110000000 #b0011111101101010110111010110100010101010011110000111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
