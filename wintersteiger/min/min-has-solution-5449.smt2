(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.868901353581384316981939264223910868167877197265625p343 {- 3913183812210842 343 (-3.34869e+103)}
; Y = -1.02441690851164945996742972056381404399871826171875p385 {- 109963980074604 385 (-8.07282e+115)}
; -1.868901353581384316981939264223910868167877197265625p343 m -1.02441690851164945996742972056381404399871826171875p385 == -1.02441690851164945996742972056381404399871826171875p385
; [HW: -1.02441690851164945996742972056381404399871826171875p385] 

; mpf : - 109963980074604 385
; mpfd: - 109963980074604 385 (-8.07282e+115) class: Neg. norm. non-zero
; hwf : - 109963980074604 385 (-8.07282e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010110 #b1101111001110000010100011011000100010101000010011010)))
(assert (= y (fp #b1 #b10110000000 #b0000011001000000001011111011111110000110111001101100)))
(assert (= r (fp #b1 #b10110000000 #b0000011001000000001011111011111110000110111001101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
