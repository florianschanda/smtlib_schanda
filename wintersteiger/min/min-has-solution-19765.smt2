(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2051002983721981198783623767667450010776519775390625p-23 {- 923689627322609 -23 (-1.43659e-007)}
; Y = 1.78845958682191774613556844997219741344451904296875p-709 {+ 3550906301407884 -709 (6.64067e-214)}
; -1.2051002983721981198783623767667450010776519775390625p-23 m 1.78845958682191774613556844997219741344451904296875p-709 == -1.2051002983721981198783623767667450010776519775390625p-23
; [HW: -1.2051002983721981198783623767667450010776519775390625p-23] 

; mpf : - 923689627322609 -23
; mpfd: - 923689627322609 -23 (-1.43659e-007) class: Neg. norm. non-zero
; hwf : - 923689627322609 -23 (-1.43659e-007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111101000 #b0011010010000001011101000000000111101000100011110001)))
(assert (= y (fp #b0 #b00100111010 #b1100100111011000011111001100101110011110001010001100)))
(assert (= r (fp #b1 #b01111101000 #b0011010010000001011101000000000111101000100011110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
