(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.654874085066464939330899142078123986721038818359375p921 {- 2949290685479926 921 (-2.93353e+277)}
; Y = 1.417924776931163588500339756137691438198089599609375p-697 {+ 1882165869656086 -697 (2.15648e-210)}
; -1.654874085066464939330899142078123986721038818359375p921 m 1.417924776931163588500339756137691438198089599609375p-697 == -1.654874085066464939330899142078123986721038818359375p921
; [HW: -1.654874085066464939330899142078123986721038818359375p921] 

; mpf : - 2949290685479926 921
; mpfd: - 2949290685479926 921 (-2.93353e+277) class: Neg. norm. non-zero
; hwf : - 2949290685479926 921 (-2.93353e+277) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011000 #b1010011110100101110100111111101001011011101111110110)))
(assert (= y (fp #b0 #b00101000110 #b0110101011111101000111100100000100011011100000010110)))
(assert (= r (fp #b1 #b11110011000 #b1010011110100101110100111111101001011011101111110110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
