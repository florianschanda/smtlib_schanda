(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.175188405088288146060904182377271354198455810546875p-679 {+ 788978435875246 -679 (4.68533e-205)}
; Y = 1.6241002467178098367384109224076382815837860107421875p481 {+ 2810697638560163 481 (1.01401e+145)}
; 1.175188405088288146060904182377271354198455810546875p-679 m 1.6241002467178098367384109224076382815837860107421875p481 == 1.175188405088288146060904182377271354198455810546875p-679
; [HW: 1.175188405088288146060904182377271354198455810546875p-679] 

; mpf : + 788978435875246 -679
; mpfd: + 788978435875246 -679 (4.68533e-205) class: Pos. norm. non-zero
; hwf : + 788978435875246 -679 (4.68533e-205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101011000 #b0010110011011001001001011011011001111110000110101110)))
(assert (= y (fp #b0 #b10111100000 #b1001111111000101000010001010010100010100000110100011)))
(assert (= r (fp #b0 #b00101011000 #b0010110011011001001001011011011001111110000110101110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
