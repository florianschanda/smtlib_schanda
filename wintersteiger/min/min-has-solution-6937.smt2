(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8689642837798798868931271499604918062686920166015625p-903 {+ 3913467224629337 -903 (2.76385e-272)}
; Y = 1.0207420594278746595051643453189171850681304931640625p814 {+ 93413931110273 814 (1.11515e+245)}
; 1.8689642837798798868931271499604918062686920166015625p-903 m 1.0207420594278746595051643453189171850681304931640625p814 == 1.8689642837798798868931271499604918062686920166015625p-903
; [HW: 1.8689642837798798868931271499604918062686920166015625p-903] 

; mpf : + 3913467224629337 -903
; mpfd: + 3913467224629337 -903 (2.76385e-272) class: Pos. norm. non-zero
; hwf : + 3913467224629337 -903 (2.76385e-272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001111000 #b1101111001110100011100010111110000111010000001011001)))
(assert (= y (fp #b0 #b11100101101 #b0000010101001111010110100000001011100100111110000001)))
(assert (= r (fp #b0 #b00001111000 #b1101111001110100011100010111110000111010000001011001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
