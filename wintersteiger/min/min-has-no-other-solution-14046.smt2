(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7139480155733604060941388524952344596385955810546875p-747 {- 3215336016898091 -747 (-2.31521e-225)}
; Y = -1.0952463084043182472981925457133911550045013427734375p225 {- 428951239038103 225 (-5.90556e+067)}
; -1.7139480155733604060941388524952344596385955810546875p-747 m -1.0952463084043182472981925457133911550045013427734375p225 == -1.0952463084043182472981925457133911550045013427734375p225
; [HW: -1.0952463084043182472981925457133911550045013427734375p225] 

; mpf : - 428951239038103 225
; mpfd: - 428951239038103 225 (-5.90556e+067) class: Neg. norm. non-zero
; hwf : - 428951239038103 225 (-5.90556e+067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010100 #b1011011011000101010011000001000111101110100000101011)))
(assert (= y (fp #b1 #b10011100000 #b0001100001100010000011111110001110101001010010010111)))
(assert (= r (fp #b1 #b10011100000 #b0001100001100010000011111110001110101001010010010111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
