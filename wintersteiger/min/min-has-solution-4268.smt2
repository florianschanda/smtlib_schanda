(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1808070202487319644291119402623735368251800537109375p591 {- 814282429018159 591 (-9.56988e+177)}
; Y = -1.03299876766370513081483295536600053310394287109375p-326 {- 148613237753948 -326 (-7.55651e-099)}
; -1.1808070202487319644291119402623735368251800537109375p591 m -1.03299876766370513081483295536600053310394287109375p-326 == -1.1808070202487319644291119402623735368251800537109375p591
; [HW: -1.1808070202487319644291119402623735368251800537109375p591] 

; mpf : - 814282429018159 591
; mpfd: - 814282429018159 591 (-9.56988e+177) class: Neg. norm. non-zero
; hwf : - 814282429018159 591 (-9.56988e+177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001110 #b0010111001001001010111100110111011011011000000101111)))
(assert (= y (fp #b1 #b01010111001 #b0000100001110010100110110111001111101100100001011100)))
(assert (= r (fp #b1 #b11001001110 #b0010111001001001010111100110111011011011000000101111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
