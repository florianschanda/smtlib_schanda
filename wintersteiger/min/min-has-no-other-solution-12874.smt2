(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2856891242457331170356837901636026799678802490234375p-74 {- 1286629433496887 -74 (-6.80638e-023)}
; Y = -1.8254613241636679088486516775446943938732147216796875p-372 {- 3717547311912251 -372 (-1.89764e-112)}
; -1.2856891242457331170356837901636026799678802490234375p-74 m -1.8254613241636679088486516775446943938732147216796875p-372 == -1.2856891242457331170356837901636026799678802490234375p-74
; [HW: -1.2856891242457331170356837901636026799678802490234375p-74] 

; mpf : - 1286629433496887 -74
; mpfd: - 1286629433496887 -74 (-6.80638e-023) class: Neg. norm. non-zero
; hwf : - 1286629433496887 -74 (-6.80638e-023) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110110101 #b0100100100100010111011000010010101110101010100110111)))
(assert (= y (fp #b1 #b01010001011 #b1101001101010001011011101110111101100101010100111011)))
(assert (= r (fp #b1 #b01110110101 #b0100100100100010111011000010010101110101010100110111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
