(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9805769951916278870385212940163910388946533203125p-708 {+ 4416126190153096 -708 (1.4708e-213)}
; Y = -1.926805553289371975012045368202961981296539306640625p1002 {- 4173961144438922 1002 (-8.25835e+301)}
; 1.9805769951916278870385212940163910388946533203125p-708 m -1.926805553289371975012045368202961981296539306640625p1002 == -1.926805553289371975012045368202961981296539306640625p1002
; [HW: -1.926805553289371975012045368202961981296539306640625p1002] 

; mpf : - 4173961144438922 1002
; mpfd: - 4173961144438922 1002 (-8.25835e+301) class: Neg. norm. non-zero
; hwf : - 4173961144438922 1002 (-8.25835e+301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111011 #b1111101100000111000110000000110110001110110110001000)))
(assert (= y (fp #b1 #b11111101001 #b1110110101000011001000001111010100100001000010001010)))
(assert (= r (fp #b1 #b11111101001 #b1110110101000011001000001111010100100001000010001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
