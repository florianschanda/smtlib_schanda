(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4366527322628159790696145137189887464046478271484375p961 {+ 1966509082309127 961 (2.80013e+289)}
; Y = 1.165289946736314252717647832469083368778228759765625p-984 {+ 744399742529754 -984 (7.12719e-297)}
; 1.4366527322628159790696145137189887464046478271484375p961 m 1.165289946736314252717647832469083368778228759765625p-984 == 1.165289946736314252717647832469083368778228759765625p-984
; [HW: 1.165289946736314252717647832469083368778228759765625p-984] 

; mpf : + 744399742529754 -984
; mpfd: + 744399742529754 -984 (7.12719e-297) class: Pos. norm. non-zero
; hwf : + 744399742529754 -984 (7.12719e-297) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111000000 #b0110111111001000011110010011010011000111001000000111)))
(assert (= y (fp #b0 #b00000100111 #b0010101001010000011100010010001110010111000011011010)))
(assert (= r (fp #b0 #b00000100111 #b0010101001010000011100010010001110010111000011011010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
