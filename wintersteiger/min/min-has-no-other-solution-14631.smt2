(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.863703419372944924958801493630744516849517822265625p-404 {+ 3889774397646618 -404 (4.51085e-122)}
; Y = -1.553676440308407791235367767512798309326171875p-731 {- 2493537010256768 -731 (-1.37541e-220)}
; 1.863703419372944924958801493630744516849517822265625p-404 m -1.553676440308407791235367767512798309326171875p-731 == -1.553676440308407791235367767512798309326171875p-731
; [HW: -1.553676440308407791235367767512798309326171875p-731] 

; mpf : - 2493537010256768 -731
; mpfd: - 2493537010256768 -731 (-1.37541e-220) class: Neg. norm. non-zero
; hwf : - 2493537010256768 -731 (-1.37541e-220) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001101011 #b1101110100011011101010101101001110100110011100011010)))
(assert (= y (fp #b1 #b00100100100 #b1000110110111101101111010011101110110000101110000000)))
(assert (= r (fp #b1 #b00100100100 #b1000110110111101101111010011101110110000101110000000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
