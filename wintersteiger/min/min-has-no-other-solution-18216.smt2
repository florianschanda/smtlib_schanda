(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.668983876632682328278178829350508749485015869140625p-791 {+ 3012835537519818 -791 (1.28152e-238)}
; Y = 1.7033559907221273999056165848742239177227020263671875p-529 {+ 3167633777724979 -529 (9.69254e-160)}
; 1.668983876632682328278178829350508749485015869140625p-791 m 1.7033559907221273999056165848742239177227020263671875p-529 == 1.668983876632682328278178829350508749485015869140625p-791
; [HW: 1.668983876632682328278178829350508749485015869140625p-791] 

; mpf : + 3012835537519818 -791
; mpfd: + 3012835537519818 -791 (1.28152e-238) class: Pos. norm. non-zero
; hwf : + 3012835537519818 -791 (1.28152e-238) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101000 #b1010101101000010100001101111111110110000010011001010)))
(assert (= y (fp #b0 #b00111101110 #b1011010000001111001000110110000110011000111000110011)))
(assert (= r (fp #b0 #b00011101000 #b1010101101000010100001101111111110110000010011001010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
