(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5773608755890864419058061685063876211643218994140625p-531 {- 2600202224161313 -531 (-2.2439e-160)}
; Y = 1.7434075109213018617282386912847869098186492919921875p-422 {+ 3348009789169603 -422 (1.60968e-127)}
; -1.5773608755890864419058061685063876211643218994140625p-531 m 1.7434075109213018617282386912847869098186492919921875p-422 == -1.5773608755890864419058061685063876211643218994140625p-531
; [HW: -1.5773608755890864419058061685063876211643218994140625p-531] 

; mpf : - 2600202224161313 -531
; mpfd: - 2600202224161313 -531 (-2.2439e-160) class: Neg. norm. non-zero
; hwf : - 2600202224161313 -531 (-2.2439e-160) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101100 #b1001001111001101111011000001111010100101001000100001)))
(assert (= y (fp #b0 #b01001011001 #b1011111001001111111101000110001100000001111111000011)))
(assert (= r (fp #b1 #b00111101100 #b1001001111001101111011000001111010100101001000100001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
