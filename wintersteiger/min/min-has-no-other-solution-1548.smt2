(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.242519187243837475165264550014398992061614990234375p534 {- 1092209321301542 534 (-6.98748e+160)}
; Y = -1.6868467652014638158419757019146345555782318115234375p-6 {- 3093282835821943 -6 (-0.026357)}
; -1.242519187243837475165264550014398992061614990234375p534 m -1.6868467652014638158419757019146345555782318115234375p-6 == -1.242519187243837475165264550014398992061614990234375p534
; [HW: -1.242519187243837475165264550014398992061614990234375p534] 

; mpf : - 1092209321301542 534
; mpfd: - 1092209321301542 534 (-6.98748e+160) class: Neg. norm. non-zero
; hwf : - 1092209321301542 534 (-6.98748e+160) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000010101 #b0011111000010101101111001100100111011101011000100110)))
(assert (= y (fp #b1 #b01111111001 #b1010111111010101001100001000100111100111010101110111)))
(assert (= r (fp #b1 #b11000010101 #b0011111000010101101111001100100111011101011000100110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
