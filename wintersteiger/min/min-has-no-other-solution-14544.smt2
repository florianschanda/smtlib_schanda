(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0577484283022793309925191351794637739658355712890625p-764 {- 260075800183377 -764 (-1.0901e-230)}
; Y = 1.6832261801620453933736598628456704318523406982421875p-121 {+ 3076977170387555 -121 (6.33159e-037)}
; -1.0577484283022793309925191351794637739658355712890625p-764 m 1.6832261801620453933736598628456704318523406982421875p-121 == -1.0577484283022793309925191351794637739658355712890625p-764
; [HW: -1.0577484283022793309925191351794637739658355712890625p-764] 

; mpf : - 260075800183377 -764
; mpfd: - 260075800183377 -764 (-1.0901e-230) class: Neg. norm. non-zero
; hwf : - 260075800183377 -764 (-1.0901e-230) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000011 #b0000111011001000100110011101101011110100001001010001)))
(assert (= y (fp #b0 #b01110000110 #b1010111011100111111010010011001110010001001001100011)))
(assert (= r (fp #b1 #b00100000011 #b0000111011001000100110011101101011110100001001010001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
