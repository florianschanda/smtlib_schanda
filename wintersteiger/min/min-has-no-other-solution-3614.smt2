(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.593594724354645553177078909357078373432159423828125p328 {- 2673312979412674 328 (-8.71398e+098)}
; Y = -1.510534560613939536466432400629855692386627197265625p-52 {- 2299243256940698 -52 (-3.35406e-016)}
; -1.593594724354645553177078909357078373432159423828125p328 m -1.510534560613939536466432400629855692386627197265625p-52 == -1.593594724354645553177078909357078373432159423828125p328
; [HW: -1.593594724354645553177078909357078373432159423828125p328] 

; mpf : - 2673312979412674 328
; mpfd: - 2673312979412674 328 (-8.71398e+098) class: Neg. norm. non-zero
; hwf : - 2673312979412674 328 (-8.71398e+098) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101000111 #b1001011111110101110100101110100000101110011011000010)))
(assert (= y (fp #b1 #b01111001011 #b1000001010110010011001001001100101010000100010011010)))
(assert (= r (fp #b1 #b10101000111 #b1001011111110101110100101110100000101110011011000010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
