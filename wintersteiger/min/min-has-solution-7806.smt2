(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.50719155788385617000812999322079122066497802734375p259 {- 2284187711091196 259 (-1.39617e+078)}
; Y = -1.630069773502099916839824800263158977031707763671875p-236 {- 2837581997161470 -236 (-1.47614e-071)}
; -1.50719155788385617000812999322079122066497802734375p259 m -1.630069773502099916839824800263158977031707763671875p-236 == -1.50719155788385617000812999322079122066497802734375p259
; [HW: -1.50719155788385617000812999322079122066497802734375p259] 

; mpf : - 2284187711091196 259
; mpfd: - 2284187711091196 259 (-1.39617e+078) class: Neg. norm. non-zero
; hwf : - 2284187711091196 259 (-1.39617e+078) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000010 #b1000000111010111010011100101000111101011000111111100)))
(assert (= y (fp #b1 #b01100010011 #b1010000101001100010000001010111101100011101111111110)))
(assert (= r (fp #b1 #b10100000010 #b1000000111010111010011100101000111101011000111111100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
