(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.942759188961798333394881410640664398670196533203125p544 {+ 4245809932108466 544 (1.11876e+164)}
; Y = 1.45717563824406770578434588969685137271881103515625p364 {+ 2058936034038852 364 (5.47558e+109)}
; 1.942759188961798333394881410640664398670196533203125p544 m 1.45717563824406770578434588969685137271881103515625p364 == 1.45717563824406770578434588969685137271881103515625p364
; [HW: 1.45717563824406770578434588969685137271881103515625p364] 

; mpf : + 2058936034038852 364
; mpfd: + 2058936034038852 364 (5.47558e+109) class: Pos. norm. non-zero
; hwf : + 2058936034038852 364 (5.47558e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011111 #b1111000101011000101010101000110010011000001010110010)))
(assert (= y (fp #b0 #b10101101011 #b0111010100001001011101100110111011001001010001000100)))
(assert (= r (fp #b0 #b10101101011 #b0111010100001001011101100110111011001001010001000100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
