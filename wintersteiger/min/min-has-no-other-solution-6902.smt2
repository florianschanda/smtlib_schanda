(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.563977755197000885090119481901638209819793701171875p-461 {+ 2539930008150462 -461 (2.62665e-139)}
; Y = -1.7805150516309797836811412707902491092681884765625p-225 {- 3515127295682344 -225 (-3.30215e-068)}
; 1.563977755197000885090119481901638209819793701171875p-461 m -1.7805150516309797836811412707902491092681884765625p-225 == -1.7805150516309797836811412707902491092681884765625p-225
; [HW: -1.7805150516309797836811412707902491092681884765625p-225] 

; mpf : - 3515127295682344 -225
; mpfd: - 3515127295682344 -225 (-3.30215e-068) class: Neg. norm. non-zero
; hwf : - 3515127295682344 -225 (-3.30215e-068) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000110010 #b1001000001100000110110001001111000111110000110111110)))
(assert (= y (fp #b1 #b01100011110 #b1100011111001111110101011001110011001010011100101000)))
(assert (= r (fp #b1 #b01100011110 #b1100011111001111110101011001110011001010011100101000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
