(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7201735726857207975371011343668214976787567138671875p702 {- 3243373433589491 702 (-3.61934e+211)}
; Y = 1.83003387406084616628731964738108217716217041015625p-73 {+ 3738140245925316 -73 (1.93762e-022)}
; -1.7201735726857207975371011343668214976787567138671875p702 m 1.83003387406084616628731964738108217716217041015625p-73 == -1.7201735726857207975371011343668214976787567138671875p702
; [HW: -1.7201735726857207975371011343668214976787567138671875p702] 

; mpf : - 3243373433589491 702
; mpfd: - 3243373433589491 702 (-3.61934e+211) class: Neg. norm. non-zero
; hwf : - 3243373433589491 702 (-3.61934e+211) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111101 #b1011100001011101010010111001011000100000111011110011)))
(assert (= y (fp #b0 #b01110110110 #b1101010001111101000110011001011110101001110111000100)))
(assert (= r (fp #b1 #b11010111101 #b1011100001011101010010111001011000100000111011110011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
