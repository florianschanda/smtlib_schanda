(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.908583827084448625299728519166819751262664794921875p-846 {+ 4091897785092382 -846 (4.06757e-255)}
; Y = 1.2462072351494846156327866992796771228313446044921875p-210 {+ 1108818812475139 -210 (7.5734e-064)}
; 1.908583827084448625299728519166819751262664794921875p-846 m 1.2462072351494846156327866992796771228313446044921875p-210 == 1.908583827084448625299728519166819751262664794921875p-846
; [HW: 1.908583827084448625299728519166819751262664794921875p-846] 

; mpf : + 4091897785092382 -846
; mpfd: + 4091897785092382 -846 (4.06757e-255) class: Pos. norm. non-zero
; hwf : + 4091897785092382 -846 (4.06757e-255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110001 #b1110100010011000111100110001111100000000100100011110)))
(assert (= y (fp #b0 #b01100101101 #b0011111100000111011011111111011100000001011100000011)))
(assert (= r (fp #b0 #b00010110001 #b1110100010011000111100110001111100000000100100011110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
