(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.491036042116216986386234566452912986278533935546875p-70 {- 2211429736300078 -70 (-1.26296e-021)}
; Y = 1.6483742193076349469293973015737719833850860595703125p791 {+ 2920017892470501 791 (2.14675e+238)}
; -1.491036042116216986386234566452912986278533935546875p-70 m 1.6483742193076349469293973015737719833850860595703125p791 == -1.491036042116216986386234566452912986278533935546875p-70
; [HW: -1.491036042116216986386234566452912986278533935546875p-70] 

; mpf : - 2211429736300078 -70
; mpfd: - 2211429736300078 -70 (-1.26296e-021) class: Neg. norm. non-zero
; hwf : - 2211429736300078 -70 (-1.26296e-021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111001 #b0111110110110100100010011011111000001011111000101110)))
(assert (= y (fp #b0 #b11100010110 #b1010010111111011110110100101001101111110111011100101)))
(assert (= r (fp #b1 #b01110111001 #b0111110110110100100010011011111000001011111000101110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
