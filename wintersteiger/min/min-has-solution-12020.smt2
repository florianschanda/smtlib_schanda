(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.44864236477378138800986562273465096950531005859375p-467 {- 2020505586817820 -467 (-3.80148e-141)}
; Y = -1.46338238835153600092553460854105651378631591796875p-806 {- 2086888751510028 -806 (-3.42911e-243)}
; -1.44864236477378138800986562273465096950531005859375p-467 m -1.46338238835153600092553460854105651378631591796875p-806 == -1.44864236477378138800986562273465096950531005859375p-467
; [HW: -1.44864236477378138800986562273465096950531005859375p-467] 

; mpf : - 2020505586817820 -467
; mpfd: - 2020505586817820 -467 (-3.80148e-141) class: Neg. norm. non-zero
; hwf : - 2020505586817820 -467 (-3.80148e-141) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101100 #b0111001011011010001110011101110001001101101100011100)))
(assert (= y (fp #b1 #b00011011001 #b0111011010100000001110100110101110000011001000001100)))
(assert (= r (fp #b1 #b01000101100 #b0111001011011010001110011101110001001101101100011100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
