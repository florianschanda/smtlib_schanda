(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2078955983835986121022187944618053734302520751953125p586 {+ 936278539412341 586 (3.05919e+176)}
; Y = -1.345197440502813091001144130132161080837249755859375p-469 {- 1554631064417718 -469 (-8.82507e-142)}
; 1.2078955983835986121022187944618053734302520751953125p586 m -1.345197440502813091001144130132161080837249755859375p-469 == -1.345197440502813091001144130132161080837249755859375p-469
; [HW: -1.345197440502813091001144130132161080837249755859375p-469] 

; mpf : - 1554631064417718 -469
; mpfd: - 1554631064417718 -469 (-8.82507e-142) class: Neg. norm. non-zero
; hwf : - 1554631064417718 -469 (-8.82507e-142) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001001 #b0011010100111000101001010101110000001010001101110101)))
(assert (= y (fp #b1 #b01000101010 #b0101100001011110110111000000010110011111010110110110)))
(assert (= r (fp #b1 #b01000101010 #b0101100001011110110111000000010110011111010110110110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
