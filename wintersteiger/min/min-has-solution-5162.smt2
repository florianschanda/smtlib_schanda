(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0419348755839816789148244424723088741302490234375p-755 {- 188857890053848 -755 (-5.49786e-228)}
; Y = 1.5737967274396511552225774721591733396053314208984375p780 {+ 2584150727883623 780 (1.0008e+235)}
; -1.0419348755839816789148244424723088741302490234375p-755 m 1.5737967274396511552225774721591733396053314208984375p780 == -1.0419348755839816789148244424723088741302490234375p-755
; [HW: -1.0419348755839816789148244424723088741302490234375p-755] 

; mpf : - 188857890053848 -755
; mpfd: - 188857890053848 -755 (-5.49786e-228) class: Neg. norm. non-zero
; hwf : - 188857890053848 -755 (-5.49786e-228) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001100 #b0000101010111100001111100111011100110001111011011000)))
(assert (= y (fp #b0 #b11100001011 #b1001001011100100010101111010001011100111101101100111)))
(assert (= r (fp #b1 #b00100001100 #b0000101010111100001111100111011100110001111011011000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
