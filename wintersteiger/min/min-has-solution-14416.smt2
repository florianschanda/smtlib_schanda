(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.71607774714004346350293417344801127910614013671875p-1022 {+ 3224927475188204 -1023 (1.59333e-308)}
; Y = -1.6879572477068804925437461861292831599712371826171875p-847 {- 3098284004419539 -847 (-1.79869e-255)}
; 0.71607774714004346350293417344801127910614013671875p-1022 m -1.6879572477068804925437461861292831599712371826171875p-847 == -1.6879572477068804925437461861292831599712371826171875p-847
; [HW: -1.6879572477068804925437461861292831599712371826171875p-847] 

; mpf : - 3098284004419539 -847
; mpfd: - 3098284004419539 -847 (-1.79869e-255) class: Neg. norm. non-zero
; hwf : - 3098284004419539 -847 (-1.79869e-255) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1011011101010000110111110000100101011100000111101100)))
(assert (= y (fp #b1 #b00010110000 #b1011000000011101111101110101011111110010011111010011)))
(assert (= r (fp #b1 #b00010110000 #b1011000000011101111101110101011111110010011111010011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
