(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.24784699868262993760481549543328583240509033203125p419 {- 1116203650911988 419 (-1.68939e+126)}
; Y = 1.9342341260288069548778366879560053348541259765625p139 {+ 4207416461860136 139 (1.34796e+042)}
; -1.24784699868262993760481549543328583240509033203125p419 m 1.9342341260288069548778366879560053348541259765625p139 == -1.24784699868262993760481549543328583240509033203125p419
; [HW: -1.24784699868262993760481549543328583240509033203125p419] 

; mpf : - 1116203650911988 419
; mpfd: - 1116203650911988 419 (-1.68939e+126) class: Neg. norm. non-zero
; hwf : - 1116203650911988 419 (-1.68939e+126) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100010 #b0011111101110010111001101010000111000000111011110100)))
(assert (= y (fp #b0 #b10010001010 #b1110111100101001111101111011101000011001110100101000)))
(assert (= r (fp #b1 #b10110100010 #b0011111101110010111001101010000111000000111011110100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
