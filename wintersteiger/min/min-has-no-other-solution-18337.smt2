(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7111252194726211950381866699899546802043914794921875p-680 {+ 3202623273430659 -680 (3.41102e-205)}
; Y = -1.12238455847994433867143015959300100803375244140625p1019 {- 551171051966180 1019 (-6.30532e+306)}
; 1.7111252194726211950381866699899546802043914794921875p-680 m -1.12238455847994433867143015959300100803375244140625p1019 == -1.12238455847994433867143015959300100803375244140625p1019
; [HW: -1.12238455847994433867143015959300100803375244140625p1019] 

; mpf : - 551171051966180 1019
; mpfd: - 551171051966180 1019 (-6.30532e+306) class: Neg. norm. non-zero
; hwf : - 551171051966180 1019 (-6.30532e+306) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010111 #b1011011000001100010011010110100011111110111010000011)))
(assert (= y (fp #b1 #b11111111010 #b0001111101010100100110000010110000110100111011100100)))
(assert (= r (fp #b1 #b11111111010 #b0001111101010100100110000010110000110100111011100100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
