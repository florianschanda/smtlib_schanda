(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.86306506009037065041411551646888256072998046875p-380 {- 3886899483019488 -380 (-7.56536e-115)}
; Y = -1.075246402965042147314989051665179431438446044921875p-746 {- 338879672354334 -746 (-2.9049e-225)}
; -1.86306506009037065041411551646888256072998046875p-380 m -1.075246402965042147314989051665179431438446044921875p-746 == -1.86306506009037065041411551646888256072998046875p-380
; [HW: -1.86306506009037065041411551646888256072998046875p-380] 

; mpf : - 3886899483019488 -380
; mpfd: - 3886899483019488 -380 (-7.56536e-115) class: Neg. norm. non-zero
; hwf : - 3886899483019488 -380 (-7.56536e-115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000011 #b1101110011110001110101001110111101101000100011100000)))
(assert (= y (fp #b1 #b00100010101 #b0001001101000011010110010010011111100000011000011110)))
(assert (= r (fp #b1 #b01010000011 #b1101110011110001110101001110111101101000100011100000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
