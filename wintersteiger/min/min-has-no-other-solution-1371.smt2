(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0537057107107035136550621245987713336944580078125p-948 {- 241869018744392 -948 (-4.42877e-286)}
; Y = 1.8993399200293008544093709133449010550975799560546875p-1014 {+ 4050266928723371 -1014 (1.0819e-305)}
; -1.0537057107107035136550621245987713336944580078125p-948 m 1.8993399200293008544093709133449010550975799560546875p-1014 == -1.0537057107107035136550621245987713336944580078125p-948
; [HW: -1.0537057107107035136550621245987713336944580078125p-948] 

; mpf : - 241869018744392 -948
; mpfd: - 241869018744392 -948 (-4.42877e-286) class: Neg. norm. non-zero
; hwf : - 241869018744392 -948 (-4.42877e-286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001001011 #b0000110110111111101010000100111100011100011001001000)))
(assert (= y (fp #b0 #b00000001001 #b1110011000111011001001000001100010000011010110101011)))
(assert (= r (fp #b1 #b00001001011 #b0000110110111111101010000100111100011100011001001000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
