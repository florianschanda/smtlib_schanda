(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6124920805433837767139948482508771121501922607421875p-34 {+ 2758419105702563 -34 (9.38594e-011)}
; Y = 1.96109217381242739719482415239326655864715576171875p-820 {+ 4328374355850348 -820 (2.8048e-247)}
; 1.6124920805433837767139948482508771121501922607421875p-34 m 1.96109217381242739719482415239326655864715576171875p-820 == 1.96109217381242739719482415239326655864715576171875p-820
; [HW: 1.96109217381242739719482415239326655864715576171875p-820] 

; mpf : + 4328374355850348 -820
; mpfd: + 4328374355850348 -820 (2.8048e-247) class: Pos. norm. non-zero
; hwf : + 4328374355850348 -820 (2.8048e-247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011101 #b1001110011001100010001111110111011111110001010100011)))
(assert (= y (fp #b0 #b00011001011 #b1111011000001010001000101111111011110111010001101100)))
(assert (= r (fp #b0 #b00011001011 #b1111011000001010001000101111111011110111010001101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
