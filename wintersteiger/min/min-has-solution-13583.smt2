(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2646901318133998426418429517070762813091278076171875p-813 {- 1192058379003475 -813 (-2.31525e-245)}
; Y = -1.9549253007867857245827281076344661414623260498046875p-791 {- 4300601228790027 -791 (-1.50108e-238)}
; -1.2646901318133998426418429517070762813091278076171875p-813 m -1.9549253007867857245827281076344661414623260498046875p-791 == -1.9549253007867857245827281076344661414623260498046875p-791
; [HW: -1.9549253007867857245827281076344661414623260498046875p-791] 

; mpf : - 4300601228790027 -791
; mpfd: - 4300601228790027 -791 (-1.50108e-238) class: Neg. norm. non-zero
; hwf : - 4300601228790027 -791 (-1.50108e-238) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010010 #b0100001111000010101110111000001110110110011001010011)))
(assert (= y (fp #b1 #b00011101000 #b1111010001110101111111000000100100000000100100001011)))
(assert (= r (fp #b1 #b00011101000 #b1111010001110101111111000000100100000000100100001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
