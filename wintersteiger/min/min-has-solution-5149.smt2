(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0965196261457013093831847072578966617584228515625p-182 {- 434685752343720 -182 (-1.78878e-055)}
; Y = -1.1680719774362617879859271852183155715465545654296875p-993 {- 756928894953371 -993 (-1.39535e-299)}
; -1.0965196261457013093831847072578966617584228515625p-182 m -1.1680719774362617879859271852183155715465545654296875p-993 == -1.0965196261457013093831847072578966617584228515625p-182
; [HW: -1.0965196261457013093831847072578966617584228515625p-182] 

; mpf : - 434685752343720 -182
; mpfd: - 434685752343720 -182 (-1.78878e-055) class: Neg. norm. non-zero
; hwf : - 434685752343720 -182 (-1.78878e-055) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001001 #b0001100010110101100000101001110110110111110010101000)))
(assert (= y (fp #b1 #b00000011110 #b0010101100000110110000111101111001110110011110011011)))
(assert (= r (fp #b1 #b01101001001 #b0001100010110101100000101001110110110111110010101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
