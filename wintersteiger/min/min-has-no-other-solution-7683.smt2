(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2107894490137691700937239147606305778026580810546875p822 {+ 949311284032043 822 (3.3863e+247)}
; Y = -1.57227224068915827359660397632978856563568115234375p766 {- 2577285049922172 766 (-6.10245e+230)}
; 1.2107894490137691700937239147606305778026580810546875p822 m -1.57227224068915827359660397632978856563568115234375p766 == -1.57227224068915827359660397632978856563568115234375p766
; [HW: -1.57227224068915827359660397632978856563568115234375p766] 

; mpf : - 2577285049922172 766
; mpfd: - 2577285049922172 766 (-6.10245e+230) class: Neg. norm. non-zero
; hwf : - 2577285049922172 766 (-6.10245e+230) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100110101 #b0011010111110110010011000001110111011011001000101011)))
(assert (= y (fp #b1 #b11011111101 #b1001001010000000011011101111111000101011001001111100)))
(assert (= r (fp #b1 #b11011111101 #b1001001010000000011011101111111000101011001001111100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
