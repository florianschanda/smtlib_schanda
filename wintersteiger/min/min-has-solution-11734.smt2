(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.883953626419888838228189342771656811237335205078125p-454 {+ 3980973222557410 -454 (4.04997e-137)}
; Y = -1.5004910378193236919486253100330941379070281982421875p-423 {- 2254011251425379 -423 (-6.927e-128)}
; 1.883953626419888838228189342771656811237335205078125p-454 m -1.5004910378193236919486253100330941379070281982421875p-423 == -1.5004910378193236919486253100330941379070281982421875p-423
; [HW: -1.5004910378193236919486253100330941379070281982421875p-423] 

; mpf : - 2254011251425379 -423
; mpfd: - 2254011251425379 -423 (-6.927e-128) class: Neg. norm. non-zero
; hwf : - 2254011251425379 -423 (-6.927e-128) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111001 #b1110001001001010110010001110110010100111011011100010)))
(assert (= y (fp #b1 #b01001011000 #b1000000000100000001011100011111101100000000001100011)))
(assert (= r (fp #b1 #b01001011000 #b1000000000100000001011100011111101100000000001100011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
