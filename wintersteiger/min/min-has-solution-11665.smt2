(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.462246068995749936902939225547015666961669921875p154 {- 2081771224082736 154 (-3.33918e+046)}
; Y = -1.75823133444732615515704310382716357707977294921875p556 {- 3414770355277612 556 (-4.14719e+167)}
; -1.462246068995749936902939225547015666961669921875p154 m -1.75823133444732615515704310382716357707977294921875p556 == -1.75823133444732615515704310382716357707977294921875p556
; [HW: -1.75823133444732615515704310382716357707977294921875p556] 

; mpf : - 3414770355277612 556
; mpfd: - 3414770355277612 556 (-4.14719e+167) class: Neg. norm. non-zero
; hwf : - 3414770355277612 556 (-4.14719e+167) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011001 #b0111011001010101110000100010010100001010100100110000)))
(assert (= y (fp #b1 #b11000101011 #b1100001000011011011100101110000001000000111100101100)))
(assert (= r (fp #b1 #b11000101011 #b1100001000011011011100101110000001000000111100101100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
