(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5815734021046996549131335996207781136035919189453125p-336 {+ 2619173757007317 -336 (1.12982e-101)}
; Y = 1.8556800499527661418852630959008820354938507080078125p-488 {+ 3853640354115645 -488 (2.32202e-147)}
; 1.5815734021046996549131335996207781136035919189453125p-336 m 1.8556800499527661418852630959008820354938507080078125p-488 == 1.8556800499527661418852630959008820354938507080078125p-488
; [HW: 1.8556800499527661418852630959008820354938507080078125p-488] 

; mpf : + 3853640354115645 -488
; mpfd: + 3853640354115645 -488 (2.32202e-147) class: Pos. norm. non-zero
; hwf : + 3853640354115645 -488 (2.32202e-147) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101111 #b1001010011100001111111101001011001000011010111010101)))
(assert (= y (fp #b0 #b01000010111 #b1101101100001101110110010000011001100011000000111101)))
(assert (= r (fp #b0 #b01000010111 #b1101101100001101110110010000011001100011000000111101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
