(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.70501792709618360532886072178371250629425048828125p-778 {+ 3175118473759892 -778 (1.07249e-234)}
; Y = -0.2141748421093321308461554508539848029613494873046875p-1022 {- 964557739115723 -1023 (-4.76555e-309)}
; 1.70501792709618360532886072178371250629425048828125p-778 m -0.2141748421093321308461554508539848029613494873046875p-1022 == -0.2141748421093321308461554508539848029613494873046875p-1022
; [HW: -0.2141748421093321308461554508539848029613494873046875p-1022] 

; mpf : - 964557739115723 -1023
; mpfd: - 964557739115723 -1023 (-4.76555e-309) class: Neg. denorm.
; hwf : - 964557739115723 -1023 (-4.76555e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110101 #b1011010001111100000011100000101111111000110010010100)))
(assert (= y (fp #b1 #b00000000000 #b0011011011010100001010011001011001111100010011001011)))
(assert (= r (fp #b1 #b00000000000 #b0011011011010100001010011001011001111100010011001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
