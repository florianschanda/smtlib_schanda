(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.454021405024558344365459561231546103954315185546875p865 {- 2044730630486830 865 (-3.57698e+260)}
; Y = 1.3675120403648726163936544253374449908733367919921875p-281 {+ 1655127088041411 -281 (3.51967e-085)}
; -1.454021405024558344365459561231546103954315185546875p865 m 1.3675120403648726163936544253374449908733367919921875p-281 == -1.454021405024558344365459561231546103954315185546875p865
; [HW: -1.454021405024558344365459561231546103954315185546875p865] 

; mpf : - 2044730630486830 865
; mpfd: - 2044730630486830 865 (-3.57698e+260) class: Neg. norm. non-zero
; hwf : - 2044730630486830 865 (-3.57698e+260) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101100000 #b0111010000111010101111110010111001000011101100101110)))
(assert (= y (fp #b0 #b01011100110 #b0101111000010101010001001110001001000000110111000011)))
(assert (= r (fp #b1 #b11101100000 #b0111010000111010101111110010111001000011101100101110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
