(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.543385629779550516360586698283441364765167236328125p-299 {- 2447191319793666 -299 (-1.51532e-090)}
; Y = -1.8761259559422696074904024499119259417057037353515625p212 {- 3945720528711225 212 (-1.23487e+064)}
; -1.543385629779550516360586698283441364765167236328125p-299 m -1.8761259559422696074904024499119259417057037353515625p212 == -1.8761259559422696074904024499119259417057037353515625p212
; [HW: -1.8761259559422696074904024499119259417057037353515625p212] 

; mpf : - 3945720528711225 212
; mpfd: - 3945720528711225 212 (-1.23487e+064) class: Neg. norm. non-zero
; hwf : - 3945720528711225 212 (-1.23487e+064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010100 #b1000101100011011010100100001010100000101000000000010)))
(assert (= y (fp #b1 #b10011010011 #b1110000001001001110010100110011111110010111000111001)))
(assert (= r (fp #b1 #b10011010011 #b1110000001001001110010100110011111110010111000111001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
