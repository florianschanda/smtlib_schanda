(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9731980797134685001736897902446798980236053466796875p-477 {- 4382894509155259 -477 (-5.05665e-144)}
; Y = -1.671408408470047124438906394061632454395294189453125p268 {- 3023754658199122 268 (-7.92723e+080)}
; -1.9731980797134685001736897902446798980236053466796875p-477 m -1.671408408470047124438906394061632454395294189453125p268 == -1.671408408470047124438906394061632454395294189453125p268
; [HW: -1.671408408470047124438906394061632454395294189453125p268] 

; mpf : - 3023754658199122 268
; mpfd: - 3023754658199122 268 (-7.92723e+080) class: Neg. norm. non-zero
; hwf : - 3023754658199122 268 (-7.92723e+080) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100010 #b1111100100100011100000100110010011100110001110111011)))
(assert (= y (fp #b1 #b10100001011 #b1010101111100001011010111110010010100011011001010010)))
(assert (= r (fp #b1 #b10100001011 #b1010101111100001011010111110010010100011011001010010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
