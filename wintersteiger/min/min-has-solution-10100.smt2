(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4191517807908979875719523988664150238037109375p718 {+ 1887691803781568 718 (1.95689e+216)}
; Y = -1.0399289764751726838909462458104826509952545166015625p350 {- 179824123574873 350 (-2.38508e+105)}
; 1.4191517807908979875719523988664150238037109375p718 m -1.0399289764751726838909462458104826509952545166015625p350 == -1.0399289764751726838909462458104826509952545166015625p350
; [HW: -1.0399289764751726838909462458104826509952545166015625p350] 

; mpf : - 179824123574873 350
; mpfd: - 179824123574873 350 (-2.38508e+105) class: Neg. norm. non-zero
; hwf : - 179824123574873 350 (-2.38508e+105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001101 #b0110101101001101100001111111011010001110100111000000)))
(assert (= y (fp #b1 #b10101011101 #b0000101000111000110010010001000000011111101001011001)))
(assert (= r (fp #b1 #b10101011101 #b0000101000111000110010010001000000011111101001011001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
