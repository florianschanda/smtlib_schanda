(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.277745700453028376841757562942802906036376953125p750 {- 1250855433064016 750 (-7.5673e+225)}
; Y = 1.7812749002540770870695041594444774091243743896484375p92 {+ 3518549349658183 92 (8.82045e+027)}
; -1.277745700453028376841757562942802906036376953125p750 m 1.7812749002540770870695041594444774091243743896484375p92 == -1.277745700453028376841757562942802906036376953125p750
; [HW: -1.277745700453028376841757562942802906036376953125p750] 

; mpf : - 1250855433064016 750
; mpfd: - 1250855433064016 750 (-7.5673e+225) class: Neg. norm. non-zero
; hwf : - 1250855433064016 750 (-7.5673e+225) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101101 #b0100011100011010010101111001110000001100111001010000)))
(assert (= y (fp #b0 #b10001011011 #b1100100000000001101000011100000111000110111001000111)))
(assert (= r (fp #b1 #b11011101101 #b0100011100011010010101111001110000001100111001010000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
