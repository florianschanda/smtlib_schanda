(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.532548682045829391284996745525859296321868896484375p446 {- 2398386046018246 446 (-2.78479e+134)}
; Y = -1.45162208121638425240007563843391835689544677734375p-250 {- 2033925036678396 -250 (-8.02333e-076)}
; -1.532548682045829391284996745525859296321868896484375p446 m -1.45162208121638425240007563843391835689544677734375p-250 == -1.532548682045829391284996745525859296321868896484375p446
; [HW: -1.532548682045829391284996745525859296321868896484375p446] 

; mpf : - 2398386046018246 446
; mpfd: - 2398386046018246 446 (-2.78479e+134) class: Neg. norm. non-zero
; hwf : - 2398386046018246 446 (-2.78479e+134) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111101 #b1000100001010101000111000100010011101010001011000110)))
(assert (= y (fp #b1 #b01100000101 #b0111001110011101100000010011010011111001110011111100)))
(assert (= r (fp #b1 #b10110111101 #b1000100001010101000111000100010011101010001011000110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
