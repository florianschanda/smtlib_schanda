(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.110990268557890292555612177238799631595611572265625p-928 {- 499855732119066 -928 (-4.89637e-280)}
; Y = -1.079737978262949038565921000554226338863372802734375p-99 {- 359107929192294 -99 (-1.70353e-030)}
; -1.110990268557890292555612177238799631595611572265625p-928 m -1.079737978262949038565921000554226338863372802734375p-99 == -1.079737978262949038565921000554226338863372802734375p-99
; [HW: -1.079737978262949038565921000554226338863372802734375p-99] 

; mpf : - 359107929192294 -99
; mpfd: - 359107929192294 -99 (-1.70353e-030) class: Neg. norm. non-zero
; hwf : - 359107929192294 -99 (-1.70353e-030) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001011111 #b0001110001101001110110111011010110100001011000011010)))
(assert (= y (fp #b1 #b01110011100 #b0001010001101001101101010100100011100011011101100110)))
(assert (= r (fp #b1 #b01110011100 #b0001010001101001101101010100100011100011011101100110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
