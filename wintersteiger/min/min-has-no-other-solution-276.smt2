(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.29391025263895631525201679323799908161163330078125p-114 {- 1323654104265172 -114 (-6.22995e-035)}
; Y = 1.544755101332213609310883839498274028301239013671875p847 {+ 2453358871367934 847 (1.44966e+255)}
; -1.29391025263895631525201679323799908161163330078125p-114 m 1.544755101332213609310883839498274028301239013671875p847 == -1.29391025263895631525201679323799908161163330078125p-114
; [HW: -1.29391025263895631525201679323799908161163330078125p-114] 

; mpf : - 1323654104265172 -114
; mpfd: - 1323654104265172 -114 (-6.22995e-035) class: Neg. norm. non-zero
; hwf : - 1323654104265172 -114 (-6.22995e-035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001101 #b0100101100111101101100111100101100001011000111010100)))
(assert (= y (fp #b0 #b11101001110 #b1000101101110101000100100000000010001101000011111110)))
(assert (= r (fp #b1 #b01110001101 #b0100101100111101101100111100101100001011000111010100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
