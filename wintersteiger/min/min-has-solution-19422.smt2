(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4240022302239936369261386062134988605976104736328125p706 {- 1909536286041037 706 (-4.79388e+212)}
; Y = 1.0000358044712818195165482393349520862102508544921875p-25 {+ 161249003523 -25 (2.98034e-008)}
; -1.4240022302239936369261386062134988605976104736328125p706 m 1.0000358044712818195165482393349520862102508544921875p-25 == -1.4240022302239936369261386062134988605976104736328125p706
; [HW: -1.4240022302239936369261386062134988605976104736328125p706] 

; mpf : - 1909536286041037 706
; mpfd: - 1909536286041037 706 (-4.79388e+212) class: Neg. norm. non-zero
; hwf : - 1909536286041037 706 (-4.79388e+212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000001 #b0110110010001011011010010000000000111110001111001101)))
(assert (= y (fp #b0 #b01111100110 #b0000000000000010010110001011001100001000100000000011)))
(assert (= r (fp #b1 #b11011000001 #b0110110010001011011010010000000000111110001111001101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
