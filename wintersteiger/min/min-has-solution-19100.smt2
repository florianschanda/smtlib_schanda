(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3830084302919523064900886311079375445842742919921875p329 {+ 1724916623942595 329 (1.51249e+099)}
; Y = 1.9439898549462910626317579954047687351703643798828125p-582 {+ 4251352358977645 -582 (1.22811e-175)}
; 1.3830084302919523064900886311079375445842742919921875p329 m 1.9439898549462910626317579954047687351703643798828125p-582 == 1.9439898549462910626317579954047687351703643798828125p-582
; [HW: 1.9439898549462910626317579954047687351703643798828125p-582] 

; mpf : + 4251352358977645 -582
; mpfd: + 4251352358977645 -582 (1.22811e-175) class: Pos. norm. non-zero
; hwf : + 4251352358977645 -582 (1.22811e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001000 #b0110001000001100110101110010101000110010001111000011)))
(assert (= y (fp #b0 #b00110111001 #b1111000110101001010100011011001011000000000001101101)))
(assert (= r (fp #b0 #b00110111001 #b1111000110101001010100011011001011000000000001101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
