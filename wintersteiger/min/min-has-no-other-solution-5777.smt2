(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.778548005964449174598485114984214305877685546875p487 {+ 3506268509551536 487 (7.10679e+146)}
; Y = -1.3292984824180873459908980294130742549896240234375p70 {- 1483028522711768 70 (-1.56936e+021)}
; 1.778548005964449174598485114984214305877685546875p487 m -1.3292984824180873459908980294130742549896240234375p70 == -1.3292984824180873459908980294130742549896240234375p70
; [HW: -1.3292984824180873459908980294130742549896240234375p70] 

; mpf : - 1483028522711768 70
; mpfd: - 1483028522711768 70 (-1.56936e+021) class: Neg. norm. non-zero
; hwf : - 1483028522711768 70 (-1.56936e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100110 #b1100011101001110111011000000111111111011101110110000)))
(assert (= y (fp #b1 #b10001000101 #b0101010001001100111001111100010010011011101011011000)))
(assert (= r (fp #b1 #b10001000101 #b0101010001001100111001111100010010011011101011011000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
