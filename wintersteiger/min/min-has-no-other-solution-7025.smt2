(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1164482165008513536719192416057921946048736572265625p955 {- 524436144441193 955 (-3.40004e+287)}
; Y = -1.5077685311005162294151205060188658535480499267578125p-685 {- 2286786167454749 -685 (-9.39264e-207)}
; -1.1164482165008513536719192416057921946048736572265625p955 m -1.5077685311005162294151205060188658535480499267578125p-685 == -1.1164482165008513536719192416057921946048736572265625p955
; [HW: -1.1164482165008513536719192416057921946048736572265625p955] 

; mpf : - 524436144441193 955
; mpfd: - 524436144441193 955 (-3.40004e+287) class: Neg. norm. non-zero
; hwf : - 524436144441193 955 (-3.40004e+287) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111010 #b0001110111001111100011001110000110001100011101101001)))
(assert (= y (fp #b1 #b00101010010 #b1000000111111101000111100101001100000011110000011101)))
(assert (= r (fp #b1 #b11110111010 #b0001110111001111100011001110000110001100011101101001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
