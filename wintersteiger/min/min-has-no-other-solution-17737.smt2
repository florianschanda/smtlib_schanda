(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.000933181462806853545544072403572499752044677734375p-299 {- 4202675688166 -299 (-9.82735e-091)}
; Y = 1.9128249868816087353451393937575630843639373779296875p210 {+ 4110998270774491 210 (3.14756e+063)}
; -1.000933181462806853545544072403572499752044677734375p-299 m 1.9128249868816087353451393937575630843639373779296875p210 == -1.000933181462806853545544072403572499752044677734375p-299
; [HW: -1.000933181462806853545544072403572499752044677734375p-299] 

; mpf : - 4202675688166 -299
; mpfd: - 4202675688166 -299 (-9.82735e-091) class: Neg. norm. non-zero
; hwf : - 4202675688166 -299 (-9.82735e-091) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010100 #b0000000000111101001010000010111111011101001011100110)))
(assert (= y (fp #b0 #b10011010001 #b1110100110101110111001011111100110100000110011011011)))
(assert (= r (fp #b1 #b01011010100 #b0000000000111101001010000010111111011101001011100110)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
