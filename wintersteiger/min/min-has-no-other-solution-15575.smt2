(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6363977645752074696616773508139885962009429931640625p-933 {+ 2866080735400321 -933 (2.25374e-281)}
; Y = -1.4981515700273921876117810825235210359096527099609375p446 {- 2243475225149391 446 (-2.72229e+134)}
; 1.6363977645752074696616773508139885962009429931640625p-933 m -1.4981515700273921876117810825235210359096527099609375p446 == -1.4981515700273921876117810825235210359096527099609375p446
; [HW: -1.4981515700273921876117810825235210359096527099609375p446] 

; mpf : - 2243475225149391 446
; mpfd: - 2243475225149391 446 (-2.72229e+134) class: Neg. norm. non-zero
; hwf : - 2243475225149391 446 (-2.72229e+134) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001011010 #b1010001011101010111101101100001000011001000110000001)))
(assert (= y (fp #b1 #b10110111101 #b0111111110000110110111000111110110110111111111001111)))
(assert (= r (fp #b1 #b10110111101 #b0111111110000110110111000111110110110111111111001111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
