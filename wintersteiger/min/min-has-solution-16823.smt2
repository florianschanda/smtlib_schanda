(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3807121661047307981107223895378410816192626953125p-383 {+ 1714575169404680 -383 (7.00833e-116)}
; Y = -1.9950947324266488092092686201795004308223724365234375p464 {- 4481508266154999 464 (-9.50345e+139)}
; 1.3807121661047307981107223895378410816192626953125p-383 m -1.9950947324266488092092686201795004308223724365234375p464 == -1.9950947324266488092092686201795004308223724365234375p464
; [HW: -1.9950947324266488092092686201795004308223724365234375p464] 

; mpf : - 4481508266154999 464
; mpfd: - 4481508266154999 464 (-9.50345e+139) class: Neg. norm. non-zero
; hwf : - 4481508266154999 464 (-9.50345e+139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010000000 #b0110000101110110010110100011111010011011111100001000)))
(assert (= y (fp #b1 #b10111001111 #b1111111010111110100001110100010000110001101111110111)))
(assert (= r (fp #b1 #b10111001111 #b1111111010111110100001110100010000110001101111110111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
