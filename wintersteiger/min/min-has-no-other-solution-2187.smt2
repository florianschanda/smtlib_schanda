(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7696432970032895948264695107354782521724700927734375p27 {+ 3466165265592215 27 (2.37518e+008)}
; Y = -1.595104071933011624651044257916510105133056640625p968 {- 2680110476604176 968 (-3.97947e+291)}
; 1.7696432970032895948264695107354782521724700927734375p27 m -1.595104071933011624651044257916510105133056640625p968 == -1.595104071933011624651044257916510105133056640625p968
; [HW: -1.595104071933011624651044257916510105133056640625p968] 

; mpf : - 2680110476604176 968
; mpfd: - 2680110476604176 968 (-3.97947e+291) class: Neg. norm. non-zero
; hwf : - 2680110476604176 968 (-3.97947e+291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011010 #b1100010100000111010101111101011000110110111110010111)))
(assert (= y (fp #b1 #b11111000111 #b1001100001011000101111011000111010101011001100010000)))
(assert (= r (fp #b1 #b11111000111 #b1001100001011000101111011000111010101011001100010000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
