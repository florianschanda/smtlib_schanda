(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2682102524115794750514396582730114459991455078125p-484 {+ 1207911592817736 -484 (2.53906e-146)}
; Y = 1.039160448004068815208711384912021458148956298828125p-747 {+ 176362979038786 -747 (1.40371e-225)}
; 1.2682102524115794750514396582730114459991455078125p-484 m 1.039160448004068815208711384912021458148956298828125p-747 == 1.039160448004068815208711384912021458148956298828125p-747
; [HW: 1.039160448004068815208711384912021458148956298828125p-747] 

; mpf : + 176362979038786 -747
; mpfd: + 176362979038786 -747 (1.40371e-225) class: Pos. norm. non-zero
; hwf : + 176362979038786 -747 (1.40371e-225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011011 #b0100010010101001011011010101011010001111010001001000)))
(assert (= y (fp #b0 #b00100010100 #b0000101000000110011010110100101101111001011001000010)))
(assert (= r (fp #b0 #b00100010100 #b0000101000000110011010110100101101111001011001000010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
