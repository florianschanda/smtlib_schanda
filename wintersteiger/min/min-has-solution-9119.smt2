(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.43049797958344271364694577641785144805908203125p-923 {- 1938790540435744 -923 (-2.01744e-278)}
; Y = -1.79174647931111774568080363678745925426483154296875p-190 {- 3565709149197452 -190 (-1.14177e-057)}
; -1.43049797958344271364694577641785144805908203125p-923 m -1.79174647931111774568080363678745925426483154296875p-190 == -1.79174647931111774568080363678745925426483154296875p-190
; [HW: -1.79174647931111774568080363678745925426483154296875p-190] 

; mpf : - 3565709149197452 -190
; mpfd: - 3565709149197452 -190 (-1.14177e-057) class: Neg. norm. non-zero
; hwf : - 3565709149197452 -190 (-1.14177e-057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100100 #b0110111000110101000111011001011101001110000100100000)))
(assert (= y (fp #b1 #b01101000001 #b1100101010101111111001011011001101011101010010001100)))
(assert (= r (fp #b1 #b01101000001 #b1100101010101111111001011011001101011101010010001100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
