(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8234617696146699916681654940475709736347198486328125p710 {+ 3708542118790477 710 (9.82186e+213)}
; Y = -1.728468024622087373387557818205095827579498291015625p707 {- 3280728324239354 707 (-1.16377e+213)}
; 1.8234617696146699916681654940475709736347198486328125p710 m -1.728468024622087373387557818205095827579498291015625p707 == -1.728468024622087373387557818205095827579498291015625p707
; [HW: -1.728468024622087373387557818205095827579498291015625p707] 

; mpf : - 3280728324239354 707
; mpfd: - 3280728324239354 707 (-1.16377e+213) class: Neg. norm. non-zero
; hwf : - 3280728324239354 707 (-1.16377e+213) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000101 #b1101001011001110011000111111101000000000010101001101)))
(assert (= y (fp #b1 #b11011000010 #b1011101001111100111000010110010111101110111111111010)))
(assert (= r (fp #b1 #b11011000010 #b1011101001111100111000010110010111101110111111111010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
