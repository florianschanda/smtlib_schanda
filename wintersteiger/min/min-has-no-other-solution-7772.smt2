(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.512540002963031593452569723012857139110565185546875p-364 {+ 2308274966356782 -364 (4.02521e-110)}
; Y = -1.936225720402884320492375991307199001312255859375p-350 {- 4216385805541104 -350 (-8.44224e-106)}
; 1.512540002963031593452569723012857139110565185546875p-364 m -1.936225720402884320492375991307199001312255859375p-350 == -1.936225720402884320492375991307199001312255859375p-350
; [HW: -1.936225720402884320492375991307199001312255859375p-350] 

; mpf : - 4216385805541104 -350
; mpfd: - 4216385805541104 -350 (-8.44224e-106) class: Neg. norm. non-zero
; hwf : - 4216385805541104 -350 (-8.44224e-106) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010011 #b1000001100110101110100100101011010011110001100101110)))
(assert (= y (fp #b1 #b01010100001 #b1110111110101100011111010010001011001101111011110000)))
(assert (= r (fp #b1 #b01010100001 #b1110111110101100011111010010001011001101111011110000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
