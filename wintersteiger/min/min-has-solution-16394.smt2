(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0022788231504600187093956265016458928585052490234375p-869 {- 10262907091255 -869 (-2.54637e-262)}
; Y = -1.320594056552493622547217455576173961162567138671875p-60 {- 1443827273627006 -60 (-1.14543e-018)}
; -1.0022788231504600187093956265016458928585052490234375p-869 m -1.320594056552493622547217455576173961162567138671875p-60 == -1.320594056552493622547217455576173961162567138671875p-60
; [HW: -1.320594056552493622547217455576173961162567138671875p-60] 

; mpf : - 1443827273627006 -60
; mpfd: - 1443827273627006 -60 (-1.14543e-018) class: Neg. norm. non-zero
; hwf : - 1443827273627006 -60 (-1.14543e-018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011010 #b0000000010010101010110000100111011100111100100110111)))
(assert (= y (fp #b1 #b01111000011 #b0101001000010010011100111011110000101111010101111110)))
(assert (= r (fp #b1 #b01111000011 #b0101001000010010011100111011110000101111010101111110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
