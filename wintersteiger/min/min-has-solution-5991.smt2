(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8617898281932230286628282556193880736827850341796875p971 {+ 3881156349122683 971 (3.71584e+292)}
; Y = -0.301599415644927315582890514633618295192718505859375p-1022 {- 1358283015913654 -1023 (-6.71081e-309)}
; 1.8617898281932230286628282556193880736827850341796875p971 m -0.301599415644927315582890514633618295192718505859375p-1022 == -0.301599415644927315582890514633618295192718505859375p-1022
; [HW: -0.301599415644927315582890514633618295192718505859375p-1022] 

; mpf : - 1358283015913654 -1023
; mpfd: - 1358283015913654 -1023 (-6.71081e-309) class: Neg. denorm.
; hwf : - 1358283015913654 -1023 (-6.71081e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111001010 #b1101110010011110010000100001100000011101100001111011)))
(assert (= y (fp #b1 #b00000000000 #b0100110100110101100111101000101010110000000010110110)))
(assert (= r (fp #b1 #b00000000000 #b0100110100110101100111101000101010110000000010110110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
