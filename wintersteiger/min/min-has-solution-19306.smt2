(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1845678185463606180150009095086716115474700927734375p354 {+ 831219558829975 354 (4.34689e+106)}
; Y = -1.7456942983558445536829140110057778656482696533203125p-287 {- 3358308564207685 -287 (-7.02036e-087)}
; 1.1845678185463606180150009095086716115474700927734375p354 m -1.7456942983558445536829140110057778656482696533203125p-287 == -1.7456942983558445536829140110057778656482696533203125p-287
; [HW: -1.7456942983558445536829140110057778656482696533203125p-287] 

; mpf : - 3358308564207685 -287
; mpfd: - 3358308564207685 -287 (-7.02036e-087) class: Neg. norm. non-zero
; hwf : - 3358308564207685 -287 (-7.02036e-087) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100001 #b0010111100111111110101100010100010001100111110010111)))
(assert (= y (fp #b1 #b01011100000 #b1011111011100101110100100101000001000000100001000101)))
(assert (= r (fp #b1 #b01011100000 #b1011111011100101110100100101000001000000100001000101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
