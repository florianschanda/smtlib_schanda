(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6302596035457110890121157353860326111316680908203125p250 {+ 2838436915675141 250 (2.94955e+075)}
; Y = -1.79575751348000522966685821302235126495361328125p-641 {- 3583773241185824 -641 (-1.96798e-193)}
; 1.6302596035457110890121157353860326111316680908203125p250 m -1.79575751348000522966685821302235126495361328125p-641 == -1.79575751348000522966685821302235126495361328125p-641
; [HW: -1.79575751348000522966685821302235126495361328125p-641] 

; mpf : - 3583773241185824 -641
; mpfd: - 3583773241185824 -641 (-1.96798e-193) class: Neg. norm. non-zero
; hwf : - 3583773241185824 -641 (-1.96798e-193) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111001 #b1010000101011000101100011000000100111000000000000101)))
(assert (= y (fp #b1 #b00101111110 #b1100101110110110110000111010111111110001011000100000)))
(assert (= r (fp #b1 #b00101111110 #b1100101110110110110000111010111111110001011000100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
