(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9415643682171770389999210237874649465084075927734375p-683 {- 4240428937848215 -683 (-4.83799e-206)}
; Y = 1.7088504747931712035580176234361715614795684814453125p127 {+ 3192378734139925 127 (2.90746e+038)}
; -1.9415643682171770389999210237874649465084075927734375p-683 m 1.7088504747931712035580176234361715614795684814453125p127 == -1.9415643682171770389999210237874649465084075927734375p-683
; [HW: -1.9415643682171770389999210237874649465084075927734375p-683] 

; mpf : - 4240428937848215 -683
; mpfd: - 4240428937848215 -683 (-4.83799e-206) class: Neg. norm. non-zero
; hwf : - 4240428937848215 -683 (-4.83799e-206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101010100 #b1111000100001010010111001100100010010010010110010111)))
(assert (= y (fp #b0 #b10001111110 #b1011010101110111001110011000011011111101101000010101)))
(assert (= r (fp #b1 #b00101010100 #b1111000100001010010111001100100010010010010110010111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
