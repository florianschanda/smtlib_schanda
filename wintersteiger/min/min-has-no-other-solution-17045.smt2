(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6116568293480921791882565230480395257472991943359375p788 {+ 2754657468730687 788 (2.62367e+237)}
; Y = -1.7696466072292709181823511244147084653377532958984375p713 {- 3466180173524711 713 (-7.62559e+214)}
; 1.6116568293480921791882565230480395257472991943359375p788 m -1.7696466072292709181823511244147084653377532958984375p713 == -1.7696466072292709181823511244147084653377532958984375p713
; [HW: -1.7696466072292709181823511244147084653377532958984375p713] 

; mpf : - 3466180173524711 713
; mpfd: - 3466180173524711 713 (-7.62559e+214) class: Neg. norm. non-zero
; hwf : - 3466180173524711 713 (-7.62559e+214) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010011 #b1001110010010101100010101011111001101100110100111111)))
(assert (= y (fp #b1 #b11011001000 #b1100010100000111100011110101111110000110111011100111)))
(assert (= r (fp #b1 #b11011001000 #b1100010100000111100011110101111110000110111011100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
