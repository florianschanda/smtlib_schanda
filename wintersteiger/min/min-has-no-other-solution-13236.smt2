(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3383182713031083199695103758131153881549835205078125p-294 {- 1523650040573309 -294 (-4.20475e-089)}
; Y = 1.5304276676271626467240594138274900615215301513671875p387 {+ 2388833846272691 387 (4.82415e+116)}
; -1.3383182713031083199695103758131153881549835205078125p-294 m 1.5304276676271626467240594138274900615215301513671875p387 == -1.3383182713031083199695103758131153881549835205078125p-294
; [HW: -1.3383182713031083199695103758131153881549835205078125p-294] 

; mpf : - 1523650040573309 -294
; mpfd: - 1523650040573309 -294 (-4.20475e-089) class: Neg. norm. non-zero
; hwf : - 1523650040573309 -294 (-4.20475e-089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011001 #b0101011010011100000001101011011011100010110101111101)))
(assert (= y (fp #b0 #b10110000010 #b1000011111001010000110111000110101011010001010110011)))
(assert (= r (fp #b1 #b01011011001 #b0101011010011100000001101011011011100010110101111101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
