(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.54211504249947406464116284041665494441986083984375p850 {+ 2441469103392572 850 (1.15775e+256)}
; Y = 1.7697249473426832633293770413729362189769744873046875p217 {+ 3466532986030283 217 (3.72748e+065)}
; 1.54211504249947406464116284041665494441986083984375p850 m 1.7697249473426832633293770413729362189769744873046875p217 == 1.7697249473426832633293770413729362189769744873046875p217
; [HW: 1.7697249473426832633293770413729362189769744873046875p217] 

; mpf : + 3466532986030283 217
; mpfd: + 3466532986030283 217 (3.72748e+065) class: Pos. norm. non-zero
; hwf : + 3466532986030283 217 (3.72748e+065) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101010001 #b1000101011001000000011010010101000110100011100111100)))
(assert (= y (fp #b0 #b10011011000 #b1100010100001100101100011011001111000000100011001011)))
(assert (= r (fp #b0 #b10011011000 #b1100010100001100101100011011001111000000100011001011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
