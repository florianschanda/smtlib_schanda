(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.50288584596953089800308589474298059940338134765625p-440 {- 2264796508518276 -440 (-5.29332e-133)}
; Y = -1.4294909774614750208598934477777220308780670166015625p-749 {- 1934255406054489 -749 (-4.82742e-226)}
; -1.50288584596953089800308589474298059940338134765625p-440 m -1.4294909774614750208598934477777220308780670166015625p-749 == -1.50288584596953089800308589474298059940338134765625p-440
; [HW: -1.50288584596953089800308589474298059940338134765625p-440] 

; mpf : - 2264796508518276 -440
; mpfd: - 2264796508518276 -440 (-5.29332e-133) class: Neg. norm. non-zero
; hwf : - 2264796508518276 -440 (-5.29332e-133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001000111 #b1000000010111101001000000111011000001111011110000100)))
(assert (= y (fp #b1 #b00100010010 #b0110110111110011000111101110011000011111110001011001)))
(assert (= r (fp #b1 #b01001000111 #b1000000010111101001000000111011000001111011110000100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
