(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2818923307876388673065548573504202067852020263671875p197 {+ 1269530195893811 197 (2.5749e+059)}
; Y = 1.313628269371172496704502918873913586139678955078125p736 {+ 1412456157072866 736 (4.74842e+221)}
; 1.2818923307876388673065548573504202067852020263671875p197 m 1.313628269371172496704502918873913586139678955078125p736 == 1.2818923307876388673065548573504202067852020263671875p197
; [HW: 1.2818923307876388673065548573504202067852020263671875p197] 

; mpf : + 1269530195893811 197
; mpfd: + 1269530195893811 197 (2.5749e+059) class: Pos. norm. non-zero
; hwf : + 1269530195893811 197 (2.5749e+059) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000100 #b0100100000101010000110001000010110111001111000110011)))
(assert (= y (fp #b0 #b11011011111 #b0101000001001001111100010011100000001100110111100010)))
(assert (= r (fp #b0 #b10011000100 #b0100100000101010000110001000010110111001111000110011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
