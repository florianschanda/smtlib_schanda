(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6111665843158611277630143376882188022136688232421875p419 {+ 2752449601386211 419 (2.18127e+126)}
; Y = -1.0589727697229383007737624211586080491542816162109375p-975 {- 265589743749231 -975 (-3.31619e-294)}
; 1.6111665843158611277630143376882188022136688232421875p419 m -1.0589727697229383007737624211586080491542816162109375p-975 == -1.0589727697229383007737624211586080491542816162109375p-975
; [HW: -1.0589727697229383007737624211586080491542816162109375p-975] 

; mpf : - 265589743749231 -975
; mpfd: - 265589743749231 -975 (-3.31619e-294) class: Neg. norm. non-zero
; hwf : - 265589743749231 -975 (-3.31619e-294) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100010 #b1001110001110101011010011100110000001011011011100011)))
(assert (= y (fp #b1 #b00000110000 #b0000111100011000110101101110010101010000100001101111)))
(assert (= r (fp #b1 #b00000110000 #b0000111100011000110101101110010101010000100001101111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
