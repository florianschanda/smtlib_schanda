(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2222734104034966851060062253964133560657501220703125p406 {- 1001030448267557 406 (-2.01998e+122)}
; Y = -1.76702295100824446905107834027148783206939697265625p983 {- 3454364276345348 983 (-1.44453e+296)}
; -1.2222734104034966851060062253964133560657501220703125p406 m -1.76702295100824446905107834027148783206939697265625p983 == -1.76702295100824446905107834027148783206939697265625p983
; [HW: -1.76702295100824446905107834027148783206939697265625p983] 

; mpf : - 3454364276345348 983
; mpfd: - 3454364276345348 983 (-1.44453e+296) class: Neg. norm. non-zero
; hwf : - 3454364276345348 983 (-1.44453e+296) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010101 #b0011100011100110111010010000010001110100000100100101)))
(assert (= y (fp #b1 #b11111010110 #b1100010001011011100111011011100111011100101000000100)))
(assert (= r (fp #b1 #b11111010110 #b1100010001011011100111011011100111011100101000000100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
