(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1185735612327991628234258314478211104869842529296875p652 {+ 534007846184027 652 (2.09036e+196)}
; Y = -1.2768937728013118881875698207295499742031097412109375p1009 {- 1247018692009199 1009 (-7.0052e+303)}
; 1.1185735612327991628234258314478211104869842529296875p652 m -1.2768937728013118881875698207295499742031097412109375p1009 == -1.2768937728013118881875698207295499742031097412109375p1009
; [HW: -1.2768937728013118881875698207295499742031097412109375p1009] 

; mpf : - 1247018692009199 1009
; mpfd: - 1247018692009199 1009 (-7.0052e+303) class: Neg. norm. non-zero
; hwf : - 1247018692009199 1009 (-7.0052e+303) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010001011 #b0001111001011010110101100011111110101010010001011011)))
(assert (= y (fp #b1 #b11111110000 #b0100011011100010100000101010001010100101110011101111)))
(assert (= r (fp #b1 #b11111110000 #b0100011011100010100000101010001010100101110011101111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
