(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0832968120642849640944405109621584415435791015625p226 {+ 375135491773864 226 (1.16822e+068)}
; Y = 1.7957406645009346135566374869085848331451416015625p780 {+ 3583697360129960 780 (1.14193e+235)}
; 1.0832968120642849640944405109621584415435791015625p226 m 1.7957406645009346135566374869085848331451416015625p780 == 1.0832968120642849640944405109621584415435791015625p226
; [HW: 1.0832968120642849640944405109621584415435791015625p226] 

; mpf : + 375135491773864 226
; mpfd: + 375135491773864 226 (1.16822e+068) class: Pos. norm. non-zero
; hwf : + 375135491773864 226 (1.16822e+068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011100001 #b0001010101010010111100001001101110101101010110101000)))
(assert (= y (fp #b0 #b11100001011 #b1100101110110101101010010000001000100000111110101000)))
(assert (= r (fp #b0 #b10011100001 #b0001010101010010111100001001101110101101010110101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
