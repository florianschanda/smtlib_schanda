(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.917056951528155028796618353226222097873687744140625p1012 {- 4130057345179722 1012 (-8.41377e+304)}
; Y = -1.799238514978460212745403623557649552822113037109375p-804 {- 3599450278237142 -804 (-1.68645e-242)}
; -1.917056951528155028796618353226222097873687744140625p1012 m -1.799238514978460212745403623557649552822113037109375p-804 == -1.917056951528155028796618353226222097873687744140625p1012
; [HW: -1.917056951528155028796618353226222097873687744140625p1012] 

; mpf : - 4130057345179722 1012
; mpfd: - 4130057345179722 1012 (-8.41377e+304) class: Neg. norm. non-zero
; hwf : - 4130057345179722 1012 (-8.41377e+304) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110011 #b1110101011000100001111101000111101100010000001001010)))
(assert (= y (fp #b1 #b00011011011 #b1100110010011010111001010011001110001001001111010110)))
(assert (= r (fp #b1 #b11111110011 #b1110101011000100001111101000111101100010000001001010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
