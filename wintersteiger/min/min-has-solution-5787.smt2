(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3337549946898279440432588671683333814144134521484375p898 {- 1503098869718151 898 (-2.81846e+270)}
; Y = -1.08272382212280859903330565430223941802978515625p-471 {- 372554974486944 -471 (-1.77578e-142)}
; -1.3337549946898279440432588671683333814144134521484375p898 m -1.08272382212280859903330565430223941802978515625p-471 == -1.3337549946898279440432588671683333814144134521484375p898
; [HW: -1.3337549946898279440432588671683333814144134521484375p898] 

; mpf : - 1503098869718151 898
; mpfd: - 1503098869718151 898 (-2.81846e+270) class: Neg. norm. non-zero
; hwf : - 1503098869718151 898 (-2.81846e+270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110000001 #b0101010101110000111101111010001100010001110010000111)))
(assert (= y (fp #b1 #b01000101000 #b0001010100101101011000110110111010011110000110100000)))
(assert (= r (fp #b1 #b11110000001 #b0101010101110000111101111010001100010001110010000111)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
