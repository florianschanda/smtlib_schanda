(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.669294580287900675585888166096992790699005126953125p-952 {- 3014234822385682 -952 (-4.38508e-287)}
; Y = -1.19872631324699074895079320413060486316680908203125p630 {- 894983750287860 630 (-5.34094e+189)}
; -1.669294580287900675585888166096992790699005126953125p-952 m -1.19872631324699074895079320413060486316680908203125p630 == -1.19872631324699074895079320413060486316680908203125p630
; [HW: -1.19872631324699074895079320413060486316680908203125p630] 

; mpf : - 894983750287860 630
; mpfd: - 894983750287860 630 (-5.34094e+189) class: Neg. norm. non-zero
; hwf : - 894983750287860 630 (-5.34094e+189) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001000111 #b1010101101010110111000111011110110111010000000010010)))
(assert (= y (fp #b1 #b11001110101 #b0011001011011111101110100100100001000000000111110100)))
(assert (= r (fp #b1 #b11001110101 #b0011001011011111101110100100100001000000000111110100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
