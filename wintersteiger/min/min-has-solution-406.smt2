(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4393990025634142426724793040193617343902587890625p36 {- 1978877184211560 36 (-9.89147e+010)}
; Y = 1.093245878515566094080213588313199579715728759765625p787 {+ 419942103736538 787 (8.89866e+236)}
; -1.4393990025634142426724793040193617343902587890625p36 m 1.093245878515566094080213588313199579715728759765625p787 == -1.4393990025634142426724793040193617343902587890625p36
; [HW: -1.4393990025634142426724793040193617343902587890625p36] 

; mpf : - 1978877184211560 36
; mpfd: - 1978877184211560 36 (-9.89147e+010) class: Neg. norm. non-zero
; hwf : - 1978877184211560 36 (-9.89147e+010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100011 #b0111000001111100011100111111100111100111101001101000)))
(assert (= y (fp #b0 #b11100010010 #b0001011111011110111101100011111010110110000011011010)))
(assert (= r (fp #b1 #b10000100011 #b0111000001111100011100111111100111100111101001101000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
