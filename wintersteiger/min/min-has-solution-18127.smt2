(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7530615962685944797527781702228821814060211181640625p-278 {+ 3391487924342273 -278 (3.60959e-084)}
; Y = -1.416713952153204392203633688041009008884429931640625p278 {- 1876712799637258 278 (-6.88052e+083)}
; 1.7530615962685944797527781702228821814060211181640625p-278 m -1.416713952153204392203633688041009008884429931640625p278 == -1.416713952153204392203633688041009008884429931640625p278
; [HW: -1.416713952153204392203633688041009008884429931640625p278] 

; mpf : - 1876712799637258 278
; mpfd: - 1876712799637258 278 (-6.88052e+083) class: Neg. norm. non-zero
; hwf : - 1876712799637258 278 (-6.88052e+083) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101001 #b1100000011001000101001010000111111011000111000000001)))
(assert (= y (fp #b1 #b10100010101 #b0110101010101101110000111111110001001000111100001010)))
(assert (= r (fp #b1 #b10100010101 #b0110101010101101110000111111110001001000111100001010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
