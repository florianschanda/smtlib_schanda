(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4923603154232392142830576631240546703338623046875p443 {+ 2217393733072120 443 (3.3897e+133)}
; Y = 1.2717300206195876199899430503137409687042236328125p975 {+ 1223763219607752 975 (4.06107e+293)}
; 1.4923603154232392142830576631240546703338623046875p443 m 1.2717300206195876199899430503137409687042236328125p975 == 1.4923603154232392142830576631240546703338623046875p443
; [HW: 1.4923603154232392142830576631240546703338623046875p443] 

; mpf : + 2217393733072120 443
; mpfd: + 2217393733072120 443 (3.3897e+133) class: Pos. norm. non-zero
; hwf : + 2217393733072120 443 (3.3897e+133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111010 #b0111111000001011010100110101110010010111010011111000)))
(assert (= y (fp #b0 #b11111001110 #b0100010110010000000110010011111111100111000011001000)))
(assert (= r (fp #b0 #b10110111010 #b0111111000001011010100110101110010010111010011111000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
