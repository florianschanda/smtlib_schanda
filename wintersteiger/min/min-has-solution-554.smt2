(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.209500263753276794176372277433983981609344482421875p455 {- 943505309773278 455 (-1.12526e+137)}
; Y = 1.72808825588311254506379555095918476581573486328125p910 {+ 3279017997888020 910 (1.49576e+274)}
; -1.209500263753276794176372277433983981609344482421875p455 m 1.72808825588311254506379555095918476581573486328125p910 == -1.209500263753276794176372277433983981609344482421875p455
; [HW: -1.209500263753276794176372277433983981609344482421875p455] 

; mpf : - 943505309773278 455
; mpfd: - 943505309773278 455 (-1.12526e+137) class: Neg. norm. non-zero
; hwf : - 943505309773278 455 (-1.12526e+137) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000110 #b0011010110100001110011110010110101010010110111011110)))
(assert (= y (fp #b0 #b11110001101 #b1011101001100011111111011110111110011110101000010100)))
(assert (= r (fp #b1 #b10111000110 #b0011010110100001110011110010110101010010110111011110)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
