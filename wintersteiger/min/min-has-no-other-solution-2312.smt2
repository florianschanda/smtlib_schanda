(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1398914609195036629074593292898498475551605224609375p1018 {+ 630015131269391 1018 (3.20184e+306)}
; Y = -1.931439036109364071336358392727561295032501220703125p-978 {- 4194828495940466 -978 (-7.56041e-295)}
; 1.1398914609195036629074593292898498475551605224609375p1018 m -1.931439036109364071336358392727561295032501220703125p-978 == -1.931439036109364071336358392727561295032501220703125p-978
; [HW: -1.931439036109364071336358392727561295032501220703125p-978] 

; mpf : - 4194828495940466 -978
; mpfd: - 4194828495940466 -978 (-7.56041e-295) class: Neg. norm. non-zero
; hwf : - 4194828495940466 -978 (-7.56041e-295) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111001 #b0010001111001111111011010100000110100011100100001111)))
(assert (= y (fp #b1 #b00000101101 #b1110111001110010110010011110011001001110101101110010)))
(assert (= r (fp #b1 #b00000101101 #b1110111001110010110010011110011001001110101101110010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
