(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.115757916626660684045191374025307595729827880859375p-664 {+ 521327310185014 -664 (1.45765e-200)}
; Y = 1.888337328542594395486275971052236855030059814453125p-684 {+ 4000715661803730 -684 (2.35268e-206)}
; 1.115757916626660684045191374025307595729827880859375p-664 m 1.888337328542594395486275971052236855030059814453125p-684 == 1.888337328542594395486275971052236855030059814453125p-684
; [HW: 1.888337328542594395486275971052236855030059814453125p-684] 

; mpf : + 4000715661803730 -684
; mpfd: + 4000715661803730 -684 (2.35268e-206) class: Pos. norm. non-zero
; hwf : + 4000715661803730 -684 (2.35268e-206) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101100111 #b0001110110100010010011111001001000101010001000110110)))
(assert (= y (fp #b0 #b00101010011 #b1110001101101010000100110011110111101000000011010010)))
(assert (= r (fp #b0 #b00101010011 #b1110001101101010000100110011110111101000000011010010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
