(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.645676324782128663315461380989290773868560791015625p-980 {- 2907867655690746 -980 (-1.61046e-295)}
; Y = -1.5011340938955932688969596711103804409503936767578125p260 {- 2256907318530845 260 (-2.78111e+078)}
; -1.645676324782128663315461380989290773868560791015625p-980 m -1.5011340938955932688969596711103804409503936767578125p260 == -1.5011340938955932688969596711103804409503936767578125p260
; [HW: -1.5011340938955932688969596711103804409503936767578125p260] 

; mpf : - 2256907318530845 260
; mpfd: - 2256907318530845 260 (-2.78111e+078) class: Neg. norm. non-zero
; hwf : - 2256907318530845 260 (-2.78111e+078) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101011 #b1010010101001011000010110010101010111101100111111010)))
(assert (= y (fp #b1 #b10100000011 #b1000000001001010010100101111000000110001001100011101)))
(assert (= r (fp #b1 #b10100000011 #b1000000001001010010100101111000000110001001100011101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
