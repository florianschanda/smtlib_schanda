(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.84377052816240816213166908710263669490814208984375p69 {- 3800004636218428 69 (-1.08837e+021)}
; Y = -1.3511496480806073350322549231350421905517578125p-119 {- 1581437424247104 -119 (-2.03298e-036)}
; -1.84377052816240816213166908710263669490814208984375p69 m -1.3511496480806073350322549231350421905517578125p-119 == -1.84377052816240816213166908710263669490814208984375p69
; [HW: -1.84377052816240816213166908710263669490814208984375p69] 

; mpf : - 3800004636218428 69
; mpfd: - 3800004636218428 69 (-1.08837e+021) class: Neg. norm. non-zero
; hwf : - 3800004636218428 69 (-1.08837e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000100 #b1101100000000001010110000110011111001001010000111100)))
(assert (= y (fp #b1 #b01110001000 #b0101100111100100111100010111111010000010000101000000)))
(assert (= r (fp #b1 #b10001000100 #b1101100000000001010110000110011111001001010000111100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
