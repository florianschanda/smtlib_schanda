(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.790226230130097295756286257528699934482574462890625p812 {- 3558862555552298 812 (-4.8895e+244)}
; Y = -1.445350643893533959527530896593816578388214111328125p-511 {- 2005680993888130 -511 (-2.15598e-154)}
; -1.790226230130097295756286257528699934482574462890625p812 m -1.445350643893533959527530896593816578388214111328125p-511 == -1.790226230130097295756286257528699934482574462890625p812
; [HW: -1.790226230130097295756286257528699934482574462890625p812] 

; mpf : - 3558862555552298 812
; mpfd: - 3558862555552298 812 (-4.8895e+244) class: Neg. norm. non-zero
; hwf : - 3558862555552298 812 (-4.8895e+244) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101011 #b1100101001001100010001000010011011011001101000101010)))
(assert (= y (fp #b1 #b01000000000 #b0111001000000010011111111111001011000110011110000010)))
(assert (= r (fp #b1 #b11100101011 #b1100101001001100010001000010011011011001101000101010)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
