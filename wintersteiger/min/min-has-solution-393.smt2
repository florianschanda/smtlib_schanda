(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4990935721584535134098814523895271122455596923828125p-832 {+ 2247717625595821 -832 (5.23447e-251)}
; Y = 1.2768281313924376707547025944222696125507354736328125p203 {+ 1246723069384653 203 (1.64143e+061)}
; 1.4990935721584535134098814523895271122455596923828125p-832 m 1.2768281313924376707547025944222696125507354736328125p203 == 1.4990935721584535134098814523895271122455596923828125p-832
; [HW: 1.4990935721584535134098814523895271122455596923828125p-832] 

; mpf : + 2247717625595821 -832
; mpfd: + 2247717625595821 -832 (5.23447e-251) class: Pos. norm. non-zero
; hwf : + 2247717625595821 -832 (5.23447e-251) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111111 #b0111111111000100100110001010101000010000011110101101)))
(assert (= y (fp #b0 #b10011001010 #b0100011011011110001101010101101011110001011111001101)))
(assert (= r (fp #b0 #b00010111111 #b0111111111000100100110001010101000010000011110101101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
