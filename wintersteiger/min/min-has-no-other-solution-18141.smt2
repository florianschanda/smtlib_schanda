(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.556960102402427548184959960053674876689910888671875p493 {+ 2508325309639806 493 (3.98167e+148)}
; Y = 1.6744253354588132243208065119688399136066436767578125p-923 {+ 3037341689461533 -923 (2.36146e-278)}
; 1.556960102402427548184959960053674876689910888671875p493 m 1.6744253354588132243208065119688399136066436767578125p-923 == 1.6744253354588132243208065119688399136066436767578125p-923
; [HW: 1.6744253354588132243208065119688399136066436767578125p-923] 

; mpf : + 3037341689461533 -923
; mpfd: + 3037341689461533 -923 (2.36146e-278) class: Pos. norm. non-zero
; hwf : + 3037341689461533 -923 (2.36146e-278) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101100 #b1000111010010100111011111111000011111110110001111110)))
(assert (= y (fp #b0 #b00001100100 #b1010110010100111001000111000011101100011101100011101)))
(assert (= r (fp #b0 #b00001100100 #b1010110010100111001000111000011101100011101100011101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
