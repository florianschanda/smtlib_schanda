(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.881659034611146363857869800995104014873504638671875p-237 {+ 3970639299742590 -237 (8.51985e-072)}
; Y = -1.7630273778273408691319446006673388183116912841796875p659 {- 3436369814456699 659 (-4.21722e+198)}
; 1.881659034611146363857869800995104014873504638671875p-237 m -1.7630273778273408691319446006673388183116912841796875p659 == -1.7630273778273408691319446006673388183116912841796875p659
; [HW: -1.7630273778273408691319446006673388183116912841796875p659] 

; mpf : - 3436369814456699 659
; mpfd: - 3436369814456699 659 (-4.21722e+198) class: Neg. norm. non-zero
; hwf : - 3436369814456699 659 (-4.21722e+198) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100010010 #b1110000110110100011010000000111111100000101101111110)))
(assert (= y (fp #b1 #b11010010010 #b1100001101010101110000110010000110111000100101111011)))
(assert (= r (fp #b1 #b11010010010 #b1100001101010101110000110010000110111000100101111011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
