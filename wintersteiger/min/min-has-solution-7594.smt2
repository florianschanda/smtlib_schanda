(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.56065756777790110021442160359583795070648193359375p-892 {+ 2524977213327004 -892 (4.72663e-269)}
; Y = 1.876137312260809597574962026556022465229034423828125p772 {+ 3945771673023170 772 (4.66038e+232)}
; 1.56065756777790110021442160359583795070648193359375p-892 m 1.876137312260809597574962026556022465229034423828125p772 == 1.56065756777790110021442160359583795070648193359375p-892
; [HW: 1.56065756777790110021442160359583795070648193359375p-892] 

; mpf : + 2524977213327004 -892
; mpfd: + 2524977213327004 -892 (4.72663e-269) class: Pos. norm. non-zero
; hwf : + 2524977213327004 -892 (4.72663e-269) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010000011 #b1000111110000111010000010001110111011100011010011100)))
(assert (= y (fp #b0 #b11100000011 #b1110000001001010100010001110111011110111001011000010)))
(assert (= r (fp #b0 #b00010000011 #b1000111110000111010000010001110111011100011010011100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
