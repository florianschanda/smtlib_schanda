(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.253743211702469384505320704192854464054107666015625p-499 {+ 1142757833671034 -499 (7.66021e-151)}
; Y = 1.381291571378949090131982302409596741199493408203125p172 {+ 1717184578781746 172 (8.26884e+051)}
; 1.253743211702469384505320704192854464054107666015625p-499 m 1.381291571378949090131982302409596741199493408203125p172 == 1.253743211702469384505320704192854464054107666015625p-499
; [HW: 1.253743211702469384505320704192854464054107666015625p-499] 

; mpf : + 1142757833671034 -499
; mpfd: + 1142757833671034 -499 (7.66021e-151) class: Pos. norm. non-zero
; hwf : + 1142757833671034 -499 (7.66021e-151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000001100 #b0100000011110101010100001010101111011000000101111010)))
(assert (= y (fp #b0 #b10010101011 #b0110000110011100010100110000110101010000001000110010)))
(assert (= r (fp #b0 #b01000001100 #b0100000011110101010100001010101111011000000101111010)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
