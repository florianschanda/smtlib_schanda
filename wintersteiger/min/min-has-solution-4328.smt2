(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8117022826915365474320651628659106791019439697265625p-47 {+ 3655582097865385 -47 (1.28729e-014)}
; Y = -1.93373823843486203344355089939199388027191162109375p146 {- 4205183182676828 146 (-1.72495e+044)}
; 1.8117022826915365474320651628659106791019439697265625p-47 m -1.93373823843486203344355089939199388027191162109375p146 == -1.93373823843486203344355089939199388027191162109375p146
; [HW: -1.93373823843486203344355089939199388027191162109375p146] 

; mpf : - 4205183182676828 146
; mpfd: - 4205183182676828 146 (-1.72495e+044) class: Neg. norm. non-zero
; hwf : - 4205183182676828 146 (-1.72495e+044) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010000 #b1100111111001011101110001000011000111111101010101001)))
(assert (= y (fp #b1 #b10010010001 #b1110111100001001011110000001110100011010001101011100)))
(assert (= r (fp #b1 #b10010010001 #b1110111100001001011110000001110100011010001101011100)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
