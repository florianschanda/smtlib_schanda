(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.276490362217160612345878689666278660297393798828125p-954 {+ 1245201892252738 -954 (8.38304e-288)}
; Y = -1.1974617706789032478553735927562229335308074951171875p645 {- 889288756849427 645 (-1.74827e+194)}
; 1.276490362217160612345878689666278660297393798828125p-954 m -1.1974617706789032478553735927562229335308074951171875p645 == -1.1974617706789032478553735927562229335308074951171875p645
; [HW: -1.1974617706789032478553735927562229335308074951171875p645] 

; mpf : - 889288756849427 645
; mpfd: - 889288756849427 645 (-1.74827e+194) class: Neg. norm. non-zero
; hwf : - 889288756849427 645 (-1.74827e+194) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001000101 #b0100011011001000000100101000011101100001110001000010)))
(assert (= y (fp #b1 #b11010000100 #b0011001010001100110110101100011101000110101100010011)))
(assert (= r (fp #b1 #b11010000100 #b0011001010001100110110101100011101000110101100010011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
