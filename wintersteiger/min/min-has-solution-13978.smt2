(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7337480039767536599271124941878952085971832275390625p-469 {+ 3304507237293553 -469 (1.13741e-141)}
; Y = 1.0770437688502141337920647856662981212139129638671875p-372 {+ 346974288685043 -372 (1.11963e-112)}
; 1.7337480039767536599271124941878952085971832275390625p-469 m 1.0770437688502141337920647856662981212139129638671875p-372 == 1.7337480039767536599271124941878952085971832275390625p-469
; [HW: 1.7337480039767536599271124941878952085971832275390625p-469] 

; mpf : + 3304507237293553 -469
; mpfd: + 3304507237293553 -469 (1.13741e-141) class: Pos. norm. non-zero
; hwf : + 3304507237293553 -469 (1.13741e-141) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101010 #b1011101111010110111010001100000010010101110111110001)))
(assert (= y (fp #b0 #b01010001011 #b0001001110111001001000111111001110010010011111110011)))
(assert (= r (fp #b0 #b01000101010 #b1011101111010110111010001100000010010101110111110001)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
