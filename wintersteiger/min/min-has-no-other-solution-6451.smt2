(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.207741895257619102466151161934249103069305419921875p-730 {+ 935586322071454 -730 (2.13834e-220)}
; Y = -0.8242098368616355141824669772177003324031829833984375p-1022 {- 3711911114165159 -1023 (-1.83393e-308)}
; 1.207741895257619102466151161934249103069305419921875p-730 m -0.8242098368616355141824669772177003324031829833984375p-1022 == -0.8242098368616355141824669772177003324031829833984375p-1022
; [HW: -0.8242098368616355141824669772177003324031829833984375p-1022] 

; mpf : - 3711911114165159 -1023
; mpfd: - 3711911114165159 -1023 (-1.83393e-308) class: Neg. denorm.
; hwf : - 3711911114165159 -1023 (-1.83393e-308) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100100101 #b0011010100101110100100101010011000100011111110011110)))
(assert (= y (fp #b1 #b00000000000 #b1101001011111111011010100111011001011100101110100111)))
(assert (= r (fp #b1 #b00000000000 #b1101001011111111011010100111011001011100101110100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
