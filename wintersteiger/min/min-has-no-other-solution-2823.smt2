(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1773144686178564910505883744917809963226318359375p340 {+ 798553374794776 340 (2.63688e+102)}
; Y = 1.1724601655188688908992844517342746257781982421875p377 {+ 776691537167032 377 (3.60916e+113)}
; 1.1773144686178564910505883744917809963226318359375p340 m 1.1724601655188688908992844517342746257781982421875p377 == 1.1773144686178564910505883744917809963226318359375p340
; [HW: 1.1773144686178564910505883744917809963226318359375p340] 

; mpf : + 798553374794776 340
; mpfd: + 798553374794776 340 (2.63688e+102) class: Pos. norm. non-zero
; hwf : + 798553374794776 340 (2.63688e+102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010011 #b0010110101100100011110110010001111010010010000011000)))
(assert (= y (fp #b0 #b10101111000 #b0010110000100110010110010111001011000100001010111000)))
(assert (= r (fp #b0 #b10101010011 #b0010110101100100011110110010001111010010010000011000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
