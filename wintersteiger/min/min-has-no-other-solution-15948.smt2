(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5153784741707998495741094302502460777759552001953125p-177 {- 2321058304230389 -177 (-7.91064e-054)}
; Y = -1.047986932992944986153815989382565021514892578125p-508 {- 216113933545680 -508 (-1.2506e-153)}
; -1.5153784741707998495741094302502460777759552001953125p-177 m -1.047986932992944986153815989382565021514892578125p-508 == -1.5153784741707998495741094302502460777759552001953125p-177
; [HW: -1.5153784741707998495741094302502460777759552001953125p-177] 

; mpf : - 2321058304230389 -177
; mpfd: - 2321058304230389 -177 (-7.91064e-054) class: Neg. norm. non-zero
; hwf : - 2321058304230389 -177 (-7.91064e-054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001110 #b1000001111101111110101111111101110100000001111110101)))
(assert (= y (fp #b1 #b01000000011 #b0000110001001000110111110010001111010111000011010000)))
(assert (= r (fp #b1 #b01101001110 #b1000001111101111110101111111101110100000001111110101)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
