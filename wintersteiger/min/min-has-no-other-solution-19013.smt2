(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.499436166223570676692133929464034736156463623046875p-355 {- 2249260532099822 -355 (-2.04305e-107)}
; Y = -1.02892680029777494610243593342602252960205078125p74 {- 130274727042080 74 (-1.94359e+022)}
; -1.499436166223570676692133929464034736156463623046875p-355 m -1.02892680029777494610243593342602252960205078125p74 == -1.02892680029777494610243593342602252960205078125p74
; [HW: -1.02892680029777494610243593342602252960205078125p74] 

; mpf : - 130274727042080 74
; mpfd: - 130274727042080 74 (-1.94359e+022) class: Neg. norm. non-zero
; hwf : - 130274727042080 74 (-1.94359e+022) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011100 #b0111111111011011000011000111000001011110101011101110)))
(assert (= y (fp #b1 #b10001001001 #b0000011101100111101111110010110101000001110000100000)))
(assert (= r (fp #b1 #b10001001001 #b0000011101100111101111110010110101000001110000100000)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
