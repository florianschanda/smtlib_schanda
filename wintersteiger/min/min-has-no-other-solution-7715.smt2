(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1034297941666462161691697474452666938304901123046875p-104 {+ 465806382467915 -104 (5.44033e-032)}
; Y = 1.4504827414251106887377318344078958034515380859375p470 {+ 2028793906418968 470 (4.42192e+141)}
; 1.1034297941666462161691697474452666938304901123046875p-104 m 1.4504827414251106887377318344078958034515380859375p470 == 1.1034297941666462161691697474452666938304901123046875p-104
; [HW: 1.1034297941666462161691697474452666938304901123046875p-104] 

; mpf : + 465806382467915 -104
; mpfd: + 465806382467915 -104 (5.44033e-032) class: Pos. norm. non-zero
; hwf : + 465806382467915 -104 (5.44033e-032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010111 #b0001101001111010010111111111111101100000101101001011)))
(assert (= y (fp #b0 #b10111010101 #b0111001101010010110101100100000111010101010100011000)))
(assert (= r (fp #b0 #b01110010111 #b0001101001111010010111111111111101100000101101001011)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
