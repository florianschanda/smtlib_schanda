(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.533123116057770740638943607336841523647308349609375p995 {+ 2400973066820374 995 (5.13361e+299)}
; Y = 1.8034117624963565962303846390568651258945465087890625p-836 {+ 3618244914203665 -836 (3.93567e-252)}
; 1.533123116057770740638943607336841523647308349609375p995 m 1.8034117624963565962303846390568651258945465087890625p-836 == 1.8034117624963565962303846390568651258945465087890625p-836
; [HW: 1.8034117624963565962303846390568651258945465087890625p-836] 

; mpf : + 3618244914203665 -836
; mpfd: + 3618244914203665 -836 (3.93567e-252) class: Pos. norm. non-zero
; hwf : + 3618244914203665 -836 (3.93567e-252) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100010 #b1000100001111010110000011010110000110101101100010110)))
(assert (= y (fp #b0 #b00010111011 #b1100110110101100011001001010110100100100110000010001)))
(assert (= r (fp #b0 #b00010111011 #b1100110110101100011001001010110100100100110000010001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
