(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7246174639092772817861032308428548276424407958984375p640 {- 3263386940447975 640 (-7.86846e+192)}
; Y = 1.9339400641473896147459754502051509916782379150390625p589 {+ 4206092124880561 589 (3.91842e+177)}
; -1.7246174639092772817861032308428548276424407958984375p640 m 1.9339400641473896147459754502051509916782379150390625p589 == -1.7246174639092772817861032308428548276424407958984375p640
; [HW: -1.7246174639092772817861032308428548276424407958984375p640] 

; mpf : - 3263386940447975 640
; mpfd: - 3263386940447975 640 (-7.86846e+192) class: Neg. norm. non-zero
; hwf : - 3263386940447975 640 (-7.86846e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111111 #b1011100110000000100001111011010110011001110011100111)))
(assert (= y (fp #b0 #b11001001100 #b1110111100010110101100100010111111101111111010110001)))
(assert (= r (fp #b1 #b11001111111 #b1011100110000000100001111011010110011001110011100111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
