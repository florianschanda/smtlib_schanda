(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5004856092006122469939555230666883289813995361328125p596 {+ 2253986803100173 596 (3.89143e+179)}
; Y = 1.8702613612507679174967734070378355681896209716796875p243 {+ 3919308742243899 243 (2.64357e+073)}
; 1.5004856092006122469939555230666883289813995361328125p596 m 1.8702613612507679174967734070378355681896209716796875p243 == 1.8702613612507679174967734070378355681896209716796875p243
; [HW: 1.8702613612507679174967734070378355681896209716796875p243] 

; mpf : + 3919308742243899 243
; mpfd: + 3919308742243899 243 (2.64357e+073) class: Pos. norm. non-zero
; hwf : + 3919308742243899 243 (2.64357e+073) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010011 #b1000000000011111110100110010101110100010101000001101)))
(assert (= y (fp #b0 #b10011110010 #b1101111011001001011100101101010110001011011000111011)))
(assert (= r (fp #b0 #b10011110010 #b1101111011001001011100101101010110001011011000111011)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
