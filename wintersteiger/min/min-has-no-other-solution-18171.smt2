(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.44265786375577231837041836115531623363494873046875p-749 {- 1993553790263116 -749 (-4.87188e-226)}
; Y = -1.4136020340900470326772619955590926110744476318359375p-986 {- 1862697966607615 -986 (-2.16148e-297)}
; -1.44265786375577231837041836115531623363494873046875p-749 m -1.4136020340900470326772619955590926110744476318359375p-986 == -1.44265786375577231837041836115531623363494873046875p-749
; [HW: -1.44265786375577231837041836115531623363494873046875p-749] 

; mpf : - 1993553790263116 -749
; mpfd: - 1993553790263116 -749 (-4.87188e-226) class: Neg. norm. non-zero
; hwf : - 1993553790263116 -749 (-4.87188e-226) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010010 #b0111000101010010000001101001100000100101111101001100)))
(assert (= y (fp #b1 #b00000100101 #b0110100111100001110100101010100111111001110011111111)))
(assert (= r (fp #b1 #b00100010010 #b0111000101010010000001101001100000100101111101001100)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
