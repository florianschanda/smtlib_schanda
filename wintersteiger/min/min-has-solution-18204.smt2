(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9095728312405508830806866171769797801971435546875p685 {- 4096351863841272 685 (-3.06537e+206)}
; Y = -1.9969175061751849309388262554421089589595794677734375p559 {- 4489717309329687 559 (-3.76815e+168)}
; -1.9095728312405508830806866171769797801971435546875p685 m -1.9969175061751849309388262554421089589595794677734375p559 == -1.9095728312405508830806866171769797801971435546875p685
; [HW: -1.9095728312405508830806866171769797801971435546875p685] 

; mpf : - 4096351863841272 685
; mpfd: - 4096351863841272 685 (-3.06537e+206) class: Neg. norm. non-zero
; hwf : - 4096351863841272 685 (-3.06537e+206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010101100 #b1110100011011001110000111101101110000010000111111000)))
(assert (= y (fp #b1 #b11000101110 #b1111111100110101111111000101010111010101000100010111)))
(assert (= r (fp #b1 #b11010101100 #b1110100011011001110000111101101110000010000111111000)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
