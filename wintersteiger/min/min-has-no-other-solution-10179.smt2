(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.544775276203874003755345256649889051914215087890625p-18 {+ 2453449730912426 -18 (5.89285e-006)}
; Y = -1.9064746555808758099459510049200616776943206787109375p-454 {- 4082398921094831 -454 (-4.09839e-137)}
; 1.544775276203874003755345256649889051914215087890625p-18 m -1.9064746555808758099459510049200616776943206787109375p-454 == -1.9064746555808758099459510049200616776943206787109375p-454
; [HW: -1.9064746555808758099459510049200616776943206787109375p-454] 

; mpf : - 4082398921094831 -454
; mpfd: - 4082398921094831 -454 (-4.09839e-137) class: Neg. norm. non-zero
; hwf : - 4082398921094831 -454 (-4.09839e-137) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101101 #b1000101101110110011001000111101011110111000010101010)))
(assert (= y (fp #b1 #b01000111001 #b1110100000001110101110010001100001011111011010101111)))
(assert (= r (fp #b1 #b01000111001 #b1110100000001110101110010001100001011111011010101111)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
