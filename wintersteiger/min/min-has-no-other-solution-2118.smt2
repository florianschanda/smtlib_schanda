(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5919220689040971539185420624562539160251617431640625p413 {- 2665780008948865 413 (-3.36752e+124)}
; Y = 1.2950968173884345180368882211041636765003204345703125p83 {+ 1328997916828773 83 (1.25254e+025)}
; -1.5919220689040971539185420624562539160251617431640625p413 m 1.2950968173884345180368882211041636765003204345703125p83 == -1.5919220689040971539185420624562539160251617431640625p413
; [HW: -1.5919220689040971539185420624562539160251617431640625p413] 

; mpf : - 2665780008948865 413
; mpfd: - 2665780008948865 413 (-3.36752e+124) class: Neg. norm. non-zero
; hwf : - 2665780008948865 413 (-3.36752e+124) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011100 #b1001011110001000001101000110011110111001010010000001)))
(assert (= y (fp #b0 #b10001010010 #b0100101110001011011101110000101111010110010001100101)))
(assert (= r (fp #b1 #b10110011100 #b1001011110001000001101000110011110111001010010000001)))
(assert  (not (= (fp.min x y) r)))
(check-sat)
(exit)
