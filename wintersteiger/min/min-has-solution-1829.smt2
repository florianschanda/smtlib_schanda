(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2555436849795407194818608331843279302120208740234375p480 {+ 1150866444450743 480 (3.91949e+144)}
; Y = -1.7340421665713841026246200271998532116413116455078125p875 {- 3305832027845117 875 (-4.36823e+263)}
; 1.2555436849795407194818608331843279302120208740234375p480 m -1.7340421665713841026246200271998532116413116455078125p875 == -1.7340421665713841026246200271998532116413116455078125p875
; [HW: -1.7340421665713841026246200271998532116413116455078125p875] 

; mpf : - 3305832027845117 875
; mpfd: - 3305832027845117 875 (-4.36823e+263) class: Neg. norm. non-zero
; hwf : - 3305832027845117 875 (-4.36823e+263) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011111 #b0100000101101011010011111001100110101111101110110111)))
(assert (= y (fp #b1 #b11101101010 #b1011101111101010001011111111101101001111000111111101)))
(assert (= r (fp #b1 #b11101101010 #b1011101111101010001011111111101101001111000111111101)))
(assert (= (fp.min x y) r))
(check-sat)
(exit)
