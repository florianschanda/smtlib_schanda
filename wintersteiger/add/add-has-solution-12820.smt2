(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1172514474563641773130484580178745090961456298828125p778 {- 528053575073133 778 (-1.77618e+234)}
; Y = -1.705232588747335409351535417954437434673309326171875p403 {- 3176085223892030 403 (-3.52267e+121)}
; -1.1172514474563641773130484580178745090961456298828125p778 + -1.705232588747335409351535417954437434673309326171875p403 == -1.117251447456364399357653383049182593822479248046875p778
; [HW: -1.117251447456364399357653383049182593822479248046875p778] 

; mpf : - 528053575073134 778
; mpfd: - 528053575073134 778 (-1.77618e+234) class: Neg. norm. non-zero
; hwf : - 528053575073134 778 (-1.77618e+234) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001001 #b0001111000000100001100001101110000111011110101101101)))
(assert (= y (fp #b1 #b10110010010 #b1011010010001010000111110111100010111110010000111110)))
(assert (= r (fp #b1 #b11100001001 #b0001111000000100001100001101110000111011110101101110)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
