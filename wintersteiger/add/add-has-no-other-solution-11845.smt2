(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9149824248623408262659495449042879045009613037109375p627 {+ 4120714507660591 627 (1.06653e+189)}
; Y = 1.3746692802101703190231773987761698663234710693359375p-36 {+ 1687360430741695 -36 (2.00041e-011)}
; 1.9149824248623408262659495449042879045009613037109375p627 + 1.3746692802101703190231773987761698663234710693359375p-36 == 1.914982424862341048310554469935595989227294921875p627
; [HW: 1.914982424862341048310554469935595989227294921875p627] 

; mpf : + 4120714507660592 627
; mpfd: + 4120714507660592 627 (1.06653e+189) class: Pos. norm. non-zero
; hwf : + 4120714507660592 627 (1.06653e+189) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001110010 #b1110101000111100010010011100011100110010110100101111)))
(assert (= y (fp #b0 #b01111011011 #b0101111111101010010100110111000101010001100010111111)))
(assert (= r (fp #b0 #b11001110010 #b1110101000111100010010011100011100110010110100110000)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
