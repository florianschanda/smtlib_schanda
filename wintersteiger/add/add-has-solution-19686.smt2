(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9047230581964862405897065400495193898677825927734375p954 {- 4074510427767191 954 (-2.90033e+287)}
; Y = 1.1178964170504037678455233617569319903850555419921875p799 {+ 530958259896515 799 (3.72707e+240)}
; -1.9047230581964862405897065400495193898677825927734375p954 + 1.1178964170504037678455233617569319903850555419921875p799 == -1.904723058196486018545101615018211305141448974609375p954
; [HW: -1.904723058196486018545101615018211305141448974609375p954] 

; mpf : - 4074510427767190 954
; mpfd: - 4074510427767190 954 (-2.90033e+287) class: Neg. norm. non-zero
; hwf : - 4074510427767190 954 (-2.90033e+287) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111001 #b1110011110011011111011100010101011100100000110010111)))
(assert (= y (fp #b0 #b11100011110 #b0001111000101110011101011010011110001100000011000011)))
(assert (= r (fp #b1 #b11110111001 #b1110011110011011111011100010101011100100000110010110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
