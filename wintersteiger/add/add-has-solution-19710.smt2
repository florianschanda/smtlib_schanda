(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.798679056241030860263663271325640380382537841796875p81 {+ 3596930700075726 81 (4.34894e+024)}
; Y = 1.011541210989635342087922253995202481746673583984375p-954 {+ 51976993512326 -954 (6.64305e-288)}
; 1.798679056241030860263663271325640380382537841796875p81 + 1.011541210989635342087922253995202481746673583984375p-954 == 1.798679056241030860263663271325640380382537841796875p81
; [HW: 1.798679056241030860263663271325640380382537841796875p81] 

; mpf : + 3596930700075726 81
; mpfd: + 3596930700075726 81 (4.34894e+024) class: Pos. norm. non-zero
; hwf : + 3596930700075726 81 (4.34894e+024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001010000 #b1100110001110110001110110000101010001110001011001110)))
(assert (= y (fp #b0 #b00001000101 #b0000001011110100010111010110001111000001101110000110)))
(assert (= r (fp #b0 #b10001010000 #b1100110001110110001110110000101010001110001011001110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
