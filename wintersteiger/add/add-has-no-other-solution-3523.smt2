(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.564431159249103142627745910431258380413055419921875p-892 {+ 2541971958470558 -892 (4.73806e-269)}
; Y = 1.60950618540038359327581929392181336879730224609375p195 {+ 2744971829449180 195 (8.08243e+058)}
; 1.564431159249103142627745910431258380413055419921875p-892 + 1.60950618540038359327581929392181336879730224609375p195 == 1.60950618540038359327581929392181336879730224609375p195
; [HW: 1.60950618540038359327581929392181336879730224609375p195] 

; mpf : + 2744971829449180 195
; mpfd: + 2744971829449180 195 (8.08243e+058) class: Pos. norm. non-zero
; hwf : + 2744971829449180 195 (8.08243e+058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010000011 #b1001000001111110100011110111100111010001011110011110)))
(assert (= y (fp #b0 #b10011000010 #b1001110000001000100110001110110100000001000111011100)))
(assert (= r (fp #b0 #b10011000010 #b1001110000001000100110001110110100000001000111011100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
