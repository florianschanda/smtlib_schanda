(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3893332664214790295176271683885715901851654052734375p-577 {+ 1753401153578711 -577 (2.80866e-174)}
; Y = 1.7098864107806781564846687615499831736087799072265625p260 {+ 3197044175067241 260 (3.16786e+078)}
; 1.3893332664214790295176271683885715901851654052734375p-577 + 1.7098864107806781564846687615499831736087799072265625p260 == 1.7098864107806781564846687615499831736087799072265625p260
; [HW: 1.7098864107806781564846687615499831736087799072265625p260] 

; mpf : + 3197044175067241 260
; mpfd: + 3197044175067241 260 (3.16786e+078) class: Pos. norm. non-zero
; hwf : + 3197044175067241 260 (3.16786e+078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111110 #b0110001110101011010110000100111010000110011011010111)))
(assert (= y (fp #b0 #b10100000011 #b1011010110111011000111011010011000101101100001101001)))
(assert (= r (fp #b0 #b10100000011 #b1011010110111011000111011010011000101101100001101001)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
