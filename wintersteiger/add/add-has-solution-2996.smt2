(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.982706899757602503342468480695970356464385986328125p-44 {- 4425718427562754 -44 (-1.12704e-013)}
; Y = 1.892952053818926838602010320755653083324432373046875p954 {+ 4021498536838638 954 (2.88241e+287)}
; -1.982706899757602503342468480695970356464385986328125p-44 + 1.892952053818926838602010320755653083324432373046875p954 == 1.8929520538189266165574053957243449985980987548828125p954
; [HW: 1.8929520538189266165574053957243449985980987548828125p954] 

; mpf : + 4021498536838637 954
; mpfd: + 4021498536838637 954 (2.88241e+287) class: Pos. norm. non-zero
; hwf : + 4021498536838637 954 (2.88241e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111010011 #b1111101110010010101011011110110000000011001100000010)))
(assert (= y (fp #b0 #b11110111001 #b1110010010011000100000010111110000001100010111101110)))
(assert (= r (fp #b0 #b11110111001 #b1110010010011000100000010111110000001100010111101101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
