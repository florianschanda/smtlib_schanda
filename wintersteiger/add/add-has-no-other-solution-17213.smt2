(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6876080610486383637436347271432168781757354736328125p-400 {+ 3096711407515597 -400 (6.53542e-121)}
; Y = 0.3313227657014319316175487983855418860912322998046875p-1022 {+ 1492145084152331 -1023 (7.37218e-309)}
; 1.6876080610486383637436347271432168781757354736328125p-400 + 0.3313227657014319316175487983855418860912322998046875p-1022 == 1.6876080610486383637436347271432168781757354736328125p-400
; [HW: 1.6876080610486383637436347271432168781757354736328125p-400] 

; mpf : + 3096711407515597 -400
; mpfd: + 3096711407515597 -400 (6.53542e-121) class: Pos. norm. non-zero
; hwf : + 3096711407515597 -400 (6.53542e-121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001101111 #b1011000000000111000101001111011010101011011111001101)))
(assert (= y (fp #b0 #b00000000000 #b0101010011010001100100011001101100011011101000001011)))
(assert (= r (fp #b0 #b01001101111 #b1011000000000111000101001111011010101011011111001101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
