(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.772997777052781831486072405823506414890289306640625p-136 {+ 3481272500693130 -136 (2.0353e-041)}
; Y = 1.54569158852125898562235306599177420139312744140625p-775 {+ 2457576434723556 -775 (7.77815e-234)}
; 1.772997777052781831486072405823506414890289306640625p-136 + 1.54569158852125898562235306599177420139312744140625p-775 == 1.772997777052781831486072405823506414890289306640625p-136
; [HW: 1.772997777052781831486072405823506414890289306640625p-136] 

; mpf : + 3481272500693130 -136
; mpfd: + 3481272500693130 -136 (2.0353e-041) class: Pos. norm. non-zero
; hwf : + 3481272500693130 -136 (2.0353e-041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110111 #b1100010111100011001011101010110001010010100010001010)))
(assert (= y (fp #b0 #b00011111000 #b1000101110110010011100011010011001100110101011100100)))
(assert (= r (fp #b0 #b01101110111 #b1100010111100011001011101010110001010010100010001010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
