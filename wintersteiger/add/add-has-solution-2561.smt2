(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.44384878332986676952032212284393608570098876953125p846 {+ 1998917215213236 846 (6.77482e+254)}
; Y = 1.6662522035090565619697144938982091844081878662109375p833 {+ 3000533175458159 833 (9.54393e+250)}
; 1.44384878332986676952032212284393608570098876953125p846 + 1.6662522035090565619697144938982091844081878662109375p833 == 1.444052183257052757170413315179757773876190185546875p846
; [HW: 1.444052183257052757170413315179757773876190185546875p846] 

; mpf : + 1999833247049518 846
; mpfd: + 1999833247049518 846 (6.77578e+254) class: Pos. norm. non-zero
; hwf : + 1999833247049518 846 (6.77578e+254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001101 #b0111000110100000000100101110100011000101011010110100)))
(assert (= y (fp #b0 #b11101000000 #b1010101010001111100000010010000011110101100101101111)))
(assert (= r (fp #b0 #b11101001101 #b0111000110101101011001110110010011001110011100101110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
