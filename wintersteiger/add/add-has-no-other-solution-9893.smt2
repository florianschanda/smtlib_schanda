(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8491913275039795205856307802605442702770233154296875p-699 {+ 3824417746113179 -699 (7.03096e-211)}
; Y = -1.64723590815883991211876491433940827846527099609375p25 {- 2914891394804956 25 (-5.52721e+007)}
; 1.8491913275039795205856307802605442702770233154296875p-699 + -1.64723590815883991211876491433940827846527099609375p25 == -1.6472359081588396900741599893081001937389373779296875p25
; [HW: -1.6472359081588396900741599893081001937389373779296875p25] 

; mpf : - 2914891394804955 25
; mpfd: - 2914891394804955 25 (-5.52721e+007) class: Neg. norm. non-zero
; hwf : - 2914891394804955 25 (-5.52721e+007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000100 #b1101100101100100100110100101001110101101001010011011)))
(assert (= y (fp #b1 #b10000011000 #b1010010110110001010000001010001001010110110011011100)))
(assert (= r (fp #b1 #b10000011000 #b1010010110110001010000001010001001010110110011011011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
