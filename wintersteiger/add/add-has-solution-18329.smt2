(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.522793577809894660646250486024655401706695556640625p-153 {+ 2354452962216330 -153 (1.33368e-046)}
; Y = 1.0652273685363080613086594894411973655223846435546875p-498 {+ 293757952634475 -498 (1.30168e-150)}
; 1.522793577809894660646250486024655401706695556640625p-153 + 1.0652273685363080613086594894411973655223846435546875p-498 == 1.522793577809894660646250486024655401706695556640625p-153
; [HW: 1.522793577809894660646250486024655401706695556640625p-153] 

; mpf : + 2354452962216330 -153
; mpfd: + 2354452962216330 -153 (1.33368e-046) class: Pos. norm. non-zero
; hwf : + 2354452962216330 -153 (1.33368e-046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100110 #b1000010111010101110011001100011101000000100110001010)))
(assert (= y (fp #b0 #b01000001101 #b0001000010110010101111011010011010101010111001101011)))
(assert (= r (fp #b0 #b01101100110 #b1000010111010101110011001100011101000000100110001010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
