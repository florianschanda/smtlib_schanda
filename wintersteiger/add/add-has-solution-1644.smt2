(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6856660418729132455695207681856118142604827880859375p-37 {+ 3087965330679455 -37 (1.22648e-011)}
; Y = 1.43143501420568330928517752909101545810699462890625p-953 {+ 1943010569211300 -953 (1.88012e-287)}
; 1.6856660418729132455695207681856118142604827880859375p-37 + 1.43143501420568330928517752909101545810699462890625p-953 == 1.68566604187291346761412569321691989898681640625p-37
; [HW: 1.68566604187291346761412569321691989898681640625p-37] 

; mpf : + 3087965330679456 -37
; mpfd: + 3087965330679456 -37 (1.22648e-011) class: Pos. norm. non-zero
; hwf : + 3087965330679456 -37 (1.22648e-011) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011010 #b1010111110000111110011110100100111010010011010011111)))
(assert (= y (fp #b0 #b00001000110 #b0110111001110010100001100110110001011100110110100100)))
(assert (= r (fp #b0 #b01111011010 #b1010111110000111110011110100100111010010011010100000)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
