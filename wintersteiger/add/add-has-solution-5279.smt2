(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3725409845279958886976601206697523593902587890625p472 {+ 1677775439100520 472 (1.67372e+142)}
; Y = -1.5765959733403265286000305422930978238582611083984375p-629 {- 2596757410678823 -629 (-7.07706e-190)}
; 1.3725409845279958886976601206697523593902587890625p472 + -1.5765959733403265286000305422930978238582611083984375p-629 == 1.3725409845279956666530551956384442746639251708984375p472
; [HW: 1.3725409845279956666530551956384442746639251708984375p472] 

; mpf : + 1677775439100519 472
; mpfd: + 1677775439100519 472 (1.67372e+142) class: Pos. norm. non-zero
; hwf : + 1677775439100519 472 (1.67372e+142) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111010111 #b0101111101011110110110001001000011110111101001101000)))
(assert (= y (fp #b1 #b00110001010 #b1001001110011011110010110011000010000000100000100111)))
(assert (= r (fp #b0 #b10111010111 #b0101111101011110110110001001000011110111101001100111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
