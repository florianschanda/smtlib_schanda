(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.498850706462678150643341723480261862277984619140625p381 {- 2246623855738826 381 (-7.38222e+114)}
; Y = 1.775742104053465109103626673459075391292572021484375p913 {+ 3493631850750790 913 (1.22961e+275)}
; -1.498850706462678150643341723480261862277984619140625p381 + 1.775742104053465109103626673459075391292572021484375p913 == 1.775742104053465109103626673459075391292572021484375p913
; [HW: 1.775742104053465109103626673459075391292572021484375p913] 

; mpf : + 3493631850750790 913
; mpfd: + 3493631850750790 913 (1.22961e+275) class: Pos. norm. non-zero
; hwf : + 3493631850750790 913 (1.22961e+275) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111100 #b0111111110110100101011100000110111010111111111001010)))
(assert (= y (fp #b0 #b11110010000 #b1100011010010111000010001101011100001010001101000110)))
(assert (= r (fp #b0 #b11110010000 #b1100011010010111000010001101011100001010001101000110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
