(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5811743138374148021085829896037466824054718017578125p361 {- 2617376423235485 361 (-7.42691e+108)}
; Y = 1.9195452354628645963430244592018425464630126953125p-333 {+ 4141263579780872 -333 (1.09701e-100)}
; -1.5811743138374148021085829896037466824054718017578125p361 + 1.9195452354628645963430244592018425464630126953125p-333 == -1.58117431383741458006397806457243859767913818359375p361
; [HW: -1.58117431383741458006397806457243859767913818359375p361] 

; mpf : - 2617376423235484 361
; mpfd: - 2617376423235484 361 (-7.42691e+108) class: Neg. norm. non-zero
; hwf : - 2617376423235484 361 (-7.42691e+108) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101000 #b1001010011000111110101101111111100110100111110011101)))
(assert (= y (fp #b0 #b01010110010 #b1110101101100111010100010000100110000001011100001000)))
(assert (= r (fp #b1 #b10101101000 #b1001010011000111110101101111111100110100111110011100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
