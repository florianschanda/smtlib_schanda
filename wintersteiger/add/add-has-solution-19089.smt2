(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1543580695749013909079394579748623073101043701171875p-890 {+ 695166944619155 -890 (1.39844e-268)}
; Y = -1.8203279800074998462378061958588659763336181640625p4 {- 3694428785083368 4 (-29.1252)}
; 1.1543580695749013909079394579748623073101043701171875p-890 + -1.8203279800074998462378061958588659763336181640625p4 == -1.8203279800074996241932012708275578916072845458984375p4
; [HW: -1.8203279800074996241932012708275578916072845458984375p4] 

; mpf : - 3694428785083367 4
; mpfd: - 3694428785083367 4 (-29.1252) class: Neg. norm. non-zero
; hwf : - 3694428785083367 4 (-29.1252) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010000101 #b0010011110000100000000101010110010110010101010010011)))
(assert (= y (fp #b1 #b10000000011 #b1101001000000001000000111011011000100000001111101000)))
(assert (= r (fp #b1 #b10000000011 #b1101001000000001000000111011011000100000001111100111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
