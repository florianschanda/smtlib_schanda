(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.690750444454881318279149127192795276641845703125p6 {+ 3110863444253008 6 (108.208)}
; Y = 0.3658921455462376126632761952350847423076629638671875p-1022 {+ 1647831730339827 -1023 (8.14137e-309)}
; 1.690750444454881318279149127192795276641845703125p6 + 0.3658921455462376126632761952350847423076629638671875p-1022 == 1.690750444454881318279149127192795276641845703125p6
; [HW: 1.690750444454881318279149127192795276641845703125p6] 

; mpf : + 3110863444253008 6
; mpfd: + 3110863444253008 6 (108.208) class: Pos. norm. non-zero
; hwf : + 3110863444253008 6 (108.208) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000101 #b1011000011010101000001010110100010100001100101010000)))
(assert (= y (fp #b0 #b00000000000 #b0101110110101011000110111000111011111011111111110011)))
(assert (= r (fp #b0 #b10000000101 #b1011000011010101000001010110100010100001100101010000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
