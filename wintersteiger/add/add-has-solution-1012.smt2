(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9656146839711627904989654780365526676177978515625p-343 {+ 4348741930916008 -343 (1.09701e-103)}
; Y = -1.768755799274249085328847286291420459747314453125p-444 {- 3462168331150416 -444 (-3.89359e-134)}
; 1.9656146839711627904989654780365526676177978515625p-343 + -1.768755799274249085328847286291420459747314453125p-444 == 1.9656146839711625684543605530052445828914642333984375p-343
; [HW: 1.9656146839711625684543605530052445828914642333984375p-343] 

; mpf : + 4348741930916007 -343
; mpfd: + 4348741930916007 -343 (1.09701e-103) class: Pos. norm. non-zero
; hwf : + 4348741930916007 -343 (1.09701e-103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101000 #b1111011100110010100001100010000000110001100010101000)))
(assert (= y (fp #b1 #b01001000011 #b1100010011001101001011100001100001111110010001010000)))
(assert (= r (fp #b0 #b01010101000 #b1111011100110010100001100010000000110001100010100111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
