(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4611730565251026536799372479435987770557403564453125p732 {+ 2076938805519765 732 (3.3011e+220)}
; Y = -1.6698452209279384117479594351607374846935272216796875p255 {- 3016714687366971 255 (-9.66774e+076)}
; 1.4611730565251026536799372479435987770557403564453125p732 + -1.6698452209279384117479594351607374846935272216796875p255 == 1.4611730565251026536799372479435987770557403564453125p732
; [HW: 1.4611730565251026536799372479435987770557403564453125p732] 

; mpf : + 2076938805519765 732
; mpfd: + 2076938805519765 732 (3.3011e+220) class: Pos. norm. non-zero
; hwf : + 2076938805519765 732 (3.3011e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011011 #b0111011000001111011011111111101110010010010110010101)))
(assert (= y (fp #b1 #b10011111110 #b1010101101111010111110011111010101000100011100111011)))
(assert (= r (fp #b0 #b11011011011 #b0111011000001111011011111111101110010010010110010101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
