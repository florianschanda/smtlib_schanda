(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7974422550067157278164131639641709625720977783203125p568 {+ 3591360642497733 568 (1.73657e+171)}
; Y = -1.590296790093906675878088208264671266078948974609375p456 {- 2658460403904918 456 (-2.95908e+137)}
; 1.7974422550067157278164131639641709625720977783203125p568 + -1.590296790093906675878088208264671266078948974609375p456 == 1.79744225500671550577180823893286287784576416015625p568
; [HW: 1.79744225500671550577180823893286287784576416015625p568] 

; mpf : + 3591360642497732 568
; mpfd: + 3591360642497732 568 (1.73657e+171) class: Pos. norm. non-zero
; hwf : + 3591360642497732 568 (1.73657e+171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110111 #b1100110000100101001011001111010110110011110011000101)))
(assert (= y (fp #b1 #b10111000111 #b1001011100011101101100001100000001100011000110010110)))
(assert (= r (fp #b0 #b11000110111 #b1100110000100101001011001111010110110011110011000100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
