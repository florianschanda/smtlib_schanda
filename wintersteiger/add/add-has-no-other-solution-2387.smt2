(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2461829168766136444190806287224404513835906982421875p181 {- 1108709292710499 181 (-3.81954e+054)}
; Y = 1.698496302100504617982323907199315726757049560546875p545 {+ 3145747685859502 545 (1.9562e+164)}
; -1.2461829168766136444190806287224404513835906982421875p181 + 1.698496302100504617982323907199315726757049560546875p545 == 1.6984963021005043959377189821680076420307159423828125p545
; [HW: 1.6984963021005043959377189821680076420307159423828125p545] 

; mpf : + 3145747685859501 545
; mpfd: + 3145747685859501 545 (1.9562e+164) class: Pos. norm. non-zero
; hwf : + 3145747685859501 545 (1.9562e+164) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110100 #b0011111100000101110101111111100011010001101001100011)))
(assert (= y (fp #b0 #b11000100000 #b1011001011010000101001110101010111100110000010101110)))
(assert (= r (fp #b0 #b11000100000 #b1011001011010000101001110101010111100110000010101101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
