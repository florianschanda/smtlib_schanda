(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2727837732878752863285853891284205019474029541015625p159 {- 1228508899731993 159 (-9.30088e+047)}
; Y = -1.244635688856779776045868857181631028652191162109375p-52 {- 1101741197176918 -52 (-2.76365e-016)}
; -1.2727837732878752863285853891284205019474029541015625p159 + -1.244635688856779776045868857181631028652191162109375p-52 == -1.272783773287875508373190314159728586673736572265625p159
; [HW: -1.272783773287875508373190314159728586673736572265625p159] 

; mpf : - 1228508899731994 159
; mpfd: - 1228508899731994 159 (-9.30088e+047) class: Neg. norm. non-zero
; hwf : - 1228508899731994 159 (-9.30088e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011110 #b0100010111010101001010000100100100100110101000011001)))
(assert (= y (fp #b1 #b01111001011 #b0011111010100000011100011100101100010011000001010110)))
(assert (= r (fp #b1 #b10010011110 #b0100010111010101001010000100100100100110101000011010)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
