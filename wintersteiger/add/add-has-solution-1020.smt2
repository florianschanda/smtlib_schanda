(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.906429361815771272858910379000008106231689453125p-1013 {- 4082194936111184 -1013 (-2.17188e-305)}
; Y = -1.3374024066427685486502241474227048456668853759765625p258 {- 1519525352830281 258 (-6.19442e+077)}
; -1.906429361815771272858910379000008106231689453125p-1013 + -1.3374024066427685486502241474227048456668853759765625p258 == -1.3374024066427685486502241474227048456668853759765625p258
; [HW: -1.3374024066427685486502241474227048456668853759765625p258] 

; mpf : - 1519525352830281 258
; mpfd: - 1519525352830281 258 (-6.19442e+077) class: Neg. norm. non-zero
; hwf : - 1519525352830281 258 (-6.19442e+077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001010 #b1110100000001011110000010011000100100010000001010000)))
(assert (= y (fp #b1 #b10100000001 #b0101011001100000000000010000111000011111010101001001)))
(assert (= r (fp #b1 #b10100000001 #b0101011001100000000000010000111000011111010101001001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
