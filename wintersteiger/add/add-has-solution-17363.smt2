(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7412460133540672568841500833514146506786346435546875p-383 {+ 3338275269531243 -383 (8.83836e-116)}
; Y = -1.8755522517736789023246046781423501670360565185546875p-451 {- 3943136794831339 -451 (-3.22553e-136)}
; 1.7412460133540672568841500833514146506786346435546875p-383 + -1.8755522517736789023246046781423501670360565185546875p-451 == 1.741246013354067034839545158320106565952301025390625p-383
; [HW: 1.741246013354067034839545158320106565952301025390625p-383] 

; mpf : + 3338275269531242 -383
; mpfd: + 3338275269531242 -383 (8.83836e-116) class: Pos. norm. non-zero
; hwf : + 3338275269531242 -383 (8.83836e-116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010000000 #b1011110111000010010011000111100110100101011001101011)))
(assert (= y (fp #b1 #b01000111100 #b1110000000100100001100010011111101001110100111101011)))
(assert (= r (fp #b0 #b01010000000 #b1011110111000010010011000111100110100101011001101010)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
