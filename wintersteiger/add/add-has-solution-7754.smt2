(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3373038835119934741868519267882220447063446044921875p-605 {+ 1519081644095235 -605 (1.00712e-182)}
; Y = 1.1415327740741840756300007342360913753509521484375p838 {+ 637406948581208 838 (2.0923e+252)}
; 1.3373038835119934741868519267882220447063446044921875p-605 + 1.1415327740741840756300007342360913753509521484375p838 == 1.1415327740741840756300007342360913753509521484375p838
; [HW: 1.1415327740741840756300007342360913753509521484375p838] 

; mpf : + 637406948581208 838
; mpfd: + 637406948581208 838 (2.0923e+252) class: Pos. norm. non-zero
; hwf : + 637406948581208 838 (2.0923e+252) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100010 #b0101011001011001100011000001110001111111011100000011)))
(assert (= y (fp #b0 #b11101000101 #b0010010000111011011111011110101111110101111101011000)))
(assert (= r (fp #b0 #b11101000101 #b0010010000111011011111011110101111110101111101011000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
