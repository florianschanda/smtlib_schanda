(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.39406984312840709350211909622885286808013916015625p-549 {- 1774732798671044 -549 (-7.56514e-166)}
; Y = 1.3124241779689638232042625531903468072414398193359375p220 {+ 1407033411482559 220 (2.21143e+066)}
; -1.39406984312840709350211909622885286808013916015625p-549 + 1.3124241779689638232042625531903468072414398193359375p220 == 1.3124241779689638232042625531903468072414398193359375p220
; [HW: 1.3124241779689638232042625531903468072414398193359375p220] 

; mpf : + 1407033411482559 220
; mpfd: + 1407033411482559 220 (2.21143e+066) class: Pos. norm. non-zero
; hwf : + 1407033411482559 220 (2.21143e+066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111011010 #b0110010011100001110000101110000010010011100011000100)))
(assert (= y (fp #b0 #b10011011011 #b0100111111111011000001111110101011011011001110111111)))
(assert (= r (fp #b0 #b10011011011 #b0100111111111011000001111110101011011011001110111111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
