(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.134691785463492141872166030225344002246856689453125p-50 {- 606597874823250 -50 (-1.00781e-015)}
; Y = -1.08725872886358043700738562620244920253753662109375p258 {- 392978378794844 258 (-5.03584e+077)}
; -1.134691785463492141872166030225344002246856689453125p-50 + -1.08725872886358043700738562620244920253753662109375p258 == -1.08725872886358043700738562620244920253753662109375p258
; [HW: -1.08725872886358043700738562620244920253753662109375p258] 

; mpf : - 392978378794844 258
; mpfd: - 392978378794844 258 (-5.03584e+077) class: Neg. norm. non-zero
; hwf : - 392978378794844 258 (-5.03584e+077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001101 #b0010001001111011001010010010110110011011000001010010)))
(assert (= y (fp #b1 #b10100000001 #b0001011001010110100101101000101011000010011101011100)))
(assert (= r (fp #b1 #b10100000001 #b0001011001010110100101101000101011000010011101011100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
