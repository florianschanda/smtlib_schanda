(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.968361727511279024582790952990762889385223388671875p-367 {+ 4361113515179646 -367 (6.54782e-111)}
; Y = 1.3293080042748519620232627858058549463748931884765625p482 {+ 1483071405342345 482 (1.65991e+145)}
; 1.968361727511279024582790952990762889385223388671875p-367 + 1.3293080042748519620232627858058549463748931884765625p482 == 1.3293080042748519620232627858058549463748931884765625p482
; [HW: 1.3293080042748519620232627858058549463748931884765625p482] 

; mpf : + 1483071405342345 482
; mpfd: + 1483071405342345 482 (1.65991e+145) class: Pos. norm. non-zero
; hwf : + 1483071405342345 482 (1.65991e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010000 #b1111011111100110100011011101111001011011111001111110)))
(assert (= y (fp #b0 #b10111100001 #b0101010001001101100001111000010010101011111010001001)))
(assert (= r (fp #b0 #b10111100001 #b0101010001001101100001111000010010101011111010001001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
