(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8781766201772212010467910658917389810085296630859375p194 {- 3954955899395615 194 (-4.7158e+058)}
; Y = 1.5970175473700549684252791848848573863506317138671875p-1019 {+ 2688728003869427 -1019 (2.84279e-307)}
; -1.8781766201772212010467910658917389810085296630859375p194 + 1.5970175473700549684252791848848573863506317138671875p-1019 == -1.878176620177220979002186140860430896282196044921875p194
; [HW: -1.878176620177220979002186140860430896282196044921875p194] 

; mpf : - 3954955899395614 194
; mpfd: - 3954955899395614 194 (-4.7158e+058) class: Neg. norm. non-zero
; hwf : - 3954955899395614 194 (-4.7158e+058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000001 #b1110000011010000001011101101011111000101111000011111)))
(assert (= y (fp #b0 #b00000000100 #b1001100011010110001001000101100100010111101011110011)))
(assert (= r (fp #b1 #b10011000001 #b1110000011010000001011101101011111000101111000011110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
