(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5581102773969133234999162596068345010280609130859375p554 {- 2513505237316383 554 (-9.18789e+166)}
; Y = -1.1221667162158543984418201944208703935146331787109375p-418 {- 550189977626799 -418 (-1.65775e-126)}
; -1.5581102773969133234999162596068345010280609130859375p554 + -1.1221667162158543984418201944208703935146331787109375p-418 == -1.5581102773969133234999162596068345010280609130859375p554
; [HW: -1.5581102773969133234999162596068345010280609130859375p554] 

; mpf : - 2513505237316383 554
; mpfd: - 2513505237316383 554 (-9.18789e+166) class: Neg. norm. non-zero
; hwf : - 2513505237316383 554 (-9.18789e+166) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101001 #b1000111011100000010100001010110011111011001100011111)))
(assert (= y (fp #b1 #b01001011101 #b0001111101000110010100010110001011001110100010101111)))
(assert (= r (fp #b1 #b11000101001 #b1000111011100000010100001010110011111011001100011111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
