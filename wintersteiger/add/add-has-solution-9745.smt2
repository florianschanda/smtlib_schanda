(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.227587740181735664890538828331045806407928466796875p797 {+ 1024964061876558 797 (1.0232e+240)}
; Y = 1.113039645519004583462674418115057051181793212890625p-552 {+ 509085305437482 -552 (7.55011e-167)}
; 1.227587740181735664890538828331045806407928466796875p797 + 1.113039645519004583462674418115057051181793212890625p-552 == 1.2275877401817358869351437533623538911342620849609375p797
; [HW: 1.2275877401817358869351437533623538911342620849609375p797] 

; mpf : + 1024964061876559 797
; mpfd: + 1024964061876559 797 (1.0232e+240) class: Pos. norm. non-zero
; hwf : + 1024964061876559 797 (1.0232e+240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011100 #b0011101001000011001100001010110100001101000101001110)))
(assert (= y (fp #b0 #b00111010111 #b0001110011110000001010101000110010100111110100101010)))
(assert (= r (fp #b0 #b11100011100 #b0011101001000011001100001010110100001101000101001111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
