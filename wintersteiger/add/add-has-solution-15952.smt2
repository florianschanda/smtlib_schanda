(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.544683976609288134085318233701400458812713623046875p433 {+ 2453038554092270 433 (3.42632e+130)}
; Y = 1.805344054999882263956578754005022346973419189453125p-80 {+ 3626947186002514 -80 (1.49335e-024)}
; 1.544683976609288134085318233701400458812713623046875p433 + 1.805344054999882263956578754005022346973419189453125p-80 == 1.544683976609288134085318233701400458812713623046875p433
; [HW: 1.544683976609288134085318233701400458812713623046875p433] 

; mpf : + 2453038554092270 433
; mpfd: + 2453038554092270 433 (3.42632e+130) class: Pos. norm. non-zero
; hwf : + 2453038554092270 433 (3.42632e+130) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110000 #b1000101101110000011010001011101000110001001011101110)))
(assert (= y (fp #b0 #b01110101111 #b1100111000101011000001110010101001000000101001010010)))
(assert (= r (fp #b0 #b10110110000 #b1000101101110000011010001011101000110001001011101110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
