(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8463153168836041739808706552139483392238616943359375p878 {- 3811465345754943 878 (-3.72085e+264)}
; Y = -1.33135096414035647427454023272730410099029541015625p896 {- 1492272078631364 896 (-7.03345e+269)}
; -1.8463153168836041739808706552139483392238616943359375p878 + -1.33135096414035647427454023272730410099029541015625p896 == -1.33135800727434716606012443662621080875396728515625p896
; [HW: -1.33135800727434716606012443662621080875396728515625p896] 

; mpf : - 1492303798086980 896
; mpfd: - 1492303798086980 896 (-7.03349e+269) class: Neg. norm. non-zero
; hwf : - 1492303798086980 896 (-7.03349e+269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101101 #b1101100010101000000111101110000000011110011100111111)))
(assert (= y (fp #b1 #b11101111111 #b0101010011010011011010101011001001111011000111000100)))
(assert (= r (fp #b1 #b11101111111 #b0101010011010011111000001101110010000010110101000100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
