(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4218275898329135742415019194595515727996826171875p356 {- 1899742576386104 356 (-2.08701e+107)}
; Y = -1.6171776400988344679632291445159353315830230712890625p-195 {- 2779520989970513 -195 (-3.22039e-059)}
; -1.4218275898329135742415019194595515727996826171875p356 + -1.6171776400988344679632291445159353315830230712890625p-195 == -1.4218275898329137962861068444908596575260162353515625p356
; [HW: -1.4218275898329137962861068444908596575260162353515625p356] 

; mpf : - 1899742576386105 356
; mpfd: - 1899742576386105 356 (-2.08701e+107) class: Neg. norm. non-zero
; hwf : - 1899742576386105 356 (-2.08701e+107) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100011 #b0110101111111100111001001001011011100010000000111000)))
(assert (= y (fp #b1 #b01100111100 #b1001110111111111010110101001010000001100000001010001)))
(assert (= r (fp #b1 #b10101100011 #b0110101111111100111001001001011011100010000000111001)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
