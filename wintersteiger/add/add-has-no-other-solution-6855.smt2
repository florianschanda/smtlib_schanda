(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8277276365703662985850996847148053348064422607421875p569 {- 3727753875622563 569 (-3.53166e+171)}
; Y = 1.1299111210835499630178446750505827367305755615234375p242 {+ 585067676503159 242 (7.98552e+072)}
; -1.8277276365703662985850996847148053348064422607421875p569 + 1.1299111210835499630178446750505827367305755615234375p242 == -1.827727636570366076540494759683497250080108642578125p569
; [HW: -1.827727636570366076540494759683497250080108642578125p569] 

; mpf : - 3727753875622562 569
; mpfd: - 3727753875622562 569 (-3.53166e+171) class: Neg. norm. non-zero
; hwf : - 3727753875622562 569 (-3.53166e+171) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000111000 #b1101001111100101111101010101100100010000101010100011)))
(assert (= y (fp #b0 #b10011110001 #b0010000101000001110110101111000001110000110001110111)))
(assert (= r (fp #b1 #b11000111000 #b1101001111100101111101010101100100010000101010100010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
