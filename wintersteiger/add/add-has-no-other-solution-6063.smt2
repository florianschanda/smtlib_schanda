(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.400077801754072925888294776086695492267608642578125p790 {+ 1801790238898850 790 (9.11693e+237)}
; Y = 1.96518083284850408887223238707520067691802978515625p594 {+ 4346788039161668 594 (1.27415e+179)}
; 1.400077801754072925888294776086695492267608642578125p790 + 1.96518083284850408887223238707520067691802978515625p594 == 1.400077801754072925888294776086695492267608642578125p790
; [HW: 1.400077801754072925888294776086695492267608642578125p790] 

; mpf : + 1801790238898850 790
; mpfd: + 1801790238898850 790 (9.11693e+237) class: Pos. norm. non-zero
; hwf : + 1801790238898850 790 (9.11693e+237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010101 #b0110011001101011011111111011001001100011101010100010)))
(assert (= y (fp #b0 #b11001010001 #b1111011100010110000101110100111111001111011101000100)))
(assert (= r (fp #b0 #b11100010101 #b0110011001101011011111111011001001100011101010100010)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
