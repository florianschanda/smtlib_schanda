(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.32734806326757226457857541390694677829742431640625p587 {+ 1474244615752292 587 (6.72345e+176)}
; Y = 1.2148702291613096004851968245930038392543792724609375p-594 {+ 967689483983887 -594 (1.87375e-179)}
; 1.32734806326757226457857541390694677829742431640625p587 + 1.2148702291613096004851968245930038392543792724609375p-594 == 1.32734806326757226457857541390694677829742431640625p587
; [HW: 1.32734806326757226457857541390694677829742431640625p587] 

; mpf : + 1474244615752292 587
; mpfd: + 1474244615752292 587 (6.72345e+176) class: Pos. norm. non-zero
; hwf : + 1474244615752292 587 (6.72345e+176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001010 #b0101001111001101000101010010101000100100101001100100)))
(assert (= y (fp #b0 #b00110101101 #b0011011100000001101111000011111100100001110000001111)))
(assert (= r (fp #b0 #b11001001010 #b0101001111001101000101010010101000100100101001100100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
