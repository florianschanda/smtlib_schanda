(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3060198319399416444497319389483891427516937255859375p683 {- 1378190801092703 683 (-5.24127e+205)}
; Y = -1.119816194363047134885391642455942928791046142578125p-511 {- 539604168286370 -511 (-1.67039e-154)}
; -1.3060198319399416444497319389483891427516937255859375p683 + -1.119816194363047134885391642455942928791046142578125p-511 == -1.3060198319399416444497319389483891427516937255859375p683
; [HW: -1.3060198319399416444497319389483891427516937255859375p683] 

; mpf : - 1378190801092703 683
; mpfd: - 1378190801092703 683 (-5.24127e+205) class: Neg. norm. non-zero
; hwf : - 1378190801092703 683 (-5.24127e+205) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010101010 #b0100111001010111010100001101001000011100000001011111)))
(assert (= y (fp #b1 #b01000000000 #b0001111010101100010001100010110001010010000010100010)))
(assert (= r (fp #b1 #b11010101010 #b0100111001010111010100001101001000011100000001011111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
