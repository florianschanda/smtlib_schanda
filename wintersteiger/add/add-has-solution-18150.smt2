(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5290232412002378037385597053798846900463104248046875p-321 {+ 2382508871939723 -321 (3.5792e-097)}
; Y = -1.7699752000186099731848798910505138337612152099609375p972 {- 3467660023888335 972 (-7.06518e+292)}
; 1.5290232412002378037385597053798846900463104248046875p-321 + -1.7699752000186099731848798910505138337612152099609375p972 == -1.769975200018609751140274966019205749034881591796875p972
; [HW: -1.769975200018609751140274966019205749034881591796875p972] 

; mpf : - 3467660023888334 972
; mpfd: - 3467660023888334 972 (-7.06518e+292) class: Neg. norm. non-zero
; hwf : - 3467660023888334 972 (-7.06518e+292) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010111110 #b1000011101101110000100010010111111000111011010001011)))
(assert (= y (fp #b1 #b11111001011 #b1100010100011101000110000011111011001111100111001111)))
(assert (= r (fp #b1 #b11111001011 #b1100010100011101000110000011111011001111100111001110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
