(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.002139556542922971260622944100759923458099365234375p-834 {+ 9635706049446 -834 (8.74806e-252)}
; Y = 1.66695357145577105484335334040224552154541015625p-478 {+ 3003691855881632 -478 (2.13592e-144)}
; 1.002139556542922971260622944100759923458099365234375p-834 + 1.66695357145577105484335334040224552154541015625p-478 == 1.66695357145577105484335334040224552154541015625p-478
; [HW: 1.66695357145577105484335334040224552154541015625p-478] 

; mpf : + 3003691855881632 -478
; mpfd: + 3003691855881632 -478 (2.13592e-144) class: Pos. norm. non-zero
; hwf : + 3003691855881632 -478 (2.13592e-144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111101 #b0000000010001100001101111100110101100001001110100110)))
(assert (= y (fp #b0 #b01000100001 #b1010101010111101011110000010000101011010010110100000)))
(assert (= r (fp #b0 #b01000100001 #b1010101010111101011110000010000101011010010110100000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
