(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9337044100591900264163314204779453575611114501953125p406 {- 4205030833216757 406 (-3.19572e+122)}
; Y = -1.9515214839178691708099222523742355406284332275390625p-811 {- 4285271800407537 -811 (-1.42905e-244)}
; -1.9337044100591900264163314204779453575611114501953125p406 + -1.9515214839178691708099222523742355406284332275390625p-811 == -1.9337044100591900264163314204779453575611114501953125p406
; [HW: -1.9337044100591900264163314204779453575611114501953125p406] 

; mpf : - 4205030833216757 406
; mpfd: - 4205030833216757 406 (-3.19572e+122) class: Neg. norm. non-zero
; hwf : - 4205030833216757 406 (-3.19572e+122) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010101 #b1110111100000111010000001001000101010101110011110101)))
(assert (= y (fp #b1 #b00011010100 #b1111001110010110111010010111011011011110010111110001)))
(assert (= r (fp #b1 #b10110010101 #b1110111100000111010000001001000101010101110011110101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
