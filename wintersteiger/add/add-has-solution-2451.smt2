(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.277888342961101653116884335759095847606658935546875p644 {- 1251497837810222 644 (-9.32846e+193)}
; Y = -1.043490416388504371525414171628654003143310546875p-41 {- 195863423041456 -41 (-4.74525e-013)}
; -1.277888342961101653116884335759095847606658935546875p644 + -1.043490416388504371525414171628654003143310546875p-41 == -1.277888342961101653116884335759095847606658935546875p644
; [HW: -1.277888342961101653116884335759095847606658935546875p644] 

; mpf : - 1251497837810222 644
; mpfd: - 1251497837810222 644 (-9.32846e+193) class: Neg. norm. non-zero
; hwf : - 1251497837810222 644 (-9.32846e+193) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010000011 #b0100011100100011101100001100000011110101001000101110)))
(assert (= y (fp #b1 #b01111010110 #b0000101100100010001100000001110000010011111110110000)))
(assert (= r (fp #b1 #b11010000011 #b0100011100100011101100001100000011110101001000101110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
