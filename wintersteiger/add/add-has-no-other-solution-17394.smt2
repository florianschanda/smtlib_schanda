(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6727995961238548705551920647849328815937042236328125p-6 {+ 3030020010398413 -6 (0.0261375)}
; Y = -1.0164551388517482077844533705501817166805267333984375p816 {- 74107357201063 816 (-4.44186e+245)}
; 1.6727995961238548705551920647849328815937042236328125p-6 + -1.0164551388517482077844533705501817166805267333984375p816 == -1.0164551388517482077844533705501817166805267333984375p816
; [HW: -1.0164551388517482077844533705501817166805267333984375p816] 

; mpf : - 74107357201063 816
; mpfd: - 74107357201063 816 (-4.44186e+245) class: Neg. norm. non-zero
; hwf : - 74107357201063 816 (-4.44186e+245) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111001 #b1010110000111100100110000010011000011101001011001101)))
(assert (= y (fp #b1 #b11100101111 #b0000010000110110011001110110101100111000001010100111)))
(assert (= r (fp #b1 #b11100101111 #b0000010000110110011001110110101100111000001010100111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
