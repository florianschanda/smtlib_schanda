(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.037192796094754232427703755092807114124298095703125p586 {+ 167501462633202 586 (2.62686e+176)}
; Y = 1.07040722311693681234601172036491334438323974609375p-205 {+ 317085943793628 -205 (2.08161e-062)}
; 1.037192796094754232427703755092807114124298095703125p586 + 1.07040722311693681234601172036491334438323974609375p-205 == 1.0371927960947544544723086801241151988506317138671875p586
; [HW: 1.0371927960947544544723086801241151988506317138671875p586] 

; mpf : + 167501462633203 586
; mpfd: + 167501462633203 586 (2.62686e+176) class: Pos. norm. non-zero
; hwf : + 167501462633203 586 (2.62686e+176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001001 #b0000100110000101011101111001001011011111101011110010)))
(assert (= y (fp #b0 #b01100110010 #b0001001000000110001101010011000010110000011111011100)))
(assert (= r (fp #b0 #b11001001001 #b0000100110000101011101111001001011011111101011110011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
