(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.49148122271190430865317466668784618377685546875p-31 {- 2213434651464928 -31 (-6.94525e-010)}
; Y = -1.451241148839562011829684706754051148891448974609375p88 {- 2032209469768086 88 (-4.49137e+026)}
; -1.49148122271190430865317466668784618377685546875p-31 + -1.451241148839562011829684706754051148891448974609375p88 == -1.451241148839562011829684706754051148891448974609375p88
; [HW: -1.451241148839562011829684706754051148891448974609375p88] 

; mpf : - 2032209469768086 88
; mpfd: - 2032209469768086 88 (-4.49137e+026) class: Neg. norm. non-zero
; hwf : - 2032209469768086 88 (-4.49137e+026) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100000 #b0111110111010001101101101010001000100101010011100000)))
(assert (= y (fp #b1 #b10001010111 #b0111001110000100100010100011100011100000000110010110)))
(assert (= r (fp #b1 #b10001010111 #b0111001110000100100010100011100011100000000110010110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
