(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1571133735560759081550941118621267378330230712890625p-1012 {+ 707575730602065 -1012 (2.63645e-305)}
; Y = 1.88646592163542070608173162327148020267486572265625p-227 {+ 3992287594353924 -227 (8.74661e-069)}
; 1.1571133735560759081550941118621267378330230712890625p-1012 + 1.88646592163542070608173162327148020267486572265625p-227 == 1.88646592163542070608173162327148020267486572265625p-227
; [HW: 1.88646592163542070608173162327148020267486572265625p-227] 

; mpf : + 3992287594353924 -227
; mpfd: + 3992287594353924 -227 (8.74661e-069) class: Pos. norm. non-zero
; hwf : + 3992287594353924 -227 (8.74661e-069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000001011 #b0010100000111000100101010000000100110000000001010001)))
(assert (= y (fp #b0 #b01100011100 #b1110001011101111011011100011111001110001010100000100)))
(assert (= r (fp #b0 #b01100011100 #b1110001011101111011011100011111001110001010100000100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
