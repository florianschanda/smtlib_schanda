(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2097852273312701409935243646032176911830902099609375p395 {- 944788671636943 395 (-9.7624e+118)}
; Y = 1.267408275718793664310624080826528370380401611328125p513 {+ 1204299810882946 513 (3.39863e+154)}
; -1.2097852273312701409935243646032176911830902099609375p395 + 1.267408275718793664310624080826528370380401611328125p513 == 1.2674082757187934422660191557952202856540679931640625p513
; [HW: 1.2674082757187934422660191557952202856540679931640625p513] 

; mpf : + 1204299810882945 513
; mpfd: + 1204299810882945 513 (3.39863e+154) class: Pos. norm. non-zero
; hwf : + 1204299810882945 513 (3.39863e+154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001010 #b0011010110110100011111000001001010010010010111001111)))
(assert (= y (fp #b0 #b11000000000 #b0100010001110100110111100110011011100100010110000010)))
(assert (= r (fp #b0 #b11000000000 #b0100010001110100110111100110011011100100010110000001)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
