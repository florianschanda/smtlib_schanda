(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.296694236336502825679417583160102367401123046875p-869 {+ 1336192052208048 -869 (3.29436e-262)}
; Y = -1.399411620862479832538838309119455516338348388671875p332 {- 1798790026883710 332 (-1.22435e+100)}
; 1.296694236336502825679417583160102367401123046875p-869 + -1.399411620862479832538838309119455516338348388671875p332 == -1.3994116208624796104942333840881474316120147705078125p332
; [HW: -1.3994116208624796104942333840881474316120147705078125p332] 

; mpf : - 1798790026883709 332
; mpfd: - 1798790026883709 332 (-1.22435e+100) class: Neg. norm. non-zero
; hwf : - 1798790026883709 332 (-1.22435e+100) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011010 #b0100101111110100001001110100100111111010000110110000)))
(assert (= y (fp #b1 #b10101001011 #b0110011000111111110101110000100100111111001001111110)))
(assert (= r (fp #b1 #b10101001011 #b0110011000111111110101110000100100111111001001111101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
