(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7387027540855140017583835287950932979583740234375p-692 {- 3326821448037080 -692 (-8.46191e-209)}
; Y = 1.067365572489955116708415516768582165241241455078125p162 {+ 303387567163362 162 (6.23983e+048)}
; -1.7387027540855140017583835287950932979583740234375p-692 + 1.067365572489955116708415516768582165241241455078125p162 == 1.067365572489955116708415516768582165241241455078125p162
; [HW: 1.067365572489955116708415516768582165241241455078125p162] 

; mpf : + 303387567163362 162
; mpfd: + 303387567163362 162 (6.23983e+048) class: Pos. norm. non-zero
; hwf : + 303387567163362 162 (6.23983e+048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101001011 #b1011110100011011100111111010101001000011001011011000)))
(assert (= y (fp #b0 #b10010100001 #b0001000100111110110111101100001010111000011111100010)))
(assert (= r (fp #b0 #b10010100001 #b0001000100111110110111101100001010111000011111100010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
