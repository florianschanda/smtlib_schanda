(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1021940140371080385506274978979490697383880615234375p537 {- 460240923537015 537 (-4.95868e+161)}
; Y = -1.69459721038875965604120210628025233745574951171875p597 {- 3128187737879404 597 (-8.7897e+179)}
; -1.1021940140371080385506274978979490697383880615234375p537 + -1.69459721038875965604120210628025233745574951171875p597 == -1.69459721038875965604120210628025233745574951171875p597
; [HW: -1.69459721038875965604120210628025233745574951171875p597] 

; mpf : - 3128187737879404 597
; mpfd: - 3128187737879404 597 (-8.7897e+179) class: Neg. norm. non-zero
; hwf : - 3128187737879404 597 (-8.7897e+179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000011000 #b0001101000101001011000110000110000100010111001110111)))
(assert (= y (fp #b1 #b11001010100 #b1011000111010001000111110110111010000011001101101100)))
(assert (= r (fp #b1 #b11001010100 #b1011000111010001000111110110111010000011001101101100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
