(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3199047087126090094244545980473048985004425048828125p972 {+ 1440722726952173 972 (5.26864e+292)}
; Y = -1.8151801469562245383571053025661967694759368896484375p549 {- 3671245006071879 549 (-3.34493e+165)}
; 1.3199047087126090094244545980473048985004425048828125p972 + -1.8151801469562245383571053025661967694759368896484375p549 == 1.31990470871260878737984967301599681377410888671875p972
; [HW: 1.31990470871260878737984967301599681377410888671875p972] 

; mpf : + 1440722726952172 972
; mpfd: + 1440722726952172 972 (5.26864e+292) class: Pos. norm. non-zero
; hwf : + 1440722726952172 972 (5.26864e+292) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111001011 #b0101000111100101010001100110010111000001110011101101)))
(assert (= y (fp #b1 #b11000100100 #b1101000010101111101001010110011110000110100001000111)))
(assert (= r (fp #b0 #b11111001011 #b0101000111100101010001100110010111000001110011101100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
