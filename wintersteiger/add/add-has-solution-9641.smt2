(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3242179485457439280793323632678948342800140380859375p869 {+ 1460147832257439 869 (5.21226e+261)}
; Y = -1.5098431721096525759406858924194239079952239990234375p979 {- 2296129519930423 979 (-7.71432e+294)}
; 1.3242179485457439280793323632678948342800140380859375p869 + -1.5098431721096525759406858924194239079952239990234375p979 == -1.5098431721096525759406858924194239079952239990234375p979
; [HW: -1.5098431721096525759406858924194239079952239990234375p979] 

; mpf : - 2296129519930423 979
; mpfd: - 2296129519930423 979 (-7.71432e+294) class: Neg. norm. non-zero
; hwf : - 2296129519930423 979 (-7.71432e+294) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100100 #b0101001011111111111100101000110111000111101110011111)))
(assert (= y (fp #b1 #b11111010010 #b1000001010000101000101010000011001001100110000110111)))
(assert (= r (fp #b1 #b11111010010 #b1000001010000101000101010000011001001100110000110111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
