(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8621706471068779631394818352418951690196990966796875p-596 {- 3882871405040315 -596 (-7.18029e-180)}
; Y = -1.4990075477330846442924894290626980364322662353515625p937 {- 2247330206025785 937 (-1.74144e+282)}
; -1.8621706471068779631394818352418951690196990966796875p-596 + -1.4990075477330846442924894290626980364322662353515625p937 == -1.4990075477330846442924894290626980364322662353515625p937
; [HW: -1.4990075477330846442924894290626980364322662353515625p937] 

; mpf : - 2247330206025785 937
; mpfd: - 2247330206025785 937 (-1.74144e+282) class: Neg. norm. non-zero
; hwf : - 2247330206025785 937 (-1.74144e+282) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110101011 #b1101110010110111001101110010110011100101001010111011)))
(assert (= y (fp #b1 #b11110101000 #b0111111110111110111101010110100111111000100000111001)))
(assert (= r (fp #b1 #b11110101000 #b0111111110111110111101010110100111111000100000111001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
