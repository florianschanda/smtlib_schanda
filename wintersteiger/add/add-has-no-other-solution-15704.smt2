(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.200714994393827783625283700530417263507843017578125p160 {- 903939973959714 160 (-1.75485e+048)}
; Y = 1.477645180812400038661280632368288934230804443359375p159 {+ 2151122658322038 159 (1.07979e+048)}
; -1.200714994393827783625283700530417263507843017578125p160 + 1.477645180812400038661280632368288934230804443359375p159 == -1.84756961595051105717857353738509118556976318359375p158
; [HW: -1.84756961595051105717857353738509118556976318359375p158] 

; mpf : - 3817114206565276 158
; mpfd: - 3817114206565276 158 (-6.75057e+047) class: Neg. norm. non-zero
; hwf : - 3817114206565276 158 (-6.75057e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011111 #b0011001101100010000011101101000010111101000000100010)))
(assert (= y (fp #b0 #b10010011110 #b0111101001000110111101000101111010101110011001110110)))
(assert (= r (fp #b1 #b10010011101 #b1101100011111010010100101000010110010111001110011100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
