(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5345528917502495591662636797991581261157989501953125p-841 {+ 2407412204096245 -841 (1.04654e-253)}
; Y = 1.781596123750133653373950437526218593120574951171875p-597 {+ 3519996011675326 -597 (3.4348e-180)}
; 1.5345528917502495591662636797991581261157989501953125p-841 + 1.781596123750133653373950437526218593120574951171875p-597 == 1.781596123750133653373950437526218593120574951171875p-597
; [HW: 1.781596123750133653373950437526218593120574951171875p-597] 

; mpf : + 3519996011675326 -597
; mpfd: + 3519996011675326 -597 (3.4348e-180) class: Pos. norm. non-zero
; hwf : + 3519996011675326 -597 (3.4348e-180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110110 #b1000100011011000011101010101010000001100101011110101)))
(assert (= y (fp #b0 #b00110101010 #b1100100000010110101011101111111000101111111010111110)))
(assert (= r (fp #b0 #b00110101010 #b1100100000010110101011101111111000101111111010111110)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
