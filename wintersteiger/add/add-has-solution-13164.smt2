(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.26987790212261142386296342010609805583953857421875p818 {+ 1215422019434924 818 (2.21972e+246)}
; Y = -1.0557169809534341364809506558231078088283538818359375p-141 {- 250926974660095 -141 (-3.7872e-043)}
; 1.26987790212261142386296342010609805583953857421875p818 + -1.0557169809534341364809506558231078088283538818359375p-141 == 1.26987790212261142386296342010609805583953857421875p818
; [HW: 1.26987790212261142386296342010609805583953857421875p818] 

; mpf : + 1215422019434924 818
; mpfd: + 1215422019434924 818 (2.21972e+246) class: Pos. norm. non-zero
; hwf : + 1215422019434924 818 (2.21972e+246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100110001 #b0100010100010110101101111101101110000111100110101100)))
(assert (= y (fp #b1 #b01101110010 #b0000111001000011011101111101001100000110110111111111)))
(assert (= r (fp #b0 #b11100110001 #b0100010100010110101101111101101110000111100110101100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
