(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.709632657872724781356055245851166546344757080078125p167 {- 3195901373565538 167 (-3.19825e+050)}
; Y = -1.404017639800846151132418526685796678066253662109375p-1007 {- 1819533692058198 -1007 (-1.02369e-303)}
; -1.709632657872724781356055245851166546344757080078125p167 + -1.404017639800846151132418526685796678066253662109375p-1007 == -1.709632657872724781356055245851166546344757080078125p167
; [HW: -1.709632657872724781356055245851166546344757080078125p167] 

; mpf : - 3195901373565538 167
; mpfd: - 3195901373565538 167 (-3.19825e+050) class: Neg. norm. non-zero
; hwf : - 3195901373565538 167 (-3.19825e+050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100110 #b1011010110101010011111000110000110111100101001100010)))
(assert (= y (fp #b1 #b00000010000 #b0110011101101101101100110011010111110011101001010110)))
(assert (= r (fp #b1 #b10010100110 #b1011010110101010011111000110000110111100101001100010)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
