(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.884066102618974003490848190267570316791534423828125p-742 {- 3981479770325698 -742 (-8.14403e-224)}
; Y = -1.9272296624901186223866034197271801531314849853515625p-14 {- 4175871162477369 -14 (-0.000117629)}
; -1.884066102618974003490848190267570316791534423828125p-742 + -1.9272296624901186223866034197271801531314849853515625p-14 == -1.9272296624901186223866034197271801531314849853515625p-14
; [HW: -1.9272296624901186223866034197271801531314849853515625p-14] 

; mpf : - 4175871162477369 -14
; mpfd: - 4175871162477369 -14 (-0.000117629) class: Neg. norm. non-zero
; hwf : - 4175871162477369 -14 (-0.000117629) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011001 #b1110001001010010001001111111011001000000001011000010)))
(assert (= y (fp #b1 #b01111110001 #b1110110101011110111011000101010001000110101100111001)))
(assert (= r (fp #b1 #b01111110001 #b1110110101011110111011000101010001000110101100111001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
