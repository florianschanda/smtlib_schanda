(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.13887184391416784734474276774562895298004150390625p609 {- 625423184504100 609 (-2.41959e+183)}
; Y = -1.559382431271448155030157067812979221343994140625p-51 {- 2519234509031696 -51 (-6.92505e-016)}
; -1.13887184391416784734474276774562895298004150390625p609 + -1.559382431271448155030157067812979221343994140625p-51 == -1.13887184391416784734474276774562895298004150390625p609
; [HW: -1.13887184391416784734474276774562895298004150390625p609] 

; mpf : - 625423184504100 609
; mpfd: - 625423184504100 609 (-2.41959e+183) class: Neg. norm. non-zero
; hwf : - 625423184504100 609 (-2.41959e+183) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100000 #b0010001110001101000110101110101111110010010100100100)))
(assert (= y (fp #b1 #b01111001100 #b1000111100110011101011111110000001000100100100010000)))
(assert (= r (fp #b1 #b11001100000 #b0010001110001101000110101110101111110010010100100100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
