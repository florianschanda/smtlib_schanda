(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.27774239536974132391833336441777646541595458984375p651 {+ 1250840548292156 651 (1.19391e+196)}
; Y = 1.335321434988134825516681303270161151885986328125p431 {+ 1510153489661904 431 (7.40481e+129)}
; 1.27774239536974132391833336441777646541595458984375p651 + 1.335321434988134825516681303270161151885986328125p431 == 1.2777423953697415459629382894490845501422882080078125p651
; [HW: 1.2777423953697415459629382894490845501422882080078125p651] 

; mpf : + 1250840548292157 651
; mpfd: + 1250840548292157 651 (1.19391e+196) class: Pos. norm. non-zero
; hwf : + 1250840548292157 651 (1.19391e+196) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010001010 #b0100011100011010001000000010100011010011011000111100)))
(assert (= y (fp #b0 #b10110101110 #b0101010111010111101000000010010011101011111111010000)))
(assert (= r (fp #b0 #b11010001010 #b0100011100011010001000000010100011010011011000111101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
