(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1220084083575032618540490148006938397884368896484375p-722 {- 549477022414919 -722 (-5.08557e-218)}
; Y = 1.4037036756999559106162678290274925529956817626953125p-444 {+ 1818119723450421 -444 (3.08999e-134)}
; -1.1220084083575032618540490148006938397884368896484375p-722 + 1.4037036756999559106162678290274925529956817626953125p-444 == 1.40370367569995568857166290399618446826934814453125p-444
; [HW: 1.40370367569995568857166290399618446826934814453125p-444] 

; mpf : + 1818119723450420 -444
; mpfd: + 1818119723450420 -444 (3.08999e-134) class: Pos. norm. non-zero
; hwf : + 1818119723450420 -444 (3.08999e-134) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101101 #b0001111100111011111100010110101110111011100001000111)))
(assert (= y (fp #b0 #b01001000011 #b0110011101011001000111111100010001101000000000110101)))
(assert (= r (fp #b0 #b01001000011 #b0110011101011001000111111100010001101000000000110100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
