(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.304747165156158406063013899256475269794464111328125p-414 {+ 1372459219439490 -414 (3.08396e-125)}
; Y = -1.92318794399268089279075866215862333774566650390625p-38 {- 4157668880558372 -38 (-6.99652e-012)}
; 1.304747165156158406063013899256475269794464111328125p-414 + -1.92318794399268089279075866215862333774566650390625p-38 == -1.92318794399268089279075866215862333774566650390625p-38
; [HW: -1.92318794399268089279075866215862333774566650390625p-38] 

; mpf : - 4157668880558372 -38
; mpfd: - 4157668880558372 -38 (-6.99652e-012) class: Neg. norm. non-zero
; hwf : - 4157668880558372 -38 (-6.99652e-012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100001 #b0100111000000011111010010000001111100100111110000010)))
(assert (= y (fp #b1 #b01111011001 #b1110110001010110000010111000101110000010100100100100)))
(assert (= r (fp #b1 #b01111011001 #b1110110001010110000010111000101110000010100100100100)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
