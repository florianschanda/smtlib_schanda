(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7621352716196645449286961593315936625003814697265625p-768 {+ 3432352125272233 -768 (1.13502e-231)}
; Y = 1.2577826086658416837593676973483525216579437255859375p152 {+ 1160949660330079 152 (7.18067e+045)}
; 1.7621352716196645449286961593315936625003814697265625p-768 + 1.2577826086658416837593676973483525216579437255859375p152 == 1.2577826086658416837593676973483525216579437255859375p152
; [HW: 1.2577826086658416837593676973483525216579437255859375p152] 

; mpf : + 1160949660330079 152
; mpfd: + 1160949660330079 152 (7.18067e+045) class: Pos. norm. non-zero
; hwf : + 1160949660330079 152 (7.18067e+045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111111 #b1100001100011011010011000001001010111100000010101001)))
(assert (= y (fp #b0 #b10010010111 #b0100000111111110000010101000000110110010100001011111)))
(assert (= r (fp #b0 #b10010010111 #b0100000111111110000010101000000110110010100001011111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
