(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9064691864221614547858507648925296962261199951171875p38 {- 4082374290193683 38 (-5.24046e+011)}
; Y = -1.6798360095435003191965961377718485891819000244140625p-994 {- 3061709199253153 -994 (-1.00335e-299)}
; -1.9064691864221614547858507648925296962261199951171875p38 + -1.6798360095435003191965961377718485891819000244140625p-994 == -1.9064691864221614547858507648925296962261199951171875p38
; [HW: -1.9064691864221614547858507648925296962261199951171875p38] 

; mpf : - 4082374290193683 38
; mpfd: - 4082374290193683 38 (-5.24046e+011) class: Neg. norm. non-zero
; hwf : - 4082374290193683 38 (-5.24046e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100101 #b1110100000001110010111010101011010000011110100010011)))
(assert (= y (fp #b1 #b00000011101 #b1010111000001001101110111001001110100001111010100001)))
(assert (= r (fp #b1 #b10000100101 #b1110100000001110010111010101011010000011110100010011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
