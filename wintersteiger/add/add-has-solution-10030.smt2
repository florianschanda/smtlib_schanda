(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.78427473027645522307693681796081364154815673828125p457 {- 3532059383029140 457 (-6.64003e+137)}
; Y = -1.2171206707005435276869320659898221492767333984375p-961 {- 977824571661400 -961 (-6.24465e-290)}
; -1.78427473027645522307693681796081364154815673828125p457 + -1.2171206707005435276869320659898221492767333984375p-961 == -1.7842747302764554451215417429921217262744903564453125p457
; [HW: -1.7842747302764554451215417429921217262744903564453125p457] 

; mpf : - 3532059383029141 457
; mpfd: - 3532059383029141 457 (-6.64003e+137) class: Neg. norm. non-zero
; hwf : - 3532059383029141 457 (-6.64003e+137) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111001000 #b1100100011000110001110101000110110011101110110010100)))
(assert (= y (fp #b1 #b00000111110 #b0011011110010101001110000110001111110001110001011000)))
(assert (= r (fp #b1 #b10111001000 #b1100100011000110001110101000110110011101110110010101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
