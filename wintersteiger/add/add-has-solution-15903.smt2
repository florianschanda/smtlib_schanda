(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6435337725287519905492672478430904448032379150390625p801 {- 2898218458160817 801 (-2.19182e+241)}
; Y = 1.1281111034823350092182181469979695975780487060546875p133 {+ 576961117905067 133 (1.2284e+040)}
; -1.6435337725287519905492672478430904448032379150390625p801 + 1.1281111034823350092182181469979695975780487060546875p133 == -1.6435337725287519905492672478430904448032379150390625p801
; [HW: -1.6435337725287519905492672478430904448032379150390625p801] 

; mpf : - 2898218458160817 801
; mpfd: - 2898218458160817 801 (-2.19182e+241) class: Neg. norm. non-zero
; hwf : - 2898218458160817 801 (-2.19182e+241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100100000 #b1010010010111110101000010001101011100001111010110001)))
(assert (= y (fp #b0 #b10010000100 #b0010000011001011111000111010011110110110000010101011)))
(assert (= r (fp #b1 #b11100100000 #b1010010010111110101000010001101011100001111010110001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
