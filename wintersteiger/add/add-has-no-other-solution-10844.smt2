(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5363839354590691499424792709760367870330810546875p-1 {- 2415658491860984 -1 (-0.768192)}
; Y = -1.0576051459640278817886382967117242515087127685546875p74 {- 259430513898219 74 (-1.99776e+022)}
; -1.5363839354590691499424792709760367870330810546875p-1 + -1.0576051459640278817886382967117242515087127685546875p74 == -1.0576051459640278817886382967117242515087127685546875p74
; [HW: -1.0576051459640278817886382967117242515087127685546875p74] 

; mpf : - 259430513898219 74
; mpfd: - 259430513898219 74 (-1.99776e+022) class: Neg. norm. non-zero
; hwf : - 259430513898219 74 (-1.99776e+022) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111111110 #b1000100101010000011101010010010011100101011111111000)))
(assert (= y (fp #b1 #b10001001001 #b0000111010111111001101011111100111111111001011101011)))
(assert (= r (fp #b1 #b10001001001 #b0000111010111111001101011111100111111111001011101011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
