(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.837579727238410232104115493712015450000762939453125p72 {- 3772123747483986 72 (-8.67772e+021)}
; Y = 1.541680244028963642222151975147426128387451171875p-945 {+ 2439510945162800 -945 (5.1838e-285)}
; -1.837579727238410232104115493712015450000762939453125p72 + 1.541680244028963642222151975147426128387451171875p-945 == -1.8375797272384100100595105686807073652744293212890625p72
; [HW: -1.8375797272384100100595105686807073652744293212890625p72] 

; mpf : - 3772123747483985 72
; mpfd: - 3772123747483985 72 (-8.67772e+021) class: Neg. norm. non-zero
; hwf : - 3772123747483985 72 (-8.67772e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000111 #b1101011001101011101000000000000001001000000101010010)))
(assert (= y (fp #b0 #b00001001110 #b1000101010101011100011100111010011111110011000110000)))
(assert (= r (fp #b1 #b10001000111 #b1101011001101011101000000000000001001000000101010001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
