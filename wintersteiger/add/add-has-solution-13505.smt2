(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.305077546265831500704734935425221920013427734375p438 {+ 1373947123681904 438 (9.26349e+131)}
; Y = -1.324534292757194808842768907197751104831695556640625p-819 {- 1461572519930250 -819 (-3.78876e-247)}
; 1.305077546265831500704734935425221920013427734375p438 + -1.324534292757194808842768907197751104831695556640625p-819 == 1.305077546265831500704734935425221920013427734375p438
; [HW: 1.305077546265831500704734935425221920013427734375p438] 

; mpf : + 1373947123681904 438
; mpfd: + 1373947123681904 438 (9.26349e+131) class: Pos. norm. non-zero
; hwf : + 1373947123681904 438 (9.26349e+131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110101 #b0100111000011001100011111110001111110100101001110000)))
(assert (= y (fp #b1 #b00011001100 #b0101001100010100101011011110110111010010100110001010)))
(assert (= r (fp #b0 #b10110110101 #b0100111000011001100011111110001111110100101001110000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
