(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.631825518109204953276503147208131849765777587890625p747 {+ 2845489167919786 747 (1.20804e+225)}
; Y = 1.0677604545396002233559329397394321858882904052734375p236 {+ 305165957814999 236 (1.17911e+071)}
; 1.631825518109204953276503147208131849765777587890625p747 + 1.0677604545396002233559329397394321858882904052734375p236 == 1.6318255181092051753211080722394399344921112060546875p747
; [HW: 1.6318255181092051753211080722394399344921112060546875p747] 

; mpf : + 2845489167919787 747
; mpfd: + 2845489167919787 747 (1.20804e+225) class: Pos. norm. non-zero
; hwf : + 2845489167919787 747 (1.20804e+225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101010 #b1010000110111111010100010011000100001110101010101010)))
(assert (= y (fp #b0 #b10011101011 #b0001000101011000101111111100100000110101101011010111)))
(assert (= r (fp #b0 #b11011101010 #b1010000110111111010100010011000100001110101010101011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
