(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6980079725243559796155068397638387978076934814453125p716 {- 3143548444962325 716 (-5.85351e+215)}
; Y = -1.2603460287088490421325559509568847715854644775390625p-557 {- 1172494277880561 -557 (-2.67167e-168)}
; -1.6980079725243559796155068397638387978076934814453125p716 + -1.2603460287088490421325559509568847715854644775390625p-557 == -1.6980079725243559796155068397638387978076934814453125p716
; [HW: -1.6980079725243559796155068397638387978076934814453125p716] 

; mpf : - 3143548444962325 716
; mpfd: - 3143548444962325 716 (-5.85351e+215) class: Neg. norm. non-zero
; hwf : - 3143548444962325 716 (-5.85351e+215) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001011 #b1011001010110000101001101000011001010110111000010101)))
(assert (= y (fp #b1 #b00111010010 #b0100001010100110000010011000111011110010101011110001)))
(assert (= r (fp #b1 #b11011001011 #b1011001010110000101001101000011001010110111000010101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
