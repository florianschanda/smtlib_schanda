(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6471463231920200342983662267215549945831298828125p38 {- 2914487939981768 38 (-4.52764e+011)}
; Y = 1.40492832926738042687020424637012183666229248046875p17 {+ 1823635072800332 17 (184147)}
; -1.6471463231920200342983662267215549945831298828125p38 + 1.40492832926738042687020424637012183666229248046875p17 == -1.647145653269987963795983887393958866596221923828125p38
; [HW: -1.647145653269987963795983887393958866596221923828125p38] 

; mpf : - 2914484922921154 38
; mpfd: - 2914484922921154 38 (-4.52764e+011) class: Neg. norm. non-zero
; hwf : - 2914484922921154 38 (-4.52764e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100101 #b1010010110101011011000011010010111010110000111001000)))
(assert (= y (fp #b0 #b10000010000 #b0110011110101001011000100000101101101101011001001100)))
(assert (= r (fp #b1 #b10000100101 #b1010010110101011010101100110100010001011000011000010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
