(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7121650292967600659466143042664043605327606201171875p166 {- 3207306160567187 166 (-1.60149e+050)}
; Y = -1.20207925805377247030492071644403040409088134765625p-337 {- 910084071270276 -337 (-4.29363e-102)}
; -1.7121650292967600659466143042664043605327606201171875p166 + -1.20207925805377247030492071644403040409088134765625p-337 == -1.71216502929676028799121922929771244525909423828125p166
; [HW: -1.71216502929676028799121922929771244525909423828125p166] 

; mpf : - 3207306160567188 166
; mpfd: - 3207306160567188 166 (-1.60149e+050) class: Neg. norm. non-zero
; hwf : - 3207306160567188 166 (-1.60149e+050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100101 #b1011011001010000011100101000011000101111001110010011)))
(assert (= y (fp #b1 #b01010101110 #b0011001110111011011101110101110010001010011110000100)))
(assert (= r (fp #b1 #b10010100101 #b1011011001010000011100101000011000101111001110010100)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
