(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.79260981765536353549350678804330527782440185546875p-258 {+ 3569597279442892 -258 (3.87032e-078)}
; Y = 1.61971033073592085571590359904803335666656494140625p-498 {+ 2790927214579940 -498 (1.97924e-150)}
; 1.79260981765536353549350678804330527782440185546875p-258 + 1.61971033073592085571590359904803335666656494140625p-498 == 1.79260981765536353549350678804330527782440185546875p-258
; [HW: 1.79260981765536353549350678804330527782440185546875p-258] 

; mpf : + 3569597279442892 -258
; mpfd: + 3569597279442892 -258 (3.87032e-078) class: Pos. norm. non-zero
; hwf : + 3569597279442892 -258 (3.87032e-078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111101 #b1100101011101000011110100001110101010001011111001100)))
(assert (= y (fp #b0 #b01000001101 #b1001111010100101010101100001001110000001000011100100)))
(assert (= r (fp #b0 #b01011111101 #b1100101011101000011110100001110101010001011111001100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
