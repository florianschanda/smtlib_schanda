(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1273381298775559944402857581735588610172271728515625p832 {+ 573479954266617 832 (3.22857e+250)}
; Y = -1.7399503884272728981841282802633941173553466796875p779 {- 3332440293593720 779 (-5.53227e+234)}
; 1.1273381298775559944402857581735588610172271728515625p832 + -1.7399503884272728981841282802633941173553466796875p779 == 1.1273381298775557723956808331422507762908935546875p832
; [HW: 1.1273381298775557723956808331422507762908935546875p832] 

; mpf : + 573479954266616 832
; mpfd: + 573479954266616 832 (3.22857e+250) class: Pos. norm. non-zero
; hwf : + 573479954266616 832 (3.22857e+250) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111111 #b0010000010011001001110110100111101011011100111111001)))
(assert (= y (fp #b1 #b11100001010 #b1011110101101101011000110111111011110101001001111000)))
(assert (= r (fp #b0 #b11100111111 #b0010000010011001001110110100111101011011100111111000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
