(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1867175102280336229654267299338243901729583740234375p10 {- 840900909486519 10 (-1215.2)}
; Y = -1.4015636741822572464144514015060849487781524658203125p-211 {- 1808482013412741 -211 (-4.25877e-064)}
; -1.1867175102280336229654267299338243901729583740234375p10 + -1.4015636741822572464144514015060849487781524658203125p-211 == -1.1867175102280338450100316549651324748992919921875p10
; [HW: -1.1867175102280338450100316549651324748992919921875p10] 

; mpf : - 840900909486520 10
; mpfd: - 840900909486520 10 (-1215.2) class: Neg. norm. non-zero
; hwf : - 840900909486520 10 (-1215.2) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001001 #b0010111111001100101110000000000000000101000110110111)))
(assert (= y (fp #b1 #b01100101100 #b0110011011001100111000000111111111011111110110000101)))
(assert (= r (fp #b1 #b10000001001 #b0010111111001100101110000000000000000101000110111000)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
