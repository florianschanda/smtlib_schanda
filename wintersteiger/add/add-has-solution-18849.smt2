(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7450306743333861003719675863976590335369110107421875p830 {- 3355319867307427 830 (-1.24939e+250)}
; Y = 1.425099296850240282452659812406636774539947509765625p-664 {+ 1914477034890202 -664 (1.86178e-200)}
; -1.7450306743333861003719675863976590335369110107421875p830 + 1.425099296850240282452659812406636774539947509765625p-664 == -1.7450306743333861003719675863976590335369110107421875p830
; [HW: -1.7450306743333861003719675863976590335369110107421875p830] 

; mpf : - 3355319867307427 830
; mpfd: - 3355319867307427 830 (-1.24939e+250) class: Neg. norm. non-zero
; hwf : - 3355319867307427 830 (-1.24939e+250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100111101 #b1011111010111010010101001000110011000111010110100011)))
(assert (= y (fp #b0 #b00101100111 #b0110110011010011010011101011100110000110001111011010)))
(assert (= r (fp #b1 #b11100111101 #b1011111010111010010101001000110011000111010110100011)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
