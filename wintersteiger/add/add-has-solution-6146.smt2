(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.39958001045096036563109009875915944576263427734375p536 {+ 1799548386171644 536 (3.14829e+161)}
; Y = -1.4505496064022285196415396058000624179840087890625p27 {- 2029095039505000 27 (-1.94689e+008)}
; 1.39958001045096036563109009875915944576263427734375p536 + -1.4505496064022285196415396058000624179840087890625p27 == 1.39958001045096036563109009875915944576263427734375p536
; [HW: 1.39958001045096036563109009875915944576263427734375p536] 

; mpf : + 1799548386171644 536
; mpfd: + 1799548386171644 536 (3.14829e+161) class: Pos. norm. non-zero
; hwf : + 1799548386171644 536 (3.14829e+161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010111 #b0110011001001010111000000010010100000101101011111100)))
(assert (= y (fp #b1 #b10000011010 #b0111001101010111001110000001000010111001001001101000)))
(assert (= r (fp #b0 #b11000010111 #b0110011001001010111000000010010100000101101011111100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
