(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.347113161363353128763264976441860198974609375p160 {- 1563258704171392 160 (-1.96881e+048)}
; Y = -1.17051114328817362775225774385035037994384765625p-188 {- 767913921375136 -188 (-2.98357e-057)}
; -1.347113161363353128763264976441860198974609375p160 + -1.17051114328817362775225774385035037994384765625p-188 == -1.347113161363353128763264976441860198974609375p160
; [HW: -1.347113161363353128763264976441860198974609375p160] 

; mpf : - 1563258704171392 160
; mpfd: - 1563258704171392 160 (-1.96881e+048) class: Neg. norm. non-zero
; hwf : - 1563258704171392 160 (-1.96881e+048) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011111 #b0101100011011100011010000111110000010001000110000000)))
(assert (= y (fp #b1 #b01101000011 #b0010101110100110100111100100100000000110101110100000)))
(assert (= r (fp #b1 #b10010011111 #b0101100011011100011010000111110000010001000110000000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
