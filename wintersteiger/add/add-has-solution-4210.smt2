(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.278203547659044314599441349855624139308929443359375p134 {- 1252917393570422 134 (-2.78368e+040)}
; Y = -1.7285341240867901912992010693415068089962005615234375p156 {- 3281026009763959 156 (-1.57891e+047)}
; -1.278203547659044314599441349855624139308929443359375p134 + -1.7285341240867901912992010693415068089962005615234375p156 == -1.7285344288342638918720695073716342449188232421875p156
; [HW: -1.7285344288342638918720695073716342449188232421875p156] 

; mpf : - 3281027382224568 156
; mpfd: - 3281027382224568 156 (-1.57891e+047) class: Neg. norm. non-zero
; hwf : - 3281027382224568 156 (-1.57891e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000101 #b0100011100111000010110010000001011010011101001110110)))
(assert (= y (fp #b1 #b10010011011 #b1011101010000001001101100101110011111001000001110111)))
(assert (= r (fp #b1 #b10010011011 #b1011101010000001001110110111100111011010011010111000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
