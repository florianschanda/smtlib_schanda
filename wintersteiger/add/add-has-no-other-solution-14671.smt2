(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.96029997492079388621277757920324802398681640625p-470 {+ 4324806609217184 -470 (6.4302e-142)}
; Y = 1.7225591259668942001326286117546260356903076171875p-171 {+ 3254117010457656 -171 (5.75499e-052)}
; 1.96029997492079388621277757920324802398681640625p-470 + 1.7225591259668942001326286117546260356903076171875p-171 == 1.7225591259668942001326286117546260356903076171875p-171
; [HW: 1.7225591259668942001326286117546260356903076171875p-171] 

; mpf : + 3254117010457656 -171
; mpfd: + 3254117010457656 -171 (5.75499e-052) class: Pos. norm. non-zero
; hwf : + 3254117010457656 -171 (5.75499e-052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101001 #b1111010111010110001110000001101010100010011010100000)))
(assert (= y (fp #b0 #b01101010100 #b1011100011111001101000101000011101110100010000111000)))
(assert (= r (fp #b0 #b01101010100 #b1011100011111001101000101000011101110100010000111000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
