(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9878607292813856854962750730919651687145233154296875p-280 {+ 4448929212285595 -280 (1.02326e-084)}
; Y = 1.6857323501247079011733376319170929491519927978515625p-532 {+ 3088263956497529 -532 (1.19903e-160)}
; 1.9878607292813856854962750730919651687145233154296875p-280 + 1.6857323501247079011733376319170929491519927978515625p-532 == 1.9878607292813856854962750730919651687145233154296875p-280
; [HW: 1.9878607292813856854962750730919651687145233154296875p-280] 

; mpf : + 4448929212285595 -280
; mpfd: + 4448929212285595 -280 (1.02326e-084) class: Pos. norm. non-zero
; hwf : + 4448929212285595 -280 (1.02326e-084) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100111 #b1111110011100100011100001101010101000100001010011011)))
(assert (= y (fp #b0 #b00111101011 #b1010111110001100001001111100000110011000010001111001)))
(assert (= r (fp #b0 #b01011100111 #b1111110011100100011100001101010101000100001010011011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
