(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.084355389537424496637640913832001388072967529296875p115 {- 379902900887438 115 (-4.50424e+034)}
; Y = 1.4742404133245055053436090020113624632358551025390625p-417 {+ 2135788948732273 -417 (4.35572e-126)}
; -1.084355389537424496637640913832001388072967529296875p115 + 1.4742404133245055053436090020113624632358551025390625p-417 == -1.0843553895374242745930359888006933033466339111328125p115
; [HW: -1.0843553895374242745930359888006933033466339111328125p115] 

; mpf : - 379902900887437 115
; mpfd: - 379902900887437 115 (-4.50424e+034) class: Neg. norm. non-zero
; hwf : - 379902900887437 115 (-4.50424e+034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001110010 #b0001010110011000010100001001011101001101111110001110)))
(assert (= y (fp #b0 #b01001011110 #b0111100101100111110100011101100110101011100101110001)))
(assert (= r (fp #b1 #b10001110010 #b0001010110011000010100001001011101001101111110001101)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
