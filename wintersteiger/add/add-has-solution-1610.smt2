(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7808747545123917443987693332019262015819549560546875p746 {+ 3516747253445035 746 (6.59189e+224)}
; Y = -1.3789820272968953407399794741650111973285675048828125p945 {- 1706783316914413 945 (-4.10114e+284)}
; 1.7808747545123917443987693332019262015819549560546875p746 + -1.3789820272968953407399794741650111973285675048828125p945 == -1.37898202729689511869537454913370311260223388671875p945
; [HW: -1.37898202729689511869537454913370311260223388671875p945] 

; mpf : - 1706783316914412 945
; mpfd: - 1706783316914412 945 (-4.10114e+284) class: Neg. norm. non-zero
; hwf : - 1706783316914412 945 (-4.10114e+284) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101001 #b1100011111100111011010000110110011100111000110101011)))
(assert (= y (fp #b1 #b11110110000 #b0110000100000100111101110101010100000011000011101101)))
(assert (= r (fp #b1 #b11110110000 #b0110000100000100111101110101010100000011000011101100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
