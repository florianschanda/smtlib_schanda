(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3673547852565715032824300578795373439788818359375p304 {+ 1654418873994264 304 (4.45656e+091)}
; Y = 1.0587015626954652258717715085367672145366668701171875p-689 {+ 264368335881363 -689 (4.12199e-208)}
; 1.3673547852565715032824300578795373439788818359375p304 + 1.0587015626954652258717715085367672145366668701171875p-689 == 1.3673547852565715032824300578795373439788818359375p304
; [HW: 1.3673547852565715032824300578795373439788818359375p304] 

; mpf : + 1654418873994264 304
; mpfd: + 1654418873994264 304 (4.45656e+091) class: Pos. norm. non-zero
; hwf : + 1654418873994264 304 (4.45656e+091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101111 #b0101111000001010111101101001010010110100110000011000)))
(assert (= y (fp #b0 #b00101001110 #b0000111100000111000100001100110000000000010010010011)))
(assert (= r (fp #b0 #b10100101111 #b0101111000001010111101101001010010110100110000011000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
