(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5396879336747100186499892515712417662143707275390625p-525 {- 2430538376993777 -525 (-1.4018e-158)}
; Y = 1.7355340113688815240067242484656162559986114501953125p-143 {+ 3312550699519221 -143 (1.55648e-043)}
; -1.5396879336747100186499892515712417662143707275390625p-525 + 1.7355340113688815240067242484656162559986114501953125p-143 == 1.7355340113688815240067242484656162559986114501953125p-143
; [HW: 1.7355340113688815240067242484656162559986114501953125p-143] 

; mpf : + 3312550699519221 -143
; mpfd: + 3312550699519221 -143 (1.55648e-043) class: Pos. norm. non-zero
; hwf : + 3312550699519221 -143 (1.55648e-043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110010 #b1000101000101000111111010000100100101101101111110001)))
(assert (= y (fp #b0 #b01101110000 #b1011110001001011111101001111101111101100110011110101)))
(assert (= r (fp #b0 #b01101110000 #b1011110001001011111101001111101111101100110011110101)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
