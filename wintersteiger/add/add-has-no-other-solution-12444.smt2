(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4725254247860928291657955924165435135364532470703125p846 {+ 2128065326989733 846 (6.90938e+254)}
; Y = -1.8213886032089623423502189325517974793910980224609375p582 {- 3699205407338255 582 (-2.8831e+175)}
; 1.4725254247860928291657955924165435135364532470703125p846 + -1.8213886032089623423502189325517974793910980224609375p582 == 1.47252542478609260712119066738523542881011962890625p846
; [HW: 1.47252542478609260712119066738523542881011962890625p846] 

; mpf : + 2128065326989732 846
; mpfd: + 2128065326989732 846 (6.90938e+254) class: Pos. norm. non-zero
; hwf : + 2128065326989732 846 (6.90938e+254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001101 #b0111100011110111011011010001110111111100000110100101)))
(assert (= y (fp #b1 #b11001000101 #b1101001001000110100001100000010000010110111100001111)))
(assert (= r (fp #b0 #b11101001101 #b0111100011110111011011010001110111111100000110100100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
