(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.27178037244456021426231018267571926116943359375p187 {+ 1223989984067936 187 (2.49472e+056)}
; Y = -1.63404112327153594463879926479421555995941162109375p688 {- 2855467366503260 688 (-2.09846e+207)}
; 1.27178037244456021426231018267571926116943359375p187 + -1.63404112327153594463879926479421555995941162109375p688 == -1.6340411232715357225941943397629074752330780029296875p688
; [HW: -1.6340411232715357225941943397629074752330780029296875p688] 

; mpf : - 2855467366503259 688
; mpfd: - 2855467366503259 688 (-2.09846e+207) class: Neg. norm. non-zero
; hwf : - 2855467366503259 688 (-2.09846e+207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111010 #b0100010110010011011001100000001101011000000101100000)))
(assert (= y (fp #b1 #b11010101111 #b1010001001010000100001001110000011000101001101011100)))
(assert (= r (fp #b1 #b11010101111 #b1010001001010000100001001110000011000101001101011011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
