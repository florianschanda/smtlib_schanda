(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.054751399261776523275102590559981763362884521484375p493 {+ 246578381313350 493 (2.69735e+148)}
; Y = -1.3627273794439436205294668980059213936328887939453125p-444 {- 1633578890900821 -444 (-2.99979e-134)}
; 1.054751399261776523275102590559981763362884521484375p493 + -1.3627273794439436205294668980059213936328887939453125p-444 == 1.054751399261776523275102590559981763362884521484375p493
; [HW: 1.054751399261776523275102590559981763362884521484375p493] 

; mpf : + 246578381313350 493
; mpfd: + 246578381313350 493 (2.69735e+148) class: Pos. norm. non-zero
; hwf : + 246578381313350 493 (2.69735e+148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101100 #b0000111000000100001100000000110100111101010101000110)))
(assert (= y (fp #b1 #b01001000011 #b0101110011011011101100111001100000010011010101010101)))
(assert (= r (fp #b0 #b10111101100 #b0000111000000100001100000000110100111101010101000110)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
