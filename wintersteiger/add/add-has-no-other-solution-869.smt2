(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6539347989857706711092077966895885765552520751953125p-255 {+ 2945060517036917 -255 (2.85673e-077)}
; Y = 1.1760195272729874194084231930901296436786651611328125p-827 {+ 792721477436557 -827 (1.31404e-249)}
; 1.6539347989857706711092077966895885765552520751953125p-255 + 1.1760195272729874194084231930901296436786651611328125p-827 == 1.6539347989857706711092077966895885765552520751953125p-255
; [HW: 1.6539347989857706711092077966895885765552520751953125p-255] 

; mpf : + 2945060517036917 -255
; mpfd: + 2945060517036917 -255 (2.85673e-077) class: Pos. norm. non-zero
; hwf : + 2945060517036917 -255 (2.85673e-077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000000 #b1010011101101000010001010101111101011100001101110101)))
(assert (= y (fp #b0 #b00011000100 #b0010110100001111100111011010000100011000010010001101)))
(assert (= r (fp #b0 #b01100000000 #b1010011101101000010001010101111101011100001101110101)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
