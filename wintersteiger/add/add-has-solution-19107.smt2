(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1121087796576587525265722433687187731266021728515625p-481 {- 504893058291193 -481 (-1.78123e-145)}
; Y = 1.2025041545083270388971641295938752591609954833984375p-789 {+ 911997634784679 -789 (3.69335e-238)}
; -1.1121087796576587525265722433687187731266021728515625p-481 + 1.2025041545083270388971641295938752591609954833984375p-789 == -1.1121087796576585304819673183374106884002685546875p-481
; [HW: -1.1121087796576585304819673183374106884002685546875p-481] 

; mpf : - 504893058291192 -481
; mpfd: - 504893058291192 -481 (-1.78123e-145) class: Neg. norm. non-zero
; hwf : - 504893058291192 -481 (-1.78123e-145) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011110 #b0001110010110011001010010011011000111001010111111001)))
(assert (= y (fp #b0 #b00011101010 #b0011001111010111010011111111000011101010110110100111)))
(assert (= r (fp #b1 #b01000011110 #b0001110010110011001010010011011000111001010111111000)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
