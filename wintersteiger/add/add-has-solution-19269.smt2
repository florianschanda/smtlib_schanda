(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7493454599755879907974076559185050427913665771484375p763 {+ 3374751934317831 763 (8.48716e+229)}
; Y = 1.454851699346428883785620200796984136104583740234375p-862 {+ 2048469943685414 -862 (4.7311e-260)}
; 1.7493454599755879907974076559185050427913665771484375p763 + 1.454851699346428883785620200796984136104583740234375p-862 == 1.7493454599755879907974076559185050427913665771484375p763
; [HW: 1.7493454599755879907974076559185050427913665771484375p763] 

; mpf : + 3374751934317831 763
; mpfd: + 3374751934317831 763 (8.48716e+229) class: Pos. norm. non-zero
; hwf : + 3374751934317831 763 (8.48716e+229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111010 #b1011111111010101000110101010010000000000010100000111)))
(assert (= y (fp #b0 #b00010100001 #b0111010001110001001010010011010100111001000100100110)))
(assert (= r (fp #b0 #b11011111010 #b1011111111010101000110101010010000000000010100000111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
