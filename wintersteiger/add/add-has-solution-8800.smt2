(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8649958000478352726503317171591334044933319091796875p35 {+ 3895594762772475 35 (6.40808e+010)}
; Y = 1.0600365246918477257764834575937129557132720947265625p818 {+ 270380470230825 818 (1.85292e+246)}
; 1.8649958000478352726503317171591334044933319091796875p35 + 1.0600365246918477257764834575937129557132720947265625p818 == 1.060036524691847947821088382625021040439605712890625p818
; [HW: 1.060036524691847947821088382625021040439605712890625p818] 

; mpf : + 270380470230826 818
; mpfd: + 270380470230826 818 (1.85292e+246) class: Pos. norm. non-zero
; hwf : + 270380470230826 818 (1.85292e+246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100010 #b1101110101110000010111010110000001100001111111111011)))
(assert (= y (fp #b0 #b11100110001 #b0000111101011110100011011011111000011101111100101001)))
(assert (= r (fp #b0 #b11100110001 #b0000111101011110100011011011111000011101111100101010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
