(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6846476820734164192572279716841876506805419921875p191 {- 3083379045865912 191 (-5.28735e+057)}
; Y = -1.3842130432685426644212611790862865746021270751953125p-757 {- 1730341718495093 -757 (-1.82598e-228)}
; -1.6846476820734164192572279716841876506805419921875p191 + -1.3842130432685426644212611790862865746021270751953125p-757 == -1.6846476820734164192572279716841876506805419921875p191
; [HW: -1.6846476820734164192572279716841876506805419921875p191] 

; mpf : - 3083379045865912 191
; mpfd: - 3083379045865912 191 (-5.28735e+057) class: Neg. norm. non-zero
; hwf : - 3083379045865912 191 (-5.28735e+057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010111110 #b1010111101000101000100100000101111001001100110111000)))
(assert (= y (fp #b1 #b00100001010 #b0110001001011011110010010011011110001000111101110101)))
(assert (= r (fp #b1 #b10010111110 #b1010111101000101000100100000101111001001100110111000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
