(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.987055183872985963944302056916058063507080078125p-450 {- 4445301358284496 -450 (-6.83458e-136)}
; Y = 1.4520342579496503532254791934974491596221923828125p-956 {+ 2035781315660744 -956 (2.38397e-288)}
; -1.987055183872985963944302056916058063507080078125p-450 + 1.4520342579496503532254791934974491596221923828125p-956 == -1.987055183872985963944302056916058063507080078125p-450
; [HW: -1.987055183872985963944302056916058063507080078125p-450] 

; mpf : - 4445301358284496 -450
; mpfd: - 4445301358284496 -450 (-6.83458e-136) class: Neg. norm. non-zero
; hwf : - 4445301358284496 -450 (-6.83458e-136) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000111101 #b1111110010101111101001100000011000010100111011010000)))
(assert (= y (fp #b0 #b00001000011 #b0111001110111000100001000110001010010000101111001000)))
(assert (= r (fp #b1 #b01000111101 #b1111110010101111101001100000011000010100111011010000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
