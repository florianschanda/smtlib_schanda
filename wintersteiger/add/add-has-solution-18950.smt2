(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4284931818178112639117216531303711235523223876953125p573 {- 1929761733965493 573 (-4.41637e+172)}
; Y = -1.2095787874070029754847155345487408339977264404296875p-646 {- 943858948870939 -646 (-4.14245e-195)}
; -1.4284931818178112639117216531303711235523223876953125p573 + -1.2095787874070029754847155345487408339977264404296875p-646 == -1.428493181817811485956326578161679208278656005859375p573
; [HW: -1.428493181817811485956326578161679208278656005859375p573] 

; mpf : - 1929761733965494 573
; mpfd: - 1929761733965494 573 (-4.41637e+172) class: Neg. norm. non-zero
; hwf : - 1929761733965494 573 (-4.41637e+172) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000111100 #b0110110110110001101110101010101001110111011010110101)))
(assert (= y (fp #b1 #b00101111001 #b0011010110100110111101001001010111011001001100011011)))
(assert (= r (fp #b1 #b11000111100 #b0110110110110001101110101010101001110111011010110110)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
