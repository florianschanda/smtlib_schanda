(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4384063692661250843940479171578772366046905517578125p-882 {+ 1974406761263773 -882 (4.46093e-266)}
; Y = 1.126787414496937866914549886132590472698211669921875p206 {+ 570999752683678 206 (1.15883e+062)}
; 1.4384063692661250843940479171578772366046905517578125p-882 + 1.126787414496937866914549886132590472698211669921875p206 == 1.126787414496937866914549886132590472698211669921875p206
; [HW: 1.126787414496937866914549886132590472698211669921875p206] 

; mpf : + 570999752683678 206
; mpfd: + 570999752683678 206 (1.15883e+062) class: Pos. norm. non-zero
; hwf : + 570999752683678 206 (1.15883e+062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001101 #b0111000000111011011001100101101001011011001010011101)))
(assert (= y (fp #b0 #b10011001101 #b0010000001110101001000111101011011001111000010011110)))
(assert (= r (fp #b0 #b10011001101 #b0010000001110101001000111101011011001111000010011110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
