(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.90920350847860476051209843717515468597412109375p-342 {- 4094688581988192 -342 (-2.13105e-103)}
; Y = 1.025939074899341552082887574215419590473175048828125p25 {+ 116819208051010 25 (3.44248e+007)}
; -1.90920350847860476051209843717515468597412109375p-342 + 1.025939074899341552082887574215419590473175048828125p25 == 1.0259390748993413300382826491841115057468414306640625p25
; [HW: 1.0259390748993413300382826491841115057468414306640625p25] 

; mpf : + 116819208051009 25
; mpfd: + 116819208051009 25 (3.44248e+007) class: Pos. norm. non-zero
; hwf : + 116819208051009 25 (3.44248e+007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101001 #b1110100011000001100011111010011001010010111101100000)))
(assert (= y (fp #b0 #b10000011000 #b0000011010100011111100010111011001100001100101000010)))
(assert (= r (fp #b0 #b10000011000 #b0000011010100011111100010111011001100001100101000001)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
