(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4054846549254216281354956663562916219234466552734375p-186 {+ 1826140540826583 -186 (1.433e-056)}
; Y = -1.3346943668051325371237680883496068418025970458984375p392 {- 1507329425626599 392 (-1.34629e+118)}
; 1.4054846549254216281354956663562916219234466552734375p-186 + -1.3346943668051325371237680883496068418025970458984375p392 == -1.334694366805132315079163163318298757076263427734375p392
; [HW: -1.334694366805132315079163163318298757076263427734375p392] 

; mpf : - 1507329425626598 392
; mpfd: - 1507329425626598 392 (-1.34629e+118) class: Neg. norm. non-zero
; hwf : - 1507329425626598 392 (-1.34629e+118) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000101 #b0110011111001101110101111010001111101111001111010111)))
(assert (= y (fp #b1 #b10110000111 #b0101010110101110100001111010111110010101010111100111)))
(assert (= r (fp #b1 #b10110000111 #b0101010110101110100001111010111110010101010111100110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
