(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4251313934671430150302740003098733723163604736328125p-175 {+ 1914621585202125 -175 (2.97581e-053)}
; Y = 1.4023280864350524677064413481275551021099090576171875p227 {+ 1811924620149587 227 (3.02454e+068)}
; 1.4251313934671430150302740003098733723163604736328125p-175 + 1.4023280864350524677064413481275551021099090576171875p227 == 1.40232808643505268975104627315886318683624267578125p227
; [HW: 1.40232808643505268975104627315886318683624267578125p227] 

; mpf : + 1811924620149588 227
; mpfd: + 1811924620149588 227 (3.02454e+068) class: Pos. norm. non-zero
; hwf : + 1811924620149588 227 (3.02454e+068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010000 #b0110110011010101011010010011011101110001101111001101)))
(assert (= y (fp #b0 #b10011100010 #b0110011011111110111110010011010110000000001101010011)))
(assert (= r (fp #b0 #b10011100010 #b0110011011111110111110010011010110000000001101010100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
