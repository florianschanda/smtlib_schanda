(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.45608593383353568384563914150930941104888916015625p894 {- 2054028441661636 894 (-1.92311e+269)}
; Y = -1.8497335375603132234800796140916645526885986328125p362 {- 3826859643120840 362 (-1.73767e+109)}
; -1.45608593383353568384563914150930941104888916015625p894 + -1.8497335375603132234800796140916645526885986328125p362 == -1.45608593383353568384563914150930941104888916015625p894
; [HW: -1.45608593383353568384563914150930941104888916015625p894] 

; mpf : - 2054028441661636 894
; mpfd: - 2054028441661636 894 (-1.92311e+269) class: Neg. norm. non-zero
; hwf : - 2054028441661636 894 (-1.92311e+269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111101 #b0111010011000010000011000011100111111011000011000100)))
(assert (= y (fp #b1 #b10101101001 #b1101100110001000001000110001101000100010110011001000)))
(assert (= r (fp #b1 #b11101111101 #b0111010011000010000011000011100111111011000011000100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
