(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.52142735178364763015679272939451038837432861328125p-82 {- 2348300027193620 -82 (-3.14624e-025)}
; Y = 1.4449244830309802001266916704480536282062530517578125p-159 {+ 2003761735986333 -159 (1.97731e-048)}
; -1.52142735178364763015679272939451038837432861328125p-82 + 1.4449244830309802001266916704480536282062530517578125p-159 == -1.5214273517836474081121878043632023036479949951171875p-82
; [HW: -1.5214273517836474081121878043632023036479949951171875p-82] 

; mpf : - 2348300027193619 -82
; mpfd: - 2348300027193619 -82 (-3.14624e-025) class: Neg. norm. non-zero
; hwf : - 2348300027193619 -82 (-3.14624e-025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101101 #b1000010101111100010000110100111100100110100100010100)))
(assert (= y (fp #b0 #b01101100000 #b0111000111100110100100100010011111001110110010011101)))
(assert (= r (fp #b1 #b01110101101 #b1000010101111100010000110100111100100110100100010011)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
