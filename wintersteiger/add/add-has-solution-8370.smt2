(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.35501819701250614258469795458950102329254150390625p-884 {+ 1598859819775268 -884 (1.05058e-266)}
; Y = -1.781291269230070639650875818915665149688720703125p522 {- 3518623068972368 522 (-2.44564e+157)}
; 1.35501819701250614258469795458950102329254150390625p-884 + -1.781291269230070639650875818915665149688720703125p522 == -1.781291269230070639650875818915665149688720703125p522
; [HW: -1.781291269230070639650875818915665149688720703125p522] 

; mpf : - 3518623068972368 522
; mpfd: - 3518623068972368 522 (-2.44564e+157) class: Neg. norm. non-zero
; hwf : - 3518623068972368 522 (-2.44564e+157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001011 #b0101101011100010011110001111100110100111010100100100)))
(assert (= y (fp #b1 #b11000001001 #b1100100000000010101101000110000111111110010101010000)))
(assert (= r (fp #b1 #b11000001001 #b1100100000000010101101000110000111111110010101010000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
