(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4467155448095938563568552126525901257991790771484375p103 {- 2011827961145095 103 (-1.46714e+031)}
; Y = -1.7110783221570058376670431243837811052799224853515625p607 {- 3202412066697529 607 (-9.08819e+182)}
; -1.4467155448095938563568552126525901257991790771484375p103 + -1.7110783221570058376670431243837811052799224853515625p607 == -1.7110783221570058376670431243837811052799224853515625p607
; [HW: -1.7110783221570058376670431243837811052799224853515625p607] 

; mpf : - 3202412066697529 607
; mpfd: - 3202412066697529 607 (-9.08819e+182) class: Neg. norm. non-zero
; hwf : - 3202412066697529 607 (-9.08819e+182) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001100110 #b0111001001011011111100110010111110010010011100000111)))
(assert (= y (fp #b1 #b11001011110 #b1011011000001001001110101001101010001111000100111001)))
(assert (= r (fp #b1 #b11001011110 #b1011011000001001001110101001101010001111000100111001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
