(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4385711325816341599193037836812436580657958984375p422 {+ 1975148789270104 422 (1.55808e+127)}
; Y = 1.9223724738866285743910111705190502107143402099609375p-863 {+ 4153996329692623 -863 (3.12573e-260)}
; 1.4385711325816341599193037836812436580657958984375p422 + 1.9223724738866285743910111705190502107143402099609375p-863 == 1.4385711325816341599193037836812436580657958984375p422
; [HW: 1.4385711325816341599193037836812436580657958984375p422] 

; mpf : + 1975148789270104 422
; mpfd: + 1975148789270104 422 (1.55808e+127) class: Pos. norm. non-zero
; hwf : + 1975148789270104 422 (1.55808e+127) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100101 #b0111000001000110001100101001111101101000011001011000)))
(assert (= y (fp #b0 #b00010100000 #b1110110000100000100110100011101000010010110111001111)))
(assert (= r (fp #b0 #b10110100101 #b0111000001000110001100101001111101101000011001011000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
