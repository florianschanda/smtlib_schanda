(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4852321383803042120774762224755249917507171630859375p503 {- 2185291277597727 503 (-3.8894e+151)}
; Y = 1.3085710119589057942590670791105367243289947509765625p970 {+ 1389680294475465 970 (1.30585e+292)}
; -1.4852321383803042120774762224755249917507171630859375p503 + 1.3085710119589057942590670791105367243289947509765625p970 == 1.3085710119589057942590670791105367243289947509765625p970
; [HW: 1.3085710119589057942590670791105367243289947509765625p970] 

; mpf : + 1389680294475465 970
; mpfd: + 1389680294475465 970 (1.30585e+292) class: Pos. norm. non-zero
; hwf : + 1389680294475465 970 (1.30585e+292) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110110 #b0111110000111000001011000110010101001111110000011111)))
(assert (= y (fp #b0 #b11111001001 #b0100111011111110100000101000010011011011011011001001)))
(assert (= r (fp #b0 #b11111001001 #b0100111011111110100000101000010011011011011011001001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
