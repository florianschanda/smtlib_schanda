(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.421607833396830500305441091768443584442138671875p-136 {- 1898752881382448 -136 (-1.63193e-041)}
; Y = -1.70143477682799737493724023806862533092498779296875p-660 {- 3158981399547276 -660 (-3.55646e-199)}
; -1.421607833396830500305441091768443584442138671875p-136 + -1.70143477682799737493724023806862533092498779296875p-660 == -1.4216078333968307223500460167997516691684722900390625p-136
; [HW: -1.4216078333968307223500460167997516691684722900390625p-136] 

; mpf : - 1898752881382449 -136
; mpfd: - 1898752881382449 -136 (-1.63193e-041) class: Neg. norm. non-zero
; hwf : - 1898752881382449 -136 (-1.63193e-041) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101110111 #b0110101111101110011111011011000000101101010000110000)))
(assert (= y (fp #b1 #b00101101011 #b1011001110010001001110101100001011000000110110001100)))
(assert (= r (fp #b1 #b01101110111 #b0110101111101110011111011011000000101101010000110001)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
