(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2527168654260438795944310186314396560192108154296875p558 {- 1138135580962971 558 (-1.18193e+168)}
; Y = -1.75265700779168032141797084477730095386505126953125p-55 {- 3389665819828404 -55 (-4.8646e-017)}
; -1.2527168654260438795944310186314396560192108154296875p558 + -1.75265700779168032141797084477730095386505126953125p-55 == -1.2527168654260438795944310186314396560192108154296875p558
; [HW: -1.2527168654260438795944310186314396560192108154296875p558] 

; mpf : - 1138135580962971 558
; mpfd: - 1138135580962971 558 (-1.18193e+168) class: Neg. norm. non-zero
; hwf : - 1138135580962971 558 (-1.18193e+168) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101101 #b0100000010110010000011010111000000100111000010011011)))
(assert (= y (fp #b1 #b01111001000 #b1100000010101110001000010011000110010010000010110100)))
(assert (= r (fp #b1 #b11000101101 #b0100000010110010000011010111000000100111000010011011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
