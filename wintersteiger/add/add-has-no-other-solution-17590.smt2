(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.72510798715558788529733647010289132595062255859375p-488 {+ 3265596060757276 -488 (2.15863e-147)}
; Y = -1.786126003545680962503183764056302607059478759765625p-989 {- 3540396776634586 -989 (-3.41387e-298)}
; 1.72510798715558788529733647010289132595062255859375p-488 + -1.786126003545680962503183764056302607059478759765625p-989 == 1.7251079871555876632527315450715832412242889404296875p-488
; [HW: 1.7251079871555876632527315450715832412242889404296875p-488] 

; mpf : + 3265596060757275 -488
; mpfd: + 3265596060757275 -488 (2.15863e-147) class: Pos. norm. non-zero
; hwf : + 3265596060757275 -488 (2.15863e-147) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000010111 #b1011100110100000101011010101001011100110110100011100)))
(assert (= y (fp #b1 #b00000100010 #b1100100100111111100011011100001111000011100011011010)))
(assert (= r (fp #b0 #b01000010111 #b1011100110100000101011010101001011100110110100011011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
