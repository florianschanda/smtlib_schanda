(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4200719472446532432030608106288127601146697998046875p-729 {- 1891835865079819 -729 (-5.02856e-220)}
; Y = 1.2320055381305359265553533987258560955524444580078125p530 {+ 1044860055072573 530 (4.33022e+159)}
; -1.4200719472446532432030608106288127601146697998046875p-729 + 1.2320055381305359265553533987258560955524444580078125p530 == 1.23200553813053570451074847369454801082611083984375p530
; [HW: 1.23200553813053570451074847369454801082611083984375p530] 

; mpf : + 1044860055072572 530
; mpfd: + 1044860055072572 530 (4.33022e+159) class: Pos. norm. non-zero
; hwf : + 1044860055072572 530 (4.33022e+159) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100110 #b0110101110001001110101011100101101100010000000001011)))
(assert (= y (fp #b0 #b11000010001 #b0011101101100100101101110000011011000010111100111101)))
(assert (= r (fp #b0 #b11000010001 #b0011101101100100101101110000011011000010111100111100)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
