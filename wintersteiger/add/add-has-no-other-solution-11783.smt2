(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.981767847278240513020364232943393290042877197265625p-455 {- 4421489311166618 -455 (-2.13012e-137)}
; Y = 1.3803278273058054992361576296389102935791015625p391 {+ 1712844261333056 391 (6.96162e+117)}
; -1.981767847278240513020364232943393290042877197265625p-455 + 1.3803278273058054992361576296389102935791015625p391 == 1.3803278273058052771915527046076022088527679443359375p391
; [HW: 1.3803278273058052771915527046076022088527679443359375p391] 

; mpf : + 1712844261333055 391
; mpfd: + 1712844261333055 391 (6.96162e+117) class: Pos. norm. non-zero
; hwf : + 1712844261333055 391 (6.96162e+117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000111000 #b1111101101010101001000110011110001010011000010011010)))
(assert (= y (fp #b0 #b10110000110 #b0110000101011101001010100001110000001001100001000000)))
(assert (= r (fp #b0 #b10110000110 #b0110000101011101001010100001110000001001100000111111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
