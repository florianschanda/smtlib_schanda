(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7019896400018168503009974301676265895366668701171875p-636 {- 3161480281130131 -636 (-5.9687e-192)}
; Y = 1.6004048766277296778071104199625551700592041015625p137 {+ 2703983178652072 137 (2.7883e+041)}
; -1.7019896400018168503009974301676265895366668701171875p-636 + 1.6004048766277296778071104199625551700592041015625p137 == 1.6004048766277294557625054949312470853328704833984375p137
; [HW: 1.6004048766277294557625054949312470853328704833984375p137] 

; mpf : + 2703983178652071 137
; mpfd: + 2703983178652071 137 (2.7883e+041) class: Pos. norm. non-zero
; hwf : + 2703983178652071 137 (2.7883e+041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000011 #b1011001110110101100101111101000111110000010010010011)))
(assert (= y (fp #b0 #b10010001000 #b1001100110110100001000100100110101111001100110101000)))
(assert (= r (fp #b0 #b10010001000 #b1001100110110100001000100100110101111001100110100111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
