(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6008331074139900973563044317415915429592132568359375p699 {+ 2705911758661503 699 (4.2103e+210)}
; Y = 1.5623470985689096313109303082455880939960479736328125p-637 {+ 2532586183567821 -637 (2.73949e-192)}
; 1.6008331074139900973563044317415915429592132568359375p699 + 1.5623470985689096313109303082455880939960479736328125p-637 == 1.6008331074139900973563044317415915429592132568359375p699
; [HW: 1.6008331074139900973563044317415915429592132568359375p699] 

; mpf : + 2705911758661503 699
; mpfd: + 2705911758661503 699 (4.2103e+210) class: Pos. norm. non-zero
; hwf : + 2705911758661503 699 (4.2103e+210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111010 #b1001100111010000001100101101001010110010011101111111)))
(assert (= y (fp #b0 #b00110000010 #b1000111111110101111110101011110101011010100111001101)))
(assert (= r (fp #b0 #b11010111010 #b1001100111010000001100101101001010110010011101111111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
