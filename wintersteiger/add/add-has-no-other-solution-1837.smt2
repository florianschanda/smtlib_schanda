(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.024648927200900061507127247750759124755859375p210 {- 111008899357056 210 (-1.68606e+063)}
; Y = 1.7090568602733522407532973375055007636547088623046875p-459 {+ 3193308211711563 -459 (1.14812e-138)}
; -1.024648927200900061507127247750759124755859375p210 + 1.7090568602733522407532973375055007636547088623046875p-459 == -1.024648927200900061507127247750759124755859375p210
; [HW: -1.024648927200900061507127247750759124755859375p210] 

; mpf : - 111008899357056 210
; mpfd: - 111008899357056 210 (-1.68606e+063) class: Neg. norm. non-zero
; hwf : - 111008899357056 210 (-1.68606e+063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010001 #b0000011001001111011001000110000000110101100110000000)))
(assert (= y (fp #b0 #b01000110100 #b1011010110000100110000000001100111100000111001001011)))
(assert (= r (fp #b1 #b10011010001 #b0000011001001111011001000110000000110101100110000000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
