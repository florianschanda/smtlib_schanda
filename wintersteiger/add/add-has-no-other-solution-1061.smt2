(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6126352428207846312346873673959635198116302490234375p254 {+ 2759063851281719 254 (4.66826e+076)}
; Y = -1.3891986892982262080664668246754445135593414306640625p90 {- 1752795072096577 90 (-1.71974e+027)}
; 1.6126352428207846312346873673959635198116302490234375p254 + -1.3891986892982262080664668246754445135593414306640625p90 == 1.6126352428207846312346873673959635198116302490234375p254
; [HW: 1.6126352428207846312346873673959635198116302490234375p254] 

; mpf : + 2759063851281719 254
; mpfd: + 2759063851281719 254 (4.66826e+076) class: Pos. norm. non-zero
; hwf : + 2759063851281719 254 (4.66826e+076) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111101 #b1001110011010101101010011100110001001010110100110111)))
(assert (= y (fp #b1 #b10001011001 #b0110001110100010100001100111101000101110100101000001)))
(assert (= r (fp #b0 #b10011111101 #b1001110011010101101010011100110001001010110100110111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
