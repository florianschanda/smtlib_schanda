(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.80571641702330598633352565229870378971099853515625p491 {- 3628624155472452 491 (-1.15446e+148)}
; Y = -1.635643774563564800672565979766659438610076904296875p603 {- 2862685066264846 603 (-5.4297e+181)}
; -1.80571641702330598633352565229870378971099853515625p491 + -1.635643774563564800672565979766659438610076904296875p603 == -1.635643774563564800672565979766659438610076904296875p603
; [HW: -1.635643774563564800672565979766659438610076904296875p603] 

; mpf : - 2862685066264846 603
; mpfd: - 2862685066264846 603 (-5.4297e+181) class: Neg. norm. non-zero
; hwf : - 2862685066264846 603 (-5.4297e+181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111101010 #b1100111001000011011011100101110011110111001001000100)))
(assert (= y (fp #b1 #b11001011010 #b1010001010111001100011001110011110101000000100001110)))
(assert (= r (fp #b1 #b11001011010 #b1010001010111001100011001110011110101000000100001110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
