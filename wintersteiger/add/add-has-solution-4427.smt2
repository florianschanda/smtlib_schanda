(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4785153573534781656917402870021760463714599609375p-788 {+ 2155041585068184 -788 (9.08216e-238)}
; Y = 1.5388585901520082099835917688324116170406341552734375p809 {+ 2426803345813975 809 (5.2537e+243)}
; 1.4785153573534781656917402870021760463714599609375p-788 + 1.5388585901520082099835917688324116170406341552734375p809 == 1.5388585901520082099835917688324116170406341552734375p809
; [HW: 1.5388585901520082099835917688324116170406341552734375p809] 

; mpf : + 2426803345813975 809
; mpfd: + 2426803345813975 809 (5.2537e+243) class: Pos. norm. non-zero
; hwf : + 2426803345813975 809 (5.2537e+243) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101011 #b0111101001111111111110111000001001110111100010011000)))
(assert (= y (fp #b0 #b11100101000 #b1000100111110010101000101111010111011111000111010111)))
(assert (= r (fp #b0 #b11100101000 #b1000100111110010101000101111010111011111000111010111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
