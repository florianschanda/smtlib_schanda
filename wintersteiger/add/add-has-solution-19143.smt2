(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5661666953455029016595290158875286579132080078125p-929 {+ 2549788118187592 -929 (3.45121e-280)}
; Y = -1.969164378592474395901490424876101315021514892578125p-210 {- 4364728334289826 -210 (-1.19669e-063)}
; 1.5661666953455029016595290158875286579132080078125p-929 + -1.969164378592474395901490424876101315021514892578125p-210 == -1.969164378592474395901490424876101315021514892578125p-210
; [HW: -1.969164378592474395901490424876101315021514892578125p-210] 

; mpf : - 4364728334289826 -210
; mpfd: - 4364728334289826 -210 (-1.19669e-063) class: Neg. norm. non-zero
; hwf : - 4364728334289826 -210 (-1.19669e-063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001011110 #b1001000011110000010011001111000010010111111001001000)))
(assert (= y (fp #b1 #b01100101101 #b1111100000011011001010000001111010000000101110100010)))
(assert (= r (fp #b1 #b01100101101 #b1111100000011011001010000001111010000000101110100010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
