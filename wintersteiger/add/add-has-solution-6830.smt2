(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1757852124909649038642101004370488226413726806640625p-313 {+ 791666217471553 -313 (7.04595e-095)}
; Y = 1.3324231423209926816753068123944103717803955078125p-569 {+ 1497100739886152 -569 (6.89564e-172)}
; 1.1757852124909649038642101004370488226413726806640625p-313 + 1.3324231423209926816753068123944103717803955078125p-569 == 1.1757852124909649038642101004370488226413726806640625p-313
; [HW: 1.1757852124909649038642101004370488226413726806640625p-313] 

; mpf : + 791666217471553 -313
; mpfd: + 791666217471553 -313 (7.04595e-095) class: Pos. norm. non-zero
; hwf : + 791666217471553 -313 (7.04595e-095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011000110 #b0010110100000000010000100111101011000100111001000001)))
(assert (= y (fp #b0 #b00111000110 #b0101010100011001101011101101110010110011110001001000)))
(assert (= r (fp #b0 #b01011000110 #b0010110100000000010000100111101011000100111001000001)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
