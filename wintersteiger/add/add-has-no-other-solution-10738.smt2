(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7195694414853910370055700695957057178020477294921875p-60 {+ 3240652668540803 -60 (1.49149e-018)}
; Y = -1.7455756914625231157600637743598781526088714599609375p4 {- 3357774406247119 4 (-27.9292)}
; 1.7195694414853910370055700695957057178020477294921875p-60 + -1.7455756914625231157600637743598781526088714599609375p4 == -1.745575691462522893715458849328570067882537841796875p4
; [HW: -1.745575691462522893715458849328570067882537841796875p4] 

; mpf : - 3357774406247118 4
; mpfd: - 3357774406247118 4 (-27.9292) class: Neg. norm. non-zero
; hwf : - 3357774406247118 4 (-27.9292) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000011 #b1011100000110101101100111111001001100001011110000011)))
(assert (= y (fp #b1 #b10000000011 #b1011111011011110000011000110101110000110001011001111)))
(assert (= r (fp #b1 #b10000000011 #b1011111011011110000011000110101110000110001011001110)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
