(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.26133857509881952552177608595229685306549072265625p-56 {+ 1176964309432580 -56 (1.75046e-017)}
; Y = 1.17634443032569269149689716869033873081207275390625p725 {+ 794184710703652 725 (2.07626e+218)}
; 1.26133857509881952552177608595229685306549072265625p-56 + 1.17634443032569269149689716869033873081207275390625p725 == 1.17634443032569269149689716869033873081207275390625p725
; [HW: 1.17634443032569269149689716869033873081207275390625p725] 

; mpf : + 794184710703652 725
; mpfd: + 794184710703652 725 (2.07626e+218) class: Pos. norm. non-zero
; hwf : + 794184710703652 725 (2.07626e+218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000111 #b0100001011100111000101011011100100111011100100000100)))
(assert (= y (fp #b0 #b11011010100 #b0010110100100100111010001001100100010100101000100100)))
(assert (= r (fp #b0 #b11011010100 #b0010110100100100111010001001100100010100101000100100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
