(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.176460827164746536510619989712722599506378173828125p-908 {- 794708915464642 -908 (-5.43678e-274)}
; Y = -1.936143265172020289099918954889290034770965576171875p-128 {- 4216014460194110 -128 (-5.68981e-039)}
; -1.176460827164746536510619989712722599506378173828125p-908 + -1.936143265172020289099918954889290034770965576171875p-128 == -1.9361432651720205111445238799205981194972991943359375p-128
; [HW: -1.9361432651720205111445238799205981194972991943359375p-128] 

; mpf : - 4216014460194111 -128
; mpfd: - 4216014460194111 -128 (-5.68981e-039) class: Neg. norm. non-zero
; hwf : - 4216014460194111 -128 (-5.68981e-039) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110011 #b0010110100101100100010010110100110110010100111000010)))
(assert (= y (fp #b1 #b01101111111 #b1110111110100111000101011100010001001000110100111110)))
(assert (= r (fp #b1 #b01101111111 #b1110111110100111000101011100010001001000110100111111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
