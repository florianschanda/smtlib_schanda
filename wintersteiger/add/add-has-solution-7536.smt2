(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.189731256182732455073391975020058453083038330078125p-820 {- 854473614645090 -820 (-1.70158e-247)}
; Y = 1.4093171161179174344368902893620543181896209716796875p1021 {+ 1843400411625019 1021 (3.1669e+307)}
; -1.189731256182732455073391975020058453083038330078125p-820 + 1.4093171161179174344368902893620543181896209716796875p1021 == 1.4093171161179174344368902893620543181896209716796875p1021
; [HW: 1.4093171161179174344368902893620543181896209716796875p1021] 

; mpf : + 1843400411625019 1021
; mpfd: + 1843400411625019 1021 (3.1669e+307) class: Pos. norm. non-zero
; hwf : + 1843400411625019 1021 (3.1669e+307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001011 #b0011000010010010001110100100010001010101011101100010)))
(assert (= y (fp #b0 #b11111111100 #b0110100011001001000000011010101101101011011000111011)))
(assert (= r (fp #b0 #b11111111100 #b0110100011001001000000011010101101101011011000111011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
