(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9511358114250312301152234795154072344303131103515625p518 {+ 4283534885912505 518 (1.67427e+156)}
; Y = -1.250102449267844750835365630337037146091461181640625p-181 {- 1126361297327114 -181 (-4.07865e-055)}
; 1.9511358114250312301152234795154072344303131103515625p518 + -1.250102449267844750835365630337037146091461181640625p-181 == 1.9511358114250310080706185544840991497039794921875p518
; [HW: 1.9511358114250310080706185544840991497039794921875p518] 

; mpf : + 4283534885912504 518
; mpfd: + 4283534885912504 518 (1.67427e+156) class: Pos. norm. non-zero
; hwf : + 4283534885912504 518 (1.67427e+156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000101 #b1111001101111101101000101111010000011111111110111001)))
(assert (= y (fp #b1 #b01101001010 #b0100000000000110101101101101000001000001010000001010)))
(assert (= r (fp #b0 #b11000000101 #b1111001101111101101000101111010000011111111110111000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
