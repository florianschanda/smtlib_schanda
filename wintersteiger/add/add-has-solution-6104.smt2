(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0592325275116791782892278206418268382549285888671875p-829 {+ 266759588829811 -829 (2.95886e-250)}
; Y = 1.2819894600487911073827262953273020684719085693359375p-368 {+ 1269967627198143 -368 (2.13229e-111)}
; 1.0592325275116791782892278206418268382549285888671875p-829 + 1.2819894600487911073827262953273020684719085693359375p-368 == 1.2819894600487911073827262953273020684719085693359375p-368
; [HW: 1.2819894600487911073827262953273020684719085693359375p-368] 

; mpf : + 1269967627198143 -368
; mpfd: + 1269967627198143 -368 (2.13229e-111) class: Pos. norm. non-zero
; hwf : + 1269967627198143 -368 (2.13229e-111) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000010 #b0000111100101001110111001110100010000101101001110011)))
(assert (= y (fp #b0 #b01010001111 #b0100100000110000011101100001010010111001111010111111)))
(assert (= r (fp #b0 #b01010001111 #b0100100000110000011101100001010010111001111010111111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
