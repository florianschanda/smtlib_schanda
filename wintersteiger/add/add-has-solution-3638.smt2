(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.886067712581245725544931701733730733394622802734375p93 {+ 3990494220205926 93 (1.86787e+028)}
; Y = -1.42805388218069850836400291882455348968505859375p564 {- 1927783304283488 564 (-8.62307e+169)}
; 1.886067712581245725544931701733730733394622802734375p93 + -1.42805388218069850836400291882455348968505859375p564 == -1.42805388218069850836400291882455348968505859375p564
; [HW: -1.42805388218069850836400291882455348968505859375p564] 

; mpf : - 1927783304283488 564
; mpfd: - 1927783304283488 564 (-8.62307e+169) class: Neg. norm. non-zero
; hwf : - 1927783304283488 564 (-8.62307e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011100 #b1110001011010101010101010110011110010011111101100110)))
(assert (= y (fp #b1 #b11000110011 #b0110110110010100111100000111000011100100010101100000)))
(assert (= r (fp #b1 #b11000110011 #b0110110110010100111100000111000011100100010101100000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
