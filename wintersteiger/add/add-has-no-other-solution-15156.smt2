(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.214691946273203537742801927379332482814788818359375p283 {+ 966886569235446 283 (1.8878e+085)}
; Y = 1.12346177588758155962977980379946529865264892578125p235 {+ 556022407881812 235 (6.20308e+070)}
; 1.214691946273203537742801927379332482814788818359375p283 + 1.12346177588758155962977980379946529865264892578125p235 == 1.2146919462732075345456905779428780078887939453125p283
; [HW: 1.2146919462732075345456905779428780078887939453125p283] 

; mpf : + 966886569235464 283
; mpfd: + 966886569235464 283 (1.8878e+085) class: Pos. norm. non-zero
; hwf : + 966886569235464 283 (1.8878e+085) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011010 #b0011011011110110000011010010011111110101001111110110)))
(assert (= y (fp #b0 #b10011101010 #b0001111110011011001100001110000110111110010001010100)))
(assert (= r (fp #b0 #b10100011010 #b0011011011110110000011010010011111110101010000001000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
