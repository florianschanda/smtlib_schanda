(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.856730590814876347138806522707454860210418701171875p421 {- 3858371569550782 421 (-1.00549e+127)}
; Y = 1.5477099848202240384154038110864348709583282470703125p984 {+ 2466666483543461 984 (2.53049e+296)}
; -1.856730590814876347138806522707454860210418701171875p421 + 1.5477099848202240384154038110864348709583282470703125p984 == 1.54770998482022381637079888605512678623199462890625p984
; [HW: 1.54770998482022381637079888605512678623199462890625p984] 

; mpf : + 2466666483543460 984
; mpfd: + 2466666483543460 984 (2.53049e+296) class: Pos. norm. non-zero
; hwf : + 2466666483543460 984 (2.53049e+296) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100100 #b1101101101010010101100100010110100001000010110111110)))
(assert (= y (fp #b0 #b11111010111 #b1000110000110110101110001011100001111110110110100101)))
(assert (= r (fp #b0 #b11111010111 #b1000110000110110101110001011100001111110110110100100)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
