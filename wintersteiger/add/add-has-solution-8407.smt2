(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.25778692414286563661107720690779387950897216796875p23 {+ 1160969095510796 23 (1.05511e+007)}
; Y = 1.582024086296553111452567463857121765613555908203125p485 {+ 2621203458165810 485 (1.58038e+146)}
; 1.25778692414286563661107720690779387950897216796875p23 + 1.582024086296553111452567463857121765613555908203125p485 == 1.582024086296553111452567463857121765613555908203125p485
; [HW: 1.582024086296553111452567463857121765613555908203125p485] 

; mpf : + 2621203458165810 485
; mpfd: + 2621203458165810 485 (1.58038e+146) class: Pos. norm. non-zero
; hwf : + 2621203458165810 485 (1.58038e+146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010110 #b0100000111111110010100101110100010000111101100001100)))
(assert (= y (fp #b0 #b10111100100 #b1001010011111111100001111101000000100000110000110010)))
(assert (= r (fp #b0 #b10111100100 #b1001010011111111100001111101000000100000110000110010)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
