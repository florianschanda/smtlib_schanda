(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8603937887102535153616145180421881377696990966796875p-939 {- 3874869146227387 -939 (-4.00349e-283)}
; Y = 1.59465322930548669688732843496836721897125244140625p234 {+ 2678080061914852 234 (4.40236e+070)}
; -1.8603937887102535153616145180421881377696990966796875p-939 + 1.59465322930548669688732843496836721897125244140625p234 == 1.5946532293054864748427235099370591342449188232421875p234
; [HW: 1.5946532293054864748427235099370591342449188232421875p234] 

; mpf : + 2678080061914851 234
; mpfd: + 2678080061914851 234 (4.40236e+070) class: Pos. norm. non-zero
; hwf : + 2678080061914851 234 (4.40236e+070) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010100 #b1101110001000010110001000111000000110001001010111011)))
(assert (= y (fp #b0 #b10011101001 #b1001100000111011001100011010110001010011111011100100)))
(assert (= r (fp #b0 #b10011101001 #b1001100000111011001100011010110001010011111011100011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
