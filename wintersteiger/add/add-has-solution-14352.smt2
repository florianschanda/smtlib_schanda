(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1394980815343831448416267448919825255870819091796875p300 {+ 628243508017147 300 (2.3212e+090)}
; Y = -1.16090332010816954522169908159412443637847900390625p366 {- 724644132481828 366 (-1.74492e+110)}
; 1.1394980815343831448416267448919825255870819091796875p300 + -1.16090332010816954522169908159412443637847900390625p366 == -1.16090332010816954522169908159412443637847900390625p366
; [HW: -1.16090332010816954522169908159412443637847900390625p366] 

; mpf : - 724644132481828 366
; mpfd: - 724644132481828 366 (-1.74492e+110) class: Neg. norm. non-zero
; hwf : - 724644132481828 366 (-1.74492e+110) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101011 #b0010001110110110001001010111001000001011011111111011)))
(assert (= y (fp #b1 #b10101101101 #b0010100100110000111101011100000110101110101100100100)))
(assert (= r (fp #b1 #b10101101101 #b0010100100110000111101011100000110101110101100100100)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
