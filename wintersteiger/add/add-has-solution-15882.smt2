(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8467111259812225565468679633340798318386077880859375p461 {- 3813247911459487 461 (-1.09958e+139)}
; Y = -1.2097470584567329154879189445637166500091552734375p455 {- 944616774307800 455 (-1.12549e+137)}
; -1.8467111259812225565468679633340798318386077880859375p461 + -1.2097470584567329154879189445637166500091552734375p455 == -1.8656134237696091471292447749874554574489593505859375p461
; [HW: -1.8656134237696091471292447749874554574489593505859375p461] 

; mpf : - 3898376292735711 461
; mpfd: - 3898376292735711 461 (-1.11084e+139) class: Neg. norm. non-zero
; hwf : - 3898376292735711 461 (-1.11084e+139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111001100 #b1101100011000010000011110111001100111111101010011111)))
(assert (= y (fp #b1 #b10111000110 #b0011010110110001111110111011010010000000111111011000)))
(assert (= r (fp #b1 #b10111001100 #b1101110110011000110101110110001000010001101011011111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
