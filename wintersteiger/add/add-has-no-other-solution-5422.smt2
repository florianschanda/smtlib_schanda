(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9759131679888242150155974741210229694843292236328125p-280 {+ 4395122179700429 -280 (1.01711e-084)}
; Y = -1.10691228090640247927467498811893165111541748046875p-884 {- 481490108451404 -884 (-8.58217e-267)}
; 1.9759131679888242150155974741210229694843292236328125p-280 + -1.10691228090640247927467498811893165111541748046875p-884 == 1.97591316798882399297099254908971488475799560546875p-280
; [HW: 1.97591316798882399297099254908971488475799560546875p-280] 

; mpf : + 4395122179700428 -280
; mpfd: + 4395122179700428 -280 (1.01711e-084) class: Pos. norm. non-zero
; hwf : + 4395122179700428 -280 (1.01711e-084) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100111 #b1111100111010101011100100000010000111111011011001101)))
(assert (= y (fp #b1 #b00010001011 #b0001101101011110100110100110111000001000101001001100)))
(assert (= r (fp #b0 #b01011100111 #b1111100111010101011100100000010000111111011011001100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
