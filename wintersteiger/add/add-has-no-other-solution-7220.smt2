(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.989885700877685348331169734592549502849578857421875p1019 {+ 4458048873612126 1019 (1.11788e+307)}
; Y = 1.881624972180090171747224303544498980045318603515625p638 {+ 3970485896190778 638 (2.1462e+192)}
; 1.989885700877685348331169734592549502849578857421875p1019 + 1.881624972180090171747224303544498980045318603515625p638 == 1.989885700877685348331169734592549502849578857421875p1019
; [HW: 1.989885700877685348331169734592549502849578857421875p1019] 

; mpf : + 4458048873612126 1019
; mpfd: + 4458048873612126 1019 (1.11788e+307) class: Pos. norm. non-zero
; hwf : + 4458048873612126 1019 (1.11788e+307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111010 #b1111110101101001001001100011100000001100001101011110)))
(assert (= y (fp #b0 #b11001111101 #b1110000110110010001011001001011011011001101100111010)))
(assert (= r (fp #b0 #b11111111010 #b1111110101101001001001100011100000001100001101011110)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
