(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6872195472627529166942395022488199174404144287109375p-887 {- 3094961696974255 -887 (-1.63518e-267)}
; Y = 1.1733456497643341975845032720826566219329833984375p663 {+ 780679403684952 663 (4.49069e+199)}
; -1.6872195472627529166942395022488199174404144287109375p-887 + 1.1733456497643341975845032720826566219329833984375p663 == 1.1733456497643339755398983470513485372066497802734375p663
; [HW: 1.1733456497643339755398983470513485372066497802734375p663] 

; mpf : + 780679403684951 663
; mpfd: + 780679403684951 663 (4.49069e+199) class: Pos. norm. non-zero
; hwf : + 780679403684951 663 (4.49069e+199) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001000 #b1010111111101101100111101100100010101010010110101111)))
(assert (= y (fp #b0 #b11010010110 #b0010110001100000011000010110100010100100010001011000)))
(assert (= r (fp #b0 #b11010010110 #b0010110001100000011000010110100010100100010001010111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
