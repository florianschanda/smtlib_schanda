(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.439811526757186044278569170273840427398681640625p-6 {+ 1980735028016912 -6 (0.0224971)}
; Y = -1.015232943732716552887040961650200188159942626953125p-482 {- 68603079718418 -482 (-8.13032e-146)}
; 1.439811526757186044278569170273840427398681640625p-6 + -1.015232943732716552887040961650200188159942626953125p-482 == 1.4398115267571858222339642452425323426723480224609375p-6
; [HW: 1.4398115267571858222339642452425323426723480224609375p-6] 

; mpf : + 1980735028016911 -6
; mpfd: + 1980735028016911 -6 (0.0224971) class: Pos. norm. non-zero
; hwf : + 1980735028016911 -6 (0.0224971) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111001 #b0111000010010111011111001111101111010011011100010000)))
(assert (= y (fp #b1 #b01000011101 #b0000001111100110010011100110001100100111011000010010)))
(assert (= r (fp #b0 #b01111111001 #b0111000010010111011111001111101111010011011100001111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
