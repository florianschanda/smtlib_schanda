(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.216401613394018088598613758222199976444244384765625p296 {- 974586225443674 296 (-1.54866e+089)}
; Y = 1.936001735696789349816526737413369119167327880859375p699 {+ 4215377068102198 699 (5.09182e+210)}
; -1.216401613394018088598613758222199976444244384765625p296 + 1.936001735696789349816526737413369119167327880859375p699 == 1.936001735696789349816526737413369119167327880859375p699
; [HW: 1.936001735696789349816526737413369119167327880859375p699] 

; mpf : + 4215377068102198 699
; mpfd: + 4215377068102198 699 (5.09182e+210) class: Pos. norm. non-zero
; hwf : + 4215377068102198 699 (5.09182e+210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100100111 #b0011011101100110000110001001110001010100001101011010)))
(assert (= y (fp #b0 #b11010111010 #b1110111110011101110011110100101111010001001000110110)))
(assert (= r (fp #b0 #b11010111010 #b1110111110011101110011110100101111010001001000110110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
