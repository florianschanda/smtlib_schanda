(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.879130845912257097296560459653846919536590576171875p483 {- 3959253350060350 483 (-4.69294e+145)}
; Y = 1.9656770444023321520177205457002855837345123291015625p691 {+ 4349022777330585 691 (2.01948e+208)}
; -1.879130845912257097296560459653846919536590576171875p483 + 1.9656770444023321520177205457002855837345123291015625p691 == 1.9656770444023321520177205457002855837345123291015625p691
; [HW: 1.9656770444023321520177205457002855837345123291015625p691] 

; mpf : + 4349022777330585 691
; mpfd: + 4349022777330585 691 (2.01948e+208) class: Pos. norm. non-zero
; hwf : + 4349022777330585 691 (2.01948e+208) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100010 #b1110000100001110101110000001100000011001000100111110)))
(assert (= y (fp #b0 #b11010110010 #b1111011100110110100111000101110000110100101110011001)))
(assert (= r (fp #b0 #b11010110010 #b1111011100110110100111000101110000110100101110011001)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
