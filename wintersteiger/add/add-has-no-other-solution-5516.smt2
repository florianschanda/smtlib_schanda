(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.713944139086147178119290401809848845005035400390625p-281 {+ 3215318558751722 -281 (4.41131e-085)}
; Y = -1.9179502618555515081055773407570086419582366943359375p119 {- 4134080457237311 119 (-1.2747e+036)}
; 1.713944139086147178119290401809848845005035400390625p-281 + -1.9179502618555515081055773407570086419582366943359375p119 == -1.9179502618555515081055773407570086419582366943359375p119
; [HW: -1.9179502618555515081055773407570086419582366943359375p119] 

; mpf : - 4134080457237311 119
; mpfd: - 4134080457237311 119 (-1.2747e+036) class: Neg. norm. non-zero
; hwf : - 4134080457237311 119 (-1.2747e+036) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100110 #b1011011011000101000010110000100010001011101111101010)))
(assert (= y (fp #b1 #b10001110110 #b1110101011111110110010011101001000000110001100111111)))
(assert (= r (fp #b1 #b10001110110 #b1110101011111110110010011101001000000110001100111111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
