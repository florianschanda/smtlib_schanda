(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.290243717510026755235230666585266590118408203125p-203 {+ 1307141498024784 -203 (1.00365e-061)}
; Y = 1.29947575171377849301279638893902301788330078125p981 {+ 1348718883824672 981 (2.65579e+295)}
; 1.290243717510026755235230666585266590118408203125p-203 + 1.29947575171377849301279638893902301788330078125p981 == 1.2994757517137787150574013139703311026096343994140625p981
; [HW: 1.2994757517137787150574013139703311026096343994140625p981] 

; mpf : + 1348718883824673 981
; mpfd: + 1348718883824673 981 (2.65579e+295) class: Pos. norm. non-zero
; hwf : + 1348718883824673 981 (2.65579e+295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100110100 #b0100101001001101011010011000101010010011001101010000)))
(assert (= y (fp #b0 #b11111010100 #b0100110010101010011100010101111110001110010000100000)))
(assert (= r (fp #b0 #b11111010100 #b0100110010101010011100010101111110001110010000100001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
