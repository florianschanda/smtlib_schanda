(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.950021265449977558859018245129846036434173583984375p125 {+ 4278515417074566 125 (8.29447e+037)}
; Y = -1.7015433871486009831386354562710039317607879638671875p-537 {- 3159470536946675 -537 (-3.78212e-162)}
; 1.950021265449977558859018245129846036434173583984375p125 + -1.7015433871486009831386354562710039317607879638671875p-537 == 1.950021265449977558859018245129846036434173583984375p125
; [HW: 1.950021265449977558859018245129846036434173583984375p125] 

; mpf : + 4278515417074566 125
; mpfd: + 4278515417074566 125 (8.29447e+037) class: Pos. norm. non-zero
; hwf : + 4278515417074566 125 (8.29447e+037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111100 #b1111001100110100100101111111100110011100101110000110)))
(assert (= y (fp #b1 #b00111100110 #b1011001110011000010110001111000010000111001111110011)))
(assert (= r (fp #b0 #b10001111100 #b1111001100110100100101111111100110011100101110000110)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
