(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5192987152474890510944760535494424402713775634765625p170 {- 2338713500482569 170 (-2.27375e+051)}
; Y = 1.8890199905480660191869901609607040882110595703125p714 {+ 4003790098157192 714 (1.628e+215)}
; -1.5192987152474890510944760535494424402713775634765625p170 + 1.8890199905480660191869901609607040882110595703125p714 == 1.8890199905480660191869901609607040882110595703125p714
; [HW: 1.8890199905480660191869901609607040882110595703125p714] 

; mpf : + 4003790098157192 714
; mpfd: + 4003790098157192 714 (1.628e+215) class: Pos. norm. non-zero
; hwf : + 4003790098157192 714 (1.628e+215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010101001 #b1000010011110000110000101011011011010111110000001001)))
(assert (= y (fp #b0 #b11011001001 #b1110001110010110110100000110100011100100111010001000)))
(assert (= r (fp #b0 #b11011001001 #b1110001110010110110100000110100011100100111010001000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
