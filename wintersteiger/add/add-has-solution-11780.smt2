(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.072644754746456374761010010843165218830108642578125p138 {+ 327162890406562 138 (3.73762e+041)}
; Y = 1.5087225553560534851982311010942794382572174072265625p955 {+ 2291082710736489 955 (4.59468e+287)}
; 1.072644754746456374761010010843165218830108642578125p138 + 1.5087225553560534851982311010942794382572174072265625p955 == 1.5087225553560534851982311010942794382572174072265625p955
; [HW: 1.5087225553560534851982311010942794382572174072265625p955] 

; mpf : + 2291082710736489 955
; mpfd: + 2291082710736489 955 (4.59468e+287) class: Pos. norm. non-zero
; hwf : + 2291082710736489 955 (4.59468e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001001 #b0001001010011000110110001011110111011100101010100010)))
(assert (= y (fp #b0 #b11110111010 #b1000001000111011101001000011000111111101111001101001)))
(assert (= r (fp #b0 #b11110111010 #b1000001000111011101001000011000111111101111001101001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
