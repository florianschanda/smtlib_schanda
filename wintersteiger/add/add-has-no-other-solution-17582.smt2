(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3522652864456652377356249417061917483806610107421875p924 {+ 1586461812772259 924 (1.91769e+278)}
; Y = 1.5661173534999861534089404813130386173725128173828125p961 {+ 2549565902270509 961 (3.05246e+289)}
; 1.3522652864456652377356249417061917483806610107421875p924 + 1.5661173534999861534089404813130386173725128173828125p961 == 1.56611735350982517189777354360558092594146728515625p961
; [HW: 1.56611735350982517189777354360558092594146728515625p961] 

; mpf : + 2549565902314820 961
; mpfd: + 2549565902314820 961 (3.05246e+289) class: Pos. norm. non-zero
; hwf : + 2549565902314820 961 (3.05246e+289) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110011011 #b0101101000101110000011101100110011001100110110100011)))
(assert (= y (fp #b0 #b11111000000 #b1001000011101101000100010001111011111011000000101101)))
(assert (= r (fp #b0 #b11111000000 #b1001000011101101000100010001111100000101110101000100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
