(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.019621331377313477872803559876047074794769287109375p-951 {+ 88366620679382 -951 (5.35689e-287)}
; Y = -1.314713712289259373022787258378230035305023193359375p581 {- 1417344557394294 581 (-1.04054e+175)}
; 1.019621331377313477872803559876047074794769287109375p-951 + -1.314713712289259373022787258378230035305023193359375p581 == -1.3147137122892591509781823333469219505786895751953125p581
; [HW: -1.3147137122892591509781823333469219505786895751953125p581] 

; mpf : - 1417344557394293 581
; mpfd: - 1417344557394293 581 (-1.04054e+175) class: Neg. norm. non-zero
; hwf : - 1417344557394293 581 (-1.04054e+175) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001000 #b0000010100000101111001110101000010010001110011010110)))
(assert (= y (fp #b1 #b11001000100 #b0101000010010001000100111110110111100010100101110110)))
(assert (= r (fp #b1 #b11001000100 #b0101000010010001000100111110110111100010100101110101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
