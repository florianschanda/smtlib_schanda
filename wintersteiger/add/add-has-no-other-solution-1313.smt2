(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2881427350905401141289985389448702335357666015625p441 {- 1297679514383272 441 (-7.31463e+132)}
; Y = 1.78976832561007626054561114870011806488037109375p647 {+ 3556800336926560 647 (1.04521e+195)}
; -1.2881427350905401141289985389448702335357666015625p441 + 1.78976832561007626054561114870011806488037109375p647 == 1.7897683256100760385010062236688099801540374755859375p647
; [HW: 1.7897683256100760385010062236688099801540374755859375p647] 

; mpf : + 3556800336926559 647
; mpfd: + 3556800336926559 647 (1.04521e+195) class: Pos. norm. non-zero
; hwf : + 3556800336926559 647 (1.04521e+195) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111000 #b0100100111000011101110001110011111001011001110101000)))
(assert (= y (fp #b0 #b11010000110 #b1100101000101110010000011100100111101001011101100000)))
(assert (= r (fp #b0 #b11010000110 #b1100101000101110010000011100100111101001011101011111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
