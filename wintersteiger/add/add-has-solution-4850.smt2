(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.742515558821377652520823176018893718719482421875p343 {- 3343992794024752 343 (-3.12223e+103)}
; Y = -1.4335980799477205938075030644540674984455108642578125p-731 {- 1952752151281117 -731 (-1.26911e-220)}
; -1.742515558821377652520823176018893718719482421875p343 + -1.4335980799477205938075030644540674984455108642578125p-731 == -1.742515558821377652520823176018893718719482421875p343
; [HW: -1.742515558821377652520823176018893718719482421875p343] 

; mpf : - 3343992794024752 343
; mpfd: - 3343992794024752 343 (-3.12223e+103) class: Neg. norm. non-zero
; hwf : - 3343992794024752 343 (-3.12223e+103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010110 #b1011111000010101011111111110100111101000101100110000)))
(assert (= y (fp #b1 #b00100100100 #b0110111100000000010010001010010011111011110111011101)))
(assert (= r (fp #b1 #b10101010110 #b1011111000010101011111111110100111101000101100110000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
