(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1546173181995220691220538355992175638675689697265625p856 {+ 696334496628393 856 (5.54772e+257)}
; Y = -1.7970386642953888323148703420883975923061370849609375p232 {- 3589543031520591 232 (-1.24027e+070)}
; 1.1546173181995220691220538355992175638675689697265625p856 + -1.7970386642953888323148703420883975923061370849609375p232 == 1.1546173181995218470774489105679094791412353515625p856
; [HW: 1.1546173181995218470774489105679094791412353515625p856] 

; mpf : + 696334496628392 856
; mpfd: + 696334496628392 856 (5.54772e+257) class: Pos. norm. non-zero
; hwf : + 696334496628392 856 (5.54772e+257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101010111 #b0010011110010101000000000010010100001111111010101001)))
(assert (= y (fp #b1 #b10011100111 #b1100110000001010101110011101010011001011110101001111)))
(assert (= r (fp #b0 #b11101010111 #b0010011110010101000000000010010100001111111010101000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
