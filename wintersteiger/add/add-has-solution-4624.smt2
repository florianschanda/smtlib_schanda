(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1693953556156653217357188623282127082347869873046875p-1020 {+ 762888860429003 -1020 (1.0408e-307)}
; Y = 1.6811283831532988219947810648591257631778717041015625p419 {+ 3067529532560665 419 (2.27598e+126)}
; 1.1693953556156653217357188623282127082347869873046875p-1020 + 1.6811283831532988219947810648591257631778717041015625p419 == 1.6811283831532988219947810648591257631778717041015625p419
; [HW: 1.6811283831532988219947810648591257631778717041015625p419] 

; mpf : + 3067529532560665 419
; mpfd: + 3067529532560665 419 (2.27598e+126) class: Pos. norm. non-zero
; hwf : + 3067529532560665 419 (2.27598e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000011 #b0010101101011101011111100111100001110110101011001011)))
(assert (= y (fp #b0 #b10110100010 #b1010111001011110011011100000001000000101010100011001)))
(assert (= r (fp #b0 #b10110100010 #b1010111001011110011011100000001000000101010100011001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
