(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4459089412163435017788515324355103075504302978515625p223 {- 2008195341503097 223 (-1.94908e+067)}
; Y = -1.76595030991999646374779331381432712078094482421875p120 {- 3449533530340012 120 (-2.34735e+036)}
; -1.4459089412163435017788515324355103075504302978515625p223 + -1.76595030991999646374779331381432712078094482421875p120 == -1.4459089412163435017788515324355103075504302978515625p223
; [HW: -1.4459089412163435017788515324355103075504302978515625p223] 

; mpf : - 2008195341503097 223
; mpfd: - 2008195341503097 223 (-1.94908e+067) class: Neg. norm. non-zero
; hwf : - 2008195341503097 223 (-1.94908e+067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011110 #b0111001000100111000101101001111110000100101001111001)))
(assert (= y (fp #b1 #b10001110111 #b1100010000010101010100011100101101110111101010101100)))
(assert (= r (fp #b1 #b10011011110 #b0111001000100111000101101001111110000100101001111001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
