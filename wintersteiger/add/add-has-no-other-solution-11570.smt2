(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.468014905683098003663644703919999301433563232421875p274 {+ 2107751754838238 274 (4.45604e+082)}
; Y = -1.5594827564040059098005031046341173350811004638671875p124 {- 2519686333261299 124 (-3.31665e+037)}
; 1.468014905683098003663644703919999301433563232421875p274 + -1.5594827564040059098005031046341173350811004638671875p124 == 1.4680149056830977816190397788886912167072296142578125p274
; [HW: 1.4680149056830977816190397788886912167072296142578125p274] 

; mpf : + 2107751754838237 274
; mpfd: + 2107751754838237 274 (4.45604e+082) class: Pos. norm. non-zero
; hwf : + 2107751754838237 274 (4.45604e+082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010001 #b0111011111001111110100110010100111110011000011011110)))
(assert (= y (fp #b1 #b10001111011 #b1000111100111010010000110000110101101110010111110011)))
(assert (= r (fp #b0 #b10100010001 #b0111011111001111110100110010100111110011000011011101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
