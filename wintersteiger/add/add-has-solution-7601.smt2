(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.123521764544071377400769051746465265750885009765625p141 {+ 556292572772826 141 (3.13192e+042)}
; Y = -1.957710772637655249894805820076726377010345458984375p321 {- 4313145878779654 321 (-8.36329e+096)}
; 1.123521764544071377400769051746465265750885009765625p141 + -1.957710772637655249894805820076726377010345458984375p321 == -1.9577107726376550278502008950454182922840118408203125p321
; [HW: -1.9577107726376550278502008950454182922840118408203125p321] 

; mpf : - 4313145878779653 321
; mpfd: - 4313145878779653 321 (-8.36329e+096) class: Neg. norm. non-zero
; hwf : - 4313145878779653 321 (-8.36329e+096) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001100 #b0001111110011111000111110101001100001111100111011010)))
(assert (= y (fp #b1 #b10101000000 #b1111010100101100100010000111111110000001011100000110)))
(assert (= r (fp #b1 #b10101000000 #b1111010100101100100010000111111110000001011100000101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
