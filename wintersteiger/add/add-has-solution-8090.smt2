(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.554303087328985366610822893562726676464080810546875p-338 {- 2496359177545134 -338 (-2.77586e-102)}
; Y = -1.300861198774684535095502724288962781429290771484375p-609 {- 1354958382691910 -609 (-6.12299e-184)}
; -1.554303087328985366610822893562726676464080810546875p-338 + -1.300861198774684535095502724288962781429290771484375p-609 == -1.554303087328985366610822893562726676464080810546875p-338
; [HW: -1.554303087328985366610822893562726676464080810546875p-338] 

; mpf : - 2496359177545134 -338
; mpfd: - 2496359177545134 -338 (-2.77586e-102) class: Neg. norm. non-zero
; hwf : - 2496359177545134 -338 (-2.77586e-102) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101101 #b1000110111100110110011101010000000100110010110101110)))
(assert (= y (fp #b1 #b00110011110 #b0100110100000101001111010101000101011111011001000110)))
(assert (= r (fp #b1 #b01010101101 #b1000110111100110110011101010000000100110010110101110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
