(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1129957611382457205451146364794112741947174072265625p516 {- 508887667756649 516 (-2.38765e+155)}
; Y = -1.4092924466369114444574961453326977789402008056640625p-504 {- 1843289310159553 -504 (-2.69081e-152)}
; -1.1129957611382457205451146364794112741947174072265625p516 + -1.4092924466369114444574961453326977789402008056640625p-504 == -1.112995761138245942589719561510719358921051025390625p516
; [HW: -1.112995761138245942589719561510719358921051025390625p516] 

; mpf : - 508887667756650 516
; mpfd: - 508887667756650 516 (-2.38765e+155) class: Neg. norm. non-zero
; hwf : - 508887667756650 516 (-2.38765e+155) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000000011 #b0001110011101101010010100100101010101100111001101001)))
(assert (= y (fp #b1 #b01000000111 #b0110100011000111011000111100100011001110001011000001)))
(assert (= r (fp #b1 #b11000000011 #b0001110011101101010010100100101010101100111001101010)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
