(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8835723583410992620912338679772801697254180908203125p215 {+ 3979256143779845 215 (9.91817e+064)}
; Y = -1.094519192679109576005203052773140370845794677734375p-489 {- 425676600928998 -489 (-6.84787e-148)}
; 1.8835723583410992620912338679772801697254180908203125p215 + -1.094519192679109576005203052773140370845794677734375p-489 == 1.88357235834109904004662894294597208499908447265625p215
; [HW: 1.88357235834109904004662894294597208499908447265625p215] 

; mpf : + 3979256143779844 215
; mpfd: + 3979256143779844 215 (9.91817e+064) class: Pos. norm. non-zero
; hwf : + 3979256143779844 215 (9.91817e+064) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011010110 #b1110001000110001110011000100111010111001100000000101)))
(assert (= y (fp #b1 #b01000010110 #b0001100000110010011010001110100101100110101011100110)))
(assert (= r (fp #b0 #b10011010110 #b1110001000110001110011000100111010111001100000000100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
