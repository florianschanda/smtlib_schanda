(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.843820879472556129030635929666459560394287109375p-1 {- 3800231398360048 -1 (-0.92191)}
; Y = 1.5999935732102219532180242822505533695220947265625p439 {+ 2702130832734248 439 (2.27136e+132)}
; -1.843820879472556129030635929666459560394287109375p-1 + 1.5999935732102219532180242822505533695220947265625p439 == 1.5999935732102217311734193572192452847957611083984375p439
; [HW: 1.5999935732102217311734193572192452847957611083984375p439] 

; mpf : + 2702130832734247 439
; mpfd: + 2702130832734247 439 (2.27136e+132) class: Pos. norm. non-zero
; hwf : + 2702130832734247 439 (2.27136e+132) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111111110 #b1101100000000100101001010010100100000100001111110000)))
(assert (= y (fp #b0 #b10110110110 #b1001100110011001001011011100011010111111100000101000)))
(assert (= r (fp #b0 #b10110110110 #b1001100110011001001011011100011010111111100000100111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
