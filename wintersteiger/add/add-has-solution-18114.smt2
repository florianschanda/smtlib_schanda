(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8334575036653557589261254179291427135467529296875p-964 {- 3753558902936440 -964 (-1.17586e-290)}
; Y = -1.4701199322690730042495488305576145648956298828125p-361 {- 2117231951786440 -361 (-3.12986e-109)}
; -1.8334575036653557589261254179291427135467529296875p-964 + -1.4701199322690730042495488305576145648956298828125p-361 == -1.4701199322690730042495488305576145648956298828125p-361
; [HW: -1.4701199322690730042495488305576145648956298828125p-361] 

; mpf : - 2117231951786440 -361
; mpfd: - 2117231951786440 -361 (-3.12986e-109) class: Neg. norm. non-zero
; hwf : - 2117231951786440 -361 (-3.12986e-109) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111011 #b1101010101011101011110001001000011011001001101111000)))
(assert (= y (fp #b1 #b01010010110 #b0111100001011001110001111010011001001011000111001000)))
(assert (= r (fp #b1 #b01010010110 #b0111100001011001110001111010011001001011000111001000)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
