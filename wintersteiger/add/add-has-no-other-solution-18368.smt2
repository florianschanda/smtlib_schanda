(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3690969194463618041623931276262737810611724853515625p700 {- 1662264748882233 700 (-7.20164e+210)}
; Y = -1.7209587871327298724821730502299033105373382568359375p-890 {- 3246909725080447 -890 (-2.08485e-268)}
; -1.3690969194463618041623931276262737810611724853515625p700 + -1.7209587871327298724821730502299033105373382568359375p-890 == -1.3690969194463618041623931276262737810611724853515625p700
; [HW: -1.3690969194463618041623931276262737810611724853515625p700] 

; mpf : - 1662264748882233 700
; mpfd: - 1662264748882233 700 (-7.20164e+210) class: Neg. norm. non-zero
; hwf : - 1662264748882233 700 (-7.20164e+210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111011 #b0101111001111101001000101011111000010011100100111001)))
(assert (= y (fp #b1 #b00010000101 #b1011100010010000110000010100110001111111101101111111)))
(assert (= r (fp #b1 #b11010111011 #b0101111001111101001000101011111000010011100100111001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
