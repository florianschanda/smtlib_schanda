(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6249772004390601320977793875499628484249114990234375p489 {- 2814647087012407 489 (-2.59726e+147)}
; Y = -1.75315338479987925524028469226323068141937255859375p-967 {- 3391901303137564 -967 (-1.40545e-291)}
; -1.6249772004390601320977793875499628484249114990234375p489 + -1.75315338479987925524028469226323068141937255859375p-967 == -1.6249772004390601320977793875499628484249114990234375p489
; [HW: -1.6249772004390601320977793875499628484249114990234375p489] 

; mpf : - 2814647087012407 489
; mpfd: - 2814647087012407 489 (-2.59726e+147) class: Neg. norm. non-zero
; hwf : - 2814647087012407 489 (-2.59726e+147) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111101000 #b1001111111111110100000010111110010100001101000110111)))
(assert (= y (fp #b1 #b00000111000 #b1100000011001110101010010000010010010110010100011100)))
(assert (= r (fp #b1 #b10111101000 #b1001111111111110100000010111110010100001101000110111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
