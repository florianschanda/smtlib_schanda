(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9278073667160509074847141164354979991912841796875p-24 {+ 4178472911014008 -24 (1.14906e-007)}
; Y = 1.9414825124151169344344225464737974107265472412109375p939 {+ 4240060292088559 939 (9.02193e+282)}
; 1.9278073667160509074847141164354979991912841796875p-24 + 1.9414825124151169344344225464737974107265472412109375p939 == 1.9414825124151169344344225464737974107265472412109375p939
; [HW: 1.9414825124151169344344225464737974107265472412109375p939] 

; mpf : + 4240060292088559 939
; mpfd: + 4240060292088559 939 (9.02193e+282) class: Pos. norm. non-zero
; hwf : + 4240060292088559 939 (9.02193e+282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111100111 #b1110110110000100110010001001100100001000100001111000)))
(assert (= y (fp #b0 #b11110101010 #b1111000100000100111111110111100010010100001011101111)))
(assert (= r (fp #b0 #b11110101010 #b1111000100000100111111110111100010010100001011101111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
