(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4023245760706839480036478562396951019763946533203125p277 {+ 1811908810873925 277 (3.40532e+083)}
; Y = 1.2678319832273234890607227498549036681652069091796875p-414 {+ 1206208019860475 -414 (2.9967e-125)}
; 1.4023245760706839480036478562396951019763946533203125p277 + 1.2678319832273234890607227498549036681652069091796875p-414 == 1.4023245760706839480036478562396951019763946533203125p277
; [HW: 1.4023245760706839480036478562396951019763946533203125p277] 

; mpf : + 1811908810873925 277
; mpfd: + 1811908810873925 277 (3.40532e+083) class: Pos. norm. non-zero
; hwf : + 1811908810873925 277 (3.40532e+083) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010100 #b0110011011111110101111100101000010011001110001000101)))
(assert (= y (fp #b0 #b01001100001 #b0100010010010000101000110000100011001000101111111011)))
(assert (= r (fp #b0 #b10100010100 #b0110011011111110101111100101000010011001110001000101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
