(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2850062405907050067099817169946618378162384033203125p-858 {+ 1283553998922565 -858 (6.68604e-259)}
; Y = -1.559265397629563398851360034313984215259552001953125p-909 {- 2518707436365714 -909 (-3.60291e-274)}
; 1.2850062405907050067099817169946618378162384033203125p-858 + -1.559265397629563398851360034313984215259552001953125p-909 == 1.285006240590704340576166941900737583637237548828125p-858
; [HW: 1.285006240590704340576166941900737583637237548828125p-858] 

; mpf : + 1283553998922562 -858
; mpfd: + 1283553998922562 -858 (6.68604e-259) class: Pos. norm. non-zero
; hwf : + 1283553998922562 -858 (6.68604e-259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100101 #b0100100011110110001010110100001001111110001101000101)))
(assert (= y (fp #b1 #b00001110010 #b1000111100101100000001000110000010011010011110010010)))
(assert (= r (fp #b0 #b00010100101 #b0100100011110110001010110100001001111110001101000010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
