(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1993641939323242961989990362781099975109100341796875p-258 {- 897856509504635 -258 (-2.58948e-078)}
; Y = -1.17888697968925182379962279810570180416107177734375p-497 {- 805635335069948 -497 (-2.88114e-150)}
; -1.1993641939323242961989990362781099975109100341796875p-258 + -1.17888697968925182379962279810570180416107177734375p-497 == -1.1993641939323242961989990362781099975109100341796875p-258
; [HW: -1.1993641939323242961989990362781099975109100341796875p-258] 

; mpf : - 897856509504635 -258
; mpfd: - 897856509504635 -258 (-2.58948e-078) class: Neg. norm. non-zero
; hwf : - 897856509504635 -258 (-2.58948e-078) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111101 #b0011001100001001100010000010010011101110110001111011)))
(assert (= y (fp #b1 #b01000001110 #b0010110111001011100010010111111101110010000011111100)))
(assert (= r (fp #b1 #b01011111101 #b0011001100001001100010000010010011101110110001111011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
