(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.391168898034089718152017667307518422603607177734375p-951 {+ 1761668103425254 -951 (7.30893e-287)}
; Y = -1.0749709269085008234156930484459735453128814697265625p221 {- 337639038488745 221 (-3.62264e+066)}
; 1.391168898034089718152017667307518422603607177734375p-951 + -1.0749709269085008234156930484459735453128814697265625p221 == -1.0749709269085006013710881234146654605865478515625p221
; [HW: -1.0749709269085006013710881234146654605865478515625p221] 

; mpf : - 337639038488744 221
; mpfd: - 337639038488744 221 (-3.62264e+066) class: Neg. norm. non-zero
; hwf : - 337639038488744 221 (-3.62264e+066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001000 #b0110010000100011101001010001100001000100110011100110)))
(assert (= y (fp #b1 #b10011011100 #b0001001100110001010010110110111100111001000010101001)))
(assert (= r (fp #b1 #b10011011100 #b0001001100110001010010110110111100111001000010101000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
