(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.045350026179459490549561451189219951629638671875p601 {- 204238361003056 601 (-8.67539e+180)}
; Y = -1.1981653622524033320217995424172841012477874755859375p1008 {- 892457451597663 1008 (-3.28664e+303)}
; -1.045350026179459490549561451189219951629638671875p601 + -1.1981653622524033320217995424172841012477874755859375p1008 == -1.1981653622524033320217995424172841012477874755859375p1008
; [HW: -1.1981653622524033320217995424172841012477874755859375p1008] 

; mpf : - 892457451597663 1008
; mpfd: - 892457451597663 1008 (-3.28664e+303) class: Neg. norm. non-zero
; hwf : - 892457451597663 1008 (-3.28664e+303) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001011000 #b0000101110011100000011110010111101010000010000110000)))
(assert (= y (fp #b1 #b11111101111 #b0011001010111010111101110001011000010010111101011111)))
(assert (= r (fp #b1 #b11111101111 #b0011001010111010111101110001011000010010111101011111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
