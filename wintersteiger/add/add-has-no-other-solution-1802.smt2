(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6487987363753890956985515003907494246959686279296875p707 {+ 2921929747378651 707 (1.11013e+213)}
; Y = -1.7734180036729989549115771296783350408077239990234375p236 {- 3483165033143351 236 (-1.95835e+071)}
; 1.6487987363753890956985515003907494246959686279296875p707 + -1.7734180036729989549115771296783350408077239990234375p236 == 1.648798736375388873653946575359441339969635009765625p707
; [HW: 1.648798736375388873653946575359441339969635009765625p707] 

; mpf : + 2921929747378650 707
; mpfd: + 2921929747378650 707 (1.11013e+213) class: Pos. norm. non-zero
; hwf : + 2921929747378650 707 (1.11013e+213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000010 #b1010011000010111101011001000101001101011000111011011)))
(assert (= y (fp #b1 #b10011101011 #b1100010111111110101110001110011111101001110000110111)))
(assert (= r (fp #b0 #b11011000010 #b1010011000010111101011001000101001101011000111011010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
