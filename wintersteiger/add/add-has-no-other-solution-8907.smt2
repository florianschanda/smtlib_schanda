(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.42610587151179313281090799137018620967864990234375p819 {- 1919010244160892 819 (-4.98561e+246)}
; Y = -1.62634989092822923595349493552930653095245361328125p933 {- 2820829135387924 933 (-1.18086e+281)}
; -1.42610587151179313281090799137018620967864990234375p819 + -1.62634989092822923595349493552930653095245361328125p933 == -1.62634989092822923595349493552930653095245361328125p933
; [HW: -1.62634989092822923595349493552930653095245361328125p933] 

; mpf : - 2820829135387924 933
; mpfd: - 2820829135387924 933 (-1.18086e+281) class: Neg. norm. non-zero
; hwf : - 2820829135387924 933 (-1.18086e+281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110010 #b0110110100010101010001100011111011000110110101111100)))
(assert (= y (fp #b1 #b11110100100 #b1010000001011000011101110110100101100011110100010100)))
(assert (= r (fp #b1 #b11110100100 #b1010000001011000011101110110100101100011110100010100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
