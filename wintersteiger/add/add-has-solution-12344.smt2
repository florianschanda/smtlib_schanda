(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.252245947754062171952682547271251678466796875p385 {- 1136014756310912 385 (-9.8682e+115)}
; Y = 1.64318182295671366688338821404613554477691650390625p-332 {+ 2896633418199332 -332 (1.87814e-100)}
; -1.252245947754062171952682547271251678466796875p385 + 1.64318182295671366688338821404613554477691650390625p-332 == -1.2522459477540619499080776222399435937404632568359375p385
; [HW: -1.2522459477540619499080776222399435937404632568359375p385] 

; mpf : - 1136014756310911 385
; mpfd: - 1136014756310911 385 (-9.8682e+115) class: Neg. norm. non-zero
; hwf : - 1136014756310911 385 (-9.8682e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000000 #b0100000010010011001100001100000000100110111110000000)))
(assert (= y (fp #b0 #b01010110011 #b1010010010100111100100000101111011111011000100100100)))
(assert (= r (fp #b1 #b10110000000 #b0100000010010011001100001100000000100110111101111111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
