(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.204699970110461482164510016446001827716827392578125p390 {- 921886709112226 390 (-3.03793e+117)}
; Y = 1.1239858987694499870002573516103439033031463623046875p436 {+ 558382847497291 436 (1.99452e+131)}
; -1.204699970110461482164510016446001827716827392578125p390 + 1.1239858987694499870002573516103439033031463623046875p436 == 1.123985898769432889565678124199621379375457763671875p436
; [HW: 1.123985898769432889565678124199621379375457763671875p436] 

; mpf : + 558382847497214 436
; mpfd: + 558382847497214 436 (1.99452e+131) class: Pos. norm. non-zero
; hwf : + 558382847497214 436 (1.99452e+131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000101 #b0011010001100111001101111001110100011101110110100010)))
(assert (= y (fp #b0 #b10110110011 #b0001111110111101100010100011010001100001010001001011)))
(assert (= r (fp #b0 #b10110110011 #b0001111110111101100010100011010001100001001111111110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
