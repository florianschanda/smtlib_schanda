(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0508317591333196094893764893640764057636260986328125p-732 {- 228925891491405 -732 (-4.65132e-221)}
; Y = -1.362491130431300323522236794815398752689361572265625p173 {- 1632514919935514 173 (-1.63126e+052)}
; -1.0508317591333196094893764893640764057636260986328125p-732 + -1.362491130431300323522236794815398752689361572265625p173 == -1.362491130431300323522236794815398752689361572265625p173
; [HW: -1.362491130431300323522236794815398752689361572265625p173] 

; mpf : - 1632514919935514 173
; mpfd: - 1632514919935514 173 (-1.63126e+052) class: Neg. norm. non-zero
; hwf : - 1632514919935514 173 (-1.63126e+052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100011 #b0000110100000011010011110110011100010011011001001101)))
(assert (= y (fp #b1 #b10010101100 #b0101110011001100001101111111111001001010111000011010)))
(assert (= r (fp #b1 #b10010101100 #b0101110011001100001101111111111001001010111000011010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
