(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.198685664928541338980494401766918599605560302734375p-29 {+ 894800686536038 -29 (2.23273e-009)}
; Y = -1.8449649496904039214228987475507892668247222900390625p-892 {- 3805383832566833 -892 (-5.58769e-269)}
; 1.198685664928541338980494401766918599605560302734375p-29 + -1.8449649496904039214228987475507892668247222900390625p-892 == 1.198685664928541338980494401766918599605560302734375p-29
; [HW: 1.198685664928541338980494401766918599605560302734375p-29] 

; mpf : + 894800686536038 -29
; mpfd: + 894800686536038 -29 (2.23273e-009) class: Pos. norm. non-zero
; hwf : + 894800686536038 -29 (2.23273e-009) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111100010 #b0011001011011101000100000101000100001101010101100110)))
(assert (= y (fp #b1 #b00010000011 #b1101100001001111100111110111100100101111110000110001)))
(assert (= r (fp #b0 #b01111100010 #b0011001011011101000100000101000100001101010101100110)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
