(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5424403536716912999082751412061043083667755126953125p286 {+ 2442934174666549 286 (1.91773e+086)}
; Y = -1.18021953203750484817646793089807033538818359375p939 {- 811636617328992 939 (-5.48439e+282)}
; 1.5424403536716912999082751412061043083667755126953125p286 + -1.18021953203750484817646793089807033538818359375p939 == -1.18021953203750484817646793089807033538818359375p939
; [HW: -1.18021953203750484817646793089807033538818359375p939] 

; mpf : - 811636617328992 939
; mpfd: - 811636617328992 939 (-5.48439e+282) class: Neg. norm. non-zero
; hwf : - 811636617328992 939 (-5.48439e+282) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011101 #b1000101011011101010111101111101100001100111100110101)))
(assert (= y (fp #b1 #b11110101010 #b0010111000100010110111100000010000110011100101100000)))
(assert (= r (fp #b1 #b11110101010 #b0010111000100010110111100000010000110011100101100000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
