(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.272856271356944457551207960932515561580657958984375p494 {+ 1228835402008838 494 (6.51024e+148)}
; Y = 1.917585462947987817727835135883651673793792724609375p350 {+ 4132437549013142 350 (4.39798e+105)}
; 1.272856271356944457551207960932515561580657958984375p494 + 1.917585462947987817727835135883651673793792724609375p350 == 1.272856271356944457551207960932515561580657958984375p494
; [HW: 1.272856271356944457551207960932515561580657958984375p494] 

; mpf : + 1228835402008838 494
; mpfd: + 1228835402008838 494 (6.51024e+148) class: Pos. norm. non-zero
; hwf : + 1228835402008838 494 (6.51024e+148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101101 #b0100010111011001111010001001100111111100100100000110)))
(assert (= y (fp #b0 #b10101011101 #b1110101011100110111000011000001010100101100010010110)))
(assert (= r (fp #b0 #b10111101101 #b0100010111011001111010001001100111111100100100000110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
