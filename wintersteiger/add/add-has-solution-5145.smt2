(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7643406748045988852169330129981972277164459228515625p14 {+ 3442284378234105 14 (28907)}
; Y = 1.596379731016714931257638454553671181201934814453125p-273 {+ 2685855534378194 -273 (1.05183e-082)}
; 1.7643406748045988852169330129981972277164459228515625p14 + 1.596379731016714931257638454553671181201934814453125p-273 == 1.7643406748045988852169330129981972277164459228515625p14
; [HW: 1.7643406748045988852169330129981972277164459228515625p14] 

; mpf : + 3442284378234105 14
; mpfd: + 3442284378234105 14 (28907) class: Pos. norm. non-zero
; hwf : + 3442284378234105 14 (28907) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001101 #b1100001110101011110101001001100101001001110011111001)))
(assert (= y (fp #b0 #b01011101110 #b1001100010101100010101111001000010110110110011010010)))
(assert (= r (fp #b0 #b10000001101 #b1100001110101011110101001001100101001001110011111001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
