(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8000482799422752311357953658443875610828399658203125p640 {+ 3603097135426437 640 (8.21261e+192)}
; Y = 1.540913372223195576538046225323341786861419677734375p-931 {+ 2436057261584102 -931 (8.48892e-281)}
; 1.8000482799422752311357953658443875610828399658203125p640 + 1.540913372223195576538046225323341786861419677734375p-931 == 1.8000482799422752311357953658443875610828399658203125p640
; [HW: 1.8000482799422752311357953658443875610828399658203125p640] 

; mpf : + 3603097135426437 640
; mpfd: + 3603097135426437 640 (8.21261e+192) class: Pos. norm. non-zero
; hwf : + 3603097135426437 640 (8.21261e+192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111111 #b1100110011001111111101101100110110010010101110000101)))
(assert (= y (fp #b0 #b00001011100 #b1000101001111001010011000111101110101010111011100110)))
(assert (= r (fp #b0 #b11001111111 #b1100110011001111111101101100110110010010101110000101)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
