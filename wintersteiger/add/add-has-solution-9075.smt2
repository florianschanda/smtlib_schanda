(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.406814802213084636406392746721394360065460205078125p-819 {- 1832130991655650 -819 (-4.02412e-247)}
; Y = -1.2634623741254864537353341802372597157955169677734375p42 {- 1186529049937687 42 (-5.55677e+012)}
; -1.406814802213084636406392746721394360065460205078125p-819 + -1.2634623741254864537353341802372597157955169677734375p42 == -1.2634623741254864537353341802372597157955169677734375p42
; [HW: -1.2634623741254864537353341802372597157955169677734375p42] 

; mpf : - 1186529049937687 42
; mpfd: - 1186529049937687 42 (-5.55677e+012) class: Neg. norm. non-zero
; hwf : - 1186529049937687 42 (-5.55677e+012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001100 #b0110100000100101000000111100111100001000101011100010)))
(assert (= y (fp #b1 #b10000101001 #b0100001101110010010001010010100010011000011100010111)))
(assert (= r (fp #b1 #b10000101001 #b0100001101110010010001010010100010011000011100010111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
