(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.851996730413690617211841527023352682590484619140625p-1013 {- 3837052157611978 -1013 (-2.10986e-305)}
; Y = 1.8524315023933033419467619751230813562870025634765625p633 {+ 3839010196537353 633 (6.60282e+190)}
; -1.851996730413690617211841527023352682590484619140625p-1013 + 1.8524315023933033419467619751230813562870025634765625p633 == 1.8524315023933033419467619751230813562870025634765625p633
; [HW: 1.8524315023933033419467619751230813562870025634765625p633] 

; mpf : + 3839010196537353 633
; mpfd: + 3839010196537353 633 (6.60282e+190) class: Pos. norm. non-zero
; hwf : + 3839010196537353 633 (6.60282e+190) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001010 #b1101101000011100011101010010110101101100111111001010)))
(assert (= y (fp #b0 #b11001111000 #b1101101000111000111100110111000011011100000000001001)))
(assert (= r (fp #b0 #b11001111000 #b1101101000111000111100110111000011011100000000001001)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
