(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1307372877973407288010321281035430729389190673828125p-145 {+ 588788400607533 -145 (2.5352e-044)}
; Y = -0.49452310979084046493881032802164554595947265625p-1022 {- 2227134092980128 -1023 (-1.10035e-308)}
; 1.1307372877973407288010321281035430729389190673828125p-145 + -0.49452310979084046493881032802164554595947265625p-1022 == 1.1307372877973407288010321281035430729389190673828125p-145
; [HW: 1.1307372877973407288010321281035430729389190673828125p-145] 

; mpf : + 588788400607533 -145
; mpfd: + 588788400607533 -145 (2.5352e-044) class: Pos. norm. non-zero
; hwf : + 588788400607533 -145 (2.5352e-044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101110 #b0010000101110111111111111011011101110101000100101101)))
(assert (= y (fp #b1 #b00000000000 #b0111111010011001000100010000011110101010111110100000)))
(assert (= r (fp #b0 #b01101101110 #b0010000101110111111111111011011101110101000100101101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
