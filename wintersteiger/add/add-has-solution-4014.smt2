(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3717668249597922969229557565995492041110992431640625p-251 {+ 1674288934357633 -251 (3.79098e-076)}
; Y = -1.88340205171042196496955511975102126598358154296875p-248 {- 3978489150901388 -248 (-4.16394e-075)}
; 1.3717668249597922969229557565995492041110992431640625p-251 + -1.88340205171042196496955511975102126598358154296875p-248 == -1.7119311985904477335651563407736830413341522216796875p-248
; [HW: -1.7119311985904477335651563407736830413341522216796875p-248] 

; mpf : - 3206253080685371 -248
; mpfd: - 3206253080685371 -248 (-3.78484e-075) class: Neg. norm. non-zero
; hwf : - 3206253080685371 -248 (-3.78484e-075) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000100 #b0101111100101100000111000101001011110000101010000001)))
(assert (= y (fp #b1 #b01100000111 #b1110001000100110101000110000100101010000110010001100)))
(assert (= r (fp #b1 #b01100000111 #b1011011001000001000111110111111011110010101100111011)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
