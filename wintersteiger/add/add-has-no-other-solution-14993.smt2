(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6795151472531275604893608033307828009128570556640625p-973 {+ 3060264163961793 -973 (2.10377e-293)}
; Y = 1.5688560363070165326604410438449122011661529541015625p672 {+ 2561899833139737 672 (3.07426e+202)}
; 1.6795151472531275604893608033307828009128570556640625p-973 + 1.5688560363070165326604410438449122011661529541015625p672 == 1.568856036307016754705045968876220285892486572265625p672
; [HW: 1.568856036307016754705045968876220285892486572265625p672] 

; mpf : + 2561899833139738 672
; mpfd: + 2561899833139738 672 (3.07426e+202) class: Pos. norm. non-zero
; hwf : + 2561899833139738 672 (3.07426e+202) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110010 #b1010110111110100101101000110011010010110101111000001)))
(assert (= y (fp #b0 #b11010011111 #b1001000110100000100011001001100000010010001000011001)))
(assert (= r (fp #b0 #b11010011111 #b1001000110100000100011001001100000010010001000011010)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
