(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.073767066880872533829460735432803630828857421875p-1014 {- 332217334916912 -1014 (-6.11638e-306)}
; Y = -1.5685263672617197894254559287219308316707611083984375p298 {- 2560415135750183 298 (-7.98786e+089)}
; -1.073767066880872533829460735432803630828857421875p-1014 + -1.5685263672617197894254559287219308316707611083984375p298 == -1.5685263672617200114700608537532389163970947265625p298
; [HW: -1.5685263672617200114700608537532389163970947265625p298] 

; mpf : - 2560415135750184 298
; mpfd: - 2560415135750184 298 (-7.98786e+089) class: Neg. norm. non-zero
; hwf : - 2560415135750184 298 (-7.98786e+089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001001 #b0001001011100010011001100000001111000110011100110000)))
(assert (= y (fp #b1 #b10100101001 #b1001000110001010111100011010101001001101100000100111)))
(assert (= r (fp #b1 #b10100101001 #b1001000110001010111100011010101001001101100000101000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
