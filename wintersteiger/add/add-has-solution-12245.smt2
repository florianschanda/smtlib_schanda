(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4181637173193013534699957745033316314220428466796875p230 {- 1883241961499067 230 (-2.44695e+069)}
; Y = 1.9225391617264626642480607188190333545207977294921875p-889 {+ 4154747024985987 -889 (4.6581e-268)}
; -1.4181637173193013534699957745033316314220428466796875p230 + 1.9225391617264626642480607188190333545207977294921875p-889 == -1.4181637173193013534699957745033316314220428466796875p230
; [HW: -1.4181637173193013534699957745033316314220428466796875p230] 

; mpf : - 1883241961499067 230
; mpfd: - 1883241961499067 230 (-2.44695e+069) class: Neg. norm. non-zero
; hwf : - 1883241961499067 230 (-2.44695e+069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100101 #b0110101100001100110001110000001001000010100110111011)))
(assert (= y (fp #b0 #b00010000110 #b1110110000101011100001101100100011100100111110000011)))
(assert (= r (fp #b1 #b10011100101 #b0110101100001100110001110000001001000010100110111011)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
