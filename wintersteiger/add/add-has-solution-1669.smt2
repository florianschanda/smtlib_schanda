(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3023274064467724731031239571166224777698516845703125p419 {+ 1361561595017573 419 (1.76315e+126)}
; Y = -1.870011774559519945881902458495460450649261474609375p183 {- 3918184703714198 183 (-2.29263e+055)}
; 1.3023274064467724731031239571166224777698516845703125p419 + -1.870011774559519945881902458495460450649261474609375p183 == 1.3023274064467724731031239571166224777698516845703125p419
; [HW: 1.3023274064467724731031239571166224777698516845703125p419] 

; mpf : + 1361561595017573 419
; mpfd: + 1361561595017573 419 (1.76315e+126) class: Pos. norm. non-zero
; hwf : + 1361561595017573 419 (1.76315e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100010 #b0100110101100101010101000011001101011111100101100101)))
(assert (= y (fp #b1 #b10010110110 #b1101111010111001000101110111011011011110001110010110)))
(assert (= r (fp #b0 #b10110100010 #b0100110101100101010101000011001101011111100101100101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
