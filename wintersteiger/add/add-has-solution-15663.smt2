(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.156353192732332058056954338098876178264617919921875p-794 {+ 704152180527518 -794 (1.10987e-239)}
; Y = 1.0889226180296807111602674922323785722255706787109375p-358 {+ 400471869423279 -358 (1.85464e-108)}
; 1.156353192732332058056954338098876178264617919921875p-794 + 1.0889226180296807111602674922323785722255706787109375p-358 == 1.0889226180296807111602674922323785722255706787109375p-358
; [HW: 1.0889226180296807111602674922323785722255706787109375p-358] 

; mpf : + 400471869423279 -358
; mpfd: + 400471869423279 -358 (1.85464e-108) class: Pos. norm. non-zero
; hwf : + 400471869423279 -358 (1.85464e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100101 #b0010100000000110110000110100100101101001000110011110)))
(assert (= y (fp #b0 #b01010011001 #b0001011011000011101000011111100001001111111010101111)))
(assert (= r (fp #b0 #b01010011001 #b0001011011000011101000011111100001001111111010101111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
