(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.41398520920004244771917001344263553619384765625p475 {- 1864423633890208 475 (-1.37941e+143)}
; Y = -1.8624674583273852501719147767289541661739349365234375p996 {- 3884208123942391 996 (-1.24728e+300)}
; -1.41398520920004244771917001344263553619384765625p475 + -1.8624674583273852501719147767289541661739349365234375p996 == -1.8624674583273852501719147767289541661739349365234375p996
; [HW: -1.8624674583273852501719147767289541661739349365234375p996] 

; mpf : - 3884208123942391 996
; mpfd: - 3884208123942391 996 (-1.24728e+300) class: Neg. norm. non-zero
; hwf : - 3884208123942391 996 (-1.24728e+300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011010 #b0110100111111010111011110100011010001010101110100000)))
(assert (= y (fp #b1 #b11111100011 #b1101110011001010101010101101011101100001010111110111)))
(assert (= r (fp #b1 #b11111100011 #b1101110011001010101010101101011101100001010111110111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
