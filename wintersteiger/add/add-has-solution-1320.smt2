(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.120203485050768943409593703108839690685272216796875p557 {+ 541348370483278 557 (5.28451e+167)}
; Y = -1.7845381251676297740260679347557015717029571533203125p-217 {- 3533245608162885 -217 (-8.4726e-066)}
; 1.120203485050768943409593703108839690685272216796875p557 + -1.7845381251676297740260679347557015717029571533203125p-217 == 1.120203485050768943409593703108839690685272216796875p557
; [HW: 1.120203485050768943409593703108839690685272216796875p557] 

; mpf : + 541348370483278 557
; mpfd: + 541348370483278 557 (5.28451e+167) class: Pos. norm. non-zero
; hwf : + 541348370483278 557 (5.28451e+167) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101100 #b0001111011000101101001111101010100101000100001001110)))
(assert (= y (fp #b1 #b01100100110 #b1100100011010111011111011001011000001111011001000101)))
(assert (= r (fp #b0 #b11000101100 #b0001111011000101101001111101010100101000100001001110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
