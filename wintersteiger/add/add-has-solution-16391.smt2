(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.110776229958565952671278864727355539798736572265625p1000 {+ 498891787962906 1000 (1.19021e+301)}
; Y = -1.1271526104544389301764795163762755692005157470703125p628 {- 572644449061797 628 (-1.25551e+189)}
; 1.110776229958565952671278864727355539798736572265625p1000 + -1.1271526104544389301764795163762755692005157470703125p628 == 1.110776229958565952671278864727355539798736572265625p1000
; [HW: 1.110776229958565952671278864727355539798736572265625p1000] 

; mpf : + 498891787962906 1000
; mpfd: + 498891787962906 1000 (1.19021e+301) class: Pos. norm. non-zero
; hwf : + 498891787962906 1000 (1.19021e+301) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100111 #b0001110001011011110101001011110011011000101000011010)))
(assert (= y (fp #b1 #b11001110011 #b0010000010001101000100101100111110000000101110100101)))
(assert (= r (fp #b0 #b11111100111 #b0001110001011011110101001011110011011000101000011010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
