(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2986695553109346423781289558974094688892364501953125p-1015 {+ 1345088098005237 -1015 (3.69873e-306)}
; Y = -0.453873553043876665213929300080053508281707763671875p-1022 {- 2044064764361726 -1023 (-1.0099e-308)}
; 1.2986695553109346423781289558974094688892364501953125p-1015 + -0.453873553043876665213929300080053508281707763671875p-1022 == 1.2951236681777793524616981812869198620319366455078125p-1015
; [HW: 1.2951236681777793524616981812869198620319366455078125p-1015] 

; mpf : + 1329118842033661 -1015
; mpfd: + 1329118842033661 -1015 (3.68863e-306) class: Pos. norm. non-zero
; hwf : + 1329118842033661 -1015 (3.68863e-306) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000001000 #b0100110001110101100110111010010001011111000011110101)))
(assert (= y (fp #b1 #b00000000000 #b0111010000110001000011101010001011010111101111111110)))
(assert (= r (fp #b0 #b00000001000 #b0100101110001101001110011000011100011001010111111101)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
