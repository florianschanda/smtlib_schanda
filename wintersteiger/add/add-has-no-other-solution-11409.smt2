(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.259661247134181483176007532165385782718658447265625p750 {+ 1169410295836058 750 (7.4602e+225)}
; Y = 1.2666391112872312785242456811829470098018646240234375p-211 {+ 1200835802235575 -211 (3.84879e-064)}
; 1.259661247134181483176007532165385782718658447265625p750 + 1.2666391112872312785242456811829470098018646240234375p-211 == 1.2596612471341817052206124571966938674449920654296875p750
; [HW: 1.2596612471341817052206124571966938674449920654296875p750] 

; mpf : + 1169410295836059 750
; mpfd: + 1169410295836059 750 (7.4602e+225) class: Pos. norm. non-zero
; hwf : + 1169410295836059 750 (7.4602e+225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101101 #b0100001001111001001010001101010001111010110110011010)))
(assert (= y (fp #b0 #b01100101100 #b0100010001000010011101011111011011010000001010110111)))
(assert (= r (fp #b0 #b11011101101 #b0100001001111001001010001101010001111010110110011011)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
