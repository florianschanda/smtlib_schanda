(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.187460076023410859846762832603417336940765380859375p-766 {- 844245128525878 -766 (-3.05944e-231)}
; Y = 1.6459034259440741276847575136343948543071746826171875p800 {+ 2908890428399059 800 (1.09749e+241)}
; -1.187460076023410859846762832603417336940765380859375p-766 + 1.6459034259440741276847575136343948543071746826171875p800 == 1.6459034259440741276847575136343948543071746826171875p800
; [HW: 1.6459034259440741276847575136343948543071746826171875p800] 

; mpf : + 2908890428399059 800
; mpfd: + 2908890428399059 800 (1.09749e+241) class: Pos. norm. non-zero
; hwf : + 2908890428399059 800 (1.09749e+241) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000001 #b0010111111111101011000100010111111010011100000110110)))
(assert (= y (fp #b0 #b11100011111 #b1010010101011001111011010100101011001101110111010011)))
(assert (= r (fp #b0 #b11100011111 #b1010010101011001111011010100101011001101110111010011)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
