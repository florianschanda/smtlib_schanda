(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0299776013086543446917175970156677067279815673828125p-203 {- 135007114083117 -203 (-8.01196e-062)}
; Y = -1.775034686009906881309916570899076759815216064453125p390 {- 3490445923113426 390 (-4.47616e+117)}
; -1.0299776013086543446917175970156677067279815673828125p-203 + -1.775034686009906881309916570899076759815216064453125p390 == -1.775034686009906881309916570899076759815216064453125p390
; [HW: -1.775034686009906881309916570899076759815216064453125p390] 

; mpf : - 3490445923113426 390
; mpfd: - 3490445923113426 390 (-4.47616e+117) class: Neg. norm. non-zero
; hwf : - 3490445923113426 390 (-4.47616e+117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100110100 #b0000011110101100100111001011000100111011101100101101)))
(assert (= y (fp #b1 #b10110000101 #b1100011001101000101011000101010110101101100111010010)))
(assert (= r (fp #b1 #b10110000101 #b1100011001101000101011000101010110101101100111010010)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
