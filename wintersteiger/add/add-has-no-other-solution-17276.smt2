(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.657421861335034662943144212476909160614013671875p-302 {- 2960764849733680 -302 (-2.03411e-091)}
; Y = 1.50834955900231904024622053839266300201416015625p424 {+ 2289402884496800 424 (6.53462e+127)}
; -1.657421861335034662943144212476909160614013671875p-302 + 1.50834955900231904024622053839266300201416015625p424 == 1.5083495590023188182016156133613549172878265380859375p424
; [HW: 1.5083495590023188182016156133613549172878265380859375p424] 

; mpf : + 2289402884496799 424
; mpfd: + 2289402884496799 424 (6.53462e+127) class: Pos. norm. non-zero
; hwf : + 2289402884496799 424 (6.53462e+127) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010001 #b1010100001001100110011001001001000011100000000110000)))
(assert (= y (fp #b0 #b10110100111 #b1000001000100011001100100101101011011001110110100000)))
(assert (= r (fp #b0 #b10110100111 #b1000001000100011001100100101101011011001110110011111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
