(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.12260556855988635760468241642229259014129638671875p-768 {+ 552166392879852 -768 (7.23087e-232)}
; Y = -1.8501944498749123280134654123685322701930999755859375p-279 {- 3828935407649119 -279 (-1.9048e-084)}
; 1.12260556855988635760468241642229259014129638671875p-768 + -1.8501944498749123280134654123685322701930999755859375p-279 == -1.8501944498749123280134654123685322701930999755859375p-279
; [HW: -1.8501944498749123280134654123685322701930999755859375p-279] 

; mpf : - 3828935407649119 -279
; mpfd: - 3828935407649119 -279 (-1.9048e-084) class: Neg. norm. non-zero
; hwf : - 3828935407649119 -279 (-1.9048e-084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111111 #b0001111101100011000101000001101101000101101011101100)))
(assert (= y (fp #b1 #b01011101000 #b1101100110100110010101111110110101110100000101011111)))
(assert (= r (fp #b1 #b01011101000 #b1101100110100110010101111110110101110100000101011111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
