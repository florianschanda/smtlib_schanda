(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 0.1789859135704252590670648714876733720302581787109375p-1022 {+ 806080893660335 -1023 (3.98257e-309)}
; Y = 1.466318815562306809852088917978107929229736328125p-703 {+ 2100113244002256 -703 (3.48451e-212)}
; 0.1789859135704252590670648714876733720302581787109375p-1022 + 1.466318815562306809852088917978107929229736328125p-703 == 1.4663188155623070318966938430094160139560699462890625p-703
; [HW: 1.4663188155623070318966938430094160139560699462890625p-703] 

; mpf : + 2100113244002257 -703
; mpfd: + 2100113244002257 -703 (3.48451e-212) class: Pos. norm. non-zero
; hwf : + 2100113244002257 -703 (3.48451e-212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0010110111010010000001010101010100111010110010101111)))
(assert (= y (fp #b0 #b00101000000 #b0111011101100000101010110111111001011001011111010000)))
(assert (= r (fp #b0 #b00101000000 #b0111011101100000101010110111111001011001011111010001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
