(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0675486846510258143183591528213582932949066162109375p911 {- 304212231023727 911 (-1.84805e+274)}
; Y = -1.8761862027137008457344791167997755110263824462890625p595 {- 3945991856048593 595 (-2.43289e+179)}
; -1.0675486846510258143183591528213582932949066162109375p911 + -1.8761862027137008457344791167997755110263824462890625p595 == -1.067548684651026036362964077852666378021240234375p911
; [HW: -1.067548684651026036362964077852666378021240234375p911] 

; mpf : - 304212231023728 911
; mpfd: - 304212231023728 911 (-1.84805e+274) class: Neg. norm. non-zero
; hwf : - 304212231023728 911 (-1.84805e+274) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001110 #b0001000101001010110111101101111101110110110001101111)))
(assert (= y (fp #b1 #b11001010010 #b1110000001001101101111010010110111011100100111010001)))
(assert (= r (fp #b1 #b11110001110 #b0001000101001010110111101101111101110110110001110000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
