(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.835433772598999979663858539424836635589599609375p-273 {- 3762459226969584 -273 (-1.20934e-082)}
; Y = -1.598100637128497591987752457498572766780853271484375p-569 {- 2693605806501958 -569 (-8.27059e-172)}
; -1.835433772598999979663858539424836635589599609375p-273 + -1.598100637128497591987752457498572766780853271484375p-569 == -1.835433772598999979663858539424836635589599609375p-273
; [HW: -1.835433772598999979663858539424836635589599609375p-273] 

; mpf : - 3762459226969584 -273
; mpfd: - 3762459226969584 -273 (-1.20934e-082) class: Neg. norm. non-zero
; hwf : - 3762459226969584 -273 (-1.20934e-082) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101110 #b1101010111011110111111001101101101001001010111110000)))
(assert (= y (fp #b1 #b00111000110 #b1001100100011101000111111001010000101111000001000110)))
(assert (= r (fp #b1 #b01011101110 #b1101010111011110111111001101101101001001010111110000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
