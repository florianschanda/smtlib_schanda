(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1799705637685089509858471501502208411693572998046875p636 {+ 810515363925515 636 (3.36472e+191)}
; Y = -1.4399464794192635697100968172890134155750274658203125p-143 {- 1981342800775557 -143 (-1.29139e-043)}
; 1.1799705637685089509858471501502208411693572998046875p636 + -1.4399464794192635697100968172890134155750274658203125p-143 == 1.1799705637685089509858471501502208411693572998046875p636
; [HW: 1.1799705637685089509858471501502208411693572998046875p636] 

; mpf : + 810515363925515 636
; mpfd: + 810515363925515 636 (3.36472e+191) class: Pos. norm. non-zero
; hwf : + 810515363925515 636 (3.36472e+191) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111011 #b0010111000010010100011010000010110100000111000001011)))
(assert (= y (fp #b1 #b01101110000 #b0111000010100000010101010001110100011000100110000101)))
(assert (= r (fp #b0 #b11001111011 #b0010111000010010100011010000010110100000111000001011)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
