(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.764157896489016774665969933266751468181610107421875p445 {+ 3441461217880158 445 (1.60282e+134)}
; Y = -1.664414849496406390017000376246869564056396484375p905 {- 2992258468611440 905 (-4.50202e+272)}
; 1.764157896489016774665969933266751468181610107421875p445 + -1.664414849496406390017000376246869564056396484375p905 == -1.664414849496406390017000376246869564056396484375p905
; [HW: -1.664414849496406390017000376246869564056396484375p905] 

; mpf : - 2992258468611440 905
; mpfd: - 2992258468611440 905 (-4.50202e+272) class: Neg. norm. non-zero
; hwf : - 2992258468611440 905 (-4.50202e+272) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111100 #b1100001110011111110110100001011001100110100001011110)))
(assert (= y (fp #b1 #b11110001000 #b1010101000010111000101110111000110010000010101110000)))
(assert (= r (fp #b1 #b11110001000 #b1010101000010111000101110111000110010000010101110000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
