(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.793709359566568739552394617930985987186431884765625p501 {+ 3574549175984474 501 (1.1743e+151)}
; Y = 1.6001330609501602797450914295041002333164215087890625p509 {+ 2702759029667857 509 (2.68178e+153)}
; 1.793709359566568739552394617930985987186431884765625p501 + 1.6001330609501602797450914295041002333164215087890625p509 == 1.6071397381359673328660164770553819835186004638671875p509
; [HW: 1.6071397381359673328660164770553819835186004638671875p509] 

; mpf : + 2734314298430963 509
; mpfd: + 2734314298430963 509 (2.69353e+153) class: Pos. norm. non-zero
; hwf : + 2734314298430963 509 (2.69353e+153) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110100 #b1100101100110000100010010101110111011110000101011010)))
(assert (= y (fp #b0 #b10111111100 #b1001100110100010010100011111111000000111100000010001)))
(assert (= r (fp #b0 #b10111111100 #b1001101101101101100000101000011101100101010111110011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
