(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.057136158008218362880370477796532213687896728515625p977 {+ 257318379915194 977 (1.35032e+294)}
; Y = -1.606000155372293125566329763387329876422882080078125p322 {- 2729182073921122 322 (-1.37216e+097)}
; 1.057136158008218362880370477796532213687896728515625p977 + -1.606000155372293125566329763387329876422882080078125p322 == 1.0571361580082181408357655527652241289615631103515625p977
; [HW: 1.0571361580082181408357655527652241289615631103515625p977] 

; mpf : + 257318379915193 977
; mpfd: + 257318379915193 977 (1.35032e+294) class: Pos. norm. non-zero
; hwf : + 257318379915193 977 (1.35032e+294) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010000 #b0000111010100000011110011010101000010000011110111010)))
(assert (= y (fp #b1 #b10101000001 #b1001101100100010110100111000000010110001111001100010)))
(assert (= r (fp #b0 #b11111010000 #b0000111010100000011110011010101000010000011110111001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
