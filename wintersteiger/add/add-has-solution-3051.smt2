(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3607846469696698310514193508424796164035797119140625p-47 {+ 1624829601653601 -47 (9.66896e-015)}
; Y = -1.3125333629630848708558232829091139137744903564453125p-350 {- 1407525136981397 -350 (-5.72284e-106)}
; 1.3607846469696698310514193508424796164035797119140625p-47 + -1.3125333629630848708558232829091139137744903564453125p-350 == 1.36078464696966960900681442581117153167724609375p-47
; [HW: 1.36078464696966960900681442581117153167724609375p-47] 

; mpf : + 1624829601653600 -47
; mpfd: + 1624829601653600 -47 (9.66896e-015) class: Pos. norm. non-zero
; hwf : + 1624829601653600 -47 (9.66896e-015) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010000 #b0101110001011100011000011111001110100010001101100001)))
(assert (= y (fp #b1 #b01010100001 #b0101000000000010001011111011110011010101110110010101)))
(assert (= r (fp #b0 #b01111010000 #b0101110001011100011000011111001110100010001101100000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
