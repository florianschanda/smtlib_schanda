(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3157633182088053214187084449804387986660003662109375p804 {+ 1422071562222447 804 (1.40376e+242)}
; Y = -1.84816956345264937766614821157418191432952880859375p-549 {- 3819816129912348 -549 (-1.00294e-165)}
; 1.3157633182088053214187084449804387986660003662109375p804 + -1.84816956345264937766614821157418191432952880859375p-549 == 1.315763318208805099374103519949130713939666748046875p804
; [HW: 1.315763318208805099374103519949130713939666748046875p804] 

; mpf : + 1422071562222446 804
; mpfd: + 1422071562222446 804 (1.40376e+242) class: Pos. norm. non-zero
; hwf : + 1422071562222446 804 (1.40376e+242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100011 #b0101000011010101110111010110010011111011101101101111)))
(assert (= y (fp #b1 #b00111011010 #b1101100100100001101000111111100001111101111000011100)))
(assert (= r (fp #b0 #b11100100011 #b0101000011010101110111010110010011111011101101101110)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
