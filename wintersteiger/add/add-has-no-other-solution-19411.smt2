(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.035397190982852322349572204984724521636962890625p44 {+ 159414776120336 44 (1.82149e+013)}
; Y = -1.4515620781678553186111457762308418750762939453125p743 {- 2033654806971400 743 (-6.71618e+223)}
; 1.035397190982852322349572204984724521636962890625p44 + -1.4515620781678553186111457762308418750762939453125p743 == -1.4515620781678550965665408511995337903499603271484375p743
; [HW: -1.4515620781678550965665408511995337903499603271484375p743] 

; mpf : - 2033654806971399 743
; mpfd: - 2033654806971399 743 (-6.71618e+223) class: Neg. norm. non-zero
; hwf : - 2033654806971399 743 (-6.71618e+223) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101011 #b0000100100001111110010100101000110100100010000010000)))
(assert (= y (fp #b1 #b11011100110 #b0111001110011001100100101000010111011000010000001000)))
(assert (= r (fp #b1 #b11011100110 #b0111001110011001100100101000010111011000010000000111)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
