(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.27620653038804743317768952692858874797821044921875p-765 {+ 1243923627332908 -765 (6.57619e-231)}
; Y = 1.463644852733102741382253952906467020511627197265625p87 {+ 2088070786001050 87 (2.26488e+026)}
; 1.27620653038804743317768952692858874797821044921875p-765 + 1.463644852733102741382253952906467020511627197265625p87 == 1.463644852733102741382253952906467020511627197265625p87
; [HW: 1.463644852733102741382253952906467020511627197265625p87] 

; mpf : + 2088070786001050 87
; mpfd: + 2088070786001050 87 (2.26488e+026) class: Pos. norm. non-zero
; hwf : + 2088070786001050 87 (2.26488e+026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000010 #b0100011010110101011110001001111011110101010100101100)))
(assert (= y (fp #b0 #b10001010110 #b0111011010110001011011011101011101110010100010011010)))
(assert (= r (fp #b0 #b10001010110 #b0111011010110001011011011101011101110010100010011010)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
