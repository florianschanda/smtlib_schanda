(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.79191002537098054148145820363424718379974365234375p-275 {+ 3566445695171708 -275 (2.95167e-083)}
; Y = 1.5639434344162610468487173420726321637630462646484375p-397 {+ 2539775441095111 -397 (4.84521e-120)}
; 1.79191002537098054148145820363424718379974365234375p-275 + 1.5639434344162610468487173420726321637630462646484375p-397 == 1.7919100253709807635260631286655552685260772705078125p-275
; [HW: 1.7919100253709807635260631286655552685260772705078125p-275] 

; mpf : + 3566445695171709 -275
; mpfd: + 3566445695171709 -275 (2.95167e-083) class: Pos. norm. non-zero
; hwf : + 3566445695171709 -275 (2.95167e-083) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101100 #b1100101010111010100111011000110001010111110001111100)))
(assert (= y (fp #b0 #b01001110010 #b1001000001011110100110001100111110011100100111000111)))
(assert (= r (fp #b0 #b01011101100 #b1100101010111010100111011000110001010111110001111101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
