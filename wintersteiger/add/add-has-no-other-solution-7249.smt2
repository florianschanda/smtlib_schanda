(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.70444591123078392769230049452744424343109130859375p405 {- 3172542343321628 405 (-1.40842e+122)}
; Y = -1.255085380638985892431946922442875802516937255859375p406 {- 1148802425193398 406 (-2.0742e+122)}
; -1.70444591123078392769230049452744424343109130859375p405 + -1.255085380638985892431946922442875802516937255859375p406 == -1.053654168127188928139048584853298962116241455078125p407
; [HW: -1.053654168127188928139048584853298962116241455078125p407] 

; mpf : - 241636891584482 407
; mpfd: - 241636891584482 407 (-3.48262e+122) class: Neg. norm. non-zero
; hwf : - 241636891584482 407 (-3.48262e+122) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010100 #b1011010001010110100100010011011010001001100000011100)))
(assert (= y (fp #b1 #b10110010101 #b0100000101001101010001101000011110001000001110110110)))
(assert (= r (fp #b1 #b10110010110 #b0000110110111100010001111001000101100110011111100010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
