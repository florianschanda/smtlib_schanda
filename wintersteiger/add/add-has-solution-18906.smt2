(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6486995832887594293225674846326000988483428955078125p140 {+ 2921483201574653 140 (2.29795e+042)}
; Y = -1.6884868934954238017809302618843503296375274658203125p823 {- 3100669316995461 823 (-9.44461e+247)}
; 1.6486995832887594293225674846326000988483428955078125p140 + -1.6884868934954238017809302618843503296375274658203125p823 == -1.68848689349542357973632533685304224491119384765625p823
; [HW: -1.68848689349542357973632533685304224491119384765625p823] 

; mpf : - 3100669316995460 823
; mpfd: - 3100669316995460 823 (-9.44461e+247) class: Neg. norm. non-zero
; hwf : - 3100669316995460 823 (-9.44461e+247) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001011 #b1010011000010001001011010000011100100111011011111101)))
(assert (= y (fp #b1 #b11100110110 #b1011000001000000101011010101001101001001100110000101)))
(assert (= r (fp #b1 #b11100110110 #b1011000001000000101011010101001101001001100110000100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
