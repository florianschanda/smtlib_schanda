(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.697199460853450858621727093122899532318115234375p319 {+ 3139907232102512 319 (1.8126e+096)}
; Y = 1.3731876014327066837239499363931827247142791748046875p-903 {+ 1680687542751627 -903 (2.03069e-272)}
; 1.697199460853450858621727093122899532318115234375p319 + 1.3731876014327066837239499363931827247142791748046875p-903 == 1.697199460853450858621727093122899532318115234375p319
; [HW: 1.697199460853450858621727093122899532318115234375p319] 

; mpf : + 3139907232102512 319
; mpfd: + 3139907232102512 319 (1.8126e+096) class: Pos. norm. non-zero
; hwf : + 3139907232102512 319 (1.8126e+096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111110 #b1011001001111011101010011111001100100111100001110000)))
(assert (= y (fp #b0 #b00001111000 #b0101111110001001001110001111111101101101000110001011)))
(assert (= r (fp #b0 #b10100111110 #b1011001001111011101010011111001100100111100001110000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
