(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.267955900782828049244699286646209657192230224609375p-263 {+ 1206766094917270 -263 (8.55491e-080)}
; Y = 1.331398894027493451375221411581151187419891357421875p-778 {+ 1492487935653214 -778 (8.37474e-235)}
; 1.267955900782828049244699286646209657192230224609375p-263 + 1.331398894027493451375221411581151187419891357421875p-778 == 1.267955900782828049244699286646209657192230224609375p-263
; [HW: 1.267955900782828049244699286646209657192230224609375p-263] 

; mpf : + 1206766094917270 -263
; mpfd: + 1206766094917270 -263 (8.55491e-080) class: Pos. norm. non-zero
; hwf : + 1206766094917270 -263 (8.55491e-080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111000 #b0100010010011000110000100000011010100001111010010110)))
(assert (= y (fp #b0 #b00011110101 #b0101010011010110100011101101001111000111010101011110)))
(assert (= r (fp #b0 #b01011111000 #b0100010010011000110000100000011010100001111010010110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
