(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1326421475446870612557859203661791980266571044921875p657 {- 597367126255875 657 (-6.77329e+197)}
; Y = -1.6688004225709522909681936653214506804943084716796875p-898 {- 3012009333875771 -898 (-7.89711e-271)}
; -1.1326421475446870612557859203661791980266571044921875p657 + -1.6688004225709522909681936653214506804943084716796875p-898 == -1.1326421475446870612557859203661791980266571044921875p657
; [HW: -1.1326421475446870612557859203661791980266571044921875p657] 

; mpf : - 597367126255875 657
; mpfd: - 597367126255875 657 (-6.77329e+197) class: Neg. norm. non-zero
; hwf : - 597367126255875 657 (-6.77329e+197) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010010000 #b0010000111110100110101011111010111000110100100000011)))
(assert (= y (fp #b1 #b00001111101 #b1010101100110110100000010010011001111110010000111011)))
(assert (= r (fp #b1 #b11010010000 #b0010000111110100110101011111010111000110100100000011)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
