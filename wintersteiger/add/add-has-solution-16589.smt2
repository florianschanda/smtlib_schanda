(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1837103383354461438869975609122775495052337646484375p893 {- 827357811271623 893 (-7.81685e+268)}
; Y = -1.3082555507555253537788075846037827432155609130859375p-613 {- 1388259583517471 -613 (-3.84862e-185)}
; -1.1837103383354461438869975609122775495052337646484375p893 + -1.3082555507555253537788075846037827432155609130859375p-613 == -1.1837103383354463659316024859435856342315673828125p893
; [HW: -1.1837103383354463659316024859435856342315673828125p893] 

; mpf : - 827357811271624 893
; mpfd: - 827357811271624 893 (-7.81685e+268) class: Neg. norm. non-zero
; hwf : - 827357811271624 893 (-7.81685e+268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111100 #b0010111100000111101001000000011100010110011111000111)))
(assert (= y (fp #b1 #b00110011010 #b0100111011101001110101011111010101001110001100011111)))
(assert (= r (fp #b1 #b11101111100 #b0010111100000111101001000000011100010110011111001000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
