(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6025714288188923628553084199666045606136322021484375p367 {+ 2713740462292871 367 (4.81755e+110)}
; Y = -1.2020982752640134716415332150063477456569671630859375p-378 {- 910169717171231 -378 (-1.95255e-114)}
; 1.6025714288188923628553084199666045606136322021484375p367 + -1.2020982752640134716415332150063477456569671630859375p-378 == 1.6025714288188923628553084199666045606136322021484375p367
; [HW: 1.6025714288188923628553084199666045606136322021484375p367] 

; mpf : + 2713740462292871 367
; mpfd: + 2713740462292871 367 (4.81755e+110) class: Pos. norm. non-zero
; hwf : + 2713740462292871 367 (4.81755e+110) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101110 #b1001101001000010000111110000010001000111111110000111)))
(assert (= y (fp #b1 #b01010000101 #b0011001110111100101101100110101011010110010000011111)))
(assert (= r (fp #b0 #b10101101110 #b1001101001000010000111110000010001000111111110000111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
