(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.19289023731318177823368387180380523204803466796875p-856 {+ 868700400887052 -856 (2.4827e-258)}
; Y = 1.8570627291195254127131875065970234572887420654296875p238 {+ 3859867387495835 238 (8.20286e+071)}
; 1.19289023731318177823368387180380523204803466796875p-856 + 1.8570627291195254127131875065970234572887420654296875p238 == 1.85706272911952563475779243162833154201507568359375p238
; [HW: 1.85706272911952563475779243162833154201507568359375p238] 

; mpf : + 3859867387495836 238
; mpfd: + 3859867387495836 238 (8.20286e+071) class: Pos. norm. non-zero
; hwf : + 3859867387495836 238 (8.20286e+071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100111 #b0011000101100001010000010010110011111010010100001100)))
(assert (= y (fp #b0 #b10011101101 #b1101101101101000011101101000100000110000010110011011)))
(assert (= r (fp #b0 #b10011101101 #b1101101101101000011101101000100000110000010110011100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
