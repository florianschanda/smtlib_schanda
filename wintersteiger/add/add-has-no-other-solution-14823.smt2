(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1833339566094520645123111535212956368923187255859375p-462 {- 825662738670687 -462 (-9.93686e-140)}
; Y = -1.442836013065459166426762749324552714824676513671875p452 {- 1994356103427838 452 (-1.67793e+136)}
; -1.1833339566094520645123111535212956368923187255859375p-462 + -1.442836013065459166426762749324552714824676513671875p452 == -1.442836013065459166426762749324552714824676513671875p452
; [HW: -1.442836013065459166426762749324552714824676513671875p452] 

; mpf : - 1994356103427838 452
; mpfd: - 1994356103427838 452 (-1.67793e+136) class: Neg. norm. non-zero
; hwf : - 1994356103427838 452 (-1.67793e+136) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110001 #b0010111011101110111110010110001111100010010001011111)))
(assert (= y (fp #b1 #b10111000011 #b0111000101011101101100110111000110011011011011111110)))
(assert (= r (fp #b1 #b10111000011 #b0111000101011101101100110111000110011011011011111110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
