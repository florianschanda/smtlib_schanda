(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7639059689808760378326724094222299754619598388671875p-1008 {- 3440326637248371 -1008 (-6.43043e-304)}
; Y = 1.7766646957357645764119524756097234785556793212890625p224 {+ 3497786834307409 224 (4.78988e+067)}
; -1.7639059689808760378326724094222299754619598388671875p-1008 + 1.7766646957357645764119524756097234785556793212890625p224 == 1.7766646957357645764119524756097234785556793212890625p224
; [HW: 1.7766646957357645764119524756097234785556793212890625p224] 

; mpf : + 3497786834307409 224
; mpfd: + 3497786834307409 224 (4.78988e+067) class: Pos. norm. non-zero
; hwf : + 3497786834307409 224 (4.78988e+067) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001111 #b1100001110001111010101110111000111111101111101110011)))
(assert (= y (fp #b0 #b10011011111 #b1100011011010011011111110101110000100100100101010001)))
(assert (= r (fp #b0 #b10011011111 #b1100011011010011011111110101110000100100100101010001)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
