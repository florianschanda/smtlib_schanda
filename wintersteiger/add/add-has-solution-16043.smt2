(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3808357347852246999053704712423495948314666748046875p-229 {+ 1715131673268107 -229 (1.60056e-069)}
; Y = -1.4793973400672513207609881646931171417236328125p-609 {- 2159013682089280 -609 (-6.96334e-184)}
; 1.3808357347852246999053704712423495948314666748046875p-229 + -1.4793973400672513207609881646931171417236328125p-609 == 1.380835734785224477860765546211041510105133056640625p-229
; [HW: 1.380835734785224477860765546211041510105133056640625p-229] 

; mpf : + 1715131673268106 -229
; mpfd: + 1715131673268106 -229 (1.60056e-069) class: Pos. norm. non-zero
; hwf : + 1715131673268106 -229 (1.60056e-069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011010 #b0110000101111110011100110110001000001100111110001011)))
(assert (= y (fp #b1 #b00110011110 #b0111101010111001110010001011100101100000110101000000)))
(assert (= r (fp #b0 #b01100011010 #b0110000101111110011100110110001000001100111110001010)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
