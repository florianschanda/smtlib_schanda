(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.435701602861017445178504203795455396175384521484375p664 {+ 1962225576289606 664 (1.09896e+200)}
; Y = -1.047028642523680108666894739144481718540191650390625p-214 {- 211798176945386 -214 (-3.97685e-065)}
; 1.435701602861017445178504203795455396175384521484375p664 + -1.047028642523680108666894739144481718540191650390625p-214 == 1.435701602861017445178504203795455396175384521484375p664
; [HW: 1.435701602861017445178504203795455396175384521484375p664] 

; mpf : + 1962225576289606 664
; mpfd: + 1962225576289606 664 (1.09896e+200) class: Pos. norm. non-zero
; hwf : + 1962225576289606 664 (1.09896e+200) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010111 #b0110111110001010001000111110011100011010010101000110)))
(assert (= y (fp #b1 #b01100101001 #b0000110000001010000100011011000110011101010011101010)))
(assert (= r (fp #b0 #b11010010111 #b0110111110001010001000111110011100011010010101000110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
