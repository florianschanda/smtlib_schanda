(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6273951793828345113723798931459896266460418701171875p134 {- 2825536696082579 134 (-3.54415e+040)}
; Y = -1.0278464974780396889997291509644128382205963134765625p-1005 {- 125409475665673 -1005 (-2.99766e-303)}
; -1.6273951793828345113723798931459896266460418701171875p134 + -1.0278464974780396889997291509644128382205963134765625p-1005 == -1.6273951793828345113723798931459896266460418701171875p134
; [HW: -1.6273951793828345113723798931459896266460418701171875p134] 

; mpf : - 2825536696082579 134
; mpfd: - 2825536696082579 134 (-3.54415e+040) class: Neg. norm. non-zero
; hwf : - 2825536696082579 134 (-3.54415e+040) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000101 #b1010000010011100111110000111000100011110000010010011)))
(assert (= y (fp #b1 #b00000010010 #b0000011100100000111100101011001111111001111100001001)))
(assert (= r (fp #b1 #b10010000101 #b1010000010011100111110000111000100011110000010010011)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
