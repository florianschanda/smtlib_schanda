(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1643335993893868529625024166307412087917327880859375p-1001 {+ 740092736974495 -1001 (5.43315e-302)}
; Y = 1.1951675756433111086352027996326796710491180419921875p-815 {+ 878956620942019 -815 (5.46994e-246)}
; 1.1643335993893868529625024166307412087917327880859375p-1001 + 1.1951675756433111086352027996326796710491180419921875p-815 == 1.1951675756433111086352027996326796710491180419921875p-815
; [HW: 1.1951675756433111086352027996326796710491180419921875p-815] 

; mpf : + 878956620942019 -815
; mpfd: + 878956620942019 -815 (5.46994e-246) class: Pos. norm. non-zero
; hwf : + 878956620942019 -815 (5.46994e-246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000010110 #b0010101000010001110001000100101100000010111010011111)))
(assert (= y (fp #b0 #b00011010000 #b0011000111110110100000001001001010100000101011000011)))
(assert (= r (fp #b0 #b00011010000 #b0011000111110110100000001001001010100000101011000011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
