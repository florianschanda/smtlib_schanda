(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.498607171092810830259622889570891857147216796875p-405 {- 2245527069937840 -405 (-1.81359e-122)}
; Y = -1.1308003309606451391999826228129677474498748779296875p-209 {- 589072321774299 -209 (-1.37441e-063)}
; -1.498607171092810830259622889570891857147216796875p-405 + -1.1308003309606451391999826228129677474498748779296875p-209 == -1.13080033096064536124458754784427583217620849609375p-209
; [HW: -1.13080033096064536124458754784427583217620849609375p-209] 

; mpf : - 589072321774300 -209
; mpfd: - 589072321774300 -209 (-1.37441e-063) class: Neg. norm. non-zero
; hwf : - 589072321774300 -209 (-1.37441e-063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101010 #b0111111110100100101110000011010101100101000010110000)))
(assert (= y (fp #b1 #b01100101110 #b0010000101111100001000010110011111001000001011011011)))
(assert (= r (fp #b1 #b01100101110 #b0010000101111100001000010110011111001000001011011100)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
