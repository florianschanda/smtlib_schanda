(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.48000642511112534549511110526509582996368408203125p186 {+ 2161756757265908 186 (1.45159e+056)}
; Y = 1.201822441849623057663620784296654164791107177734375p-353 {+ 908927473908966 -353 (6.55016e-107)}
; 1.48000642511112534549511110526509582996368408203125p186 + 1.201822441849623057663620784296654164791107177734375p-353 == 1.48000642511112534549511110526509582996368408203125p186
; [HW: 1.48000642511112534549511110526509582996368408203125p186] 

; mpf : + 2161756757265908 186
; mpfd: + 2161756757265908 186 (1.45159e+056) class: Pos. norm. non-zero
; hwf : + 2161756757265908 186 (1.45159e+056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111001 #b0111101011100001101100110111100110111000110111110100)))
(assert (= y (fp #b0 #b01010011110 #b0011001110101010101000101011001101010111110011100110)))
(assert (= r (fp #b0 #b10010111001 #b0111101011100001101100110111100110111000110111110100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
