(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5713209468918012401417172441142611205577850341796875p-133 {- 2573000803530875 -133 (-1.44303e-040)}
; Y = 1.58647623771483115007185915601439774036407470703125p-723 {+ 2641254165634164 -723 (3.5954e-218)}
; -1.5713209468918012401417172441142611205577850341796875p-133 + 1.58647623771483115007185915601439774036407470703125p-723 == -1.571320946891801018097112319082953035831451416015625p-133
; [HW: -1.571320946891801018097112319082953035831451416015625p-133] 

; mpf : - 2573000803530874 -133
; mpfd: - 2573000803530874 -133 (-1.44303e-040) class: Neg. norm. non-zero
; hwf : - 2573000803530874 -133 (-1.44303e-040) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111010 #b1001001001000010000101101110111001101011100001111011)))
(assert (= y (fp #b0 #b00100101100 #b1001011000100011010011101000010011011101110001110100)))
(assert (= r (fp #b1 #b01101111010 #b1001001001000010000101101110111001101011100001111010)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
