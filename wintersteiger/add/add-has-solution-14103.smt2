(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.220421914484828729285936788073740899562835693359375p-70 {- 992692051938166 -70 (-1.03374e-021)}
; Y = 1.378674791770173602145632685278542339801788330078125p375 {+ 1705399651110754 375 (1.06099e+113)}
; -1.220421914484828729285936788073740899562835693359375p-70 + 1.378674791770173602145632685278542339801788330078125p375 == 1.378674791770173602145632685278542339801788330078125p375
; [HW: 1.378674791770173602145632685278542339801788330078125p375] 

; mpf : + 1705399651110754 375
; mpfd: + 1705399651110754 375 (1.06099e+113) class: Pos. norm. non-zero
; hwf : + 1705399651110754 375 (1.06099e+113) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111001 #b0011100001101101100100100001001000001000101101110110)))
(assert (= y (fp #b0 #b10101110110 #b0110000011110000110101001100011001111000111101100010)))
(assert (= r (fp #b0 #b10101110110 #b0110000011110000110101001100011001111000111101100010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
