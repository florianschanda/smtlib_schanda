(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6166547011940071154612041937070898711681365966796875p590 {- 2777165882513595 590 (-6.55111e+177)}
; Y = -1.25334915840586891278007897199131548404693603515625p-990 {- 1140983175391300 -990 (-1.19778e-298)}
; -1.6166547011940071154612041937070898711681365966796875p590 + -1.25334915840586891278007897199131548404693603515625p-990 == -1.6166547011940071154612041937070898711681365966796875p590
; [HW: -1.6166547011940071154612041937070898711681365966796875p590] 

; mpf : - 2777165882513595 590
; mpfd: - 2777165882513595 590 (-6.55111e+177) class: Neg. norm. non-zero
; hwf : - 2777165882513595 590 (-6.55111e+177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001101 #b1001110111011101000101010001111010001101100010111011)))
(assert (= y (fp #b1 #b00000100001 #b0100000011011011011111011000110111010010100001000100)))
(assert (= r (fp #b1 #b11001001101 #b1001110111011101000101010001111010001101100010111011)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
