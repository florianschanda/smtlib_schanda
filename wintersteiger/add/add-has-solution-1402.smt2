(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.726668707439420469285096260136924684047698974609375p-815 {+ 3272624920045974 -815 (7.90246e-246)}
; Y = 1.051232985343415915480136391124688088893890380859375p649 {+ 230732853701686 649 (2.45565e+195)}
; 1.726668707439420469285096260136924684047698974609375p-815 + 1.051232985343415915480136391124688088893890380859375p649 == 1.0512329853434161375247413161559961736202239990234375p649
; [HW: 1.0512329853434161375247413161559961736202239990234375p649] 

; mpf : + 230732853701687 649
; mpfd: + 230732853701687 649 (2.45565e+195) class: Pos. norm. non-zero
; hwf : + 230732853701687 649 (2.45565e+195) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010000 #b1011101000000110111101011101110101111010100110010110)))
(assert (= y (fp #b0 #b11010001000 #b0000110100011101100110101101110010000110110000110110)))
(assert (= r (fp #b0 #b11010001000 #b0000110100011101100110101101110010000110110000110111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
