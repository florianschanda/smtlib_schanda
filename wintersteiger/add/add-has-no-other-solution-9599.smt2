(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.213767927548337066667727413005195558071136474609375p-960 {- 962725158850454 -960 (-1.24549e-289)}
; Y = 1.3576201993193495187739472385146655142307281494140625p-698 {+ 1610578196394785 -698 (1.03238e-210)}
; -1.213767927548337066667727413005195558071136474609375p-960 + 1.3576201993193495187739472385146655142307281494140625p-698 == 1.35762019931934929672934231348335742950439453125p-698
; [HW: 1.35762019931934929672934231348335742950439453125p-698] 

; mpf : + 1610578196394784 -698
; mpfd: + 1610578196394784 -698 (1.03238e-210) class: Pos. norm. non-zero
; hwf : + 1610578196394784 -698 (1.03238e-210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111111 #b0011011010111001011111101011000111000000111110010110)))
(assert (= y (fp #b0 #b00101000101 #b0101101110001100111111110101010001110111001100100001)))
(assert (= r (fp #b0 #b00101000101 #b0101101110001100111111110101010001110111001100100000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
