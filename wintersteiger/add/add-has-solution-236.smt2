(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.58605060064303682310082876938395202159881591796875p-489 {+ 2639337266676236 -489 (9.92314e-148)}
; Y = 1.814059250337906714634073068737052381038665771484375p-408 {+ 3666196936479302 -408 (2.74418e-123)}
; 1.58605060064303682310082876938395202159881591796875p-489 + 1.814059250337906714634073068737052381038665771484375p-408 == 1.814059250337906714634073068737052381038665771484375p-408
; [HW: 1.814059250337906714634073068737052381038665771484375p-408] 

; mpf : + 3666196936479302 -408
; mpfd: + 3666196936479302 -408 (2.74418e-123) class: Pos. norm. non-zero
; hwf : + 3666196936479302 -408 (2.74418e-123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000010110 #b1001011000000111011010011000001110010000001000001100)))
(assert (= y (fp #b0 #b01001100111 #b1101000001100110001011111110000100110101001001000110)))
(assert (= r (fp #b0 #b01001100111 #b1101000001100110001011111110000100110101001001000110)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
