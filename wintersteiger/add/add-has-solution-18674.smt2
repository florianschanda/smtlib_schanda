(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1675012864404816781416229787282645702362060546875p507 {+ 754358731197432 507 (4.89176e+152)}
; Y = 1.7874783965693856746526080314652062952518463134765625p1014 {+ 3546487413352201 1014 (3.13803e+305)}
; 1.1675012864404816781416229787282645702362060546875p507 + 1.7874783965693856746526080314652062952518463134765625p1014 == 1.787478396569385896697212956496514379978179931640625p1014
; [HW: 1.787478396569385896697212956496514379978179931640625p1014] 

; mpf : + 3546487413352202 1014
; mpfd: + 3546487413352202 1014 (3.13803e+305) class: Pos. norm. non-zero
; hwf : + 3546487413352202 1014 (3.13803e+305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111010 #b0010101011100001010111010100001101001100101111111000)))
(assert (= y (fp #b0 #b11111110101 #b1100100110011000001011110010011110010010011100001001)))
(assert (= r (fp #b0 #b11111110101 #b1100100110011000001011110010011110010010011100001010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
