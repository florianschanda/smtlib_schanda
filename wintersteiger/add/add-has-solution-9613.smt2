(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.653105568110039058637994457967579364776611328125p157 {+ 2941325993173968 157 (3.02002e+047)}
; Y = 1.1908662230102324830482984907575882971286773681640625p804 {+ 859585050826497 804 (1.27051e+242)}
; 1.653105568110039058637994457967579364776611328125p157 + 1.1908662230102324830482984907575882971286773681640625p804 == 1.1908662230102324830482984907575882971286773681640625p804
; [HW: 1.1908662230102324830482984907575882971286773681640625p804] 

; mpf : + 859585050826497 804
; mpfd: + 859585050826497 804 (1.27051e+242) class: Pos. norm. non-zero
; hwf : + 859585050826497 804 (1.27051e+242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010011100 #b1010011100110001111011010010111111011110001111010000)))
(assert (= y (fp #b0 #b11100100011 #b0011000011011100100110111101100110111101011100000001)))
(assert (= r (fp #b0 #b11100100011 #b0011000011011100100110111101100110111101011100000001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
