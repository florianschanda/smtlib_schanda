(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.719011331082638260880912639549933373928070068359375p419 {- 3238139162738934 419 (-2.32727e+126)}
; Y = -1.078727527000250319133556331507861614227294921875p495 {- 354557261262128 495 (-1.10347e+149)}
; -1.719011331082638260880912639549933373928070068359375p419 + -1.078727527000250319133556331507861614227294921875p495 == -1.078727527000250319133556331507861614227294921875p495
; [HW: -1.078727527000250319133556331507861614227294921875p495] 

; mpf : - 354557261262128 495
; mpfd: - 354557261262128 495 (-1.10347e+149) class: Neg. norm. non-zero
; hwf : - 354557261262128 495 (-1.10347e+149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100010 #b1011100000010001001000000110100001110100000011110110)))
(assert (= y (fp #b1 #b10111101110 #b0001010000100111011111001011100111000010110100110000)))
(assert (= r (fp #b1 #b10111101110 #b0001010000100111011111001011100111000010110100110000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
