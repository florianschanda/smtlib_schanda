(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3760461556364596003021461001480929553508758544921875p-152 {- 1693561326398467 -152 (-2.41031e-046)}
; Y = 1.09294635583069776885167811997234821319580078125p192 {+ 418593173484576 192 (6.86054e+057)}
; -1.3760461556364596003021461001480929553508758544921875p-152 + 1.09294635583069776885167811997234821319580078125p192 == 1.09294635583069776885167811997234821319580078125p192
; [HW: 1.09294635583069776885167811997234821319580078125p192] 

; mpf : + 418593173484576 192
; mpfd: + 418593173484576 192 (6.86054e+057) class: Pos. norm. non-zero
; hwf : + 418593173484576 192 (6.86054e+057) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100111 #b0110000001000100100011111001010000111110110000000011)))
(assert (= y (fp #b0 #b10010111111 #b0001011111001011010101010001011010010011010000100000)))
(assert (= r (fp #b0 #b10010111111 #b0001011111001011010101010001011010010011010000100000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
