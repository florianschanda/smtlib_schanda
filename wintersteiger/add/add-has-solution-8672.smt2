(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9106935380177816341529251076281070709228515625p-721 {- 4101399078465600 -721 (-1.73206e-217)}
; Y = 1.21751036595535566675607697106897830963134765625p794 {+ 979579603065760 794 (1.2685e+239)}
; -1.9106935380177816341529251076281070709228515625p-721 + 1.21751036595535566675607697106897830963134765625p794 == 1.2175103659553554447114720460376702249050140380859375p794
; [HW: 1.2175103659553554447114720460376702249050140380859375p794] 

; mpf : + 979579603065759 794
; mpfd: + 979579603065759 794 (1.2685e+239) class: Pos. norm. non-zero
; hwf : + 979579603065759 794 (1.2685e+239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101110 #b1110100100100011001101100011001001110111000001000000)))
(assert (= y (fp #b0 #b11100011001 #b0011011110101110110000100110010001010001101110100000)))
(assert (= r (fp #b0 #b11100011001 #b0011011110101110110000100110010001010001101110011111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
