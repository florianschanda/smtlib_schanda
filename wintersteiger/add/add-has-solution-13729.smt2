(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7950508625319352429272612425847910344600677490234375p711 {- 3580590768239415 711 (-1.93376e+214)}
; Y = 1.7816281831206115526811117888428270816802978515625p-49 {+ 3520140394244264 -49 (3.16481e-015)}
; -1.7950508625319352429272612425847910344600677490234375p711 + 1.7816281831206115526811117888428270816802978515625p-49 == -1.795050862531935020882656317553482949733734130859375p711
; [HW: -1.795050862531935020882656317553482949733734130859375p711] 

; mpf : - 3580590768239414 711
; mpfd: - 3580590768239414 711 (-1.93376e+214) class: Neg. norm. non-zero
; hwf : - 3580590768239414 711 (-1.93376e+214) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000110 #b1100101110001000011101000000110100111011001100110111)))
(assert (= y (fp #b0 #b01111001110 #b1100100000011000110010001101110000100010100010101000)))
(assert (= r (fp #b1 #b11011000110 #b1100101110001000011101000000110100111011001100110110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
