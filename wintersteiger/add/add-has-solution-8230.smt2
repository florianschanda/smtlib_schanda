(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.66839263897606482345281619927845895290374755859375p248 {+ 3010172839829788 248 (7.54635e+074)}
; Y = 1.91170797781266088577467598952353000640869140625p115 {+ 4105967709147808 115 (7.94092e+034)}
; 1.66839263897606482345281619927845895290374755859375p248 + 1.91170797781266088577467598952353000640869140625p115 == 1.66839263897606482345281619927845895290374755859375p248
; [HW: 1.66839263897606482345281619927845895290374755859375p248] 

; mpf : + 3010172839829788 248
; mpfd: + 3010172839829788 248 (7.54635e+074) class: Pos. norm. non-zero
; hwf : + 3010172839829788 248 (7.54635e+074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110111 #b1010101100011011110001111010110101001010000100011100)))
(assert (= y (fp #b0 #b10001110010 #b1110100101100101101100011010110000110101001010100000)))
(assert (= r (fp #b0 #b10011110111 #b1010101100011011110001111010110101001010000100011100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
