(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8554628663502150676123392258887179195880889892578125p-588 {- 3852662246124125 -588 (-1.83153e-177)}
; Y = 1.4650087416748254209863944197422824800014495849609375p-837 {+ 2094213195730767 -837 (1.59858e-252)}
; -1.8554628663502150676123392258887179195880889892578125p-588 + 1.4650087416748254209863944197422824800014495849609375p-837 == -1.85546286635021484556773430085740983486175537109375p-588
; [HW: -1.85546286635021484556773430085740983486175537109375p-588] 

; mpf : - 3852662246124124 -588
; mpfd: - 3852662246124124 -588 (-1.83153e-177) class: Neg. norm. non-zero
; hwf : - 3852662246124124 -588 (-1.83153e-177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110110011 #b1101101011111111100111010100100111101010101001011101)))
(assert (= y (fp #b0 #b00010111010 #b0111011100001010110100000001100111011000111101001111)))
(assert (= r (fp #b1 #b00110110011 #b1101101011111111100111010100100111101010101001011100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
