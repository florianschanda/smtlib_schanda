(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.900266108913360341148290899582207202911376953125p224 {+ 4054438112636496 224 (5.12311e+067)}
; Y = 1.8673458443636914427798956239712424576282501220703125p415 {+ 3906178421477669 415 (1.58006e+125)}
; 1.900266108913360341148290899582207202911376953125p224 + 1.8673458443636914427798956239712424576282501220703125p415 == 1.8673458443636914427798956239712424576282501220703125p415
; [HW: 1.8673458443636914427798956239712424576282501220703125p415] 

; mpf : + 3906178421477669 415
; mpfd: + 3906178421477669 415 (1.58006e+125) class: Pos. norm. non-zero
; hwf : + 3906178421477669 415 (1.58006e+125) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011111 #b1110011001110111110101101111011101111010111001010000)))
(assert (= y (fp #b0 #b10110011110 #b1101111000001010011000001001001111011101000100100101)))
(assert (= r (fp #b0 #b10110011110 #b1101111000001010011000001001001111011101000100100101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
