(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.106236242634848654375900878221727907657623291015625p1009 {+ 478445502743546 1009 (6.06895e+303)}
; Y = -1.638098243621953997717355377972126007080078125p-100 {- 2873739012201600 -100 (-1.29223e-030)}
; 1.106236242634848654375900878221727907657623291015625p1009 + -1.638098243621953997717355377972126007080078125p-100 == 1.1062362426348484323312959531904198229312896728515625p1009
; [HW: 1.1062362426348484323312959531904198229312896728515625p1009] 

; mpf : + 478445502743545 1009
; mpfd: + 478445502743545 1009 (6.06895e+303) class: Pos. norm. non-zero
; hwf : + 478445502743545 1009 (6.06895e+303) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111110000 #b0001101100110010010011000110001111000100001111111010)))
(assert (= y (fp #b1 #b01110011011 #b1010001101011010011010000000111111111101110010000000)))
(assert (= r (fp #b0 #b11111110000 #b0001101100110010010011000110001111000100001111111001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
