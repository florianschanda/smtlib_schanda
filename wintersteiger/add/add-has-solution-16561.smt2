(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4805905566155228569868995691649615764617919921875p699 {- 2164387451691448 699 (-3.89405e+210)}
; Y = 1.2541125065728540022291781497187912464141845703125p-1002 {+ 1144420989911688 -1002 (2.92604e-302)}
; -1.4805905566155228569868995691649615764617919921875p699 + 1.2541125065728540022291781497187912464141845703125p-1002 == -1.4805905566155228569868995691649615764617919921875p699
; [HW: -1.4805905566155228569868995691649615764617919921875p699] 

; mpf : - 2164387451691448 699
; mpfd: - 2164387451691448 699 (-3.89405e+210) class: Neg. norm. non-zero
; hwf : - 2164387451691448 699 (-3.89405e+210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111010 #b0111101100000111111110111001001101101110000110111000)))
(assert (= y (fp #b0 #b00000010101 #b0100000100001101100001000110100100111100001010001000)))
(assert (= r (fp #b1 #b11010111010 #b0111101100000111111110111001001101101110000110111000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
