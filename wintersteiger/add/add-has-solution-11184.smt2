(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2327747131031208116525021978304721415042877197265625p-797 {- 1048324111192489 -797 (-1.47903e-240)}
; Y = 1.480256098067263881290500648901797831058502197265625p945 {+ 2162881184298138 945 (4.40233e+284)}
; -1.2327747131031208116525021978304721415042877197265625p-797 + 1.480256098067263881290500648901797831058502197265625p945 == 1.480256098067263881290500648901797831058502197265625p945
; [HW: 1.480256098067263881290500648901797831058502197265625p945] 

; mpf : + 2162881184298138 945
; mpfd: + 2162881184298138 945 (4.40233e+284) class: Pos. norm. non-zero
; hwf : + 2162881184298138 945 (4.40233e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011100010 #b0011101110010111000111111010010000011101000110101001)))
(assert (= y (fp #b0 #b11110110000 #b0111101011110010000100000100101011100111010010011010)))
(assert (= r (fp #b0 #b11110110000 #b0111101011110010000100000100101011100111010010011010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
