(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.654541464306765963243606165633536875247955322265625p-910 {- 2947792694750490 -910 (-1.91153e-274)}
; Y = 1.2904691197326141338663774149608798325061798095703125p-164 {+ 1308156619390437 -164 (5.51859e-050)}
; -1.654541464306765963243606165633536875247955322265625p-910 + 1.2904691197326141338663774149608798325061798095703125p-164 == 1.29046911973261391182177248992957174777984619140625p-164
; [HW: 1.29046911973261391182177248992957174777984619140625p-164] 

; mpf : + 1308156619390436 -164
; mpfd: + 1308156619390436 -164 (5.51859e-050) class: Pos. norm. non-zero
; hwf : + 1308156619390436 -164 (5.51859e-050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110001 #b1010011110010000000001111000011100010010110100011010)))
(assert (= y (fp #b0 #b01101011011 #b0100101001011100001011110010100110111111110111100101)))
(assert (= r (fp #b0 #b01101011011 #b0100101001011100001011110010100110111111110111100100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
