(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.766647840808157621239615764352492988109588623046875p750 {- 3452674930188014 750 (-1.04628e+226)}
; Y = 1.5011356944071339025725819737999700009822845458984375p923 {+ 2256914526594023 923 (1.0644e+278)}
; -1.766647840808157621239615764352492988109588623046875p750 + 1.5011356944071339025725819737999700009822845458984375p923 == 1.5011356944071339025725819737999700009822845458984375p923
; [HW: 1.5011356944071339025725819737999700009822845458984375p923] 

; mpf : + 2256914526594023 923
; mpfd: + 2256914526594023 923 (1.0644e+278) class: Pos. norm. non-zero
; hwf : + 2256914526594023 923 (1.0644e+278) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101101 #b1100010001000011000010000110101111010001111011101110)))
(assert (= y (fp #b0 #b11110011010 #b1000000001001010011011011100101001010110001111100111)))
(assert (= r (fp #b0 #b11110011010 #b1000000001001010011011011100101001010110001111100111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
