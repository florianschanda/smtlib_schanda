(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3922069204796747587948857471928931772708892822265625p17 {+ 1766342940924393 17 (182479)}
; Y = -1.7952889053481835279768574764602817595005035400390625p-720 {- 3581662817777969 -720 (-3.2549e-217)}
; 1.3922069204796747587948857471928931772708892822265625p17 + -1.7952889053481835279768574764602817595005035400390625p-720 == 1.3922069204796747587948857471928931772708892822265625p17
; [HW: 1.3922069204796747587948857471928931772708892822265625p17] 

; mpf : + 1766342940924393 17
; mpfd: + 1766342940924393 17 (182479) class: Pos. norm. non-zero
; hwf : + 1766342940924393 17 (182479) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010000 #b0110010001100111101011000011100010111001100111101001)))
(assert (= y (fp #b1 #b00100101111 #b1100101110011000000011011011111101010111100100110001)))
(assert (= r (fp #b0 #b10000010000 #b0110010001100111101011000011100010111001100111101001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
