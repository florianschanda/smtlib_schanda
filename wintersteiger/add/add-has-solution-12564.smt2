(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4365748042731827371909503199276514351367950439453125p161 {+ 1966158125844053 161 (4.19911e+048)}
; Y = -1.1112426238311130521907443835516460239887237548828125p-135 {- 500992239233517 -135 (-2.55129e-041)}
; 1.4365748042731827371909503199276514351367950439453125p161 + -1.1112426238311130521907443835516460239887237548828125p-135 == 1.4365748042731827371909503199276514351367950439453125p161
; [HW: 1.4365748042731827371909503199276514351367950439453125p161] 

; mpf : + 1966158125844053 161
; mpfd: + 1966158125844053 161 (4.19911e+048) class: Pos. norm. non-zero
; hwf : + 1966158125844053 161 (4.19911e+048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100000 #b0110111111000011010111011100101010011100011001010101)))
(assert (= y (fp #b1 #b01101111000 #b0001110001111010011001011000011101000110100111101101)))
(assert (= r (fp #b0 #b10010100000 #b0110111111000011010111011100101010011100011001010101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
