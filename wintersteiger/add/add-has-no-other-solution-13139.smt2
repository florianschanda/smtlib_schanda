(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.07571548899598923298981389962136745452880859375p531 {+ 340992248028512 531 (7.5618e+159)}
; Y = 1.191565795686218454108029618510045111179351806640625p486 {+ 862735646069386 486 (2.38065e+146)}
; 1.07571548899598923298981389962136745452880859375p531 + 1.191565795686218454108029618510045111179351806640625p486 == 1.0757154889960229837697625043801963329315185546875p531
; [HW: 1.0757154889960229837697625043801963329315185546875p531] 

; mpf : + 340992248028664 531
; mpfd: + 340992248028664 531 (7.5618e+159) class: Pos. norm. non-zero
; hwf : + 340992248028664 531 (7.5618e+159) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010010 #b0001001101100010000101110001110100001001110101100000)))
(assert (= y (fp #b0 #b10111100101 #b0011000100001010011101001011101110000001001010001010)))
(assert (= r (fp #b0 #b11000010010 #b0001001101100010000101110001110100001001110111111000)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
