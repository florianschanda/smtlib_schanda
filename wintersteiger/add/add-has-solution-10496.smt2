(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4394416614389802244744487325078807771205902099609375p-271 {- 1979069302707663 -271 (-3.79372e-082)}
; Y = 1.9941103255279790662513050847337581217288970947265625p226 {+ 4477074891612969 226 (2.15044e+068)}
; -1.4394416614389802244744487325078807771205902099609375p-271 + 1.9941103255279790662513050847337581217288970947265625p226 == 1.9941103255279788442067001597024500370025634765625p226
; [HW: 1.9941103255279788442067001597024500370025634765625p226] 

; mpf : + 4477074891612968 226
; mpfd: + 4477074891612968 226 (2.15044e+068) class: Pos. norm. non-zero
; hwf : + 4477074891612968 226 (2.15044e+068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011110000 #b0111000001111111001111111010110001100001010111001111)))
(assert (= y (fp #b0 #b10011100001 #b1111111001111110000000111010100011000010001100101001)))
(assert (= r (fp #b0 #b10011100001 #b1111111001111110000000111010100011000010001100101000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
