(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7281021991783571678524822345934808254241943359375p-85 {+ 3279080792907288 -85 (4.46704e-026)}
; Y = 1.5009955298069475038147402301547117531299591064453125p-784 {+ 2256283281352853 -784 (1.47524e-236)}
; 1.7281021991783571678524822345934808254241943359375p-85 + 1.5009955298069475038147402301547117531299591064453125p-784 == 1.7281021991783571678524822345934808254241943359375p-85
; [HW: 1.7281021991783571678524822345934808254241943359375p-85] 

; mpf : + 3279080792907288 -85
; mpfd: + 3279080792907288 -85 (4.46704e-026) class: Pos. norm. non-zero
; hwf : + 3279080792907288 -85 (4.46704e-026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110101010 #b1011101001100100111001111101110110011101111000011000)))
(assert (= y (fp #b0 #b00011101111 #b1000000001000001001111100011011111110110100010010101)))
(assert (= r (fp #b0 #b01110101010 #b1011101001100100111001111101110110011101111000011000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
