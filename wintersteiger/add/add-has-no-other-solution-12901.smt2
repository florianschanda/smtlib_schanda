(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.88641323149990736141035085893236100673675537109375p934 {- 3992050299079260 934 (-2.73938e+281)}
; Y = -1.9259565560693212571408139410777948796749114990234375p881 {- 4170137600875063 881 (-3.10508e+265)}
; -1.88641323149990736141035085893236100673675537109375p934 + -1.9259565560693212571408139410777948796749114990234375p881 == -1.8864132314999075834549557839636690914630889892578125p934
; [HW: -1.8864132314999075834549557839636690914630889892578125p934] 

; mpf : - 3992050299079261 934
; mpfd: - 3992050299079261 934 (-2.73938e+281) class: Neg. norm. non-zero
; hwf : - 3992050299079261 934 (-2.73938e+281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110100101 #b1110001011101011111110100100000000001000101001011100)))
(assert (= y (fp #b1 #b11101110000 #b1110110100001011011111010010010111010101101000110111)))
(assert (= r (fp #b1 #b11110100101 #b1110001011101011111110100100000000001000101001011101)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
