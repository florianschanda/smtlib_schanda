(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6385036138809188077658518523094244301319122314453125p-575 {- 2875564637548821 -575 (-1.32495e-173)}
; Y = -1.881466555424843090094100261921994388103485107421875p462 {- 3969772450550878 462 (-2.24055e+139)}
; -1.6385036138809188077658518523094244301319122314453125p-575 + -1.881466555424843090094100261921994388103485107421875p462 == -1.881466555424843090094100261921994388103485107421875p462
; [HW: -1.881466555424843090094100261921994388103485107421875p462] 

; mpf : - 3969772450550878 462
; mpfd: - 3969772450550878 462 (-2.24055e+139) class: Neg. norm. non-zero
; hwf : - 3969772450550878 462 (-2.24055e+139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111000000 #b1010001101110100111110010000101111111111000100010101)))
(assert (= y (fp #b1 #b10111001101 #b1110000110100111110010101100110000010001010001011110)))
(assert (= r (fp #b1 #b10111001101 #b1110000110100111110010101100110000010001010001011110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
