(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9900484702465697228745966640417464077472686767578125p-223 {+ 4458781921681181 -223 (1.4763e-067)}
; Y = -1.6261785631404990226656082086265087127685546875p368 {- 2820057543626944 368 (-9.77702e+110)}
; 1.9900484702465697228745966640417464077472686767578125p-223 + -1.6261785631404990226656082086265087127685546875p368 == -1.6261785631404988006210032835952006280422210693359375p368
; [HW: -1.6261785631404988006210032835952006280422210693359375p368] 

; mpf : - 2820057543626943 368
; mpfd: - 2820057543626943 368 (-9.77702e+110) class: Neg. norm. non-zero
; hwf : - 2820057543626943 368 (-9.77702e+110) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100100000 #b1111110101110011110100010000100100101001111100011101)))
(assert (= y (fp #b1 #b10101101111 #b1010000001001101001111010000001000100101000011000000)))
(assert (= r (fp #b1 #b10101101111 #b1010000001001101001111010000001000100101000010111111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
