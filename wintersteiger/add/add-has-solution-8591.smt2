(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2702437845274097139025570868398062884807586669921875p113 {+ 1217069807296835 113 (1.3191e+034)}
; Y = 1.7664651294549711391113078207126818597316741943359375p-140 {+ 3451852071405887 -140 (1.26738e-042)}
; 1.2702437845274097139025570868398062884807586669921875p113 + 1.7664651294549711391113078207126818597316741943359375p-140 == 1.2702437845274097139025570868398062884807586669921875p113
; [HW: 1.2702437845274097139025570868398062884807586669921875p113] 

; mpf : + 1217069807296835 113
; mpfd: + 1217069807296835 113 (1.3191e+034) class: Pos. norm. non-zero
; hwf : + 1217069807296835 113 (1.3191e+034) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001110000 #b0100010100101110101100100101100001111110000101000011)))
(assert (= y (fp #b0 #b01101110011 #b1100010000110111000011110000100010001000100100111111)))
(assert (= r (fp #b0 #b10001110000 #b0100010100101110101100100101100001111110000101000011)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
