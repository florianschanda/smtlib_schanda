(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7707107341633705477335070099798031151294708251953125p834 {- 3470972575188597 834 (-2.02845e+251)}
; Y = -1.68920897427879435070963154430501163005828857421875p-657 {- 3103921279742380 -657 (-2.82473e-198)}
; -1.7707107341633705477335070099798031151294708251953125p834 + -1.68920897427879435070963154430501163005828857421875p-657 == -1.7707107341633705477335070099798031151294708251953125p834
; [HW: -1.7707107341633705477335070099798031151294708251953125p834] 

; mpf : - 3470972575188597 834
; mpfd: - 3470972575188597 834 (-2.02845e+251) class: Neg. norm. non-zero
; hwf : - 3470972575188597 834 (-2.02845e+251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000001 #b1100010101001101010011000111010111101000011001110101)))
(assert (= y (fp #b1 #b00101101110 #b1011000001101111111111111101010010100011000110101100)))
(assert (= r (fp #b1 #b11101000001 #b1100010101001101010011000111010111101000011001110101)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
