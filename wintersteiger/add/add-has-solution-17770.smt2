(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2833699323306391182342167667229659855365753173828125p-835 {+ 1276184721652269 -835 (5.60151e-252)}
; Y = 1.238296194386934612197137539624236524105072021484375p-268 {+ 1073190652244806 -268 (2.61087e-081)}
; 1.2833699323306391182342167667229659855365753173828125p-835 + 1.238296194386934612197137539624236524105072021484375p-268 == 1.238296194386934612197137539624236524105072021484375p-268
; [HW: 1.238296194386934612197137539624236524105072021484375p-268] 

; mpf : + 1073190652244806 -268
; mpfd: + 1073190652244806 -268 (2.61087e-081) class: Pos. norm. non-zero
; hwf : + 1073190652244806 -268 (2.61087e-081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111100 #b0100100010001010111011101001000000000111101000101101)))
(assert (= y (fp #b0 #b01011110011 #b0011110100000000111110101011100110100111001101000110)))
(assert (= r (fp #b0 #b01011110011 #b0011110100000000111110101011100110100111001101000110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
