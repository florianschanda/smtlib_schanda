(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9136743630006061156478835982852615416049957275390625p-651 {- 4114823520747505 -651 (-2.04805e-196)}
; Y = 1.722282910062150396157676368602551519870758056640625p733 {+ 3252873044611978 733 (7.782e+220)}
; -1.9136743630006061156478835982852615416049957275390625p-651 + 1.722282910062150396157676368602551519870758056640625p733 == 1.7222829100621501741130714435712434351444244384765625p733
; [HW: 1.7222829100621501741130714435712434351444244384765625p733] 

; mpf : + 3252873044611977 733
; mpfd: + 3252873044611977 733 (7.782e+220) class: Pos. norm. non-zero
; hwf : + 3252873044611977 733 (7.782e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101110100 #b1110100111100110100100000010010001000111111111110001)))
(assert (= y (fp #b0 #b11011011100 #b1011100011100111100010000110010100101101001110001010)))
(assert (= r (fp #b0 #b11011011100 #b1011100011100111100010000110010100101101001110001001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
