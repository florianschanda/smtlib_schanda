(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9307301955134452686735357929137535393238067626953125p817 {- 4191636161696821 817 (-1.68744e+246)}
; Y = -1.408522186472616954944214739953167736530303955078125p-366 {- 1839820366770658 -366 (-9.37099e-111)}
; -1.9307301955134452686735357929137535393238067626953125p817 + -1.408522186472616954944214739953167736530303955078125p-366 == -1.9307301955134452686735357929137535393238067626953125p817
; [HW: -1.9307301955134452686735357929137535393238067626953125p817] 

; mpf : - 4191636161696821 817
; mpfd: - 4191636161696821 817 (-1.68744e+246) class: Neg. norm. non-zero
; hwf : - 4191636161696821 817 (-1.68744e+246) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110000 #b1110111001000100010101011000011100100001010000110101)))
(assert (= y (fp #b1 #b01010010001 #b0110100010010100111010001111011010010111000111100010)))
(assert (= r (fp #b1 #b11100110000 #b1110111001000100010101011000011100100001010000110101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
