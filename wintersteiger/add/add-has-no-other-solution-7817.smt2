(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4767026772226923281294830303522758185863494873046875p-267 {+ 2146877999506635 -267 (6.22708e-081)}
; Y = 1.1303925139852710746168895639129914343357086181640625p100 {+ 587235677395969 100 (1.43294e+030)}
; 1.4767026772226923281294830303522758185863494873046875p-267 + 1.1303925139852710746168895639129914343357086181640625p100 == 1.1303925139852710746168895639129914343357086181640625p100
; [HW: 1.1303925139852710746168895639129914343357086181640625p100] 

; mpf : + 587235677395969 100
; mpfd: + 587235677395969 100 (1.43294e+030) class: Pos. norm. non-zero
; hwf : + 587235677395969 100 (1.43294e+030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110100 #b0111101000001001001011111100100010010110010011001011)))
(assert (= y (fp #b0 #b10001100011 #b0010000101100001011001110101111100110101110000000001)))
(assert (= r (fp #b0 #b10001100011 #b0010000101100001011001110101111100110101110000000001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
