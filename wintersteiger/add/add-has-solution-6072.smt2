(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5879828616281823627787161967717111110687255859375p-32 {- 2648039396528920 -32 (-3.69731e-010)}
; Y = -1.1027955917039833355630662481416948139667510986328125p-455 {- 462950188493389 -455 (-1.18535e-137)}
; -1.5879828616281823627787161967717111110687255859375p-32 + -1.1027955917039833355630662481416948139667510986328125p-455 == -1.5879828616281823627787161967717111110687255859375p-32
; [HW: -1.5879828616281823627787161967717111110687255859375p-32] 

; mpf : - 2648039396528920 -32
; mpfd: - 2648039396528920 -32 (-3.69731e-010) class: Neg. norm. non-zero
; hwf : - 2648039396528920 -32 (-3.69731e-010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111011111 #b1001011010000110000010110111100101001101001100011000)))
(assert (= y (fp #b1 #b01000111000 #b0001101001010000110011111101100010001010101001001101)))
(assert (= r (fp #b1 #b01111011111 #b1001011010000110000010110111100101001101001100011000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
