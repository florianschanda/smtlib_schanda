(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.12629569002191498583442808012478053569793701171875p758 {- 568785222521196 758 (-1.70761e+228)}
; Y = -1.0786927085751514265865580455283634364604949951171875p57 {- 354400453015827 57 (-1.55456e+017)}
; -1.12629569002191498583442808012478053569793701171875p758 + -1.0786927085751514265865580455283634364604949951171875p57 == -1.1262956900219152078790330051560886204242706298828125p758
; [HW: -1.1262956900219152078790330051560886204242706298828125p758] 

; mpf : - 568785222521197 758
; mpfd: - 568785222521197 758 (-1.70761e+228) class: Neg. norm. non-zero
; hwf : - 568785222521197 758 (-1.70761e+228) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011110101 #b0010000001010100111010100001001001000101000101101100)))
(assert (= y (fp #b1 #b10000111000 #b0001010000100101001101001001000111000011100100010011)))
(assert (= r (fp #b1 #b11011110101 #b0010000001010100111010100001001001000101000101101101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
