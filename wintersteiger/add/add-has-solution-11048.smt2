(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2008891929490410621639284727280028164386749267578125p-308 {- 904724494508061 -308 (-2.30284e-093)}
; Y = -1.9247222060721183023446201332262717187404632568359375p893 {- 4164578582687615 893 (-1.27103e+269)}
; -1.2008891929490410621639284727280028164386749267578125p-308 + -1.9247222060721183023446201332262717187404632568359375p893 == -1.9247222060721183023446201332262717187404632568359375p893
; [HW: -1.9247222060721183023446201332262717187404632568359375p893] 

; mpf : - 4164578582687615 893
; mpfd: - 4164578582687615 893 (-1.27103e+269) class: Neg. norm. non-zero
; hwf : - 4164578582687615 893 (-1.27103e+269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011001011 #b0011001101101101011110010110000111010110000000011101)))
(assert (= y (fp #b1 #b11101111100 #b1110110010111010100110000011000011110110111101111111)))
(assert (= r (fp #b1 #b11101111100 #b1110110010111010100110000011000011110110111101111111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
