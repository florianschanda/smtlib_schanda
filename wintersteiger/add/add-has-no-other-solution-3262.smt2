(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3766056763048497568746597607969306409358978271484375p-1000 {- 1696081183472135 -1000 (-1.28474e-301)}
; Y = -1.922922303500630647477009915746748447418212890625p-318 {- 4156472542137360 -318 (-3.601e-096)}
; -1.3766056763048497568746597607969306409358978271484375p-1000 + -1.922922303500630647477009915746748447418212890625p-318 == -1.922922303500630647477009915746748447418212890625p-318
; [HW: -1.922922303500630647477009915746748447418212890625p-318] 

; mpf : - 4156472542137360 -318
; mpfd: - 4156472542137360 -318 (-3.601e-096) class: Neg. norm. non-zero
; hwf : - 4156472542137360 -318 (-3.601e-096) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000010111 #b0110000001101001001110101100011100110111101000000111)))
(assert (= y (fp #b1 #b01011000001 #b1110110001000100101000101101011001001000110000010000)))
(assert (= r (fp #b1 #b01011000001 #b1110110001000100101000101101011001001000110000010000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
