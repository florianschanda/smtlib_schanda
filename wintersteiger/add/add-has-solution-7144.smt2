(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1996976071516047834819573836284689605236053466796875p450 {+ 899358069154747 450 (3.48795e+135)}
; Y = -0.2924727252246108744060393291874788701534271240234375p-1022 {- 1317180056337591 -1023 (-6.50773e-309)}
; 1.1996976071516047834819573836284689605236053466796875p450 + -0.2924727252246108744060393291874788701534271240234375p-1022 == 1.1996976071516047834819573836284689605236053466796875p450
; [HW: 1.1996976071516047834819573836284689605236053466796875p450] 

; mpf : + 899358069154747 450
; mpfd: + 899358069154747 450 (3.48795e+135) class: Pos. norm. non-zero
; hwf : + 899358069154747 450 (3.48795e+135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000001 #b0011001100011111011000011110001111001110001110111011)))
(assert (= y (fp #b1 #b00000000000 #b0100101011011111011111100001010111001111110010110111)))
(assert (= r (fp #b0 #b10111000001 #b0011001100011111011000011110001111001110001110111011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
