(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.312034860007060377284915375639684498310089111328125p-188 {- 1405280079254402 -188 (-3.34431e-057)}
; Y = 1.0383391920373499228702485197572968900203704833984375p988 {+ 172664370973095 988 (2.71628e+297)}
; -1.312034860007060377284915375639684498310089111328125p-188 + 1.0383391920373499228702485197572968900203704833984375p988 == 1.038339192037349700825643594725988805294036865234375p988
; [HW: 1.038339192037349700825643594725988805294036865234375p988] 

; mpf : + 172664370973094 988
; mpfd: + 172664370973094 988 (2.71628e+297) class: Pos. norm. non-zero
; hwf : + 172664370973094 988 (2.71628e+297) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101000011 #b0100111111100001100001000011111011110001001110000010)))
(assert (= y (fp #b0 #b11111011011 #b0000100111010000100110001110011111110100100110100111)))
(assert (= r (fp #b0 #b11111011011 #b0000100111010000100110001110011111110100100110100110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
