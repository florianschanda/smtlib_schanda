(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2526764763714623995838337577879428863525390625p710 {- 1137953684831808 710 (-6.74739e+213)}
; Y = 1.32964080224225966730955406092107295989990234375p-466 {+ 1484570194144352 -466 (6.97841e-141)}
; -1.2526764763714623995838337577879428863525390625p710 + 1.32964080224225966730955406092107295989990234375p-466 == -1.2526764763714621775392288327566348016262054443359375p710
; [HW: -1.2526764763714621775392288327566348016262054443359375p710] 

; mpf : - 1137953684831807 710
; mpfd: - 1137953684831807 710 (-6.74739e+213) class: Neg. norm. non-zero
; hwf : - 1137953684831807 710 (-6.74739e+213) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000101 #b0100000010101111011001111101001001111011111001000000)))
(assert (= y (fp #b0 #b01000101101 #b0101010001100011010101101111000100001110110001100000)))
(assert (= r (fp #b1 #b11011000101 #b0100000010101111011001111101001001111011111000111111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
