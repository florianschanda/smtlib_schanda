(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.691558315016322477930543755064718425273895263671875p-348 {- 3114501769812478 -348 (-2.95018e-105)}
; Y = 1.7623664066528459404281647948664613068103790283203125p562 {+ 3433393064921541 562 (2.66044e+169)}
; -1.691558315016322477930543755064718425273895263671875p-348 + 1.7623664066528459404281647948664613068103790283203125p562 == 1.76236640665284571838355986983515322208404541015625p562
; [HW: 1.76236640665284571838355986983515322208404541015625p562] 

; mpf : + 3433393064921540 562
; mpfd: + 3433393064921540 562 (2.66044e+169) class: Pos. norm. non-zero
; hwf : + 3433393064921540 562 (2.66044e+169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100011 #b1011000100001001111101110011101001000101100111111110)))
(assert (= y (fp #b0 #b11000110001 #b1100001100101010011100011110000000100100100111000101)))
(assert (= r (fp #b0 #b11000110001 #b1100001100101010011100011110000000100100100111000100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
