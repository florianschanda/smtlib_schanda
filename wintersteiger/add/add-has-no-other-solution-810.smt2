(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1842994663163743940259564624284394085407257080078125p789 {- 830011007827005 789 (-3.85592e+237)}
; Y = -0.0416338472546604609902942684129811823368072509765625p-1022 {- 187502178982089 -1023 (-9.26384e-310)}
; -1.1842994663163743940259564624284394085407257080078125p789 + -0.0416338472546604609902942684129811823368072509765625p-1022 == -1.1842994663163743940259564624284394085407257080078125p789
; [HW: -1.1842994663163743940259564624284394085407257080078125p789] 

; mpf : - 830011007827005 789
; mpfd: - 830011007827005 789 (-3.85592e+237) class: Neg. norm. non-zero
; hwf : - 830011007827005 789 (-3.85592e+237) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010100 #b0010111100101110001111111111010001111111110000111101)))
(assert (= y (fp #b1 #b00000000000 #b0000101010101000100001000000110001011101100011001001)))
(assert (= r (fp #b1 #b11100010100 #b0010111100101110001111111111010001111111110000111101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
