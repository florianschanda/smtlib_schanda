(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1062784660305935435786750531406141817569732666015625p571 {- 478635660012889 571 (-8.55051e+171)}
; Y = -1.55203061259377506075907149352133274078369140625p750 {- 2486124861174432 750 (-9.19173e+225)}
; -1.1062784660305935435786750531406141817569732666015625p571 + -1.55203061259377506075907149352133274078369140625p750 == -1.55203061259377506075907149352133274078369140625p750
; [HW: -1.55203061259377506075907149352133274078369140625p750] 

; mpf : - 2486124861174432 750
; mpfd: - 2486124861174432 750 (-9.19173e+225) class: Neg. norm. non-zero
; hwf : - 2486124861174432 750 (-9.19173e+225) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000111010 #b0001101100110101000100001100011111011110110101011001)))
(assert (= y (fp #b1 #b11011101101 #b1000110101010001111000001101001101111011001010100000)))
(assert (= r (fp #b1 #b11011101101 #b1000110101010001111000001101001101111011001010100000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
