(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.313216476172065494409935126896016299724578857421875p998 {- 1410601605374814 998 (-3.51781e+300)}
; Y = 1.5236405273507660496079552103765308856964111328125p891 {+ 2358267283853000 891 (2.51541e+268)}
; -1.313216476172065494409935126896016299724578857421875p998 + 1.5236405273507660496079552103765308856964111328125p891 == -1.3132164761720652723653302018647082149982452392578125p998
; [HW: -1.3132164761720652723653302018647082149982452392578125p998] 

; mpf : - 1410601605374813 998
; mpfd: - 1410601605374813 998 (-3.51781e+300) class: Neg. norm. non-zero
; hwf : - 1410601605374813 998 (-3.51781e+300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100101 #b0101000000101110111101000111100110111010001101011110)))
(assert (= y (fp #b0 #b11101111010 #b1000011000001101010011100011101111010100111011001000)))
(assert (= r (fp #b1 #b11111100101 #b0101000000101110111101000111100110111010001101011101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
