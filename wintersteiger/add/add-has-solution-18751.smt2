(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.535356104406334853962334818788804113864898681640625p1006 {- 2411029552314890 1006 (-1.05289e+303)}
; Y = 1.1717696164010085180251508063520304858684539794921875p885 {+ 773581580417155 885 (3.02265e+266)}
; -1.535356104406334853962334818788804113864898681640625p1006 + 1.1717696164010085180251508063520304858684539794921875p885 == -1.5353561044063346319177298937574960291385650634765625p1006
; [HW: -1.5353561044063346319177298937574960291385650634765625p1006] 

; mpf : - 2411029552314889 1006
; mpfd: - 2411029552314889 1006 (-1.05289e+303) class: Neg. norm. non-zero
; hwf : - 2411029552314889 1006 (-1.05289e+303) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101101 #b1000100100001101000110010000000000100011101000001010)))
(assert (= y (fp #b0 #b11101110100 #b0010101111111001000101111111010011100011100010000011)))
(assert (= r (fp #b1 #b11111101101 #b1000100100001101000110010000000000100011101000001001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
