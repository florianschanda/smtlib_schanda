(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1468409582973733140676131370128132402896881103515625p-583 {+ 661312885070777 -583 (3.62256e-176)}
; Y = 1.3517607998428677884561466271406970918178558349609375p158 {+ 1584189807095887 158 (4.939e+047)}
; 1.1468409582973733140676131370128132402896881103515625p-583 + 1.3517607998428677884561466271406970918178558349609375p158 == 1.351760799842868010500751552172005176544189453125p158
; [HW: 1.351760799842868010500751552172005176544189453125p158] 

; mpf : + 1584189807095888 158
; mpfd: + 1584189807095888 158 (4.939e+047) class: Pos. norm. non-zero
; hwf : + 1584189807095888 158 (4.939e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111000 #b0010010110010111010111100111100110011001101110111001)))
(assert (= y (fp #b0 #b10010011101 #b0101101000001100111111101110101101010111000001001111)))
(assert (= r (fp #b0 #b10010011101 #b0101101000001100111111101110101101010111000001010000)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
