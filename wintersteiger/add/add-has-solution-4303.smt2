(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.55188991027655021071041119284927845001220703125p-606 {- 2485491194271008 -606 (-5.84364e-183)}
; Y = 1.030811957037798709535536545445211231708526611328125p-286 {+ 138764718233986 -286 (8.29088e-087)}
; -1.55188991027655021071041119284927845001220703125p-606 + 1.030811957037798709535536545445211231708526611328125p-286 == 1.0308119570377984874909316204139031469821929931640625p-286
; [HW: 1.0308119570377984874909316204139031469821929931640625p-286] 

; mpf : + 138764718233985 -286
; mpfd: + 138764718233985 -286 (8.29088e-087) class: Pos. norm. non-zero
; hwf : + 138764718233985 -286 (8.29088e-087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110100001 #b1000110101001000101010000011101110100001010100100000)))
(assert (= y (fp #b0 #b01011100001 #b0000011111100011010010101101101111001101100110000010)))
(assert (= r (fp #b0 #b01011100001 #b0000011111100011010010101101101111001101100110000001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
