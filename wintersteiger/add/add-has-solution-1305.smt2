(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5636972655821617106397525276406668126583099365234375p-129 {+ 2538666795225591 -129 (2.29765e-039)}
; Y = -1.1829689720766640714799677880364470183849334716796875p40 {- 824018994464827 40 (-1.30069e+012)}
; 1.5636972655821617106397525276406668126583099365234375p-129 + -1.1829689720766640714799677880364470183849334716796875p40 == -1.182968972076663849435362863005138933658599853515625p40
; [HW: -1.182968972076663849435362863005138933658599853515625p40] 

; mpf : - 824018994464826 40
; mpfd: - 824018994464826 40 (-1.30069e+012) class: Neg. norm. non-zero
; hwf : - 824018994464826 40 (-1.30069e+012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111110 #b1001000001001110011101101100100010000101000111110111)))
(assert (= y (fp #b1 #b10000100111 #b0010111011010111000011011111011101000000100000111011)))
(assert (= r (fp #b1 #b10000100111 #b0010111011010111000011011111011101000000100000111010)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
