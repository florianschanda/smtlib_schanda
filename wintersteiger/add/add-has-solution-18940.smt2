(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.297072743890364421304184361360967159271240234375p800 {- 1337896698686576 800 (-8.6489e+240)}
; Y = 1.556403123570181179502469603903591632843017578125p716 {+ 2505816899978448 716 (5.36536e+215)}
; -1.297072743890364421304184361360967159271240234375p800 + 1.556403123570181179502469603903591632843017578125p716 == -1.297072743890364421304184361360967159271240234375p800
; [HW: -1.297072743890364421304184361360967159271240234375p800] 

; mpf : - 1337896698686576 800
; mpfd: - 1337896698686576 800 (-8.6489e+240) class: Neg. norm. non-zero
; hwf : - 1337896698686576 800 (-8.6489e+240) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100011111 #b0100110000001100111101011001011110001010110001110000)))
(assert (= y (fp #b0 #b11011001011 #b1000111001110000011011110110001100100000010011010000)))
(assert (= r (fp #b1 #b11100011111 #b0100110000001100111101011001011110001010110001110000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
