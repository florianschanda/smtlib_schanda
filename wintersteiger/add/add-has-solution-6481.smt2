(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9780421332232853703914088328019715845584869384765625p775 {- 4404710186737033 775 (-3.93081e+233)}
; Y = -1.656433575331481389270038562244735658168792724609375p-228 {- 2956314005256342 -228 (-3.84003e-069)}
; -1.9780421332232853703914088328019715845584869384765625p775 + -1.656433575331481389270038562244735658168792724609375p-228 == -1.9780421332232853703914088328019715845584869384765625p775
; [HW: -1.9780421332232853703914088328019715845584869384765625p775] 

; mpf : - 4404710186737033 775
; mpfd: - 4404710186737033 775 (-3.93081e+233) class: Neg. norm. non-zero
; hwf : - 4404710186737033 775 (-3.93081e+233) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100000110 #b1111101001100000111110000010000001001101110110001001)))
(assert (= y (fp #b1 #b01100011011 #b1010100000001100000001111110001000001011100010010110)))
(assert (= r (fp #b1 #b11100000110 #b1111101001100000111110000010000001001101110110001001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
