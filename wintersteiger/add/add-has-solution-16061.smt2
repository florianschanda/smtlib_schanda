(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1409865756482695520190873139654286205768585205078125p780 {- 634947089553789 780 (-7.25566e+234)}
; Y = -1.8861583947958491247476331409416161477565765380859375p-1013 {- 3990902616593823 -1013 (-2.14878e-305)}
; -1.1409865756482695520190873139654286205768585205078125p780 + -1.8861583947958491247476331409416161477565765380859375p-1013 == -1.1409865756482695520190873139654286205768585205078125p780
; [HW: -1.1409865756482695520190873139654286205768585205078125p780] 

; mpf : - 634947089553789 780
; mpfd: - 634947089553789 780 (-7.25566e+234) class: Neg. norm. non-zero
; hwf : - 634947089553789 780 (-7.25566e+234) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001011 #b0010010000010111101100100011101110010101100101111101)))
(assert (= y (fp #b1 #b00000001010 #b1110001011011011010001101100110010111001010110011111)))
(assert (= r (fp #b1 #b11100001011 #b0010010000010111101100100011101110010101100101111101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
