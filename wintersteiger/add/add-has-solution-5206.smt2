(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.93870176149337769544445109204389154911041259765625p96 {- 4227536903273604 96 (-1.536e+029)}
; Y = 1.339290903667904597540427857893519103527069091796875p-447 {+ 1528030387328974 -447 (3.68525e-135)}
; -1.93870176149337769544445109204389154911041259765625p96 + 1.339290903667904597540427857893519103527069091796875p-447 == -1.93870176149337769544445109204389154911041259765625p96
; [HW: -1.93870176149337769544445109204389154911041259765625p96] 

; mpf : - 4227536903273604 96
; mpfd: - 4227536903273604 96 (-1.536e+029) class: Neg. norm. non-zero
; hwf : - 4227536903273604 96 (-1.536e+029) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001011111 #b1111000001001110110000100011011001001111110010000100)))
(assert (= y (fp #b0 #b01001000000 #b0101011011011011110001001100011100010101011111001110)))
(assert (= r (fp #b1 #b10001011111 #b1111000001001110110000100011011001001111110010000100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
