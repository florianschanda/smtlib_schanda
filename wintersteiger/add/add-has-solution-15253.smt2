(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9008908522249410300020144859445281326770782470703125p356 {+ 4057251706381733 356 (2.7902e+107)}
; Y = 1.840340531775018551030598246143199503421783447265625p-854 {+ 3784557305766298 -854 (1.53208e-257)}
; 1.9008908522249410300020144859445281326770782470703125p356 + 1.840340531775018551030598246143199503421783447265625p-854 == 1.9008908522249410300020144859445281326770782470703125p356
; [HW: 1.9008908522249410300020144859445281326770782470703125p356] 

; mpf : + 4057251706381733 356
; mpfd: + 4057251706381733 356 (2.7902e+107) class: Pos. norm. non-zero
; hwf : + 4057251706381733 356 (2.7902e+107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100011 #b1110011010100000110010000110101110010010010110100101)))
(assert (= y (fp #b0 #b00010101001 #b1101011100100000100011101001110101111010000110011010)))
(assert (= r (fp #b0 #b10101100011 #b1110011010100000110010000110101110010010010110100101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
