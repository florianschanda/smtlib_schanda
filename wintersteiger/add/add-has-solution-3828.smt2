(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1312761538155893248358552227728068828582763671875p9 {+ 591215237406520 9 (579.213)}
; Y = -1.9175417062996091832616230021812953054904937744140625p-913 {- 4132240486587809 -913 (-2.76923e-275)}
; 1.1312761538155893248358552227728068828582763671875p9 + -1.9175417062996091832616230021812953054904937744140625p-913 == 1.1312761538155891027912502977414987981319427490234375p9
; [HW: 1.1312761538155891027912502977414987981319427490234375p9] 

; mpf : + 591215237406519 9
; mpfd: + 591215237406519 9 (579.213) class: Pos. norm. non-zero
; hwf : + 591215237406519 9 (579.213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001000 #b0010000110011011010100000110001101100001111100111000)))
(assert (= y (fp #b1 #b00001101110 #b1110101011100100000000110110010101000101110110100001)))
(assert (= r (fp #b0 #b10000001000 #b0010000110011011010100000110001101100001111100110111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
