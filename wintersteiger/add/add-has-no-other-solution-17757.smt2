(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2429135433266271792973611809429712593555450439453125p-810 {- 1093985343209045 -810 (-1.82031e-244)}
; Y = -1.27779401172184581270130365737713873386383056640625p-141 {- 1251073007676260 -141 (-4.58386e-043)}
; -1.2429135433266271792973611809429712593555450439453125p-810 + -1.27779401172184581270130365737713873386383056640625p-141 == -1.27779401172184581270130365737713873386383056640625p-141
; [HW: -1.27779401172184581270130365737713873386383056640625p-141] 

; mpf : - 1251073007676260 -141
; mpfd: - 1251073007676260 -141 (-4.58386e-043) class: Neg. norm. non-zero
; hwf : - 1251073007676260 -141 (-4.58386e-043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010101 #b0011111000101111100101001111110001010111111001010101)))
(assert (= y (fp #b1 #b01101110010 #b0100011100011101100000100010001101011110101101100100)))
(assert (= r (fp #b1 #b01101110010 #b0100011100011101100000100010001101011110101101100100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
