(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2400240924344798632006359184742905199527740478515625p-911 {+ 1080972413247865 -911 (7.16315e-275)}
; Y = -1.968255768524070692393479475867934525012969970703125p574 {- 4360636318324338 574 (-1.21702e+173)}
; 1.2400240924344798632006359184742905199527740478515625p-911 + -1.968255768524070692393479475867934525012969970703125p574 == -1.968255768524070692393479475867934525012969970703125p574
; [HW: -1.968255768524070692393479475867934525012969970703125p574] 

; mpf : - 4360636318324338 574
; mpfd: - 4360636318324338 574 (-1.21702e+173) class: Neg. norm. non-zero
; hwf : - 4360636318324338 574 (-1.21702e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110000 #b0011110101110010001110000000101101000010000101111001)))
(assert (= y (fp #b1 #b11000111101 #b1111011111011111100111000010101111111001011001110010)))
(assert (= r (fp #b1 #b11000111101 #b1111011111011111100111000010101111111001011001110010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
