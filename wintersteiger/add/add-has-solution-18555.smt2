(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3106289665942265632025964805507101118564605712890625p510 {+ 1398948498204241 510 (4.39317e+153)}
; Y = 1.56465583250977235962864142493344843387603759765625p27 {+ 2542983796883588 27 (2.10005e+008)}
; 1.3106289665942265632025964805507101118564605712890625p510 + 1.56465583250977235962864142493344843387603759765625p27 == 1.310628966594226785247201405582018196582794189453125p510
; [HW: 1.310628966594226785247201405582018196582794189453125p510] 

; mpf : + 1398948498204242 510
; mpfd: + 1398948498204242 510 (4.39317e+153) class: Pos. norm. non-zero
; hwf : + 1398948498204242 510 (4.39317e+153) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111101 #b0100111110000101011000010100010010110110011001010001)))
(assert (= y (fp #b0 #b10000011010 #b1001000010001101010010001101111000100000000010000100)))
(assert (= r (fp #b0 #b10111111101 #b0100111110000101011000010100010010110110011001010010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
