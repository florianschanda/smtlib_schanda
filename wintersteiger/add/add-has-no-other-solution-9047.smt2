(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1221159723060327717547579595702700316905975341796875p-80 {+ 549961447373435 -80 (9.28193e-025)}
; Y = 1.75549001780885927104236543527804315090179443359375p415 {+ 3402424562686108 415 (1.48541e+125)}
; 1.1221159723060327717547579595702700316905975341796875p-80 + 1.75549001780885927104236543527804315090179443359375p415 == 1.75549001780885927104236543527804315090179443359375p415
; [HW: 1.75549001780885927104236543527804315090179443359375p415] 

; mpf : + 3402424562686108 415
; mpfd: + 3402424562686108 415 (1.48541e+125) class: Pos. norm. non-zero
; hwf : + 3402424562686108 415 (1.48541e+125) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110101111 #b0001111101000010111111100000101101011111101001111011)))
(assert (= y (fp #b0 #b10110011110 #b1100000101100111110010110011011011110001100010011100)))
(assert (= r (fp #b0 #b10110011110 #b1100000101100111110010110011011011110001100010011100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
