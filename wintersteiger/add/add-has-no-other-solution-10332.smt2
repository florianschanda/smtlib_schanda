(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.06013138552912611345391269423998892307281494140625p-258 {+ 270807685462244 -258 (2.28887e-078)}
; Y = 1.26434538251445616197088384069502353668212890625p-856 {+ 1190505766189216 -856 (2.63142e-258)}
; 1.06013138552912611345391269423998892307281494140625p-258 + 1.26434538251445616197088384069502353668212890625p-856 == 1.06013138552912611345391269423998892307281494140625p-258
; [HW: 1.06013138552912611345391269423998892307281494140625p-258] 

; mpf : + 270807685462244 -258
; mpfd: + 270807685462244 -258 (2.28887e-078) class: Pos. norm. non-zero
; hwf : + 270807685462244 -258 (2.28887e-078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111101 #b0000111101100100110001010011111001001111100011100100)))
(assert (= y (fp #b0 #b00010100111 #b0100001110101100001000111001010010111111100010100000)))
(assert (= r (fp #b0 #b01011111101 #b0000111101100100110001010011111001001111100011100100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
