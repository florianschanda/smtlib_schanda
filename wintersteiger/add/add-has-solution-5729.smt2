(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9057006714787443346637019203626550734043121337890625p38 {- 4078913206580881 38 (-5.23835e+011)}
; Y = -1.5698085430322432642924468382261693477630615234375p428 {- 2566189542072536 428 (-1.08814e+129)}
; -1.9057006714787443346637019203626550734043121337890625p38 + -1.5698085430322432642924468382261693477630615234375p428 == -1.5698085430322432642924468382261693477630615234375p428
; [HW: -1.5698085430322432642924468382261693477630615234375p428] 

; mpf : - 2566189542072536 428
; mpfd: - 2566189542072536 428 (-1.08814e+129) class: Neg. norm. non-zero
; hwf : - 2566189542072536 428 (-1.08814e+129) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100101 #b1110011111011011111111111100101111110111011010010001)))
(assert (= y (fp #b1 #b10110101011 #b1001000111011110111110010000000101001110000011011000)))
(assert (= r (fp #b1 #b10110101011 #b1001000111011110111110010000000101001110000011011000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
