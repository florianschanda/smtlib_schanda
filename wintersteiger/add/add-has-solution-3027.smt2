(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5101065846608945353324315874488092958927154541015625p-723 {- 2297315824598041 -723 (-3.42232e-218)}
; Y = -1.6096904994312588588201151651446707546710968017578125p-813 {- 2745801906049949 -813 (-2.94684e-245)}
; -1.5101065846608945353324315874488092958927154541015625p-723 + -1.6096904994312588588201151651446707546710968017578125p-813 == -1.5101065846608945353324315874488092958927154541015625p-723
; [HW: -1.5101065846608945353324315874488092958927154541015625p-723] 

; mpf : - 2297315824598041 -723
; mpfd: - 2297315824598041 -723 (-3.42232e-218) class: Neg. norm. non-zero
; hwf : - 2297315824598041 -723 (-3.42232e-218) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101100 #b1000001010010110010110000101101010010111110000011001)))
(assert (= y (fp #b1 #b00011010010 #b1001110000010100101011010011001110111101001110011101)))
(assert (= r (fp #b1 #b00100101100 #b1000001010010110010110000101101010010111110000011001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
