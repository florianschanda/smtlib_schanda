(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2012839863225608372232500187237747013568878173828125p580 {+ 906502485797933 580 (4.75382e+174)}
; Y = -1.1462041667353515261851271134219132363796234130859375p-965 {- 658445030829343 -965 (-3.6755e-291)}
; 1.2012839863225608372232500187237747013568878173828125p580 + -1.1462041667353515261851271134219132363796234130859375p-965 == 1.2012839863225608372232500187237747013568878173828125p580
; [HW: 1.2012839863225608372232500187237747013568878173828125p580] 

; mpf : + 906502485797933 580
; mpfd: + 906502485797933 580 (4.75382e+174) class: Pos. norm. non-zero
; hwf : + 906502485797933 580 (4.75382e+174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000011 #b0011001110000111010110001110101001110110110000101101)))
(assert (= y (fp #b1 #b00000111010 #b0010010101101101101000101110001010101010110100011111)))
(assert (= r (fp #b0 #b11001000011 #b0011001110000111010110001110101001110110110000101101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
