(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.49883366956863905983254880993627011775970458984375p102 {+ 2246547128389180 102 (7.59999e+030)}
; Y = -1.17902113894246429737222570111043751239776611328125p-225 {- 806239534632724 -225 (-2.18662e-068)}
; 1.49883366956863905983254880993627011775970458984375p102 + -1.17902113894246429737222570111043751239776611328125p-225 == 1.4988336695686388377879438849049620330333709716796875p102
; [HW: 1.4988336695686388377879438849049620330333709716796875p102] 

; mpf : + 2246547128389179 102
; mpfd: + 2246547128389179 102 (7.59999e+030) class: Pos. norm. non-zero
; hwf : + 2246547128389179 102 (7.59999e+030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001100101 #b0111111110110011100100000011100011110000111000111100)))
(assert (= y (fp #b1 #b01100011110 #b0010110111010100010101000101000100001100111100010100)))
(assert (= r (fp #b0 #b10001100101 #b0111111110110011100100000011100011110000111000111011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
