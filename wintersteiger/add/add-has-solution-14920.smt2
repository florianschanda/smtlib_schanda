(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.011682035368701715327688361867330968379974365234375p426 {- 52611210133414 426 (-1.75316e+128)}
; Y = -1.4107196373196571048680425519705750048160552978515625p-349 {- 1849716805586553 -349 (-1.23019e-105)}
; -1.011682035368701715327688361867330968379974365234375p426 + -1.4107196373196571048680425519705750048160552978515625p-349 == -1.011682035368701715327688361867330968379974365234375p426
; [HW: -1.011682035368701715327688361867330968379974365234375p426] 

; mpf : - 52611210133414 426
; mpfd: - 52611210133414 426 (-1.75316e+128) class: Neg. norm. non-zero
; hwf : - 52611210133414 426 (-1.75316e+128) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110101001 #b0000001011111101100110000000011111011011111110100110)))
(assert (= y (fp #b1 #b01010100010 #b0110100100100100111011000001001000011100111001111001)))
(assert (= r (fp #b1 #b10110101001 #b0000001011111101100110000000011111011011111110100110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
