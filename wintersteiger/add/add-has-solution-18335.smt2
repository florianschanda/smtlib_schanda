(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2866203227718655544009607183397747576236724853515625p701 {- 1290823178832185 701 (-1.35356e+211)}
; Y = -1.92734713942949742460086781647987663745880126953125p950 {- 4176400231577780 950 (-1.83424e+286)}
; -1.2866203227718655544009607183397747576236724853515625p701 + -1.92734713942949742460086781647987663745880126953125p950 == -1.9273471394294976466454727415111847221851348876953125p950
; [HW: -1.9273471394294976466454727415111847221851348876953125p950] 

; mpf : - 4176400231577781 950
; mpfd: - 4176400231577781 950 (-1.83424e+286) class: Neg. norm. non-zero
; hwf : - 4176400231577781 950 (-1.83424e+286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111100 #b0100100101011111111100110001000010101100100100111001)))
(assert (= y (fp #b1 #b11110110101 #b1110110101100110100111110100001111100011100010110100)))
(assert (= r (fp #b1 #b11110110101 #b1110110101100110100111110100001111100011100010110101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
