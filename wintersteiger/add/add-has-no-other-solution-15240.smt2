(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8566422185478630435540026155649684369564056396484375p1006 {+ 3857973576241991 1006 (1.27322e+303)}
; Y = 1.7661197092041558409647450389456935226917266845703125p429 {+ 3450296436893029 429 (2.44843e+129)}
; 1.8566422185478630435540026155649684369564056396484375p1006 + 1.7661197092041558409647450389456935226917266845703125p429 == 1.8566422185478630435540026155649684369564056396484375p1006
; [HW: 1.8566422185478630435540026155649684369564056396484375p1006] 

; mpf : + 3857973576241991 1006
; mpfd: + 3857973576241991 1006 (1.27322e+303) class: Pos. norm. non-zero
; hwf : + 3857973576241991 1006 (1.27322e+303) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101101 #b1101101101001100111001111000100100001001001101000111)))
(assert (= y (fp #b0 #b10110101100 #b1100010000100000011010111101011111011010010101100101)))
(assert (= r (fp #b0 #b11111101101 #b1101101101001100111001111000100100001001001101000111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
