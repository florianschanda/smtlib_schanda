(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.854549157753058619135799744981341063976287841796875p-368 {- 3848547268426446 -368 (-3.08461e-111)}
; Y = -1.969474371991638772527721812366507947444915771484375p-799 {- 4366124420446790 -799 (-5.90723e-241)}
; -1.854549157753058619135799744981341063976287841796875p-368 + -1.969474371991638772527721812366507947444915771484375p-799 == -1.854549157753058619135799744981341063976287841796875p-368
; [HW: -1.854549157753058619135799744981341063976287841796875p-368] 

; mpf : - 3848547268426446 -368
; mpfd: - 3848547268426446 -368 (-3.08461e-111) class: Neg. norm. non-zero
; hwf : - 3848547268426446 -368 (-3.08461e-111) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010001111 #b1101101011000011101110111100110101011111101011001110)))
(assert (= y (fp #b1 #b00011100000 #b1111100000101111011110001111001000000011101001000110)))
(assert (= r (fp #b1 #b01010001111 #b1101101011000011101110111100110101011111101011001110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
