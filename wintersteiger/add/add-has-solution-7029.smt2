(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.417027677982279687540767554310150444507598876953125p-255 {+ 1878125695164178 -255 (2.44754e-077)}
; Y = -1.643419466968086606328824927913956344127655029296875p-470 {- 2897703671680398 -470 (-5.39077e-142)}
; 1.417027677982279687540767554310150444507598876953125p-255 + -1.643419466968086606328824927913956344127655029296875p-470 == 1.417027677982279687540767554310150444507598876953125p-255
; [HW: 1.417027677982279687540767554310150444507598876953125p-255] 

; mpf : + 1878125695164178 -255
; mpfd: + 1878125695164178 -255 (2.44754e-077) class: Pos. norm. non-zero
; hwf : + 1878125695164178 -255 (2.44754e-077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000000 #b0110101011000010010100110110111001110101111100010010)))
(assert (= y (fp #b1 #b01000101001 #b1010010010110111001000110110000000111100110110001110)))
(assert (= r (fp #b0 #b01100000000 #b0110101011000010010100110110111001110101111100010010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
