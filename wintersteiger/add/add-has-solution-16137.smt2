(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.285992009545895431443796042003668844699859619140625p-312 {- 1287993507621834 -312 (-1.54127e-094)}
; Y = 1.8804890567218717212227829804760403931140899658203125p943 {+ 3965370187756421 943 (1.39816e+284)}
; -1.285992009545895431443796042003668844699859619140625p-312 + 1.8804890567218717212227829804760403931140899658203125p943 == 1.8804890567218717212227829804760403931140899658203125p943
; [HW: 1.8804890567218717212227829804760403931140899658203125p943] 

; mpf : + 3965370187756421 943
; mpfd: + 3965370187756421 943 (1.39816e+284) class: Pos. norm. non-zero
; hwf : + 3965370187756421 943 (1.39816e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000111 #b0100100100110110110001011011011111101010101111001010)))
(assert (= y (fp #b0 #b11110101110 #b1110000101100111101110110001011100011011001110000101)))
(assert (= r (fp #b0 #b11110101110 #b1110000101100111101110110001011100011011001110000101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
