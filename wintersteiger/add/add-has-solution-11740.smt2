(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.609730176949589530721596020157448947429656982421875p-114 {- 2745980597706718 -114 (-7.75057e-035)}
; Y = 1.0186799142566129727782708869199268519878387451171875p580 {+ 84126854885395 580 (4.03121e+174)}
; -1.609730176949589530721596020157448947429656982421875p-114 + 1.0186799142566129727782708869199268519878387451171875p580 == 1.018679914256612750733665961888618767261505126953125p580
; [HW: 1.018679914256612750733665961888618767261505126953125p580] 

; mpf : + 84126854885394 580
; mpfd: + 84126854885394 580 (4.03121e+174) class: Pos. norm. non-zero
; hwf : + 84126854885394 580 (4.03121e+174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001101 #b1001110000010111010001101110000101100001111111011110)))
(assert (= y (fp #b0 #b11001000011 #b0000010011001000001101001111010011010011000000010011)))
(assert (= r (fp #b0 #b11001000011 #b0000010011001000001101001111010011010011000000010010)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
