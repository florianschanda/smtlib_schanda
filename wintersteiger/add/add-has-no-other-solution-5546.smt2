(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4849602855467083362128732915152795612812042236328125p831 {+ 2184066961277645 831 (2.12638e+250)}
; Y = 1.4820822162393181287143306690268218517303466796875p619 {+ 2171105289417336 619 (3.22433e+186)}
; 1.4849602855467083362128732915152795612812042236328125p831 + 1.4820822162393181287143306690268218517303466796875p619 == 1.4849602855467083362128732915152795612812042236328125p831
; [HW: 1.4849602855467083362128732915152795612812042236328125p831] 

; mpf : + 2184066961277645 831
; mpfd: + 2184066961277645 831 (2.12638e+250) class: Pos. norm. non-zero
; hwf : + 2184066961277645 831 (2.12638e+250) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111110 #b0111110000100110010110110111011001001000001011001101)))
(assert (= y (fp #b0 #b11001101010 #b0111101101101001101111010111100010111011001001111000)))
(assert (= r (fp #b0 #b11100111110 #b0111110000100110010110110111011001001000001011001101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
