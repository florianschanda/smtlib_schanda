(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.79162040130345179278492651064880192279815673828125p-980 {- 3565141344329108 -980 (-1.75328e-295)}
; Y = 1.4856600475486436696570535787031985819339752197265625p-502 {+ 2187218409168809 -502 (1.13465e-151)}
; -1.79162040130345179278492651064880192279815673828125p-980 + 1.4856600475486436696570535787031985819339752197265625p-502 == 1.4856600475486436696570535787031985819339752197265625p-502
; [HW: 1.4856600475486436696570535787031985819339752197265625p-502] 

; mpf : + 2187218409168809 -502
; mpfd: + 2187218409168809 -502 (1.13465e-151) class: Pos. norm. non-zero
; hwf : + 2187218409168809 -502 (1.13465e-151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101011 #b1100101010100111101000100111011001110001110110010100)))
(assert (= y (fp #b0 #b01000001001 #b0111110001010100001101111000010100110001111110101001)))
(assert (= r (fp #b0 #b01000001001 #b0111110001010100001101111000010100110001111110101001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
