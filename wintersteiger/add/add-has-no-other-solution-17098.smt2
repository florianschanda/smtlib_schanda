(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.991824982226238827109909834689460694789886474609375p-108 {- 4466782620370838 -108 (-6.13778e-033)}
; Y = -1.1571155694491814802660201166872866451740264892578125p-483 {- 707585620025437 -483 (-4.63328e-146)}
; -1.991824982226238827109909834689460694789886474609375p-108 + -1.1571155694491814802660201166872866451740264892578125p-483 == -1.991824982226238827109909834689460694789886474609375p-108
; [HW: -1.991824982226238827109909834689460694789886474609375p-108] 

; mpf : - 4466782620370838 -108
; mpfd: - 4466782620370838 -108 (-6.13778e-033) class: Neg. norm. non-zero
; hwf : - 4466782620370838 -108 (-6.13778e-033) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010011 #b1111110111101000001111011111011000000100011110010110)))
(assert (= y (fp #b1 #b01000011100 #b0010100000111000101110011101100001111010000001011101)))
(assert (= r (fp #b1 #b01110010011 #b1111110111101000001111011111011000000100011110010110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
