(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3576744350496792179683325230143964290618896484375p-108 {+ 1610822452409688 -108 (4.18366e-033)}
; Y = 1.731797043117591972105628883582539856433868408203125p146 {+ 3295720890695218 146 (1.54481e+044)}
; 1.3576744350496792179683325230143964290618896484375p-108 + 1.731797043117591972105628883582539856433868408203125p146 == 1.7317970431175921941502338086138479411602020263671875p146
; [HW: 1.7317970431175921941502338086138479411602020263671875p146] 

; mpf : + 3295720890695219 146
; mpfd: + 3295720890695219 146 (1.54481e+044) class: Pos. norm. non-zero
; hwf : + 3295720890695219 146 (1.54481e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010011 #b0101101110010000100011010100000100100111010101011000)))
(assert (= y (fp #b0 #b10010010001 #b1011101101010111000011010000111101111111111000110010)))
(assert (= r (fp #b0 #b10010010001 #b1011101101010111000011010000111101111111111000110011)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
