(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.488836928404295267824863913119770586490631103515625p-172 {- 2201525808606522 -172 (-2.48707e-052)}
; Y = 1.0055951030913534705035772276460193097591400146484375p-989 {+ 25198104197319 -989 (1.92202e-298)}
; -1.488836928404295267824863913119770586490631103515625p-172 + 1.0055951030913534705035772276460193097591400146484375p-989 == -1.488836928404295267824863913119770586490631103515625p-172
; [HW: -1.488836928404295267824863913119770586490631103515625p-172] 

; mpf : - 2201525808606522 -172
; mpfd: - 2201525808606522 -172 (-2.48707e-052) class: Neg. norm. non-zero
; hwf : - 2201525808606522 -172 (-2.48707e-052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101010011 #b0111110100100100011010101011110010010010110100111010)))
(assert (= y (fp #b0 #b00000100010 #b0000000101101110101011100100000011001011100011000111)))
(assert (= r (fp #b1 #b01101010011 #b0111110100100100011010101011110010010010110100111010)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
