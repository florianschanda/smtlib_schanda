(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4797785198935462513958327690488658845424652099609375p969 {- 2160730363412943 969 (-7.3835e+291)}
; Y = -1.71113065926611351841302166576497256755828857421875p-474 {- 3202647772082604 -474 (-3.50805e-143)}
; -1.4797785198935462513958327690488658845424652099609375p969 + -1.71113065926611351841302166576497256755828857421875p-474 == -1.4797785198935462513958327690488658845424652099609375p969
; [HW: -1.4797785198935462513958327690488658845424652099609375p969] 

; mpf : - 2160730363412943 969
; mpfd: - 2160730363412943 969 (-7.3835e+291) class: Neg. norm. non-zero
; hwf : - 2160730363412943 969 (-7.3835e+291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001000 #b0111101011010010110000111101110001000100000111001111)))
(assert (= y (fp #b1 #b01000100101 #b1011011000001100101010001010110010111011000110101100)))
(assert (= r (fp #b1 #b11111001000 #b0111101011010010110000111101110001000100000111001111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
