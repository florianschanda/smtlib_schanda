(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -0.0561794608031636055756052883225493133068084716796875p-1022 {- 253009798739003 -1023 (-1.25003e-309)}
; Y = -1.728709763372952235016555277979932725429534912109375p-994 {- 3281817018787670 -994 (-1.03254e-299)}
; -0.0561794608031636055756052883225493133068084716796875p-1022 + -1.728709763372952235016555277979932725429534912109375p-994 == -1.7287097635822370467195696619455702602863311767578125p-994
; [HW: -1.7287097635822370467195696619455702602863311767578125p-994] 

; mpf : - 3281817019730205 -994
; mpfd: - 3281817019730205 -994 (-1.03254e-299) class: Neg. norm. non-zero
; hwf : - 3281817019730205 -994 (-1.03254e-299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0000111001100001110001101111001011011011010000111011)))
(assert (= y (fp #b1 #b00000011101 #b1011101010001100101110010001100111110110011101010110)))
(assert (= r (fp #b1 #b00000011101 #b1011101010001100101110010001101011011100100100011101)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
