(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.839181008277218865032409667037427425384521484375p-445 {- 3779335276173680 -445 (-2.02431e-134)}
; Y = 1.4478970917964495424001825085724703967571258544921875p-208 {+ 2017149175714819 -208 (3.51964e-063)}
; -1.839181008277218865032409667037427425384521484375p-445 + 1.4478970917964495424001825085724703967571258544921875p-208 == 1.447897091796449320355577583541162312030792236328125p-208
; [HW: 1.447897091796449320355577583541162312030792236328125p-208] 

; mpf : + 2017149175714818 -208
; mpfd: + 2017149175714818 -208 (3.51964e-063) class: Pos. norm. non-zero
; hwf : + 2017149175714818 -208 (3.51964e-063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001000010 #b1101011011010100100100010000100111111001100101110000)))
(assert (= y (fp #b0 #b01100101111 #b0111001010101001011000100100000100111101010000000011)))
(assert (= r (fp #b0 #b01100101111 #b0111001010101001011000100100000100111101010000000010)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
