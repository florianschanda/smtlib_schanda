(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9876864914232108549896338445250876247882843017578125p657 {+ 4448144514732445 657 (1.18865e+198)}
; Y = 1.0444374265791898093169720596051774919033050537109375p7 {+ 200128377783343 7 (133.688)}
; 1.9876864914232108549896338445250876247882843017578125p657 + 1.0444374265791898093169720596051774919033050537109375p7 == 1.987686491423211077034238769556395709514617919921875p657
; [HW: 1.987686491423211077034238769556395709514617919921875p657] 

; mpf : + 4448144514732446 657
; mpfd: + 4448144514732446 657 (1.18865e+198) class: Pos. norm. non-zero
; hwf : + 4448144514732446 657 (1.18865e+198) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010000 #b1111110011011001000001011001101101011101000110011101)))
(assert (= y (fp #b0 #b10000000110 #b0000101101100000010000000100110111100000010000101111)))
(assert (= r (fp #b0 #b11010010000 #b1111110011011001000001011001101101011101000110011110)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
