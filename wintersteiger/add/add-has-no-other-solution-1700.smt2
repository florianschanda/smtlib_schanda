(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4173270557988770779189735549152828752994537353515625p-576 {+ 1879473972987449 -576 (5.7305e-174)}
; Y = -1.2115379304503159918482424473040737211704254150390625p350 {- 952682144750769 350 (-2.77866e+105)}
; 1.4173270557988770779189735549152828752994537353515625p-576 + -1.2115379304503159918482424473040737211704254150390625p350 == -1.211537930450315769803637522272765636444091796875p350
; [HW: -1.211537930450315769803637522272765636444091796875p350] 

; mpf : - 952682144750768 350
; mpfd: - 952682144750768 350 (-2.77866e+105) class: Neg. norm. non-zero
; hwf : - 952682144750768 350 (-2.77866e+105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111111 #b0110101011010101111100100010100001100100011000111001)))
(assert (= y (fp #b1 #b10101011101 #b0011011000100111010110011000110100100101110010110001)))
(assert (= r (fp #b1 #b10101011101 #b0011011000100111010110011000110100100101110010110000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
