(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.555132603141921254774615590577013790607452392578125p107 {+ 2500094984651170 107 (2.52335e+032)}
; Y = 1.3647871165828158179778029079898260533809661865234375p717 {+ 1642855122311927 717 (9.40961e+215)}
; 1.555132603141921254774615590577013790607452392578125p107 + 1.3647871165828158179778029079898260533809661865234375p717 == 1.3647871165828158179778029079898260533809661865234375p717
; [HW: 1.3647871165828158179778029079898260533809661865234375p717] 

; mpf : + 1642855122311927 717
; mpfd: + 1642855122311927 717 (9.40961e+215) class: Pos. norm. non-zero
; hwf : + 1642855122311927 717 (9.40961e+215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101010 #b1000111000011101001010111001011101110000000110100010)))
(assert (= y (fp #b0 #b11011001100 #b0101110101100010101100000011111110111001101011110111)))
(assert (= r (fp #b0 #b11011001100 #b0101110101100010101100000011111110111001101011110111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
