(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6879405296070097985960956066264770925045013427734375p-273 {+ 3098208712791191 -273 (1.11216e-082)}
; Y = 1.5709358563246149653735983520164154469966888427734375p-86 {+ 2571266509795991 -86 (2.03039e-026)}
; 1.6879405296070097985960956066264770925045013427734375p-273 + 1.5709358563246149653735983520164154469966888427734375p-86 == 1.5709358563246151874182032770477235317230224609375p-86
; [HW: 1.5709358563246151874182032770477235317230224609375p-86] 

; mpf : + 2571266509795992 -86
; mpfd: + 2571266509795992 -86 (2.03039e-026) class: Pos. norm. non-zero
; hwf : + 2571266509795992 -86 (2.03039e-026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101110 #b1011000000011100110111101101110001000001010010010111)))
(assert (= y (fp #b0 #b01110101001 #b1001001000101000110110100010111100000111001010010111)))
(assert (= r (fp #b0 #b01110101001 #b1001001000101000110110100010111100000111001010011000)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
