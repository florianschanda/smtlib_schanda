(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5312772412976374258875011946656741201877593994140625p632 {- 2392659985938465 632 (-2.72905e+190)}
; Y = 1.18381266934503148746671286062337458133697509765625p897 {+ 827818669168260 897 (1.2508e+270)}
; -1.5312772412976374258875011946656741201877593994140625p632 + 1.18381266934503148746671286062337458133697509765625p897 == 1.1838126693450312654221079355920664966106414794921875p897
; [HW: 1.1838126693450312654221079355920664966106414794921875p897] 

; mpf : + 827818669168259 897
; mpfd: + 827818669168259 897 (1.2508e+270) class: Pos. norm. non-zero
; hwf : + 827818669168259 897 (1.2508e+270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001110111 #b1000100000000001110010010000100001111011100000100001)))
(assert (= y (fp #b0 #b11110000000 #b0010111100001110010110001101101101101101011010000100)))
(assert (= r (fp #b0 #b11110000000 #b0010111100001110010110001101101101101101011010000011)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
