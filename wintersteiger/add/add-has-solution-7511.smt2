(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.462296537845445332237659386009909212589263916015625p748 {+ 2081998515575418 748 (2.16507e+225)}
; Y = 1.4415515696822571722890415912843309342861175537109375p-87 {+ 1988571484685871 -87 (9.31581e-027)}
; 1.462296537845445332237659386009909212589263916015625p748 + 1.4415515696822571722890415912843309342861175537109375p-87 == 1.4622965378454455542822643110412172973155975341796875p748
; [HW: 1.4622965378454455542822643110412172973155975341796875p748] 

; mpf : + 2081998515575419 748
; mpfd: + 2081998515575419 748 (2.16507e+225) class: Pos. norm. non-zero
; hwf : + 2081998515575419 748 (2.16507e+225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101011 #b0111011001011001000100001101111100011001101001111010)))
(assert (= y (fp #b0 #b01110101000 #b0111000100001001100001100000111101001000011000101111)))
(assert (= r (fp #b0 #b11011101011 #b0111011001011001000100001101111100011001101001111011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
