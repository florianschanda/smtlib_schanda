(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.340043984757601780444247197010554373264312744140625p194 {+ 1531421963043914 194 (3.36464e+058)}
; Y = 1.8863970414284583210218215754139237105846405029296875p-72 {+ 3991977385479515 -72 (3.9946e-022)}
; 1.340043984757601780444247197010554373264312744140625p194 + 1.8863970414284583210218215754139237105846405029296875p-72 == 1.3400439847576020024888521220418624579906463623046875p194
; [HW: 1.3400439847576020024888521220418624579906463623046875p194] 

; mpf : + 1531421963043915 194
; mpfd: + 1531421963043915 194 (3.36464e+058) class: Pos. norm. non-zero
; hwf : + 1531421963043915 194 (3.36464e+058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000001 #b0101011100001101000111110110000110111100010001001010)))
(assert (= y (fp #b0 #b01110110111 #b1110001011101010111010101010000000110100110101011011)))
(assert (= r (fp #b0 #b10011000001 #b0101011100001101000111110110000110111100010001001011)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
