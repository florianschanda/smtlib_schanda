(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3960461989273529326283096452243626117706298828125p-724 {+ 1783633513910728 -724 (1.58191e-218)}
; Y = -1.3398985452334837287224900137516669929027557373046875p265 {- 1530766961657291 265 (-7.94366e+079)}
; 1.3960461989273529326283096452243626117706298828125p-724 + -1.3398985452334837287224900137516669929027557373046875p265 == -1.3398985452334837287224900137516669929027557373046875p265
; [HW: -1.3398985452334837287224900137516669929027557373046875p265] 

; mpf : - 1530766961657291 265
; mpfd: - 1530766961657291 265 (-7.94366e+079) class: Neg. norm. non-zero
; hwf : - 1530766961657291 265 (-7.94366e+079) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101011 #b0110010101100011010010001010000000011001000111001000)))
(assert (= y (fp #b1 #b10100001000 #b0101011100000011100101110100111110111100010111001011)))
(assert (= r (fp #b1 #b10100001000 #b0101011100000011100101110100111110111100010111001011)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
