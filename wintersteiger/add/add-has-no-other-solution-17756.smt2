(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5191790851520885485825829164241440594196319580078125p-27 {- 2338174734429501 -27 (-1.13188e-008)}
; Y = 1.660606584701810106707853265106678009033203125p382 {+ 2975107568701568 382 (1.63578e+115)}
; -1.5191790851520885485825829164241440594196319580078125p-27 + 1.660606584701810106707853265106678009033203125p382 == 1.6606065847018098846632483400753699243068695068359375p382
; [HW: 1.6606065847018098846632483400753699243068695068359375p382] 

; mpf : + 2975107568701567 382
; mpfd: + 2975107568701567 382 (1.63578e+115) class: Pos. norm. non-zero
; hwf : + 2975107568701567 382 (1.63578e+115) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100100 #b1000010011101000111010111010011101111110110100111101)))
(assert (= y (fp #b0 #b10101111101 #b1010100100011101100000110101110011010001000010000000)))
(assert (= r (fp #b0 #b10101111101 #b1010100100011101100000110101110011010001000001111111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
