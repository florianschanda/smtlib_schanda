(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3259088694643164085817943487199954688549041748046875p-749 {- 1467763063076235 -749 (-4.47762e-226)}
; Y = 1.3911970533696635943243791189161129295825958251953125p813 {+ 1761794903784053 813 (7.59933e+244)}
; -1.3259088694643164085817943487199954688549041748046875p-749 + 1.3911970533696635943243791189161129295825958251953125p813 == 1.39119705336966337227977419388480484485626220703125p813
; [HW: 1.39119705336966337227977419388480484485626220703125p813] 

; mpf : + 1761794903784052 813
; mpfd: + 1761794903784052 813 (7.59933e+244) class: Pos. norm. non-zero
; hwf : + 1761794903784052 813 (7.59933e+244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010010 #b0101001101101110110000110111111111010011010110001011)))
(assert (= y (fp #b0 #b11100101100 #b0110010000100101011111010111011010000011101001110101)))
(assert (= r (fp #b0 #b11100101100 #b0110010000100101011111010111011010000011101001110100)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
