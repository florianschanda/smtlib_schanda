(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.51495718650206612210240564309060573577880859375p587 {+ 2319160993242464 587 (7.67375e+176)}
; Y = 1.477956792861324419874335944768972694873809814453125p586 {+ 2152526034229458 586 (3.74317e+176)}
; 1.51495718650206612210240564309060573577880859375p587 + 1.477956792861324419874335944768972694873809814453125p586 == 1.12696779146636405499748434522189199924468994140625p588
; [HW: 1.12696779146636405499748434522189199924468994140625p588] 

; mpf : + 571812098335972 588
; mpfd: + 571812098335972 588 (1.14169e+177) class: Pos. norm. non-zero
; hwf : + 571812098335972 588 (1.14169e+177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001010 #b1000001111010100001110111111001011011101110101100000)))
(assert (= y (fp #b0 #b11001001001 #b0111101001011011011000000101101000111101100011010010)))
(assert (= r (fp #b0 #b11001001011 #b0010000010000000111101100000111111111110010011100100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
