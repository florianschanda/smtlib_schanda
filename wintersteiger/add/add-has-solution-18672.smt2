(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.817420394646570347418901292257942259311676025390625p486 {- 3681334184735338 486 (-3.63106e+146)}
; Y = -1.2213484124624740534414968351484276354312896728515625p793 {- 996864627885049 793 (-6.36248e+238)}
; -1.817420394646570347418901292257942259311676025390625p486 + -1.2213484124624740534414968351484276354312896728515625p793 == -1.2213484124624740534414968351484276354312896728515625p793
; [HW: -1.2213484124624740534414968351484276354312896728515625p793] 

; mpf : - 996864627885049 793
; mpfd: - 996864627885049 793 (-6.36248e+238) class: Neg. norm. non-zero
; hwf : - 996864627885049 793 (-6.36248e+238) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100101 #b1101000101000010011101101000011000010111001001101010)))
(assert (= y (fp #b1 #b11100011000 #b0011100010101010010010100010000010001100001111111001)))
(assert (= r (fp #b1 #b11100011000 #b0011100010101010010010100010000010001100001111111001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
