(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0350429700662797660726255344343371689319610595703125p-703 {+ 157819506932453 -703 (2.45964e-212)}
; Y = 1.6002305131588625553007432245067320764064788818359375p896 {+ 2703197915398655 896 (8.45393e+269)}
; 1.0350429700662797660726255344343371689319610595703125p-703 + 1.6002305131588625553007432245067320764064788818359375p896 == 1.6002305131588627773453481495380401611328125p896
; [HW: 1.6002305131588627773453481495380401611328125p896] 

; mpf : + 2703197915398656 896
; mpfd: + 2703197915398656 896 (8.45393e+269) class: Pos. norm. non-zero
; hwf : + 2703197915398656 896 (8.45393e+269) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000000 #b0000100011111000100100110111101001100011101011100101)))
(assert (= y (fp #b0 #b11101111111 #b1001100110101000101101001111100000010100000111111111)))
(assert (= r (fp #b0 #b11101111111 #b1001100110101000101101001111100000010100001000000000)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
