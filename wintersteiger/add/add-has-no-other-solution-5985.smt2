(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7598112707835900092590009080595336854457855224609375p16 {- 3421885755972879 16 (-115331)}
; Y = 1.3710283252492769801023086984059773385524749755859375p-674 {+ 1670963027336543 -674 (1.74916e-203)}
; -1.7598112707835900092590009080595336854457855224609375p16 + 1.3710283252492769801023086984059773385524749755859375p-674 == -1.759811270783589787214395983028225600719451904296875p16
; [HW: -1.759811270783589787214395983028225600719451904296875p16] 

; mpf : - 3421885755972878 16
; mpfd: - 3421885755972878 16 (-115331) class: Neg. norm. non-zero
; hwf : - 3421885755972878 16 (-115331) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001111 #b1100001010000010111111011100111100100101110100001111)))
(assert (= y (fp #b0 #b00101011101 #b0101111011111011101101100101101011010101110101011111)))
(assert (= r (fp #b1 #b10000001111 #b1100001010000010111111011100111100100101110100001110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
