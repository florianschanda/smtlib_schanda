(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3133532814857318271606345660984516143798828125p-736 {+ 1411217721734464 -736 (3.63333e-222)}
; Y = -1.4567401061332565515016312929219566285610198974609375p-471 {- 2056974571786895 -471 (-2.38921e-142)}
; 1.3133532814857318271606345660984516143798828125p-736 + -1.4567401061332565515016312929219566285610198974609375p-471 == -1.456740106133256329457026367890648543834686279296875p-471
; [HW: -1.456740106133256329457026367890648543834686279296875p-471] 

; mpf : - 2056974571786894 -471
; mpfd: - 2056974571786894 -471 (-2.38921e-142) class: Neg. norm. non-zero
; hwf : - 2056974571786894 -471 (-2.38921e-142) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100011111 #b0101000000110111111010111011000000010011010101000000)))
(assert (= y (fp #b1 #b01000101000 #b0111010011101100111010110110101010011101001010001111)))
(assert (= r (fp #b1 #b01000101000 #b0111010011101100111010110110101010011101001010001110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
