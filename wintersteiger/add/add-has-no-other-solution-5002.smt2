(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9155451524146318575958503060974180698394775390625p-151 {+ 4123248807255400 -151 (6.71063e-046)}
; Y = -1.88239290678610160512107540853321552276611328125p-409 {- 3973944366196256 -409 (-1.42378e-123)}
; 1.9155451524146318575958503060974180698394775390625p-151 + -1.88239290678610160512107540853321552276611328125p-409 == 1.9155451524146318575958503060974180698394775390625p-151
; [HW: 1.9155451524146318575958503060974180698394775390625p-151] 

; mpf : + 4123248807255400 -151
; mpfd: + 4123248807255400 -151 (6.71063e-046) class: Pos. norm. non-zero
; hwf : + 4123248807255400 -151 (6.71063e-046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101000 #b1110101001100001001010101100011110100001110101101000)))
(assert (= y (fp #b1 #b01001100110 #b1110000111100100100000000110010011011110011000100000)))
(assert (= r (fp #b0 #b01101101000 #b1110101001100001001010101100011110100001110101101000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
