(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.56838210639675867952291810070164501667022705078125p385 {+ 2559765442572500 385 (1.23595e+116)}
; Y = -1.0483113423137371267301887201028876006603240966796875p131 {- 217574943241915 131 (-2.85377e+039)}
; 1.56838210639675867952291810070164501667022705078125p385 + -1.0483113423137371267301887201028876006603240966796875p131 == 1.56838210639675867952291810070164501667022705078125p385
; [HW: 1.56838210639675867952291810070164501667022705078125p385] 

; mpf : + 2559765442572500 385
; mpfd: + 2559765442572500 385 (1.23595e+116) class: Pos. norm. non-zero
; hwf : + 2559765442572500 385 (1.23595e+116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000000 #b1001000110000001011111010101111010011011000011010100)))
(assert (= y (fp #b1 #b10010000010 #b0000110001011110001000011101001101000011011010111011)))
(assert (= r (fp #b0 #b10110000000 #b1001000110000001011111010101111010011011000011010100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
