(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7285015349533596751285813297727145254611968994140625p-964 {- 3280879241354785 -964 (-1.10855e-290)}
; Y = 1.6095645552355895002705210572457872331142425537109375p748 {+ 2745234703817263 748 (2.38312e+225)}
; -1.7285015349533596751285813297727145254611968994140625p-964 + 1.6095645552355895002705210572457872331142425537109375p748 == 1.609564555235589278225916132214479148387908935546875p748
; [HW: 1.609564555235589278225916132214479148387908935546875p748] 

; mpf : + 2745234703817262 748
; mpfd: + 2745234703817262 748 (2.38312e+225) class: Pos. norm. non-zero
; hwf : + 2745234703817262 748 (2.38312e+225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111011 #b1011101001111111000100111001101110110101111000100001)))
(assert (= y (fp #b0 #b11011101011 #b1001110000001100011011000011010110001001101000101111)))
(assert (= r (fp #b0 #b11011101011 #b1001110000001100011011000011010110001001101000101110)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
