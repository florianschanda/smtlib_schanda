(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6989428493689577859271366833127103745937347412109375p149 {+ 3147758755971311 149 (1.21241e+045)}
; Y = -1.5698173664593431109182120053446851670742034912109375p-693 {- 2566229279255535 -693 (-3.81999e-209)}
; 1.6989428493689577859271366833127103745937347412109375p149 + -1.5698173664593431109182120053446851670742034912109375p-693 == 1.698942849368957563882531758281402289867401123046875p149
; [HW: 1.698942849368957563882531758281402289867401123046875p149] 

; mpf : + 3147758755971310 149
; mpfd: + 3147758755971310 149 (1.21241e+045) class: Pos. norm. non-zero
; hwf : + 3147758755971310 149 (1.21241e+045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010100 #b1011001011101101111010110010011111010000000011101111)))
(assert (= y (fp #b1 #b00101001010 #b1001000111011111100011010000100110100010101111101111)))
(assert (= r (fp #b0 #b10010010100 #b1011001011101101111010110010011111010000000011101110)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
