(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6666901303664467537402060770546086132526397705078125p-23 {+ 3002505422689917 -23 (1.98685e-007)}
; Y = 1.97847964430830547399864371982403099536895751953125p-142 {+ 4406680561496500 -142 (3.54872e-043)}
; 1.6666901303664467537402060770546086132526397705078125p-23 + 1.97847964430830547399864371982403099536895751953125p-142 == 1.6666901303664467537402060770546086132526397705078125p-23
; [HW: 1.6666901303664467537402060770546086132526397705078125p-23] 

; mpf : + 3002505422689917 -23
; mpfd: + 3002505422689917 -23 (1.98685e-007) class: Pos. norm. non-zero
; hwf : + 3002505422689917 -23 (1.98685e-007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101000 #b1010101010101100001101000101001001111101011001111101)))
(assert (= y (fp #b0 #b01101110001 #b1111101001111101101001000101100000011011000110110100)))
(assert (= r (fp #b0 #b01111101000 #b1010101010101100001101000101001001111101011001111101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
