(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4575320939577467438397206933586858212947845458984375p-263 {- 2060541367858151 -263 (-9.83398e-080)}
; Y = 1.8772788766603938359622816278715617954730987548828125p165 {+ 3950912822027757 165 (8.77967e+049)}
; -1.4575320939577467438397206933586858212947845458984375p-263 + 1.8772788766603938359622816278715617954730987548828125p165 == 1.8772788766603938359622816278715617954730987548828125p165
; [HW: 1.8772788766603938359622816278715617954730987548828125p165] 

; mpf : + 3950912822027757 165
; mpfd: + 3950912822027757 165 (8.77967e+049) class: Pos. norm. non-zero
; hwf : + 3950912822027757 165 (8.77967e+049) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111000 #b0111010100100000110100101100010001101011001111100111)))
(assert (= y (fp #b0 #b10010100100 #b1110000010010101010110010011010010111010010111101101)))
(assert (= r (fp #b0 #b10010100100 #b1110000010010101010110010011010010111010010111101101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
