(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8103691474718155429712851400836370885372161865234375p-914 {- 3649578190586615 -914 (-1.30723e-275)}
; Y = -1.034448877897147678339706544647924602031707763671875p469 {- 155143953660926 469 (-1.5768e+141)}
; -1.8103691474718155429712851400836370885372161865234375p-914 + -1.034448877897147678339706544647924602031707763671875p469 == -1.034448877897147678339706544647924602031707763671875p469
; [HW: -1.034448877897147678339706544647924602031707763671875p469] 

; mpf : - 155143953660926 469
; mpfd: - 155143953660926 469 (-1.5768e+141) class: Neg. norm. non-zero
; hwf : - 155143953660926 469 (-1.5768e+141) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101101 #b1100111101110100010110100011101000010100001011110111)))
(assert (= y (fp #b1 #b10111010100 #b0000100011010001101001000100001111110011101111111110)))
(assert (= r (fp #b1 #b10111010100 #b0000100011010001101001000100001111110011101111111110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
