(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7655080358803034723536029559909366071224212646484375p-294 {+ 3447541705139655 -294 (5.54691e-089)}
; Y = 1.04448782882994262166675980552099645137786865234375p-689 {+ 200355369341052 -689 (4.06665e-208)}
; 1.7655080358803034723536029559909366071224212646484375p-294 + 1.04448782882994262166675980552099645137786865234375p-689 == 1.7655080358803034723536029559909366071224212646484375p-294
; [HW: 1.7655080358803034723536029559909366071224212646484375p-294] 

; mpf : + 3447541705139655 -294
; mpfd: + 3447541705139655 -294 (5.54691e-089) class: Pos. norm. non-zero
; hwf : + 3447541705139655 -294 (5.54691e-089) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011001 #b1100001111111000010101011010101011101110010111000111)))
(assert (= y (fp #b0 #b00101001110 #b0000101101100011100011011110100111100101000001111100)))
(assert (= r (fp #b0 #b01011011001 #b1100001111111000010101011010101011101110010111000111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
