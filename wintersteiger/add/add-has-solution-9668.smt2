(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.137044163943581320808107193442992866039276123046875p33 {+ 617192045669614 33 (9.76713e+009)}
; Y = 1.5898458120604563870159608995891176164150238037109375p-1014 {+ 2656429379401519 -1014 (9.05606e-306)}
; 1.137044163943581320808107193442992866039276123046875p33 + 1.5898458120604563870159608995891176164150238037109375p-1014 == 1.1370441639435815428527121184743009507656097412109375p33
; [HW: 1.1370441639435815428527121184743009507656097412109375p33] 

; mpf : + 617192045669615 33
; mpfd: + 617192045669615 33 (9.76713e+009) class: Pos. norm. non-zero
; hwf : + 617192045669615 33 (9.76713e+009) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100000 #b0010001100010101010100111000101000111110110011101110)))
(assert (= y (fp #b0 #b00000001001 #b1001011100000000001000101001100001111011011100101111)))
(assert (= r (fp #b0 #b10000100000 #b0010001100010101010100111000101000111110110011101111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
