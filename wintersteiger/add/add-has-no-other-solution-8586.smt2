(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8161100234674238951271263431408442556858062744140625p-553 {- 3675432797581217 -553 (-6.15963e-167)}
; Y = -1.5398853494024009602725300283054821193218231201171875p-726 {- 2431427458391443 -726 (-4.36226e-219)}
; -1.8161100234674238951271263431408442556858062744140625p-553 + -1.5398853494024009602725300283054821193218231201171875p-726 == -1.8161100234674238951271263431408442556858062744140625p-553
; [HW: -1.8161100234674238951271263431408442556858062744140625p-553] 

; mpf : - 3675432797581217 -553
; mpfd: - 3675432797581217 -553 (-6.15963e-167) class: Neg. norm. non-zero
; hwf : - 3675432797581217 -553 (-6.15963e-167) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010110 #b1101000011101100100101100010010010111010111110100001)))
(assert (= y (fp #b1 #b00100101001 #b1000101000110101111011010001111101000101110110010011)))
(assert (= r (fp #b1 #b00111010110 #b1101000011101100100101100010010010111010111110100001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
