(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5474603337362367039276023206184618175029754638671875p-931 {- 2465542155014643 -931 (-8.52498e-281)}
; Y = 1.82461794312083469549179426394402980804443359375p-582 {+ 3713749061362016 -582 (1.1527e-175)}
; -1.5474603337362367039276023206184618175029754638671875p-931 + 1.82461794312083469549179426394402980804443359375p-582 == 1.82461794312083469549179426394402980804443359375p-582
; [HW: 1.82461794312083469549179426394402980804443359375p-582] 

; mpf : + 3713749061362016 -582
; mpfd: + 3713749061362016 -582 (1.1527e-175) class: Pos. norm. non-zero
; hwf : + 3713749061362016 -582 (1.1527e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001011100 #b1000110000100110010111000100010101000001000111110011)))
(assert (= y (fp #b0 #b00110111001 #b1101001100011010001010010101100101100110000101100000)))
(assert (= r (fp #b0 #b00110111001 #b1101001100011010001010010101100101100110000101100000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
