(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.915386211675615957261697985813952982425689697265625p740 {- 4122533001802394 740 (-1.10778e+223)}
; Y = 1.5401153533802711681488517569960094988346099853515625p-573 {+ 2432463304220473 -573 (4.98156e-173)}
; -1.915386211675615957261697985813952982425689697265625p740 + 1.5401153533802711681488517569960094988346099853515625p-573 == -1.915386211675615957261697985813952982425689697265625p740
; [HW: -1.915386211675615957261697985813952982425689697265625p740] 

; mpf : - 4122533001802394 740
; mpfd: - 4122533001802394 740 (-1.10778e+223) class: Neg. norm. non-zero
; hwf : - 4122533001802394 740 (-1.10778e+223) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100011 #b1110101001010110110000000011001001011011001010011010)))
(assert (= y (fp #b0 #b00111000010 #b1000101001000100111111111111001011010101111100111001)))
(assert (= r (fp #b1 #b11011100011 #b1110101001010110110000000011001001011011001010011010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
