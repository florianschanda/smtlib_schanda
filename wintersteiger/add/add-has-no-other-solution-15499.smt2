(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7745673213919612720701479702256619930267333984375p-533 {- 3488341099994200 -533 (-6.3111e-161)}
; Y = -1.9636069258957231653539565741084516048431396484375p900 {- 4339699792395608 900 (-1.65978e+271)}
; -1.7745673213919612720701479702256619930267333984375p-533 + -1.9636069258957231653539565741084516048431396484375p900 == -1.9636069258957231653539565741084516048431396484375p900
; [HW: -1.9636069258957231653539565741084516048431396484375p900] 

; mpf : - 4339699792395608 900
; mpfd: - 4339699792395608 900 (-1.65978e+271) class: Neg. norm. non-zero
; hwf : - 4339699792395608 900 (-1.65978e+271) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101010 #b1100011001001010000010110100000111101101110001011000)))
(assert (= y (fp #b1 #b11110000011 #b1111011010101110111100011000100011101011110101011000)))
(assert (= r (fp #b1 #b11110000011 #b1111011010101110111100011000100011101011110101011000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
