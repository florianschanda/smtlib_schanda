(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7711396556498908427812466470641084015369415283203125p89 {+ 3472904265835461 89 (1.09628e+027)}
; Y = 1.10303598258956991884360832045786082744598388671875p-368 {+ 464032812796140 -368 (1.83464e-111)}
; 1.7711396556498908427812466470641084015369415283203125p89 + 1.10303598258956991884360832045786082744598388671875p-368 == 1.7711396556498908427812466470641084015369415283203125p89
; [HW: 1.7711396556498908427812466470641084015369415283203125p89] 

; mpf : + 3472904265835461 89
; mpfd: + 3472904265835461 89 (1.09628e+027) class: Pos. norm. non-zero
; hwf : + 3472904265835461 89 (1.09628e+027) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011000 #b1100010101101001011010001001000110101010001111000101)))
(assert (= y (fp #b0 #b01010001111 #b0001101001100000100100001110111110001000100011101100)))
(assert (= r (fp #b0 #b10001011000 #b1100010101101001011010001001000110101010001111000101)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
