(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.156884675506509640996455345884896814823150634765625p-590 {+ 706545766151258 -590 (2.85491e-178)}
; Y = 1.0955283794208441339179671558667905628681182861328125p969 {+ 430221573963021 969 (5.46625e+291)}
; 1.156884675506509640996455345884896814823150634765625p-590 + 1.0955283794208441339179671558667905628681182861328125p969 == 1.095528379420844355962572080898098647594451904296875p969
; [HW: 1.095528379420844355962572080898098647594451904296875p969] 

; mpf : + 430221573963022 969
; mpfd: + 430221573963022 969 (5.46625e+291) class: Pos. norm. non-zero
; hwf : + 430221573963022 969 (5.46625e+291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110110001 #b0010100000101001100110000001011010001011010001011010)))
(assert (= y (fp #b0 #b11111001000 #b0001100001110100100011000100000101110011110100001101)))
(assert (= r (fp #b0 #b11111001000 #b0001100001110100100011000100000101110011110100001110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
