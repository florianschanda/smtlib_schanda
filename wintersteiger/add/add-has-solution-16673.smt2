(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4995338975800056591225484226015396416187286376953125p585 {- 2249700675000245 585 (-1.89891e+176)}
; Y = 1.935158547947697371682806988246738910675048828125p-987 {+ 4211579688069584 -987 (1.47949e-297)}
; -1.4995338975800056591225484226015396416187286376953125p585 + 1.935158547947697371682806988246738910675048828125p-987 == -1.49953389758000543707794349757023155689239501953125p585
; [HW: -1.49953389758000543707794349757023155689239501953125p585] 

; mpf : - 2249700675000244 585
; mpfd: - 2249700675000244 585 (-1.89891e+176) class: Neg. norm. non-zero
; hwf : - 2249700675000244 585 (-1.89891e+176) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001000 #b0111111111100001011101000001100101011001011110110101)))
(assert (= y (fp #b0 #b00000100100 #b1110111101100110100011001111010000000010100111010000)))
(assert (= r (fp #b1 #b11001001000 #b0111111111100001011101000001100101011001011110110100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
