(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.478236521580619022842029153252951800823211669921875p-598 {- 2153785820385438 -598 (-1.42497e-180)}
; Y = 1.48579922684333620708230228046886622905731201171875p-338 {+ 2187845216988524 -338 (2.65352e-102)}
; -1.478236521580619022842029153252951800823211669921875p-598 + 1.48579922684333620708230228046886622905731201171875p-338 == 1.48579922684333620708230228046886622905731201171875p-338
; [HW: 1.48579922684333620708230228046886622905731201171875p-338] 

; mpf : + 2187845216988524 -338
; mpfd: + 2187845216988524 -338 (2.65352e-102) class: Pos. norm. non-zero
; hwf : + 2187845216988524 -338 (2.65352e-102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110101001 #b0111101001101101101101010110101111110001000010011110)))
(assert (= y (fp #b0 #b01010101101 #b0111110001011101010101101000111110110110110101101100)))
(assert (= r (fp #b0 #b01010101101 #b0111110001011101010101101000111110110110110101101100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
