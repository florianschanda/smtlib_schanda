(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9434658105010103046339509091922082006931304931640625p-59 {+ 4248992272609153 -59 (3.37138e-018)}
; Y = 1.971086268042443467862767647602595388889312744140625p-640 {+ 4373383754900554 -640 (4.32025e-193)}
; 1.9434658105010103046339509091922082006931304931640625p-59 + 1.971086268042443467862767647602595388889312744140625p-640 == 1.9434658105010103046339509091922082006931304931640625p-59
; [HW: 1.9434658105010103046339509091922082006931304931640625p-59] 

; mpf : + 4248992272609153 -59
; mpfd: + 4248992272609153 -59 (3.37138e-018) class: Pos. norm. non-zero
; hwf : + 4248992272609153 -59 (3.37138e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000100 #b1111000110000110111110011011000011111110111110000001)))
(assert (= y (fp #b0 #b00101111111 #b1111100010011001000111000001001011010110010001001010)))
(assert (= r (fp #b0 #b01111000100 #b1111000110000110111110011011000011111110111110000001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
