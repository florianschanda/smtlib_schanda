(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3123740905581990912054379805340431630611419677734375p358 {- 1406807837838103 358 (-7.70542e+107)}
; Y = -1.197403891649208684810901104356162250041961669921875p-146 {- 889028092872862 -146 (-1.34234e-044)}
; -1.3123740905581990912054379805340431630611419677734375p358 + -1.197403891649208684810901104356162250041961669921875p-146 == -1.3123740905581990912054379805340431630611419677734375p358
; [HW: -1.3123740905581990912054379805340431630611419677734375p358] 

; mpf : - 1406807837838103 358
; mpfd: - 1406807837838103 358 (-7.70542e+107) class: Neg. norm. non-zero
; hwf : - 1406807837838103 358 (-7.70542e+107) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100101 #b0100111111110111101111111001011100010000101100010111)))
(assert (= y (fp #b1 #b01101101101 #b0011001010001001000011111011101010111100100010011110)))
(assert (= r (fp #b1 #b10101100101 #b0100111111110111101111111001011100010000101100010111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
