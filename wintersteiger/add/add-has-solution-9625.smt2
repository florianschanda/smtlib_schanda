(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5162494017225573994522846987820230424404144287109375p-12 {+ 2324980613227951 -12 (0.000370178)}
; Y = 1.13048266432756872035270134801976382732391357421875p932 {+ 587641678443948 932 (4.10412e+280)}
; 1.5162494017225573994522846987820230424404144287109375p-12 + 1.13048266432756872035270134801976382732391357421875p932 == 1.13048266432756872035270134801976382732391357421875p932
; [HW: 1.13048266432756872035270134801976382732391357421875p932] 

; mpf : + 587641678443948 932
; mpfd: + 587641678443948 932 (4.10412e+280) class: Pos. norm. non-zero
; hwf : + 587641678443948 932 (4.10412e+280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111110011 #b1000010000101000111010111011100011111010010110101111)))
(assert (= y (fp #b0 #b11110100011 #b0010000101100111010011111101011111111011010110101100)))
(assert (= r (fp #b0 #b11110100011 #b0010000101100111010011111101011111111011010110101100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
