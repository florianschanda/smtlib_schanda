(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5841868887893377770836877971305511891841888427734375p358 {+ 2630943854666391 358 (9.30133e+107)}
; Y = 1.57176298687056803515815772698260843753814697265625p897 {+ 2574991574614532 897 (1.66071e+270)}
; 1.5841868887893377770836877971305511891841888427734375p358 + 1.57176298687056803515815772698260843753814697265625p897 == 1.57176298687056803515815772698260843753814697265625p897
; [HW: 1.57176298687056803515815772698260843753814697265625p897] 

; mpf : + 2574991574614532 897
; mpfd: + 2574991574614532 897 (1.66071e+270) class: Pos. norm. non-zero
; hwf : + 2574991574614532 897 (1.66071e+270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100101 #b1001010110001101010001011001111000011010001010010111)))
(assert (= y (fp #b0 #b11110000000 #b1001001001011111000011110010000110101100001000000100)))
(assert (= r (fp #b0 #b11110000000 #b1001001001011111000011110010000110101100001000000100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
