(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.754618429025253334430090035311877727508544921875p-752 {+ 3398499275765040 -752 (7.40672e-227)}
; Y = -1.705587524946566180261697809328325092792510986328125p-495 {- 3177683714426626 -495 (-1.66735e-149)}
; 1.754618429025253334430090035311877727508544921875p-752 + -1.705587524946566180261697809328325092792510986328125p-495 == -1.705587524946566180261697809328325092792510986328125p-495
; [HW: -1.705587524946566180261697809328325092792510986328125p-495] 

; mpf : - 3177683714426626 -495
; mpfd: - 3177683714426626 -495 (-1.66735e-149) class: Neg. norm. non-zero
; hwf : - 3177683714426626 -495 (-1.66735e-149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001111 #b1100000100101110101011000110000110011111010100110000)))
(assert (= y (fp #b1 #b01000010000 #b1011010010100001011000100101000000011100011100000010)))
(assert (= r (fp #b1 #b01000010000 #b1011010010100001011000100101000000011100011100000010)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
