(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1415179422616235083154379026382230222225189208984375p986 {- 637340152035687 986 (-7.46549e+296)}
; Y = 1.88516471443752298142726431251503527164459228515625p968 {+ 3986427478102340 968 (4.70311e+291)}
; -1.1415179422616235083154379026382230222225189208984375p986 + 1.88516471443752298142726431251503527164459228515625p968 == -1.141510750928941941850780494860373437404632568359375p986
; [HW: -1.141510750928941941850780494860373437404632568359375p986] 

; mpf : - 637307765152502 986
; mpfd: - 637307765152502 986 (-7.46545e+296) class: Neg. norm. non-zero
; hwf : - 637307765152502 986 (-7.46545e+296) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111011001 #b0010010000111010100001010001010111001111100101100111)))
(assert (= y (fp #b0 #b11111000111 #b1110001010011010001001111001110000010101000101000100)))
(assert (= r (fp #b1 #b11111011001 #b0010010000111010000011000110111101000101101011110110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
