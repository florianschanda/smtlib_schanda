(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.44547975121192084912991049350239336490631103515625p-405 {+ 2006262441559108 -405 (1.7493e-122)}
; Y = 1.7927312398077301924814719313872046768665313720703125p-977 {+ 3570144116203045 -977 (1.40349e-294)}
; 1.44547975121192084912991049350239336490631103515625p-405 + 1.7927312398077301924814719313872046768665313720703125p-977 == 1.4454797512119210711745154185337014496326446533203125p-405
; [HW: 1.4454797512119210711745154185337014496326446533203125p-405] 

; mpf : + 2006262441559109 -405
; mpfd: + 2006262441559109 -405 (1.7493e-122) class: Pos. norm. non-zero
; hwf : + 2006262441559109 -405 (1.7493e-122) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001101010 #b0111001000001010111101100000001001111100010001000100)))
(assert (= y (fp #b0 #b00000101110 #b1100101011110000011011110011110101111101111000100101)))
(assert (= r (fp #b0 #b01001101010 #b0111001000001010111101100000001001111100010001000101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
