(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.530207621276307161650720445322804152965545654296875p-988 {- 2387842845608974 -988 (-5.84944e-298)}
; Y = 1.224178430536536854589257927727885544300079345703125p275 {+ 1009609896228850 275 (7.43179e+082)}
; -1.530207621276307161650720445322804152965545654296875p-988 + 1.224178430536536854589257927727885544300079345703125p275 == 1.224178430536536854589257927727885544300079345703125p275
; [HW: 1.224178430536536854589257927727885544300079345703125p275] 

; mpf : + 1009609896228850 275
; mpfd: + 1009609896228850 275 (7.43179e+082) class: Pos. norm. non-zero
; hwf : + 1009609896228850 275 (7.43179e+082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000100011 #b1000011110111011101011111100100101111000110000001110)))
(assert (= y (fp #b0 #b10100010010 #b0011100101100011110000011111001110011111011111110010)))
(assert (= r (fp #b0 #b10100010010 #b0011100101100011110000011111001110011111011111110010)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
