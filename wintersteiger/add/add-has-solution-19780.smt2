(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9971508336488754675741574828862212598323822021484375p-602 {- 4490768122853255 -602 (-1.20324e-181)}
; Y = 1.53924460578709432212463070754893124103546142578125p-164 {+ 2428541805684308 -164 (6.58246e-050)}
; -1.9971508336488754675741574828862212598323822021484375p-602 + 1.53924460578709432212463070754893124103546142578125p-164 == 1.5392446057870941000800257825176231563091278076171875p-164
; [HW: 1.5392446057870941000800257825176231563091278076171875p-164] 

; mpf : + 2428541805684307 -164
; mpfd: + 2428541805684307 -164 (6.58246e-050) class: Pos. norm. non-zero
; hwf : + 2428541805684307 -164 (6.58246e-050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110100101 #b1111111101000101010001101110101110110011011110000111)))
(assert (= y (fp #b0 #b01101011011 #b1000101000001011111011110011101001100110011001010100)))
(assert (= r (fp #b0 #b01101011011 #b1000101000001011111011110011101001100110011001010011)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
