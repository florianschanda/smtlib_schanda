(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7212579523497115729924189508892595767974853515625p913 {+ 3248257045440168 913 (1.19188e+275)}
; Y = 1.5430855271527708083567631547339260578155517578125p824 {+ 2445839777715528 824 (1.72626e+248)}
; 1.7212579523497115729924189508892595767974853515625p913 + 1.5430855271527708083567631547339260578155517578125p824 == 1.7212579523497117950370238759205676615238189697265625p913
; [HW: 1.7212579523497117950370238759205676615238189697265625p913] 

; mpf : + 3248257045440169 913
; mpfd: + 3248257045440169 913 (1.19188e+275) class: Pos. norm. non-zero
; hwf : + 3248257045440169 913 (1.19188e+275) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110010000 #b1011100010100100010111000111010101010010011010101000)))
(assert (= y (fp #b0 #b11100110111 #b1000101100000111101001110011001000001101010101001000)))
(assert (= r (fp #b0 #b11110010000 #b1011100010100100010111000111010101010010011010101001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
