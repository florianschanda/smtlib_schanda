(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7945597352446680528004208099446259438991546630859375p-868 {+ 3578378927571487 -868 (9.11846e-262)}
; Y = 1.584744910947298190961873842752538621425628662109375p79 {+ 2633456963049046 79 (9.5792e+023)}
; 1.7945597352446680528004208099446259438991546630859375p-868 + 1.584744910947298190961873842752538621425628662109375p79 == 1.584744910947298190961873842752538621425628662109375p79
; [HW: 1.584744910947298190961873842752538621425628662109375p79] 

; mpf : + 2633456963049046 79
; mpfd: + 2633456963049046 79 (9.5792e+023) class: Pos. norm. non-zero
; hwf : + 2633456963049046 79 (9.5792e+023) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011011 #b1100101101101000010001000100110110011000001000011111)))
(assert (= y (fp #b0 #b10001001110 #b1001010110110001110101111010110100000101011001010110)))
(assert (= r (fp #b0 #b10001001110 #b1001010110110001110101111010110100000101011001010110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
