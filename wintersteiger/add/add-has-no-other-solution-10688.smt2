(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.81309226598747219583174228318966925144195556640625p952 {+ 3661842026119012 952 (6.90201e+286)}
; Y = 1.9661484971529343823704039095900952816009521484375p359 {+ 4351146011762520 359 (2.30879e+108)}
; 1.81309226598747219583174228318966925144195556640625p952 + 1.9661484971529343823704039095900952816009521484375p359 == 1.81309226598747219583174228318966925144195556640625p952
; [HW: 1.81309226598747219583174228318966925144195556640625p952] 

; mpf : + 3661842026119012 952
; mpfd: + 3661842026119012 952 (6.90201e+286) class: Pos. norm. non-zero
; hwf : + 3661842026119012 952 (6.90201e+286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110111 #b1101000000100110110100001001001100001011111101100100)))
(assert (= y (fp #b0 #b10101100110 #b1111011101010101100000100000011001011001111101011000)))
(assert (= r (fp #b0 #b11110110111 #b1101000000100110110100001001001100001011111101100100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
