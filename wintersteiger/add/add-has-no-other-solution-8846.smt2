(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4797113978658120725384605975705198943614959716796875p37 {- 2160428072673851 37 (-2.0337e+011)}
; Y = 1.705649468250327149831946371705271303653717041015625p-954 {+ 3177962682266362 -954 (1.12014e-287)}
; -1.4797113978658120725384605975705198943614959716796875p37 + 1.705649468250327149831946371705271303653717041015625p-954 == -1.479711397865811850493855672539211809635162353515625p37
; [HW: -1.479711397865811850493855672539211809635162353515625p37] 

; mpf : - 2160428072673850 37
; mpfd: - 2160428072673850 37 (-2.0337e+011) class: Neg. norm. non-zero
; hwf : - 2160428072673850 37 (-2.0337e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100100 #b0111101011001110010111011011110101011010001000111011)))
(assert (= y (fp #b0 #b00001000101 #b1011010010100101011100011000110010010011001011111010)))
(assert (= r (fp #b1 #b10000100100 #b0111101011001110010111011011110101011010001000111010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
