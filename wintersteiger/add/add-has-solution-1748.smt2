(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1441059899709229430442292141378857195377349853515625p507 {+ 648995682734905 507 (4.79374e+152)}
; Y = 0.955240474943040762667578746913932263851165771484375p-1022 {+ 4302020647002694 -1023 (2.12548e-308)}
; 1.1441059899709229430442292141378857195377349853515625p507 + 0.955240474943040762667578746913932263851165771484375p-1022 == 1.1441059899709229430442292141378857195377349853515625p507
; [HW: 1.1441059899709229430442292141378857195377349853515625p507] 

; mpf : + 648995682734905 507
; mpfd: + 648995682734905 507 (4.79374e+152) class: Pos. norm. non-zero
; hwf : + 648995682734905 507 (4.79374e+152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111010 #b0010010011100100001000010101001000010101001100111001)))
(assert (= y (fp #b0 #b00000000000 #b1111010010001010101000111100011110110010001001000110)))
(assert (= r (fp #b0 #b10111111010 #b0010010011100100001000010101001000010101001100111001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
