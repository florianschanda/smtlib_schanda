(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.54631036549765799037459146347828209400177001953125p727 {- 2460363158483892 727 (-1.0917e+219)}
; Y = 1.5717576104140438264522572353598661720752716064453125p62 {+ 2574967361206933 62 (7.24845e+018)}
; -1.54631036549765799037459146347828209400177001953125p727 + 1.5717576104140438264522572353598661720752716064453125p62 == -1.54631036549765799037459146347828209400177001953125p727
; [HW: -1.54631036549765799037459146347828209400177001953125p727] 

; mpf : - 2460363158483892 727
; mpfd: - 2460363158483892 727 (-1.0917e+219) class: Neg. norm. non-zero
; hwf : - 2460363158483892 727 (-1.0917e+219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011010110 #b1000101111011010111111110000000101000111001110110100)))
(assert (= y (fp #b0 #b10000111101 #b1001001001011110101101001110110111110111101010010101)))
(assert (= r (fp #b1 #b11011010110 #b1000101111011010111111110000000101000111001110110100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
