(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.124787612912065970505182121996767818927764892578125p89 {+ 561993447011234 89 (6.9621e+026)}
; Y = -1.7816026673997225060475102509371936321258544921875p256 {- 3520025481653176 256 (-2.06295e+077)}
; 1.124787612912065970505182121996767818927764892578125p89 + -1.7816026673997225060475102509371936321258544921875p256 == -1.7816026673997222840029053259058855473995208740234375p256
; [HW: -1.7816026673997222840029053259058855473995208740234375p256] 

; mpf : - 3520025481653175 256
; mpfd: - 3520025481653175 256 (-2.06295e+077) class: Neg. norm. non-zero
; hwf : - 3520025481653175 256 (-2.06295e+077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011000 #b0001111111110010000101001011110001100111001110100010)))
(assert (= y (fp #b1 #b10011111111 #b1100100000010111000111001100011011110010101110111000)))
(assert (= r (fp #b1 #b10011111111 #b1100100000010111000111001100011011110010101110110111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
