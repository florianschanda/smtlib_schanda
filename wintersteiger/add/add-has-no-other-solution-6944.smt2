(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.294125994158959347402060302556492388248443603515625p-763 {+ 1324625717694266 -763 (2.66741e-230)}
; Y = 1.320778235252882293337961527868174016475677490234375p908 {+ 1444656740753446 908 (2.85802e+273)}
; 1.294125994158959347402060302556492388248443603515625p-763 + 1.320778235252882293337961527868174016475677490234375p908 == 1.320778235252882293337961527868174016475677490234375p908
; [HW: 1.320778235252882293337961527868174016475677490234375p908] 

; mpf : + 1444656740753446 908
; mpfd: + 1444656740753446 908 (2.85802e+273) class: Pos. norm. non-zero
; hwf : + 1444656740753446 908 (2.85802e+273) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000100 #b0100101101001011110101110101010111010000111100111010)))
(assert (= y (fp #b0 #b11110001011 #b0101001000011110100001011011110110101110000000100110)))
(assert (= r (fp #b0 #b11110001011 #b0101001000011110100001011011110110101110000000100110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
