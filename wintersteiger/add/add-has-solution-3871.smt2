(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.426534117678780244631298046442680060863494873046875p969 {- 1920938893438958 969 (-7.11784e+291)}
; Y = 1.105950615704171635655939098796807229518890380859375p529 {+ 477159153404982 529 (1.94358e+159)}
; -1.426534117678780244631298046442680060863494873046875p969 + 1.105950615704171635655939098796807229518890380859375p529 == -1.4265341176787800225866931214113719761371612548828125p969
; [HW: -1.4265341176787800225866931214113719761371612548828125p969] 

; mpf : - 1920938893438957 969
; mpfd: - 1920938893438957 969 (-7.11784e+291) class: Neg. norm. non-zero
; hwf : - 1920938893438957 969 (-7.11784e+291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001000 #b0110110100110001010101110000011000001110111111101110)))
(assert (= y (fp #b0 #b11000010000 #b0001101100011111100101000101110101110000110000110110)))
(assert (= r (fp #b1 #b11111001000 #b0110110100110001010101110000011000001110111111101101)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
