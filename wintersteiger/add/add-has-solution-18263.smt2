(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8433489784260033150786739497561939060688018798828125p-516 {- 3798106144982637 -516 (-8.5927e-156)}
; Y = 1.0891826758899869620478284559794701635837554931640625p-815 {+ 401643065906049 -815 (4.98487e-246)}
; -1.8433489784260033150786739497561939060688018798828125p-516 + 1.0891826758899869620478284559794701635837554931640625p-815 == -1.84334897842600309303406902472488582134246826171875p-516
; [HW: -1.84334897842600309303406902472488582134246826171875p-516] 

; mpf : - 3798106144982636 -516
; mpfd: - 3798106144982636 -516 (-8.5927e-156) class: Neg. norm. non-zero
; hwf : - 3798106144982636 -516 (-8.5927e-156) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111011 #b1101011111100101101101111111100101110100011001101101)))
(assert (= y (fp #b0 #b00011010000 #b0001011011010100101011010000010001010001001110000001)))
(assert (= r (fp #b1 #b00111111011 #b1101011111100101101101111111100101110100011001101100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
