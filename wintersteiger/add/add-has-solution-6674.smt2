(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.238701366022080474493805013480596244335174560546875p-238 {+ 1075015383069870 -238 (2.80432e-072)}
; Y = 1.8267267277424614757563858802313916385173797607421875p982 {+ 3723246182998179 982 (7.46671e+295)}
; 1.238701366022080474493805013480596244335174560546875p-238 + 1.8267267277424614757563858802313916385173797607421875p982 == 1.82672672774246169780099080526269972324371337890625p982
; [HW: 1.82672672774246169780099080526269972324371337890625p982] 

; mpf : + 3723246182998180 982
; mpfd: + 3723246182998180 982 (7.46671e+295) class: Pos. norm. non-zero
; hwf : + 3723246182998180 982 (7.46671e+295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100010001 #b0011110100011011100010000110000010010011010010101110)))
(assert (= y (fp #b0 #b11111010101 #b1101001110100100010111001110001001100010000010100011)))
(assert (= r (fp #b0 #b11111010101 #b1101001110100100010111001110001001100010000010100100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
