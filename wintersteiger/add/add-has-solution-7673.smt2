(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.891760875677544806450214309734292328357696533203125p262 {+ 4016133947404978 262 (1.40193e+079)}
; Y = -1.7778804639353513739052914388594217598438262939453125p-279 {- 3503262167518037 -279 (-1.83035e-084)}
; 1.891760875677544806450214309734292328357696533203125p262 + -1.7778804639353513739052914388594217598438262939453125p-279 == 1.8917608756775445844056093847029842436313629150390625p262
; [HW: 1.8917608756775445844056093847029842436313629150390625p262] 

; mpf : + 4016133947404977 262
; mpfd: + 4016133947404977 262 (1.40193e+079) class: Pos. norm. non-zero
; hwf : + 4016133947404977 262 (1.40193e+079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100000101 #b1110010001001010011100001101010011100011001010110010)))
(assert (= y (fp #b1 #b01011101000 #b1100011100100011001011001001000011001100101101010101)))
(assert (= r (fp #b0 #b10100000101 #b1110010001001010011100001101010011100011001010110001)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
