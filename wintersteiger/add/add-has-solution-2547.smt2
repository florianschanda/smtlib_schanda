(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.713800387815160863880237229750491678714752197265625p-361 {- 3214671160581274 -361 (-3.64865e-109)}
; Y = -1.2377111321477365368792789013241417706012725830078125p454 {- 1070555766162365 454 (-5.75754e+136)}
; -1.713800387815160863880237229750491678714752197265625p-361 + -1.2377111321477365368792789013241417706012725830078125p454 == -1.237711132147736758923883826355449855327606201171875p454
; [HW: -1.237711132147736758923883826355449855327606201171875p454] 

; mpf : - 1070555766162366 454
; mpfd: - 1070555766162366 454 (-5.75754e+136) class: Neg. norm. non-zero
; hwf : - 1070555766162366 454 (-5.75754e+136) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010110 #b1011011010111011100111110100100110001001110010011010)))
(assert (= y (fp #b1 #b10111000101 #b0011110011011010101000110000001001111000001110111101)))
(assert (= r (fp #b1 #b10111000101 #b0011110011011010101000110000001001111000001110111110)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
