(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1328945799681349182463918623398058116436004638671875p690 {+ 598503980824051 690 (5.81951e+207)}
; Y = 1.133103156949089918015260991523973643779754638671875p-339 {+ 599443328037758 -339 (1.01181e-102)}
; 1.1328945799681349182463918623398058116436004638671875p690 + 1.133103156949089918015260991523973643779754638671875p-339 == 1.13289457996813514029099678737111389636993408203125p690
; [HW: 1.13289457996813514029099678737111389636993408203125p690] 

; mpf : + 598503980824052 690
; mpfd: + 598503980824052 690 (5.81951e+207) class: Pos. norm. non-zero
; hwf : + 598503980824052 690 (5.81951e+207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110001 #b0010001000000101011000010001001011000111010111110011)))
(assert (= y (fp #b0 #b01010101100 #b0010001000010011000011000110101000010111001101111110)))
(assert (= r (fp #b0 #b11010110001 #b0010001000000101011000010001001011000111010111110100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
