(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.20365379599984745340179870254360139369964599609375p-504 {- 917175159777500 -504 (-2.29818e-152)}
; Y = 1.038287430891732032733898449805565178394317626953125p813 {+ 172431259496978 813 (5.67158e+244)}
; -1.20365379599984745340179870254360139369964599609375p-504 + 1.038287430891732032733898449805565178394317626953125p813 == 1.038287430891732032733898449805565178394317626953125p813
; [HW: 1.038287430891732032733898449805565178394317626953125p813] 

; mpf : + 172431259496978 813
; mpfd: + 172431259496978 813 (5.67158e+244) class: Pos. norm. non-zero
; hwf : + 172431259496978 813 (5.67158e+244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000111 #b0011010000100010101001111011100110000110100011011100)))
(assert (= y (fp #b0 #b11100101100 #b0000100111001101001101000111111110000111001000010010)))
(assert (= r (fp #b0 #b11100101100 #b0000100111001101001101000111111110000111001000010010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
