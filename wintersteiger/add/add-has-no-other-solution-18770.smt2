(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.52967178829841987663940017228014767169952392578125p762 {+ 2385429668409428 762 (3.71069e+229)}
; Y = -1.005894548861705484199546845047734677791595458984375p700 {- 26546688057094 700 (-5.29114e+210)}
; 1.52967178829841987663940017228014767169952392578125p762 + -1.005894548861705484199546845047734677791595458984375p700 == 1.5296717882984196545947952472488395869731903076171875p762
; [HW: 1.5296717882984196545947952472488395869731903076171875p762] 

; mpf : + 2385429668409427 762
; mpfd: + 2385429668409427 762 (3.71069e+229) class: Pos. norm. non-zero
; hwf : + 2385429668409427 762 (3.71069e+229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111001 #b1000011110011000100100100000000001011011000001010100)))
(assert (= y (fp #b1 #b11010111011 #b0000000110000010010011100001111010010101111100000110)))
(assert (= r (fp #b0 #b11011111001 #b1000011110011000100100100000000001011011000001010011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
