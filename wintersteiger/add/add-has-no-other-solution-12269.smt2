(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5938342362693675990925612495630048215389251708984375p-922 {- 2674391645182567 -922 (-4.49559e-278)}
; Y = 1.146983442436801947650337751838378608226776123046875p-653 {+ 661954576588014 -653 (3.06881e-197)}
; -1.5938342362693675990925612495630048215389251708984375p-922 + 1.146983442436801947650337751838378608226776123046875p-653 == 1.146983442436801947650337751838378608226776123046875p-653
; [HW: 1.146983442436801947650337751838378608226776123046875p-653] 

; mpf : + 661954576588014 -653
; mpfd: + 661954576588014 -653 (3.06881e-197) class: Pos. norm. non-zero
; hwf : + 661954576588014 -653 (3.06881e-197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100101 #b1001100000000101100001010100000000000101101001100111)))
(assert (= y (fp #b0 #b00101110010 #b0010010110100000101101001111011001010001110011101110)))
(assert (= r (fp #b0 #b00101110010 #b0010010110100000101101001111011001010001110011101110)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
