(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.51431737737458949055735502042807638645172119140625p-880 {- 2316279549094372 -880 (-1.87854e-265)}
; Y = -1.5723757930635964275012383950524963438510894775390625p801 {- 2577751408357105 801 (-2.09692e+241)}
; -1.51431737737458949055735502042807638645172119140625p-880 + -1.5723757930635964275012383950524963438510894775390625p801 == -1.5723757930635964275012383950524963438510894775390625p801
; [HW: -1.5723757930635964275012383950524963438510894775390625p801] 

; mpf : - 2577751408357105 801
; mpfd: - 2577751408357105 801 (-2.09692e+241) class: Neg. norm. non-zero
; hwf : - 2577751408357105 801 (-2.09692e+241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001111 #b1000001110101010010011011011101110010110100111100100)))
(assert (= y (fp #b1 #b11100100000 #b1001001010000111001110000101000000111010111011110001)))
(assert (= r (fp #b1 #b11100100000 #b1001001010000111001110000101000000111010111011110001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
