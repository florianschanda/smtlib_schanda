(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3430682348295348571554086447576992213726043701171875p-267 {- 1545041974540947 -267 (-5.66356e-081)}
; Y = 1.629654501775599673152328250580467283725738525390625p-138 {+ 2835711779568746 -138 (4.67688e-042)}
; -1.3430682348295348571554086447576992213726043701171875p-267 + 1.629654501775599673152328250580467283725738525390625p-138 == 1.6296545017755994511077233255491591989994049072265625p-138
; [HW: 1.6296545017755994511077233255491591989994049072265625p-138] 

; mpf : + 2835711779568745 -138
; mpfd: + 2835711779568745 -138 (4.67688e-042) class: Pos. norm. non-zero
; hwf : + 2835711779568745 -138 (4.67688e-042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011110100 #b0101011111010011010100011110000011100011101010010011)))
(assert (= y (fp #b0 #b01101110101 #b1010000100110001000010011001010011100111110001101010)))
(assert (= r (fp #b0 #b01101110101 #b1010000100110001000010011001010011100111110001101001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
