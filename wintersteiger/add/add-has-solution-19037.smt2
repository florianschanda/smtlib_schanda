(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6016101993856326490828223541029728949069976806640625p146 {- 2709411469775425 146 (-1.42868e+044)}
; Y = -1.2257802886469966185956081972108222544193267822265625p932 {- 1016824023818217 932 (-4.45009e+280)}
; -1.6016101993856326490828223541029728949069976806640625p146 + -1.2257802886469966185956081972108222544193267822265625p932 == -1.2257802886469966185956081972108222544193267822265625p932
; [HW: -1.2257802886469966185956081972108222544193267822265625p932] 

; mpf : - 1016824023818217 932
; mpfd: - 1016824023818217 932 (-4.45009e+280) class: Neg. norm. non-zero
; hwf : - 1016824023818217 932 (-4.45009e+280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010001 #b1001101000000011001000000100001101001101001001000001)))
(assert (= y (fp #b1 #b11110100011 #b0011100111001100101111001010101111010001111111101001)))
(assert (= r (fp #b1 #b11110100011 #b0011100111001100101111001010101111010001111111101001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
