(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.32265505774560221396995984832756221294403076171875p432 {+ 1453109197832300 432 (1.46691e+130)}
; Y = -1.038381068333996015695674941525794565677642822265625p-678 {- 172852965047066 -678 (-8.2798e-205)}
; 1.32265505774560221396995984832756221294403076171875p432 + -1.038381068333996015695674941525794565677642822265625p-678 == 1.3226550577456019919253549232962541282176971435546875p432
; [HW: 1.3226550577456019919253549232962541282176971435546875p432] 

; mpf : + 1453109197832299 432
; mpfd: + 1453109197832299 432 (1.46691e+130) class: Pos. norm. non-zero
; hwf : + 1453109197832299 432 (1.46691e+130) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101111 #b0101001010011001100001011001100011101000000001101100)))
(assert (= y (fp #b1 #b00101011001 #b0000100111010011010101110111100101000111101100011010)))
(assert (= r (fp #b0 #b10110101111 #b0101001010011001100001011001100011101000000001101011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
