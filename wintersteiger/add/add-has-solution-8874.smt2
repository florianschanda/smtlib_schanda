(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.402294855897693093282896370510570704936981201171875p121 {- 1811774963113918 121 (-3.72794e+036)}
; Y = 1.147653476944142436622087188879959285259246826171875p-168 {+ 664972143745598 -168 (3.06741e-051)}
; -1.402294855897693093282896370510570704936981201171875p121 + 1.147653476944142436622087188879959285259246826171875p-168 == -1.402294855897693093282896370510570704936981201171875p121
; [HW: -1.402294855897693093282896370510570704936981201171875p121] 

; mpf : - 1811774963113918 121
; mpfd: - 1811774963113918 121 (-3.72794e+036) class: Neg. norm. non-zero
; hwf : - 1811774963113918 121 (-3.72794e+036) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001111000 #b0110011011111100110010111011000101101101111110111110)))
(assert (= y (fp #b0 #b01101010111 #b0010010111001100100111100100011010011101101000111110)))
(assert (= r (fp #b1 #b10001111000 #b0110011011111100110010111011000101101101111110111110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
