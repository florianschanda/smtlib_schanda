(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1880231930268221329782818429521284997463226318359375p801 {+ 846781182052607 801 (1.58435e+241)}
; Y = 1.009050204914796022848122447612695395946502685546875p211 {+ 40758499481902 211 (3.32079e+063)}
; 1.1880231930268221329782818429521284997463226318359375p801 + 1.009050204914796022848122447612695395946502685546875p211 == 1.1880231930268221329782818429521284997463226318359375p801
; [HW: 1.1880231930268221329782818429521284997463226318359375p801] 

; mpf : + 846781182052607 801
; mpfd: + 846781182052607 801 (1.58435e+241) class: Pos. norm. non-zero
; hwf : + 846781182052607 801 (1.58435e+241) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100000 #b0011000000100010010010011011100011110000100011111111)))
(assert (= y (fp #b0 #b10011010010 #b0000001001010001000111010011111000100001100100101110)))
(assert (= r (fp #b0 #b11100100000 #b0011000000100010010010011011100011110000100011111111)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
