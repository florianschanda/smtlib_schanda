(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0612701956143559822720590091194026172161102294921875p447 {+ 275936430137731 447 (3.85686e+134)}
; Y = 1.3041164757265597540225599004770629107952117919921875p-712 {+ 1369618846759363 -712 (6.05284e-215)}
; 1.0612701956143559822720590091194026172161102294921875p447 + 1.3041164757265597540225599004770629107952117919921875p-712 == 1.06127019561435620431666393415071070194244384765625p447
; [HW: 1.06127019561435620431666393415071070194244384765625p447] 

; mpf : + 275936430137732 447
; mpfd: + 275936430137732 447 (3.85686e+134) class: Pos. norm. non-zero
; hwf : + 275936430137732 447 (3.85686e+134) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111110 #b0000111110101111011001110100111001100010000110000011)))
(assert (= y (fp #b0 #b00100110111 #b0100110111011010100100111100110101101011100111000011)))
(assert (= r (fp #b0 #b10110111110 #b0000111110101111011001110100111001100010000110000100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
