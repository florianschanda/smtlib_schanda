(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3317310480579618303664801715058274567127227783203125p904 {+ 1493983824421061 904 (1.80108e+272)}
; Y = -1.698988509201959207217669245437718927860260009765625p343 {- 3147964389578202 343 (-3.04424e+103)}
; 1.3317310480579618303664801715058274567127227783203125p904 + -1.698988509201959207217669245437718927860260009765625p343 == 1.3317310480579618303664801715058274567127227783203125p904
; [HW: 1.3317310480579618303664801715058274567127227783203125p904] 

; mpf : + 1493983824421061 904
; mpfd: + 1493983824421061 904 (1.80108e+272) class: Pos. norm. non-zero
; hwf : + 1493983824421061 904 (1.80108e+272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000111 #b0101010011101100010100110111001001111010000011000101)))
(assert (= y (fp #b1 #b10101010110 #b1011001011110000111010010011001101001101010111011010)))
(assert (= r (fp #b0 #b11110000111 #b0101010011101100010100110111001001111010000011000101)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
