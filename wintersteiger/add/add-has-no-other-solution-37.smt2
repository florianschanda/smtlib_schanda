(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6361747379776370170390009661787189543247222900390625p-918 {+ 2865076312898609 -918 (7.38403e-277)}
; Y = 1.9664747255484371635247953236103057861328125p-487 {+ 4352615213842944 -487 (4.92131e-147)}
; 1.6361747379776370170390009661787189543247222900390625p-918 + 1.9664747255484371635247953236103057861328125p-487 == 1.9664747255484371635247953236103057861328125p-487
; [HW: 1.9664747255484371635247953236103057861328125p-487] 

; mpf : + 4352615213842944 -487
; mpfd: + 4352615213842944 -487 (4.92131e-147) class: Pos. norm. non-zero
; hwf : + 4352615213842944 -487 (4.92131e-147) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101001 #b1010001011011100010110001111111000100111110000110001)))
(assert (= y (fp #b0 #b01000011000 #b1111011101101010111000110011101010100100001000000000)))
(assert (= r (fp #b0 #b01000011000 #b1111011101101010111000110011101010100100001000000000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
