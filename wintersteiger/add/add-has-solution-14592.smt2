(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9722764311726497243881794929620809853076934814453125p1023 {+ 4378743773130261 1023 (1.77277e+308)}
; Y = 1.50933615583105318336265554535202682018280029296875p502 {+ 2293846121607052 502 (1.97626e+151)}
; 1.9722764311726497243881794929620809853076934814453125p1023 + 1.50933615583105318336265554535202682018280029296875p502 == 1.972276431172649946432784417993389070034027099609375p1023
; [HW: 1.972276431172649946432784417993389070034027099609375p1023] 

; mpf : + 4378743773130262 1023
; mpfd: + 4378743773130262 1023 (1.77277e+308) class: Pos. norm. non-zero
; hwf : + 4378743773130262 1023 (1.77277e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111110 #b1111100011100111000110111011001010001110111000010101)))
(assert (= y (fp #b0 #b10111110101 #b1000001001100011110110101011001111110110111110001100)))
(assert (= r (fp #b0 #b11111111110 #b1111100011100111000110111011001010001110111000010110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
