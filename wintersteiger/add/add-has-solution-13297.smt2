(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4779928972115319307789604863501153886318206787109375p-801 {- 2152688633767599 -801 (-1.10827e-241)}
; Y = -1.8715279937296447343442196142859756946563720703125p-728 {- 3925013147803784 -728 (-1.32544e-219)}
; -1.4779928972115319307789604863501153886318206787109375p-801 + -1.8715279937296447343442196142859756946563720703125p-728 == -1.8715279937296447343442196142859756946563720703125p-728
; [HW: -1.8715279937296447343442196142859756946563720703125p-728] 

; mpf : - 3925013147803784 -728
; mpfd: - 3925013147803784 -728 (-1.32544e-219) class: Neg. norm. non-zero
; hwf : - 3925013147803784 -728 (-1.32544e-219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011011110 #b0111101001011101101111100001010100111110011010101111)))
(assert (= y (fp #b1 #b00100100111 #b1101111100011100011101010110011010011110000010001000)))
(assert (= r (fp #b1 #b00100100111 #b1101111100011100011101010110011010011110000010001000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
