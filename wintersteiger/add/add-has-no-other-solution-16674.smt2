(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3037216003023648358549735348788090050220489501953125p-379 {- 1367840485946101 -379 (-1.05881e-114)}
; Y = 1.081810154634321730071633282932452857494354248046875p-669 {+ 368440181926254 -669 (4.41656e-202)}
; -1.3037216003023648358549735348788090050220489501953125p-379 + 1.081810154634321730071633282932452857494354248046875p-669 == -1.30372160030236461381036860984750092029571533203125p-379
; [HW: -1.30372160030236461381036860984750092029571533203125p-379] 

; mpf : - 1367840485946100 -379
; mpfd: - 1367840485946100 -379 (-1.05881e-114) class: Neg. norm. non-zero
; hwf : - 1367840485946100 -379 (-1.05881e-114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000100 #b0100110111000000101100101110010001100011001011110101)))
(assert (= y (fp #b0 #b00101100010 #b0001010011110001100000101010001010100010100101101110)))
(assert (= r (fp #b1 #b01010000100 #b0100110111000000101100101110010001100011001011110100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
