(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2215978934735147731771576218307018280029296875p364 {+ 997988190473408 364 (4.59036e+109)}
; Y = 1.50460123045855898027411967632360756397247314453125p613 {+ 2272521913463860 613 (5.11457e+184)}
; 1.2215978934735147731771576218307018280029296875p364 + 1.50460123045855898027411967632360756397247314453125p613 == 1.50460123045855898027411967632360756397247314453125p613
; [HW: 1.50460123045855898027411967632360756397247314453125p613] 

; mpf : + 2272521913463860 613
; mpfd: + 2272521913463860 613 (5.11457e+184) class: Pos. norm. non-zero
; hwf : + 2272521913463860 613 (5.11457e+184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101011 #b0011100010111010101000111011100101010100110011000000)))
(assert (= y (fp #b0 #b11001100100 #b1000000100101101100010111101011001010111010000110100)))
(assert (= r (fp #b0 #b11001100100 #b1000000100101101100010111101011001010111010000110100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
