(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.161499152849079674609811263508163392543792724609375p-916 {- 727327524591766 -916 (-2.09673e-276)}
; Y = -1.1617350519383873308498777987551875412464141845703125p81 {- 728389919642469 81 (-2.8089e+024)}
; -1.161499152849079674609811263508163392543792724609375p-916 + -1.1617350519383873308498777987551875412464141845703125p81 == -1.1617350519383873308498777987551875412464141845703125p81
; [HW: -1.1617350519383873308498777987551875412464141845703125p81] 

; mpf : - 728389919642469 81
; mpfd: - 728389919642469 81 (-2.8089e+024) class: Neg. norm. non-zero
; hwf : - 728389919642469 81 (-2.8089e+024) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101011 #b0010100101011000000000100010101111010001100010010110)))
(assert (= y (fp #b1 #b10001010000 #b0010100101100111011101111110011010110001001101100101)))
(assert (= r (fp #b1 #b10001010000 #b0010100101100111011101111110011010110001001101100101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
