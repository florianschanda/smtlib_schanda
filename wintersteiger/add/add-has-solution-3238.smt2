(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3377780647216326315174228511750698089599609375p701 {+ 1521217166414272 701 (1.40738e+211)}
; Y = -1.6424456396329938367983913849457167088985443115234375p79 {- 2893317943256951 79 (-9.92797e+023)}
; 1.3377780647216326315174228511750698089599609375p701 + -1.6424456396329938367983913849457167088985443115234375p79 == 1.3377780647216326315174228511750698089599609375p701
; [HW: 1.3377780647216326315174228511750698089599609375p701] 

; mpf : + 1521217166414272 701
; mpfd: + 1521217166414272 701 (1.40738e+211) class: Pos. norm. non-zero
; hwf : + 1521217166414272 701 (1.40738e+211) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111100 #b0101011001111000100111111000110101001001000111000000)))
(assert (= y (fp #b1 #b10001001110 #b1010010001110111010100010100001110101110011101110111)))
(assert (= r (fp #b0 #b11010111100 #b0101011001111000100111111000110101001001000111000000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
