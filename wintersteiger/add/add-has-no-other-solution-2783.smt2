(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4002943870445647700506697219680063426494598388671875p-126 {+ 1802765652332403 -126 (1.64604e-038)}
; Y = 1.3204312947839327296861711147357709705829620361328125p-510 {+ 1443094259786765 -510 (3.93929e-154)}
; 1.4002943870445647700506697219680063426494598388671875p-126 + 1.3204312947839327296861711147357709705829620361328125p-510 == 1.4002943870445647700506697219680063426494598388671875p-126
; [HW: 1.4002943870445647700506697219680063426494598388671875p-126] 

; mpf : + 1802765652332403 -126
; mpfd: + 1802765652332403 -126 (1.64604e-038) class: Pos. norm. non-zero
; hwf : + 1802765652332403 -126 (1.64604e-038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110000001 #b0110011001111001101100010110010100100000111101110011)))
(assert (= y (fp #b0 #b01000000001 #b0101001000000111110010010000101110110110010000001101)))
(assert (= r (fp #b0 #b01110000001 #b0110011001111001101100010110010100100000111101110011)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
