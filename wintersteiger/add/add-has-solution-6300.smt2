(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8787393023922474011300209895125590264797210693359375p-753 {- 3957489994809535 -753 (-3.96533e-227)}
; Y = -1.2597938145903631035338321453309617936611175537109375p-948 {- 1170007326582319 -948 (-5.29497e-286)}
; -1.8787393023922474011300209895125590264797210693359375p-753 + -1.2597938145903631035338321453309617936611175537109375p-948 == -1.8787393023922476231746259145438671112060546875p-753
; [HW: -1.8787393023922476231746259145438671112060546875p-753] 

; mpf : - 3957489994809536 -753
; mpfd: - 3957489994809536 -753 (-3.96533e-227) class: Neg. norm. non-zero
; hwf : - 3957489994809536 -753 (-3.96533e-227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001110 #b1110000011110101000011110001010101111100000010111111)))
(assert (= y (fp #b1 #b00001001011 #b0100001010000001110110001111000101011110011000101111)))
(assert (= r (fp #b1 #b00100001110 #b1110000011110101000011110001010101111100000011000000)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
