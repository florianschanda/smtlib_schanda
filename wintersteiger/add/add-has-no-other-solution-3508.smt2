(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.454347234619250084364239228307269513607025146484375p-737 {+ 2046198036528070 -737 (2.01169e-222)}
; Y = 1.7271413390809373655798708568909205496311187744140625p-798 {+ 3274753463730593 -798 (1.03608e-240)}
; 1.454347234619250084364239228307269513607025146484375p-737 + 1.7271413390809373655798708568909205496311187744140625p-798 == 1.4543472346192503064088441533385775983333587646484375p-737
; [HW: 1.4543472346192503064088441533385775983333587646484375p-737] 

; mpf : + 2046198036528071 -737
; mpfd: + 2046198036528071 -737 (2.01169e-222) class: Pos. norm. non-zero
; hwf : + 2046198036528071 -737 (2.01169e-222) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100011110 #b0111010001010000000110011011000110110111101111000110)))
(assert (= y (fp #b0 #b00011100001 #b1011101000100101111011110100111011101100000110100001)))
(assert (= r (fp #b0 #b00100011110 #b0111010001010000000110011011000110110111101111000111)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
