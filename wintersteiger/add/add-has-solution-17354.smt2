(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.986599224873435876048688442097045481204986572265625p943 {- 4443247901504026 943 (-1.47705e+284)}
; Y = -1.709320165146806846934168788720853626728057861328125p296 {- 3194494031441538 296 (-2.17622e+089)}
; -1.986599224873435876048688442097045481204986572265625p943 + -1.709320165146806846934168788720853626728057861328125p296 == -1.986599224873435876048688442097045481204986572265625p943
; [HW: -1.986599224873435876048688442097045481204986572265625p943] 

; mpf : - 4443247901504026 943
; mpfd: - 4443247901504026 943 (-1.47705e+284) class: Neg. norm. non-zero
; hwf : - 4443247901504026 943 (-1.47705e+284) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110101110 #b1111110010010001110001000100110100010111001000011010)))
(assert (= y (fp #b1 #b10100100111 #b1011010110010110000000011001111110110010111010000010)))
(assert (= r (fp #b1 #b11110101110 #b1111110010010001110001000100110100010111001000011010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
