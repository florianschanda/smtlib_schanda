(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0041779684614804413200772614800371229648590087890625p44 {- 18815897206289 44 (-1.76657e+013)}
; Y = -1.2128968556616950280613309587351977825164794921875p-887 {- 958802199826360 -887 (-1.17549e-267)}
; -1.0041779684614804413200772614800371229648590087890625p44 + -1.2128968556616950280613309587351977825164794921875p-887 == -1.0041779684614804413200772614800371229648590087890625p44
; [HW: -1.0041779684614804413200772614800371229648590087890625p44] 

; mpf : - 18815897206289 44
; mpfd: - 18815897206289 44 (-1.76657e+013) class: Neg. norm. non-zero
; hwf : - 18815897206289 44 (-1.76657e+013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101011 #b0000000100010001110011101010110111100111111000010001)))
(assert (= y (fp #b1 #b00010001000 #b0011011010000000011010001000100001111100111110111000)))
(assert (= r (fp #b1 #b10000101011 #b0000000100010001110011101010110111100111111000010001)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
