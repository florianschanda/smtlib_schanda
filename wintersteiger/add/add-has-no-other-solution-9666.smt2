(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.263159554091368708128584330552257597446441650390625p-1022 {+ 1185165269744874 -1023 (5.85549e-309)}
; Y = -1.7529447883986322143101688197930343449115753173828125p988 {- 3390961868462637 988 (-4.58568e+297)}
; 0.263159554091368708128584330552257597446441650390625p-1022 + -1.7529447883986322143101688197930343449115753173828125p988 == -1.75294478839863199226556389476172626018524169921875p988
; [HW: -1.75294478839863199226556389476172626018524169921875p988] 

; mpf : - 3390961868462636 988
; mpfd: - 3390961868462636 988 (-4.58568e+297) class: Neg. norm. non-zero
; hwf : - 3390961868462636 988 (-4.58568e+297) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0100001101011110011011001010111001110011110011101010)))
(assert (= y (fp #b1 #b11111011011 #b1100000011000000111111010101100111011101101000101101)))
(assert (= r (fp #b1 #b11111011011 #b1100000011000000111111010101100111011101101000101100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
