(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6715664361381101787884517761995084583759307861328125p-417 {- 3024466351546125 -417 (-4.93873e-126)}
; Y = 1.7566641750755216389023871670360676944255828857421875p-581 {+ 3407712496914723 -581 (2.21953e-175)}
; -1.6715664361381101787884517761995084583759307861328125p-417 + 1.7566641750755216389023871670360676944255828857421875p-581 == -1.6715664361381101787884517761995084583759307861328125p-417
; [HW: -1.6715664361381101787884517761995084583759307861328125p-417] 

; mpf : - 3024466351546125 -417
; mpfd: - 3024466351546125 -417 (-4.93873e-126) class: Neg. norm. non-zero
; hwf : - 3024466351546125 -417 (-4.93873e-126) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001011110 #b1010101111101011110001110010100001001101111100001101)))
(assert (= y (fp #b0 #b00110111010 #b1100000110110100101111100100111000000001000100100011)))
(assert (= r (fp #b1 #b01001011110 #b1010101111101011110001110010100001001101111100001101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
