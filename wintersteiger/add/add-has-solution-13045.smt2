(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5937066208422698831981278999592177569866180419921875p44 {- 2673816916392643 44 (-2.80368e+013)}
; Y = 1.0506263961544579643714314443059265613555908203125p-658 {+ 228001018856328 -658 (8.78438e-199)}
; -1.5937066208422698831981278999592177569866180419921875p44 + 1.0506263961544579643714314443059265613555908203125p-658 == -1.593706620842269661153522974927909672260284423828125p44
; [HW: -1.593706620842269661153522974927909672260284423828125p44] 

; mpf : - 2673816916392642 44
; mpfd: - 2673816916392642 44 (-2.80368e+013) class: Neg. norm. non-zero
; hwf : - 2673816916392642 44 (-2.80368e+013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101011 #b1001011111111101001010000011011111101111101011000011)))
(assert (= y (fp #b0 #b00101101101 #b0000110011110101110110011111101111001100001110001000)))
(assert (= r (fp #b1 #b10000101011 #b1001011111111101001010000011011111101111101011000010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
