(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.02062963036090526003363265772350132465362548828125p-726 {+ 92907595606164 -726 (2.89129e-219)}
; Y = -1.907695842814114417507198595558293163776397705078125p790 {- 4087898659463394 790 (-1.24224e+238)}
; 1.02062963036090526003363265772350132465362548828125p-726 + -1.907695842814114417507198595558293163776397705078125p790 == -1.9076958428141141954625936705269850790500640869140625p790
; [HW: -1.9076958428141141954625936705269850790500640869140625p790] 

; mpf : - 4087898659463393 790
; mpfd: - 4087898659463393 790 (-1.24224e+238) class: Neg. norm. non-zero
; hwf : - 4087898659463393 790 (-1.24224e+238) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101001 #b0000010101000111111110111100001110111010100010010100)))
(assert (= y (fp #b1 #b11100010101 #b1110100001011110110000010011011110011010000011100010)))
(assert (= r (fp #b1 #b11100010101 #b1110100001011110110000010011011110011010000011100001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
