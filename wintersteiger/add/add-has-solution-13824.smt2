(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3893200200362436635970198040013201534748077392578125p134 {+ 1753341497163101 134 (3.02567e+040)}
; Y = 1.322449965317276987519790054648183286190032958984375p215 {+ 1452185543648518 215 (6.96351e+064)}
; 1.3893200200362436635970198040013201534748077392578125p134 + 1.322449965317276987519790054648183286190032958984375p215 == 1.322449965317276987519790054648183286190032958984375p215
; [HW: 1.322449965317276987519790054648183286190032958984375p215] 

; mpf : + 1452185543648518 215
; mpfd: + 1452185543648518 215 (6.96351e+064) class: Pos. norm. non-zero
; hwf : + 1452185543648518 215 (6.96351e+064) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000101 #b0110001110101010011110100001000110111011110101011101)))
(assert (= y (fp #b0 #b10011010110 #b0101001010001100000101001011011110100010010100000110)))
(assert (= r (fp #b0 #b10011010110 #b0101001010001100000101001011011110100010010100000110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
