(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.887245614913442448568048348533920943737030029296875p196 {- 3995799020710286 196 (-1.89543e+059)}
; Y = 1.3020138881717269185855911928229033946990966796875p12 {+ 1360149634230904 12 (5333.05)}
; -1.887245614913442448568048348533920943737030029296875p196 + 1.3020138881717269185855911928229033946990966796875p12 == -1.8872456149134422265234434235026128590106964111328125p196
; [HW: -1.8872456149134422265234434235026128590106964111328125p196] 

; mpf : - 3995799020710285 196
; mpfd: - 3995799020710285 196 (-1.89543e+059) class: Neg. norm. non-zero
; hwf : - 3995799020710285 196 (-1.89543e+059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000011 #b1110001100100010100001110101001110010010100110001110)))
(assert (= y (fp #b0 #b10000001011 #b0100110101010000110010000011110010100010101001111000)))
(assert (= r (fp #b1 #b10011000011 #b1110001100100010100001110101001110010010100110001101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
