(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4055988671537453793547456371015869081020355224609375p-687 {+ 1826654906975503 -687 (2.18904e-207)}
; Y = 1.77131812406065858311876581865362823009490966796875p-957 {+ 3473708016103692 -957 (1.45409e-288)}
; 1.4055988671537453793547456371015869081020355224609375p-687 + 1.77131812406065858311876581865362823009490966796875p-957 == 1.4055988671537453793547456371015869081020355224609375p-687
; [HW: 1.4055988671537453793547456371015869081020355224609375p-687] 

; mpf : + 1826654906975503 -687
; mpfd: + 1826654906975503 -687 (2.18904e-207) class: Pos. norm. non-zero
; hwf : + 1826654906975503 -687 (2.18904e-207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010000 #b0110011111010101010100111100110110111000010100001111)))
(assert (= y (fp #b0 #b00001000010 #b1100010101110101000110101100010110100111000100001100)))
(assert (= r (fp #b0 #b00101010000 #b0110011111010101010100111100110110111000010100001111)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
