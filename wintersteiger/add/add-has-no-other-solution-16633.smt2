(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.853826013943456363364248318248428404331207275390625p-236 {+ 3845290518234986 -236 (1.67877e-071)}
; Y = -1.0175459191100688638442761657643131911754608154296875p1016 {- 79019794765979 1016 (-7.14545e+305)}
; 1.853826013943456363364248318248428404331207275390625p-236 + -1.0175459191100688638442761657643131911754608154296875p1016 == -1.017545919110068641799671240733005106449127197265625p1016
; [HW: -1.017545919110068641799671240733005106449127197265625p1016] 

; mpf : - 79019794765978 1016
; mpfd: - 79019794765978 1016 (-7.14545e+305) class: Neg. norm. non-zero
; hwf : - 79019794765978 1016 (-7.14545e+305) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100010011 #b1101101010010100010101110111011001011100011101101010)))
(assert (= y (fp #b1 #b11111110111 #b0000010001111101111000111010110011000001100010011011)))
(assert (= r (fp #b1 #b11111110111 #b0000010001111101111000111010110011000001100010011010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
