(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.419733446124262332688203969155438244342803955078125p-773 {- 1890311391560162 -773 (-2.85772e-233)}
; Y = 1.4343871075330947295611849767738021910190582275390625p-111 {+ 1956305615620593 -111 (5.52506e-034)}
; -1.419733446124262332688203969155438244342803955078125p-773 + 1.4343871075330947295611849767738021910190582275390625p-111 == 1.4343871075330947295611849767738021910190582275390625p-111
; [HW: 1.4343871075330947295611849767738021910190582275390625p-111] 

; mpf : + 1956305615620593 -111
; mpfd: + 1956305615620593 -111 (5.52506e-034) class: Pos. norm. non-zero
; hwf : + 1956305615620593 -111 (5.52506e-034) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111010 #b0110101101110011101001101011000000100100000111100010)))
(assert (= y (fp #b0 #b01110010000 #b0110111100110011111111100101010010101000100111110001)))
(assert (= r (fp #b0 #b01110010000 #b0110111100110011111111100101010010101000100111110001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
