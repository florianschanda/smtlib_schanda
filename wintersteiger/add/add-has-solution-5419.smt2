(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.750933400246080129392112212372012436389923095703125p81 {+ 3381903381528306 81 (4.2335e+024)}
; Y = 1.99588840487460839057121120276860892772674560546875p-834 {+ 4485082649095884 -834 (1.74229e-251)}
; 1.750933400246080129392112212372012436389923095703125p81 + 1.99588840487460839057121120276860892772674560546875p-834 == 1.750933400246080129392112212372012436389923095703125p81
; [HW: 1.750933400246080129392112212372012436389923095703125p81] 

; mpf : + 3381903381528306 81
; mpfd: + 3381903381528306 81 (4.2335e+024) class: Pos. norm. non-zero
; hwf : + 3381903381528306 81 (4.2335e+024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001010000 #b1100000000111101001010111101101110000111111011110010)))
(assert (= y (fp #b0 #b00010111101 #b1111111011110010100010101110000101100110111011001100)))
(assert (= r (fp #b0 #b10001010000 #b1100000000111101001010111101101110000111111011110010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
