(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.964450403558763103006867822841741144657135009765625p-627 {+ 4343498478084570 -627 (3.52723e-189)}
; Y = 1.5483474927861664571793198774685151875019073486328125p819 {+ 2469537564181325 819 (5.41296e+246)}
; 1.964450403558763103006867822841741144657135009765625p-627 + 1.5483474927861664571793198774685151875019073486328125p819 == 1.548347492786166679223924802499823272228240966796875p819
; [HW: 1.548347492786166679223924802499823272228240966796875p819] 

; mpf : + 2469537564181326 819
; mpfd: + 2469537564181326 819 (5.41296e+246) class: Pos. norm. non-zero
; hwf : + 2469537564181326 819 (5.41296e+246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001100 #b1111011011100110001110001011110111100110000111011010)))
(assert (= y (fp #b0 #b11100110010 #b1000110001100000100000000101010001011100001101001101)))
(assert (= r (fp #b0 #b11100110010 #b1000110001100000100000000101010001011100001101001110)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
