(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.71669284303507918565401269006542861461639404296875p11 {- 3227697620831884 11 (-3515.79)}
; Y = 1.890996566000153311648546150536276400089263916015625p824 {+ 4012691802626682 824 (2.11547e+248)}
; -1.71669284303507918565401269006542861461639404296875p11 + 1.890996566000153311648546150536276400089263916015625p824 == 1.890996566000153311648546150536276400089263916015625p824
; [HW: 1.890996566000153311648546150536276400089263916015625p824] 

; mpf : + 4012691802626682 824
; mpfd: + 4012691802626682 824 (2.11547e+248) class: Pos. norm. non-zero
; hwf : + 4012691802626682 824 (2.11547e+248) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001010 #b1011011101111001001011101010001000011100111010001100)))
(assert (= y (fp #b0 #b11100110111 #b1110010000011000010110011101011111010001101001111010)))
(assert (= r (fp #b0 #b11100110111 #b1110010000011000010110011101011111010001101001111010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
