(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.360342835911748426980238946271128952503204345703125p483 {+ 1622839861537778 483 (3.39732e+145)}
; Y = -1.75339934527239282857635771506465971469879150390625p142 {- 3393009010629924 142 (-9.77553e+042)}
; 1.360342835911748426980238946271128952503204345703125p483 + -1.75339934527239282857635771506465971469879150390625p142 == 1.360342835911748426980238946271128952503204345703125p483
; [HW: 1.360342835911748426980238946271128952503204345703125p483] 

; mpf : + 1622839861537778 483
; mpfd: + 1622839861537778 483 (3.39732e+145) class: Pos. norm. non-zero
; hwf : + 1622839861537778 483 (3.39732e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100010 #b0101110000111111011011011001011110010110101111110010)))
(assert (= y (fp #b1 #b10010001101 #b1100000011011110110001111000110011000101110100100100)))
(assert (= r (fp #b0 #b10111100010 #b0101110000111111011011011001011110010110101111110010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
