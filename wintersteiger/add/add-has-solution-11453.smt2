(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.91796493107482302065136536839418113231658935546875p-579 {+ 4134146521527756 -579 (9.69333e-175)}
; Y = -1.175636955079872425500298049882985651493072509765625p-682 {- 790998525450202 -682 (-5.8589e-206)}
; 1.91796493107482302065136536839418113231658935546875p-579 + -1.175636955079872425500298049882985651493072509765625p-682 == 1.9179649310748227986067604433628730475902557373046875p-579
; [HW: 1.9179649310748227986067604433628730475902557373046875p-579] 

; mpf : + 4134146521527755 -579
; mpfd: + 4134146521527755 -579 (9.69333e-175) class: Pos. norm. non-zero
; hwf : + 4134146521527755 -579 (9.69333e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111100 #b1110101011111111101111111110110111010111010111001100)))
(assert (= y (fp #b1 #b00101010101 #b0010110011110110100010110010001000001001011111011010)))
(assert (= r (fp #b0 #b00110111100 #b1110101011111111101111111110110111010111010111001011)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
