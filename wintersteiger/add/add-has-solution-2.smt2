(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.279214981649765103810523214633576571941375732421875p164 {- 1257472487314142 164 (-2.99132e+049)}
; Y = -1.8359376257468100757108686593710444867610931396484375p585 {- 3764728379818311 585 (-2.32491e+176)}
; -1.279214981649765103810523214633576571941375732421875p164 + -1.8359376257468100757108686593710444867610931396484375p585 == -1.8359376257468100757108686593710444867610931396484375p585
; [HW: -1.8359376257468100757108686593710444867610931396484375p585] 

; mpf : - 3764728379818311 585
; mpfd: - 3764728379818311 585 (-2.32491e+176) class: Neg. norm. non-zero
; hwf : - 3764728379818311 585 (-2.32491e+176) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100011 #b0100011101111010101000100000111010111101001011011110)))
(assert (= y (fp #b1 #b11001001000 #b1101011000000000000000100001110000010100000101000111)))
(assert (= r (fp #b1 #b11001001000 #b1101011000000000000000100001110000010100000101000111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
