(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.900047493126855169265354561503045260906219482421875p-347 {+ 4053453554661854 -347 (6.62759e-105)}
; Y = 1.1982976317688927014870614584651775658130645751953125p734 {+ 893053140542837 734 (1.08288e+221)}
; 1.900047493126855169265354561503045260906219482421875p-347 + 1.1982976317688927014870614584651775658130645751953125p734 == 1.198297631768892923531666383496485650539398193359375p734
; [HW: 1.198297631768892923531666383496485650539398193359375p734] 

; mpf : + 893053140542838 734
; mpfd: + 893053140542838 734 (1.08288e+221) class: Pos. norm. non-zero
; hwf : + 893053140542838 734 (1.08288e+221) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100100 #b1110011001101001100000110011001111010011100111011110)))
(assert (= y (fp #b0 #b11011011101 #b0011001011000011101000100011001101010010010101110101)))
(assert (= r (fp #b0 #b11011011101 #b0011001011000011101000100011001101010010010101110110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
