(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3628820583943725974762628538883291184902191162109375p806 {+ 1634275502964335 806 (5.81614e+242)}
; Y = -1.5375520724642741665633138836710713803768157958984375p-639 {- 2420919313242343 -639 (-6.74004e-193)}
; 1.3628820583943725974762628538883291184902191162109375p806 + -1.5375520724642741665633138836710713803768157958984375p-639 == 1.362882058394372375431657928857021033763885498046875p806
; [HW: 1.362882058394372375431657928857021033763885498046875p806] 

; mpf : + 1634275502964334 806
; mpfd: + 1634275502964334 806 (5.81614e+242) class: Pos. norm. non-zero
; hwf : + 1634275502964334 806 (5.81614e+242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100101 #b0101110011100101110101101010110100011011111001101111)))
(assert (= y (fp #b1 #b00110000000 #b1000100110011101000000110011101100100001100011100111)))
(assert (= r (fp #b0 #b11100100101 #b0101110011100101110101101010110100011011111001101110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
