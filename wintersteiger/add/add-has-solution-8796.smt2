(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3352081158756956558164574744296260178089141845703125p322 {+ 1509643145749349 322 (1.14079e+097)}
; Y = -1.3063402788747549010395232471637427806854248046875p-728 {- 1379633965788920 -728 (-9.25166e-220)}
; 1.3352081158756956558164574744296260178089141845703125p322 + -1.3063402788747549010395232471637427806854248046875p-728 == 1.33520811587569543377185254939831793308258056640625p322
; [HW: 1.33520811587569543377185254939831793308258056640625p322] 

; mpf : + 1509643145749348 322
; mpfd: + 1509643145749348 322 (1.14079e+097) class: Pos. norm. non-zero
; hwf : + 1509643145749348 322 (1.14079e+097) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000001 #b0101010111010000001100101111011100001010001101100101)))
(assert (= y (fp #b1 #b00100100111 #b0100111001101100010100010000011100110110111011111000)))
(assert (= r (fp #b0 #b10101000001 #b0101010111010000001100101111011100001010001101100100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
