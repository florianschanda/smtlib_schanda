(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2245525568729298537817840042407624423503875732421875p833 {- 1011294811458019 833 (-7.01397e+250)}
; Y = 1.1583124036812433299559188526473008096218109130859375p929 {+ 712975682226975 929 (5.25644e+279)}
; -1.2245525568729298537817840042407624423503875732421875p833 + 1.1583124036812433299559188526473008096218109130859375p929 == 1.1583124036812433299559188526473008096218109130859375p929
; [HW: 1.1583124036812433299559188526473008096218109130859375p929] 

; mpf : + 712975682226975 929
; mpfd: + 712975682226975 929 (5.25644e+279) class: Pos. norm. non-zero
; hwf : + 712975682226975 929 (5.25644e+279) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000000 #b0011100101111100010001101100000000000000100111100011)))
(assert (= y (fp #b0 #b11110100000 #b0010100010000111001010010110010001011100101100011111)))
(assert (= r (fp #b0 #b11110100000 #b0010100010000111001010010110010001011100101100011111)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
