(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4577730712117169531438776175491511821746826171875p-538 {+ 2061626632929336 -538 (1.62014e-162)}
; Y = 1.46038134206245384660860509029589593410491943359375p-563 {+ 2073373240560796 -563 (4.83703e-170)}
; 1.4577730712117169531438776175491511821746826171875p-538 + 1.46038134206245384660860509029589593410491943359375p-563 == 1.457773114734472574838264335994608700275421142578125p-538
; [HW: 1.457773114734472574838264335994608700275421142578125p-538] 

; mpf : + 2061626828938402 -538
; mpfd: + 2061626828938402 -538 (1.62014e-162) class: Pos. norm. non-zero
; hwf : + 2061626828938402 -538 (1.62014e-162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100101 #b0111010100110000100111011011000111011000000000111000)))
(assert (= y (fp #b0 #b00111001100 #b0111010111011011100011010011011111011000110010011100)))
(assert (= r (fp #b0 #b00111100101 #b0111010100110000100111100110110011000101110010100010)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
