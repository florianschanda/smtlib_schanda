(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8986502305298926795984471027622930705547332763671875p-342 {- 4047160843350835 -342 (-2.11927e-103)}
; Y = -1.201308942263126677829632171778939664363861083984375p684 {- 906614877362566 684 (-9.6421e+205)}
; -1.8986502305298926795984471027622930705547332763671875p-342 + -1.201308942263126677829632171778939664363861083984375p684 == -1.201308942263126677829632171778939664363861083984375p684
; [HW: -1.201308942263126677829632171778939664363861083984375p684] 

; mpf : - 906614877362566 684
; mpfd: - 906614877362566 684 (-9.6421e+205) class: Neg. norm. non-zero
; hwf : - 906614877362566 684 (-9.6421e+205) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101001 #b1110011000001101111100010000011010101011001100110011)))
(assert (= y (fp #b1 #b11010101011 #b0011001110001000111110111001101101101001100110000110)))
(assert (= r (fp #b1 #b11010101011 #b0011001110001000111110111001101101101001100110000110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
