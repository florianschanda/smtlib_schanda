(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3251891322687463503626759120379574596881866455078125p46 {+ 1464521654910461 46 (9.32519e+013)}
; Y = 1.016952041004494322606888090376742184162139892578125p-830 {+ 76345205551010 -830 (1.42038e-250)}
; 1.3251891322687463503626759120379574596881866455078125p46 + 1.016952041004494322606888090376742184162139892578125p-830 == 1.3251891322687463503626759120379574596881866455078125p46
; [HW: 1.3251891322687463503626759120379574596881866455078125p46] 

; mpf : + 1464521654910461 46
; mpfd: + 1464521654910461 46 (9.32519e+013) class: Pos. norm. non-zero
; hwf : + 1464521654910461 46 (9.32519e+013) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101101 #b0101001100111111100110000101000000011011110111111101)))
(assert (= y (fp #b0 #b00011000001 #b0000010001010110111110000000110110110110111110100010)))
(assert (= r (fp #b0 #b10000101101 #b0101001100111111100110000101000000011011110111111101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
