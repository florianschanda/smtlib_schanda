(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3243087011778686967744533831137232482433319091796875p208 {+ 1460556545777659 208 (5.44789e+062)}
; Y = 1.19666169284219403579072604770772159099578857421875p265 {+ 885685526602156 265 (7.09447e+079)}
; 1.3243087011778686967744533831137232482433319091796875p208 + 1.19666169284219403579072604770772159099578857421875p265 == 1.1966616928421942578353309727390296757221221923828125p265
; [HW: 1.1966616928421942578353309727390296757221221923828125p265] 

; mpf : + 885685526602157 265
; mpfd: + 885685526602157 265 (7.09447e+079) class: Pos. norm. non-zero
; hwf : + 885685526602157 265 (7.09447e+079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011001111 #b0101001100000101111001010010000101011101111111111011)))
(assert (= y (fp #b0 #b10100001000 #b0011001001011000011010111011001100100010000110101100)))
(assert (= r (fp #b0 #b10100001000 #b0011001001011000011010111011001100100010000110101101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
