(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.635924140264405135525294099352322518825531005859375p247 {- 2863947721130678 247 (-3.69975e+074)}
; Y = 1.8533860417929981512230597218149341642856597900390625p-685 {+ 3843309059822129 -685 (1.15457e-206)}
; -1.635924140264405135525294099352322518825531005859375p247 + 1.8533860417929981512230597218149341642856597900390625p-685 == -1.6359241402644049134806891743210144340991973876953125p247
; [HW: -1.6359241402644049134806891743210144340991973876953125p247] 

; mpf : - 2863947721130677 247
; mpfd: - 2863947721130677 247 (-3.69975e+074) class: Neg. norm. non-zero
; hwf : - 2863947721130677 247 (-3.69975e+074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110110 #b1010001011001011111011001010100100101100001010110110)))
(assert (= y (fp #b0 #b00101010010 #b1101101001110111100000011111010001011101001000110001)))
(assert (= r (fp #b1 #b10011110110 #b1010001011001011111011001010100100101100001010110101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
