(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.524458227568179946587179074413143098354339599609375p-912 {+ 2361949878247446 -912 (4.40311e-275)}
; Y = -1.955988857084090870586123855900950729846954345703125p-489 {- 4305391060534258 -489 (-1.22377e-147)}
; 1.524458227568179946587179074413143098354339599609375p-912 + -1.955988857084090870586123855900950729846954345703125p-489 == -1.9559888570840906485415189308696426451206207275390625p-489
; [HW: -1.9559888570840906485415189308696426451206207275390625p-489] 

; mpf : - 4305391060534257 -489
; mpfd: - 4305391060534257 -489 (-1.22377e-147) class: Neg. norm. non-zero
; hwf : - 4305391060534257 -489 (-1.22377e-147) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101111 #b1000011001000010111001001111011110000110000000010110)))
(assert (= y (fp #b1 #b01000010110 #b1111010010111011101011111000110010000100001111110010)))
(assert (= r (fp #b1 #b01000010110 #b1111010010111011101011111000110010000100001111110001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
