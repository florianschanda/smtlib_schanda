(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.04078038593554733637347453623078763484954833984375p-585 {- 183658530903356 -585 (-8.21886e-177)}
; Y = -1.6745303980924448605804855105816386640071868896484375p156 {- 3037814849499207 156 (-1.52958e+047)}
; -1.04078038593554733637347453623078763484954833984375p-585 + -1.6745303980924448605804855105816386640071868896484375p156 == -1.6745303980924448605804855105816386640071868896484375p156
; [HW: -1.6745303980924448605804855105816386640071868896484375p156] 

; mpf : - 3037814849499207 156
; mpfd: - 3037814849499207 156 (-1.52958e+047) class: Neg. norm. non-zero
; hwf : - 3037814849499207 156 (-1.52958e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110110110 #b0000101001110000100101010101011111101001010100111100)))
(assert (= y (fp #b1 #b10010011011 #b1010110010101110000001100010111111110111000001000111)))
(assert (= r (fp #b1 #b10010011011 #b1010110010101110000001100010111111110111000001000111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
