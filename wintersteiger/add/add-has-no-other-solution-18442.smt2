(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.41583409824978634361514195916242897510528564453125p4 {+ 1872750289925684 4 (22.6533)}
; Y = -1.413864748141642646572790908976458013057708740234375p-788 {- 1863881125512486 -788 (-8.68503e-238)}
; 1.41583409824978634361514195916242897510528564453125p4 + -1.413864748141642646572790908976458013057708740234375p-788 == 1.41583409824978634361514195916242897510528564453125p4
; [HW: 1.41583409824978634361514195916242897510528564453125p4] 

; mpf : + 1872750289925684 4
; mpfd: + 1872750289925684 4 (22.6533) class: Pos. norm. non-zero
; hwf : + 1872750289925684 4 (22.6533) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000011 #b0110101001110100000110100111110010001011011000110100)))
(assert (= y (fp #b1 #b00011101011 #b0110100111110011000010100100011000111100010100100110)))
(assert (= r (fp #b0 #b10000000011 #b0110101001110100000110100111110010001011011000110100)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
