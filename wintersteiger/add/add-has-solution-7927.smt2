(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4955132625435865190155482196132652461528778076171875p-664 {+ 2231593344548435 -664 (1.95377e-200)}
; Y = -1.637252871495510131438777534640394151210784912109375p-321 {- 2869931794607958 -321 (-3.83254e-097)}
; 1.4955132625435865190155482196132652461528778076171875p-664 + -1.637252871495510131438777534640394151210784912109375p-321 == -1.6372528714955099093941726096090860664844512939453125p-321
; [HW: -1.6372528714955099093941726096090860664844512939453125p-321] 

; mpf : - 2869931794607957 -321
; mpfd: - 2869931794607957 -321 (-3.83254e-097) class: Neg. norm. non-zero
; hwf : - 2869931794607957 -321 (-3.83254e-097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101100111 #b0111111011011001111101010000100101011011111001010011)))
(assert (= y (fp #b1 #b01010111110 #b1010001100100011000000010001001001011010111101010110)))
(assert (= r (fp #b1 #b01010111110 #b1010001100100011000000010001001001011010111101010101)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
