(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4204046449613405567191648515290580689907073974609375p-757 {- 1893334202392719 -757 (-1.87372e-228)}
; Y = -1.0273012147148177231059662517509423196315765380859375p-350 {- 122953740416415 -350 (-4.47919e-106)}
; -1.4204046449613405567191648515290580689907073974609375p-757 + -1.0273012147148177231059662517509423196315765380859375p-350 == -1.0273012147148177231059662517509423196315765380859375p-350
; [HW: -1.0273012147148177231059662517509423196315765380859375p-350] 

; mpf : - 122953740416415 -350
; mpfd: - 122953740416415 -350 (-4.47919e-106) class: Neg. norm. non-zero
; hwf : - 122953740416415 -350 (-4.47919e-106) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001010 #b0110101110011111101000111000100100110010000010001111)))
(assert (= y (fp #b1 #b01010100001 #b0000011011111101001101100110000001010111010110011111)))
(assert (= r (fp #b1 #b01010100001 #b0000011011111101001101100110000001010111010110011111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
