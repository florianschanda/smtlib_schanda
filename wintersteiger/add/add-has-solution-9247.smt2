(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4595607234684830899595908704213798046112060546875p671 {- 2069677502966776 671 (-1.43004e+202)}
; Y = -1.6137512397543021247514616334228776395320892333984375p475 {- 2764089854655655 475 (-1.57429e+143)}
; -1.4595607234684830899595908704213798046112060546875p671 + -1.6137512397543021247514616334228776395320892333984375p475 == -1.4595607234684830899595908704213798046112060546875p671
; [HW: -1.4595607234684830899595908704213798046112060546875p671] 

; mpf : - 2069677502966776 671
; mpfd: - 2069677502966776 671 (-1.43004e+202) class: Neg. norm. non-zero
; hwf : - 2069677502966776 671 (-1.43004e+202) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010011110 #b0111010110100101110001011000010111010010101111111000)))
(assert (= y (fp #b1 #b10111011010 #b1001110100011110110011010001111010011111110010100111)))
(assert (= r (fp #b1 #b11010011110 #b0111010110100101110001011000010111010010101111111000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
