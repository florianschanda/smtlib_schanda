(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4565511023782684585370361673994921147823333740234375p904 {+ 2056123374546359 904 (1.96989e+272)}
; Y = -1.599422244136501802813654649071395397186279296875p725 {- 2699557795330736 725 (-2.82299e+218)}
; 1.4565511023782684585370361673994921147823333740234375p904 + -1.599422244136501802813654649071395397186279296875p725 == 1.4565511023782684585370361673994921147823333740234375p904
; [HW: 1.4565511023782684585370361673994921147823333740234375p904] 

; mpf : + 2056123374546359 904
; mpfd: + 2056123374546359 904 (1.96989e+272) class: Pos. norm. non-zero
; hwf : + 2056123374546359 904 (1.96989e+272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000111 #b0111010011100000100010000111010110101010110110110111)))
(assert (= y (fp #b1 #b11011010100 #b1001100101110011101111000111011100001111101010110000)))
(assert (= r (fp #b0 #b11110000111 #b0111010011100000100010000111010110101010110110110111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
