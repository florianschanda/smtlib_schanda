(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3335408014641452201232141305808909237384796142578125p19 {+ 1502134229186781 19 (699159)}
; Y = 1.36171161739995749684339898522011935710906982421875p606 {+ 1629004305338028 606 (3.61628e+182)}
; 1.3335408014641452201232141305808909237384796142578125p19 + 1.36171161739995749684339898522011935710906982421875p606 == 1.36171161739995749684339898522011935710906982421875p606
; [HW: 1.36171161739995749684339898522011935710906982421875p606] 

; mpf : + 1629004305338028 606
; mpfd: + 1629004305338028 606 (3.61628e+182) class: Pos. norm. non-zero
; hwf : + 1629004305338028 606 (3.61628e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010010 #b0101010101100010111011100001001000101011100011011101)))
(assert (= y (fp #b0 #b11001011101 #b0101110010011001001000011110111101010000111010101100)))
(assert (= r (fp #b0 #b11001011101 #b0101110010011001001000011110111101010000111010101100)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
