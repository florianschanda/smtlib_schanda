(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.498448200295147358929170877672731876373291015625p-532 {+ 2244811129112720 -532 (1.06582e-160)}
; Y = 1.7495785695362104927852442415314726531505584716796875p-579 {+ 3375801766448187 -579 (8.84231e-175)}
; 1.498448200295147358929170877672731876373291015625p-532 + 1.7495785695362104927852442415314726531505584716796875p-579 == 1.4984482002951595713824417543946765363216400146484375p-532
; [HW: 1.4984482002951595713824417543946765363216400146484375p-532] 

; mpf : + 2244811129112775 -532
; mpfd: + 2244811129112775 -532 (1.06582e-160) class: Pos. norm. non-zero
; hwf : + 2244811129112775 -532 (1.06582e-160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101011 #b0111111110011010010011010001111100000100100010010000)))
(assert (= y (fp #b0 #b00110111100 #b1011111111100100011000011001000111110000110000111011)))
(assert (= r (fp #b0 #b00111101011 #b0111111110011010010011010001111100000100100011000111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
