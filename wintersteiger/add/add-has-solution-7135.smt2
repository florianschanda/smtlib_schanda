(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8051443199805079498077020616619847714900970458984375p899 {- 3626047659443687 899 (-7.62918e+270)}
; Y = 1.1345360353584379442537510840338654816150665283203125p-776 {+ 605896438708165 -776 (2.85458e-234)}
; -1.8051443199805079498077020616619847714900970458984375p899 + 1.1345360353584379442537510840338654816150665283203125p-776 == -1.8051443199805079498077020616619847714900970458984375p899
; [HW: -1.8051443199805079498077020616619847714900970458984375p899] 

; mpf : - 3626047659443687 899
; mpfd: - 3626047659443687 899 (-7.62918e+270) class: Neg. norm. non-zero
; hwf : - 3626047659443687 899 (-7.62918e+270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110000010 #b1100111000011101111100000010101011100000010111100111)))
(assert (= y (fp #b0 #b00011110111 #b0010001001110000111101000001111111111111011111000101)))
(assert (= r (fp #b1 #b11110000010 #b1100111000011101111100000010101011100000010111100111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
