(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8486914861126686471237690057023428380489349365234375p149 {- 3822166660609527 149 (-1.31927e+045)}
; Y = 1.15115744464924762979762817849405109882354736328125p-855 {+ 680752611396628 -855 (4.79169e-258)}
; -1.8486914861126686471237690057023428380489349365234375p149 + 1.15115744464924762979762817849405109882354736328125p-855 == -1.848691486112668425079164080671034753322601318359375p149
; [HW: -1.848691486112668425079164080671034753322601318359375p149] 

; mpf : - 3822166660609526 149
; mpfd: - 3822166660609526 149 (-1.31927e+045) class: Neg. norm. non-zero
; hwf : - 3822166660609526 149 (-1.31927e+045) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010100 #b1101100101000011110110000110000100111111010111110111)))
(assert (= y (fp #b0 #b00010101000 #b0010011010110010010000010001100101010000110000010100)))
(assert (= r (fp #b1 #b10010010100 #b1101100101000011110110000110000100111111010111110110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
