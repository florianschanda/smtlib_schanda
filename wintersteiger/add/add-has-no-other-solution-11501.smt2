(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1695763782557566656805647653527557849884033203125p-645 {- 763704113923464 -645 (-8.0109e-195)}
; Y = 1.5792223169121466508357798375072889029979705810546875p-890 {+ 2608585410610219 -890 (1.91314e-268)}
; -1.1695763782557566656805647653527557849884033203125p-645 + 1.5792223169121466508357798375072889029979705810546875p-890 == -1.1695763782557564436359598403214477002620697021484375p-645
; [HW: -1.1695763782557564436359598403214477002620697021484375p-645] 

; mpf : - 763704113923463 -645
; mpfd: - 763704113923463 -645 (-8.0109e-195) class: Neg. norm. non-zero
; hwf : - 763704113923463 -645 (-8.0109e-195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111010 #b0010101101101001010110111000011011001000010110001000)))
(assert (= y (fp #b0 #b00010000101 #b1001010001000111111010011110110001000000010000101011)))
(assert (= r (fp #b1 #b00101111010 #b0010101101101001010110111000011011001000010110000111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
