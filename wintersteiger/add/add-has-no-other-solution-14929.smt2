(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1980754127368873351855427245027385652065277099609375p-894 {+ 892052354993103 -894 (9.07127e-270)}
; Y = 1.065995615668975826650921590044163167476654052734375p-155 {+ 297217830134886 -155 (2.33403e-047)}
; 1.1980754127368873351855427245027385652065277099609375p-894 + 1.065995615668975826650921590044163167476654052734375p-155 == 1.065995615668975826650921590044163167476654052734375p-155
; [HW: 1.065995615668975826650921590044163167476654052734375p-155] 

; mpf : + 297217830134886 -155
; mpfd: + 297217830134886 -155 (2.33403e-047) class: Pos. norm. non-zero
; hwf : + 297217830134886 -155 (2.33403e-047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010000001 #b0011001010110101000100011111101111011000101111001111)))
(assert (= y (fp #b0 #b01101100100 #b0001000011100101000101101011001011111010010001100110)))
(assert (= r (fp #b0 #b01101100100 #b0001000011100101000101101011001011111010010001100110)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
