(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.551712478999965671988547910586930811405181884765625p-639 {- 2484692114839898 -639 (-6.80212e-193)}
; Y = 1.8741698698303357328853735452867113053798675537109375p-220 {+ 3936911100026415 -220 (1.11227e-066)}
; -1.551712478999965671988547910586930811405181884765625p-639 + 1.8741698698303357328853735452867113053798675537109375p-220 == 1.8741698698303357328853735452867113053798675537109375p-220
; [HW: 1.8741698698303357328853735452867113053798675537109375p-220] 

; mpf : + 3936911100026415 -220
; mpfd: + 3936911100026415 -220 (1.11227e-066) class: Pos. norm. non-zero
; hwf : + 3936911100026415 -220 (1.11227e-066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000000 #b1000110100111101000001110110111000011001100101011010)))
(assert (= y (fp #b0 #b01100100011 #b1101111111001001100110001011101000010001111000101111)))
(assert (= r (fp #b0 #b01100100011 #b1101111111001001100110001011101000010001111000101111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
