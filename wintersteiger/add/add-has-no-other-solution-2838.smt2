(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.40339684185294544249700265936553478240966796875p944 {+ 1816737866651360 944 (2.08687e+284)}
; Y = -1.0419397386508599812060538170044310390949249267578125p-956 {- 188879791360029 -956 (-1.71067e-288)}
; 1.40339684185294544249700265936553478240966796875p944 + -1.0419397386508599812060538170044310390949249267578125p-956 == 1.4033968418529452204523977343342266976833343505859375p944
; [HW: 1.4033968418529452204523977343342266976833343505859375p944] 

; mpf : + 1816737866651359 944
; mpfd: + 1816737866651359 944 (2.08687e+284) class: Pos. norm. non-zero
; hwf : + 1816737866651359 944 (2.08687e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101111 #b0110011101000101000000111111001100010001011011100000)))
(assert (= y (fp #b1 #b00001000011 #b0000101010111100100100000000110111101000100000011101)))
(assert (= r (fp #b0 #b11110101111 #b0110011101000101000000111111001100010001011011011111)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
