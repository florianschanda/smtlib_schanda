(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7597174232095411650078631282667629420757293701171875p19 {+ 3421463104073363 19 (922599)}
; Y = 1.0069347424117907063845223092357628047466278076171875p154 {+ 31231303341651 154 (2.29943e+046)}
; 1.7597174232095411650078631282667629420757293701171875p19 + 1.0069347424117907063845223092357628047466278076171875p154 == 1.0069347424117907063845223092357628047466278076171875p154
; [HW: 1.0069347424117907063845223092357628047466278076171875p154] 

; mpf : + 31231303341651 154
; mpfd: + 31231303341651 154 (2.29943e+046) class: Pos. norm. non-zero
; hwf : + 31231303341651 154 (2.29943e+046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010010 #b1100001001111100110101110100111011100010111010010011)))
(assert (= y (fp #b0 #b10010011001 #b0000000111000110011110011010101111011101011001010011)))
(assert (= r (fp #b0 #b10010011001 #b0000000111000110011110011010101111011101011001010011)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
