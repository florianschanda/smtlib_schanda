(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.347664192214707679084995106677524745464324951171875p-768 {- 1565740326508222 -768 (-8.68051e-232)}
; Y = 1.772747155226380488812765179318375885486602783203125p-14 {+ 3480143800329138 -14 (0.0001082)}
; -1.347664192214707679084995106677524745464324951171875p-768 + 1.772747155226380488812765179318375885486602783203125p-14 == 1.772747155226380488812765179318375885486602783203125p-14
; [HW: 1.772747155226380488812765179318375885486602783203125p-14] 

; mpf : + 3480143800329138 -14
; mpfd: + 3480143800329138 -14 (0.0001082) class: Pos. norm. non-zero
; hwf : + 3480143800329138 -14 (0.0001082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111111 #b0101100100000000100001010011111110001101011010111110)))
(assert (= y (fp #b0 #b01111110001 #b1100010111010010110000011110111111000110001110110010)))
(assert (= r (fp #b0 #b01111110001 #b1100010111010010110000011110111111000110001110110010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
