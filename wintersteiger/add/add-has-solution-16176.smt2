(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.551191777044836239696223856299184262752532958984375p308 {+ 2482347081708806 308 (8.08917e+092)}
; Y = 1.1708744244828188652007838754798285663127899169921875p-640 {+ 769549994427971 -640 (2.56633e-193)}
; 1.551191777044836239696223856299184262752532958984375p308 + 1.1708744244828188652007838754798285663127899169921875p-640 == 1.551191777044836239696223856299184262752532958984375p308
; [HW: 1.551191777044836239696223856299184262752532958984375p308] 

; mpf : + 2482347081708806 308
; mpfd: + 2482347081708806 308 (8.08917e+092) class: Pos. norm. non-zero
; hwf : + 2482347081708806 308 (8.08917e+092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110011 #b1000110100011010111001111000000000111011010100000110)))
(assert (= y (fp #b0 #b00101111111 #b0010101110111110011011010010000011100000011001000011)))
(assert (= r (fp #b0 #b10100110011 #b1000110100011010111001111000000000111011010100000110)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
