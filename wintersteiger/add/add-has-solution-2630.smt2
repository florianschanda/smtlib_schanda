(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2867473254909993496397646595141850411891937255859375p-381 {+ 1291395148230751 -381 (2.61255e-115)}
; Y = 1.951284252650780093318871877272613346576690673828125p564 {+ 4284203405761474 564 (1.17825e+170)}
; 1.2867473254909993496397646595141850411891937255859375p-381 + 1.951284252650780093318871877272613346576690673828125p564 == 1.9512842526507803153634768023039214313030242919921875p564
; [HW: 1.9512842526507803153634768023039214313030242919921875p564] 

; mpf : + 4284203405761475 564
; mpfd: + 4284203405761475 564 (1.17825e+170) class: Pos. norm. non-zero
; hwf : + 4284203405761475 564 (1.17825e+170) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010000010 #b0100100101101000010001011101000100110011000001011111)))
(assert (= y (fp #b0 #b11000110011 #b1111001110000111010111010110001001010101101111000010)))
(assert (= r (fp #b0 #b11000110011 #b1111001110000111010111010110001001010101101111000011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
