(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.72625783855276271339107552194036543369293212890625p953 {- 3270774531081124 953 (-1.31429e+287)}
; Y = -1.89101055820541485985586405149661004543304443359375p866 {- 4012754817917084 866 (-9.30401e+260)}
; -1.72625783855276271339107552194036543369293212890625p953 + -1.89101055820541485985586405149661004543304443359375p866 == -1.72625783855276271339107552194036543369293212890625p953
; [HW: -1.72625783855276271339107552194036543369293212890625p953] 

; mpf : - 3270774531081124 953
; mpfd: - 3270774531081124 953 (-1.31429e+287) class: Neg. norm. non-zero
; hwf : - 3270774531081124 953 (-1.31429e+287) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111000 #b1011100111101100000010001010000100001100001110100100)))
(assert (= y (fp #b1 #b11101100001 #b1110010000011001010001001001011111100010000010011100)))
(assert (= r (fp #b1 #b11110111000 #b1011100111101100000010001010000100001100001110100100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
