(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6333950617980264041761984117329120635986328125p632 {- 2852557764291904 632 (-2.91104e+190)}
; Y = 1.555511589522394100271185379824601113796234130859375p925 {+ 2501801787573046 925 (4.41183e+278)}
; -1.6333950617980264041761984117329120635986328125p632 + 1.555511589522394100271185379824601113796234130859375p925 == 1.5555115895223938782265804547932930290699005126953125p925
; [HW: 1.5555115895223938782265804547932930290699005126953125p925] 

; mpf : + 2501801787573045 925
; mpfd: + 2501801787573045 925 (4.41183e+278) class: Pos. norm. non-zero
; hwf : + 2501801787573045 925 (4.41183e+278) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001110111 #b1010001000100110001011011100001111011110110101000000)))
(assert (= y (fp #b0 #b11110011100 #b1000111000110110000000011110110110001100001100110110)))
(assert (= r (fp #b0 #b11110011100 #b1000111000110110000000011110110110001100001100110101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
