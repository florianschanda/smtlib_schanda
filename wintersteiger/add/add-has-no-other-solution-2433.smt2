(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.304640709747139748486688404227606952190399169921875p845 {+ 1371979786899102 845 (3.06082e+254)}
; Y = 1.275925747524149667100346050574444234371185302734375p198 {+ 1242659093731686 198 (5.12583e+059)}
; 1.304640709747139748486688404227606952190399169921875p845 + 1.275925747524149667100346050574444234371185302734375p198 == 1.304640709747139748486688404227606952190399169921875p845
; [HW: 1.304640709747139748486688404227606952190399169921875p845] 

; mpf : + 1371979786899102 845
; mpfd: + 1371979786899102 845 (3.06082e+254) class: Pos. norm. non-zero
; hwf : + 1371979786899102 845 (3.06082e+254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001100 #b0100110111111100111011101111110101100100111010011110)))
(assert (= y (fp #b0 #b10011000101 #b0100011010100011000100011101110110111101100101100110)))
(assert (= r (fp #b0 #b11101001100 #b0100110111111100111011101111110101100100111010011110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
