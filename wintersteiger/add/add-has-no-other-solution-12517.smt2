(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.423395379558113571505373329273425042629241943359375p-133 {+ 1906803273608310 -133 (1.30718e-040)}
; Y = -1.14805096656040017677469222689978778362274169921875p520 {- 666762277833260 520 (-3.94057e+156)}
; 1.423395379558113571505373329273425042629241943359375p-133 + -1.14805096656040017677469222689978778362274169921875p520 == -1.14805096656040017677469222689978778362274169921875p520
; [HW: -1.14805096656040017677469222689978778362274169921875p520] 

; mpf : - 666762277833260 520
; mpfd: - 666762277833260 520 (-3.94057e+156) class: Neg. norm. non-zero
; hwf : - 666762277833260 520 (-3.94057e+156) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111010 #b0110110001100011101000111011110001111010110001110110)))
(assert (= y (fp #b1 #b11000000111 #b0010010111100110101010110000101110000100101000101100)))
(assert (= r (fp #b1 #b11000000111 #b0010010111100110101010110000101110000100101000101100)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
