(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3912490483452455425350535733741708099842071533203125p38 {+ 1762029068336709 38 (3.82424e+011)}
; Y = 1.2580491262147999176335133597603999078273773193359375p-767 {+ 1162149948664255 -767 (1.62066e-231)}
; 1.3912490483452455425350535733741708099842071533203125p38 + 1.2580491262147999176335133597603999078273773193359375p-767 == 1.391249048345245764579658498405478894710540771484375p38
; [HW: 1.391249048345245764579658498405478894710540771484375p38] 

; mpf : + 1762029068336710 38
; mpfd: + 1762029068336710 38 (3.82424e+011) class: Pos. norm. non-zero
; hwf : + 1762029068336710 38 (3.82424e+011) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100101 #b0110010000101000111001011100101100111011111001000101)))
(assert (= y (fp #b0 #b00100000000 #b0100001000001111100000011110110111011010100110111111)))
(assert (= r (fp #b0 #b10000100101 #b0110010000101000111001011100101100111011111001000110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
