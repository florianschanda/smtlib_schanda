(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4886840709239255176044025574810802936553955078125p1009 {- 2200837399714888 1009 (-8.16711e+303)}
; Y = 1.0937444885497618063396885190741159021854400634765625p447 {+ 422187643700745 447 (3.97488e+134)}
; -1.4886840709239255176044025574810802936553955078125p1009 + 1.0937444885497618063396885190741159021854400634765625p447 == -1.4886840709239252955597976324497722089290618896484375p1009
; [HW: -1.4886840709239252955597976324497722089290618896484375p1009] 

; mpf : - 2200837399714887 1009
; mpfd: - 2200837399714887 1009 (-8.16711e+303) class: Neg. norm. non-zero
; hwf : - 2200837399714887 1009 (-8.16711e+303) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110000 #b0111110100011010011001100011011010110001110001001000)))
(assert (= y (fp #b0 #b10110111110 #b0001011111111111101000111000100010000000011000001001)))
(assert (= r (fp #b1 #b11111110000 #b0111110100011010011001100011011010110001110001000111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
