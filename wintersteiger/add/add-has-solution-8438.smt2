(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7033399625270957411515837520710192620754241943359375p683 {+ 3167561593151807 683 (6.83578e+205)}
; Y = -1.8577152142309241167339450839790515601634979248046875p-540 {- 3862805919200395 -540 (-5.16157e-163)}
; 1.7033399625270957411515837520710192620754241943359375p683 + -1.8577152142309241167339450839790515601634979248046875p-540 == 1.703339962527095519106978827039711177349090576171875p683
; [HW: 1.703339962527095519106978827039711177349090576171875p683] 

; mpf : + 3167561593151806 683
; mpfd: + 3167561593151806 683 (6.83578e+205) class: Pos. norm. non-zero
; hwf : + 3167561593151806 683 (6.83578e+205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101010 #b1011010000001110000101100111100100000110000100111111)))
(assert (= y (fp #b1 #b00111100011 #b1101101110010011001110010110101001100111010010001011)))
(assert (= r (fp #b0 #b11010101010 #b1011010000001110000101100111100100000110000100111110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
