(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.830710448664718104083704020013101398944854736328125p-937 {+ 3741187267059202 -937 (1.57585e-282)}
; Y = 1.8939656303696705830219570998451672494411468505859375p269 {+ 4026063279814879 269 (1.79656e+081)}
; 1.830710448664718104083704020013101398944854736328125p-937 + 1.8939656303696705830219570998451672494411468505859375p269 == 1.8939656303696705830219570998451672494411468505859375p269
; [HW: 1.8939656303696705830219570998451672494411468505859375p269] 

; mpf : + 4026063279814879 269
; mpfd: + 4026063279814879 269 (1.79656e+081) class: Pos. norm. non-zero
; hwf : + 4026063279814879 269 (1.79656e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010110 #b1101010010101001011100001010000101110101111000000010)))
(assert (= y (fp #b0 #b10100001100 #b1110010011011010111011100111101000101111100011011111)))
(assert (= r (fp #b0 #b10100001100 #b1110010011011010111011100111101000101111100011011111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
