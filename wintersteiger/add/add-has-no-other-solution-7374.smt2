(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.5884074864933113158116384511231444776058197021484375p-1022 {+ 2649951736913287 -1023 (1.30925e-308)}
; Y = 1.2298785708791084569924123570672236382961273193359375p175 {+ 1035281046151615 175 (5.88995e+052)}
; 0.5884074864933113158116384511231444776058197021484375p-1022 + 1.2298785708791084569924123570672236382961273193359375p175 == 1.2298785708791084569924123570672236382961273193359375p175
; [HW: 1.2298785708791084569924123570672236382961273193359375p175] 

; mpf : + 1035281046151615 175
; mpfd: + 1035281046151615 175 (5.88995e+052) class: Pos. norm. non-zero
; hwf : + 1035281046151615 175 (5.88995e+052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1001011010100001110111110111111100110101110110000111)))
(assert (= y (fp #b0 #b10010101110 #b0011101011011001010100100110111111111010000110111111)))
(assert (= r (fp #b0 #b10010101110 #b0011101011011001010100100110111111111010000110111111)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
