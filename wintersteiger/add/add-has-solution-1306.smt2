(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6840290249952118983856053091585636138916015625p-774 {+ 3080592862079040 -774 (1.69486e-233)}
; Y = 1.4865353435615766830579786983435042202472686767578125p8 {+ 2191160391966493 8 (380.553)}
; 1.6840290249952118983856053091585636138916015625p-774 + 1.4865353435615766830579786983435042202472686767578125p8 == 1.486535343561576905102583623374812304973602294921875p8
; [HW: 1.486535343561576905102583623374812304973602294921875p8] 

; mpf : + 2191160391966494 8
; mpfd: + 2191160391966494 8 (380.553) class: Pos. norm. non-zero
; hwf : + 2191160391966494 8 (380.553) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111001 #b1010111100011100100001101011001111011110100001000000)))
(assert (= y (fp #b0 #b10000000111 #b0111110010001101100101001000110011110001111100011101)))
(assert (= r (fp #b0 #b10000000111 #b0111110010001101100101001000110011110001111100011110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
