(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2919964219635919899786813402897678315639495849609375p470 {- 1315034977148751 470 (-3.93876e+141)}
; Y = -1.2797001527140412502347999179619364440441131591796875p-371 {- 1259657503538427 -371 (-2.6606e-112)}
; -1.2919964219635919899786813402897678315639495849609375p470 + -1.2797001527140412502347999179619364440441131591796875p-371 == -1.2919964219635919899786813402897678315639495849609375p470
; [HW: -1.2919964219635919899786813402897678315639495849609375p470] 

; mpf : - 1315034977148751 470
; mpfd: - 1315034977148751 470 (-3.93876e+141) class: Neg. norm. non-zero
; hwf : - 1315034977148751 470 (-3.93876e+141) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010101 #b0100101011000000010001110000101011100001111101001111)))
(assert (= y (fp #b1 #b01010001100 #b0100011110011010011011011110000010010111110011111011)))
(assert (= r (fp #b1 #b10111010101 #b0100101011000000010001110000101011100001111101001111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
