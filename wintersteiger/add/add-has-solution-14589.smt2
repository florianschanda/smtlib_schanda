(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.74224383344598887646270668483339250087738037109375p-433 {+ 3342769051725404 -433 (7.85454e-131)}
; Y = -1.127023486991376888255445010145194828510284423828125p-729 {- 572062928681666 -729 (-3.99086e-220)}
; 1.74224383344598887646270668483339250087738037109375p-433 + -1.127023486991376888255445010145194828510284423828125p-729 == 1.7422438334459886544181017598020844161510467529296875p-433
; [HW: 1.7422438334459886544181017598020844161510467529296875p-433] 

; mpf : + 3342769051725403 -433
; mpfd: + 3342769051725403 -433 (7.85454e-131) class: Pos. norm. non-zero
; hwf : + 3342769051725403 -433 (7.85454e-131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001001110 #b1011111000000011101100010001111001001110111001011100)))
(assert (= y (fp #b1 #b00100100110 #b0010000010000100100111000111101001110011101011000010)))
(assert (= r (fp #b0 #b01001001110 #b1011111000000011101100010001111001001110111001011011)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
