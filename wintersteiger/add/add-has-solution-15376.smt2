(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1683659408857121064784223563037812709808349609375p-472 {- 758252788634776 -472 (-9.58122e-143)}
; Y = 1.3371698243931542382512134281569160521030426025390625p354 {+ 1518477895497585 354 (4.90688e+106)}
; -1.1683659408857121064784223563037812709808349609375p-472 + 1.3371698243931542382512134281569160521030426025390625p354 == 1.337169824393154016206608503125607967376708984375p354
; [HW: 1.337169824393154016206608503125607967376708984375p354] 

; mpf : + 1518477895497584 354
; mpfd: + 1518477895497584 354 (4.90688e+106) class: Pos. norm. non-zero
; hwf : + 1518477895497584 354 (4.90688e+106) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100111 #b0010101100011010000001111100000111011101010010011000)))
(assert (= y (fp #b0 #b10101100001 #b0101011001010000110000101111100011110111011101110001)))
(assert (= r (fp #b0 #b10101100001 #b0101011001010000110000101111100011110111011101110000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
