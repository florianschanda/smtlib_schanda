(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.614081895101992625285447502392344176769256591796875p293 {+ 2765578993956302 293 (2.56871e+088)}
; Y = -1.117396625839017776371520085376687347888946533203125p-642 {- 528707400383154 -642 (-6.1228e-194)}
; 1.614081895101992625285447502392344176769256591796875p293 + -1.117396625839017776371520085376687347888946533203125p-642 == 1.6140818951019924032408425773610360920429229736328125p293
; [HW: 1.6140818951019924032408425773610360920429229736328125p293] 

; mpf : + 2765578993956301 293
; mpfd: + 2765578993956301 293 (2.56871e+088) class: Pos. norm. non-zero
; hwf : + 2765578993956301 293 (2.56871e+088) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100100 #b1001110100110100011110001001100010000111010111001110)))
(assert (= y (fp #b1 #b00101111101 #b0001111000001101101101001000110010100011101010110010)))
(assert (= r (fp #b0 #b10100100100 #b1001110100110100011110001001100010000111010111001101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
