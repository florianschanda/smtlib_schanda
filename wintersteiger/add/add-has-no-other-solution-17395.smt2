(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8076723816686095513972531989566050469875335693359375p668 {+ 3637433037120191 668 (2.21389e+201)}
; Y = -1.6286063819680169917347711816546507179737091064453125p-927 {- 2830991467593877 -927 (-1.43552e-279)}
; 1.8076723816686095513972531989566050469875335693359375p668 + -1.6286063819680169917347711816546507179737091064453125p-927 == 1.807672381668609329352648273925296962261199951171875p668
; [HW: 1.807672381668609329352648273925296962261199951171875p668] 

; mpf : + 3637433037120190 668
; mpfd: + 3637433037120190 668 (2.21389e+201) class: Pos. norm. non-zero
; hwf : + 3637433037120190 668 (2.21389e+201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011011 #b1100111011000011100111100000000100100110001010111111)))
(assert (= y (fp #b1 #b00001100000 #b1010000011101100010110010000110010011100000010010101)))
(assert (= r (fp #b0 #b11010011011 #b1100111011000011100111100000000100100110001010111110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
