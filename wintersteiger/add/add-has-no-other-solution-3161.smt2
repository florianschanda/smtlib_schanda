(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3630926506139828813246595018426887691020965576171875p64 {+ 1635223926006099 64 (2.51446e+019)}
; Y = 1.2912981998369266189996551474905572831630706787109375p-184 {+ 1311890464239279 -184 (5.26632e-056)}
; 1.3630926506139828813246595018426887691020965576171875p64 + 1.2912981998369266189996551474905572831630706787109375p-184 == 1.36309265061398310336926442687399685382843017578125p64
; [HW: 1.36309265061398310336926442687399685382843017578125p64] 

; mpf : + 1635223926006100 64
; mpfd: + 1635223926006100 64 (2.51446e+019) class: Pos. norm. non-zero
; hwf : + 1635223926006100 64 (2.51446e+019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111111 #b0101110011110011101000111101001111001110000101010011)))
(assert (= y (fp #b0 #b01101000111 #b0100101010010010100001001101000110101110111010101111)))
(assert (= r (fp #b0 #b10000111111 #b0101110011110011101000111101001111001110000101010100)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
