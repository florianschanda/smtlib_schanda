(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6503595519886034015399900454212911427021026611328125p-793 {- 2928959035992717 -793 (-3.16805e-239)}
; Y = 1.01626868226144662088472614414058625698089599609375p489 {+ 73267631370460 489 (1.62434e+147)}
; -1.6503595519886034015399900454212911427021026611328125p-793 + 1.01626868226144662088472614414058625698089599609375p489 == 1.0162686822614463988401212191092781722545623779296875p489
; [HW: 1.0162686822614463988401212191092781722545623779296875p489] 

; mpf : + 73267631370459 489
; mpfd: + 73267631370459 489 (1.62434e+147) class: Pos. norm. non-zero
; hwf : + 73267631370459 489 (1.62434e+147) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011100110 #b1010011001111101111101101010111001101110101010001101)))
(assert (= y (fp #b0 #b10111101000 #b0000010000101010001011110011001001000011000011011100)))
(assert (= r (fp #b0 #b10111101000 #b0000010000101010001011110011001001000011000011011011)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
