(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.977566949842369137257946931640617549419403076171875p-944 {+ 4402570151039806 -944 (1.32989e-284)}
; Y = 1.22761658915985893969491371535696089267730712890625p356 {+ 1025093986123684 356 (1.80194e+107)}
; 1.977566949842369137257946931640617549419403076171875p-944 + 1.22761658915985893969491371535696089267730712890625p356 == 1.22761658915985893969491371535696089267730712890625p356
; [HW: 1.22761658915985893969491371535696089267730712890625p356] 

; mpf : + 1025093986123684 356
; mpfd: + 1025093986123684 356 (1.80194e+107) class: Pos. norm. non-zero
; hwf : + 1025093986123684 356 (1.80194e+107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001111 #b1111101001000001110100111101111100111001001100111110)))
(assert (= y (fp #b0 #b10101100011 #b0011101001000101000101001010111001110111111110100100)))
(assert (= r (fp #b0 #b10101100011 #b0011101001000101000101001010111001110111111110100100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
