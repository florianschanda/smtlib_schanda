(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5614192305597978105424772365950047969818115234375p448 {+ 2528407437547736 448 (1.1349e+135)}
; Y = 1.6430326009498801287378455526777543127536773681640625p362 {+ 2895961382024961 362 (1.54349e+109)}
; 1.5614192305597978105424772365950047969818115234375p448 + 1.6430326009498801287378455526777543127536773681640625p362 == 1.5614192305597978105424772365950047969818115234375p448
; [HW: 1.5614192305597978105424772365950047969818115234375p448] 

; mpf : + 2528407437547736 448
; mpfd: + 2528407437547736 448 (1.1349e+135) class: Pos. norm. non-zero
; hwf : + 2528407437547736 448 (1.1349e+135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111111 #b1000111110111001001010111011001010011001100011011000)))
(assert (= y (fp #b0 #b10101101001 #b1010010010011101110010001101011101010111011100000001)))
(assert (= r (fp #b0 #b10110111111 #b1000111110111001001010111011001010011001100011011000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
