(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.583748256131784604150425366242416203022003173828125p-341 {- 2628968428793282 -341 (-3.53556e-103)}
; Y = 1.58159664430925062106325640343129634857177734375p257 {+ 2619278430591072 257 (3.66273e+077)}
; -1.583748256131784604150425366242416203022003173828125p-341 + 1.58159664430925062106325640343129634857177734375p257 == 1.5815966443092503990186514783999882638454437255859375p257
; [HW: 1.5815966443092503990186514783999882638454437255859375p257] 

; mpf : + 2619278430591071 257
; mpfd: + 2619278430591071 257 (3.66273e+077) class: Pos. norm. non-zero
; hwf : + 2619278430591071 257 (3.66273e+077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101010 #b1001010101110000100001101001010100101110110111000010)))
(assert (= y (fp #b0 #b10100000000 #b1001010011100011100001001000011011000101100001100000)))
(assert (= r (fp #b0 #b10100000000 #b1001010011100011100001001000011011000101100001011111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
