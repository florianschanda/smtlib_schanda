(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.292947989123415464263189278426580131053924560546875p283 {+ 1319320454655150 283 (2.00942e+085)}
; Y = -1.6016498212295708913899261460755951702594757080078125p-270 {- 2709589910697021 -270 (-8.44245e-082)}
; 1.292947989123415464263189278426580131053924560546875p283 + -1.6016498212295708913899261460755951702594757080078125p-270 == 1.292947989123415464263189278426580131053924560546875p283
; [HW: 1.292947989123415464263189278426580131053924560546875p283] 

; mpf : + 1319320454655150 283
; mpfd: + 1319320454655150 283 (2.00942e+085) class: Pos. norm. non-zero
; hwf : + 1319320454655150 283 (2.00942e+085) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011010 #b0100101011111110101000111011000010110110110010101110)))
(assert (= y (fp #b1 #b01011110001 #b1001101000000101101110010000000111010011010000111101)))
(assert (= r (fp #b0 #b10100011010 #b0100101011111110101000111011000010110110110010101110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
