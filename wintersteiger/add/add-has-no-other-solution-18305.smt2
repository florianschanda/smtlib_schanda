(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3021627903855890195927713648416101932525634765625p-149 {+ 1360820230185768 -149 (1.82472e-045)}
; Y = 1.975459355636846936477013514377176761627197265625p-165 {+ 4393078390561168 -165 (4.22395e-050)}
; 1.3021627903855890195927713648416101932525634765625p-149 + 1.975459355636846936477013514377176761627197265625p-165 == 1.3021929335031983132608957021147944033145904541015625p-149
; [HW: 1.3021929335031983132608957021147944033145904541015625p-149] 

; mpf : + 1360955982719001 -149
; mpfd: + 1360955982719001 -149 (1.82476e-045) class: Pos. norm. non-zero
; hwf : + 1360955982719001 -149 (1.82476e-045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101010 #b0100110101011010100010100110011011000110001100101000)))
(assert (= y (fp #b0 #b01101011010 #b1111100110110111101101000100111100001001100110010000)))
(assert (= r (fp #b0 #b01101101010 #b0100110101011100100001000001111001111010100000011001)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
