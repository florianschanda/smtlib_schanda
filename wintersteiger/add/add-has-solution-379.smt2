(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7249339693227898617777782419580034911632537841796875p169 {- 3264812354110331 169 (-1.29075e+051)}
; Y = -1.99891685917279726680817475426010787487030029296875p879 {- 4498721594744716 879 (-8.05677e+264)}
; -1.7249339693227898617777782419580034911632537841796875p169 + -1.99891685917279726680817475426010787487030029296875p879 == -1.9989168591727974888527796792914159595966339111328125p879
; [HW: -1.9989168591727974888527796792914159595966339111328125p879] 

; mpf : - 4498721594744717 879
; mpfd: - 4498721594744717 879 (-8.05677e+264) class: Neg. norm. non-zero
; hwf : - 4498721594744717 879 (-8.05677e+264) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010101000 #b1011100110010101010001011100101000000000001101111011)))
(assert (= y (fp #b1 #b11101101110 #b1111111110111001000000111110100110010001111110001100)))
(assert (= r (fp #b1 #b11101101110 #b1111111110111001000000111110100110010001111110001101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
