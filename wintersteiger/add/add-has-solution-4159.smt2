(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.09493052886124875300311032333411276340484619140625p-1004 {+ 427529094405604 -1004 (6.38662e-303)}
; Y = 1.217265879738675948829040862619876861572265625p453 {+ 978478535031424 453 (2.83122e+136)}
; 1.09493052886124875300311032333411276340484619140625p-1004 + 1.217265879738675948829040862619876861572265625p453 == 1.2172658797386761708736457876511849462985992431640625p453
; [HW: 1.2172658797386761708736457876511849462985992431640625p453] 

; mpf : + 978478535031425 453
; mpfd: + 978478535031425 453 (2.83122e+136) class: Pos. norm. non-zero
; hwf : + 978478535031425 453 (2.83122e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000010011 #b0001100001001101010111011111110011011001110111100100)))
(assert (= y (fp #b0 #b10111000100 #b0011011110011110101111001001100000000011101010000000)))
(assert (= r (fp #b0 #b10111000100 #b0011011110011110101111001001100000000011101010000001)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
