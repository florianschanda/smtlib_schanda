(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6143969730597385048298519905074499547481536865234375p554 {+ 2766997978929399 554 (9.5198e+166)}
; Y = -1.569026660987550503278953328845091164112091064453125p499 {- 2562668258387410 499 (-2.56802e+150)}
; 1.6143969730597385048298519905074499547481536865234375p554 + -1.569026660987550503278953328845091164112091064453125p499 == 1.614396973059738282785247065476141870021820068359375p554
; [HW: 1.614396973059738282785247065476141870021820068359375p554] 

; mpf : + 2766997978929398 554
; mpfd: + 2766997978929398 554 (9.5198e+166) class: Pos. norm. non-zero
; hwf : + 2766997978929398 554 (9.5198e+166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101001 #b1001110101001001000111101011101000001101100011110111)))
(assert (= y (fp #b1 #b10111110010 #b1001000110101011101110110011001101111110010111010010)))
(assert (= r (fp #b0 #b11000101001 #b1001110101001001000111101011101000001101100011110110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
