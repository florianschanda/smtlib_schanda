(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.81539019058748873902686682413332164287567138671875p-69 {+ 3672190958491372 -69 (3.07539e-021)}
; Y = -1.327568235469630320011447111028246581554412841796875p-907 {- 1475236183199438 -907 (-1.22702e-273)}
; 1.81539019058748873902686682413332164287567138671875p-69 + -1.327568235469630320011447111028246581554412841796875p-907 == 1.8153901905874885169822618991020135581493377685546875p-69
; [HW: 1.8153901905874885169822618991020135581493377685546875p-69] 

; mpf : + 3672190958491371 -69
; mpfd: + 3672190958491371 -69 (3.07539e-021) class: Pos. norm. non-zero
; hwf : + 3672190958491371 -69 (3.07539e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111010 #b1101000010111101011010010101101000001101011011101100)))
(assert (= y (fp #b1 #b00001110100 #b0101001111011011100000110000101010001100111011001110)))
(assert (= r (fp #b0 #b01110111010 #b1101000010111101011010010101101000001101011011101011)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
