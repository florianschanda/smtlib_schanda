(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.853479329598149316638000527746044099330902099609375p-279 {+ 3843729190746646 -279 (1.90818e-084)}
; Y = -1.3880211834918754210121960568358190357685089111328125p24 {- 1747492057385869 24 (-2.32871e+007)}
; 1.853479329598149316638000527746044099330902099609375p-279 + -1.3880211834918754210121960568358190357685089111328125p24 == -1.38802118349187519896759113180451095104217529296875p24
; [HW: -1.38802118349187519896759113180451095104217529296875p24] 

; mpf : - 1747492057385868 24
; mpfd: - 1747492057385868 24 (-2.32871e+007) class: Neg. norm. non-zero
; hwf : - 1747492057385868 24 (-2.32871e+007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101000 #b1101101001111101100111110001000001101111101000010110)))
(assert (= y (fp #b1 #b10000010111 #b0110001101010101010110110011010101000000101110001101)))
(assert (= r (fp #b1 #b10000010111 #b0110001101010101010110110011010101000000101110001100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
