(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7556683844477445344267607652000151574611663818359375p519 {- 3403227854614527 519 (-3.01308e+156)}
; Y = -1.201724701835501729618727040360681712627410888671875p-36 {- 908487292017790 -36 (-1.74874e-011)}
; -1.7556683844477445344267607652000151574611663818359375p519 + -1.201724701835501729618727040360681712627410888671875p-36 == -1.7556683844477445344267607652000151574611663818359375p519
; [HW: -1.7556683844477445344267607652000151574611663818359375p519] 

; mpf : - 3403227854614527 519
; mpfd: - 3403227854614527 519 (-3.01308e+156) class: Neg. norm. non-zero
; hwf : - 3403227854614527 519 (-3.01308e+156) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000000110 #b1100000101110011011110111011010111010010111111111111)))
(assert (= y (fp #b1 #b01111011011 #b0011001110100100001110101110010100101101110001111110)))
(assert (= r (fp #b1 #b11000000110 #b1100000101110011011110111011010111010010111111111111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
