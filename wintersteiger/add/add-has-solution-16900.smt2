(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.723310974007187912349081670981831848621368408203125p824 {- 3257503033011762 824 (-1.92788e+248)}
; Y = 1.86445096164830825813396586454473435878753662109375p-100 {+ 3893141028759388 -100 (1.47079e-030)}
; -1.723310974007187912349081670981831848621368408203125p824 + 1.86445096164830825813396586454473435878753662109375p-100 == -1.723310974007187912349081670981831848621368408203125p824
; [HW: -1.723310974007187912349081670981831848621368408203125p824] 

; mpf : - 3257503033011762 824
; mpfd: - 3257503033011762 824 (-1.92788e+248) class: Neg. norm. non-zero
; hwf : - 3257503033011762 824 (-1.92788e+248) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110111 #b1011100100101010111010000111001000110010111000110010)))
(assert (= y (fp #b0 #b01110011011 #b1101110101001100101010001000000101000110011101011100)))
(assert (= r (fp #b1 #b11100110111 #b1011100100101010111010000111001000110010111000110010)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
