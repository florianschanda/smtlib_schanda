(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.398710979068508830636119455448351800441741943359375p225 {- 1795634616761462 225 (-7.54183e+067)}
; Y = 1.8676358433858315510889269717154093086719512939453125p548 {+ 3907484460965717 548 (1.7208e+165)}
; -1.398710979068508830636119455448351800441741943359375p225 + 1.8676358433858315510889269717154093086719512939453125p548 == 1.86763584338583132904432204668410122394561767578125p548
; [HW: 1.86763584338583132904432204668410122394561767578125p548] 

; mpf : + 3907484460965716 548
; mpfd: + 3907484460965716 548 (1.7208e+165) class: Pos. norm. non-zero
; hwf : + 3907484460965716 548 (1.7208e+165) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100000 #b0110011000010001111011000011011110100111110001110110)))
(assert (= y (fp #b0 #b11000100011 #b1101111000011101011000011111010000101101111101010101)))
(assert (= r (fp #b0 #b11000100011 #b1101111000011101011000011111010000101101111101010100)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
