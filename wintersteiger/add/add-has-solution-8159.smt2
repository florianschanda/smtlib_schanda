(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1400546865782803518385435381787829101085662841796875p-351 {- 630750234285435 -351 (-2.48541e-106)}
; Y = -1.4003794734296430846143266535364091396331787109375p-21 {- 1803148847344536 -21 (-6.67753e-007)}
; -1.1400546865782803518385435381787829101085662841796875p-351 + -1.4003794734296430846143266535364091396331787109375p-21 == -1.4003794734296430846143266535364091396331787109375p-21
; [HW: -1.4003794734296430846143266535364091396331787109375p-21] 

; mpf : - 1803148847344536 -21
; mpfd: - 1803148847344536 -21 (-6.67753e-007) class: Neg. norm. non-zero
; hwf : - 1803148847344536 -21 (-6.67753e-007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100000 #b0010001111011010100111111011101010000001010101111011)))
(assert (= y (fp #b1 #b01111101010 #b0110011001111111010001001110100001011110101110011000)))
(assert (= r (fp #b1 #b01111101010 #b0110011001111111010001001110100001011110101110011000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
