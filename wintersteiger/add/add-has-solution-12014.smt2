(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8777501049421767564950869200401939451694488525390625p-807 {+ 3953035045542001 -807 (2.20004e-243)}
; Y = 1.47657249411470470334961646585725247859954833984375p893 {+ 2146291706910012 893 (9.75081e+268)}
; 1.8777501049421767564950869200401939451694488525390625p-807 + 1.47657249411470470334961646585725247859954833984375p893 == 1.47657249411470470334961646585725247859954833984375p893
; [HW: 1.47657249411470470334961646585725247859954833984375p893] 

; mpf : + 2146291706910012 893
; mpfd: + 2146291706910012 893 (9.75081e+268) class: Pos. norm. non-zero
; hwf : + 2146291706910012 893 (9.75081e+268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011011000 #b1110000010110100001110110001101011001001100001110001)))
(assert (= y (fp #b0 #b11101111100 #b0111101000000000101001111010110001100101010100111100)))
(assert (= r (fp #b0 #b11101111100 #b0111101000000000101001111010110001100101010100111100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
