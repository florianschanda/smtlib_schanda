(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.718081199337927245096580008976161479949951171875p198 {+ 3233950221760048 198 (6.90213e+059)}
; Y = 1.9133811196681467237112883594818413257598876953125p869 {+ 4113502870184712 869 (7.53126e+261)}
; 1.718081199337927245096580008976161479949951171875p198 + 1.9133811196681467237112883594818413257598876953125p869 == 1.9133811196681467237112883594818413257598876953125p869
; [HW: 1.9133811196681467237112883594818413257598876953125p869] 

; mpf : + 4113502870184712 869
; mpfd: + 4113502870184712 869 (7.53126e+261) class: Pos. norm. non-zero
; hwf : + 4113502870184712 869 (7.53126e+261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000101 #b1011011111010100001010110110001100000111011000110000)))
(assert (= y (fp #b0 #b11101100100 #b1110100111010011010110000101010111000010001100001000)))
(assert (= r (fp #b0 #b11101100100 #b1110100111010011010110000101010111000010001100001000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
