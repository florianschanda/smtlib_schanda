(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9965681475069059214177968897274695336818695068359375p-492 {- 4488143937761407 -492 (-1.56144e-148)}
; Y = -1.83714287908096540746782920905388891696929931640625p98 {- 3770156358284900 98 (-5.82214e+029)}
; -1.9965681475069059214177968897274695336818695068359375p-492 + -1.83714287908096540746782920905388891696929931640625p98 == -1.83714287908096540746782920905388891696929931640625p98
; [HW: -1.83714287908096540746782920905388891696929931640625p98] 

; mpf : - 3770156358284900 98
; mpfd: - 3770156358284900 98 (-5.82214e+029) class: Neg. norm. non-zero
; hwf : - 3770156358284900 98 (-5.82214e+029) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000010011 #b1111111100011111000101110001000111000111000001111111)))
(assert (= y (fp #b1 #b10001100001 #b1101011001001110111111101110011110111011011001100100)))
(assert (= r (fp #b1 #b10001100001 #b1101011001001110111111101110011110111011011001100100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
