(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.832334841248272283564801909960806369781494140625p320 {+ 3748502880893200 320 (3.91384e+096)}
; Y = -1.6022208923800516089386292151175439357757568359375p66 {- 2712161786517528 66 (-1.18223e+020)}
; 1.832334841248272283564801909960806369781494140625p320 + -1.6022208923800516089386292151175439357757568359375p66 == 1.8323348412482720615201969849294982850551605224609375p320
; [HW: 1.8323348412482720615201969849294982850551605224609375p320] 

; mpf : + 3748502880893199 320
; mpfd: + 3748502880893199 320 (3.91384e+096) class: Pos. norm. non-zero
; hwf : + 3748502880893199 320 (3.91384e+096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111111 #b1101010100010011111001010110101001111011100100010000)))
(assert (= y (fp #b1 #b10001000001 #b1001101000101011001001011111110110111101100000011000)))
(assert (= r (fp #b0 #b10100111111 #b1101010100010011111001010110101001111011100100001111)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
