(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8029345389152064971227673595421947538852691650390625p874 {+ 3616095690261425 874 (2.27089e+263)}
; Y = -1.7626860602285974177760863312869332730770111083984375p-491 {- 3434832656646183 -491 (-2.75707e-148)}
; 1.8029345389152064971227673595421947538852691650390625p874 + -1.7626860602285974177760863312869332730770111083984375p-491 == 1.802934538915206275078162434510886669158935546875p874
; [HW: 1.802934538915206275078162434510886669158935546875p874] 

; mpf : + 3616095690261424 874
; mpfd: + 3616095690261424 874 (2.27089e+263) class: Pos. norm. non-zero
; hwf : + 3616095690261424 874 (2.27089e+263) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101001 #b1100110110001101000111100011000101111000001110110001)))
(assert (= y (fp #b1 #b01000010100 #b1100001100111111011001001100010111001100000000100111)))
(assert (= r (fp #b0 #b11101101001 #b1100110110001101000111100011000101111000001110110000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
