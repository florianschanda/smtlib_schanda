(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.233638246672853266971969787846319377422332763671875p370 {- 1052213120655358 370 (-2.96679e+111)}
; Y = -1.66624916576970694137571626924909651279449462890625p-990 {- 3000519494696356 -990 (-1.59237e-298)}
; -1.233638246672853266971969787846319377422332763671875p370 + -1.66624916576970694137571626924909651279449462890625p-990 == -1.233638246672853266971969787846319377422332763671875p370
; [HW: -1.233638246672853266971969787846319377422332763671875p370] 

; mpf : - 1052213120655358 370
; mpfd: - 1052213120655358 370 (-2.96679e+111) class: Neg. norm. non-zero
; hwf : - 1052213120655358 370 (-2.96679e+111) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101110001 #b0011101111001111101101110101010010001101111111111110)))
(assert (= y (fp #b1 #b00000100001 #b1010101010001111010011100010100111110111110110100100)))
(assert (= r (fp #b1 #b10101110001 #b0011101111001111101101110101010010001101111111111110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
