(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8180298713688849421288296070997603237628936767578125p1014 {- 3684079023874845 1014 (-3.19166e+305)}
; Y = 1.50739307033739411423312049009837210178375244140625p979 {+ 2285095242501860 979 (7.7018e+294)}
; -1.8180298713688849421288296070997603237628936767578125p1014 + 1.50739307033739411423312049009837210178375244140625p979 == -1.81802987132501403522155669634230434894561767578125p1014
; [HW: -1.81802987132501403522155669634230434894561767578125p1014] 

; mpf : - 3684079023677268 1014
; mpfd: - 3684079023677268 1014 (-3.19166e+305) class: Neg. norm. non-zero
; hwf : - 3684079023677268 1014 (-3.19166e+305) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110101 #b1101000101101010011001111101100010101110001100011101)))
(assert (= y (fp #b0 #b11111010010 #b1000000111100100100000110010001101010000111011100100)))
(assert (= r (fp #b1 #b11111110101 #b1101000101101010011001111101100001111101111101010100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
