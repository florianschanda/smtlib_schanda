(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1045873687595142431661088266992010176181793212890625p209 {- 471019634973009 209 (-9.08802e+062)}
; Y = 1.22879151241487161172472042380832135677337646484375p850 {+ 1030385370057148 850 (9.22517e+255)}
; -1.1045873687595142431661088266992010176181793212890625p209 + 1.22879151241487161172472042380832135677337646484375p850 == 1.22879151241487161172472042380832135677337646484375p850
; [HW: 1.22879151241487161172472042380832135677337646484375p850] 

; mpf : + 1030385370057148 850
; mpfd: + 1030385370057148 850 (9.22517e+255) class: Pos. norm. non-zero
; hwf : + 1030385370057148 850 (9.22517e+255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010000 #b0001101011000110001111001110000001100101100101010001)))
(assert (= y (fp #b0 #b11101010001 #b0011101010010010000101001001111101101100100110111100)))
(assert (= r (fp #b0 #b11101010001 #b0011101010010010000101001001111101101100100110111100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
