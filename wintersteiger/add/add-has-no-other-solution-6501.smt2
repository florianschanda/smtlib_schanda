(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.58146693849622455019243716378696262836456298828125p798 {+ 2618694287539860 798 (2.63631e+240)}
; Y = -1.0537573506090571751059314919984899461269378662109375p-693 {- 242101584171375 -693 (-2.56421e-209)}
; 1.58146693849622455019243716378696262836456298828125p798 + -1.0537573506090571751059314919984899461269378662109375p-693 == 1.58146693849622455019243716378696262836456298828125p798
; [HW: 1.58146693849622455019243716378696262836456298828125p798] 

; mpf : + 2618694287539860 798
; mpfd: + 2618694287539860 798 (2.63631e+240) class: Pos. norm. non-zero
; hwf : + 2618694287539860 798 (2.63631e+240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011101 #b1001010011011011000001000110110010001011111010010100)))
(assert (= y (fp #b1 #b00101001010 #b0000110111000011000010101010111011001001000101101111)))
(assert (= r (fp #b0 #b11100011101 #b1001010011011011000001000110110010001011111010010100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
