(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.376571024679780652633098725345917046070098876953125p-1016 {- 1695925126426386 -1016 (-1.9603e-306)}
; Y = -1.13065204653212081353785833925940096378326416015625p-9 {- 588404508077252 -9 (-0.0022083)}
; -1.376571024679780652633098725345917046070098876953125p-1016 + -1.13065204653212081353785833925940096378326416015625p-9 == -1.13065204653212081353785833925940096378326416015625p-9
; [HW: -1.13065204653212081353785833925940096378326416015625p-9] 

; mpf : - 588404508077252 -9
; mpfd: - 588404508077252 -9 (-0.0022083) class: Neg. norm. non-zero
; hwf : - 588404508077252 -9 (-0.0022083) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000111 #b0110000001100110111101010110101110011110111100010010)))
(assert (= y (fp #b1 #b01111110110 #b0010000101110010011010011001101100000010110011000100)))
(assert (= r (fp #b1 #b01111110110 #b0010000101110010011010011001101100000010110011000100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
