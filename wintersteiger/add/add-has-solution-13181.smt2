(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.431861210095498382344203491811640560626983642578125p-801 {+ 1944929984861858 -801 (1.07368e-241)}
; Y = 1.86063434815166051095047805574722588062286376953125p-326 {+ 3875952529638068 -326 (1.36108e-098)}
; 1.431861210095498382344203491811640560626983642578125p-801 + 1.86063434815166051095047805574722588062286376953125p-326 == 1.86063434815166051095047805574722588062286376953125p-326
; [HW: 1.86063434815166051095047805574722588062286376953125p-326] 

; mpf : + 3875952529638068 -326
; mpfd: + 3875952529638068 -326 (1.36108e-098) class: Pos. norm. non-zero
; hwf : + 3875952529638068 -326 (1.36108e-098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011011110 #b0110111010001110011101001100110111000101011010100010)))
(assert (= y (fp #b0 #b01010111001 #b1101110001010010100010000101101100100000001010110100)))
(assert (= r (fp #b0 #b01010111001 #b1101110001010010100010000101101100100000001010110100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
