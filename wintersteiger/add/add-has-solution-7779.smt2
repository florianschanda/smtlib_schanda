(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6600284910177942609976753374212421476840972900390625p95 {+ 2972504066201649 95 (6.57605e+028)}
; Y = 1.0902250392589769578677305617020465433597564697265625p-263 {+ 406337453186217 -263 (7.35576e-080)}
; 1.6600284910177942609976753374212421476840972900390625p95 + 1.0902250392589769578677305617020465433597564697265625p-263 == 1.660028491017794483042280262452550232410430908203125p95
; [HW: 1.660028491017794483042280262452550232410430908203125p95] 

; mpf : + 2972504066201650 95
; mpfd: + 2972504066201650 95 (6.57605e+028) class: Pos. norm. non-zero
; hwf : + 2972504066201650 95 (6.57605e+028) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011110 #b1010100011110111101000001000111101011001100000110001)))
(assert (= y (fp #b0 #b01011111000 #b0001011100011000111111001111100011100101110010101001)))
(assert (= r (fp #b0 #b10001011110 #b1010100011110111101000001000111101011001100000110010)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
