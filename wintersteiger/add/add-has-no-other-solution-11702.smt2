(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0173926112420463852004104410298168659210205078125p301 {+ 78329357508680 301 (4.14493e+090)}
; Y = -1.1958313436063277013232664103270508348941802978515625p-1016 {- 881945966092921 -1016 (-1.70292e-306)}
; 1.0173926112420463852004104410298168659210205078125p301 + -1.1958313436063277013232664103270508348941802978515625p-1016 == 1.0173926112420463852004104410298168659210205078125p301
; [HW: 1.0173926112420463852004104410298168659210205078125p301] 

; mpf : + 78329357508680 301
; mpfd: + 78329357508680 301 (4.14493e+090) class: Pos. norm. non-zero
; hwf : + 78329357508680 301 (4.14493e+090) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101100 #b0000010001110011110101111001100001111010000001001000)))
(assert (= y (fp #b1 #b00000000111 #b0011001000100010000000001100000001010010001001111001)))
(assert (= r (fp #b0 #b10100101100 #b0000010001110011110101111001100001111010000001001000)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
