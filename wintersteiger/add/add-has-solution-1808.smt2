(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.833658718601979042972516253939829766750335693359375p565 {+ 3754465094450038 565 (2.21445e+170)}
; Y = -1.1463619827856057487025509544764645397663116455078125p-910 {- 659155771134461 -910 (-1.32442e-274)}
; 1.833658718601979042972516253939829766750335693359375p565 + -1.1463619827856057487025509544764645397663116455078125p-910 == 1.833658718601979042972516253939829766750335693359375p565
; [HW: 1.833658718601979042972516253939829766750335693359375p565] 

; mpf : + 3754465094450038 565
; mpfd: + 3754465094450038 565 (2.21445e+170) class: Pos. norm. non-zero
; hwf : + 3754465094450038 565 (2.21445e+170) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110100 #b1101010101101010101010000110010001101011101101110110)))
(assert (= y (fp #b1 #b00001110001 #b0010010101110111111110101001100101110001000111111101)))
(assert (= r (fp #b0 #b11000110100 #b1101010101101010101010000110010001101011101101110110)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
