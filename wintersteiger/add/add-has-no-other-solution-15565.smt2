(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7188242832492346412465167304617352783679962158203125p150 {+ 3237296774186117 150 (2.45319e+045)}
; Y = -1.0369587526913728314781337758176960051059722900390625p-421 {- 166447424848945 -421 (-1.91484e-127)}
; 1.7188242832492346412465167304617352783679962158203125p150 + -1.0369587526913728314781337758176960051059722900390625p-421 == 1.7188242832492346412465167304617352783679962158203125p150
; [HW: 1.7188242832492346412465167304617352783679962158203125p150] 

; mpf : + 3237296774186117 150
; mpfd: + 3237296774186117 150 (2.45319e+045) class: Pos. norm. non-zero
; hwf : + 3237296774186117 150 (2.45319e+045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010101 #b1011100000000100110111100100010000100000010010000101)))
(assert (= y (fp #b1 #b01001011010 #b0000100101110110001000001111101000011100010000110001)))
(assert (= r (fp #b0 #b10010010101 #b1011100000000100110111100100010000100000010010000101)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
