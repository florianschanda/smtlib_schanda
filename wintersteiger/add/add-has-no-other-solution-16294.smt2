(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2920053152127473072852126279030926525592803955078125p562 {+ 1315075028782333 562 (1.95039e+169)}
; Y = 1.3085990234869822046448462060652673244476318359375p206 {+ 1389806447182872 206 (1.34582e+062)}
; 1.2920053152127473072852126279030926525592803955078125p562 + 1.3085990234869822046448462060652673244476318359375p206 == 1.2920053152127473072852126279030926525592803955078125p562
; [HW: 1.2920053152127473072852126279030926525592803955078125p562] 

; mpf : + 1315075028782333 562
; mpfd: + 1315075028782333 562 (1.95039e+169) class: Pos. norm. non-zero
; hwf : + 1315075028782333 562 (1.95039e+169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110001 #b0100101011000000110111000011111100011000110011111101)))
(assert (= y (fp #b0 #b10011001101 #b0100111100000000010110000111100101110100010000011000)))
(assert (= r (fp #b0 #b11000110001 #b0100101011000000110111000011111100011000110011111101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
