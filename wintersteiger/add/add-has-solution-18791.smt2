(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.48618152291444527435260170022957026958465576171875p-164 {+ 2189566925431916 -164 (6.35554e-050)}
; Y = -1.4783687425641585111435460930806584656238555908203125p-425 {- 2154381290757637 -425 (-1.70622e-128)}
; 1.48618152291444527435260170022957026958465576171875p-164 + -1.4783687425641585111435460930806584656238555908203125p-425 == 1.48618152291444527435260170022957026958465576171875p-164
; [HW: 1.48618152291444527435260170022957026958465576171875p-164] 

; mpf : + 2189566925431916 -164
; mpfd: + 2189566925431916 -164 (6.35554e-050) class: Pos. norm. non-zero
; hwf : + 2189566925431916 -164 (6.35554e-050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101011011 #b0111110001110110011001000110110011010110010001101100)))
(assert (= y (fp #b1 #b01001010110 #b0111101001110110010111111011100010111101111000000101)))
(assert (= r (fp #b0 #b01101011011 #b0111110001110110011001000110110011010110010001101100)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
