(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6551168582433974929557507493882440030574798583984375p-629 {- 2950384038669095 -629 (-7.42953e-190)}
; Y = 1.2291160883648235557785710625466890633106231689453125p-520 {+ 1031847130184405 -520 (3.58092e-157)}
; -1.6551168582433974929557507493882440030574798583984375p-629 + 1.2291160883648235557785710625466890633106231689453125p-520 == 1.22911608836482333373396613751538097858428955078125p-520
; [HW: 1.22911608836482333373396613751538097858428955078125p-520] 

; mpf : + 1031847130184404 -520
; mpfd: + 1031847130184404 -520 (3.58092e-157) class: Pos. norm. non-zero
; hwf : + 1031847130184404 -520 (3.58092e-157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001010 #b1010011110110101101111010000100100110110101100100111)))
(assert (= y (fp #b0 #b00111110111 #b0011101010100111010110100001101010000011101011010101)))
(assert (= r (fp #b0 #b00111110111 #b0011101010100111010110100001101010000011101011010100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
