(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6356645959388662614486520396894775331020355224609375p-638 {- 2862778837402895 -638 (-1.43403e-192)}
; Y = 1.068831697640179267949633867829106748104095458984375p-1018 {+ 309990407843590 -1018 (3.80517e-307)}
; -1.6356645959388662614486520396894775331020355224609375p-638 + 1.068831697640179267949633867829106748104095458984375p-1018 == -1.635664595938866039404047114658169448375701904296875p-638
; [HW: -1.635664595938866039404047114658169448375701904296875p-638] 

; mpf : - 2862778837402894 -638
; mpfd: - 2862778837402894 -638 (-1.43403e-192) class: Neg. norm. non-zero
; hwf : - 2862778837402894 -638 (-1.43403e-192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000001 #b1010001010111010111010100011101011001000010100001111)))
(assert (= y (fp #b0 #b00000000101 #b0001000110011110111101000100001001001010111100000110)))
(assert (= r (fp #b1 #b00110000001 #b1010001010111010111010100011101011001000010100001110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
