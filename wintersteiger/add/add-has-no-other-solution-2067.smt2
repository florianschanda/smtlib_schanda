(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.07517124386537687996678869239985942840576171875p722 {+ 338541185861088 722 (2.37211e+217)}
; Y = -1.8461593115435874778995639644563198089599609375p-458 {- 3810762760163776 -458 (-2.48045e-138)}
; 1.07517124386537687996678869239985942840576171875p722 + -1.8461593115435874778995639644563198089599609375p-458 == 1.07517124386537687996678869239985942840576171875p722
; [HW: 1.07517124386537687996678869239985942840576171875p722] 

; mpf : + 338541185861088 722
; mpfd: + 338541185861088 722 (2.37211e+217) class: Pos. norm. non-zero
; hwf : + 338541185861088 722 (2.37211e+217) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010001 #b0001001100111110011011000011001000000000010111100000)))
(assert (= y (fp #b1 #b01000110101 #b1101100010011101111001011000101001001001000111000000)))
(assert (= r (fp #b0 #b11011010001 #b0001001100111110011011000011001000000000010111100000)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
