(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1720044293449445316213086698553524911403656005859375p-559 {- 774639083903967 -559 (-6.211e-169)}
; Y = -1.17689791248308939231037584249861538410186767578125p-15 {- 796677372741460 -15 (-3.59161e-005)}
; -1.1720044293449445316213086698553524911403656005859375p-559 + -1.17689791248308939231037584249861538410186767578125p-15 == -1.17689791248308939231037584249861538410186767578125p-15
; [HW: -1.17689791248308939231037584249861538410186767578125p-15] 

; mpf : - 796677372741460 -15
; mpfd: - 796677372741460 -15 (-3.59161e-005) class: Neg. norm. non-zero
; hwf : - 796677372741460 -15 (-3.59161e-005) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010000 #b0010110000001000011110110111011011001101101111011111)))
(assert (= y (fp #b1 #b01111110000 #b0010110101001001001011100111110011011000011101010100)))
(assert (= r (fp #b1 #b01111110000 #b0010110101001001001011100111110011011000011101010100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
