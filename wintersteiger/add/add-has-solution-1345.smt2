(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.823672568173463570673220601747743785381317138671875p255 {+ 3709491471101310 255 (1.05583e+077)}
; Y = -1.460430465573006042490078471018932759761810302734375p29 {- 2073594473184614 29 (-7.84063e+008)}
; 1.823672568173463570673220601747743785381317138671875p255 + -1.460430465573006042490078471018932759761810302734375p29 == 1.8236725681734633486286156767164357006549835205078125p255
; [HW: 1.8236725681734633486286156767164357006549835205078125p255] 

; mpf : + 3709491471101309 255
; mpfd: + 3709491471101309 255 (1.05583e+077) class: Pos. norm. non-zero
; hwf : + 3709491471101309 255 (1.05583e+077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111110 #b1101001011011100001101001001011011101010110101111110)))
(assert (= y (fp #b1 #b10000011100 #b0111010111011110110001010101111110110111110101100110)))
(assert (= r (fp #b0 #b10011111110 #b1101001011011100001101001001011011101010110101111101)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
