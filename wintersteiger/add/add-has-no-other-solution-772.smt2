(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.85600258990965105709847193793393671512603759765625p-1022 {+ 3855092944945284 -1023 (1.90467e-308)}
; Y = 1.9096010427281859822556953076855279505252838134765625p848 {+ 4096478917086473 848 (3.58409e+255)}
; 0.85600258990965105709847193793393671512603759765625p-1022 + 1.9096010427281859822556953076855279505252838134765625p848 == 1.9096010427281859822556953076855279505252838134765625p848
; [HW: 1.9096010427281859822556953076855279505252838134765625p848] 

; mpf : + 4096478917086473 848
; mpfd: + 4096478917086473 848 (3.58409e+255) class: Pos. norm. non-zero
; hwf : + 4096478917086473 848 (3.58409e+255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1101101100100010111111000101100011110100000010000100)))
(assert (= y (fp #b0 #b11101001111 #b1110100011011011100111010010101011101100110100001001)))
(assert (= r (fp #b0 #b11101001111 #b1110100011011011100111010010101011101100110100001001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
