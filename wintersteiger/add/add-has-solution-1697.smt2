(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6490821273349094422400185067090205848217010498046875p-535 {+ 2923206026798347 -535 (1.4662e-161)}
; Y = 1.7997070682610110115007273634546436369419097900390625p311 {+ 3601560454625841 311 (7.50811e+093)}
; 1.6490821273349094422400185067090205848217010498046875p-535 + 1.7997070682610110115007273634546436369419097900390625p311 == 1.7997070682610110115007273634546436369419097900390625p311
; [HW: 1.7997070682610110115007273634546436369419097900390625p311] 

; mpf : + 3601560454625841 311
; mpfd: + 3601560454625841 311 (7.50811e+093) class: Pos. norm. non-zero
; hwf : + 3601560454625841 311 (7.50811e+093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101000 #b1010011000101010001111110000110101010010010100001011)))
(assert (= y (fp #b0 #b10100110110 #b1100110010111001100110100011100010001111101000110001)))
(assert (= r (fp #b0 #b10100110110 #b1100110010111001100110100011100010001111101000110001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
