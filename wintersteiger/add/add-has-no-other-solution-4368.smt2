(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.864021164736136437767299867118708789348602294921875p-539 {+ 3891205395545886 -539 (1.03582e-162)}
; Y = 1.9906252616373996122689504773006774485111236572265625p306 {+ 4461379559173993 306 (2.59518e+092)}
; 1.864021164736136437767299867118708789348602294921875p-539 + 1.9906252616373996122689504773006774485111236572265625p306 == 1.9906252616373996122689504773006774485111236572265625p306
; [HW: 1.9906252616373996122689504773006774485111236572265625p306] 

; mpf : + 4461379559173993 306
; mpfd: + 4461379559173993 306 (2.59518e+092) class: Pos. norm. non-zero
; hwf : + 4461379559173993 306 (2.59518e+092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100100 #b1101110100110000011111011011010110010111111100011110)))
(assert (= y (fp #b0 #b10100110001 #b1111110110011001100111011111110101010010111101101001)))
(assert (= r (fp #b0 #b10100110001 #b1111110110011001100111011111110101010010111101101001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
