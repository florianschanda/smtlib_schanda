(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.447897209239743521180798779823817312717437744140625p560 {- 2017149704632394 560 (-5.46431e+168)}
; Y = 1.188155953652466845227309022448025643825531005859375p-762 {+ 847379082756790 -762 (4.89798e-230)}
; -1.447897209239743521180798779823817312717437744140625p560 + 1.188155953652466845227309022448025643825531005859375p-762 == -1.4478972092397432991361938547925092279911041259765625p560
; [HW: -1.4478972092397432991361938547925092279911041259765625p560] 

; mpf : - 2017149704632393 560
; mpfd: - 2017149704632393 560 (-5.46431e+168) class: Neg. norm. non-zero
; hwf : - 2017149704632393 560 (-5.46431e+168) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101111 #b0111001010101001011001000011100110100111100001001010)))
(assert (= y (fp #b0 #b00100000101 #b0011000000101010111111010001001101111100001010110110)))
(assert (= r (fp #b1 #b11000101111 #b0111001010101001011001000011100110100111100001001001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
