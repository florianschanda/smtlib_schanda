(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6086992604376824100853582422132603824138641357421875p-918 {- 2741337762487843 -918 (-7.26004e-277)}
; Y = 1.3242814493698087385809003535541705787181854248046875p777 {+ 1460433814545035 777 (1.05266e+234)}
; -1.6086992604376824100853582422132603824138641357421875p-918 + 1.3242814493698087385809003535541705787181854248046875p777 == 1.324281449369808516536295428522862493991851806640625p777
; [HW: 1.324281449369808516536295428522862493991851806640625p777] 

; mpf : + 1460433814545034 777
; mpfd: + 1460433814545034 777 (1.05266e+234) class: Pos. norm. non-zero
; hwf : + 1460433814545034 777 (1.05266e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101001 #b1001101111010011101101101111100010101101111000100011)))
(assert (= y (fp #b0 #b11100001000 #b0101001100000100000110111110101110111110001010001011)))
(assert (= r (fp #b0 #b11100001000 #b0101001100000100000110111110101110111110001010001010)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
