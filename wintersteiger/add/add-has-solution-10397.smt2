(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2544055075243469854484601455624215304851531982421875p-419 {+ 1145740548887651 -419 (9.26552e-127)}
; Y = 1.8605431367574067902381784733734093606472015380859375p-22 {+ 3875541750036895 -22 (4.43588e-007)}
; 1.2544055075243469854484601455624215304851531982421875p-419 + 1.8605431367574067902381784733734093606472015380859375p-22 == 1.8605431367574067902381784733734093606472015380859375p-22
; [HW: 1.8605431367574067902381784733734093606472015380859375p-22] 

; mpf : + 3875541750036895 -22
; mpfd: + 3875541750036895 -22 (4.43588e-007) class: Pos. norm. non-zero
; hwf : + 3875541750036895 -22 (4.43588e-007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001011100 #b0100000100100000101110000010011010111101010001100011)))
(assert (= y (fp #b0 #b01111101001 #b1101110001001100100011100001010100101011100110011111)))
(assert (= r (fp #b0 #b01111101001 #b1101110001001100100011100001010100101011100110011111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
