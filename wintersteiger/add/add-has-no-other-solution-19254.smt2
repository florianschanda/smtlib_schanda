(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.73710001739124297870375812635757029056549072265625p79 {+ 3319603363657988 79 (1.05001e+024)}
; Y = 1.796706736769869916514608121360652148723602294921875p-425 {+ 3588048162840350 -425 (2.07362e-128)}
; 1.73710001739124297870375812635757029056549072265625p79 + 1.796706736769869916514608121360652148723602294921875p-425 == 1.73710001739124297870375812635757029056549072265625p79
; [HW: 1.73710001739124297870375812635757029056549072265625p79] 

; mpf : + 3319603363657988 79
; mpfd: + 3319603363657988 79 (1.05001e+024) class: Pos. norm. non-zero
; hwf : + 3319603363657988 79 (1.05001e+024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001110 #b1011110010110010100101100011010010010011100100000100)))
(assert (= y (fp #b0 #b01001010110 #b1100101111110100111110010000001011101101111100011110)))
(assert (= r (fp #b0 #b10001001110 #b1011110010110010100101100011010010010011100100000100)))
(assert  (not (= (fp.add roundTowardNegative x y) r)))
(check-sat)
(exit)
