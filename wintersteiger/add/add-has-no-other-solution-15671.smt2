(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5333784635130864870689038070850074291229248046875p-987 {+ 2402123049524984 -987 (1.17231e-297)}
; Y = 1.2844474527415865594548449735157191753387451171875p976 {+ 1281037442173496 976 (8.20337e+293)}
; 1.5333784635130864870689038070850074291229248046875p-987 + 1.2844474527415865594548449735157191753387451171875p976 == 1.2844474527415865594548449735157191753387451171875p976
; [HW: 1.2844474527415865594548449735157191753387451171875p976] 

; mpf : + 1281037442173496 976
; mpfd: + 1281037442173496 976 (8.20337e+293) class: Pos. norm. non-zero
; hwf : + 1281037442173496 976 (8.20337e+293) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100100 #b1000100010001011011111011011000100101101111011111000)))
(assert (= y (fp #b0 #b11111001111 #b0100100011010001100011000101101011110100101000111000)))
(assert (= r (fp #b0 #b11111001111 #b0100100011010001100011000101101011110100101000111000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
