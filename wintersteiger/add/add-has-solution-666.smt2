(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.184174513962254149390673774178139865398406982421875p-997 {+ 829448272451550 -997 (8.84118e-301)}
; Y = -1.28528330937855539417569161741994321346282958984375p145 {- 1284801805812284 145 (-5.73256e+043)}
; 1.184174513962254149390673774178139865398406982421875p-997 + -1.28528330937855539417569161741994321346282958984375p145 == -1.2852833093785551721310866923886351287364959716796875p145
; [HW: -1.2852833093785551721310866923886351287364959716796875p145] 

; mpf : - 1284801805812283 145
; mpfd: - 1284801805812283 145 (-5.73256e+043) class: Neg. norm. non-zero
; hwf : - 1284801805812283 145 (-5.73256e+043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011010 #b0010111100100110000011111001101000111001011111011110)))
(assert (= y (fp #b1 #b10010010000 #b0100100100001000010100111011001111100000001000111100)))
(assert (= r (fp #b1 #b10010010000 #b0100100100001000010100111011001111100000001000111011)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
