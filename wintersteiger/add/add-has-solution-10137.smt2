(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2666513864696913316265636240132153034210205078125p448 {- 1200891084742728 448 (-9.20651e+134)}
; Y = 1.1492533329230159022671386992442421615123748779296875p-134 {+ 672177254535899 -134 (5.27711e-041)}
; -1.2666513864696913316265636240132153034210205078125p448 + 1.1492533329230159022671386992442421615123748779296875p-134 == -1.2666513864696913316265636240132153034210205078125p448
; [HW: -1.2666513864696913316265636240132153034210205078125p448] 

; mpf : - 1200891084742728 448
; mpfd: - 1200891084742728 448 (-9.20651e+134) class: Neg. norm. non-zero
; hwf : - 1200891084742728 448 (-9.20651e+134) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111111 #b0100010001000011010000111110100001010010000001001000)))
(assert (= y (fp #b0 #b01101111001 #b0010011000110101011101110110011110111001001011011011)))
(assert (= r (fp #b1 #b10110111111 #b0100010001000011010000111110100001010010000001001000)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
