(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.545801207478558314534211604041047394275665283203125p-982 {- 2458070114618802 -982 (-3.78179e-296)}
; Y = -1.005553461282958860323333283304236829280853271484375p-554 {- 25010566164550 -554 (-1.70525e-167)}
; -1.545801207478558314534211604041047394275665283203125p-982 + -1.005553461282958860323333283304236829280853271484375p-554 == -1.005553461282958860323333283304236829280853271484375p-554
; [HW: -1.005553461282958860323333283304236829280853271484375p-554] 

; mpf : - 25010566164550 -554
; mpfd: - 25010566164550 -554 (-1.70525e-167) class: Neg. norm. non-zero
; hwf : - 25010566164550 -554 (-1.70525e-167) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101001 #b1000101110111001101000001100000000111100110110110010)))
(assert (= y (fp #b1 #b00111010101 #b0000000101101011111100111001111010010111000001000110)))
(assert (= r (fp #b1 #b00111010101 #b0000000101101011111100111001111010010111000001000110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
