(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7491482687834307707674952325760386884212493896484375p-495 {- 3373863864138311 -495 (-1.70993e-149)}
; Y = -1.85693833677978847873646373045630753040313720703125p425 {- 3859307174200948 425 (-1.60896e+128)}
; -1.7491482687834307707674952325760386884212493896484375p-495 + -1.85693833677978847873646373045630753040313720703125p425 == -1.85693833677978847873646373045630753040313720703125p425
; [HW: -1.85693833677978847873646373045630753040313720703125p425] 

; mpf : - 3859307174200948 425
; mpfd: - 3859307174200948 425 (-1.60896e+128) class: Neg. norm. non-zero
; hwf : - 3859307174200948 425 (-1.60896e+128) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000010000 #b1011111111001000001011100101001001000111101001000111)))
(assert (= y (fp #b1 #b10110101000 #b1101101101100000010011111001001100101000011001110100)))
(assert (= r (fp #b1 #b10110101000 #b1101101101100000010011111001001100101000011001110100)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
