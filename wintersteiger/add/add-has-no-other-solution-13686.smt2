(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.46204341108758573142267778166569769382476806640625p-843 {+ 2080858534003044 -843 (2.49272e-254)}
; Y = -1.802924154400252110264091243152506649494171142578125p761 {- 3616048922563746 761 (-2.18678e+229)}
; 1.46204341108758573142267778166569769382476806640625p-843 + -1.802924154400252110264091243152506649494171142578125p761 == -1.8029241544002518882194863181211985647678375244140625p761
; [HW: -1.8029241544002518882194863181211985647678375244140625p761] 

; mpf : - 3616048922563745 761
; mpfd: - 3616048922563745 761 (-2.18678e+229) class: Neg. norm. non-zero
; hwf : - 3616048922563745 761 (-2.18678e+229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110100 #b0111011001001000011110100001101111110100000101100100)))
(assert (= y (fp #b1 #b11011111000 #b1100110110001100011011111111100001010001010010100010)))
(assert (= r (fp #b1 #b11011111000 #b1100110110001100011011111111100001010001010010100001)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
