(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.44825786852392024428581862594000995159149169921875p342 {+ 2018773969650220 342 (1.29749e+103)}
; Y = 1.922899733413021561290179306524805724620819091796875p858 {+ 4156370895499214 858 (3.69567e+258)}
; 1.44825786852392024428581862594000995159149169921875p342 + 1.922899733413021561290179306524805724620819091796875p858 == 1.922899733413021561290179306524805724620819091796875p858
; [HW: 1.922899733413021561290179306524805724620819091796875p858] 

; mpf : + 4156370895499214 858
; mpfd: + 4156370895499214 858 (3.69567e+258) class: Pos. norm. non-zero
; hwf : + 4156370895499214 858 (3.69567e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010101 #b0111001011000001000001110001010101111100001000101100)))
(assert (= y (fp #b0 #b11101011001 #b1110110001000011001010000010110001111110111111001110)))
(assert (= r (fp #b0 #b11101011001 #b1110110001000011001010000010110001111110111111001110)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
