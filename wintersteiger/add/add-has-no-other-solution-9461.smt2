(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.385348401296558673578829257166944444179534912109375p-781 {+ 1735454916486998 -781 (1.08926e-235)}
; Y = -1.8473230575792050078831607606844045221805572509765625p-2 {- 3816003806376137 -2 (-0.461831)}
; 1.385348401296558673578829257166944444179534912109375p-781 + -1.8473230575792050078831607606844045221805572509765625p-2 == -1.8473230575792047858385558356530964374542236328125p-2
; [HW: -1.8473230575792047858385558356530964374542236328125p-2] 

; mpf : - 3816003806376136 -2
; mpfd: - 3816003806376136 -2 (-0.461831) class: Neg. norm. non-zero
; hwf : - 3816003806376136 -2 (-0.461831) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110010 #b0110001010100110001100010101110100100010011101010110)))
(assert (= y (fp #b1 #b01111111101 #b1101100011101010001010011111010101110011000011001001)))
(assert (= r (fp #b1 #b01111111101 #b1101100011101010001010011111010101110011000011001000)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
