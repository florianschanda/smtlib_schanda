(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7244087804758676529814920286298729479312896728515625p-482 {- 3262447113815033 -482 (-1.38096e-145)}
; Y = 1.4087553986792797910965191476861946284770965576171875p-758 {+ 1840870661177683 -758 (9.29178e-229)}
; -1.7244087804758676529814920286298729479312896728515625p-482 + 1.4087553986792797910965191476861946284770965576171875p-758 == -1.7244087804758676529814920286298729479312896728515625p-482
; [HW: -1.7244087804758676529814920286298729479312896728515625p-482] 

; mpf : - 3262447113815033 -482
; mpfd: - 3262447113815033 -482 (-1.38096e-145) class: Neg. norm. non-zero
; hwf : - 3262447113815033 -482 (-1.38096e-145) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011101 #b1011100101110010110110101001010100010100001111111001)))
(assert (= y (fp #b0 #b00100001001 #b0110100010100100001100011001110101100100000101010011)))
(assert (= r (fp #b1 #b01000011101 #b1011100101110010110110101001010100010100001111111001)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
