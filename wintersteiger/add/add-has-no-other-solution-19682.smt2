(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.95961328608182672184057082631625235080718994140625p422 {+ 4321714037617892 422 (2.12241e+127)}
; Y = 1.01481185122392059128060282091610133647918701171875p-479 {+ 66706647652716 -479 (6.50156e-145)}
; 1.95961328608182672184057082631625235080718994140625p422 + 1.01481185122392059128060282091610133647918701171875p-479 == 1.95961328608182672184057082631625235080718994140625p422
; [HW: 1.95961328608182672184057082631625235080718994140625p422] 

; mpf : + 4321714037617892 422
; mpfd: + 4321714037617892 422 (2.12241e+127) class: Pos. norm. non-zero
; hwf : + 4321714037617892 422 (2.12241e+127) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100101 #b1111010110101001001101110110000010000111010011100100)))
(assert (= y (fp #b0 #b01000100000 #b0000001111001010101101011010000010011001100101101100)))
(assert (= r (fp #b0 #b10110100101 #b1111010110101001001101110110000010000111010011100100)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
