(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.683357139128898172231174612534232437610626220703125p-226 {+ 3077566957141874 -226 (1.56098e-068)}
; Y = -1.230262870435392841272914665751159191131591796875p359 {- 1037011777490096 359 (-1.44466e+108)}
; 1.683357139128898172231174612534232437610626220703125p-226 + -1.230262870435392841272914665751159191131591796875p359 == -1.2302628704353926192283097407198511064052581787109375p359
; [HW: -1.2302628704353926192283097407198511064052581787109375p359] 

; mpf : - 1037011777490095 359
; mpfd: - 1037011777490095 359 (-1.44466e+108) class: Neg. norm. non-zero
; hwf : - 1037011777490095 359 (-1.44466e+108) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011101 #b1010111011110000011111100101010000001011111101110010)))
(assert (= y (fp #b1 #b10101100110 #b0011101011110010100000011110101000000000110010110000)))
(assert (= r (fp #b1 #b10101100110 #b0011101011110010100000011110101000000000110010101111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
