(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.974642343428374857694507227279245853424072265625p-487 {- 4389398894683536 -487 (-4.94175e-147)}
; Y = -1.339778633124950157906596359680406749248504638671875p362 {- 1530226925529982 362 (-1.25861e+109)}
; -1.974642343428374857694507227279245853424072265625p-487 + -1.339778633124950157906596359680406749248504638671875p362 == -1.3397786331249503799512012847117148339748382568359375p362
; [HW: -1.3397786331249503799512012847117148339748382568359375p362] 

; mpf : - 1530226925529983 362
; mpfd: - 1530226925529983 362 (-1.25861e+109) class: Neg. norm. non-zero
; hwf : - 1530226925529983 362 (-1.25861e+109) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011000 #b1111100110000010001010010001111001010010010110010000)))
(assert (= y (fp #b1 #b10101101001 #b0101011011111011101110111000010100100110101101111110)))
(assert (= r (fp #b1 #b10101101001 #b0101011011111011101110111000010100100110101101111111)))
(assert (= (fp.add roundTowardNegative x y) r))
(check-sat)
(exit)
