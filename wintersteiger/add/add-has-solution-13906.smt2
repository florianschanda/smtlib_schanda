(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2848169066875698707264064069022424519062042236328125p104 {+ 1282701314826957 104 (2.60592e+031)}
; Y = -1.7356146342521261427549461586750112473964691162109375p-976 {- 3312913792706159 -976 (-2.71755e-294)}
; 1.2848169066875698707264064069022424519062042236328125p104 + -1.7356146342521261427549461586750112473964691162109375p-976 == 1.2848169066875698707264064069022424519062042236328125p104
; [HW: 1.2848169066875698707264064069022424519062042236328125p104] 

; mpf : + 1282701314826957 104
; mpfd: + 1282701314826957 104 (2.60592e+031) class: Pos. norm. non-zero
; hwf : + 1282701314826957 104 (2.60592e+031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001100111 #b0100100011101001110000101100001110010010001011001101)))
(assert (= y (fp #b1 #b00000101111 #b1011110001010001001111011001110010010010011001101111)))
(assert (= r (fp #b0 #b10001100111 #b0100100011101001110000101100001110010010001011001101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
