(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5327629051665938586523907360970042645931243896484375p-91 {- 2399350821185095 -91 (-6.19078e-028)}
; Y = 1.85450690564742348698246132698841392993927001953125p486 {+ 3848356981859252 486 (3.70515e+146)}
; -1.5327629051665938586523907360970042645931243896484375p-91 + 1.85450690564742348698246132698841392993927001953125p486 == 1.8545069056474232649378564019571058452129364013671875p486
; [HW: 1.8545069056474232649378564019571058452129364013671875p486] 

; mpf : + 3848356981859251 486
; mpfd: + 3848356981859251 486 (3.70515e+146) class: Pos. norm. non-zero
; hwf : + 3848356981859251 486 (3.70515e+146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100100 #b1000100001100011001001100101011000110110011001000111)))
(assert (= y (fp #b0 #b10111100101 #b1101101011000000111101101110110111110110001110110100)))
(assert (= r (fp #b0 #b10111100101 #b1101101011000000111101101110110111110110001110110011)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
