(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.63038304238725828554379404522478580474853515625p-361 {+ 2838992834795936 -361 (3.47105e-109)}
; Y = -1.5427459243392769305813772007240913808345794677734375p-380 {- 2444310342611223 -380 (-6.26464e-115)}
; 1.63038304238725828554379404522478580474853515625p-361 + -1.5427459243392769305813772007240913808345794677734375p-380 == 1.630380099832928753045280245714820921421051025390625p-361
; [HW: 1.630380099832928753045280245714820921421051025390625p-361] 

; mpf : + 2838979582709354 -361
; mpfd: + 2838979582709354 -361 (3.47105e-109) class: Pos. norm. non-zero
; hwf : + 2838979582709354 -361 (3.47105e-109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010110 #b1010000101100000110010000111011100000001100110100000)))
(assert (= y (fp #b1 #b01010000011 #b1000101011110001011001011001101100010011000100010111)))
(assert (= r (fp #b0 #b01010010110 #b1010000101100000100101110001100011010100111001101010)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
