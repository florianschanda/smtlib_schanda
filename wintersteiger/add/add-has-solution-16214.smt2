(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7128673014924082895760193423484452068805694580078125p-479 {+ 3210468913365821 -479 (1.09738e-144)}
; Y = -1.1479449203158365033772270180634222924709320068359375p99 {- 666284688005759 99 (-7.27597e+029)}
; 1.7128673014924082895760193423484452068805694580078125p-479 + -1.1479449203158365033772270180634222924709320068359375p99 == -1.147944920315836281332622093032114207744598388671875p99
; [HW: -1.147944920315836281332622093032114207744598388671875p99] 

; mpf : - 666284688005758 99
; mpfd: - 666284688005758 99 (-7.27597e+029) class: Neg. norm. non-zero
; hwf : - 666284688005758 99 (-7.27597e+029) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000100000 #b1011011001111110011110001011001001001100001100111101)))
(assert (= y (fp #b1 #b10001100010 #b0010010111011111101101111110001001011101101001111111)))
(assert (= r (fp #b1 #b10001100010 #b0010010111011111101101111110001001011101101001111110)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
