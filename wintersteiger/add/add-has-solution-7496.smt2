(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.89597169154225042575490078888833522796630859375p433 {+ 4035097776164192 433 (4.20552e+130)}
; Y = -1.485147350848562641800754136056639254093170166015625p1021 {- 2184909428501370 1021 (-3.3373e+307)}
; 1.89597169154225042575490078888833522796630859375p433 + -1.485147350848562641800754136056639254093170166015625p1021 == -1.4851473508485624197561492110253311693668365478515625p1021
; [HW: -1.4851473508485624197561492110253311693668365478515625p1021] 

; mpf : - 2184909428501369 1021
; mpfd: - 2184909428501369 1021 (-3.3373e+307) class: Neg. norm. non-zero
; hwf : - 2184909428501369 1021 (-3.3373e+307) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110000 #b1110010101011110011001101001100101010000110101100000)))
(assert (= y (fp #b1 #b11111111100 #b0111110000110010100111011110010110100010101101111010)))
(assert (= r (fp #b1 #b11111111100 #b0111110000110010100111011110010110100010101101111001)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
