(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5245855162906050139781655161641538143157958984375p14 {- 2362523135690328 14 (-24978.8)}
; Y = 1.20555803827064433875193572021089494228363037109375p-793 {+ 925751104558684 -793 (2.3142e-239)}
; -1.5245855162906050139781655161641538143157958984375p14 + 1.20555803827064433875193572021089494228363037109375p-793 == -1.5245855162906050139781655161641538143157958984375p14
; [HW: -1.5245855162906050139781655161641538143157958984375p14] 

; mpf : - 2362523135690328 14
; mpfd: - 2362523135690328 14 (-24978.8) class: Neg. norm. non-zero
; hwf : - 2362523135690328 14 (-24978.8) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001101 #b1000011001001011001111001000010001101100011001011000)))
(assert (= y (fp #b0 #b00011100110 #b0011010010011111011100111001101111001101011001011100)))
(assert (= r (fp #b1 #b10000001101 #b1000011001001011001111001000010001101100011001011000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
