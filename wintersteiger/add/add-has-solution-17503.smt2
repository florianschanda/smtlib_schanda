(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9985809452782901107781299288035370409488677978515625p327 {+ 4497208773054585 327 (5.46425e+098)}
; Y = 1.5194905233247213427461019819020293653011322021484375p952 {+ 2339577327267719 952 (5.78434e+286)}
; 1.9985809452782901107781299288035370409488677978515625p327 + 1.5194905233247213427461019819020293653011322021484375p952 == 1.5194905233247213427461019819020293653011322021484375p952
; [HW: 1.5194905233247213427461019819020293653011322021484375p952] 

; mpf : + 2339577327267719 952
; mpfd: + 2339577327267719 952 (5.78434e+286) class: Pos. norm. non-zero
; hwf : + 2339577327267719 952 (5.78434e+286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000110 #b1111111110100011000000000011011001100001000001111001)))
(assert (= y (fp #b0 #b11110110111 #b1000010011111101010101001011100001000010111110000111)))
(assert (= r (fp #b0 #b11110110111 #b1000010011111101010101001011100001000010111110000111)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
