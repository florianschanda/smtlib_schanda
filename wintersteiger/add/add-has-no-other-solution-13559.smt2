(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.081944422539514061298859814996831119060516357421875p476 {+ 369044870814046 476 (2.11097e+143)}
; Y = 1.3182636579312612123970893662772141396999359130859375p-598 {+ 1433332091264799 -598 (1.27076e-180)}
; 1.081944422539514061298859814996831119060516357421875p476 + 1.3182636579312612123970893662772141396999359130859375p-598 == 1.081944422539514061298859814996831119060516357421875p476
; [HW: 1.081944422539514061298859814996831119060516357421875p476] 

; mpf : + 369044870814046 476
; mpfd: + 369044870814046 476 (2.11097e+143) class: Pos. norm. non-zero
; hwf : + 369044870814046 476 (2.11097e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011011 #b0001010011111010010011110100011011100101100101011110)))
(assert (= y (fp #b0 #b00110101001 #b0101000101111001101110100010001001010001111100011111)))
(assert (= r (fp #b0 #b10111011011 #b0001010011111010010011110100011011100101100101011110)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
