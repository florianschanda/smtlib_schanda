(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9777476356116441280619255849160254001617431640625p760 {+ 4403383887402984 760 (1.19941e+229)}
; Y = 1.123679482343629576490684485179372131824493408203125p217 {+ 557002870596146 217 (2.36675e+065)}
; 1.9777476356116441280619255849160254001617431640625p760 + 1.123679482343629576490684485179372131824493408203125p217 == 1.9777476356116441280619255849160254001617431640625p760
; [HW: 1.9777476356116441280619255849160254001617431640625p760] 

; mpf : + 4403383887402984 760
; mpfd: + 4403383887402984 760 (1.19941e+229) class: Pos. norm. non-zero
; hwf : + 4403383887402984 760 (1.19941e+229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110111 #b1111101001001101101010110100011010110001011111101000)))
(assert (= y (fp #b0 #b10011011000 #b0001111110101001011101010110001111011010001000110010)))
(assert (= r (fp #b0 #b11011110111 #b1111101001001101101010110100011010110001011111101000)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
