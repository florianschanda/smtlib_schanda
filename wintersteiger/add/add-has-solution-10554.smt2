(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9188168355547807752969902139739133417606353759765625p882 {+ 4137983158226249 882 (6.18714e+265)}
; Y = -1.402099240416079251048131482093594968318939208984375p-468 {- 1810893989303814 -468 (-1.83967e-141)}
; 1.9188168355547807752969902139739133417606353759765625p882 + -1.402099240416079251048131482093594968318939208984375p-468 == 1.9188168355547805532523852889426052570343017578125p882
; [HW: 1.9188168355547805532523852889426052570343017578125p882] 

; mpf : + 4137983158226248 882
; mpfd: + 4137983158226248 882 (6.18714e+265) class: Pos. norm. non-zero
; hwf : + 4137983158226248 882 (6.18714e+265) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110001 #b1110101100110111100101001000001110111000110101001001)))
(assert (= y (fp #b1 #b01000101011 #b0110011011101111111110011100111101010101011000000110)))
(assert (= r (fp #b0 #b11101110001 #b1110101100110111100101001000001110111000110101001000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
