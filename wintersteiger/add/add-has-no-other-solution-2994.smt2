(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.649159045516494614957991871051490306854248046875p-277 {+ 2923552435492272 -277 (6.79131e-084)}
; Y = -1.8469260108051390734118513137218542397022247314453125p798 {- 3814215666672405 798 (-3.07883e+240)}
; 1.649159045516494614957991871051490306854248046875p-277 + -1.8469260108051390734118513137218542397022247314453125p798 == -1.84692601080513885136724638869054615497589111328125p798
; [HW: -1.84692601080513885136724638869054615497589111328125p798] 

; mpf : - 3814215666672404 798
; mpfd: - 3814215666672404 798 (-3.07883e+240) class: Neg. norm. non-zero
; hwf : - 3814215666672404 798 (-3.07883e+240) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101010 #b1010011000101111010010011000011001100101010110110000)))
(assert (= y (fp #b1 #b11100011101 #b1101100011010000001001001001111010001010001100010101)))
(assert (= r (fp #b1 #b11100011101 #b1101100011010000001001001001111010001010001100010100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
