(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.929039150309093120227998952032066881656646728515625p927 {+ 4184020371144634 927 (2.1885e+279)}
; Y = 1.8675519905791351238377728805062361061573028564453125p-629 {+ 3907106821496725 -629 (8.38312e-190)}
; 1.929039150309093120227998952032066881656646728515625p927 + 1.8675519905791351238377728805062361061573028564453125p-629 == 1.9290391503090933422726038770633749663829803466796875p927
; [HW: 1.9290391503090933422726038770633749663829803466796875p927] 

; mpf : + 4184020371144635 927
; mpfd: + 4184020371144635 927 (2.1885e+279) class: Pos. norm. non-zero
; hwf : + 4184020371144635 927 (2.1885e+279) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110011110 #b1110110111010101100000100111111101000111111110111010)))
(assert (= y (fp #b0 #b00110001010 #b1101111000010111111000110010001100011101111110010101)))
(assert (= r (fp #b0 #b11110011110 #b1110110111010101100000100111111101000111111110111011)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
