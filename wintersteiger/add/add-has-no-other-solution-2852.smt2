(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2323174027892773718662056126049719750881195068359375p-635 {- 1046264568633471 -635 (-8.64322e-192)}
; Y = -1.5048299906825242100438799752737395465373992919921875p-771 {- 2273552157923267 -771 (-1.2116e-232)}
; -1.2323174027892773718662056126049719750881195068359375p-635 + -1.5048299906825242100438799752737395465373992919921875p-771 == -1.2323174027892773718662056126049719750881195068359375p-635
; [HW: -1.2323174027892773718662056126049719750881195068359375p-635] 

; mpf : - 1046264568633471 -635
; mpfd: - 1046264568633471 -635 (-8.64322e-192) class: Neg. norm. non-zero
; hwf : - 1046264568633471 -635 (-8.64322e-192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000100 #b0011101101111001001001110011111101000101100001111111)))
(assert (= y (fp #b1 #b00011111100 #b1000000100111100100010011100110000000101011111000011)))
(assert (= r (fp #b1 #b00110000100 #b0011101101111001001001110011111101000101100001111111)))
(assert  (not (= (fp.add roundTowardPositive x y) r)))
(check-sat)
(exit)
