(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7009490870656820415973697890876792371273040771484375p630 {- 3156794047314695 630 (-7.57859e+189)}
; Y = 1.2834554738977044241465819141012616455554962158203125p807 {+ 1276569966621829 807 (1.09544e+243)}
; -1.7009490870656820415973697890876792371273040771484375p630 + 1.2834554738977044241465819141012616455554962158203125p807 == 1.28345547389770420210197698906995356082916259765625p807
; [HW: 1.28345547389770420210197698906995356082916259765625p807] 

; mpf : + 1276569966621828 807
; mpfd: + 1276569966621828 807 (1.09544e+243) class: Pos. norm. non-zero
; hwf : + 1276569966621828 807 (1.09544e+243) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001110101 #b1011001101110001011001100011110100011011101100000111)))
(assert (= y (fp #b0 #b11100100110 #b0100100010010000100010011011011001000011010010000101)))
(assert (= r (fp #b0 #b11100100110 #b0100100010010000100010011011011001000011010010000100)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
