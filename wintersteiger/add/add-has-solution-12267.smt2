(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1375321997414922225999589500133879482746124267578125p-124 {- 619389963507229 -124 (-5.34865e-038)}
; Y = -1.4736829539239544306639118076418526470661163330078125p554 {- 2133278374783677 554 (-8.69004e+166)}
; -1.1375321997414922225999589500133879482746124267578125p-124 + -1.4736829539239544306639118076418526470661163330078125p554 == -1.4736829539239544306639118076418526470661163330078125p554
; [HW: -1.4736829539239544306639118076418526470661163330078125p554] 

; mpf : - 2133278374783677 554
; mpfd: - 2133278374783677 554 (-8.69004e+166) class: Neg. norm. non-zero
; hwf : - 2133278374783677 554 (-8.69004e+166) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000011 #b0010001100110101010011110110110000001001011000011101)))
(assert (= y (fp #b1 #b11000101001 #b0111100101000011010010010011101111000110101010111101)))
(assert (= r (fp #b1 #b11000101001 #b0111100101000011010010010011101111000110101010111101)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
