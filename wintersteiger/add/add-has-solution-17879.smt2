(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4282939851331215574958832803531549870967864990234375p204 {- 1928864631850551 204 (-3.67229e+061)}
; Y = -1.042479784115375895936494998750276863574981689453125p-457 {- 191311939912786 -457 (-2.8013e-138)}
; -1.4282939851331215574958832803531549870967864990234375p204 + -1.042479784115375895936494998750276863574981689453125p-457 == -1.4282939851331215574958832803531549870967864990234375p204
; [HW: -1.4282939851331215574958832803531549870967864990234375p204] 

; mpf : - 1928864631850551 204
; mpfd: - 1928864631850551 204 (-3.67229e+061) class: Neg. norm. non-zero
; hwf : - 1928864631850551 204 (-3.67229e+061) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001011 #b0110110110100100101011001011001100111000011000110111)))
(assert (= y (fp #b1 #b01000110110 #b0000101011011111111101001000001110000100010001010010)))
(assert (= r (fp #b1 #b10011001011 #b0110110110100100101011001011001100111000011000110111)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
