(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8214530354138656065288159879855811595916748046875p1022 {- 3699495584192248 1022 (-8.18603e+307)}
; Y = -1.248187461234818496080833938322030007839202880859375p175 {- 1117736957935158 175 (-5.97763e+052)}
; -1.8214530354138656065288159879855811595916748046875p1022 + -1.248187461234818496080833938322030007839202880859375p175 == -1.8214530354138656065288159879855811595916748046875p1022
; [HW: -1.8214530354138656065288159879855811595916748046875p1022] 

; mpf : - 3699495584192248 1022
; mpfd: - 3699495584192248 1022 (-8.18603e+307) class: Neg. norm. non-zero
; hwf : - 3699495584192248 1022 (-8.18603e+307) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111101 #b1101001001001010101111110000001001001101011011111000)))
(assert (= y (fp #b1 #b10010101110 #b0011111110001001001101101010010101000111111000110110)))
(assert (= r (fp #b1 #b11111111101 #b1101001001001010101111110000001001001101011011111000)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
