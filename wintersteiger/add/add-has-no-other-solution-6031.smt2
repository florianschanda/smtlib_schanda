(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.04978357271769962011376264854334294795989990234375p-764 {+ 224205279540604 -764 (1.08189e-230)}
; Y = 1.915826999130338048615840307320468127727508544921875p338 {+ 4124518132019230 338 (1.07274e+102)}
; 1.04978357271769962011376264854334294795989990234375p-764 + 1.915826999130338048615840307320468127727508544921875p338 == 1.915826999130338048615840307320468127727508544921875p338
; [HW: 1.915826999130338048615840307320468127727508544921875p338] 

; mpf : + 4124518132019230 338
; mpfd: + 4124518132019230 338 (1.07274e+102) class: Pos. norm. non-zero
; hwf : + 4124518132019230 338 (1.07274e+102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000011 #b0000110010111110100111011100000010110011010101111100)))
(assert (= y (fp #b0 #b10101010001 #b1110101001110011101000110110001000001111000000011110)))
(assert (= r (fp #b0 #b10101010001 #b1110101001110011101000110110001000001111000000011110)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
