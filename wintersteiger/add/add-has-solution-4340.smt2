(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8671577660224640826669428861350752413272857666015625p-415 {+ 3905331391930201 -415 (2.20665e-125)}
; Y = 1.2144434647958173290049899151199497282505035400390625p970 {+ 965767508146481 970 (1.21192e+292)}
; 1.8671577660224640826669428861350752413272857666015625p-415 + 1.2144434647958173290049899151199497282505035400390625p970 == 1.2144434647958173290049899151199497282505035400390625p970
; [HW: 1.2144434647958173290049899151199497282505035400390625p970] 

; mpf : + 965767508146481 970
; mpfd: + 965767508146481 970 (1.21192e+292) class: Pos. norm. non-zero
; hwf : + 965767508146481 970 (1.21192e+292) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100000 #b1101110111111110000011010010010110001001111101011001)))
(assert (= y (fp #b0 #b11111001001 #b0011011011100101110001000101010000100011100100110001)))
(assert (= r (fp #b0 #b11111001001 #b0011011011100101110001000101010000100011100100110001)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
