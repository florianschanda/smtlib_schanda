(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6145960606465934450426402690936811268329620361328125p-49 {- 2767894589711373 -49 (-2.8681e-015)}
; Y = -1.379929907994565052575808294932357966899871826171875p-124 {- 1711052192071230 -124 (-6.4884e-038)}
; -1.6145960606465934450426402690936811268329620361328125p-49 + -1.379929907994565052575808294932357966899871826171875p-124 == -1.6145960606465934450426402690936811268329620361328125p-49
; [HW: -1.6145960606465934450426402690936811268329620361328125p-49] 

; mpf : - 2767894589711373 -49
; mpfd: - 2767894589711373 -49 (-2.8681e-015) class: Neg. norm. non-zero
; hwf : - 2767894589711373 -49 (-2.8681e-015) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001110 #b1001110101010110001010101101110010111010010000001101)))
(assert (= y (fp #b1 #b01110000011 #b0110000101000011000101100010000110011011111000111110)))
(assert (= r (fp #b1 #b01111001110 #b1001110101010110001010101101110010111010010000001101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
