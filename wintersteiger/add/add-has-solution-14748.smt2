(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2767666607633854081171875805011950433254241943359375p786 {- 1246446230282559 786 (-5.19623e+236)}
; Y = -1.716598684200700830615460290573537349700927734375p-607 {- 3227273567140464 -607 (-3.23193e-183)}
; -1.2767666607633854081171875805011950433254241943359375p786 + -1.716598684200700830615460290573537349700927734375p-607 == -1.2767666607633854081171875805011950433254241943359375p786
; [HW: -1.2767666607633854081171875805011950433254241943359375p786] 

; mpf : - 1246446230282559 786
; mpfd: - 1246446230282559 786 (-5.19623e+236) class: Neg. norm. non-zero
; hwf : - 1246446230282559 786 (-5.19623e+236) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010001 #b0100011011011010001011100000110010011010000100111111)))
(assert (= y (fp #b1 #b00110100000 #b1011011101110011000000101110100011111111101001110000)))
(assert (= r (fp #b1 #b11100010001 #b0100011011011010001011100000110010011010000100111111)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
