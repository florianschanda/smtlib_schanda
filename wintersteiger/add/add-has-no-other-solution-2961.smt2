(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4446972597442588881477831819211132824420928955078125p137 {+ 2002738413276925 137 (2.51702e+041)}
; Y = -1.647381560044478998605654851417057216167449951171875p879 {- 2915547352582846 879 (-6.63988e+264)}
; 1.4446972597442588881477831819211132824420928955078125p137 + -1.647381560044478998605654851417057216167449951171875p879 == -1.6473815600444787765610499263857491314411163330078125p879
; [HW: -1.6473815600444787765610499263857491314411163330078125p879] 

; mpf : - 2915547352582845 879
; mpfd: - 2915547352582845 879 (-6.63988e+264) class: Neg. norm. non-zero
; hwf : - 2915547352582845 879 (-6.63988e+264) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001000 #b0111000111010111101011011111101100111000111011111101)))
(assert (= y (fp #b1 #b11101101110 #b1010010110111010110011000100010001101100101010111110)))
(assert (= r (fp #b1 #b11101101110 #b1010010110111010110011000100010001101100101010111101)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
