(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6153886908756345253124209193629212677478790283203125p-191 {- 2771464278915525 -191 (-5.14693e-058)}
; Y = 1.14997255995793512539648872916586697101593017578125p720 {+ 675416365142356 720 (6.34285e+216)}
; -1.6153886908756345253124209193629212677478790283203125p-191 + 1.14997255995793512539648872916586697101593017578125p720 == 1.14997255995793512539648872916586697101593017578125p720
; [HW: 1.14997255995793512539648872916586697101593017578125p720] 

; mpf : + 675416365142356 720
; mpfd: + 675416365142356 720 (6.34285e+216) class: Pos. norm. non-zero
; hwf : + 675416365142356 720 (6.34285e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101000000 #b1001110110001010000111001111110110100011100111000101)))
(assert (= y (fp #b0 #b11011001111 #b0010011001100100100110100000100001010001000101010100)))
(assert (= r (fp #b0 #b11011001111 #b0010011001100100100110100000100001010001000101010100)))
(assert (= (fp.add roundTowardPositive x y) r))
(check-sat)
(exit)
