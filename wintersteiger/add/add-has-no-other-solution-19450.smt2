(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.35314960355011493220445117913186550140380859375p-907 {- 1590444422954336 -907 (-1.25066e-273)}
; Y = 1.788904788819333457894344974192790687084197998046875p-444 {+ 3552911312957550 -444 (3.93794e-134)}
; -1.35314960355011493220445117913186550140380859375p-907 + 1.788904788819333457894344974192790687084197998046875p-444 == 1.788904788819333457894344974192790687084197998046875p-444
; [HW: 1.788904788819333457894344974192790687084197998046875p-444] 

; mpf : + 3552911312957550 -444
; mpfd: + 3552911312957550 -444 (3.93794e-134) class: Pos. norm. non-zero
; hwf : + 3552911312957550 -444 (3.93794e-134) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110100 #b0101101001101000000000110010110111010111110101100000)))
(assert (= y (fp #b0 #b01001000011 #b1100100111110101101010100000101110100011000001101110)))
(assert (= r (fp #b0 #b01001000011 #b1100100111110101101010100000101110100011000001101110)))
(assert  (not (= (fp.add roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
