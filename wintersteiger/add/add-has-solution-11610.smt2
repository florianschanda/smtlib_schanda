(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9399245349838099006234415355720557272434234619140625p-43 {+ 4233043785509473 -43 (2.20544e-013)}
; Y = -1.0884552135743950085355891133076511323451995849609375p-93 {- 398366866892623 -93 (-1.09906e-028)}
; 1.9399245349838099006234415355720557272434234619140625p-43 + -1.0884552135743950085355891133076511323451995849609375p-93 == 1.9399245349838090124450218354468233883380889892578125p-43
; [HW: 1.9399245349838090124450218354468233883380889892578125p-43] 

; mpf : + 4233043785509469 -43
; mpfd: + 4233043785509469 -43 (2.20544e-013) class: Pos. norm. non-zero
; hwf : + 4233043785509469 -43 (2.20544e-013) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010100 #b1111000010011110111001001111001001110110101001100001)))
(assert (= y (fp #b1 #b01110100010 #b0001011010100101000000000011100101110110011101001111)))
(assert (= r (fp #b0 #b01111010100 #b1111000010011110111001001111001001110110101001011101)))
(assert (= (fp.add roundNearestTiesToEven x y) r))
(check-sat)
(exit)
