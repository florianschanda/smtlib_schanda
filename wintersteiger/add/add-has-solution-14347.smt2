(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4903804561071287704265841966844163835048675537109375p-640 {+ 2208477239393839 -640 (3.26663e-193)}
; Y = -1.758725349749199917681607985286973416805267333984375p689 {- 3416995202407046 689 (-4.51716e+207)}
; 1.4903804561071287704265841966844163835048675537109375p-640 + -1.758725349749199917681607985286973416805267333984375p689 == -1.7587253497491996956370030602556653320789337158203125p689
; [HW: -1.7587253497491996956370030602556653320789337158203125p689] 

; mpf : - 3416995202407045 689
; mpfd: - 3416995202407045 689 (-4.51716e+207) class: Neg. norm. non-zero
; hwf : - 3416995202407045 689 (-4.51716e+207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111111 #b0111110110001001100100101101010110010011111000101111)))
(assert (= y (fp #b1 #b11010110000 #b1100001000111011110100110001001111010001101010000110)))
(assert (= r (fp #b1 #b11010110000 #b1100001000111011110100110001001111010001101010000101)))
(assert (= (fp.add roundTowardZero x y) r))
(check-sat)
(exit)
