(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2696651593313295069975765727576799690723419189453125p-848 {+ 1214463911079381 -848 (6.76477e-256)}
; Y = 1.335622576242805781276956622605212032794952392578125p-668 {+ 1511509709304226 -668 (1.09055e-201)}
; 1.2696651593313295069975765727576799690723419189453125p-848 + 1.335622576242805781276956622605212032794952392578125p-668 == 1.335622576242805781276956622605212032794952392578125p-668
; [HW: 1.335622576242805781276956622605212032794952392578125p-668] 

; mpf : + 1511509709304226 -668
; mpfd: + 1511509709304226 -668 (1.09055e-201) class: Pos. norm. non-zero
; hwf : + 1511509709304226 -668 (1.09055e-201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010101111 #b0100010100001000110001101010000000110010110111010101)))
(assert (= y (fp #b0 #b00101100011 #b0101010111101011010111000111010011000011000110100010)))
(assert (= r (fp #b0 #b00101100011 #b0101010111101011010111000111010011000011000110100010)))
(assert  (not (= (fp.add roundTowardZero x y) r)))
(check-sat)
(exit)
