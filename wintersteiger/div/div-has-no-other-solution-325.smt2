(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9636597637630599511027185144484974443912506103515625p-192 {- 4339937752995257 -192 (-3.12829e-058)}
; Y = 0.57398238909739607294113739044405519962310791015625p-1022 {+ 2584986873656260 -1023 (1.27715e-308)}
; -1.9636597637630599511027185144484974443912506103515625p-192 / 0.57398238909739607294113739044405519962310791015625p-1022 == -1.7105575023398993383949573399149812757968902587890625p831
; [HW: -1.7105575023398993383949573399149812757968902587890625p831] 

; mpf : - 3200066502763281 831
; mpfd: - 3200066502763281 831 (-2.44942e+250) class: Neg. norm. non-zero
; hwf : - 3200066502763281 831 (-2.44942e+250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111111 #b1111011010110010011010000000000111010101010110111001)))
(assert (= y (fp #b0 #b00000000000 #b1001001011110000100000101000010110100111001111000100)))
(assert (= r (fp #b1 #b11100111110 #b1011010111100111000110001011001001111010001100010001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
