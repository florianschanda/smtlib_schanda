(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.92177889037830151863772698561660945415496826171875p143 {- 4151323067225708 143 (-2.14286e+043)}
; Y = -1.3778720153027677053358956982265226542949676513671875p374 {- 1701784267311283 374 (-5.30185e+112)}
; -1.92177889037830151863772698561660945415496826171875p143 / -1.3778720153027677053358956982265226542949676513671875p374 == 1.394744119217790956355429443647153675556182861328125p-231
; [HW: 1.394744119217790956355429443647153675556182861328125p-231] 

; mpf : + 1777769468215938 -231
; mpfd: + 1777769468215938 -231 (4.04171e-070) class: Pos. norm. non-zero
; hwf : + 1777769468215938 -231 (4.04171e-070) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001110 #b1110101111111001101100111000110001010001011001101100)))
(assert (= y (fp #b1 #b10101110101 #b0110000010111100001110000110101111001100100010110011)))
(assert (= r (fp #b0 #b01100011000 #b0110010100001101111100110101101001010100001010000010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
