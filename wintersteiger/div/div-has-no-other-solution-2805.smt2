(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7461437428384456449492745377938263118267059326171875p533 {+ 3360332682212051 533 (4.90984e+160)}
; Y = -1.0812995131201617038385620617191307246685028076171875p390 {- 366140456993363 390 (-2.72674e+117)}
; 1.7461437428384456449492745377938263118267059326171875p533 / -1.0812995131201617038385620617191307246685028076171875p390 == -1.614856680920748299712386142346076667308807373046875p143
; [HW: -1.614856680920748299712386142346076667308807373046875p143] 

; mpf : - 2769068319080942 143
; mpfd: - 2769068319080942 143 (-1.80063e+043) class: Neg. norm. non-zero
; hwf : - 2769068319080942 143 (-1.80063e+043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010100 #b1011111100000011010001101011110110011011001011010011)))
(assert (= y (fp #b1 #b10110000101 #b0001010011010000000010110111111000001000001001010011)))
(assert (= r (fp #b1 #b10010001110 #b1001110101100111001111110101100001001000000111101110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
