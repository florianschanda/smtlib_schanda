(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.15487010678252399742405032156966626644134521484375p245 {+ 697472955196604 245 (6.52953e+073)}
; Y = 1.5732761157247059369268527007079683244228363037109375p632 {+ 2581806101158191 632 (2.8039e+190)}
; 1.15487010678252399742405032156966626644134521484375p245 / 1.5732761157247059369268527007079683244228363037109375p632 == 1.4681086113743619936400364167639054358005523681640625p-388
; [HW: 1.4681086113743619936400364167639054358005523681640625p-388] 

; mpf : + 2108173767754497 -388
; mpfd: + 2108173767754497 -388 (2.32873e-117) class: Pos. norm. non-zero
; hwf : + 2108173767754497 -388 (2.32873e-117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110100 #b0010011110100101100100010011101111000010010010111100)))
(assert (= y (fp #b0 #b11001110111 #b1001001011000010001110010011100010011101100100101111)))
(assert (= r (fp #b0 #b01001111011 #b0111011111010101111101110100100011010100001100000001)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
