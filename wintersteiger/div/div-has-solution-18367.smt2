(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1004058977614719072590787618537433445453643798828125p-4 {+ 452187963744365 -4 (0.0687754)}
; Y = 1.089026312389084427678653810289688408374786376953125p-609 {+ 400938867301650 -609 (5.12591e-184)}
; 1.1004058977614719072590787618537433445453643798828125p-4 / 1.089026312389084427678653810289688408374786376953125p-609 == 1.0104493208684950378284383987192995846271514892578125p605
; [HW: 1.0104493208684950378284383987192995846271514892578125p605] 

; mpf : + 47059557569629 605
; mpfd: + 47059557569629 605 (1.34172e+182) class: Pos. norm. non-zero
; hwf : + 47059557569629 605 (1.34172e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111011 #b0001100110110100001100110110111100110110000001101101)))
(assert (= y (fp #b0 #b00110011110 #b0001011011001010011011011010110000110001110100010010)))
(assert (= r (fp #b0 #b11001011100 #b0000001010101100110011101000001101100101010001011101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
