(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5606404655540886405873379771946929395198822021484375p355 {+ 2524900191758215 355 (1.14538e+107)}
; Y = 1.83800374781758169007161995978094637393951416015625p-182 {+ 3774033366406340 -182 (2.99838e-055)}
; 1.5606404655540886405873379771946929395198822021484375p355 / 1.83800374781758169007161995978094637393951416015625p-182 == 1.698190732643684697222852264530956745147705078125p536
; [HW: 1.698190732643684697222852264530956745147705078125p536] 

; mpf : + 3144371523367632 536
; mpfd: + 3144371523367632 536 (3.82001e+161) class: Pos. norm. non-zero
; hwf : + 3144371523367632 536 (3.82001e+161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100010 #b1000111110000110001000100011000001011110011110000111)))
(assert (= y (fp #b0 #b01101001001 #b1101011010000111011010011110001011001101010011000100)))
(assert (= r (fp #b0 #b11000010111 #b1011001010111100101000001011101100010011001011010000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
