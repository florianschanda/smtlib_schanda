(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.76015506303202595717039002920500934123992919921875p-518 {+ 3423434058614828 -518 (2.05122e-156)}
; Y = -1.7270837661052613754009144031442701816558837890625p544 {- 3274494178098792 544 (-9.9456e+163)}
; 1.76015506303202595717039002920500934123992919921875p-518 / -1.7270837661052613754009144031442701816558837890625p544 == -0.000000000000926814180957080679945647716522216796875p-1022
; [HW: -0.000000000000926814180957080679945647716522216796875p-1022] 

; mpf : - 4174 -1023
; mpfd: - 4174 -1023 (-2.06223e-320) class: Neg. denorm.
; hwf : - 4174 -1023 (-2.06223e-320) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111001 #b1100001010011001100001011010111110011100100000101100)))
(assert (= y (fp #b1 #b11000011111 #b1011101000100010001010010110010011011111111001101000)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000001000001001110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
