(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1470867389268877278851732626208104193210601806640625p387 {+ 662419782622273 387 (3.6158e+116)}
; Y = -1.1567850552363700966651549606467597186565399169921875p76 {- 706097116339779 76 (-8.74042e+022)}
; 1.1470867389268877278851732626208104193210601806640625p387 / -1.1567850552363700966651549606467597186565399169921875p76 == -1.9832322932154398120729865695466287434101104736328125p310
; [HW: -1.9832322932154398120729865695466287434101104736328125p310] 

; mpf : - 4428084589343693 310
; mpfd: - 4428084589343693 310 (-4.13687e+093) class: Neg. norm. non-zero
; hwf : - 4428084589343693 310 (-4.13687e+093) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000010 #b0010010110100111011110011111110101011101110001000001)))
(assert (= y (fp #b1 #b10001001011 #b0010100000100011000100001011110010111101111001000011)))
(assert (= r (fp #b1 #b10100110101 #b1111101110110101000111001000111110111011001111001101)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
