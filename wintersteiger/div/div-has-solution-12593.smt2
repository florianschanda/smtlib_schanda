(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6086666115807162213968695141375064849853515625p-592 {+ 2741190725107776 -592 (9.9245e-179)}
; Y = 1.667897883658841617915413735317997634410858154296875p-333 {+ 3007944659967502 -333 (9.53193e-101)}
; 1.6086666115807162213968695141375064849853515625p-592 / 1.667897883658841617915413735317997634410858154296875p-333 == 1.9289749418613200138139518458046950399875640869140625p-260
; [HW: 1.9289749418613200138139518458046950399875640869140625p-260] 

; mpf : + 4183731202003169 -260
; mpfd: + 4183731202003169 -260 (1.04118e-078) class: Pos. norm. non-zero
; hwf : + 4183731202003169 -260 (1.04118e-078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101111 #b1001101111010001100100110011011011101000000001000000)))
(assert (= y (fp #b0 #b01010110010 #b1010101011111011010110110000111101100001111000001110)))
(assert (= r (fp #b0 #b01011111011 #b1110110111010001010011010100001000011001000011100001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
