(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.40480397405362822382812737487256526947021484375p248 {- 1823075026706016 248 (-6.35411e+074)}
; Y = -1.1741566907658051999163717482588253915309906005859375p2 {- 784332007636959 2 (-4.69663)}
; -1.40480397405362822382812737487256526947021484375p248 / -1.1741566907658051999163717482588253915309906005859375p2 == 1.196436544714820637835828165407292544841766357421875p246
; [HW: 1.196436544714820637835828165407292544841766357421875p246] 

; mpf : + 884671549579614 246
; mpfd: + 884671549579614 246 (1.35291e+074) class: Pos. norm. non-zero
; hwf : + 884671549579614 246 (1.35291e+074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110111 #b0110011110100001001110111011010111011001111001100000)))
(assert (= y (fp #b1 #b10000000001 #b0010110010010101100010000110101100110111111111011111)))
(assert (= r (fp #b0 #b10011110101 #b0011001001001001101010100101011101001010000101011110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
