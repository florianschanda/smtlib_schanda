(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.16600131214601976381572967511601746082305908203125p-609 {+ 747603447523828 -609 (5.48822e-184)}
; Y = 1.4364109420394959304445592351839877665042877197265625p-628 {+ 1965420155949481 -628 (1.28956e-189)}
; 1.16600131214601976381572967511601746082305908203125p-609 / 1.4364109420394959304445592351839877665042877197265625p-628 == 1.623492662191039048735774485976435244083404541015625p18
; [HW: 1.623492662191039048735774485976435244083404541015625p18] 

; mpf : + 2807961321111802 18
; mpfd: + 2807961321111802 18 (425589) class: Pos. norm. non-zero
; hwf : + 2807961321111802 18 (425589) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011110 #b0010101001111111000011111101111011000010100111110100)))
(assert (= y (fp #b0 #b00110001011 #b0110111110111000101000001010001110101101000110101001)))
(assert (= r (fp #b0 #b10000010001 #b1001111110011101001101110001000101101000000011111010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
