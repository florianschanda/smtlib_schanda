(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.442300073461859621914982199086807668209075927734375p-334 {- 1991942446028774 -334 (-4.12133e-101)}
; Y = 1.5641128011997460500737133770599029958248138427734375p-159 {+ 2540538201278103 -159 (2.14042e-048)}
; -1.442300073461859621914982199086807668209075927734375p-334 / 1.5641128011997460500737133770599029958248138427734375p-159 == -1.844240482343152631727889456669799983501434326171875p-176
; [HW: -1.844240482343152631727889456669799983501434326171875p-176] 

; mpf : - 3802121121691710 -176
; mpfd: - 3802121121691710 -176 (-1.92548e-053) class: Neg. norm. non-zero
; hwf : - 3802121121691710 -176 (-1.92548e-053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010110001 #b0111000100111010100100111101111010001001011111100110)))
(assert (= y (fp #b0 #b01101100000 #b1001000001101001101100100101000001101000011010010111)))
(assert (= r (fp #b1 #b01101001111 #b1101100000100000001001001110110110011111100000111110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
