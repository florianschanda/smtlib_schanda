(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.386920541229816894457371745374985039234161376953125p871 {+ 1742535205304594 871 (2.18362e+262)}
; Y = -1.58981346915576882139475856092758476734161376953125p1010 {- 2656283719908020 1010 (-1.74438e+304)}
; 1.386920541229816894457371745374985039234161376953125p871 / -1.58981346915576882139475856092758476734161376953125p1010 == -1.7447588262870947772853469359688460826873779296875p-140
; [HW: -1.7447588262870947772853469359688460826873779296875p-140] 

; mpf : - 3354095572547448 -140
; mpfd: - 3354095572547448 -140 (-1.2518e-042) class: Neg. norm. non-zero
; hwf : - 3354095572547448 -140 (-1.2518e-042) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100110 #b0110001100001101001110010111111010111011100100010010)))
(assert (= y (fp #b1 #b11111110001 #b1001011011111110000000111111100011000011101010110100)))
(assert (= r (fp #b1 #b01101110011 #b1011111010101000100000111011001001001111011101111000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
