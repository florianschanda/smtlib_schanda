(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.670824578886093814134028434637002646923065185546875p-82 {- 3021125323502382 -82 (-3.45518e-025)}
; Y = -1.34588435292973418455630962853319942951202392578125p-772 {- 1557724642967636 -772 (-5.41815e-233)}
; -1.670824578886093814134028434637002646923065185546875p-82 / -1.34588435292973418455630962853319942951202392578125p-772 == 1.241432501424826195801642825244925916194915771484375p690
; [HW: 1.241432501424826195801642825244925916194915771484375p690] 

; mpf : + 1087315323451974 690
; mpfd: + 1087315323451974 690 (6.37705e+207) class: Pos. norm. non-zero
; hwf : + 1087315323451974 690 (6.37705e+207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101101 #b1010101110111011001010001101101110101011001100101110)))
(assert (= y (fp #b1 #b00011111011 #b0101100010001011111000001000000000001000000001010100)))
(assert (= r (fp #b0 #b11010110001 #b0011110111001110100001010011100111001111101001000110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
