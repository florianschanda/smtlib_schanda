(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7491505467282346675261806012713350355625152587890625p861 {+ 3373874123089681 861 (2.68939e+259)}
; Y = -1.9868339705614779244768897115136496722698211669921875p537 {- 4444305102097219 537 (-8.93859e+161)}
; 1.7491505467282346675261806012713350355625152587890625p861 / -1.9868339705614779244768897115136496722698211669921875p537 == -1.76074153416445344788598958984948694705963134765625p323
; [HW: -1.76074153416445344788598958984948694705963134765625p323] 

; mpf : - 3426075289788292 323
; mpfd: - 3426075289788292 323 (-3.00874e+097) class: Neg. norm. non-zero
; hwf : - 3426075289788292 323 (-3.00874e+097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011100 #b1011111111001000010101001000100111111010011100010001)))
(assert (= y (fp #b1 #b11000011000 #b1111110010100001001001101010111000100100101101000011)))
(assert (= r (fp #b1 #b10101000010 #b1100001010111111111101010000100111110001111110000100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
