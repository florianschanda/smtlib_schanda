(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6977000916210533976169472225592471659183502197265625p-426 {+ 3142161872640937 -426 (9.79677e-129)}
; Y = 1.95149864409447015844989437027834355831146240234375p219 {+ 4285168938987388 219 (1.64413e+066)}
; 1.6977000916210533976169472225592471659183502197265625p-426 / 1.95149864409447015844989437027834355831146240234375p219 == 1.7398936932480586481375439689145423471927642822265625p-646
; [HW: 1.7398936932480586481375439689145423471927642822265625p-646] 

; mpf : + 3332184961205737 -646
; mpfd: + 3332184961205737 -646 (5.95862e-195) class: Pos. norm. non-zero
; hwf : + 3332184961205737 -646 (5.95862e-195) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010101 #b1011001010011100011110010010001111101101101110101001)))
(assert (= y (fp #b0 #b10011011010 #b1111001110010101011010100100011010010010111101111100)))
(assert (= r (fp #b0 #b00101111001 #b1011110101101001101011000100111100000100010111101001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
