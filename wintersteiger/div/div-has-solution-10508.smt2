(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.937505799171323150886792063829489052295684814453125p995 {+ 4222150767805650 995 (6.48767e+299)}
; Y = 1.3442405691715768600857927594915963709354400634765625p581 {+ 1550321699046921 581 (1.06391e+175)}
; 1.937505799171323150886792063829489052295684814453125p995 / 1.3442405691715768600857927594915963709354400634765625p581 == 1.4413385844807240498965938968467526137828826904296875p414
; [HW: 1.4413385844807240498965938968467526137828826904296875p414] 

; mpf : + 1987612284611611 414
; mpfd: + 1987612284611611 414 (6.09796e+124) class: Pos. norm. non-zero
; hwf : + 1987612284611611 414 (6.09796e+124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100010 #b1111000000000000011000010100101101000000010011010010)))
(assert (= y (fp #b0 #b11001000100 #b0101100000100000001001100110001010001100011000001001)))
(assert (= r (fp #b0 #b10110011101 #b0111000011111011100100001100001011001110110000011011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
