(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5143567598898612924784856659243814647197723388671875p347 {- 2316456912175475 347 (-4.34147e+104)}
; Y = -1.8495357308012707608924074520473368465900421142578125p549 {- 3825968800674525 549 (-3.40824e+165)}
; -1.5143567598898612924784856659243814647197723388671875p347 / -1.8495357308012707608924074520473368465900421142578125p549 == 1.637553397504571961462715989910066127777099609375p-203
; [HW: 1.637553397504571961462715989910066127777099609375p-203] 

; mpf : + 2871285243430384 -203
; mpfd: + 2871285243430384 -203 (1.27381e-061) class: Pos. norm. non-zero
; hwf : + 2871285243430384 -203 (1.27381e-061) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101011010 #b1000001110101100111000100111011000110100000101110011)))
(assert (= y (fp #b1 #b11000100100 #b1101100101111011001011000111010010010011001011011101)))
(assert (= r (fp #b0 #b01100110100 #b1010001100110110101100110000111110111100010111110000)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
