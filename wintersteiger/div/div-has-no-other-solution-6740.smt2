(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3170591237402737849748746157274581491947174072265625p-605 {- 1427907351531113 -605 (-9.91877e-183)}
; Y = 1.0952878279915119197340800383244641125202178955078125p-618 {+ 429138226635517 -618 (1.00691e-186)}
; -1.3170591237402737849748746157274581491947174072265625p-605 / 1.0952878279915119197340800383244641125202178955078125p-618 == -1.2024776411104978190991232622764073312282562255859375p13
; [HW: -1.2024776411104978190991232622764073312282562255859375p13] 

; mpf : - 911878229056095 13
; mpfd: - 911878229056095 13 (-9850.7) class: Neg. norm. non-zero
; hwf : - 911878229056095 13 (-9850.7) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110100010 #b0101000100101010110010010110011101011100111001101001)))
(assert (= y (fp #b0 #b00110010101 #b0001100001100100110010000111100011101110001011111101)))
(assert (= r (fp #b1 #b10000001100 #b0011001111010101100100110001111010111101101001011111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
