(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.984617537244297569287709848140366375446319580078125p784 {+ 4434323173835874 784 (2.01927e+236)}
; Y = -1.3561287900605716316704274504445493221282958984375p401 {- 1603861486212696 401 (-7.00373e+120)}
; 1.984617537244297569287709848140366375446319580078125p784 / -1.3561287900605716316704274504445493221282958984375p401 == -1.463443259806949559020949891419149935245513916015625p383
; [HW: -1.463443259806949559020949891419149935245513916015625p383] 

; mpf : - 2087162892173946 383
; mpfd: - 2087162892173946 383 (-2.88313e+115) class: Neg. norm. non-zero
; hwf : - 2087162892173946 383 (-2.88313e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001111 #b1111110000001111111001010001100110001000010001100010)))
(assert (= y (fp #b1 #b10110010000 #b0101101100101011010000011010001001111001011001011000)))
(assert (= r (fp #b1 #b10101111110 #b0111011010100100001101111010110001101100001001111010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
