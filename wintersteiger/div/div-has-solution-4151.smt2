(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6515120472740301149627839549793861806392669677734375p-846 {- 2934149413330711 -846 (-3.5197e-255)}
; Y = -1.647777774502667380573939226451329886913299560546875p-372 {- 2917331743869102 -372 (-1.71293e-112)}
; -1.6515120472740301149627839549793861806392669677734375p-846 / -1.647777774502667380573939226451329886913299560546875p-372 == 1.002266247809107557742436256376095116138458251953125p-474
; [HW: 1.002266247809107557742436256376095116138458251953125p-474] 

; mpf : + 10206272788626 -474
; mpfd: + 10206272788626 -474 (2.05478e-143) class: Pos. norm. non-zero
; hwf : + 10206272788626 -474 (2.05478e-143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110001 #b1010011011001001011111100101011111111101111100010111)))
(assert (= y (fp #b1 #b01010001011 #b1010010111010100110000111010010010010000100010101110)))
(assert (= r (fp #b0 #b01000100101 #b0000000010010100100001010101010000111001100010010010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
