(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.046209941838361690003011972294189035892486572265625p-718 {+ 208111076844058 -718 (7.58721e-217)}
; Y = -1.324327634975233980441089443047530949115753173828125p-44 {- 1460641816020418 -44 (-7.52793e-014)}
; 1.046209941838361690003011972294189035892486572265625p-718 / -1.324327634975233980441089443047530949115753173828125p-44 == -1.579986574633287954583238388295285403728485107421875p-675
; [HW: -1.579986574633287954583238388295285403728485107421875p-675] 

; mpf : - 2612027321398366 -675
; mpfd: - 2612027321398366 -675 (-1.00787e-203) class: Neg. norm. non-zero
; hwf : - 2612027321398366 -675 (-1.00787e-203) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110001 #b0000101111010100011010100010110011110010001000011010)))
(assert (= y (fp #b1 #b01111010011 #b0101001100000111001000101100100101101000010111000010)))
(assert (= r (fp #b1 #b00101011100 #b1001010001111010000000000000101000101011010001011110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
