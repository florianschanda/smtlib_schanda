(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1616956284918817932094725620117969810962677001953125p-342 {- 728212372223477 -342 (-1.29668e-103)}
; Y = -1.6311431984652939863877918469370342791080474853515625p-625 {- 2842416273425721 -625 (-1.17151e-188)}
; -1.1616956284918817932094725620117969810962677001953125p-342 / -1.6311431984652939863877918469370342791080474853515625p-625 == 1.424394411949723604493556194938719272613525390625p282
; [HW: 1.424394411949723604493556194938719272613525390625p282] 

; mpf : + 1911302515514896 282
; mpfd: + 1911302515514896 282 (1.10685e+085) class: Pos. norm. non-zero
; hwf : + 1911302515514896 282 (1.10685e+085) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101001 #b0010100101100100111000100111110001000111010111110101)))
(assert (= y (fp #b1 #b00110001110 #b1010000110010010100110011100010010000000010100111001)))
(assert (= r (fp #b0 #b10100011001 #b0110110010100101000111001011011111101101111000010000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
