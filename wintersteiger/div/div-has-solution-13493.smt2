(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1534033450873166781747158893267624080181121826171875p-19 {- 690867247772627 -19 (-2.19994e-006)}
; Y = -1.672735332631090532373718815506435930728912353515625p465 {- 3029730593356346 465 (-1.59358e+140)}
; -1.1534033450873166781747158893267624080181121826171875p-19 / -1.672735332631090532373718815506435930728912353515625p465 == 1.379062572048499024646162069984711706638336181640625p-485
; [HW: 1.379062572048499024646162069984711706638336181640625p-485] 

; mpf : + 1707146058227722 -485
; mpfd: + 1707146058227722 -485 (1.3805e-146) class: Pos. norm. non-zero
; hwf : + 1707146058227722 -485 (1.3805e-146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111101100 #b0010011101000101011100010000111000111111001111010011)))
(assert (= y (fp #b1 #b10111010000 #b1010110000111000011000011111110010000011101000111010)))
(assert (= r (fp #b0 #b01000011010 #b0110000100001010001111101010011000010110000000001010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
