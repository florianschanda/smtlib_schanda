(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8562548361141129049656228744424879550933837890625p-70 {+ 3856228960857704 -70 (1.57231e-021)}
; Y = 1.890133011267781437680923772859387099742889404296875p480 {+ 4008802697855758 480 (5.90052e+144)}
; 1.8562548361141129049656228744424879550933837890625p-70 / 1.890133011267781437680923772859387099742889404296875p480 == 1.9641526020108550643072931052302010357379913330078125p-551
; [HW: 1.9641526020108550643072931052302010357379913330078125p-551] 

; mpf : + 4342157299144381 -551
; mpfd: + 4342157299144381 -551 (2.6647e-166) class: Pos. norm. non-zero
; hwf : + 4342157299144381 -551 (2.6647e-166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111001 #b1101101100110011100001000101011000100110111001101000)))
(assert (= y (fp #b0 #b10111011111 #b1110001111011111110000011100110001111100001100001110)))
(assert (= r (fp #b0 #b00111011000 #b1111011011010010101101000111010111111101011010111101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
