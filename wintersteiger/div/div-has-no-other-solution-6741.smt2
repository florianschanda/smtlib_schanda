(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.002780579069742383779839656199328601360321044921875p871 {+ 12522614862366 871 (1.57882e+262)}
; Y = -1.6261581657843551251829694592743180692195892333984375p-304 {- 2819965682101415 -304 (-4.98935e-092)}
; 1.002780579069742383779839656199328601360321044921875p871 / -1.6261581657843551251829694592743180692195892333984375p-304 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100110 #b0000000010110110001110100110000000101011001000011110)))
(assert (= y (fp #b1 #b01011001111 #b1010000001001011111001101100110000101010110010100111)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
