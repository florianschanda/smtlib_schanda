(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.264440379836661687562582301325164735317230224609375p522 {+ 1190933596094102 522 (1.73603e+157)}
; Y = -1.421677135236128375339603735483251512050628662109375p23 {- 1899064989120086 23 (-1.19259e+007)}
; 1.264440379836661687562582301325164735317230224609375p522 / -1.421677135236128375339603735483251512050628662109375p23 == -1.7788010350558940420029330198303796350955963134765625p498
; [HW: -1.7788010350558940420029330198303796350955963134765625p498] 

; mpf : - 3507408051273481 498
; mpfd: - 3507408051273481 498 (-1.45568e+150) class: Neg. norm. non-zero
; hwf : - 3507408051273481 498 (-1.45568e+150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001001 #b0100001110110010010111010101111100100011111010010110)))
(assert (= y (fp #b1 #b10000010110 #b0110101111110011000010000110000101001111011001010110)))
(assert (= r (fp #b1 #b10111110001 #b1100011101011111100000010010111110100111111100001001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
