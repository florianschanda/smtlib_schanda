(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.60559570766686210419038616237230598926544189453125p-562 {+ 2727360603385652 -562 (1.0636e-169)}
; Y = 1.1240325712147833936427332446328364312648773193359375p-161 {+ 558593041504703 -161 (3.84547e-049)}
; 1.60559570766686210419038616237230598926544189453125p-562 / 1.1240325712147833936427332446328364312648773193359375p-161 == 1.4284245392743695202142362177255563437938690185546875p-401
; [HW: 1.4284245392743695202142362177255563437938690185546875p-401] 

; mpf : + 1929452595432427 -401
; mpfd: + 1929452595432427 -401 (2.76585e-121) class: Pos. norm. non-zero
; hwf : + 1929452595432427 -401 (2.76585e-121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111001101 #b1001101100001000010100011111111100000110111100110100)))
(assert (= y (fp #b0 #b01101011110 #b0001111111000000100110010011110100000001100110111111)))
(assert (= r (fp #b0 #b01001101110 #b0110110110101101001110110000100011111100101111101011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
