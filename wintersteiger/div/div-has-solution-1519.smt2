(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9241674771212213812532354495488107204437255859375p557 {+ 4162080305591064 557 (9.07717e+167)}
; Y = -1.093256625469978704501272659399546682834625244140625p-281 {- 419990503716426 -281 (-2.8138e-085)}
; 1.9241674771212213812532354495488107204437255859375p557 / -1.093256625469978704501272659399546682834625244140625p-281 == -1.7600327611040487152394007352995686233043670654296875p838
; [HW: -1.7600327611040487152394007352995686233043670654296875p838] 

; mpf : - 3422883259697563 838
; mpfd: - 3422883259697563 838 (-3.22595e+252) class: Neg. norm. non-zero
; hwf : - 3422883259697563 838 (-3.22595e+252) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101100 #b1110110010010110001111010110001001000011001100011000)))
(assert (= y (fp #b1 #b01011100110 #b0001011111011111101010101000110010000111011001001010)))
(assert (= r (fp #b1 #b11101000101 #b1100001010010001100000011100110011010100100110011011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
