(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.95738975793613700915329900453798472881317138671875p-982 {- 4311700157089516 -982 (-4.78874e-296)}
; Y = -0.686160708287454124132409560843370854854583740234375p-1022 {- 3090193110159654 -1023 (-1.52676e-308)}
; -1.95738975793613700915329900453798472881317138671875p-982 / -0.686160708287454124132409560843370854854583740234375p-1022 == 1.426334774269911509492203549598343670368194580078125p41
; [HW: 1.426334774269911509492203549598343670368194580078125p41] 

; mpf : + 1920041130537058 41
; mpfd: + 1920041130537058 41 (3.13654e+012) class: Pos. norm. non-zero
; hwf : + 1920041130537058 41 (3.13654e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101001 #b1111010100010111011111101100001111011100011011101100)))
(assert (= y (fp #b1 #b00000000000 #b1010111110101000001110100110100111100101000100100110)))
(assert (= r (fp #b0 #b10000101000 #b0110110100100100010001101001100010100011000001100010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
