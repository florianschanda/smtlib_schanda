(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3268247013769343123357202784973196685314178466796875p-374 {+ 1471887603336635 -374 (3.44822e-113)}
; Y = 1.248139184755137964799587280140258371829986572265625p-810 {+ 1117519539999258 -810 (1.82796e-244)}
; 1.3268247013769343123357202784973196685314178466796875p-374 / 1.248139184755137964799587280140258371829986572265625p-810 == 1.0630422612981522689779012580402195453643798828125p436
; [HW: 1.0630422612981522689779012580402195453643798828125p436] 

; mpf : + 283917104490952 436
; mpfd: + 283917104490952 436 (1.88638e+131) class: Pos. norm. non-zero
; hwf : + 283917104490952 436 (1.88638e+131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010001001 #b0101001110101010110010001001101111110000010110111011)))
(assert (= y (fp #b0 #b00011010101 #b0011111110000110000011001011001101100001001000011010)))
(assert (= r (fp #b0 #b10110110011 #b0001000000100011100010011010001010001010100111001000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
