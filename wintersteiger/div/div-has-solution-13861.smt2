(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5102241024318150408589644939638674259185791015625p-459 {+ 2297845077587368 -459 (1.01455e-138)}
; Y = 1.9191751069550149200182431741268374025821685791015625p-999 {+ 4139596669170841 -999 (3.58219e-301)}
; 1.5102241024318150408589644939638674259185791015625p-459 / 1.9191751069550149200182431741268374025821685791015625p-999 == 1.5738262725051221924132960339193232357501983642578125p539
; [HW: 1.5738262725051221924132960339193232357501983642578125p539] 

; mpf : + 2584283787029469 539
; mpfd: + 2584283787029469 539 (2.8322e+162) class: Pos. norm. non-zero
; hwf : + 2584283787029469 539 (2.8322e+162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000110100 #b1000001010011110000010111111100110010011010110101000)))
(assert (= y (fp #b0 #b00000011000 #b1110101101001111000011110100111110101011010010011001)))
(assert (= r (fp #b0 #b11000011010 #b1001001011100110010001110101000111111110101111011101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
