(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.11131387815568505317287417710758745670318603515625p710 {- 501313140183108 710 (-5.98596e+213)}
; Y = -1.8834290146462946413663530620397068560123443603515625p70 {- 3978610581169337 70 (-2.22356e+021)}
; -1.11131387815568505317287417710758745670318603515625p710 / -1.8834290146462946413663530620397068560123443603515625p70 == 1.1800963768888188543115802531247027218341827392578125p639
; [HW: 1.1800963768888188543115802531247027218341827392578125p639] 

; mpf : + 811081975847261 639
; mpfd: + 811081975847261 639 (2.69206e+192) class: Pos. norm. non-zero
; hwf : + 811081975847261 639 (2.69206e+192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000101 #b0001110001111111000100001111101001000101000001000100)))
(assert (= y (fp #b1 #b10001000101 #b1110001000101000011001110110011000111110010010111001)))
(assert (= r (fp #b0 #b11001111110 #b0010111000011010110010111101000011011101100101011101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
