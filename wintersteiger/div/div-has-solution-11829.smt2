(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1983496775756383723177123101777397096157073974609375p-564 {- 893287534018703 -564 (-1.98457e-170)}
; Y = 1.7667905465491866578986446256749331951141357421875p118 {+ 3453317619710136 118 (5.87117e+035)}
; -1.1983496775756383723177123101777397096157073974609375p-564 / 1.7667905465491866578986446256749331951141357421875p118 == -1.356527155882964574828974946285597980022430419921875p-683
; [HW: -1.356527155882964574828974946285597980022430419921875p-683] 

; mpf : - 1605655566381982 -683
; mpfd: - 1605655566381982 -683 (-3.38019e-206) class: Neg. norm. non-zero
; hwf : - 1605655566381982 -683 (-3.38019e-206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001011 #b0011001011000111000010110110001001011100000010001111)))
(assert (= y (fp #b0 #b10001110101 #b1100010001001100011000101010000001001111100010111000)))
(assert (= r (fp #b1 #b00101010100 #b0101101101000101010111010001101010100111001110011110)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
