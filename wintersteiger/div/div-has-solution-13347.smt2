(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5209037577234048033147928435937501490116119384765625p287 {+ 2345941969179017 287 (3.7819e+086)}
; Y = -1.46819026050637102542850698227994143962860107421875p-351 {- 2108541482754988 -351 (-3.20077e-106)}
; 1.5209037577234048033147928435937501490116119384765625p287 / -1.46819026050637102542850698227994143962860107421875p-351 == -1.0359037235397903220501802934450097382068634033203125p638
; [HW: -1.0359037235397903220501802934450097382068634033203125p638] 

; mpf : - 161695995955013 638
; mpfd: - 161695995955013 638 (-1.18156e+192) class: Neg. norm. non-zero
; hwf : - 161695995955013 638 (-1.18156e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011110 #b1000010101011001111100101101101111001001000110001001)))
(assert (= y (fp #b1 #b01010100000 #b0111011111011011010100010010000100101110001110101100)))
(assert (= r (fp #b1 #b11001111101 #b0000100100110000111111001000011001101000011101000101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
