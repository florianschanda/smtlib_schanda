(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.848086267074425137479920522309839725494384765625p-622 {+ 3819440996374416 -622 (1.06185e-187)}
; Y = 1.3868656744993719254210873259580694139003753662109375p143 {+ 1742288107517807 143 (1.54641e+043)}
; 1.848086267074425137479920522309839725494384765625p-622 / 1.3868656744993719254210873259580694139003753662109375p143 == 1.332563276354462811212897577206604182720184326171875p-765
; [HW: 1.332563276354462811212897577206604182720184326171875p-765] 

; mpf : + 1497731847467070 -765
; mpfd: + 1497731847467070 -765 (6.86659e-231) class: Pos. norm. non-zero
; hwf : + 1497731847467070 -765 (6.86659e-231) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110010001 #b1101100100011100001011100111110101000101011110010000)))
(assert (= y (fp #b0 #b10010001110 #b0110001100001001101000001111101111101011011101101111)))
(assert (= r (fp #b0 #b00100000010 #b0101010100100010110111011110101111001011000000111110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
