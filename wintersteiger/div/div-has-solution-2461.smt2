(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.040607387564700392346139778965152800083160400390625p20 {- 182879415504874 20 (-1.09116e+006)}
; Y = -1.97833063249221208224071233416907489299774169921875p-59 {- 4406009471937068 -59 (-3.43186e-018)}
; -1.040607387564700392346139778965152800083160400390625p20 / -1.97833063249221208224071233416907489299774169921875p-59 == 1.052005534842060274769437455688603222370147705078125p78
; [HW: 1.052005534842060274769437455688603222370147705078125p78] 

; mpf : + 234212107335906 78
; mpfd: + 234212107335906 78 (3.17949e+023) class: Pos. norm. non-zero
; hwf : + 234212107335906 78 (3.17949e+023) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010011 #b0000101001100101001111101110100110010000111111101010)))
(assert (= y (fp #b1 #b01111000100 #b1111101001110011111000000101011100111010101000101100)))
(assert (= r (fp #b0 #b10001001101 #b0000110101010000001111000001011101011011100011100010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
