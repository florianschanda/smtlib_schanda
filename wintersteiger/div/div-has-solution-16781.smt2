(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9422694557990463071206477252417244017124176025390625p-607 {+ 4243604370019185 -607 (3.65681e-183)}
; Y = 1.9737838433602703513969345294754020869731903076171875p-615 {+ 4385532554096723 -615 (1.45162e-185)}
; 1.9422694557990463071206477252417244017124176025390625p-607 / 1.9737838433602703513969345294754020869731903076171875p-615 == 1.96806703260112580977647667168639600276947021484375p7
; [HW: 1.96806703260112580977647667168639600276947021484375p7] 

; mpf : + 4359786327292092 7
; mpfd: + 4359786327292092 7 (251.913) class: Pos. norm. non-zero
; hwf : + 4359786327292092 7 (251.913) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100000 #b1111000100111000100100100011000010101101001101110001)))
(assert (= y (fp #b0 #b00110011000 #b1111100101001001111001011110000010011011000001010011)))
(assert (= r (fp #b0 #b10000000110 #b1111011111010011001111011011010101011011100010111100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
