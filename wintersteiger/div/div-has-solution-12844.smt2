(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.775576043467907094708380100200884044170379638671875p-174 {- 3492883980359550 -174 (-7.41515e-053)}
; Y = -1.5279800727239922775169134183670394122600555419921875p-794 {- 2377810858778819 -794 (-1.46656e-239)}
; -1.775576043467907094708380100200884044170379638671875p-174 / -1.5279800727239922775169134183670394122600555419921875p-794 == 1.1620413611170434808883555888314731419086456298828125p620
; [HW: 1.1620413611170434808883555888314731419086456298828125p620] 

; mpf : + 729769413545325 620
; mpfd: + 729769413545325 620 (5.05614e+186) class: Pos. norm. non-zero
; hwf : + 729769413545325 620 (5.05614e+186) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101010001 #b1100011010001100001001101100111001000001011101111110)))
(assert (= y (fp #b1 #b00011100101 #b1000011100101001101100111011100101001010000011000011)))
(assert (= r (fp #b0 #b11001101011 #b0010100101111011100010101110101010011000110101101101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
