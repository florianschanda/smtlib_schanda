(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.156380049526385622726820656680501997470855712890625p417 {+ 704273132775210 417 (3.91389e+125)}
; Y = 1.7578807864709620201182360688108019530773162841796875p-405 {+ 3413191627541883 -405 (2.12736e-122)}
; 1.156380049526385622726820656680501997470855712890625p417 / 1.7578807864709620201182360688108019530773162841796875p-405 == 1.31565241332192872647510739625431597232818603515625p821
; [HW: 1.31565241332192872647510739625431597232818603515625p821] 

; mpf : + 1421572091015236 821
; mpfd: + 1421572091015236 821 (1.83979e+247) class: Pos. norm. non-zero
; hwf : + 1421572091015236 821 (1.83979e+247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100000 #b0010100000001000100001011101111001110110011100101010)))
(assert (= y (fp #b0 #b01001101010 #b1100001000000100011110011010100000101000110101111011)))
(assert (= r (fp #b0 #b11100110100 #b0101000011001110100110001011100000011111000001000100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
