(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.874362547997459049753388171666301786899566650390625p60 {- 3937778845348074 60 (-2.16099e+018)}
; Y = 1.3943098703573895136287319473922252655029296875p-277 {+ 1775813785210048 -277 (5.74183e-084)}
; -1.874362547997459049753388171666301786899566650390625p60 / 1.3943098703573895136287319473922252655029296875p-277 == -1.344294111263102831088644961710087954998016357421875p337
; [HW: -1.344294111263102831088644961710087954998016357421875p337] 

; mpf : - 1550562831190366 337
; mpfd: - 1550562831190366 337 (-3.76359e+101) class: Neg. norm. non-zero
; hwf : - 1550562831190366 337 (-3.76359e+101) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111011 #b1101111111010110001110010101010001111111000011101010)))
(assert (= y (fp #b0 #b01011101010 #b0110010011110001011111011101110110101100110011000000)))
(assert (= r (fp #b1 #b10101010000 #b0101100000100011101010001010110000010100100101011110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
