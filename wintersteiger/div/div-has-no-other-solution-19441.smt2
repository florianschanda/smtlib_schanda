(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.168268005416390753481437059235759079456329345703125p-214 {- 757811726491634 -214 (-4.43735e-065)}
; Y = 1.3129586170559133240232085881871171295642852783203125p423 {+ 1409440311155397 423 (2.84406e+127)}
; -1.168268005416390753481437059235759079456329345703125p-214 / 1.3129586170559133240232085881871171295642852783203125p423 == -1.779596082070024731791590966167859733104705810546875p-638
; [HW: -1.779596082070024731791590966167859733104705810546875p-638] 

; mpf : - 3510988624710062 -638
; mpfd: - 3510988624710062 -638 (-1.56021e-192) class: Neg. norm. non-zero
; hwf : - 3510988624710062 -638 (-1.56021e-192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100101001 #b0010101100010011100111001010110000111001111111110010)))
(assert (= y (fp #b0 #b10110100110 #b0101000000011110000011100101000101000001101011000101)))
(assert (= r (fp #b1 #b00110000001 #b1100011110010011100110111101110010010100100110101110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
