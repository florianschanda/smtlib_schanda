(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3906021317064747311320616063312627375125885009765625p739 {- 1759115614803401 739 (-4.02133e+222)}
; Y = 1.396353894774920778587556924321688711643218994140625p-793 {+ 1785019252815178 -793 (2.68046e-239)}
; -1.3906021317064747311320616063312627375125885009765625p739 / 1.396353894774920778587556924321688711643218994140625p-793 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100010 #b0110001111111110100000000101010101101101010111001001)))
(assert (= y (fp #b0 #b00011100110 #b0110010101110111011100101110011110110011010101001010)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
