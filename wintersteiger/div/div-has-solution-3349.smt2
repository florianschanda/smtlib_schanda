(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.719015895877491484355914508341811597347259521484375p873 {- 3238159720747334 873 (-1.0826e+263)}
; Y = -1.779649310049730370764109466108493506908416748046875p412 {- 3511228342219630 412 (-1.88232e+124)}
; -1.719015895877491484355914508341811597347259521484375p873 / -1.779649310049730370764109466108493506908416748046875p412 == 1.93185914345052101026567470398731529712677001953125p460
; [HW: 1.93185914345052101026567470398731529712677001953125p460] 

; mpf : + 4196720491205556 460
; mpfd: + 4196720491205556 460 (5.7514e+138) class: Pos. norm. non-zero
; hwf : + 4196720491205556 460 (5.7514e+138) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101000 #b1011100000010001011011001111111000011001000101000110)))
(assert (= y (fp #b1 #b10110011011 #b1100011110010111000110001110000100000011001101101110)))
(assert (= r (fp #b0 #b10111001011 #b1110111010001110010100100010000110011001001110110100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
