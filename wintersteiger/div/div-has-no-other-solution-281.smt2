(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.517694296747873483610646871966309845447540283203125p-934 {- 2331487841925554 -934 (-1.04513e-281)}
; Y = 1.894614931296060067467124099493958055973052978515625p-917 {+ 4028987471225018 -917 (1.71007e-276)}
; -1.517694296747873483610646871966309845447540283203125p-934 / 1.894614931296060067467124099493958055973052978515625p-917 == -1.6021137294739418166500399820506572723388671875p-18
; [HW: -1.6021137294739418166500399820506572723388671875p-18] 

; mpf : - 2711679167693504 -18
; mpfd: - 2711679167693504 -18 (-6.11158e-006) class: Neg. norm. non-zero
; hwf : - 2711679167693504 -18 (-6.11158e-006) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001011001 #b1000010010000111100111010000100111011011100110110010)))
(assert (= y (fp #b0 #b00001101010 #b1110010100000101011110111111000001101110000010111010)))
(assert (= r (fp #b1 #b01111101101 #b1001101000100100001000000001100010010000001011000000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
