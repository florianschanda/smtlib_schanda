(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8293884203161432377982009711558930575847625732421875p-215 {+ 3735233380681187 -215 (3.47422e-065)}
; Y = -1.2146407661714053727308737506973557174205780029296875p822 {- 966656074548059 822 (-3.39707e+247)}
; 1.8293884203161432377982009711558930575847625732421875p-215 / -1.2146407661714053727308737506973557174205780029296875p822 == -0.000045962975714797238424580427818000316619873046875p-1022
; [HW: -0.000045962975714797238424580427818000316619873046875p-1022] 

; mpf : - 206998840302 -1023
; mpfd: - 206998840302 -1023 (-1.02271e-312) class: Neg. denorm.
; hwf : - 206998840302 -1023 (-1.02271e-312) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100101000 #b1101010001010010110011001010110011110000010111100011)))
(assert (= y (fp #b1 #b11100110101 #b0011011011110010101100100111111100011000001101011011)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000011000000110010000101111010001111101110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
