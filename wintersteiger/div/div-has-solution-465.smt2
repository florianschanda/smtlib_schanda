(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1221803348040635395221897852024994790554046630859375p-419 {- 550251310295583 -419 (-8.28885e-127)}
; Y = -1.15623720746481950527595472522079944610595703125p-1019 {- 703629829319968 -1019 (-2.05817e-307)}
; -1.1221803348040635395221897852024994790554046630859375p-419 / -1.15623720746481950527595472522079944610595703125p-1019 == 1.9410901630895798231080107143498025834560394287109375p599
; [HW: 1.9410901630895798231080107143498025834560394287109375p599] 

; mpf : + 4238293307812271 599
; mpfd: + 4238293307812271 599 (4.02729e+180) class: Pos. norm. non-zero
; hwf : + 4238293307812271 599 (4.02729e+180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001011100 #b0001111101000111001101011101111000110010101000011111)))
(assert (= y (fp #b1 #b00000000100 #b0010011111111111001010010110000001111010110100100000)))
(assert (= r (fp #b0 #b11001010110 #b1111000011101011010010001111000100001110100110101111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
