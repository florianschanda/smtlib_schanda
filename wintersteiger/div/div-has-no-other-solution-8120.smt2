(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0752153534736172968422351914341561496257781982421875p-90 {- 338739837876323 -90 (-8.68552e-028)}
; Y = -1.8178078737649097096351624713861383497714996337890625p487 {- 3683079235548305 487 (-7.26367e+146)}
; -1.0752153534736172968422351914341561496257781982421875p-90 / -1.8178078737649097096351624713861383497714996337890625p487 == 1.182980191681874959641618261230178177356719970703125p-578
; [HW: 1.182980191681874959641618261230178177356719970703125p-578] 

; mpf : + 824069523074674 -578
; mpfd: + 824069523074674 -578 (1.19575e-174) class: Pos. norm. non-zero
; hwf : + 824069523074674 -578 (1.19575e-174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100101 #b0001001101000001010100000011101101010011100001100011)))
(assert (= y (fp #b1 #b10111100110 #b1101000101011011110110110101100000111011010010010001)))
(assert (= r (fp #b0 #b00110111101 #b0010111011010111110010100011001100010110111001110010)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
