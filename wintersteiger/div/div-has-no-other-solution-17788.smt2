(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2792286694920453893331568906432949006557464599609375p274 {- 1257534131875535 274 (-3.883e+082)}
; Y = -1.5046687649282690646401761114248074591159820556640625p-262 {- 2272826061676481 -262 (-2.0304e-079)}
; -1.2792286694920453893331568906432949006557464599609375p274 / -1.5046687649282690646401761114248074591159820556640625p-262 == 1.700345882507940498129528350546024739742279052734375p535
; [HW: 1.700345882507940498129528350546024739742279052734375p535] 

; mpf : + 3154077455493222 535
; mpfd: + 3154077455493222 535 (1.91243e+161) class: Pos. norm. non-zero
; hwf : + 3154077455493222 535 (1.91243e+161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010001 #b0100011101111011100001111011001110010010111011001111)))
(assert (= y (fp #b1 #b01011111001 #b1000000100110001111110001110000010101101111111000001)))
(assert (= r (fp #b0 #b11000010110 #b1011001101001001110111100010010101000010100001100110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
