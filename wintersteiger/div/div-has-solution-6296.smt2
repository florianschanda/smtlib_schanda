(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8080034899802039927152463860693387687206268310546875p538 {+ 3638924216388907 538 (1.62681e+162)}
; Y = 1.5310705949680991633243820615462027490139007568359375p690 {+ 2391729333605759 690 (7.86488e+207)}
; 1.8080034899802039927152463860693387687206268310546875p538 / 1.5310705949680991633243820615462027490139007568359375p690 == 1.1808753273181860077301053024712018668651580810546875p-152
; [HW: 1.1808753273181860077301053024712018668651580810546875p-152] 

; mpf : + 814590056710699 -152
; mpfd: + 814590056710699 -152 (2.06845e-046) class: Pos. norm. non-zero
; hwf : + 814590056710699 -152 (2.06845e-046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011001 #b1100111011011001010100010001010010000100110100101011)))
(assert (= y (fp #b0 #b11010110001 #b1000011111110100001111100001010101000001010101111111)))
(assert (= r (fp #b0 #b01101100111 #b0010111001001101110110000110111101111100001000101011)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
