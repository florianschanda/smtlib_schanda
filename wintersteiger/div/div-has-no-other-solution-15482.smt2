(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8733917581701280408168486246722750365734100341796875p52 {- 3933406796643451 52 (-8.43701e+015)}
; Y = -1.46325044863412045970108010806143283843994140625p-888 {- 2086294547847840 -888 (-7.09059e-268)}
; -1.8733917581701280408168486246722750365734100341796875p52 / -1.46325044863412045970108010806143283843994140625p-888 == 1.280294675404922255523842977709136903285980224609375p940
; [HW: 1.280294675404922255523842977709136903285980224609375p940] 

; mpf : + 1262334995707542 940
; mpfd: + 1262334995707542 940 (1.18989e+283) class: Pos. norm. non-zero
; hwf : + 1262334995707542 940 (1.18989e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000110011 #b1101111110010110100110100010110111101111110001111011)))
(assert (= y (fp #b1 #b00010000111 #b0111011010010111100101001101011010111101101010100000)))
(assert (= r (fp #b0 #b11110101011 #b0100011111000001011001000101000000011011011010010110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
