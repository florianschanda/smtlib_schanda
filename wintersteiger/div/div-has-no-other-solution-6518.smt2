(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.285099245725430439080128053319640457630157470703125p123 {+ 1283972856812658 123 (1.36655e+037)}
; Y = -1.414672191118818478372531899367459118366241455078125p617 {- 1867517525403618 617 (-7.69419e+185)}
; 1.285099245725430439080128053319640457630157470703125p123 / -1.414672191118818478372531899367459118366241455078125p617 == -1.81681558991993341578563558869063854217529296875p-495
; [HW: -1.81681558991993341578563558869063854217529296875p-495] 

; mpf : - 3678610386393824 -495
; mpfd: - 3678610386393824 -495 (-1.77608e-149) class: Neg. norm. non-zero
; hwf : - 3678610386393824 -495 (-1.77608e-149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111010 #b0100100011111100010000111010000010000001010001110010)))
(assert (= y (fp #b1 #b11001101000 #b0110101000100111111101001110101101101010011111100010)))
(assert (= r (fp #b1 #b01000010000 #b1101000100011010110100111001010110010001101011100000)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
