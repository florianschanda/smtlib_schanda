(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.97263322059401158270475207245908677577972412109375p-369 {+ 4380350609835356 -369 (1.64051e-111)}
; Y = 1.2912191543610891386606454034335911273956298828125p-577 {+ 1311534475063752 -577 (2.61031e-174)}
; 1.97263322059401158270475207245908677577972412109375p-369 / 1.2912191543610891386606454034335911273956298828125p-577 == 1.5277292115218770174323026367346756160259246826171875p208
; [HW: 1.5277292115218770174323026367346756160259246826171875p208] 

; mpf : + 2376681080362451 208
; mpfd: + 2376681080362451 208 (6.28471e+062) class: Pos. norm. non-zero
; hwf : + 2376681080362451 208 (6.28471e+062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010001110 #b1111100011111110011111011010000101110100010101011100)))
(assert (= y (fp #b0 #b00110111110 #b0100101010001101010101101010011111110011000111001000)))
(assert (= r (fp #b0 #b10011001111 #b1000011100011001010000101111100010100001010111010011)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
