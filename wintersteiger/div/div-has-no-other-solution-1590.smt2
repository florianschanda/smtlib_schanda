(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5718850283295198178024065782665275037288665771484375p-14 {- 2575541200483591 -14 (-9.59402e-005)}
; Y = 1.613473445144931073258476317278109490871429443359375p-927 {+ 2762838778956406 -927 (1.42218e-279)}
; -1.5718850283295198178024065782665275037288665771484375p-14 / 1.613473445144931073258476317278109490871429443359375p-927 == -1.948448588428208783085437971749342978000640869140625p912
; [HW: -1.948448588428208783085437971749342978000640869140625p912] 

; mpf : - 4271432709425354 912
; mpfd: - 4271432709425354 912 (-6.74598e+274) class: Neg. norm. non-zero
; hwf : - 4271432709425354 912 (-6.74598e+274) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110001 #b1001001001100111000011101010010110111111010100000111)))
(assert (= y (fp #b0 #b00001100000 #b1001110100001100100110000111111111011100101001110110)))
(assert (= r (fp #b1 #b11110001111 #b1111001011001101100001101101010100111100100011001010)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
