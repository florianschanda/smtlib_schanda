(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2523900102244900356396328788832761347293853759765625p-911 {- 1136663555999049 -911 (-7.23458e-275)}
; Y = -1.6507367160727017818544481997378170490264892578125p-460 {- 2930657632021320 -460 (-5.54472e-139)}
; -1.2523900102244900356396328788832761347293853759765625p-911 / -1.6507367160727017818544481997378170490264892578125p-460 == 1.517370999300329703629586219904012978076934814453125p-452
; [HW: 1.517370999300329703629586219904012978076934814453125p-452] 

; mpf : + 2330031839661266 -452
; mpfd: + 2330031839661266 -452 (1.30477e-136) class: Pos. norm. non-zero
; hwf : + 2330031839661266 -452 (1.30477e-136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110000 #b0100000010011100101000011011011111000000010101001001)))
(assert (= y (fp #b1 #b01000110011 #b1010011010010110101011100111000111010110101101001000)))
(assert (= r (fp #b0 #b01000111011 #b1000010001110010011011010000000111100100110011010010)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
