(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7429368535194402767274368670769035816192626953125p703 {+ 3345890136669960 703 (7.33447e+211)}
; Y = -1.29863454072314166154455961077474057674407958984375p869 {- 1344930406320700 869 (-5.11156e+261)}
; 1.7429368535194402767274368670769035816192626953125p703 / -1.29863454072314166154455961077474057674407958984375p869 == -1.342130367600487428347832974395714700222015380859375p-166
; [HW: -1.342130367600487428347832974395714700222015380859375p-166] 

; mpf : - 1540818196037686 -166
; mpfd: - 1540818196037686 -166 (-1.43488e-050) class: Neg. norm. non-zero
; hwf : - 1540818196037686 -166 (-1.43488e-050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111110 #b1011111000110001000111000001000011011011111100001000)))
(assert (= y (fp #b1 #b11101100100 #b0100110001110011010100000011000111011100101000111100)))
(assert (= r (fp #b1 #b01101011001 #b0101011110010101110110110001001111010000000000110110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
