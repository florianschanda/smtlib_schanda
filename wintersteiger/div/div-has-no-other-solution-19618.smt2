(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2375830623592545265410080901347100734710693359375p-14 {- 1069978991110680 -14 (-7.55361e-005)}
; Y = 1.039248452470842298822617522091604769229888916015625p978 {+ 176759315922554 978 (2.65494e+294)}
; -1.2375830623592545265410080901347100734710693359375p-14 / 1.039248452470842298822617522091604769229888916015625p978 == -1.19084426771756657359446762711741030216217041015625p-992
; [HW: -1.19084426771756657359446762711741030216217041015625p-992] 

; mpf : - 859486172978628 -992
; mpfd: - 859486172978628 -992 (-2.84511e-299) class: Neg. norm. non-zero
; hwf : - 859486172978628 -992 (-2.84511e-299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110001 #b0011110011010010001111100101101011101010101000011000)))
(assert (= y (fp #b0 #b11111010001 #b0000101000001100001011111100001111000111111001111010)))
(assert (= r (fp #b1 #b00000011111 #b0011000011011011001010111000000001111001110111000100)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
