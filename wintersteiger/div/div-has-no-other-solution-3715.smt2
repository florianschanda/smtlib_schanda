(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2238080408249423225441887552733533084392547607421875p358 {+ 1007941809261731 358 (7.18541e+107)}
; Y = 1.9873232832212568421681453401106409728527069091796875p426 {+ 4446508770409467 426 (3.44387e+128)}
; 1.2238080408249423225441887552733533084392547607421875p358 / 1.9873232832212568421681453401106409728527069091796875p426 == 1.231614454635955535621860690298490226268768310546875p-69
; [HW: 1.231614454635955535621860690298490226268768310546875p-69] 

; mpf : + 1043098771592110 -69
; mpfd: + 1043098771592110 -69 (2.08644e-021) class: Pos. norm. non-zero
; hwf : + 1043098771592110 -69 (2.08644e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100101 #b0011100101001011011110111101011111101100110010100011)))
(assert (= y (fp #b0 #b10110101001 #b1111110011000001001101111111110000000011101111111011)))
(assert (= r (fp #b0 #b01110111010 #b0011101101001011000101011011101111110001001110101110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
