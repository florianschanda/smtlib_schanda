(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.765404427309427592973634091322310268878936767578125p-10 {- 3447075093618466 -10 (-0.00172403)}
; Y = -1.3283301616775047282459354391903616487979888916015625p-880 {- 1478667593785305 -880 (-1.64782e-265)}
; -1.765404427309427592973634091322310268878936767578125p-10 / -1.3283301616775047282459354391903616487979888916015625p-880 == 1.3290403833636934560757936196750961244106292724609375p870
; [HW: 1.3290403833636934560757936196750961244106292724609375p870] 

; mpf : + 1481866147906575 870
; mpfd: + 1481866147906575 870 (1.04625e+262) class: Pos. norm. non-zero
; hwf : + 1481866147906575 870 (1.04625e+262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110101 #b1100001111110001100010110110011110000001111100100010)))
(assert (= y (fp #b1 #b00010001111 #b0101010000001101011100100000101010110001111111011001)))
(assert (= r (fp #b0 #b11101100101 #b0101010000111011111111011001010110011100010000001111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
