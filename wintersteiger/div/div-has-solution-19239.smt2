(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0224109182811940144119944307021796703338623046875p486 {+ 100929803220216 486 (2.04269e+146)}
; Y = 1.6986951258630451633280245005153119564056396484375p537 {+ 3146643108482392 537 (7.64228e+161)}
; 1.0224109182811940144119944307021796703338623046875p486 / 1.6986951258630451633280245005153119564056396484375p537 == 1.2037603484165462219834807910956442356109619140625p-52
; [HW: 1.2037603484165462219834807910956442356109619140625p-52] 

; mpf : + 917655029201640 -52
; mpfd: + 917655029201640 -52 (2.67288e-016) class: Pos. norm. non-zero
; hwf : + 917655029201640 -52 (2.67288e-016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100101 #b0000010110111100101110001101000100010111010011111000)))
(assert (= y (fp #b0 #b11000011000 #b1011001011011101101011110000101101110100110101011000)))
(assert (= r (fp #b0 #b01111001011 #b0011010000101001101000110110000010101011101011101000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
