(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.381149310900555260417377212434075772762298583984375p779 {+ 1716543894544262 779 (4.39144e+234)}
; Y = 1.2241901051773720343618379047256894409656524658203125p482 {+ 1009662474136965 482 (1.52865e+145)}
; 1.381149310900555260417377212434075772762298583984375p779 / 1.2241901051773720343618379047256894409656524658203125p482 == 1.1282147315677260035471363153192214667797088623046875p297
; [HW: 1.1282147315677260035471363153192214667797088623046875p297] 

; mpf : + 577427817311819 297
; mpfd: + 577427817311819 297 (2.87277e+089) class: Pos. norm. non-zero
; hwf : + 577427817311819 297 (2.87277e+089) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001010 #b0110000110010011000000000101000100110101111110000110)))
(assert (= y (fp #b0 #b10111100001 #b0011100101100100100001011101000111010010110110000101)))
(assert (= r (fp #b0 #b10100101000 #b0010000011010010101011100011111011110010111001001011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
