(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.35496845267437748816519160754978656768798828125p994 {+ 1598635791192608 994 (2.26853e+299)}
; Y = -1.0240346488667615432177626644261181354522705078125p586 {- 108242435680328 586 (-2.59353e+176)}
; 1.35496845267437748816519160754978656768798828125p994 / -1.0240346488667615432177626644261181354522705078125p586 == -1.3231666078621857618458079741685651242733001708984375p408
; [HW: -1.3231666078621857618458079741685651242733001708984375p408] 

; mpf : - 1455413014746727 408
; mpfd: - 1455413014746727 408 (-8.74687e+122) class: Neg. norm. non-zero
; hwf : - 1455413014746727 408 (-8.74687e+122) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100001 #b0101101011011111001101100110011101011001001000100000)))
(assert (= y (fp #b1 #b11001001001 #b0000011000100111001000100111111011011010100001001000)))
(assert (= r (fp #b1 #b10110010111 #b0101001010111011000010111111101111101101011001100111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
