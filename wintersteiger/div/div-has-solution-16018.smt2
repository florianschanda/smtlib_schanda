(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8966599817935743121921632337034679949283599853515625p971 {- 4038197559883577 971 (-3.78543e+292)}
; Y = -1.030818164049778662416656516143120825290679931640625p183 {- 138792672130826 183 (-1.26378e+055)}
; -1.8966599817935743121921632337034679949283599853515625p971 / -1.030818164049778662416656516143120825290679931640625p183 == 1.8399559184542890744040732897701673209667205810546875p788
; [HW: 1.8399559184542890744040732897701673209667205810546875p788] 

; mpf : + 3782825161358379 788
; mpfd: + 3782825161358379 788 (2.99533e+237) class: Pos. norm. non-zero
; hwf : + 3782825161358379 788 (2.99533e+237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001010 #b1110010110001011100000100011000101101111011100111001)))
(assert (= y (fp #b1 #b10010110110 #b0000011111100011101100101111111010110111011100001010)))
(assert (= r (fp #b0 #b11100010011 #b1101011100000111010110011101111111010111110000101011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
