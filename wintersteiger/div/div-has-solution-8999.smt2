(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.726992155960170638451245395117439329624176025390625p42 {- 3274081602683498 42 (-7.59539e+012)}
; Y = 1.2190724735728399874545857528573833405971527099609375p103 {+ 986614710349775 103 (1.23629e+031)}
; -1.726992155960170638451245395117439329624176025390625p42 / 1.2190724735728399874545857528573833405971527099609375p103 == -1.4166443697139079471725153780425898730754852294921875p-61
; [HW: -1.4166443697139079471725153780425898730754852294921875p-61] 

; mpf : - 1876399428189571 -61
; mpfd: - 1876399428189571 -61 (-6.14372e-019) class: Neg. norm. non-zero
; hwf : - 1876399428189571 -61 (-6.14372e-019) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101001 #b1011101000011100001010000110111001001100001001101010)))
(assert (= y (fp #b0 #b10001100110 #b0011100000010101001000100011010101110010111111001111)))
(assert (= r (fp #b1 #b01111000010 #b0110101010101001001101001001010111111011110110000011)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
