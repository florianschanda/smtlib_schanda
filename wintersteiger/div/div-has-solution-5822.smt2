(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7666137288375016733965594539768062531948089599609375p-463 {- 3452521303529679 -463 (-7.41743e-140)}
; Y = 1.7583659175333090640691580119892023503780364990234375p-137 {+ 3415376463613495 -137 (1.00925e-041)}
; -1.7666137288375016733965594539768062531948089599609375p-463 / 1.7583659175333090640691580119892023503780364990234375p-137 == -1.00469061144893156978241677279584109783172607421875p-326
; [HW: -1.00469061144893156978241677279584109783172607421875p-326] 

; mpf : - 21124635973548 -326
; mpfd: - 21124635973548 -326 (-7.34943e-099) class: Neg. norm. non-zero
; hwf : - 21124635973548 -326 (-7.34943e-099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110000 #b1100010001000000110011000001111000000101100011001111)))
(assert (= y (fp #b0 #b01101110110 #b1100001000100100010001001100111000110100111000110111)))
(assert (= r (fp #b1 #b01010111001 #b0000000100110011011001110110011011000101011110101100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
