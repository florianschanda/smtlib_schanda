(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.054982583470877255393816085415892302989959716796875p379 {+ 247619542431310 379 (1.29901e+114)}
; Y = 1.407901063873452596197921593557111918926239013671875p480 {+ 1837023079264510 480 (4.39511e+144)}
; 1.054982583470877255393816085415892302989959716796875p379 / 1.407901063873452596197921593557111918926239013671875p480 == 1.4986601126195371325167116083321161568164825439453125p-102
; [HW: 1.4986601126195371325167116083321161568164825439453125p-102] 

; mpf : + 2245765497377877 -102
; mpfd: + 2245765497377877 -102 (2.95559e-031) class: Pos. norm. non-zero
; hwf : + 2245765497377877 -102 (2.95559e-031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101111010 #b0000111000010011010101101010110111011011011001001110)))
(assert (= y (fp #b0 #b10111011111 #b0110100001101100001101000100000101010111000011111110)))
(assert (= r (fp #b0 #b01110011001 #b0111111110101000001100000110101110000101010001010101)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
