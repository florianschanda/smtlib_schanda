(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.515833096494405562992824343382380902767181396484375p-66 {- 2323105741157574 -66 (-2.05434e-020)}
; Y = -1.867862171064565313116645484114997088909149169921875p379 {- 3908503750215326 379 (-2.29992e+114)}
; -1.515833096494405562992824343382380902767181396484375p-66 / -1.867862171064565313116645484114997088909149169921875p379 == 1.623067397559076585622506172512657940387725830078125p-446
; [HW: 1.623067397559076585622506172512657940387725830078125p-446] 

; mpf : + 2806046099473762 -446
; mpfd: + 2806046099473762 -446 (8.9322e-135) class: Pos. norm. non-zero
; hwf : + 2806046099473762 -446 (8.9322e-135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111101 #b1000010000001101101000110100011110100011010011000110)))
(assert (= y (fp #b1 #b10101111010 #b1101111000101100001101110001101000101000011010011110)))
(assert (= r (fp #b0 #b01001000001 #b1001111110000001010110000100111110111000010101100010)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
