(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4818844612403747618145644082687795162200927734375p282 {- 2170214680077784 282 (-1.15152e+085)}
; Y = -1.21124774743844287883121069171465933322906494140625p155 {- 951375276646628 155 (-5.532e+046)}
; -1.4818844612403747618145644082687795162200927734375p282 / -1.21124774743844287883121069171465933322906494140625p155 == 1.22343629895228023229947211802937090396881103515625p127
; [HW: 1.22343629895228023229947211802937090396881103515625p127] 

; mpf : + 1006267632702532 127
; mpfd: + 1006267632702532 127 (2.08157e+038) class: Pos. norm. non-zero
; hwf : + 1006267632702532 127 (2.08157e+038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011001 #b0111101101011100110001111011000101111010010111011000)))
(assert (= y (fp #b1 #b10010011010 #b0011011000010100010101010001011010011010000011100100)))
(assert (= r (fp #b0 #b10001111110 #b0011100100110011000111110000110010111101010001000100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
