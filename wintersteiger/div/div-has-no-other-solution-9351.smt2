(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4291405013562272774407801989582367241382598876953125p603 {- 1932677001997493 603 (-4.74419e+181)}
; Y = 1.94294297685816008680603772518225014209747314453125p-218 {+ 4246637639210036 -218 (4.61234e-066)}
; -1.4291405013562272774407801989582367241382598876953125p603 / 1.94294297685816008680603772518225014209747314453125p-218 == -1.471109052996729449347412810311652719974517822265625p820
; [HW: -1.471109052996729449347412810311652719974517822265625p820] 

; mpf : - 2121686555526938 820
; mpfd: - 2121686555526938 820 (-1.02859e+247) class: Neg. norm. non-zero
; hwf : - 2121686555526938 820 (-1.02859e+247) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001011010 #b0110110111011100001001101110001010110110110010110101)))
(assert (= y (fp #b0 #b01100100101 #b1111000101100100101101011111111110011001010000110100)))
(assert (= r (fp #b1 #b11100110011 #b0111100010011010100110100101011101111000011100011010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
