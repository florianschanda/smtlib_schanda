(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.356964696065616760023431197623722255229949951171875p-774 {+ 1607626072185534 -774 (1.36569e-233)}
; Y = 1.7261634455480727723397649242542684078216552734375p514 {+ 3270349422780376 514 (9.25763e+154)}
; 1.356964696065616760023431197623722255229949951171875p-774 / 1.7261634455480727723397649242542684078216552734375p514 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111001 #b0101101101100010000010011100111101101101101010111110)))
(assert (= y (fp #b0 #b11000000001 #b1011100111100101110110001111101000101101111111011000)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
