(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.42262238362056780971443004091270267963409423828125p341 {+ 1903322009392020 341 (6.37262e+102)}
; Y = 1.94290698814229845226009274483658373355865478515625p-162 {+ 4246475560442692 -162 (3.32348e-049)}
; 1.42262238362056780971443004091270267963409423828125p341 / 1.94290698814229845226009274483658373355865478515625p-162 == 1.464426647598608521860796827240847051143646240234375p502
; [HW: 1.464426647598608521860796827240847051143646240234375p502] 

; mpf : + 2091591677066022 502
; mpfd: + 2091591677066022 502 (1.91746e+151) class: Pos. norm. non-zero
; hwf : + 2091591677066022 502 (1.91746e+151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010100 #b0110110000110000111110110000010000110101001110010100)))
(assert (= y (fp #b0 #b01101011101 #b1111000101100010010110100011010100111101101101000100)))
(assert (= r (fp #b0 #b10111110101 #b0111011011100100101010100010111011010011101100100110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
