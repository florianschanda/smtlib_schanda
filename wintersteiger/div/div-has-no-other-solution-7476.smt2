(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.987088094382261971304615144617855548858642578125p-145 {- 4445449574041808 -145 (-4.45521e-044)}
; Y = 1.7298751512691483700479011531569994986057281494140625p754 {+ 3287065459282721 754 (1.6392e+227)}
; -1.987088094382261971304615144617855548858642578125p-145 / 1.7298751512691483700479011531569994986057281494140625p754 == -1.1486887322038270564661388561944477260112762451171875p-899
; [HW: -1.1486887322038270564661388561944477260112762451171875p-899] 

; mpf : - 669634518947347 -899
; mpfd: - 669634518947347 -899 (-2.71792e-271) class: Neg. norm. non-zero
; hwf : - 669634518947347 -899 (-2.71792e-271) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101101110 #b1111110010110001110011100010101110100100100011010000)))
(assert (= y (fp #b0 #b11011110001 #b1011101011011001000110010001000011011101001100100001)))
(assert (= r (fp #b1 #b00001111100 #b0010011000010000011101101111101000011001011000010011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
