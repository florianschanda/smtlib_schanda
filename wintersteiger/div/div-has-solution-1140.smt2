(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0972678450305417552357312160893343389034271240234375p712 {+ 438055430634679 712 (2.36412e+214)}
; Y = 1.5078929462442385300846581230871379375457763671875p20 {+ 2287346483449656 20 (1.58114e+006)}
; 1.0972678450305417552357312160893343389034271240234375p712 / 1.5078929462442385300846581230871379375457763671875p20 == 1.45536571115813639920588684617541730403900146484375p691
; [HW: 1.45536571115813639920588684617541730403900146484375p691] 

; mpf : + 2050784847089084 691
; mpfd: + 2050784847089084 691 (1.4952e+208) class: Pos. norm. non-zero
; hwf : + 2050784847089084 691 (1.4952e+208) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000111 #b0001100011100110100010111010010101011011110010110111)))
(assert (= y (fp #b0 #b10000010011 #b1000001000000101010001011010100111111100111100111000)))
(assert (= r (fp #b0 #b11010110010 #b0111010010010010110110001110010100100100110110111100)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
