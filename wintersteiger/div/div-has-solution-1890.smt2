(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.33001887757733694428452508873306214809417724609375p943 {+ 1486272894082524 943 (9.8888e+283)}
; Y = 1.181901876823040264952169309253804385662078857421875p640 {+ 819213224678238 640 (5.39236e+192)}
; 1.33001887757733694428452508873306214809417724609375p943 / 1.181901876823040264952169309253804385662078857421875p640 == 1.1253208947873372114401036014896817505359649658203125p303
; [HW: 1.1253208947873372114401036014896817505359649658203125p303] 

; mpf : + 564395135065989 303
; mpfd: + 564395135065989 303 (1.83386e+091) class: Pos. norm. non-zero
; hwf : + 564395135065989 303 (1.83386e+091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101110 #b0101010001111100000111011111111001000001110111011100)))
(assert (= y (fp #b0 #b11001111111 #b0010111010010001000111110001010000001001001101011110)))
(assert (= r (fp #b0 #b10100101110 #b0010000000010101000001111011100010011101111110000101)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
