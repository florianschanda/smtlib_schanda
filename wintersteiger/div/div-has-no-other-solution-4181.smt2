(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.105801903090374072036183861200697720050811767578125p-43 {+ 476489411332898 -43 (1.25715e-013)}
; Y = -1.929194251748166610838097767555154860019683837890625p495 {- 4184718885927850 495 (-1.97344e+149)}
; 1.105801903090374072036183861200697720050811767578125p-43 / -1.929194251748166610838097767555154860019683837890625p495 == -1.14638730867908833488399977795779705047607421875p-539
; [HW: -1.14638730867908833488399977795779705047607421875p-539] 

; mpf : - 659269828818912 -539
; mpfd: - 659269828818912 -539 (-6.37036e-163) class: Neg. norm. non-zero
; hwf : - 659269828818912 -539 (-6.37036e-163) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010100 #b0001101100010101110101010110000110100000101100100010)))
(assert (= y (fp #b1 #b10111101110 #b1110110111011111101011001010101011100011101110101010)))
(assert (= r (fp #b1 #b00111100100 #b0010010101111001101000110111111101010011011111100000)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
