(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.58378554094506629468241953873075544834136962890625p386 {- 2629136344664484 386 (-2.49617e+116)}
; Y = 1.8156972502441188765942570171318948268890380859375p-98 {+ 3673573832246552 -98 (5.72933e-030)}
; -1.58378554094506629468241953873075544834136962890625p386 / 1.8156972502441188765942570171318948268890380859375p-98 == -1.7445480415109158034425718142301775515079498291015625p483
; [HW: -1.7445480415109158034425718142301775515079498291015625p483] 

; mpf : - 3353146282307993 483
; mpfd: - 3353146282307993 483 (-4.35683e+145) class: Neg. norm. non-zero
; hwf : - 3353146282307993 483 (-4.35683e+145) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000001 #b1001010101110010111110000001111000111100100110100100)))
(assert (= y (fp #b0 #b01110011101 #b1101000011010001100010001111010100111100010100011000)))
(assert (= r (fp #b1 #b10111100010 #b1011111010011010101100110101000010010111000110011001)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
