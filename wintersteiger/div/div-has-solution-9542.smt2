(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.632303445493790139408929462661035358905792236328125p-558 {- 2847641561510914 -558 (-1.73007e-168)}
; Y = -1.4356541085230876131362265368807129561901092529296875p371 {- 1962011680807003 371 (-6.90523e+111)}
; -1.632303445493790139408929462661035358905792236328125p-558 / -1.4356541085230876131362265368807129561901092529296875p371 == 1.1369754286936171183697297237813472747802734375p-929
; [HW: 1.1369754286936171183697297237813472747802734375p-929] 

; mpf : + 616882489623488 -929
; mpfd: + 616882489623488 -929 (2.50545e-280) class: Pos. norm. non-zero
; hwf : + 616882489623488 -929 (2.50545e-280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010001 #b1010000111011110101000110111101110001011010000000010)))
(assert (= y (fp #b1 #b10101110010 #b0110111110000111000001110001010001111001100001011011)))
(assert (= r (fp #b0 #b00001011110 #b0010001100010000110100100101101010011000001111000000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
