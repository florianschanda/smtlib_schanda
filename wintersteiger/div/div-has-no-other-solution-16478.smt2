(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.812078383555598026788402421516366302967071533203125p-113 {+ 3657275905576626 -113 (1.74497e-034)}
; Y = -1.5806525340612724850331005654879845678806304931640625p142 {- 2615026536030081 142 (-8.81243e+042)}
; 1.812078383555598026788402421516366302967071533203125p-113 / -1.5806525340612724850331005654879845678806304931640625p142 == -1.146411589205951653269721646211110055446624755859375p-255
; [HW: -1.146411589205951653269721646211110055446624755859375p-255] 

; mpf : - 659379178590646 -255
; mpfd: - 659379178590646 -255 (-1.98012e-077) class: Neg. norm. non-zero
; hwf : - 659379178590646 -255 (-1.98012e-077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110001110 #b1100111111100100010111100111001100101000111010110010)))
(assert (= y (fp #b1 #b10010001101 #b1001010010100101101001001111110000100001111110000001)))
(assert (= r (fp #b1 #b01100000000 #b0010010101111011001110101101101101100101000110110110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
