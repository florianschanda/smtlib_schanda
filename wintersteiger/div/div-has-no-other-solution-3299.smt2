(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4641615837579597947382126221782527863979339599609375p830 {+ 2090397935652047 830 (1.0483e+250)}
; Y = -1.963697240118043918499779465491883456707000732421875p1004 {- 4340106531493598 1004 (-3.36659e+302)}
; 1.4641615837579597947382126221782527863979339599609375p830 / -1.963697240118043918499779465491883456707000732421875p1004 == -1.491229456196561553582569104037247598171234130859375p-175
; [HW: -1.491229456196561553582569104037247598171234130859375p-175] 

; mpf : - 2212300795880246 -175
; mpfd: - 2212300795880246 -175 (-3.11383e-053) class: Neg. norm. non-zero
; hwf : - 2212300795880246 -175 (-3.11383e-053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111101 #b0111011011010011010010110010011001001100110011001111)))
(assert (= y (fp #b1 #b11111101011 #b1111011010110100110111001100000110001101011011011110)))
(assert (= r (fp #b1 #b01101010000 #b0111110111000001001101101011000100110010001100110110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
