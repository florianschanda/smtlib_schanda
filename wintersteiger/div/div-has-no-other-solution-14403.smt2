(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5793067760409023048140397804672829806804656982421875p329 {- 2608965780711011 329 (-1.72717e+099)}
; Y = 1.7083939542149797485848239375627599656581878662109375p-171 {+ 3190322748234095 -171 (5.70767e-052)}
; -1.5793067760409023048140397804672829806804656982421875p329 / 1.7083939542149797485848239375627599656581878662109375p-171 == -1.848878910094956307119673510896973311901092529296875p499
; [HW: -1.848878910094956307119673510896973311901092529296875p499] 

; mpf : - 3823010743186318 499
; mpfd: - 3823010743186318 499 (-3.02605e+150) class: Neg. norm. non-zero
; hwf : - 3823010743186318 499 (-3.02605e+150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101001000 #b1001010001001101011100101110100101110010011001100011)))
(assert (= y (fp #b0 #b01101010100 #b1011010101011001010011100110001000001001100101101111)))
(assert (= r (fp #b1 #b10111110010 #b1101100101010000001000001101010100011111001110001110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
