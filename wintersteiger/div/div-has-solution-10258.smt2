(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8713813832724495167525446959189139306545257568359375p119 {- 3924352873003391 119 (-1.24375e+036)}
; Y = 1.097044196102222368693901444203220307826995849609375p46 {+ 437048205404438 46 (7.71976e+013)}
; -1.8713813832724495167525446959189139306545257568359375p119 / 1.097044196102222368693901444203220307826995849609375p46 == -1.70583955498003891904090778552927076816558837890625p73
; [HW: -1.70583955498003891904090778552927076816558837890625p73] 

; mpf : - 3178818756791460 73
; mpfd: - 3178818756791460 73 (-1.61112e+022) class: Neg. norm. non-zero
; hwf : - 3178818756791460 73 (-1.61112e+022) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001110110 #b1101111100010010110110011010111101111111100101111111)))
(assert (= y (fp #b0 #b10000101101 #b0001100011010111111000110111000010000110100100010110)))
(assert (= r (fp #b1 #b10001001000 #b1011010010110001111001101010110011011100110010100100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
