(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.71521586454711805203032781719230115413665771484375p56 {- 3221045901063868 56 (-1.23594e+017)}
; Y = 1.5510938535643628011229111507418565452098846435546875p-869 {+ 2481906073558635 -869 (3.94069e-262)}
; -1.71521586454711805203032781719230115413665771484375p56 / 1.5510938535643628011229111507418565452098846435546875p-869 == -1.1058104966411981262552899352158419787883758544921875p925
; [HW: -1.1058104966411981262552899352158419787883758544921875p925] 

; mpf : - 476528113245187 925
; mpfd: - 476528113245187 925 (-3.13637e+278) class: Neg. norm. non-zero
; hwf : - 476528113245187 925 (-3.13637e+278) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000110111 #b1011011100011000011000110000101111001111011010111100)))
(assert (= y (fp #b0 #b00010011010 #b1000110100010100011111001001111000010101111001101011)))
(assert (= r (fp #b1 #b11110011100 #b0001101100010110011001011000111010100101110000000011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
