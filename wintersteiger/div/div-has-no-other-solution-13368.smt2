(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.250135872758455501951857513631694018840789794921875p-273 {- 1126511823346974 -273 (-8.23699e-083)}
; Y = -1.42130449892081944796018433407880365848541259765625p537 {- 1897386784349316 537 (-6.39433e+161)}
; -1.250135872758455501951857513631694018840789794921875p-273 / -1.42130449892081944796018433407880365848541259765625p537 == 1.75913869787602816785465620341710746288299560546875p-811
; [HW: 1.75913869787602816785465620341710746288299560546875p-811] 

; mpf : + 3418856756877004 -811
; mpfd: + 3418856756877004 -811 (1.28817e-244) class: Pos. norm. non-zero
; hwf : + 3418856756877004 -811 (1.28817e-244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101110 #b0100000000001000111001111001000100001101110100011110)))
(assert (= y (fp #b1 #b11000011000 #b0110101111011010100111001001010010000101110010000100)))
(assert (= r (fp #b0 #b00011010100 #b1100001001010110111010011110100010000001011011001100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
