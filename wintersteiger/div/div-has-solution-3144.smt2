(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8086014132922072494835674660862423479557037353515625p780 {- 3641617023594041 780 (-1.15011e+235)}
; Y = -1.8113423483805963787318660251912660896778106689453125p-247 {- 3653961097836757 -247 (-8.00925e-075)}
; -1.8086014132922072494835674660862423479557037353515625p780 / -1.8113423483805963787318660251912660896778106689453125p-247 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001011 #b1100111100000000100000001001000110010110111000111001)))
(assert (= y (fp #b1 #b01100001000 #b1100111110110100001000011101010000100111100011010101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
