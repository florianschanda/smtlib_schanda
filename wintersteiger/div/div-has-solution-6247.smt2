(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 0.8375383373229878802845860263914801180362701416015625p-1022 {+ 3771937343876313 -1023 (1.86358e-308)}
; Y = -1.6533829048807024975076274131424725055694580078125p-846 {- 2942575006950984 -846 (-3.52369e-255)}
; 0.8375383373229878802845860263914801180362701416015625p-1022 / -1.6533829048807024975076274131424725055694580078125p-846 == -1.0131208383135172912403731970698572695255279541015625p-177
; [HW: -1.0131208383135172912403731970698572695255279541015625p-177] 

; mpf : - 59091002539545 -177
; mpfd: - 59091002539545 -177 (-5.28874e-054) class: Neg. norm. non-zero
; hwf : - 59091002539545 -177 (-5.28874e-054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1101011001101000111010011001011111110010110011011001)))
(assert (= y (fp #b1 #b00010110001 #b1010011101000100000110100010000000111010011001001000)))
(assert (= r (fp #b1 #b01101001110 #b0000001101011011111000110010001101110011111000011001)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
