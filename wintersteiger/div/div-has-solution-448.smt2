(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8437091309410671424728889178368262946605682373046875p687 {- 3799728127715275 687 (-1.18386e+207)}
; Y = 1.2474654287101973881846106451121158897876739501953125p926 {+ 1114485212526325 926 (7.07627e+278)}
; -1.8437091309410671424728889178368262946605682373046875p687 / 1.2474654287101973881846106451121158897876739501953125p926 == -1.477964109071422615926394428242929279804229736328125p-239
; [HW: -1.477964109071422615926394428242929279804229736328125p-239] 

; mpf : - 2152558983510530 -239
; mpfd: - 2152558983510530 -239 (-1.673e-072) class: Neg. norm. non-zero
; hwf : - 2152558983510530 -239 (-1.673e-072) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010101110 #b1101011111111101010100100101010010111010011111001011)))
(assert (= y (fp #b0 #b11110011101 #b0011111101011001111001001111001100110011011011110101)))
(assert (= r (fp #b1 #b01100010000 #b0111101001011011110110110001100100011111101000000010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
