(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.95375558214728339834209691616706550121307373046875p486 {+ 4295333284361036 486 (3.90345e+146)}
; Y = 1.2972528286636217931260262048454023897647857666015625p-663 {+ 1338707728404313 -663 (3.38951e-200)}
; 1.95375558214728339834209691616706550121307373046875p486 / 1.2972528286636217931260262048454023897647857666015625p-663 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100101 #b1111010000101001010100110110100110110011001101001100)))
(assert (= y (fp #b0 #b00101101000 #b0100110000011000110000101110100111000000111101011001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
