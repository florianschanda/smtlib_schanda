(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4348640957586564770309678351623006165027618408203125p-641 {+ 1958453779615493 -641 (1.57247e-193)}
; Y = -1.9670122180534235223348105137120001018047332763671875p-639 {- 4355035864888115 -639 (-8.62263e-193)}
; 1.4348640957586564770309678351623006165027618408203125p-641 / -1.9670122180534235223348105137120001018047332763671875p-639 == -1.4589274866615860037910579194431193172931671142578125p-3
; [HW: -1.4589274866615860037910579194431193172931671142578125p-3] 

; mpf : - 2066825657919197 -3
; mpfd: - 2066825657919197 -3 (-0.182366) class: Neg. norm. non-zero
; hwf : - 2066825657919197 -3 (-0.182366) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111110 #b0110111101010011010000001101110101111100111100000101)))
(assert (= y (fp #b1 #b00110000000 #b1111011110001110000111001101101101011111001100110011)))
(assert (= r (fp #b1 #b01111111100 #b0111010101111100010001011001001001110010011011011101)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
