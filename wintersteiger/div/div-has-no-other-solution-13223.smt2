(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7296089332278352657112918677739799022674560546875p-34 {- 3285866519811064 -34 (-1.00676e-010)}
; Y = -1.36424988463124474691312570939771831035614013671875p402 {- 1640435644695020 402 (-1.40913e+121)}
; -1.7296089332278352657112918677739799022674560546875p-34 / -1.36424988463124474691312570939771831035614013671875p402 == 1.2678094773637063052973417143221013247966766357421875p-436
; [HW: 1.2678094773637063052973417143221013247966766357421875p-436] 

; mpf : + 1206106662461475 -436
; mpfd: + 1206106662461475 -436 (7.14457e-132) class: Pos. norm. non-zero
; hwf : + 1206106662461475 -436 (7.14457e-132) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111011101 #b1011101011000111101001101010101100010101001111111000)))
(assert (= y (fp #b1 #b10110010001 #b0101110100111111011110101111111000010000000111101100)))
(assert (= r (fp #b0 #b01001001011 #b0100010010001111001010010111001011010110000000100011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
