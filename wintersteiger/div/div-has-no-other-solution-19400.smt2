(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8175667085161555380778963808552362024784088134765625p448 {- 3681993123823881 448 (-1.32108e+135)}
; Y = -1.0404199918747856212775104722823016345500946044921875p418 {- 182035460345603 418 (-7.04282e+125)}
; -1.8175667085161555380778963808552362024784088134765625p448 / -1.0404199918747856212775104722823016345500946044921875p418 == 1.746954809317907919563594987266696989536285400390625p30
; [HW: 1.746954809317907919563594987266696989536285400390625p30] 

; mpf : + 3363985400906730 30
; mpfd: + 3363985400906730 30 (1.87578e+009) class: Pos. norm. non-zero
; hwf : + 3363985400906730 30 (1.87578e+009) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111111 #b1101000101001100000011010100001101100000000100001001)))
(assert (= y (fp #b1 #b10110100001 #b0000101001011000111101101110111100110100111100000011)))
(assert (= r (fp #b0 #b10000011101 #b1011111100111000011011100010110110011100001111101010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
