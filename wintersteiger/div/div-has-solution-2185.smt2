(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.411827061272215022569298525922931730747222900390625p628 {+ 1854704199686634 628 (1.5726e+189)}
; Y = 1.7383676116221737917300060871639288961887359619140625p-394 {+ 3325312100564065 -394 (4.30847e-119)}
; 1.411827061272215022569298525922931730747222900390625p628 / 1.7383676116221737917300060871639288961887359619140625p-394 == 1.62431358227475897137992433272302150726318359375p1021
; [HW: 1.62431358227475897137992433272302150726318359375p1021] 

; mpf : + 2811658416494944 1021
; mpfd: + 2811658416494944 1021 (3.65002e+307) class: Pos. norm. non-zero
; hwf : + 2811658416494944 1021 (3.65002e+307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001110011 #b0110100101101101011111111000111111000101100111101010)))
(assert (= y (fp #b0 #b01001110101 #b1011110100000101101010001110100001010111110001100001)))
(assert (= r (fp #b0 #b11111111100 #b1001111111010011000000111101001001010001100101100000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
