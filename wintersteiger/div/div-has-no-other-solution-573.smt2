(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.592208534765614302841640892438590526580810546875p-296 {+ 2667070136496048 -296 (1.25061e-089)}
; Y = 1.9041345883667057936605715440236963331699371337890625p-985 {+ 4071860195261073 -985 (5.82307e-297)}
; 1.592208534765614302841640892438590526580810546875p-296 / 1.9041345883667057936605715440236963331699371337890625p-985 == 1.67236974160671092448637864436022937297821044921875p688
; [HW: 1.67236974160671092448637864436022937297821044921875p688] 

; mpf : + 3028084117755180 688
; mpfd: + 3028084117755180 688 (2.14768e+207) class: Pos. norm. non-zero
; hwf : + 3028084117755180 688 (2.14768e+207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011010111 #b1001011110011010111110101000000100111010111110110000)))
(assert (= y (fp #b0 #b00000100110 #b1110011101110101010111010100100000110111101010010001)))
(assert (= r (fp #b0 #b11010101111 #b1010110000100000011011000110001100000101010100101100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
