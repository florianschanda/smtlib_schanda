(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.504912395274693448499192527378909289836883544921875p630 {+ 2273923275213854 630 (6.70515e+189)}
; Y = 1.7891745324759227298017094653914682567119598388671875p779 {+ 3554126130388851 779 (5.68878e+234)}
; 1.504912395274693448499192527378909289836883544921875p630 / 1.7891745324759227298017094653914682567119598388671875p779 == 1.6822421378781224898801838207873515784740447998046875p-150
; [HW: 1.6822421378781224898801838207873515784740447998046875p-150] 

; mpf : + 3072545437924363 -150
; mpfd: + 3072545437924363 -150 (1.17866e-045) class: Pos. norm. non-zero
; hwf : + 3072545437924363 -150 (1.17866e-045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001110101 #b1000000101000001111100000101000100001100110000011110)))
(assert (= y (fp #b0 #b11100001010 #b1100101000000111010101111001011111010001111101110011)))
(assert (= r (fp #b0 #b01101101001 #b1010111010100111011010111011011000100011110000001011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
