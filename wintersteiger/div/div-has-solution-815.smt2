(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.276503185177739307931688017561100423336029052734375p18 {- 1245259641733222 18 (-334628)}
; Y = -1.1872435216719485762126851113862358033657073974609375p-830 {- 843269854429327 -830 (-1.65822e-250)}
; -1.276503185177739307931688017561100423336029052734375p18 / -1.1872435216719485762126851113862358033657073974609375p-830 == 1.0751822704242595118984127111616544425487518310546875p848
; [HW: 1.0751822704242595118984127111616544425487518310546875p848] 

; mpf : + 338590845067563 848
; mpfd: + 338590845067563 848 (2.01799e+255) class: Pos. norm. non-zero
; hwf : + 338590845067563 848 (2.01799e+255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010001 #b0100011011001000111010011010100110010100000001100110)))
(assert (= y (fp #b1 #b00011000001 #b0010111111101111001100010000000111111000000010001111)))
(assert (= r (fp #b0 #b11101001111 #b0001001100111111001001010011000010110110000100101011)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
