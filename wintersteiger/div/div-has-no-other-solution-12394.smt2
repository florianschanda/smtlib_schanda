(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5612300090099930915954473675810731947422027587890625p-508 {- 2527555259446545 -508 (-1.86307e-153)}
; Y = 1.89033395880691212909141540876589715480804443359375p-313 {+ 4009707685118108 -313 (1.13279e-094)}
; -1.5612300090099930915954473675810731947422027587890625p-508 / 1.89033395880691212909141540876589715480804443359375p-313 == -1.6518033776374270171771740933763794600963592529296875p-196
; [HW: -1.6518033776374270171771740933763794600963592529296875p-196] 

; mpf : - 2935461448646747 -196
; mpfd: - 2935461448646747 -196 (-1.64467e-059) class: Neg. norm. non-zero
; hwf : - 2935461448646747 -196 (-1.64467e-059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000011 #b1000111110101100110001010001011000111011010100010001)))
(assert (= y (fp #b0 #b01011000110 #b1110001111101100111011010010001110011000000010011100)))
(assert (= r (fp #b1 #b01100111011 #b1010011011011100100101100000111001100000000001011011)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
