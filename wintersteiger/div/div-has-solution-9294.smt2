(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.57272374631566247416003534453921020030975341796875p-237 {- 2579318450493452 -237 (-7.12104e-072)}
; Y = 1.8169492617562494896077396333566866815090179443359375p948 {+ 3679212390826047 948 (4.32293e+285)}
; -1.57272374631566247416003534453921020030975341796875p-237 / 1.8169492617562494896077396333566866815090179443359375p948 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010010 #b1001001010011110000001100000000000010001100000001100)))
(assert (= y (fp #b0 #b11110110011 #b1101000100100011100101100011100110111100000000111111)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
