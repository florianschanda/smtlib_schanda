(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.506313150564133618303230832680128514766693115234375p-445 {- 2280231716213414 -445 (-1.65793e-134)}
; Y = 1.1863166662231481307543390357750467956066131591796875p-484 {+ 839095668575483 -484 (2.3751e-146)}
; -1.506313150564133618303230832680128514766693115234375p-445 / 1.1863166662231481307543390357750467956066131591796875p-484 == -1.269739516818685132193422759883105754852294921875p39
; [HW: -1.269739516818685132193422759883105754852294921875p39] 

; mpf : - 1214798787431728 39
; mpfd: - 1214798787431728 39 (-6.98047e+011) class: Neg. norm. non-zero
; hwf : - 1214798787431728 39 (-6.98047e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001000010 #b1000000110011101101111010001011100110101001010100110)))
(assert (= y (fp #b0 #b01000011011 #b0010111110110010011100101111010000100000110011111011)))
(assert (= r (fp #b1 #b10000100110 #b0100010100001101101001100010001100101100110100110000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
