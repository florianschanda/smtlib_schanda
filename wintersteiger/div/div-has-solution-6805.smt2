(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.58375278787973439165170930209569633007049560546875p45 {+ 2628988837971660 45 (5.57233e+013)}
; Y = 1.7403479204548200076629882460110820829868316650390625p485 {+ 3334230618684849 485 (1.73854e+146)}
; 1.58375278787973439165170930209569633007049560546875p45 / 1.7403479204548200076629882460110820829868316650390625p485 == 1.820041578198730025661689069238491356372833251953125p-441
; [HW: 1.820041578198730025661689069238491356372833251953125p-441] 

; mpf : + 3693138946004114 -441
; mpfd: + 3693138946004114 -441 (3.20519e-133) class: Pos. norm. non-zero
; hwf : + 3693138946004114 -441 (3.20519e-133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101100 #b1001010101110000110100101001110011100100011011001100)))
(assert (= y (fp #b0 #b10111100100 #b1011110110000111011100001111101000000011110110110001)))
(assert (= r (fp #b0 #b01001000110 #b1101000111101110001111101010111110111001010010010010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
