(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3361165627743558648177213399321772158145904541015625p-68 {+ 1513734426863641 -68 (4.52694e-021)}
; Y = 1.3522176392753184615003192448057234287261962890625p-76 {+ 1586247228993640 -76 (1.78965e-023)}
; 1.3361165627743558648177213399321772158145904541015625p-68 / 1.3522176392753184615003192448057234287261962890625p-76 == 1.97618567302584313694069351186044514179229736328125p7
; [HW: 1.97618567302584313694069351186044514179229736328125p7] 

; mpf : + 4396349433283604 7
; mpfd: + 4396349433283604 7 (252.952) class: Pos. norm. non-zero
; hwf : + 4396349433283604 7 (252.952) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111011 #b0101011000001011101111000010110011000010100000011001)))
(assert (= y (fp #b0 #b01110110011 #b0101101000101010111011110110100111000011000001101000)))
(assert (= r (fp #b0 #b10000000110 #b1111100111100111010011011110010001111000010000010100)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
