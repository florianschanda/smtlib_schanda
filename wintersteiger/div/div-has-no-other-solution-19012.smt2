(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4720884069013069339604271590360440313816070556640625p-702 {+ 2126097173406657 -702 (6.99644e-212)}
; Y = -1.18274797376017826167071689269505441188812255859375p58 {- 823023706529052 58 (-3.40904e+017)}
; 1.4720884069013069339604271590360440313816070556640625p-702 / -1.18274797376017826167071689269505441188812255859375p58 == -1.2446340552343209129304568705265410244464874267578125p-760
; [HW: -1.2446340552343209129304568705265410244464874267578125p-760] 

; mpf : - 1101733839995421 -760
; mpfd: - 1101733839995421 -760 (-2.05232e-229) class: Neg. norm. non-zero
; hwf : - 1101733839995421 -760 (-2.05232e-229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000001 #b0111100011011010110010010010110001110110001111000001)))
(assert (= y (fp #b1 #b10000111001 #b0010111011001000100100100011101010110101110100011100)))
(assert (= r (fp #b1 #b00100000111 #b0011111010100000010101100110001010111000001000011101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
