(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8792040506659926091259649183484725654125213623046875p376 {- 3959583034961995 376 (-2.89236e+113)}
; Y = 0.2344504432906904245470514069893397390842437744140625p-1022 {+ 1055870929040801 -1023 (5.2167e-309)}
; -1.8792040506659926091259649183484725654125213623046875p376 / 0.2344504432906904245470514069893397390842437744140625p-1022 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101110111 #b1110000100010011100001000100010000011111000001001011)))
(assert (= y (fp #b0 #b00000000000 #b0011110000000100111100011011101001110111010110100001)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
