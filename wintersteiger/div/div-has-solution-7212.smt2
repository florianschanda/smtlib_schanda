(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.44903491956012242525275723892264068126678466796875p592 {+ 2022273496407308 592 (2.34875e+178)}
; Y = -1.1056144940676857491013151957304216921329498291015625p357 {- 475645396128153 357 (-3.24573e+107)}
; 1.44903491956012242525275723892264068126678466796875p592 / -1.1056144940676857491013151957304216921329498291015625p357 == -1.3106149813837484341405570376082323491573333740234375p235
; [HW: -1.3106149813837484341405570376082323491573333740234375p235] 

; mpf : - 1398885514415543 235
; mpfd: - 1398885514415543 235 (-7.23643e+070) class: Neg. norm. non-zero
; hwf : - 1398885514415543 235 (-7.23643e+070) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001111 #b0111001011110011111100111101011001000101110100001100)))
(assert (= y (fp #b1 #b10101100100 #b0001101100001001100011010010111000000001000110011001)))
(assert (= r (fp #b1 #b10011101010 #b0100111110000100011101101010001010110000110110110111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
