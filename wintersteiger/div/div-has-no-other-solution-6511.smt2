(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8171223917101524403250323302927426993846893310546875p-838 {+ 3679992098821931 -838 (9.91397e-253)}
; Y = 1.559369826111654422362562399939633905887603759765625p-739 {+ 2519177740438746 -739 (5.3924e-223)}
; 1.8171223917101524403250323302927426993846893310546875p-838 / 1.559369826111654422362562399939633905887603759765625p-739 == 1.1652927748648398420527882990427315235137939453125p-99
; [HW: 1.1652927748648398420527882990427315235137939453125p-99] 

; mpf : + 744412479288328 -99
; mpfd: + 744412479288328 -99 (1.83851e-030) class: Pos. norm. non-zero
; hwf : + 744412479288328 -99 (1.83851e-030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111001 #b1101000100101110111011101101110100111001011100101011)))
(assert (= y (fp #b0 #b00100011100 #b1000111100110010110111000110010110000100110011011010)))
(assert (= r (fp #b0 #b01110011100 #b0010101001010000101000001001011001001111010000001000)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
