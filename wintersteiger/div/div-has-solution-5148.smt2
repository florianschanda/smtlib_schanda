(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3137252696566232845754029767704196274280548095703125p793 {- 1412893007522277 793 (-6.8437e+238)}
; Y = 1.266177870100873459335844017914496362209320068359375p786 {+ 1198758556600566 786 (5.15313e+236)}
; -1.3137252696566232845754029767704196274280548095703125p793 / 1.266177870100873459335844017914496362209320068359375p786 == -1.0375519116851739109819163786596618592739105224609375p7
; [HW: -1.0375519116851739109819163786596618592739105224609375p7] 

; mpf : - 169118775472399 7
; mpfd: - 169118775472399 7 (-132.807) class: Neg. norm. non-zero
; hwf : - 169118775472399 7 (-132.807) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100011000 #b0101000001010000010011001001110100011010100111100101)))
(assert (= y (fp #b0 #b11100010001 #b0100010000100100001110111001111100000000100011110110)))
(assert (= r (fp #b1 #b10000000110 #b0000100110011101000000001000100010010111000100001111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
