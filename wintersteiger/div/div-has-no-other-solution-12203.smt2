(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8175519911132320682867202776833437383174896240234375p491 {+ 3681926842533559 491 (1.16202e+148)}
; Y = 1.6280799293702745700329614919610321521759033203125p88 {+ 2828620535870856 88 (5.03866e+026)}
; 1.8175519911132320682867202776833437383174896240234375p491 / 1.6280799293702745700329614919610321521759033203125p88 == 1.1163776165561130060410732767195440828800201416015625p403
; [HW: 1.1163776165561130060410732767195440828800201416015625p403] 

; mpf : + 524118190556377 403
; mpfd: + 524118190556377 403 (2.30621e+121) class: Pos. norm. non-zero
; hwf : + 524118190556377 403 (2.30621e+121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101010 #b1101000101001011000101100101100010011100011010110111)))
(assert (= y (fp #b0 #b10001010111 #b1010000011001001110110001010001111101011010110001000)))
(assert (= r (fp #b0 #b10110010010 #b0001110111001010111011000110100100011000010011011001)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
