(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3843215567180833236449188916594721376895904541015625p55 {+ 1730830419626009 55 (4.98754e+016)}
; Y = -1.86669324715021733851472163223661482334136962890625p-651 {- 3903239384910244 -651 (-1.99777e-196)}
; 1.3843215567180833236449188916594721376895904541015625p55 / -1.86669324715021733851472163223661482334136962890625p-651 == -1.483180548096431294879948836751282215118408203125p705
; [HW: -1.483180548096431294879948836751282215118408203125p705] 

; mpf : - 2176051736359760 705
; mpfd: - 2176051736359760 705 (-2.49655e+212) class: Neg. norm. non-zero
; hwf : - 2176051736359760 705 (-2.49655e+212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000110110 #b0110001001100010111001011100010101000000100000011001)))
(assert (= y (fp #b1 #b00101110100 #b1101110111011111100110111101000000101100100110100100)))
(assert (= r (fp #b1 #b11011000000 #b0111101110110001101110000110110000100011001101010000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
