(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1490491726970979424748975361580960452556610107421875p283 {+ 671257798618531 283 (1.78578e+085)}
; Y = 1.3586961683484519713971394594409503042697906494140625p-228 {+ 1615423930113313 -228 (3.1498e-069)}
; 1.1490491726970979424748975361580960452556610107421875p283 / 1.3586961683484519713971394594409503042697906494140625p-228 == 1.691399739639822374925870462902821600437164306640625p510
; [HW: 1.691399739639822374925870462902821600437164306640625p510] 

; mpf : + 3113787609805962 510
; mpfd: + 3113787609805962 510 (5.66949e+153) class: Pos. norm. non-zero
; hwf : + 3113787609805962 510 (5.66949e+153) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011010 #b0010011000101000000101100010101000111010110110100011)))
(assert (= y (fp #b0 #b01100011011 #b0101101111010011100000110001100001000001110100100001)))
(assert (= r (fp #b0 #b10111111101 #b1011000011111111100100101100011000110111010010001010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
