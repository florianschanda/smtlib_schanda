(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 0.0054472475930380515052320333779789507389068603515625p-1022 {+ 24532222230201 -1023 (1.21205e-310)}
; Y = 1.09587754858764352405842146254144608974456787109375p-113 {+ 431794092092508 -113 (1.05529e-034)}
; 0.0054472475930380515052320333779789507389068603515625p-1022 / 1.09587754858764352405842146254144608974456787109375p-113 == 1.2724919728622541281737312601762823760509490966796875p-917
; [HW: 1.2724919728622541281737312601762823760509490966796875p-917] 

; mpf : + 1227194747443899 -917
; mpfd: + 1227194747443899 -917 (1.14855e-276) class: Pos. norm. non-zero
; hwf : + 1227194747443899 -917 (1.14855e-276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0000000101100100111111011010011001000011111010111001)))
(assert (= y (fp #b0 #b01110001110 #b0001100010001011011011100101011110011010110001011100)))
(assert (= r (fp #b0 #b00001101010 #b0100010111000010000010001010111111011101101010111011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
