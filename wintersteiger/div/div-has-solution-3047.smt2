(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.221245862072128485209532300359569489955902099609375p786 {- 996402781985302 786 (-4.97027e+236)}
; Y = -1.0997231820172483907072091824375092983245849609375p733 {- 449113285373080 733 (-4.96901e+220)}
; -1.221245862072128485209532300359569489955902099609375p786 / -1.0997231820172483907072091824375092983245849609375p733 == 1.1105029720588124320101997000165283679962158203125p53
; [HW: 1.1105029720588124320101997000165283679962158203125p53] 

; mpf : + 497661143787400 53
; mpfd: + 497661143787400 53 (1.00025e+016) class: Pos. norm. non-zero
; hwf : + 497661143787400 53 (1.00025e+016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010001 #b0011100010100011100100011001110111111001101000010110)))
(assert (= y (fp #b1 #b11011011100 #b0001100110000111011101010101110101101010110010011000)))
(assert (= r (fp #b0 #b10000110100 #b0001110001001001111011000011101100011010011110001000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
