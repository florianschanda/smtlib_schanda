(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5466806884735546656628457640181295573711395263671875p965 {- 2462030944900147 965 (-4.82332e+290)}
; Y = 1.6801780727211339527826794437714852392673492431640625p-138 {+ 3063249714852481 -138 (4.82187e-042)}
; -1.5466806884735546656628457640181295573711395263671875p965 / 1.6801780727211339527826794437714852392673492431640625p-138 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111000100 #b1000101111110011010000111111111001011001010000110011)))
(assert (= y (fp #b0 #b01101110101 #b1010111000100000001001100111000111001011001010000001)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
