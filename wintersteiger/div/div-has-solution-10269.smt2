(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1305895463245494436677063276874832808971405029296875p12 {+ 588123032165723 12 (4630.89)}
; Y = 1.241832864219097221081256066099740564823150634765625p14 {+ 1089118397183066 14 (20346.2)}
; 1.1305895463245494436677063276874832808971405029296875p12 / 1.241832864219097221081256066099740564823150634765625p14 == 1.8208401128689712944463963140151463449001312255859375p-3
; [HW: 1.8208401128689712944463963140151463449001312255859375p-3] 

; mpf : + 3696735226447455 -3
; mpfd: + 3696735226447455 -3 (0.227605) class: Pos. norm. non-zero
; hwf : + 3696735226447455 -3 (0.227605) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001011 #b0010000101101110010100010000011010101001110101011011)))
(assert (= y (fp #b0 #b10000001101 #b0011110111101000110000100011001011101011010001011010)))
(assert (= r (fp #b0 #b01111111100 #b1101001000100010100100111110000000000100011001011111)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
