(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4856574455243691801342720282264053821563720703125p188 {+ 2187206690693256 188 (5.82851e+056)}
; Y = 1.7396213996869207552009584105690009891986846923828125p252 {+ 3330958660025261 252 (1.25896e+076)}
; 1.4856574455243691801342720282264053821563720703125p188 / 1.7396213996869207552009584105690009891986846923828125p252 == 1.7080238789793487086399181862361729145050048828125p-65
; [HW: 1.7080238789793487086399181862361729145050048828125p-65] 

; mpf : + 3188656077540808 -65
; mpfd: + 3188656077540808 -65 (4.62961e-020) class: Pos. norm. non-zero
; hwf : + 3188656077540808 -65 (4.62961e-020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111011 #b0111110001010100000010111101110110010110000010001000)))
(assert (= y (fp #b0 #b10011111011 #b1011110101010111110100111111101100010011101110101101)))
(assert (= r (fp #b0 #b01110111110 #b1011010101000001000011011000110100000000110111001000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
