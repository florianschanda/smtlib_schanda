(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1979733294083338979163499971036799252033233642578125p-696 {+ 891592612552669 -696 (3.64393e-210)}
; Y = 1.51469524368757646470839972607791423797607421875p140 {+ 2317981307680736 140 (2.11118e+042)}
; 1.1979733294083338979163499971036799252033233642578125p-696 / 1.51469524368757646470839972607791423797607421875p140 == 1.581801137094518860948255678522400557994842529296875p-837
; [HW: 1.581801137094518860948255678522400557994842529296875p-837] 

; mpf : + 2620199384222606 -837
; mpfd: + 2620199384222606 -837 (1.72602e-252) class: Pos. norm. non-zero
; hwf : + 2620199384222606 -837 (1.72602e-252) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000111 #b0011001010101110011000010100111101001001111111011101)))
(assert (= y (fp #b0 #b10010001011 #b1000001111000011000100010100011100001011011111100000)))
(assert (= r (fp #b0 #b00010111010 #b1001010011110000111010110101100010011000101110001110)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
