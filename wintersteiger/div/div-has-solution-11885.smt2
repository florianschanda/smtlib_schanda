(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0309646791815143540560484325396828353404998779296875p508 {+ 139452517623515 508 (8.63936e+152)}
; Y = 1.6308824547378097946648267679847776889801025390625p730 {+ 2841241988071784 730 (9.21127e+219)}
; 1.0309646791815143540560484325396828353404998779296875p508 / 1.6308824547378097946648267679847776889801025390625p730 == 1.2643028639942761603975895923213101923465728759765625p-223
; [HW: 1.2643028639942761603975895923213101923465728759765625p-223] 

; mpf : + 1190314279797577 -223
; mpfd: + 1190314279797577 -223 (9.37912e-068) class: Pos. norm. non-zero
; hwf : + 1190314279797577 -223 (9.37912e-068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111011 #b0000011111101101010011010001110001101010011011011011)))
(assert (= y (fp #b0 #b11011011001 #b1010000110000001100000110011011010111000000101101000)))
(assert (= r (fp #b0 #b01100100000 #b0100001110101001010110100011110100011000001101001001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
