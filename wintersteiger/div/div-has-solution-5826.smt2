(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3538770478030681676528956813854165375232696533203125p729 {- 1593720540620869 729 (-3.82337e+219)}
; Y = 1.53312294159274831173433994990773499011993408203125p-271 {+ 2400972281099764 -271 (4.04062e-082)}
; -1.3538770478030681676528956813854165375232696533203125p729 / 1.53312294159274831173433994990773499011993408203125p-271 == -1.7661689236696658245051594349206425249576568603515625p999
; [HW: -1.7661689236696658245051594349206425249576568603515625p999] 

; mpf : - 3450518079141561 999
; mpfd: - 3450518079141561 999 (-9.46233e+300) class: Neg. norm. non-zero
; hwf : - 3450518079141561 999 (-9.46233e+300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011000 #b0101101010010111101011111010101100011110100001000101)))
(assert (= y (fp #b0 #b01011110000 #b1000100001111010101111101011111011100011010111110100)))
(assert (= r (fp #b1 #b11111100110 #b1100010000100011101001011000011001011111011010111001)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
