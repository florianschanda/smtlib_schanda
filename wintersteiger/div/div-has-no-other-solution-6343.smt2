(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8701409362290919435878322474309243261814117431640625p685 {+ 3918766396161153 685 (3.00207e+206)}
; Y = 1.080925298294144187849497029674239456653594970703125p-303 {+ 364455143242354 -303 (6.63295e-092)}
; 1.8701409362290919435878322474309243261814117431640625p685 / 1.080925298294144187849497029674239456653594970703125p-303 == 1.730129676102912572588365947012789547443389892578125p988
; [HW: 1.730129676102912572588365947012789547443389892578125p988] 

; mpf : + 3288211737229218 988
; mpfd: + 3288211737229218 988 (4.526e+297) class: Pos. norm. non-zero
; hwf : + 3288211737229218 988 (4.526e+297) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101100 #b1101111011000001100011100111000000000011110010000001)))
(assert (= y (fp #b0 #b01011010000 #b0001010010110111100001010011010110010111101001110010)))
(assert (= r (fp #b0 #b11111011011 #b1011101011101001110001110100100010110011011110100010)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
