(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3258448348999289923000333146774210035800933837890625p-767 {- 1467474677035921 -767 (-1.70799e-231)}
; Y = -1.341107736391626392702391967759467661380767822265625p119 {- 1536212674506522 119 (-8.91319e+035)}
; -1.3258448348999289923000333146774210035800933837890625p-767 / -1.341107736391626392702391967759467661380767822265625p119 == 1.97723836634815963719802311970852315425872802734375p-887
; [HW: 1.97723836634815963719802311970852315425872802734375p-887] 

; mpf : + 4401090342537724 -887
; mpfd: + 4401090342537724 -887 (1.91625e-267) class: Pos. norm. non-zero
; hwf : + 4401090342537724 -887 (1.91625e-267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000000 #b0101001101101010100100010010110101110111001110010001)))
(assert (= y (fp #b1 #b10001110110 #b0101011101010010110101100010110000110110111100011010)))
(assert (= r (fp #b0 #b00010001000 #b1111101000101100010010110010011111011100100111111100)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
