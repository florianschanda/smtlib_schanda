(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0457470740642162976286044795415364205837249755859375p186 {- 206026505708895 186 (-1.02567e+056)}
; Y = 1.7350340139944686601580770002328790724277496337890625p562 {+ 3310298911530129 562 (2.61918e+169)}
; -1.0457470740642162976286044795415364205837249755859375p186 / 1.7350340139944686601580770002328790724277496337890625p562 == -1.2054484991411242855718910504947416484355926513671875p-377
; [HW: -1.2054484991411242855718910504947416484355926513671875p-377] 

; mpf : - 925257784175795 -377
; mpfd: - 925257784175795 -377 (-3.91598e-114) class: Neg. norm. non-zero
; hwf : - 925257784175795 -377 (-3.91598e-114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010111001 #b0000101110110110000101001000101011111110010101011111)))
(assert (= y (fp #b0 #b11000110001 #b1011110000101011001100000110101110001101110010010001)))
(assert (= r (fp #b1 #b01010000110 #b0011010010011000010001011101100011010010110010110011)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
