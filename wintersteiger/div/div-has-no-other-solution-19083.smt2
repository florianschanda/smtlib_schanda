(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0348219246638439283714205885189585387706756591796875p-956 {- 156824006940411 -956 (-1.69899e-288)}
; Y = 1.389900900609760459047947733779437839984893798828125p-157 {+ 1755957550697538 -157 (7.60807e-048)}
; -1.0348219246638439283714205885189585387706756591796875p-956 / 1.389900900609760459047947733779437839984893798828125p-157 == -1.4890585713123278832625828727032057940959930419921875p-800
; [HW: -1.4890585713123278832625828727032057940959930419921875p-800] 

; mpf : - 2202523999524547 -800
; mpfd: - 2202523999524547 -800 (-2.23314e-241) class: Neg. norm. non-zero
; hwf : - 2202523999524547 -800 (-2.23314e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001000011 #b0000100011101010000101101111001110011101011011111011)))
(assert (= y (fp #b0 #b01101100010 #b0110001111010000100010111010000011001100110001000010)))
(assert (= r (fp #b1 #b00011011111 #b0111110100110010111100010100100110011101011011000011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
