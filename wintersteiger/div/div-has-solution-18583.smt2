(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3818964475792421264799259006395004689693450927734375p-464 {+ 1719908699011991 -464 (2.90107e-140)}
; Y = 1.4643969264017437925673448262386955320835113525390625p8 {+ 2091457824694897 8 (374.886)}
; 1.3818964475792421264799259006395004689693450927734375p-464 / 1.4643969264017437925673448262386955320835113525390625p8 == 1.887324976807731591321726227761246263980865478515625p-473
; [HW: 1.887324976807731591321726227761246263980865478515625p-473] 

; mpf : + 3996156434907834 -473
; mpfd: + 3996156434907834 -473 (7.73853e-143) class: Pos. norm. non-zero
; hwf : + 3996156434907834 -473 (7.73853e-143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101111 #b0110000111000011111101110011000011001111101110010111)))
(assert (= y (fp #b0 #b10000000111 #b0111011011100010101101111000101101000010001001110001)))
(assert (= r (fp #b0 #b01000100110 #b1110001100100111101110101100110001010000001010111010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
