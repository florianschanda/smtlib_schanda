(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7738688683620462693824038069578818976879119873046875p913 {+ 3485195547188939 913 (1.22831e+275)}
; Y = 1.5512441420586646767532101875985972583293914794921875p756 {+ 2482582912765571 756 (5.87972e+227)}
; 1.7738688683620462693824038069578818976879119873046875p913 / 1.5512441420586646767532101875985972583293914794921875p756 == 1.1435136612396388233747757112723775207996368408203125p157
; [HW: 1.1435136612396388233747757112723775207996368408203125p157] 

; mpf : + 646328071281413 157
; mpfd: + 646328071281413 157 (2.08906e+047) class: Pos. norm. non-zero
; hwf : + 646328071281413 157 (2.08906e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110010000 #b1100011000011100010001010010100100000001111011001011)))
(assert (= y (fp #b0 #b11011110011 #b1000110100011110010101100000101001000000111010000011)))
(assert (= r (fp #b0 #b10010011100 #b0010010010111101010011111011000110001101101100000101)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
