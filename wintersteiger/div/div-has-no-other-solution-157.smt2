(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.018199055986141132734701386652886867523193359375p884 {- 81961261757680 884 (-1.31325e+266)}
; Y = 1.3654056958247877684442528334329836070537567138671875p728 {+ 1645640955555571 728 (1.92796e+219)}
; -1.018199055986141132734701386652886867523193359375p884 / 1.3654056958247877684442528334329836070537567138671875p728 == -1.4914234781642494720443892219918780028820037841796875p155
; [HW: -1.4914234781642494720443892219918780028820037841796875p155] 

; mpf : - 2213174593141627 155
; mpfd: - 2213174593141627 155 (-6.81162e+046) class: Neg. norm. non-zero
; hwf : - 2213174593141627 155 (-6.81162e+046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110011 #b0000010010101000101100010111111001000111010011110000)))
(assert (= y (fp #b0 #b11011010111 #b0101110110001011001110100100100101010110111011110011)))
(assert (= r (fp #b1 #b10010011010 #b0111110111001101111011011101011100110011101101111011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
