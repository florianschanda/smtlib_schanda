(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5310186600104029874813704736880026757717132568359375p1014 {- 2391495439349631 1014 (-2.68779e+305)}
; Y = -1.4900161349176455072296221260330639779567718505859375p403 {- 2206836482620639 403 (-3.07808e+121)}
; -1.5310186600104029874813704736880026757717132568359375p1014 / -1.4900161349176455072296221260330639779567718505859375p403 == 1.027518175227695618190182358375750482082366943359375p611
; [HW: 1.027518175227695618190182358375750482082366943359375p611] 

; mpf : + 123930843701366 611
; mpfd: + 123930843701366 611 (8.73206e+183) class: Pos. norm. non-zero
; hwf : + 123930843701366 611 (8.73206e+183) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110101 #b1000011111110000110101101100001001001111011101111111)))
(assert (= y (fp #b1 #b10110010010 #b0111110101110001101100101000100111111011110011011111)))
(assert (= r (fp #b0 #b11001100010 #b0000011100001011011011100101111010100110000001110110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
