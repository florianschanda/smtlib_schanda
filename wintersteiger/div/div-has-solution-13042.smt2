(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.17177841477707911366223925142548978328704833984375p769 {+ 773621204780348 769 (3.63841e+231)}
; Y = 1.4644875818357039332084923444199375808238983154296875p-195 {+ 2091866100473499 -195 (2.91633e-059)}
; 1.17177841477707911366223925142548978328704833984375p769 / 1.4644875818357039332084923444199375808238983154296875p-195 == 1.600257222131279188914732003468088805675506591796875p963
; [HW: 1.600257222131279188914732003468088805675506591796875p963] 

; mpf : + 2703318201916878 963
; mpfd: + 2703318201916878 963 (1.2476e+290) class: Pos. norm. non-zero
; hwf : + 2703318201916878 963 (1.2476e+290) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100000000 #b0010101111111001101010111001000110100000010100111100)))
(assert (= y (fp #b0 #b01100111100 #b0111011011101000101010000111110101100001111010011011)))
(assert (= r (fp #b0 #b11111000010 #b1001100110101010011101010001001000111101110111001110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
