(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.717262088153322263650579770910553634166717529296875p656 {- 3230261272934286 656 (-5.13468e+197)}
; Y = -1.9564860633459211225471108264173381030559539794921875p845 {- 4307630278469763 845 (-4.59011e+254)}
; -1.717262088153322263650579770910553634166717529296875p656 / -1.9564860633459211225471108264173381030559539794921875p845 == 1.7554554773740778106372317779459990561008453369140625p-190
; [HW: 1.7554554773740778106372317779459990561008453369140625p-190] 

; mpf : + 3402269006396897 -190
; mpfd: + 3402269006396897 -190 (1.11864e-057) class: Pos. norm. non-zero
; hwf : + 3402269006396897 -190 (1.11864e-057) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001111 #b1011011110011110011111001111101101000111011110001110)))
(assert (= y (fp #b1 #b11101001100 #b1111010011011100010001010100100100100110100010000011)))
(assert (= r (fp #b0 #b01101000001 #b1100000101100101100001111011100011100111110111100001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
