(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.775880211134521768912009065388701856136322021484375p-345 {+ 3494253829749574 -345 (2.47779e-104)}
; Y = -1.7992834840935516549365047467290423810482025146484375p697 {- 3599652801127111 697 (-1.18306e+210)}
; 1.775880211134521768912009065388701856136322021484375p-345 / -1.7992834840935516549365047467290423810482025146484375p697 == -0.000000941269878484973787635681219398975372314453125p-1022
; [HW: -0.000000941269878484973787635681219398975372314453125p-1022] 

; mpf : - 4239102674 -1023
; mpfd: - 4239102674 -1023 (-2.0944e-314) class: Neg. denorm.
; hwf : - 4239102674 -1023 (-2.0944e-314) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100110 #b1100011010100000000101011110010001101111101101000110)))
(assert (= y (fp #b1 #b11010111000 #b1100110010011101110101111010100001101010001011000111)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000011111100101010111001001011010010)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
