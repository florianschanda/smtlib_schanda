(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.357847890659332978913198530790396034717559814453125p-126 {- 1611603627028690 -126 (-1.59614e-038)}
; Y = 1.2986604359529210217516492775757797062397003173828125p634 {+ 1345047028067885 634 (9.25791e+190)}
; -1.357847890659332978913198530790396034717559814453125p-126 / 1.2986604359529210217516492775757797062397003173828125p634 == -1.04557577413450797365612743305973708629608154296875p-760
; [HW: -1.04557577413450797365612743305973708629608154296875p-760] 

; mpf : - 205255039409292 -760
; mpfd: - 205255039409292 -760 (-1.72409e-229) class: Neg. norm. non-zero
; hwf : - 205255039409292 -760 (-1.72409e-229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000001 #b0101101110011011111010110101101101010011000011010010)))
(assert (= y (fp #b0 #b11001111001 #b0100110001110101000000101010010100000110111000101101)))
(assert (= r (fp #b1 #b00100000111 #b0000101110101010110110101001101101100101110010001100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
