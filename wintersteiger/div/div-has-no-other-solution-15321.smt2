(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6973073806796887819103858419111929833889007568359375p34 {- 3140393259791743 34 (-2.91595e+010)}
; Y = -1.96707286204608866597709493362344801425933837890625p782 {- 4355308981150884 782 (-5.00354e+235)}
; -1.6973073806796887819103858419111929833889007568359375p34 / -1.96707286204608866597709493362344801425933837890625p782 == 1.725718872369782719289332817425020039081573486328125p-749
; [HW: 1.725718872369782719289332817425020039081573486328125p-749] 

; mpf : + 3268347243180290 -749
; mpfd: + 3268347243180290 -749 (5.82778e-226) class: Pos. norm. non-zero
; hwf : + 3268347243180290 -749 (5.82778e-226) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100001 #b1011001010000010101111001000101101000111010101111111)))
(assert (= y (fp #b1 #b11100001101 #b1111011110010010000101100100101101010110010010100100)))
(assert (= r (fp #b0 #b00100010010 #b1011100111001000101101100100011011101011000100000010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
