(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.371874788189444860364574196864850819110870361328125p479 {- 1674775157518466 479 (-2.14132e+144)}
; Y = 1.5318030987407980081371761116315610706806182861328125p85 {+ 2395028237323533 85 (5.92588e+025)}
; -1.371874788189444860364574196864850819110870361328125p479 / 1.5318030987407980081371761116315610706806182861328125p85 == -1.7911894672587873600377861293964087963104248046875p393
; [HW: -1.7911894672587873600377861293964087963104248046875p393] 

; mpf : - 3563200589926136 393
; mpfd: - 3563200589926136 393 (-3.61351e+118) class: Neg. norm. non-zero
; hwf : - 3563200589926136 393 (-3.61351e+118) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011110 #b0101111100110011001011111010010101111011000010000010)))
(assert (= y (fp #b0 #b10001010100 #b1000100000100100001111110111010100000000110100001101)))
(assert (= r (fp #b1 #b10110001000 #b1100101010001011011001001001011011010000111011111000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
