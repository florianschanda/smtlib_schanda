(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6458888951550054713379722670651972293853759765625p-989 {+ 2908824987542824 -989 (3.14583e-298)}
; Y = -1.7166343089048314851652321522124111652374267578125p800 {- 3227434006544712 800 (-1.14465e+241)}
; 1.6458888951550054713379722670651972293853759765625p-989 / -1.7166343089048314851652321522124111652374267578125p800 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100010 #b1010010101011000111110011000000110001010010100101000)))
(assert (= y (fp #b1 #b11100011111 #b1011011101110101010110001001011111110000000101001000)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
