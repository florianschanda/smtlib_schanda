(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6672383760676063868544360957457683980464935302734375p-272 {- 3004974501825367 -272 (-2.19704e-082)}
; Y = -1.657633224987744569034475716762244701385498046875p-194 {- 2961716747001264 -194 (-6.60191e-059)}
; -1.6672383760676063868544360957457683980464935302734375p-272 / -1.657633224987744569034475716762244701385498046875p-194 == 1.0057944971994230431988626150996424257755279541015625p-78
; [HW: 1.0057944971994230431988626150996424257755279541015625p-78] 

; mpf : + 26096095428121 -78
; mpfd: + 26096095428121 -78 (3.32789e-024) class: Pos. norm. non-zero
; hwf : + 26096095428121 -78 (3.32789e-024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101111 #b1010101011010000001000100101101111011000101101010111)))
(assert (= y (fp #b1 #b01100111101 #b1010100001011010101001101010101000010101110110110000)))
(assert (= r (fp #b0 #b01110110001 #b0000000101111011101111111000011111110111111000011001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
