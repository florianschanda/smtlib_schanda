(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3745031305653279130041255484684370458126068115234375p1021 {+ 1686612159263095 1021 (3.08867e+307)}
; Y = 1.41182446059661259596396121196448802947998046875p702 {+ 1854692487284960 702 (2.97056e+211)}
; 1.3745031305653279130041255484684370458126068115234375p1021 / 1.41182446059661259596396121196448802947998046875p702 == 1.947130353563199633981639635749161243438720703125p318
; [HW: 1.947130353563199633981639635749161243438720703125p318] 

; mpf : + 4265495907378512 318
; mpfd: + 4265495907378512 318 (1.03976e+096) class: Pos. norm. non-zero
; hwf : + 4265495907378512 318 (1.03976e+096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111100 #b0101111111011111011011111110101000000111000101110111)))
(assert (= y (fp #b0 #b11010111101 #b0110100101101101010100111110110111110100100011100000)))
(assert (= r (fp #b0 #b10100111101 #b1111001001110111001000101000010110011010010101010000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
