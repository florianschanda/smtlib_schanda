(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.933881139977121410566951453802175819873809814453125p-196 {- 4205826754009298 -196 (-1.92553e-059)}
; Y = -1.638863088078301277761283927247859537601470947265625p-116 {- 2877183565410202 -116 (-1.97271e-035)}
; -1.933881139977121410566951453802175819873809814453125p-196 / -1.638863088078301277761283927247859537601470947265625p-116 == 1.180013848652087471435834231670014560222625732421875p-80
; [HW: 1.180013848652087471435834231670014560222625732421875p-80] 

; mpf : + 810710301711070 -80
; mpfd: + 810710301711070 -80 (9.76085e-025) class: Pos. norm. non-zero
; hwf : + 810710301711070 -80 (9.76085e-025) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111011 #b1110111100010010110101011001101010001101100011010010)))
(assert (= y (fp #b1 #b01110001011 #b1010001110001100100010000000010111101010111110011010)))
(assert (= r (fp #b0 #b01110101111 #b0010111000010101011000110011100011001001101011011110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
