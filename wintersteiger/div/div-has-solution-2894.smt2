(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.989057947689523597745164806838147342205047607421875p407 {- 4454321004662366 407 (-6.57439e+122)}
; Y = -1.5023299816929942540610909418319351971149444580078125p274 {- 2262293118369597 274 (-4.5602e+082)}
; -1.989057947689523597745164806838147342205047607421875p407 / -1.5023299816929942540610909418319351971149444580078125p274 == 1.3239820624813927185670081598800607025623321533203125p133
; [HW: 1.3239820624813927185670081598800607025623321533203125p133] 

; mpf : + 1459085495865925 133
; mpfd: + 1459085495865925 133 (1.44169e+040) class: Pos. norm. non-zero
; hwf : + 1459085495865925 133 (1.44169e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010110 #b1111110100110010111001101101001100101100111001011110)))
(assert (= y (fp #b1 #b10100010001 #b1000000010011000101100101001101100101011111100111101)))
(assert (= r (fp #b0 #b10010000100 #b0101001011110000011111010000101011011001001001000101)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
