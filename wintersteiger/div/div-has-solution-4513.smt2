(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.890566136932544605286921068909578025341033935546875p-87 {+ 4010753322438190 -87 (1.22175e-026)}
; Y = 1.9917579345987659333871988565078936517238616943359375p-342 {+ 4466480664700735 -342 (2.2232e-103)}
; 1.890566136932544605286921068909578025341033935546875p-87 / 1.9917579345987659333871988565078936517238616943359375p-342 == 1.8983894619838868056405090101179666817188262939453125p254
; [HW: 1.8983894619838868056405090101179666817188262939453125p254] 

; mpf : + 4045986446224213 254
; mpfd: + 4045986446224213 254 (5.49546e+076) class: Pos. norm. non-zero
; hwf : + 4045986446224213 254 (5.49546e+076) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110101000 #b1110001111111100001001000111000100001100111000101110)))
(assert (= y (fp #b0 #b01010101001 #b1111110111100011110110010001011010100110011100111111)))
(assert (= r (fp #b0 #b10011111101 #b1110010111111100110110100000111001001010101101010101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
