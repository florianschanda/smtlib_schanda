(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7947249365536548371125036283046938478946685791015625p287 {- 3579122928125081 287 (-4.46279e+086)}
; Y = -1.2973957341255177855288138744072057306766510009765625p632 {- 1339351317389257 632 (-2.31222e+190)}
; -1.7947249365536548371125036283046938478946685791015625p287 / -1.2973957341255177855288138744072057306766510009765625p632 == 1.38332884049703697115774048143066465854644775390625p-345
; [HW: 1.38332884049703697115774048143066465854644775390625p-345] 

; mpf : + 1726359623222820 -345
; mpfd: + 1726359623222820 -345 (1.93009e-104) class: Pos. norm. non-zero
; hwf : + 1726359623222820 -345 (1.93009e-104) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011110 #b1100101101110011000101111110101111010000010010011001)))
(assert (= y (fp #b1 #b11001110111 #b0100110000100010001000000111100000001001111111001001)))
(assert (= r (fp #b0 #b01010100110 #b0110001000100001110101101100000110001100011000100100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
