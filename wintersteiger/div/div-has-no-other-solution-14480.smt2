(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0691114188095223180852144650998525321483612060546875p-562 {- 311250159997611 -562 (-7.08215e-170)}
; Y = -1.4323925336654219631071782714570872485637664794921875p-665 {- 1947322853493379 -665 (-9.35653e-201)}
; -1.0691114188095223180852144650998525321483612060546875p-562 / -1.4323925336654219631071782714570872485637664794921875p-665 == 1.49276318283189990410164682543836534023284912109375p102
; [HW: 1.49276318283189990410164682543836534023284912109375p102] 

; mpf : + 2219208086583644 102
; mpfd: + 2219208086583644 102 (7.56921e+030) class: Pos. norm. non-zero
; hwf : + 2219208086583644 102 (7.56921e+030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001101 #b0001000110110001010010010011001110010001001010101011)))
(assert (= y (fp #b1 #b00101100110 #b0110111010110001010001101110111100100000101010000011)))
(assert (= r (fp #b0 #b10001100101 #b0111111000100101101110100101101011101111100101011100)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
