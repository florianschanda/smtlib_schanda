(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.643489276287886990957076704944483935832977294921875p522 {- 2898018064907038 522 (-2.25644e+157)}
; Y = -1.7350430793685018837635425370535813271999359130859375p1 {- 3310339738345247 1 (-3.47009)}
; -1.643489276287886990957076704944483935832977294921875p522 / -1.7350430793685018837635425370535813271999359130859375p1 == 1.8944650952252579667600684842909686267375946044921875p520
; [HW: 1.8944650952252579667600684842909686267375946044921875p520] 

; mpf : + 4028312669552387 520
; mpfd: + 4028312669552387 520 (6.50256e+156) class: Pos. norm. non-zero
; hwf : + 4028312669552387 520 (6.50256e+156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001001 #b1010010010111011101101101001010011111011101100011110)))
(assert (= y (fp #b1 #b10000000000 #b1011110000101011110010001000001100001001111100011111)))
(assert (= r (fp #b0 #b11000000111 #b1110010011111011101010100001101101100111111100000011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
