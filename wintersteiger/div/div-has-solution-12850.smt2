(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.795562979739751430230398909770883619785308837890625p-475 {+ 3582897139105706 -475 (1.84057e-143)}
; Y = -1.3498889828157027981347937384271062910556793212890625p-468 {- 1575759892629841 -468 (-1.77117e-141)}
; 1.795562979739751430230398909770883619785308837890625p-475 / -1.3498889828157027981347937384271062910556793212890625p-468 == -1.330156036976038791408427641727030277252197265625p-7
; [HW: -1.330156036976038791408427641727030277252197265625p-7] 

; mpf : - 1486890605099408 -7
; mpfd: - 1486890605099408 -7 (-0.0103918) class: Neg. norm. non-zero
; hwf : - 1486890605099408 -7 (-0.0103918) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000100100 #b1100101110101010000000111111001111100011111110101010)))
(assert (= y (fp #b1 #b01000101011 #b0101100110010010010100110000101001101100100101010001)))
(assert (= r (fp #b1 #b01111111000 #b0101010010000101000110110010010101100011100110010000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
