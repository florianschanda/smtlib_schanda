(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7925934150992801630053463668446056544780731201171875p-577 {+ 3569523408897427 -577 (3.62388e-174)}
; Y = 1.12009985676772405582823921577073633670806884765625p770 {+ 540881670186372 770 (6.9559e+231)}
; 1.7925934150992801630053463668446056544780731201171875p-577 / 1.12009985676772405582823921577073633670806884765625p770 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111110 #b1100101011100111011001101110110011100000010110010011)))
(assert (= y (fp #b0 #b11100000001 #b0001111010111110110111010011110100010010010110000100)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
