(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0287788662418060336989356073900125920772552490234375p-674 {- 129608491282743 -674 (-1.31252e-203)}
; Y = 1.872504018071035059023188296123407781124114990234375p-364 {+ 3929408770663974 -364 (4.98315e-110)}
; -1.0287788662418060336989356073900125920772552490234375p-674 / 1.872504018071035059023188296123407781124114990234375p-364 == -1.0988268717325428980302604031749069690704345703125p-311
; [HW: -1.0988268717325428980302604031749069690704345703125p-311] 

; mpf : - 445076662708872 -311
; mpfd: - 445076662708872 -311 (-2.63391e-094) class: Neg. norm. non-zero
; hwf : - 445076662708872 -311 (-2.63391e-094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101011101 #b0000011101011110000011010100000101010011000100110111)))
(assert (= y (fp #b0 #b01010010011 #b1101111101011100011011000101111100111110011000100110)))
(assert (= r (fp #b1 #b01011001000 #b0001100101001100101101111100011000001110101010001000)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
