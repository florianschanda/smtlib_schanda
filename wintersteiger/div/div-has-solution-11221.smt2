(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.182843526179804261033723378204740583896636962890625p-225 {+ 823454036370474 -225 (2.19371e-068)}
; Y = -1.6382295662005528225080297488602809607982635498046875p-339 {- 2874330436517643 -339 (-1.46287e-102)}
; 1.182843526179804261033723378204740583896636962890625p-225 / -1.6382295662005528225080297488602809607982635498046875p-339 == -1.4440510055292212765465365009731613099575042724609375p113
; [HW: -1.4440510055292212765465365009731613099575042724609375p113] 

; mpf : - 1999827943034895 113
; mpfd: - 1999827943034895 113 (-1.49959e+034) class: Neg. norm. non-zero
; hwf : - 1999827943034895 113 (-1.49959e+034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011110 #b0010111011001110110101010101010100111010010000101010)))
(assert (= y (fp #b1 #b01010101100 #b1010001101100011000000110100101000101011111100001011)))
(assert (= r (fp #b1 #b10001110000 #b0111000110101101010100111010001010000001000000001111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
