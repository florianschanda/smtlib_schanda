(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.088616266629790718667436522082425653934478759765625p997 {- 399092185372890 997 (-1.45808e+300)}
; Y = -1.2027575221195390131612157347262836992740631103515625p978 {- 913138701064121 978 (-3.07266e+294)}
; -1.088616266629790718667436522082425653934478759765625p997 / -1.2027575221195390131612157347262836992740631103515625p978 == 1.810200720609745683731262033688835799694061279296875p18
; [HW: 1.810200720609745683731262033688835799694061279296875p18] 

; mpf : + 3648819663433358 18
; mpfd: + 3648819663433358 18 (474533) class: Pos. norm. non-zero
; hwf : + 3648819663433358 18 (474533) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100100 #b0001011010101111100011100011111100010001100011011010)))
(assert (= y (fp #b1 #b11111010001 #b0011001111100111111010101011111010000101011110111001)))
(assert (= r (fp #b0 #b10000010001 #b1100111101101001010100000111111000110110111010001110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
