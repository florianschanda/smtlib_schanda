(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8639453127514185037938432287774048745632171630859375p702 {+ 3890863788575775 702 (3.92184e+211)}
; Y = 1.4523336018906427558050609150086529552936553955078125p-113 {+ 2037129440921853 -113 (1.39855e-034)}
; 1.8639453127514185037938432287774048745632171630859375p702 / 1.4523336018906427558050609150086529552936553955078125p-113 == 1.2834140243845773010633593003149144351482391357421875p815
; [HW: 1.2834140243845773010633593003149144351482391357421875p815] 

; mpf : + 1276383294609955 815
; mpfd: + 1276383294609955 815 (2.80423e+245) class: Pos. norm. non-zero
; hwf : + 1276383294609955 815 (2.80423e+245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111101 #b1101110100101011100001010001111111001100110000011111)))
(assert (= y (fp #b0 #b01110001110 #b0111001111001100001000101000101100000000100011111101)))
(assert (= r (fp #b0 #b11100101110 #b0100100010001101110100100100110111110101101000100011)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
