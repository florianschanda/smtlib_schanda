(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.07554866757031764024077347130514681339263916015625p588 {- 340240951118020 588 (-1.0896e+177)}
; Y = -1.6169445818826100325082961717271246016025543212890625p-810 {- 2778471389074769 -810 (-2.36809e-244)}
; -1.07554866757031764024077347130514681339263916015625p588 / -1.6169445818826100325082961717271246016025543212890625p-810 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001011 #b0001001101010111001010000101000001111000100011000100)))
(assert (= y (fp #b1 #b00011010101 #b1001110111110000000101001000001010100001010101010001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
