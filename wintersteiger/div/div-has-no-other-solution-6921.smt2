(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8856903553689898789258450051420368254184722900390625p-427 {- 3988794754405425 -427 (-5.44079e-129)}
; Y = -1.09996862576400911137852745014242827892303466796875p986 {- 450218665739532 986 (-7.19376e+296)}
; -1.8856903553689898789258450051420368254184722900390625p-427 / -1.09996862576400911137852745014242827892303466796875p986 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001010100 #b1110001010111100100110100110011010110001010000110001)))
(assert (= y (fp #b1 #b11111011001 #b0001100110010111100010110011101001001000010100001100)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
