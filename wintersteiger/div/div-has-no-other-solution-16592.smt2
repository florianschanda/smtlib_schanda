(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.404356884506241964771788843791000545024871826171875p-361 {+ 1821061514387006 -361 (2.98985e-109)}
; Y = 1.7855956739933172006118411445640958845615386962890625p-889 {+ 3538008384660177 -889 (4.3263e-268)}
; 1.404356884506241964771788843791000545024871826171875p-361 / 1.7855956739933172006118411445640958845615386962890625p-889 == 1.5729841922897691564031674715806730091571807861328125p527
; [HW: 1.5729841922897691564031674715806730091571807861328125p527] 

; mpf : + 2580491394885389 527
; mpfd: + 2580491394885389 527 (6.91086e+158) class: Pos. norm. non-zero
; hwf : + 2580491394885389 527 (6.91086e+158) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010110 #b0110011110000011111011101100101011011101111000111110)))
(assert (= y (fp #b0 #b00010000110 #b1100100100011100110011000100111110101110001011010001)))
(assert (= r (fp #b0 #b11000001110 #b1001001010101111000101111000111100000010011100001101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
