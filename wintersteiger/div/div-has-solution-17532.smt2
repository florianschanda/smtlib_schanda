(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9761114315080383629918969745631329715251922607421875p788 {+ 4396015079211683 788 (3.21698e+237)}
; Y = 1.71900189747828324726697246660478413105010986328125p-191 {+ 3238096677561876 -191 (5.47706e-058)}
; 1.9761114315080383629918969745631329715251922607421875p788 / 1.71900189747828324726697246660478413105010986328125p-191 == 1.149569080992246750128060739370994269847869873046875p979
; [HW: 1.149569080992246750128060739370994269847869873046875p979] 

; mpf : + 673599257422830 979
; mpfd: + 673599257422830 979 (5.87355e+294) class: Pos. norm. non-zero
; hwf : + 673599257422830 979 (5.87355e+294) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010011 #b1111100111100010011100000101001110010100001010100011)))
(assert (= y (fp #b0 #b01101000000 #b1011100000010000100000100010001101101110011000010100)))
(assert (= r (fp #b0 #b11111010010 #b0010011001001010001010001100011101011010101111101110)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
