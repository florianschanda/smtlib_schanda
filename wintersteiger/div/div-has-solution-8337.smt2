(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2139719041857859327393498460878618061542510986328125p-721 {- 963643787958861 -721 (-1.10048e-217)}
; Y = 1.1424662578520601297071834778762422502040863037109375p279 {+ 641610985775407 279 (1.10972e+084)}
; -1.2139719041857859327393498460878618061542510986328125p-721 / 1.1424662578520601297071834778762422502040863037109375p279 == -1.0625888474537206196401939450879581272602081298828125p-1000
; [HW: -1.0625888474537206196401939450879581272602081298828125p-1000] 

; mpf : - 281875110070125 -1000
; mpfd: - 281875110070125 -1000 (-9.91676e-302) class: Neg. norm. non-zero
; hwf : - 281875110070125 -1000 (-9.91676e-302) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101110 #b0011011011000110110111001101101010111101101001001101)))
(assert (= y (fp #b0 #b10100010110 #b0010010001111000101010110010111001000010000100101111)))
(assert (= r (fp #b1 #b00000010111 #b0001000000000101110100101001110011101000011101101101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
