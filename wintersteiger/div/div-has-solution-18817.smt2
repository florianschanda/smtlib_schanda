(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2170063829708726022005293998518027365207672119140625p-828 {+ 977309865484641 -828 (6.79918e-250)}
; Y = 1.7676256460923074342872496345080435276031494140625p-364 {+ 3457078573701352 -364 (4.70405e-110)}
; 1.2170063829708726022005293998518027365207672119140625p-828 / 1.7676256460923074342872496345080435276031494140625p-364 == 1.3769956163074577037974677296006120741367340087890625p-465
; [HW: 1.3769956163074577037974677296006120741367340087890625p-465] 

; mpf : + 1697837317122577 -465
; mpfd: + 1697837317122577 -465 (1.44539e-140) class: Pos. norm. non-zero
; hwf : + 1697837317122577 -465 (1.44539e-140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000011 #b0011011110001101101110101111010111100010000101100001)))
(assert (= y (fp #b0 #b01010010011 #b1100010010000011000111010100010110001001100011101000)))
(assert (= r (fp #b0 #b01000101110 #b0110000010000010110010001110001011000110101000010001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
