(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.391358514879605490222047592396847903728485107421875p-158 {+ 1762522061780062 -158 (3.80802e-048)}
; Y = 1.8306264002838030791053824941627681255340576171875p-22 {+ 3740808746802232 -22 (4.36455e-007)}
; 1.391358514879605490222047592396847903728485107421875p-158 / 1.8306264002838030791053824941627681255340576171875p-22 == 1.52009007918153304927955105085857212543487548828125p-137
; [HW: 1.52009007918153304927955105085857212543487548828125p-137] 

; mpf : + 2342277486801044 -137
; mpfd: + 2342277486801044 -137 (8.72489e-042) class: Pos. norm. non-zero
; hwf : + 2342277486801044 -137 (8.72489e-042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100001 #b0110010000110000000100100101011001101011010001011110)))
(assert (= y (fp #b0 #b01111101001 #b1101010010100011111011101000100001101001110000111000)))
(assert (= r (fp #b0 #b01101110110 #b1000010100100100100111111001100100001111000010010100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
