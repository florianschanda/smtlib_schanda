(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.061751080156131621379245189018547534942626953125p-41 {+ 278102141580880 -41 (4.82828e-013)}
; Y = 1.31702570955293207788372455979697406291961669921875p-4 {+ 1427756867409452 -4 (0.0823141)}
; 1.061751080156131621379245189018547534942626953125p-41 / 1.31702570955293207788372455979697406291961669921875p-4 == 1.6123467787375933557569851473090238869190216064453125p-38
; [HW: 1.6123467787375933557569851473090238869190216064453125p-38] 

; mpf : + 2757764724544149 -38
; mpfd: + 2757764724544149 -38 (5.86568e-012) class: Pos. norm. non-zero
; hwf : + 2757764724544149 -38 (5.86568e-012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010110 #b0000111111001110111010110011010111000011011001010000)))
(assert (= y (fp #b0 #b01111111011 #b0101000100101000100110001100111010000101011000101100)))
(assert (= r (fp #b0 #b01111011001 #b1001110011000010110000100010110001111101001010010101)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
