(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.18756224157828427223648759536445140838623046875p248 {+ 844705241280736 248 (5.3715e+074)}
; Y = -1.8728143472443086192669170486624352633953094482421875p-620 {- 3930806369013091 -620 (-4.30425e-187)}
; 1.18756224157828427223648759536445140838623046875p248 / -1.8728143472443086192669170486624352633953094482421875p-620 == -1.268211388198391187387414902332238852977752685546875p867
; [HW: -1.268211388198391187387414902332238852977752685546875p867] 

; mpf : - 1207916707946798 867
; mpfd: - 1207916707946798 867 (-1.24795e+261) class: Neg. norm. non-zero
; hwf : - 1207916707946798 867 (-1.24795e+261) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110111 #b0011000000000100000101000011110110001011000011100000)))
(assert (= y (fp #b1 #b00110010011 #b1101111101110000110000101101010011100100110101100011)))
(assert (= r (fp #b1 #b11101100010 #b0100010010101001100000000110010010111010000100101110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
