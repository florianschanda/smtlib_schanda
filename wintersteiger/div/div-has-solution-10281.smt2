(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9699502762535507915941934697912074625492095947265625p528 {- 4368267702703401 528 (-1.73098e+159)}
; Y = 1.9356683363877011938569694393663667142391204833984375p-242 {+ 4213875571098023 -242 (2.73887e-073)}
; -1.9699502762535507915941934697912074625492095947265625p528 / 1.9356683363877011938569694393663667142391204833984375p-242 == -1.0177106476462933759563611602061428129673004150390625p770
; [HW: -1.0177106476462933759563611602061428129673004150390625p770] 

; mpf : - 79761666140337 770
; mpfd: - 79761666140337 770 (-6.32006e+231) class: Neg. norm. non-zero
; hwf : - 79761666140337 770 (-6.32006e+231) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001111 #b1111100001001110101010010100101101000001010100101001)))
(assert (= y (fp #b0 #b01100001101 #b1110111110000111111101011100100010110000000110100111)))
(assert (= r (fp #b1 #b11100000001 #b0000010010001000101011110101110001101110100010110001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
