(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.50442387878070515938588869175873696804046630859375p-410 {- 2271723192513564 -410 (-5.68947e-124)}
; Y = -1.2203174085730259523785434794262982904911041259765625p238 {- 992221399152713 238 (-5.39029e+071)}
; -1.50442387878070515938588869175873696804046630859375p-410 / -1.2203174085730259523785434794262982904911041259765625p238 == 1.2328135845737857589909935995819978415966033935546875p-648
; [HW: 1.2328135845737857589909935995819978415966033935546875p-648] 

; mpf : + 1048499172733291 -648
; mpfd: + 1048499172733291 -648 (1.0555e-195) class: Pos. norm. non-zero
; hwf : + 1048499172733291 -648 (1.0555e-195) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100101 #b1000000100100001111011000101111010101111010000011100)))
(assert (= y (fp #b1 #b10011101101 #b0011100001100110101110001100000010001111100001001001)))
(assert (= r (fp #b0 #b00101110111 #b0011101110011001101010111100101111001111000101101011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
