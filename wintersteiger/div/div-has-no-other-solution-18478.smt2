(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.37944038759829279428004156216047704219818115234375p368 {- 1708847588196988 368 (-8.29357e+110)}
; Y = -1.9354664138846382481773389372392557561397552490234375p-47 {- 4212966192988471 -47 (-1.37523e-014)}
; -1.37944038759829279428004156216047704219818115234375p368 / -1.9354664138846382481773389372392557561397552490234375p-47 == 1.425434590548790847464033504365943372249603271484375p414
; [HW: 1.425434590548790847464033504365943372249603271484375p414] 

; mpf : + 1915987063466054 414
; mpfd: + 1915987063466054 414 (6.03067e+124) class: Pos. norm. non-zero
; hwf : + 1915987063466054 414 (6.03067e+124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101111 #b0110000100100011000000010101011110000100001001111100)))
(assert (= y (fp #b1 #b01111010000 #b1110111101111010101110100001011000100100000100110111)))
(assert (= r (fp #b0 #b10110011101 #b0110110011101001010010000000010011111110100001000110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
