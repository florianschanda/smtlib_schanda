(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1321409297464344323458362850942648947238922119140625p-2 {+ 595109841966433 -2 (0.283035)}
; Y = -1.839030989167104390702434102422557771205902099609375p-647 {- 3778659650165270 -647 (-3.14907e-195)}
; 1.1321409297464344323458362850942648947238922119140625p-2 / -1.839030989167104390702434102422557771205902099609375p-647 == -1.23123638091512521697268311982043087482452392578125p644
; [HW: -1.23123638091512521697268311982043087482452392578125p644] 

; mpf : - 1041396078923860 644
; mpfd: - 1041396078923860 644 (-8.98791e+193) class: Neg. norm. non-zero
; hwf : - 1041396078923860 644 (-8.98791e+193) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111101 #b0010000111010011111111001110101110111001010101100001)))
(assert (= y (fp #b1 #b00101111000 #b1101011011001010101111000010001011001101101000010110)))
(assert (= r (fp #b1 #b11010000011 #b0011101100110010010011101011010110101101000001010100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
