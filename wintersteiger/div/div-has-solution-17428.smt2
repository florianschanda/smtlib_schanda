(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.432171843625642537745079607702791690826416015625p923 {+ 1946328953912464 923 (1.0155e+278)}
; Y = -1.479883636976776273286304785870015621185302734375p293 {- 2161203768669808 293 (-2.35514e+088)}
; 1.432171843625642537745079607702791690826416015625p923 / -1.479883636976776273286304785870015621185302734375p293 == -1.9355195338890249789898234666907228529453277587890625p629
; [HW: -1.9355195338890249789898234666907228529453277587890625p629] 

; mpf : - 4213205424220433 629
; mpfd: - 4213205424220433 629 (-4.31186e+189) class: Neg. norm. non-zero
; hwf : - 4213205424220433 629 (-4.31186e+189) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110011010 #b0110111010100010110100000101111010011111110010010000)))
(assert (= y (fp #b1 #b10100100100 #b0111101011011001101001110110111010110011011001110000)))
(assert (= r (fp #b1 #b11001110100 #b1110111101111110001101010100101011010010100100010001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
