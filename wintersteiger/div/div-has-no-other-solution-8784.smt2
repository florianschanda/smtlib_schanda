(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.749463320421575485141829631174914538860321044921875p2 {- 3375282730578462 2 (-6.99785)}
; Y = 1.7036888933109028965162679014611057937145233154296875p-91 {+ 3169133037699739 -91 (6.88114e-028)}
; -1.749463320421575485141829631174914538860321044921875p2 / 1.7036888933109028965162679014611057937145233154296875p-91 == -1.0268678320850679330789034793269820511341094970703125p93
; [HW: -1.0268678320850679330789034793269820511341094970703125p93] 

; mpf : - 121001958566565 93
; mpfd: - 121001958566565 93 (-1.01696e+028) class: Neg. norm. non-zero
; hwf : - 121001958566565 93 (-1.01696e+028) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000000001 #b1011111111011100110101000000001011000011001000011110)))
(assert (= y (fp #b0 #b01110100100 #b1011010000100100111101001000111101010100001010011011)))
(assert (= r (fp #b1 #b10001011100 #b0000011011100000110011110110110000011110101010100101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
