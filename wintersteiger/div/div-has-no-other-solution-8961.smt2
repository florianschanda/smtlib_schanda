(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.99996321177796598789200288592837750911712646484375p479 {- 4503433947947452 479 (-3.12169e+144)}
; Y = -1.3894733973286104156130704723182134330272674560546875p-704 {- 1754032247079851 -704 (-1.65095e-212)}
; -1.99996321177796598789200288592837750911712646484375p479 / -1.3894733973286104156130704723182134330272674560546875p-704 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011110 #b1111111111111101100101101100101111001010000110111100)))
(assert (= y (fp #b1 #b00100111111 #b0110001110110100100001110101000000110000001110101011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
