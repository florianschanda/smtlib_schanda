(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8705468174574015893796286036376841366291046142578125p710 {- 3920594322709725 710 (-1.00755e+214)}
; Y = 1.2822733597850941578144556842744350433349609375p169 {+ 1271246197944768 169 (9.59511e+050)}
; -1.8705468174574015893796286036376841366291046142578125p710 / 1.2822733597850941578144556842744350433349609375p169 == -1.458773827891815866308888871571980416774749755859375p541
; [HW: -1.458773827891815866308888871571980416774749755859375p541] 

; mpf : - 2066133640340918 541
; mpfd: - 2066133640340918 541 (-1.05006e+163) class: Neg. norm. non-zero
; hwf : - 2066133640340918 541 (-1.05006e+163) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000101 #b1101111011011100001001111111111010011101110011011101)))
(assert (= y (fp #b0 #b10010101000 #b0100100001000011000100010010000011001111000111000000)))
(assert (= r (fp #b1 #b11000011100 #b0111010101110010001100111001101100001110010110110110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
