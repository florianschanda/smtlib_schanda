(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5177078222205222512997124795219860970973968505859375p1007 {+ 2331548755239135 1007 (2.08158e+303)}
; Y = 1.0671661166180010926751720035099424421787261962890625p-354 {+ 302489297772753 -354 (2.90813e-107)}
; 1.5177078222205222512997124795219860970973968505859375p1007 / 1.0671661166180010926751720035099424421787261962890625p-354 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101110 #b1000010010001000011111111111010101010010000011011111)))
(assert (= y (fp #b0 #b01010011101 #b0001000100110001110011000111001001000110000011010001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
