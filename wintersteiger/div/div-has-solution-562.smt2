(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0012741268078066969593464818899519741535186767578125p193 {- 5738157016861 193 (-1.25702e+058)}
; Y = -1.9814090530268686496384589190711267292499542236328125p-504 {- 4419873445509837 -504 (-3.78317e-152)}
; -1.0012741268078066969593464818899519741535186767578125p193 / -1.9814090530268686496384589190711267292499542236328125p-504 == 1.0106687715777071812084386692731641232967376708984375p696
; [HW: 1.0106687715777071812084386692731641232967376708984375p696] 

; mpf : + 48047875701863 696
; mpfd: + 48047875701863 696 (3.32266e+209) class: Pos. norm. non-zero
; hwf : + 48047875701863 696 (3.32266e+209) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000000 #b0000000001010011100000000100110011111000011100011101)))
(assert (= y (fp #b1 #b01000000111 #b1111101100111101100111111010101010111111101011001101)))
(assert (= r (fp #b0 #b11010110111 #b0000001010111011001100000100100100000011110001100111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
