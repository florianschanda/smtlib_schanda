(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.043294817516529970902183777070604264736175537109375p-47 {+ 194982524034518 -47 (7.41306e-015)}
; Y = -1.5066653250722590318133597975247539579868316650390625p-54 {- 2281817769196977 -54 (-8.36367e-017)}
; 1.043294817516529970902183777070604264736175537109375p-47 / -1.5066653250722590318133597975247539579868316650390625p-54 == -1.3849058581958060276662081378162838518619537353515625p6
; [HW: -1.3849058581958060276662081378162838518619537353515625p6] 

; mpf : - 1733461879543353 6
; mpfd: - 1733461879543353 6 (-88.634) class: Neg. norm. non-zero
; hwf : - 1733461879543353 6 (-88.634) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010000 #b0000101100010101010111101000000101010001110111010110)))
(assert (= y (fp #b1 #b01111001001 #b1000000110110100110100011001100100110011110110110001)))
(assert (= r (fp #b1 #b10000000101 #b0110001010001001001100001011100011111101011000111001)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
