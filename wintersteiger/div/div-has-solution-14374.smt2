(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.046740016801802397594656213186681270599365234375p-375 {+ 210498322251888 -375 (1.36016e-113)}
; Y = 1.741602969226784036749222650541923940181732177734375p-74 {+ 3339882855866598 -74 (9.21997e-023)}
; 1.046740016801802397594656213186681270599365234375p-375 / 1.741602969226784036749222650541923940181732177734375p-74 == 1.2020420673335454608832151279784739017486572265625p-302
; [HW: 1.2020420673335454608832151279784739017486572265625p-302] 

; mpf : + 909916579156520 -302
; mpfd: + 909916579156520 -302 (1.47523e-091) class: Pos. norm. non-zero
; hwf : + 909916579156520 -302 (1.47523e-091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010001000 #b0000101111110111001001110101101110010100000001110000)))
(assert (= y (fp #b0 #b01110110101 #b1011110111011001101100010011001101110010000011100110)))
(assert (= r (fp #b0 #b01011010001 #b0011001110111001000001110110011110011101001000101000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
