(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.558210318346807898848283002735115587711334228515625p-512 {+ 2513955781701050 -512 (1.16217e-154)}
; Y = 1.1274025052498461985095445925253443419933319091796875p-176 {+ 573769875169275 -176 (1.17706e-053)}
; 1.558210318346807898848283002735115587711334228515625p-512 / 1.1274025052498461985095445925253443419933319091796875p-176 == 1.3821242290050521628330670864670537412166595458984375p-336
; [HW: 1.3821242290050521628330670864670537412166595458984375p-336] 

; mpf : + 1720934535356391 -336
; mpfd: + 1720934535356391 -336 (9.87344e-102) class: Pos. norm. non-zero
; hwf : + 1720934535356391 -336 (9.87344e-102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111111 #b1000111011100110110111110001010110010110110110111010)))
(assert (= y (fp #b0 #b01101001111 #b0010000010011101011100110101100101111001111111111011)))
(assert (= r (fp #b0 #b01010101111 #b0110000111010010111001001011101010010101111111100111)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
