(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.01197139958107218404848026693798601627349853515625p-782 {- 53914390692420 -782 (-3.97843e-236)}
; Y = -1.657425114480588046461662088404409587383270263671875p-63 {- 2960779500598782 -63 (-1.79698e-019)}
; -1.01197139958107218404848026693798601627349853515625p-782 / -1.657425114480588046461662088404409587383270263671875p-63 == 1.22113679917081352499508284381590783596038818359375p-720
; [HW: 1.22113679917081352499508284381590783596038818359375p-720] 

; mpf : + 995911606343580 -720
; mpfd: + 995911606343580 -720 (2.21395e-217) class: Pos. norm. non-zero
; hwf : + 995911606343580 -720 (2.21395e-217) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110001 #b0000001100010000100011101100000110110000001001000100)))
(assert (= y (fp #b1 #b01111000000 #b1010100001001101000000110010011001000011010111111110)))
(assert (= r (fp #b0 #b00100101111 #b0011100010011100011010111101100001100001011110011100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
