(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.73371401299923721950335675501264631748199462890625p-761 {+ 3304354155539876 -761 (1.42939e-229)}
; Y = 1.986794000143075056286079416167922317981719970703125p-96 {+ 4444125091335794 -96 (2.50769e-029)}
; 1.73371401299923721950335675501264631748199462890625p-761 / 1.986794000143075056286079416167922317981719970703125p-96 == 1.7452378181878815954775063801207579672336578369140625p-666
; [HW: 1.7452378181878815954775063801207579672336578369140625p-666] 

; mpf : + 3356252760293345 -666
; mpfd: + 3356252760293345 -666 (5.70003e-201) class: Pos. norm. non-zero
; hwf : + 3356252760293345 -666 (5.70003e-201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000110 #b1011101111010100101011100111101001110010110110100100)))
(assert (= y (fp #b0 #b01110011111 #b1111110010011110100010000001011010000000111001110010)))
(assert (= r (fp #b0 #b00101100101 #b1011111011000111111001111101100011011011111111100001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
