(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.939813945467812050793554590200074017047882080078125p-796 {+ 4232545734606434 -796 (4.65461e-240)}
; Y = 1.2925559147378058444388670977787114679813385009765625p140 {+ 1317554708598217 140 (1.80156e+042)}
; 1.939813945467812050793554590200074017047882080078125p-796 / 1.2925559147378058444388670977787114679813385009765625p140 == 1.5007582444596232473799091167165897786617279052734375p-936
; [HW: 1.5007582444596232473799091167165897786617279052734375p-936] 

; mpf : + 2255214643151063 -936
; mpfd: + 2255214643151063 -936 (2.58366e-282) class: Pos. norm. non-zero
; hwf : + 2255214643151063 -936 (2.58366e-282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100011 #b1111000010010111101001011001000000011011111001100010)))
(assert (= y (fp #b0 #b10010001011 #b0100101011100100111100011100011000001100110111001001)))
(assert (= r (fp #b0 #b00001010111 #b1000000000110001101100010011101100101000000011010111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
