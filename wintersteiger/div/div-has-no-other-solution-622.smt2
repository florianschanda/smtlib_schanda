(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.82127347064808731147422804497182369232177734375p-169 {- 3698686896380000 -169 (-2.43392e-051)}
; Y = -1.574833403547543309031198077718727290630340576171875p-790 {- 2588819502016830 -790 (-2.41846e-238)}
; -1.82127347064808731147422804497182369232177734375p-169 / -1.574833403547543309031198077718727290630340576171875p-790 == 1.1564864363083751097605045288219116628170013427734375p621
; [HW: 1.1564864363083751097605045288219116628170013427734375p621] 

; mpf : + 704752256246935 621
; mpfd: + 704752256246935 621 (1.00639e+187) class: Pos. norm. non-zero
; hwf : + 704752256246935 621 (1.00639e+187) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101010110 #b1101001000111110111110100110100110000001100001100000)))
(assert (= y (fp #b1 #b00011101001 #b1001001100101000010010000010110011100010100100111110)))
(assert (= r (fp #b0 #b11001101100 #b0010100000001111011111101011111000110110010010010111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
