(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.638912512441191182688271510414779186248779296875p201 {- 2877406152952496 201 (-5.26726e+060)}
; Y = 1.162115973900227583470723402570001780986785888671875p181 {+ 730105439647870 181 (3.56188e+054)}
; -1.638912512441191182688271510414779186248779296875p201 / 1.162115973900227583470723402570001780986785888671875p181 == -1.4102830950174156665610780692077241837978363037109375p20
; [HW: -1.4102830950174156665610780692077241837978363037109375p20] 

; mpf : - 1847750793836847 20
; mpfd: - 1847750793836847 20 (-1.47879e+006) class: Neg. norm. non-zero
; hwf : - 1847750793836847 20 (-1.47879e+006) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001000 #b1010001110001111110001010011100111110000101010110000)))
(assert (= y (fp #b0 #b10010110100 #b0010100110000000011011101011011000001111100001111110)))
(assert (= r (fp #b1 #b10000010011 #b0110100100001000010100000001101100110011100100101111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
