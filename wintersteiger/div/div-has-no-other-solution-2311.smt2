(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.467537585661308430218241483089514076709747314453125p9 {+ 2105602096565970 9 (751.379)}
; Y = -1.7536559116154368798135010365513153374195098876953125p-246 {- 3394164482716853 -246 (-1.55083e-074)}
; 1.467537585661308430218241483089514076709747314453125p9 / -1.7536559116154368798135010365513153374195098876953125p-246 == -1.6736893206255480937016955067520029842853546142578125p254
; [HW: -1.6736893206255480937016955067520029842853546142578125p254] 

; mpf : - 3034026973332701 254
; mpfd: - 3034026973332701 254 (-4.845e+076) class: Neg. norm. non-zero
; hwf : - 3034026973332701 254 (-4.845e+076) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001000 #b0111011110110000100010110001000000010000111011010010)))
(assert (= y (fp #b1 #b01100001001 #b1100000011101111100110000000010011010011010010110101)))
(assert (= r (fp #b1 #b10011111101 #b1010110001110110111001110011111111000000010011011101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
