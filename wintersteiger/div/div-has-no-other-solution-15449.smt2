(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2414307621308608986510080285370349884033203125p879 {+ 1087307490368320 879 (5.00367e+264)}
; Y = 1.2220385588065589832496016242657788097858428955078125p-10 {+ 999972770703101 -10 (0.0011934)}
; 1.2414307621308608986510080285370349884033203125p879 / 1.2220385588065589832496016242657788097858428955078125p-10 == 1.0158687327699709168626895916531793773174285888671875p889
; [HW: 1.0158687327699709168626895916531793773174285888671875p889] 

; mpf : + 71466418989683 889
; mpfd: + 71466418989683 889 (4.1928e+267) class: Pos. norm. non-zero
; hwf : + 71466418989683 889 (4.1928e+267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101110 #b0011110111001110011010000000101110011001101101000000)))
(assert (= y (fp #b0 #b01111110101 #b0011100011010111100001001101110010000110011011111101)))
(assert (= r (fp #b0 #b11101111000 #b0000010000001111111110010010100001000110101001110011)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
