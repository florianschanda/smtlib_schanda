(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.598312534687454711246346050756983458995819091796875p34 {- 2694560108269518 34 (-2.74588e+010)}
; Y = -1.228379936674183880995769868604838848114013671875p626 {- 1028531797704752 626 (-3.42066e+188)}
; -1.598312534687454711246346050756983458995819091796875p34 / -1.228379936674183880995769868604838848114013671875p626 == 1.3011548682688978129107226777705363929271697998046875p-592
; [HW: 1.3011548682688978129107226777705363929271697998046875p-592] 

; mpf : + 1356280952516619 -592
; mpfd: + 1356280952516619 -592 (8.02734e-179) class: Pos. norm. non-zero
; hwf : + 1356280952516619 -592 (8.02734e-179) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100001 #b1001100100101011000000101010000101000100111111001110)))
(assert (= y (fp #b1 #b11001110001 #b0011101001110111000110111000011100010100000000110000)))
(assert (= r (fp #b0 #b00110101111 #b0100110100011000011111000100011000111111000000001011)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
