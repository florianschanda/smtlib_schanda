(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6711056939462896053782969829626381397247314453125p468 {- 3022391353182728 468 (-1.27363e+141)}
; Y = -1.7455346029903295868024315495858900249004364013671875p723 {- 3357589360219059 723 (-7.70221e+217)}
; -1.6711056939462896053782969829626381397247314453125p468 / -1.7455346029903295868024315495858900249004364013671875p723 == 1.9147207864953996736545605017454363405704498291015625p-256
; [HW: 1.9147207864953996736545605017454363405704498291015625p-256] 

; mpf : + 4119536193208729 -256
; mpfd: + 4119536193208729 -256 (1.65359e-077) class: Pos. norm. non-zero
; hwf : + 4119536193208729 -256 (1.65359e-077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010011 #b1010101111001101100101010010111110101000101000001000)))
(assert (= y (fp #b1 #b11011010010 #b1011111011011011010110110001000111100001001110110011)))
(assert (= r (fp #b0 #b01011111111 #b1110101000101011001001000011011011111000000110011001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
