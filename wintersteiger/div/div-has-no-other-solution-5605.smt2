(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -0.173095209771577440704959371942095458507537841796875p-1022 {- 779551522226894 -1023 (-3.8515e-309)}
; Y = 1.033040043244189742921435026801191270351409912109375p-781 {+ 148799126442838 -781 (8.12252e-236)}
; -0.173095209771577440704959371942095458507537841796875p-1022 / 1.033040043244189742921435026801191270351409912109375p-781 == -1.34047241172169151468551717698574066162109375p-244
; [HW: -1.34047241172169151468551717698574066162109375p-244] 

; mpf : - 1533351426559744 -244
; mpfd: - 1533351426559744 -244 (-4.74175e-074) class: Neg. norm. non-zero
; hwf : - 1533351426559744 -244 (-4.74175e-074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0010110001001111111101111011100100010000001011001110)))
(assert (= y (fp #b0 #b00011110010 #b0000100001110101010011111111000100110001001101010110)))
(assert (= r (fp #b1 #b01100001011 #b0101011100101001001100110011000110001000111100000000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
