(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9445939363821691525657797683379612863063812255859375p-194 {+ 4254072899907167 -194 (7.74479e-059)}
; Y = 1.545619145842518360467465754481963813304901123046875p-816 {+ 2457250181902574 -816 (3.53693e-246)}
; 1.9445939363821691525657797683379612863063812255859375p-194 / 1.545619145842518360467465754481963813304901123046875p-816 == 1.2581326658723350764290671577327884733676910400390625p622
; [HW: 1.2581326658723350764290671577327884733676910400390625p622] 

; mpf : + 1162526177834801 622
; mpfd: + 1162526177834801 622 (2.1897e+187) class: Pos. norm. non-zero
; hwf : + 1162526177834801 622 (2.1897e+187) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100111101 #b1111000111010000111010001000000011000010111001011111)))
(assert (= y (fp #b0 #b00011001111 #b1000101110101101101100100100001101110111000011101110)))
(assert (= r (fp #b0 #b11001101101 #b0100001000010100111110110111110111110011011100110001)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
