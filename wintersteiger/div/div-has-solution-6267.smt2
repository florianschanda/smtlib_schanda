(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.007945470363683870829163424787111580371856689453125p342 {- 35783217369170 342 (-9.03016e+102)}
; Y = -1.5073940346601286677241660072468221187591552734375p-366 {- 2285099585425368 -366 (-1.00288e-110)}
; -1.007945470363683870829163424787111580371856689453125p342 / -1.5073940346601286677241660072468221187591552734375p-366 == 1.3373350924676372653010503199766390025615692138671875p707
; [HW: 1.3373350924676372653010503199766390025615692138671875p707] 

; mpf : + 1519222196736243 707
; mpfd: + 1519222196736243 707 (9.00424e+212) class: Pos. norm. non-zero
; hwf : + 1519222196736243 707 (9.00424e+212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010101 #b0000001000001000101101101101111101011101000001010010)))
(assert (= y (fp #b1 #b01010010001 #b1000000111100100100100110101000100001100111111011000)))
(assert (= r (fp #b0 #b11011000010 #b0101011001011011100101111011010111110001000011110011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
