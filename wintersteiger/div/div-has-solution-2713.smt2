(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4925935146336097858466018806211650371551513671875p284 {+ 2218443968949048 284 (4.63938e+085)}
; Y = -1.1113209048912142673515290880459360778331756591796875p533 {- 501344785786619 533 (-3.12484e+160)}
; 1.4925935146336097858466018806211650371551513671875p284 / -1.1113209048912142673515290880459360778331756591796875p533 == -1.34308057021542115450074561522342264652252197265625p-249
; [HW: -1.34308057021542115450074561522342264652252197265625p-249] 

; mpf : - 1545097528180228 -249
; mpfd: - 1545097528180228 -249 (-1.48468e-075) class: Neg. norm. non-zero
; hwf : - 1545097528180228 -249 (-1.48468e-075) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011011 #b0111111000011010100110111100101110010010101100111000)))
(assert (= y (fp #b1 #b11000010100 #b0001110001111111100001101101110111011110011011111011)))
(assert (= r (fp #b1 #b01100000110 #b0101011111010100001000001101010011110111111000000100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
