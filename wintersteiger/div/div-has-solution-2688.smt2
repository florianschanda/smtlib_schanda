(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2335147175817142706222284687100909650325775146484375p29 {- 1051656795086535 29 (-6.62238e+008)}
; Y = 1.4460307716055087468021156382746994495391845703125p-129 {+ 2008744016798344 -129 (2.12475e-039)}
; -1.2335147175817142706222284687100909650325775146484375p29 / 1.4460307716055087468021156382746994495391845703125p-129 == -1.7060698040501023342585540376603603363037109375p157
; [HW: -1.7060698040501023342585540376603603363037109375p157] 

; mpf : - 3179855706417600 157
; mpfd: - 3179855706417600 157 (-3.11678e+047) class: Neg. norm. non-zero
; hwf : - 3179855706417600 157 (-3.11678e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011100 #b0011101111000111100111101101101100100101111011000111)))
(assert (= y (fp #b0 #b01101111110 #b0111001000101111000100101001100100001110001010001000)))
(assert (= r (fp #b1 #b10010011100 #b1011010011000000111111011001110100010110100111000000)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
