(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.74462802968422892035960103385150432586669921875p408 {+ 3353506517015520 408 (1.1533e+123)}
; Y = -1.080114716564796406572668274748139083385467529296875p-718 {- 360804607668110 -718 (-7.83309e-217)}
; 1.74462802968422892035960103385150432586669921875p408 / -1.080114716564796406572668274748139083385467529296875p-718 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010111 #b1011111010011111111100010100101100101101101111100000)))
(assert (= y (fp #b1 #b00100110001 #b0001010010000010011001011110011110010010111110001110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
