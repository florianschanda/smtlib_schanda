(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1749904208722441456558271966059692203998565673828125p-810 {- 788086794233645 -810 (-1.72083e-244)}
; Y = -1.510594320369278875659801997244358062744140625p-991 {- 2299512390952576 -991 (-7.21809e-299)}
; -1.1749904208722441456558271966059692203998565673828125p-810 / -1.510594320369278875659801997244358062744140625p-991 == 1.5556664089469194323100964538753032684326171875p180
; [HW: 1.5556664089469194323100964538753032684326171875p180] 

; mpf : + 2502499032275648 180
; mpfd: + 2502499032275648 180 (2.38405e+054) class: Pos. norm. non-zero
; hwf : + 2502499032275648 180 (2.38405e+054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010101 #b0010110011001100001011000001011011000010011100101101)))
(assert (= y (fp #b1 #b00000100000 #b1000001010110110010011110011001110000010011010000000)))
(assert (= r (fp #b0 #b10010110011 #b1000111001000000001001110101110111101001101011000000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
