(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3238288169737248978208299377001821994781494140625p343 {+ 1458395339454696 343 (2.37203e+103)}
; Y = 1.321868714483248385960223458823747932910919189453125p997 {+ 1449567822608978 997 (1.77049e+300)}
; 1.3238288169737248978208299377001821994781494140625p343 / 1.321868714483248385960223458823747932910919189453125p997 == 1.001482826901794798146738685318268835544586181640625p-654
; [HW: 1.001482826901794798146738685318268835544586181640625p-654] 

; mpf : + 6678058682378 -654
; mpfd: + 6678058682378 -654 (1.33976e-197) class: Pos. norm. non-zero
; hwf : + 6678058682378 -654 (1.33976e-197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010110 #b0101001011100110011100100000001001100111100011101000)))
(assert (= y (fp #b0 #b11111100100 #b0101001001100101111111001111001001001111101001010010)))
(assert (= r (fp #b0 #b00101110001 #b0000000001100001001011011011010100001100100000001010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
