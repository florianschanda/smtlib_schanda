(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.666972713599648603377545441617257893085479736328125p708 {+ 3003778064433666 708 (2.24474e+213)}
; Y = 1.758817685115313889099297739448957145214080810546875p-226 {+ 3417411043927470 -226 (1.63095e-068)}
; 1.666972713599648603377545441617257893085479736328125p708 / 1.758817685115313889099297739448957145214080810546875p-226 == 1.895560554919433204901224598870612680912017822265625p933
; [HW: 1.895560554919433204901224598870612680912017822265625p933] 

; mpf : + 4033246181422874 933
; mpfd: + 4033246181422874 933 (1.37633e+281) class: Pos. norm. non-zero
; hwf : + 4033246181422874 933 (1.37633e+281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000011 #b1010101010111110101110010100100000111100001000000010)))
(assert (= y (fp #b0 #b01100011101 #b1100001001000001111000000011010100110010010110101110)))
(assert (= r (fp #b0 #b11110100100 #b1110010101000011011101001101111011110111011100011010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
