(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.62347226265658406418879167176783084869384765625p109 {- 2807869449776032 109 (-1.05369e+033)}
; Y = -1.69046730268777789518708232208155095577239990234375p-829 {- 3109588287096188 -829 (-4.72216e-250)}
; -1.62347226265658406418879167176783084869384765625p109 / -1.69046730268777789518708232208155095577239990234375p-829 == 1.9207378457723798259593195325578562915325164794921875p937
; [HW: 1.9207378457723798259593195325578562915325164794921875p937] 

; mpf : + 4146634619126403 937
; mpfd: + 4146634619126403 937 (2.23138e+282) class: Pos. norm. non-zero
; hwf : + 4146634619126403 937 (2.23138e+282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101100 #b1001111110011011111000001101001000010010101110100000)))
(assert (= y (fp #b1 #b00011000010 #b1011000011000010011101110001010000000000010101111100)))
(assert (= r (fp #b0 #b11110101000 #b1110101110110101011110011011011111001000001010000011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
