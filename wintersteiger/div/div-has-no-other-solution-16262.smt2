(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3237932069438487214796396074234507977962493896484375p365 {+ 1458234966137415 365 (9.94875e+109)}
; Y = 1.51653852714513082133862553746439516544342041015625p-297 {+ 2326282718373316 -297 (5.95586e-090)}
; 1.3237932069438487214796396074234507977962493896484375p365 / 1.51653852714513082133862553746439516544342041015625p-297 == 1.74580887098974901761039291159249842166900634765625p661
; [HW: 1.74580887098974901761039291159249842166900634765625p661] 

; mpf : + 3358824553479044 661
; mpfd: + 3358824553479044 661 (1.67041e+199) class: Pos. norm. non-zero
; hwf : + 3358824553479044 661 (1.67041e+199) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101100 #b0101001011100100000111001001001001111101101001000111)))
(assert (= y (fp #b0 #b01011010110 #b1000010000111011110111100111000100110110010111000100)))
(assert (= r (fp #b0 #b11010010100 #b1011111011101101010101001000010111110111101110000100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
