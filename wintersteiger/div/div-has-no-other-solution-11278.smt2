(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.59722867771305399031689375988207757472991943359375p-680 {+ 2689678850403484 -680 (3.18398e-205)}
; Y = 1.828017702206199857073443126864731311798095703125p-55 {+ 3729060215112016 -55 (5.07377e-017)}
; 1.59722867771305399031689375988207757472991943359375p-680 / 1.828017702206199857073443126864731311798095703125p-55 == 1.7474980420434540473451079378719441592693328857421875p-626
; [HW: 1.7474980420434540473451079378719441592693328857421875p-626] 

; mpf : + 3366431903607075 -626
; mpfd: + 3366431903607075 -626 (6.27537e-189) class: Pos. norm. non-zero
; hwf : + 3366431903607075 -626 (6.27537e-189) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010111 #b1001100011100011111110101000011100000010110010011100)))
(assert (= y (fp #b0 #b01111001000 #b1101001111111000111101111101011101111100000101010000)))
(assert (= r (fp #b0 #b00110001101 #b1011111101011100000010000001110001100110100100100011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
