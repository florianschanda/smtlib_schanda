(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3150646229788269803151479209191165864467620849609375p642 {+ 1418924918645071 642 (2.39996e+193)}
; Y = 1.4813247158716060791761037762626074254512786865234375p157 {+ 2167693811043575 157 (2.7062e+047)}
; 1.3150646229788269803151479209191165864467620849609375p642 / 1.4813247158716060791761037762626074254512786865234375p157 == 1.7755251213844058799651293156784959137439727783203125p484
; [HW: 1.7755251213844058799651293156784959137439727783203125p484] 

; mpf : + 3492654647683269 484
; mpfd: + 3492654647683269 484 (8.86839e+145) class: Pos. norm. non-zero
; hwf : + 3492654647683269 484 (8.86839e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010000001 #b0101000010101000000100110011101111010010000101001111)))
(assert (= y (fp #b0 #b10010011100 #b0111101100111000000110001011100101101100110011110111)))
(assert (= r (fp #b0 #b10111100011 #b1100011010001000110100000111100110010010100011000101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
