(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.122070990732183748406214363058097660541534423828125p520 {+ 549758868374210 520 (3.8514e+156)}
; Y = -1.453518899501230254855954626691527664661407470703125p-67 {- 2042467546799218 -67 (-9.84943e-021)}
; 1.122070990732183748406214363058097660541534423828125p520 / -1.453518899501230254855954626691527664661407470703125p-67 == -1.543937256154313875100569930509664118289947509765625p586
; [HW: -1.543937256154313875100569930509664118289947509765625p586] 

; mpf : - 2449675624129498 586
; mpfd: - 2449675624129498 586 (-3.91027e+176) class: Neg. norm. non-zero
; hwf : - 2449675624129498 586 (-3.91027e+176) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000111 #b0001111101000000000010110110000011111100001011000010)))
(assert (= y (fp #b1 #b01110111100 #b0111010000011001110100001000100101111001110001110010)))
(assert (= r (fp #b1 #b11001001001 #b1000101100111111011110001101011001000010001111011010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
