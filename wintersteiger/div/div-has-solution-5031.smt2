(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.667148006991353792471954875509254634380340576171875p660 {- 3004567515687230 660 (-7.97575e+198)}
; Y = -1.0345188719115885334076665458269417285919189453125p-859 {- 155459178678280 -859 (-2.69136e-259)}
; -1.667148006991353792471954875509254634380340576171875p660 / -1.0345188719115885334076665458269417285919189453125p-859 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010010011 #b1010101011001010001101100011011110011110100100111110)))
(assert (= y (fp #b1 #b00010100100 #b0000100011010110001110101001000111110100100000001000)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
