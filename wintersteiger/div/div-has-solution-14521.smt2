(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0628720954912893592592126879026181995868682861328125p405 {- 283150745826573 405 (-8.78272e+121)}
; Y = -1.7879717110985235972719920027884654700756072998046875p281 {- 3548709104481803 281 (-6.94687e+084)}
; -1.0628720954912893592592126879026181995868682861328125p405 / -1.7879717110985235972719920027884654700756072998046875p281 == 1.1889137718384421571471420975285582244396209716796875p123
; [HW: 1.1889137718384421571471420975285582244396209716796875p123] 

; mpf : + 850791992456763 123
; mpfd: + 850791992456763 123 (1.26427e+037) class: Pos. norm. non-zero
; hwf : + 850791992456763 123 (1.26427e+037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010100 #b0001000000011000011000101011100111110111010100001101)))
(assert (= y (fp #b1 #b10100011000 #b1100100110111000100000111001100101010111011000001011)))
(assert (= r (fp #b0 #b10001111010 #b0011000001011100101001110010011111001111011000111011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
