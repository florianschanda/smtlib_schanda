(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.607925653207330274341302356333471834659576416015625p-512 {+ 2737853745253498 -512 (1.19925e-154)}
; Y = -1.7659953838336639453387988396571017801761627197265625p-704 {- 3449736525200809 -704 (-2.09832e-212)}
; 1.607925653207330274341302356333471834659576416015625p-512 / -1.7659953838336639453387988396571017801761627197265625p-704 == -1.8209851146007050015640515994164161384105682373046875p191
; [HW: -1.8209851146007050015640515994164161384105682373046875p191] 

; mpf : - 3697388256192459 191
; mpfd: - 3697388256192459 191 (-5.71525e+057) class: Neg. norm. non-zero
; hwf : - 3697388256192459 191 (-5.71525e+057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111111 #b1001101110100001000000111111111011101100110001111010)))
(assert (= y (fp #b1 #b00100111111 #b1100010000011000010001100000001001110011110110101001)))
(assert (= r (fp #b1 #b10010111110 #b1101001000101100000101001001100110110110011111001011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
