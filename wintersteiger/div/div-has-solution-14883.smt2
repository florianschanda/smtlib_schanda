(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6724500094182663811892552985227666795253753662109375p198 {- 3028445611841391 198 (-6.71881e+059)}
; Y = 1.4556048242975416773248298341059125959873199462890625p127 {+ 2051861716934609 127 (2.47658e+038)}
; -1.6724500094182663811892552985227666795253753662109375p198 / 1.4556048242975416773248298341059125959873199462890625p127 == -1.148972565562477843315036807325668632984161376953125p71
; [HW: -1.148972565562477843315036807325668632984161376953125p71] 

; mpf : - 670912790755602 71
; mpfd: - 670912790755602 71 (-2.71293e+021) class: Neg. norm. non-zero
; hwf : - 670912790755602 71 (-2.71293e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000101 #b1010110000100101101011110000111010100101011101101111)))
(assert (= y (fp #b0 #b10001111110 #b0111010010100010100001001000110001000001111111010001)))
(assert (= r (fp #b1 #b10001000110 #b0010011000100011000100001110100100010111100100010010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
