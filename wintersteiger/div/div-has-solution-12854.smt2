(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.384188877971732178906449917121790349483489990234375p13 {- 1730232887673382 13 (-11339.3)}
; Y = -1.0039197021135581877615550183691084384918212890625p303 {- 17652768978024 303 (-1.63602e+091)}
; -1.384188877971732178906449917121790349483489990234375p13 / -1.0039197021135581877615550183691084384918212890625p303 == 1.3787844536346789414693603248451836407184600830078125p-290
; [HW: 1.3787844536346789414693603248451836407184600830078125p-290] 

; mpf : + 1705893524242877 -290
; mpfd: + 1705893524242877 -290 (6.93103e-088) class: Pos. norm. non-zero
; hwf : + 1705893524242877 -290 (6.93103e-088) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001100 #b0110001001011010001100111100101001100000001000100110)))
(assert (= y (fp #b1 #b10100101110 #b0000000100000000111000011011000001100011010001101000)))
(assert (= r (fp #b0 #b01011011101 #b0110000011111000000001001001100010011000000110111101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
