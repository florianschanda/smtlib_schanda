(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8040585269040605442825153659214265644550323486328125p-426 {+ 3621157682149197 -426 (1.04105e-128)}
; Y = 1.3980892275759106979649004642851650714874267578125p470 {+ 1792834496971080 470 (4.26219e+141)}
; 1.8040585269040605442825153659214265644550323486328125p-426 / 1.3980892275759106979649004642851650714874267578125p470 == 1.29037438478232413530122357769869267940521240234375p-896
; [HW: 1.29037438478232413530122357769869267940521240234375p-896] 

; mpf : + 1307729971103612 -896
; mpfd: + 1307729971103612 -896 (2.44253e-270) class: Pos. norm. non-zero
; hwf : + 1307729971103612 -896 (2.44253e-270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010101 #b1100110111010110110001111001010100011111011101001101)))
(assert (= y (fp #b0 #b10111010101 #b0110010111101001001011001111010101010100000101001000)))
(assert (= r (fp #b0 #b00001111111 #b0100101001010101111110011100011000111100011101111100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
