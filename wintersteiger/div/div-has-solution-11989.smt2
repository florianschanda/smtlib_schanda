(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5928710563841514957772460547857917845249176025390625p-906 {+ 2670053868610417 -906 (2.94445e-273)}
; Y = 1.0285777302562271184882547458983026444911956787109375p-863 {+ 128702655333039 -863 (1.67244e-260)}
; 1.5928710563841514957772460547857917845249176025390625p-906 / 1.0285777302562271184882547458983026444911956787109375p-863 == 1.548615150346833058137008265475742518901824951171875p-43
; [HW: 1.548615150346833058137008265475742518901824951171875p-43] 

; mpf : + 2470742986671806 -43
; mpfd: + 2470742986671806 -43 (1.76057e-013) class: Pos. norm. non-zero
; hwf : + 2470742986671806 -43 (1.76057e-013) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110101 #b1001011111000110011001011100010111101010001101110001)))
(assert (= y (fp #b0 #b00010100000 #b0000011101010000110111101100000011011000001010101111)))
(assert (= r (fp #b0 #b01111010100 #b1000110001110010000010101110000011010100011010111110)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
