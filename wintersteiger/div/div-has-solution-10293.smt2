(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3787388929066064502393373913946561515331268310546875p401 {+ 1705688336964907 401 (7.1205e+120)}
; Y = 1.9857517303540139774753470192081294953823089599609375p125 {+ 4439431125502159 125 (8.44645e+037)}
; 1.3787388929066064502393373913946561515331268310546875p401 / 1.9857517303540139774753470192081294953823089599609375p125 == 1.3886316923020471936212061336846090853214263916015625p275
; [HW: 1.3886316923020471936212061336846090853214263916015625p275] 

; mpf : + 1750241544635865 275
; mpfd: + 1750241544635865 275 (8.43016e+082) class: Pos. norm. non-zero
; hwf : + 1750241544635865 275 (8.43016e+082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010000 #b0110000011110101000010000011011011000001110100101011)))
(assert (= y (fp #b0 #b10001111100 #b1111110001011010001110011011001111011000100011001111)))
(assert (= r (fp #b0 #b10100010010 #b0110001101111101010111011101100010100000010111011001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
