(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.827181921819663212858131373650394380092620849609375p-750 {- 3725296194874646 -750 (-3.08521e-226)}
; Y = 1.4742963506363349068806201103143393993377685546875p19 {+ 2136040867988984 19 (772956)}
; -1.827181921819663212858131373650394380092620849609375p-750 / 1.4742963506363349068806201103143393993377685546875p19 == -1.2393586411789028201013707075617276132106781005859375p-769
; [HW: -1.2393586411789028201013707075617276132106781005859375p-769] 

; mpf : - 1077975487221215 -769
; mpfd: - 1077975487221215 -769 (-3.99145e-232) class: Neg. norm. non-zero
; hwf : - 1077975487221215 -769 (-3.99145e-232) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010001 #b1101001111000010001100011100011000001110110100010110)))
(assert (= y (fp #b0 #b10000010010 #b0111100101101011011111000101001010011000010111111000)))
(assert (= r (fp #b1 #b00011111110 #b0011110101000110100110111001111111100000110111011111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
