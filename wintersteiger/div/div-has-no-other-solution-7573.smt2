(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3962027750178964691230021344381384551525115966796875p329 {+ 1784338669933755 329 (1.52692e+099)}
; Y = 1.009888909277281587861807565786875784397125244140625p504 {+ 44535688136266 504 (5.28922e+151)}
; 1.3962027750178964691230021344381384551525115966796875p329 / 1.009888909277281587861807565786875784397125244140625p504 == 1.3825310508826926803038759317132644355297088623046875p-175
; [HW: 1.3825310508826926803038759317132644355297088623046875p-175] 

; mpf : + 1722766698212939 -175
; mpfd: + 1722766698212939 -175 (2.88686e-053) class: Pos. norm. non-zero
; hwf : + 1722766698212939 -175 (2.88686e-053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001000 #b0110010101101101100010111000100101001001010010111011)))
(assert (= y (fp #b0 #b10111110111 #b0000001010001000000101000101110111110000011001001010)))
(assert (= r (fp #b0 #b01101010000 #b0110000111101101100011100001000100111110111001001011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
