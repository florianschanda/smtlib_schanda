(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.542825097421539393138800733140669763088226318359375p-707 {+ 2444666906474998 -707 (2.29145e-213)}
; Y = -1.8931363979113202677950766883441247045993804931640625p963 {- 4022328748824449 963 (-1.47594e+290)}
; 1.542825097421539393138800733140669763088226318359375p-707 / -1.8931363979113202677950766883441247045993804931640625p963 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111100 #b1000101011110110100101011110100011011111100111110110)))
(assert (= y (fp #b1 #b11111000010 #b1110010010100100100101100100001111100101011110000001)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
