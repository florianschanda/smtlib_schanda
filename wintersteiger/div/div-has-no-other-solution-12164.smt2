(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7783355582926303473101370400399900972843170166015625p238 {+ 3505311730295897 238 (7.85512e+071)}
; Y = 1.8433114166753996610026433700113557279109954833984375p1022 {+ 3797936981896615 1022 (8.28427e+307)}
; 1.7783355582926303473101370400399900972843170166015625p238 / 1.8433114166753996610026433700113557279109954833984375p1022 == 1.929500942928070283954866681597195565700531005859375p-785
; [HW: 1.929500942928070283954866681597195565700531005859375p-785] 

; mpf : + 4186100100211382 -785
; mpfd: + 4186100100211382 -785 (9.48197e-237) class: Pos. norm. non-zero
; hwf : + 4186100100211382 -785 (9.48197e-237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101101 #b1100011101000000111111111100100000101110010001011001)))
(assert (= y (fp #b0 #b11111111101 #b1101011111100011010000011100101011110110110110100111)))
(assert (= r (fp #b0 #b00011101110 #b1110110111110011110001100001011101111010001010110110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
