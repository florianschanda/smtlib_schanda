(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.813276382924359442228023908683098852634429931640625p218 {- 3662671215087370 218 (-7.63841e+065)}
; Y = -1.611383807282148250550335433217696845531463623046875p-1 {- 2753427886656238 -1 (-0.805692)}
; -1.813276382924359442228023908683098852634429931640625p218 / -1.611383807282148250550335433217696845531463623046875p-1 == 1.1252914263689508533872185580548830330371856689453125p219
; [HW: 1.1252914263689508533872185580548830330371856689453125p219] 

; mpf : + 564262421107925 219
; mpfd: + 564262421107925 219 (9.48056e+065) class: Pos. norm. non-zero
; hwf : + 564262421107925 219 (9.48056e+065) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011001 #b1101000000110010111000011000101101000100111100001010)))
(assert (= y (fp #b1 #b01111111110 #b1001110010000011101001100011000110010100101011101110)))
(assert (= r (fp #b0 #b10011011010 #b0010000000010011000110010101001010111001010011010101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
