(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.058603864784810166810302689555101096630096435546875p-842 {+ 263928343607342 -842 (3.60975e-254)}
; Y = -1.504029290448523514811540735536254942417144775390625p-447 {- 2269946124647786 -447 (-4.13855e-135)}
; 1.058603864784810166810302689555101096630096435546875p-842 / -1.504029290448523514811540735536254942417144775390625p-447 == -1.4076904904812312935291629401035606861114501953125p-396
; [HW: -1.4076904904812312935291629401035606861114501953125p-396] 

; mpf : - 1836074741013768 -396
; mpfd: - 1836074741013768 -396 (-8.72226e-120) class: Neg. norm. non-zero
; hwf : - 1836074741013768 -396 (-8.72226e-120) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110101 #b0000111100000000101010011011001010101011100000101110)))
(assert (= y (fp #b1 #b01001000000 #b1000000100001000000100000100011010110011110101101010)))
(assert (= r (fp #b1 #b01001110011 #b0110100001011110011001110110101110000001110100001000)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
