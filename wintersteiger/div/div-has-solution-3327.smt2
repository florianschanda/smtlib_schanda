(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1559035140374318562095368179143406450748443603515625p666 {+ 702127007724729 666 (3.53915e+200)}
; Y = -1.2431807225691893226127149318926967680454254150390625p480 {- 1095188611546289 480 (-3.8809e+144)}
; 1.1559035140374318562095368179143406450748443603515625p666 / -1.2431807225691893226127149318926967680454254150390625p480 == -1.8595904731350916261334305090713314712047576904296875p185
; [HW: -1.8595904731350916261334305090713314712047576904296875p185] 

; mpf : - 3871251334502427 185
; mpfd: - 3871251334502427 185 (-9.11941e+055) class: Neg. norm. non-zero
; hwf : - 3871251334502427 185 (-9.11941e+055) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011001 #b0010011111101001010010101110111000011111010010111001)))
(assert (= y (fp #b1 #b10111011111 #b0011111001000001000101111000001001110011110010110001)))
(assert (= r (fp #b1 #b10010111000 #b1101110000001110000111110000101000010001100000011011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
