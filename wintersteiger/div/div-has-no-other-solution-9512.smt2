(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0803627755593343540141404446330852806568145751953125p993 {+ 361921766063477 993 (9.04389e+298)}
; Y = 1.263537567570809816430710270651616156101226806640625p125 {+ 1186867691110026 125 (5.37449e+037)}
; 1.0803627755593343540141404446330852806568145751953125p993 / 1.263537567570809816430710270651616156101226806640625p125 == 1.7100603943836276688017505875905044376850128173828125p867
; [HW: 1.7100603943836276688017505875905044376850128173828125p867] 

; mpf : + 3197827727556653 867
; mpfd: + 3197827727556653 867 (1.68274e+261) class: Pos. norm. non-zero
; hwf : + 3197827727556653 867 (1.68274e+261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100000 #b0001010010010010101001111010010011010111110101110101)))
(assert (= y (fp #b0 #b10001111100 #b0100001101110111001100101011000111111011111010001010)))
(assert (= r (fp #b0 #b11101100010 #b1011010111000110100001001001110000010000000000101101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
