(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1925857039470686427051759892492555081844329833984375p-885 {- 867328904532903 -885 (-4.62321e-267)}
; Y = 1.04865407767908980218862780020572245121002197265625p-677 {+ 219118486105604 -677 (1.67234e-204)}
; -1.1925857039470686427051759892492555081844329833984375p-885 / 1.04865407767908980218862780020572245121002197265625p-677 == -1.13725367528873988476334488950669765472412109375p-208
; [HW: -1.13725367528873988476334488950669765472412109375p-208] 

; mpf : - 618135600885600 -208
; mpfd: - 618135600885600 -208 (-2.76451e-063) class: Neg. norm. non-zero
; hwf : - 618135600885600 -208 (-2.76451e-063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001010 #b0011000101001101010010111111010000100001001110100111)))
(assert (= y (fp #b0 #b00101011010 #b0000110001110100100101111111100001110010111000000100)))
(assert (= r (fp #b1 #b01100101111 #b0010001100100011000011101000111010011110111101100000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
