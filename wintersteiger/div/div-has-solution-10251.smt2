(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.661189942540757247257943163276650011539459228515625p609 {+ 2977734778847674 609 (3.52928e+183)}
; Y = -1.4727677584465095339538720509153790771961212158203125p-323 {- 2129156700772485 -323 (-8.61878e-098)}
; 1.661189942540757247257943163276650011539459228515625p609 / -1.4727677584465095339538720509153790771961212158203125p-323 == -1.127937472159899368051583223859779536724090576171875p932
; [HW: -1.127937472159899368051583223859779536724090576171875p932] 

; mpf : - 576179151946046 932
; mpfd: - 576179151946046 932 (-4.09488e+280) class: Neg. norm. non-zero
; hwf : - 576179151946046 932 (-4.09488e+280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001100000 #b1010100101000011101111100111101110101000000110111010)))
(assert (= y (fp #b1 #b01010111100 #b0111100100000111010011101100110100100001100010000101)))
(assert (= r (fp #b1 #b11110100011 #b0010000011000000100000101001101011011100000100111110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
