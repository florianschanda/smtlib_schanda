(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5631623985518137143202466177172027528285980224609375p-57 {- 2536257968267023 -57 (-1.08466e-017)}
; Y = -1.2022413203298782935490862655569799244403839111328125p-523 {- 910813934876557 -523 (-4.37828e-158)}
; -1.5631623985518137143202466177172027528285980224609375p-57 / -1.2022413203298782935490862655569799244403839111328125p-523 == 1.3002068487572058241852346327505074441432952880859375p466
; [HW: 1.3002068487572058241852346327505074441432952880859375p466] 

; mpf : + 1352011452197023 466
; mpfd: + 1352011452197023 466 (2.47737e+140) class: Pos. norm. non-zero
; hwf : + 1352011452197023 466 (2.47737e+140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111000110 #b1001000000101011011010010011010000011101111100001111)))
(assert (= y (fp #b1 #b00111110100 #b0011001111000110000101100101000010110111011110001101)))
(assert (= r (fp #b0 #b10111010001 #b0100110011011010010110110010010101110010100010011111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
