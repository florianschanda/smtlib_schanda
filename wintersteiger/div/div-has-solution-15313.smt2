(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0381329923180386831660371171892620623111724853515625p406 {- 171735729994041 406 (-1.71566e+122)}
; Y = -1.33362662639867135538906950387172400951385498046875p752 {- 1502520750329932 752 (-3.1593e+226)}
; -1.0381329923180386831660371171892620623111724853515625p406 / -1.33362662639867135538906950387172400951385498046875p752 == 1.5568570269497625790933170719654299318790435791015625p-347
; [HW: 1.5568570269497625790933170719654299318790435791015625p-347] 

; mpf : + 2507861099069593 -347
; mpfd: + 2507861099069593 -347 (5.43051e-105) class: Pos. norm. non-zero
; hwf : + 2507861099069593 -347 (5.43051e-105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010101 #b0000100111000011000101010111001011100111100100111001)))
(assert (= y (fp #b1 #b11011101111 #b0101010101101000100011011111100101110101000001001100)))
(assert (= r (fp #b0 #b01010100100 #b1000111010001110001011101001111101001100000010011001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
