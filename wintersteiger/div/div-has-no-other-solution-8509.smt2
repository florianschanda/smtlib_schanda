(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.07762760358683795658407689188607037067413330078125p565 {- 349603646587348 565 (-1.30142e+170)}
; Y = -1.6868034905829414338285232588532380759716033935546875p-687 {- 3093087944266091 -687 (-2.62698e-207)}
; -1.07762760358683795658407689188607037067413330078125p565 / -1.6868034905829414338285232588532380759716033935546875p-687 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110100 #b0001001111011111011001110001001010101100000111010100)))
(assert (= y (fp #b1 #b00101010000 #b1010111111010010010110101000001011010101000101101011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
