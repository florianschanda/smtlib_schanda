(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1224369846697950237057739286683499813079833984375p-159 {- 551407158535256 -159 (-1.53601e-048)}
; Y = 1.9480444137035650697953315102495253086090087890625p-50 {+ 4269612468286056 -50 (1.73021e-015)}
; -1.1224369846697950237057739286683499813079833984375p-159 / 1.9480444137035650697953315102495253086090087890625p-50 == -1.1523730945495749278251196301425807178020477294921875p-110
; [HW: -1.1523730945495749278251196301425807178020477294921875p-110] 

; mpf : - 686227411834755 -110
; mpfd: - 686227411834755 -110 (-8.87756e-034) class: Neg. norm. non-zero
; hwf : - 686227411834755 -110 (-8.87756e-034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100000 #b0001111101011000000001111011110011111010010001011000)))
(assert (= y (fp #b0 #b01111001101 #b1111001010110011000010011110100000000011001001101000)))
(assert (= r (fp #b1 #b01110010001 #b0010011100000001111011000101000111100001011110000011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
