(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.780498454777350136879476849571801722049713134765625p269 {- 3515052550098522 269 (-1.68893e+081)}
; Y = 1.4757346061498932687783280925941653549671173095703125p134 {+ 2142518194983909 134 (3.21387e+040)}
; -1.780498454777350136879476849571801722049713134765625p269 / 1.4757346061498932687783280925941653549671173095703125p134 == -1.206516705210680218129937202320434153079986572265625p135
; [HW: -1.206516705210680218129937202320434153079986572265625p135] 

; mpf : - 930068556632602 135
; mpfd: - 930068556632602 135 (-5.25512e+040) class: Neg. norm. non-zero
; hwf : - 930068556632602 135 (-5.25512e+040) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001100 #b1100011111001110101111110010100111011000111001011010)))
(assert (= y (fp #b0 #b10010000101 #b0111100111001001101111100011111011111101001111100101)))
(assert (= r (fp #b1 #b10010000110 #b0011010011011110010001110101111011110101001000011010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
