(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7729105925680308519787331533734686672687530517578125p589 {+ 3480879856680093 589 (3.59215e+177)}
; Y = 1.499376477534774654287730299984104931354522705078125p747 {+ 2248991718143202 747 (1.10999e+225)}
; 1.7729105925680308519787331533734686672687530517578125p589 / 1.499376477534774654287730299984104931354522705078125p747 == 1.1824319102851286178434975226991809904575347900390625p-158
; [HW: 1.1824319102851286178434975226991809904575347900390625p-158] 

; mpf : + 821600283180593 -158
; mpfd: + 821600283180593 -158 (3.23621e-048) class: Pos. norm. non-zero
; hwf : + 821600283180593 -158 (3.23621e-048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001100 #b1100010111011101011101111111010111001111110010011101)))
(assert (= y (fp #b0 #b11011101010 #b0111111111010111001000110000011101100111010011100010)))
(assert (= r (fp #b0 #b01101100001 #b0010111010110011110110111001000001101011111000110001)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
