(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6592736368229912269356418619281612336635589599609375p111 {- 2969104505131215 111 (-4.30772e+033)}
; Y = -1.2549050721699523958108102306141518056392669677734375p49 {- 1147990388039447 49 (-7.06449e+014)}
; -1.6592736368229912269356418619281612336635589599609375p111 / -1.2549050721699523958108102306141518056392669677734375p49 == 1.3222304010245284899838225101120769977569580078125p62
; [HW: 1.3222304010245284899838225101120769977569580078125p62] 

; mpf : + 1451196713981512 62
; mpfd: + 1451196713981512 62 (6.09771e+018) class: Pos. norm. non-zero
; hwf : + 1451196713981512 62 (6.09771e+018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101110 #b1010100011000110001010000011010101000101000011001111)))
(assert (= y (fp #b1 #b10000110000 #b0100000101000001011101010111010010001101111100010111)))
(assert (= r (fp #b0 #b10000111101 #b0101001001111101101100010000101000101101011001001000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
