(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7980066133063747901843498766538687050342559814453125p-193 {- 3593902286325781 -193 (-1.43219e-058)}
; Y = -1.54211084738941739402662278735078871250152587890625p848 {- 2441450210296484 848 (-2.89436e+255)}
; -1.7980066133063747901843498766538687050342559814453125p-193 / -1.54211084738941739402662278735078871250152587890625p848 == 0.0000022238514574279832913816790096461772918701171875p-1022
; [HW: 0.0000022238514574279832913816790096461772918701171875p-1022] 

; mpf : + 10015336595 -1023
; mpfd: + 10015336595 -1023 (4.94823e-314) class: Pos. denorm.
; hwf : + 10015336595 -1023 (4.94823e-314) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111110 #b1100110001001010001010010101001000100100100000010101)))
(assert (= y (fp #b1 #b11101001111 #b1000101011000111110001101100100001011000001010100100)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000001001010100111101011110100010010011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
