(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3504100266818654940692567834048531949520111083984375p-8 {- 1578106465591335 -8 (-0.00527504)}
; Y = -1.28747681321846751956172738573513925075531005859375p-254 {- 1294680468888348 -254 (-4.44755e-077)}
; -1.3504100266818654940692567834048531949520111083984375p-8 / -1.28747681321846751956172738573513925075531005859375p-254 == 1.0488810461029398624077657586894929409027099609375p246
; [HW: 1.0488810461029398624077657586894929409027099609375p246] 

; mpf : + 220140661014680 246
; mpfd: + 220140661014680 246 (1.18606e+074) class: Pos. norm. non-zero
; hwf : + 220140661014680 246 (1.18606e+074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110111 #b0101100110110100011110001011010011001010000000100111)))
(assert (= y (fp #b1 #b01100000001 #b0100100110011000000101001001011100100001101100011100)))
(assert (= r (fp #b0 #b10011110101 #b0000110010000011011101111101111001101000000010011000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
