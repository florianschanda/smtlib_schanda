(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.159031496485054990586149870068766176700592041015625p48 {+ 716214188310266 48 (3.26238e+014)}
; Y = 1.7892111024331323054781250903033651411533355712890625p489 {+ 3554290826834513 489 (2.85976e+147)}
; 1.159031496485054990586149870068766176700592041015625p48 / 1.7892111024331323054781250903033651411533355712890625p489 == 1.2955782522351870778010152207571081817150115966796875p-442
; [HW: 1.2955782522351870778010152207571081817150115966796875p-442] 

; mpf : + 1331166106625211 -442
; mpfd: + 1331166106625211 -442 (1.14079e-133) class: Pos. norm. non-zero
; hwf : + 1331166106625211 -442 (1.14079e-133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101111 #b0010100010110110010010011100010001101111111011111010)))
(assert (= y (fp #b0 #b10111101000 #b1100101000001001101111010010001010010111001001010001)))
(assert (= r (fp #b0 #b01001000101 #b0100101110101011000001000010111011000010010010111011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
