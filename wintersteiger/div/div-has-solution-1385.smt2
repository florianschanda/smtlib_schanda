(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6371941312059306028459104709327220916748046875p567 {+ 2869667251861696 567 (7.90875e+170)}
; Y = 1.0504113403180583841134421163587830960750579833984375p757 {+ 227032493471655 757 (7.96281e+227)}
; 1.6371941312059306028459104709327220916748046875p567 / 1.0504113403180583841134421163587830960750579833984375p757 == 1.558621911593412345808928876067511737346649169921875p-190
; [HW: 1.558621911593412345808928876067511737346649169921875p-190] 

; mpf : + 2515809432893086 -190
; mpfd: + 2515809432893086 -190 (9.93211e-058) class: Pos. norm. non-zero
; hwf : + 2515809432893086 -190 (9.93211e-058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110110 #b1010001100011111001001111001001010111011100011000000)))
(assert (= y (fp #b0 #b11011110100 #b0000110011100111110000011111001000000011011110100111)))
(assert (= r (fp #b0 #b01101000001 #b1000111100000001110110000111100100011111011010011110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
