(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4243389242592321419778045310522429645061492919921875p800 {+ 1911052621172675 800 (9.49751e+240)}
; Y = 1.9117396196459413015844575056689791381359100341796875p-214 {+ 4106110211296379 -214 (7.26122e-065)}
; 1.4243389242592321419778045310522429645061492919921875p800 / 1.9117396196459413015844575056689791381359100341796875p-214 == 1.4900971969425658159025260829366743564605712890625p1013
; [HW: 1.4900971969425658159025260829366743564605712890625p1013] 

; mpf : + 2207201553525864 1013
; mpfd: + 2207201553525864 1013 (1.30798e+305) class: Pos. norm. non-zero
; hwf : + 2207201553525864 1013 (1.30798e+305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011111 #b0110110010100001011110011100101000011100111111000011)))
(assert (= y (fp #b0 #b01100101001 #b1110100101100111110001001000100011011000110001111011)))
(assert (= r (fp #b0 #b11111110100 #b0111110101110111000000101000100010111010110001101000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
