(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4230825125843959977345321021857671439647674560546875p234 {- 1905394246022059 234 (-3.9287e+070)}
; Y = 1.810462900182471468468747843871824443340301513671875p923 {+ 3650000415259390 923 (1.28374e+278)}
; -1.4230825125843959977345321021857671439647674560546875p234 / 1.810462900182471468468747843871824443340301513671875p923 == -1.5720648155131680123730575360241346061229705810546875p-690
; [HW: -1.5720648155131680123730575360241346061229705810546875p-690] 

; mpf : - 2576350889976875 -690
; mpfd: - 2576350889976875 -690 (-3.06037e-208) class: Neg. norm. non-zero
; hwf : - 2576350889976875 -690 (-3.06037e-208) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101001 #b0110110001001111001000101011001100001111001110101011)))
(assert (= y (fp #b0 #b11110011010 #b1100111101111010011111110010001011100111101011111110)))
(assert (= r (fp #b1 #b00101001101 #b1001001001110010110101101111100111010010010000101011)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
