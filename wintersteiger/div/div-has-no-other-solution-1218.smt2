(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.04584496269435067716813136939890682697296142578125p704 {+ 206467356907092 704 (8.80206e+211)}
; Y = -1.4867162544343699437376926653087139129638671875p-693 {- 2191975142105792 -693 (-3.61777e-209)}
; 1.04584496269435067716813136939890682697296142578125p704 / -1.4867162544343699437376926653087139129638671875p-693 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111111 #b0000101110111100011111101101011101110101011001010100)))
(assert (= y (fp #b1 #b00101001010 #b0111110010011001011011111011101100111010001011000000)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
