(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3818228124332900819126734859310090541839599609375p148 {+ 1719577075796120 148 (4.93051e+044)}
; Y = 1.621745639933033000801287926151417195796966552734375p-1020 {+ 2800093432321638 -1020 (1.4434e-307)}
; 1.3818228124332900819126734859310090541839599609375p148 / 1.621745639933033000801287926151417195796966552734375p-1020 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010011 #b0110000110111111001000111100110001000100100010011000)))
(assert (= y (fp #b0 #b00000000011 #b1001111100101010101110001110010111110001011001100110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
