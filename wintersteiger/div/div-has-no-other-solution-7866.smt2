(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8234181822807451478496432173415087163448333740234375p-413 {- 3708345818889655 -413 (-8.61982e-125)}
; Y = -1.8528136289790870794291777201578952372074127197265625p-257 {- 3840731141686697 -257 (-8.00061e-078)}
; -1.8234181822807451478496432173415087163448333740234375p-413 / -1.8528136289790870794291777201578952372074127197265625p-257 == 1.9682693971605347282860520863323472440242767333984375p-157
; [HW: 1.9682693971605347282860520863323472440242767333984375p-157] 

; mpf : + 4360697696246439 -157
; mpfd: + 4360697696246439 -157 (1.0774e-047) class: Pos. norm. non-zero
; hwf : + 4360697696246439 -157 (1.0774e-047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100010 #b1101001011001011100010001011001111010011110110110111)))
(assert (= y (fp #b1 #b01011111110 #b1101101001010001111111100111011000001100010110101001)))
(assert (= r (fp #b0 #b01101100010 #b1111011111100000100000001101001010000101101010100111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
