(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0282746184934736799476695523480884730815887451171875p-367 {+ 127337561311251 -367 (3.42059e-111)}
; Y = 1.234423215588353439642332887160591781139373779296875p-603 {+ 1055748306370702 -603 (3.71858e-182)}
; 1.0282746184934736799476695523480884730815887451171875p-367 / 1.234423215588353439642332887160591781139373779296875p-603 == 1.6660001294667410309813249114085920155048370361328125p235
; [HW: 1.6660001294667410309813249114085920155048370361328125p235] 

; mpf : + 2999397934895117 235
; mpfd: + 2999397934895117 235 (9.19865e+070) class: Pos. norm. non-zero
; hwf : + 2999397934895117 235 (9.19865e+070) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010000 #b0000011100111101000000010110000110111100100000010011)))
(assert (= y (fp #b0 #b00110100100 #b0011110000000011001010001110110001100000000010001110)))
(assert (= r (fp #b0 #b10011101010 #b1010101001111110111111000000011100110001000000001101)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
