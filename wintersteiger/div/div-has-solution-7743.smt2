(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4018734200787346111383158131502568721771240234375p-616 {+ 1809876984916696 -616 (5.15503e-186)}
; Y = -1.886833346890956608632450297591276466846466064453125p-487 {- 3993942330597842 -487 (-4.722e-147)}
; 1.4018734200787346111383158131502568721771240234375p-616 / -1.886833346890956608632450297591276466846466064453125p-487 == -1.48595361894433519722724668099544942378997802734375p-130
; [HW: -1.48595361894433519722724668099544942378997802734375p-130] 

; mpf : - 2188540537197052 -130
; mpfd: - 2188540537197052 -130 (-1.09171e-039) class: Neg. norm. non-zero
; hwf : - 2188540537197052 -130 (-1.09171e-039) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110010111 #b0110011011100001001011010010110001011110101011011000)))
(assert (= y (fp #b1 #b01000011000 #b1110001100000111100000101001110111100110000111010010)))
(assert (= r (fp #b1 #b01101111101 #b0111110001100111011101001101010010111101000111111100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
