(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.02306473626467919757487834431231021881103515625p-235 {- 103874337647008 -235 (-1.85291e-071)}
; Y = -1.8952683128104410581471483965287916362285614013671875p329 {- 4031930039969715 329 (-2.07271e+099)}
; -1.02306473626467919757487834431231021881103515625p-235 / -1.8952683128104410581471483965287916362285614013671875p329 == 1.079598840279880622716746074729599058628082275390625p-565
; [HW: 1.079598840279880622716746074729599058628082275390625p-565] 

; mpf : + 358481307423594 -565
; mpfd: + 358481307423594 -565 (8.93953e-171) class: Pos. norm. non-zero
; hwf : + 358481307423594 -565 (8.93953e-171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010100 #b0000010111100111100100100000111111110010100110100000)))
(assert (= y (fp #b1 #b10101001000 #b1110010100110000010011011101110010101010011110110011)))
(assert (= r (fp #b0 #b00111001010 #b0001010001100000100101101110111111001101001101101010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
