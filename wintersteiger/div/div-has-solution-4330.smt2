(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.76737167440062403755973718944005668163299560546875p-689 {- 3455934786885324 -689 (-6.88115e-208)}
; Y = -1.1940288417153273048398887112853117287158966064453125p-720 {- 873828219248277 -720 (-2.1648e-217)}
; -1.76737167440062403755973718944005668163299560546875p-689 / -1.1940288417153273048398887112853117287158966064453125p-720 == 1.4801750281522843000203693009098060429096221923828125p31
; [HW: 1.4801750281522843000203693009098060429096221923828125p31] 

; mpf : + 2162516077859245 31
; mpfd: + 2162516077859245 31 (3.17865e+009) class: Pos. norm. non-zero
; hwf : + 2162516077859245 31 (3.17865e+009) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101001110 #b1100010001110010011110000101010101101101011011001100)))
(assert (= y (fp #b1 #b00100101111 #b0011000110101011110111111100100110100101111010010101)))
(assert (= r (fp #b0 #b10000011110 #b0111101011101100110000000010101001000101000110101101)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
