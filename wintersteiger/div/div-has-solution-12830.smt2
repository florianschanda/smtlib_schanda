(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1945378285411845098451522062532603740692138671875p-405 {- 876120492127544 -405 (-1.44561e-122)}
; Y = 1.9802274672668840338474183226935565471649169921875p97 {+ 4414552056321464 97 (3.1378e+029)}
; -1.1945378285411845098451522062532603740692138671875p-405 / 1.9802274672668840338474183226935565471649169921875p97 == -1.2064652655180962970149494140059687197208404541015625p-503
; [HW: -1.2064652655180962970149494140059687197208404541015625p-503] 

; mpf : - 929836892852249 -503
; mpfd: - 929836892852249 -503 (-4.60709e-152) class: Neg. norm. non-zero
; hwf : - 929836892852249 -503 (-4.60709e-152) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101010 #b0011000111001101001110110010101101101011010100111000)))
(assert (= y (fp #b0 #b10001100000 #b1111101011110000001011111111001010001101010110111000)))
(assert (= r (fp #b1 #b01000001000 #b0011010011011010111010000101101100101001000000011001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
