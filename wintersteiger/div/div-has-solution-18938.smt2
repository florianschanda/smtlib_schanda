(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5594659547874447635962269487208686769008636474609375p50 {+ 2519610665507215 50 (1.7558e+015)}
; Y = -1.4491624628603876345778189715929329395294189453125p361 {- 2022847900366856 361 (-6.80684e+108)}
; 1.5594659547874447635962269487208686769008636474609375p50 / -1.4491624628603876345778189715929329395294189453125p361 == -1.07611533886224020051258776220493018627166748046875p-311
; [HW: -1.07611533886224020051258776220493018627166748046875p-311] 

; mpf : - 342793011737164 -311
; mpfd: - 342793011737164 -311 (-2.57947e-094) class: Neg. norm. non-zero
; hwf : - 342793011737164 -311 (-2.57947e-094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000110001 #b1000111100111001001010010010101100001001100110001111)))
(assert (= y (fp #b1 #b10101101000 #b0111001011111100010011111010100010010011100000001000)))
(assert (= r (fp #b1 #b01011001000 #b0001001101111100010010110111101100100011001001001100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
