(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7296827081521504165806391029036603868007659912109375p346 {+ 3286198772532719 346 (2.47939e+104)}
; Y = -1.38598958927834559062830521725118160247802734375p-86 {- 1738342570442848 -86 (-1.79135e-026)}
; 1.7296827081521504165806391029036603868007659912109375p346 / -1.38598958927834559062830521725118160247802734375p-86 == -1.2479766958803482079787272596149705350399017333984375p432
; [HW: -1.2479766958803482079787272596149705350399017333984375p432] 

; mpf : - 1116787755163303 432
; mpfd: - 1116787755163303 432 (-1.38409e+130) class: Neg. norm. non-zero
; hwf : - 1116787755163303 432 (-1.38409e+130) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101011001 #b1011101011001100011111000110011111111000010111101111)))
(assert (= y (fp #b1 #b01110101001 #b0110001011010000001101101011011010001100000001100000)))
(assert (= r (fp #b1 #b10110101111 #b0011111101111011011001101001011011111001111010100111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
