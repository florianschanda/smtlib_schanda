(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6258413592839044969906581172836013138294219970703125p107 {- 2818538912464037 107 (-2.63808e+032)}
; Y = -1.3842400707779993762613912622327916324138641357421875p467 {- 1730463439576611 467 (-5.27496e+140)}
; -1.6258413592839044969906581172836013138294219970703125p107 / -1.3842400707779993762613912622327916324138641357421875p467 == 1.174537129509706456786943817860446870326995849609375p-360
; [HW: 1.174537129509706456786943817860446870326995849609375p-360] 

; mpf : + 786045351422230 -360
; mpfd: + 786045351422230 -360 (5.00113e-109) class: Pos. norm. non-zero
; hwf : + 786045351422230 -360 (5.00113e-109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101010 #b1010000000110111001000111010101010011011110010100101)))
(assert (= y (fp #b1 #b10111010010 #b0110001001011101100011101010100111001101111000100011)))
(assert (= r (fp #b0 #b01010010111 #b0010110010101110011101110001111100101110100100010110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
