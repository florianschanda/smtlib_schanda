(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9420569351905070387687146649113856256008148193359375p-223 {- 4242647262285759 -223 (-1.4407e-067)}
; Y = 1.1776415339428105699681736950878985226154327392578125p-798 {+ 800026346070365 -798 (7.06442e-241)}
; -1.9420569351905070387687146649113856256008148193359375p-223 / 1.1776415339428105699681736950878985226154327392578125p-798 == -1.649107032331298849925360627821646630764007568359375p575
; [HW: -1.649107032331298849925360627821646630764007568359375p575] 

; mpf : - 2923318188930806 575
; mpfd: - 2923318188930806 575 (-2.03937e+173) class: Neg. norm. non-zero
; hwf : - 2923318188930806 575 (-2.03937e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100100000 #b1111000100101010101001001010111110011100111110111111)))
(assert (= y (fp #b0 #b00011100001 #b0010110101111001111010100110001010110010000101011101)))
(assert (= r (fp #b1 #b11000111110 #b1010011000101011111000001110001101110111011011110110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
