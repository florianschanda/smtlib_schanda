(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4792085648223529670275411262991838157176971435546875p893 {+ 2158163513966699 893 (9.76822e+268)}
; Y = 1.95123119007766465671238620416261255741119384765625p683 {+ 4283964433176964 683 (7.83061e+205)}
; 1.4792085648223529670275411262991838157176971435546875p893 / 1.95123119007766465671238620416261255741119384765625p683 == 1.5161797047365526136530888834386132657527923583984375p209
; [HW: 1.5161797047365526136530888834386132657527923583984375p209] 

; mpf : + 2324666725907751 209
; mpfd: + 2324666725907751 209 (1.24744e+063) class: Pos. norm. non-zero
; hwf : + 2324666725907751 209 (1.24744e+063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111100 #b0111101010101101011010011001100111100000000001101011)))
(assert (= y (fp #b0 #b11010101010 #b1111001110000011111000110010010001010001100110000100)))
(assert (= r (fp #b0 #b10011010000 #b1000010000100100010110100110011010110011110100100111)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
