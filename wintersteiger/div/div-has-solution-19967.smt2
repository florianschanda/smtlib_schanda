(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.04832997358651258679174134158529341220855712890625p714 {+ 217658851035044 714 (9.03472e+214)}
; Y = 1.650701643702159326920764215174131095409393310546875p-738 {+ 2930499680106414 -738 (1.14165e-222)}
; 1.04832997358651258679174134158529341220855712890625p714 / 1.650701643702159326920764215174131095409393310546875p-738 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001001 #b0000110001011111010110100110011111111000011110100100)))
(assert (= y (fp #b0 #b00100011101 #b1010011010010100011000100000011100100111011110101110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
