(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6519845251072904357414472542586736381053924560546875p562 {+ 2936277264324523 562 (2.49381e+169)}
; Y = -1.898376007457331038352776886313222348690032958984375p676 {- 4045925852423430 676 (-5.95195e+203)}
; 1.6519845251072904357414472542586736381053924560546875p562 / -1.898376007457331038352776886313222348690032958984375p676 == -1.7404186721891250488880586999584920704364776611328125p-115
; [HW: -1.7404186721891250488880586999584920704364776611328125p-115] 

; mpf : - 3334549256169101 -115
; mpfd: - 3334549256169101 -115 (-4.18991e-035) class: Neg. norm. non-zero
; hwf : - 3334549256169101 -115 (-4.18991e-035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110001 #b1010011011101000011101010011010011010101011110101011)))
(assert (= y (fp #b1 #b11010100011 #b1110010111111011111110000101001110001010010100000110)))
(assert (= r (fp #b1 #b01110001100 #b1011110110001100000100111111111001100110011010001101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
