(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8365010593365642677099458524025976657867431640625p-352 {- 3767265859123176 -352 (-2.00186e-106)}
; Y = 1.784689779943267495809777756221592426300048828125p255 {+ 3533928600553936 255 (1.03326e+077)}
; -1.8365010593365642677099458524025976657867431640625p-352 / 1.784689779943267495809777756221592426300048828125p255 == -1.029030972203440086332193459384143352508544921875p-607
; [HW: -1.029030972203440086332193459384143352508544921875p-607] 

; mpf : - 130743875597616 -607
; mpfd: - 130743875597616 -607 (-1.93741e-183) class: Neg. norm. non-zero
; hwf : - 130743875597616 -607 (-1.93741e-183) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011111 #b1101011000100100111011101111010011101011011111101000)))
(assert (= y (fp #b0 #b10011111110 #b1100100011100001011011011110111001011100100111010000)))
(assert (= r (fp #b1 #b00110100000 #b0000011101101110100100101110010000101111010100110000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
