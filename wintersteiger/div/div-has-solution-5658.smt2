(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4106831571515356937851493057678453624248504638671875p226 {+ 1849552513514995 226 (1.52128e+068)}
; Y = 1.9631021296133102094216837940621189773082733154296875p-769 {+ 4337426392046235 -769 (6.32232e-232)}
; 1.4106831571515356937851493057678453624248504638671875p226 / 1.9631021296133102094216837940621189773082733154296875p-769 == 1.4371979285962168670920391377876512706279754638671875p994
; [HW: 1.4371979285962168670920391377876512706279754638671875p994] 

; mpf : + 1968964428313075 994
; mpfd: + 1968964428313075 994 (2.4062e+299) class: Pos. norm. non-zero
; hwf : + 1968964428313075 994 (2.4062e+299) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011100001 #b0110100100100010100010000000100011111011110111110011)))
(assert (= y (fp #b0 #b00011111110 #b1111011010001101110111000111010101100101101010011011)))
(assert (= r (fp #b0 #b11111100001 #b0110111111101100001101000001010100110011000111110011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
