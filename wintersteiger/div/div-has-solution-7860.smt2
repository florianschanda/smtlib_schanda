(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.905613907432326836755009935586713254451751708984375p29 {- 4078522456053766 29 (-1.02307e+009)}
; Y = 1.4178607915344818568570417482987977564334869384765625p-110 {+ 1881877705047433 -110 (1.09228e-033)}
; -1.905613907432326836755009935586713254451751708984375p29 / 1.4178607915344818568570417482987977564334869384765625p-110 == -1.3440063501367955911547369396430440247058868408203125p139
; [HW: -1.3440063501367955911547369396430440247058868408203125p139] 

; mpf : - 1549266870289157 139
; mpfd: - 1549266870289157 139 (-9.36636e+041) class: Neg. norm. non-zero
; hwf : - 1549266870289157 139 (-9.36636e+041) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011100 #b1110011111010110010100000010001100111001100000000110)))
(assert (= y (fp #b0 #b01110010001 #b0110101011111000111011001100000111101011110110001001)))
(assert (= r (fp #b1 #b10010001010 #b0101100000010000110011001101011101110100001100000101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
