(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1739583695090975989927528644329868257045745849609375p816 {+ 783438848099151 816 (5.13014e+245)}
; Y = -1.5067922302980798487936908713891170918941497802734375p550 {- 2282389299524695 550 (-5.5533e+165)}
; 1.1739583695090975989927528644329868257045745849609375p816 / -1.5067922302980798487936908713891170918941497802734375p550 == -1.558221957750419495170035588671453297138214111328125p265
; [HW: -1.558221957750419495170035588671453297138214111328125p265] 

; mpf : - 2514008200914818 265
; mpfd: - 2514008200914818 265 (-9.238e+079) class: Neg. norm. non-zero
; hwf : - 2514008200914818 265 (-9.238e+079) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100101111 #b0010110010001000100010010010001111101000001101001111)))
(assert (= y (fp #b1 #b11000100101 #b1000000110111101001000101011011011111111010001010111)))
(assert (= r (fp #b1 #b10100001000 #b1000111011100111101000100101110001110010011110000010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
