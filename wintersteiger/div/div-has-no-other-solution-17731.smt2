(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.484989281148806572474541098927147686481475830078125p75 {- 2184197545860450 75 (-5.61013e+022)}
; Y = 1.0319812841719191442990677387570030987262725830078125p-911 {+ 144030899479485 -911 (5.96137e-275)}
; -1.484989281148806572474541098927147686481475830078125p75 / 1.0319812841719191442990677387570030987262725830078125p-911 == -1.438969198303232222002634443924762308597564697265625p986
; [HW: -1.438969198303232222002634443924762308597564697265625p986] 

; mpf : - 1976941517905562 986
; mpfd: - 1976941517905562 986 (-9.41081e+296) class: Neg. norm. non-zero
; hwf : - 1976941517905562 986 (-9.41081e+296) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001010 #b0111110000101000010000011110110101110001110101100010)))
(assert (= y (fp #b0 #b00001110000 #b0000100000101111111011001110100110011010001110111101)))
(assert (= r (fp #b1 #b11111011001 #b0111000001100000010010010000111010101001111010011010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
