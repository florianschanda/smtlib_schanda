(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0761865235114778105440791478031314909458160400390625p-346 {- 343113598896945 -346 (-7.50774e-105)}
; Y = -1.44901675856829914579293472343124449253082275390625p312 {- 2022191706571300 312 (-1.20902e+094)}
; -1.0761865235114778105440791478031314909458160400390625p-346 / -1.44901675856829914579293472343124449253082275390625p312 == 1.485402452591098931833357710274867713451385498046875p-659
; [HW: 1.485402452591098931833357710274867713451385498046875p-659] 

; mpf : + 2186058304613998 -659
; mpfd: + 2186058304613998 -659 (6.20979e-199) class: Pos. norm. non-zero
; hwf : + 2186058304613998 -659 (6.20979e-199) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100101 #b0001001110000000111101011100001011100000101100110001)))
(assert (= y (fp #b1 #b10100110111 #b0111001011110010110000110010010101101000001000100100)))
(assert (= r (fp #b0 #b00101101100 #b0111110001000011010101011100101101000110111001101110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
