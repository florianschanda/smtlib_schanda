(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.584249566396263020351398154161870479583740234375p706 {- 2631226129513584 706 (-5.33336e+212)}
; Y = -1.744893948218948498407598890480585396289825439453125p855 {- 3354704107629394 855 (-4.19194e+257)}
; -1.584249566396263020351398154161870479583740234375p706 / -1.744893948218948498407598890480585396289825439453125p855 == 1.8158691741848738132603102712891995906829833984375p-150
; [HW: 1.8158691741848738132603102712891995906829833984375p-150] 

; mpf : + 3674348108842072 -150
; mpfd: + 3674348108842072 -150 (1.27229e-045) class: Pos. norm. non-zero
; hwf : + 3674348108842072 -150 (1.27229e-045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000001 #b1001010110010001011000010010110001011111110001110000)))
(assert (= y (fp #b1 #b11101010110 #b1011111010110001010111101010101010010110101101010010)))
(assert (= r (fp #b0 #b01101101001 #b1101000011011100110011010101110011110000010001011000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
