(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1691280505110430709692082018591463565826416015625p561 {- 761685025259432 561 (-8.82449e+168)}
; Y = -1.105955582125039082797002265579067170619964599609375p944 {- 477181520176150 944 (-1.64457e+284)}
; -1.1691280505110430709692082018591463565826416015625p561 / -1.105955582125039082797002265579067170619964599609375p944 == 1.057120258179466087966602572123520076274871826171875p-383
; [HW: 1.057120258179466087966602572123520076274871826171875p-383] 

; mpf : + 257246773452350 -383
; mpfd: + 257246773452350 -383 (5.36582e-116) class: Pos. norm. non-zero
; hwf : + 257246773452350 -383 (5.36582e-116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110000 #b0010101101001011111110011101010111000111111110101000)))
(assert (= y (fp #b1 #b11110101111 #b0001101100011111111001111011000000001110010000010110)))
(assert (= r (fp #b0 #b01010000000 #b0000111010011111011011101110100011010001111000111110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
