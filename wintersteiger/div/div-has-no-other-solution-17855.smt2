(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.857372371377240316547840848215855658054351806640625p-271 {+ 3861261892252298 -271 (4.8952e-082)}
; Y = -1.68990506308275900693161020171828567981719970703125p-776 {- 3107056185020532 -776 (-4.25193e-234)}
; 1.857372371377240316547840848215855658054351806640625p-271 / -1.68990506308275900693161020171828567981719970703125p-776 == -1.099098648766093422324274797574616968631744384765625p505
; [HW: -1.099098648766093422324274797574616968631744384765625p505] 

; mpf : - 446300637655898 505
; mpfd: - 446300637655898 505 (-1.15129e+152) class: Neg. norm. non-zero
; hwf : - 446300637655898 505 (-1.15129e+152) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110000 #b1101101101111100110000010111011110001111001010001010)))
(assert (= y (fp #b1 #b00011110111 #b1011000010011101100111100100001101001001000001110100)))
(assert (= r (fp #b1 #b10111111000 #b0001100101011110100001110110111110000111001101011010)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
