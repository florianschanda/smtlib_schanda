(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1523787753600966965450425050221383571624755859375p638 {+ 686252995930904 638 (1.31441e+192)}
; Y = -1.3180701141755386540665995198651216924190521240234375p318 {- 1432460447678647 318 (-7.03845e+095)}
; 1.1523787753600966965450425050221383571624755859375p638 / -1.3180701141755386540665995198651216924190521240234375p318 == -1.748584939399702609108544493210501968860626220703125p319
; [HW: -1.748584939399702609108544493210501968860626220703125p319] 

; mpf : - 3371326854135666 319
; mpfd: - 3371326854135666 319 (-1.86748e+096) class: Neg. norm. non-zero
; hwf : - 3371326854135666 319 (-1.86748e+096) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111101 #b0010011100000010010010111010000011000110101100011000)))
(assert (= y (fp #b1 #b10100111101 #b0101000101101101000010110000001000111000000010110111)))
(assert (= r (fp #b1 #b10100111110 #b1011111110100011010000110011100011111111111101110010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
