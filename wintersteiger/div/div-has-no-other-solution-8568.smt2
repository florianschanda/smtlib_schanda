(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.037822232866055127686877312953583896160125732421875p-445 {+ 170336193841886 -445 (1.14229e-134)}
; Y = 1.768168939074027168345537575078196823596954345703125p453 {+ 3459525347771378 453 (4.11256e+136)}
; 1.037822232866055127686877312953583896160125732421875p-445 / 1.768168939074027168345537575078196823596954345703125p453 == 1.173894880666269902036447092541493475437164306640625p-899
; [HW: 1.173894880666269902036447092541493475437164306640625p-899] 

; mpf : + 783152919770250 -899
; mpfd: + 783152919770250 -899 (2.77756e-271) class: Pos. norm. non-zero
; hwf : + 783152919770250 -899 (2.77756e-271) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001000010 #b0000100110101110101101111100010100111000101011011110)))
(assert (= y (fp #b0 #b10111000100 #b1100010010100110101110000011011100100000001111110010)))
(assert (= r (fp #b0 #b00001111100 #b0010110010000100010111111111100101100111010010001010)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
