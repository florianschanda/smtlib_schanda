(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.987761865525684346067691876669414341449737548828125p982 {- 4448483969512258 982 (-8.12494e+295)}
; Y = -1.0438027824807389887240560710779391229152679443359375p499 {- 197270194858047 499 (-1.70839e+150)}
; -1.987761865525684346067691876669414341449737548828125p982 / -1.0438027824807389887240560710779391229152679443359375p499 == 1.9043462030264937112633560900576412677764892578125p483
; [HW: 1.9043462030264937112633560900576412677764892578125p483] 

; mpf : + 4072813222964040 483
; mpfd: + 4072813222964040 483 (4.75591e+145) class: Pos. norm. non-zero
; hwf : + 4072813222964040 483 (4.75591e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010101 #b1111110011011101111101100010110010101011001101000010)))
(assert (= y (fp #b1 #b10111110010 #b0000101100110110101010001011111000111010100000111111)))
(assert (= r (fp #b0 #b10111100010 #b1110011110000011001110111001011001000010101101001000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
