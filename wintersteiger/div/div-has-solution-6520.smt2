(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.626901630621587546698947335244156420230865478515625p-950 {- 2823313950065338 -950 (-1.70949e-286)}
; Y = 1.087944963389090968775008150259964168071746826171875p-71 {+ 396068904348222 -71 (4.60763e-022)}
; -1.626901630621587546698947335244156420230865478515625p-950 / 1.087944963389090968775008150259964168071746826171875p-71 == -1.4953896431981046344361629962804727256298065185546875p-879
; [HW: -1.4953896431981046344361629962804727256298065185546875p-879] 

; mpf : - 2231036612510187 -879
; mpfd: - 2231036612510187 -879 (-3.71012e-265) class: Neg. norm. non-zero
; hwf : - 2231036612510187 -879 (-3.71012e-265) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001001001 #b1010000001111100101000000001000101010100001010111010)))
(assert (= y (fp #b0 #b01110111000 #b0001011010000011100011111010010110011010101000111110)))
(assert (= r (fp #b1 #b00010010000 #b0111111011010001110110110000110001010000000111101011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
