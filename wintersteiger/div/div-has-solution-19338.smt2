(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9099428626029950617493113895761780440807342529296875p-290 {- 4098018336947291 -290 (-9.60111e-088)}
; Y = -1.4456411767055443728935415492742322385311126708984375p-320 {- 2006989437352039 -320 (-6.76802e-097)}
; -1.9099428626029950617493113895761780440807342529296875p-290 / -1.4456411767055443728935415492742322385311126708984375p-320 == 1.3211735341930024301149160237400792539119720458984375p30
; [HW: 1.3211735341930024301149160237400792539119720458984375p30] 

; mpf : + 1446437008912871 30
; mpfd: + 1446437008912871 30 (1.4186e+009) class: Pos. norm. non-zero
; hwf : + 1446437008912871 30 (1.4186e+009) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011101 #b1110100011110010000000111111010000011011110001011011)))
(assert (= y (fp #b1 #b01010111111 #b0111001000010101100010100100011110110011100001100111)))
(assert (= r (fp #b0 #b10000011101 #b0101001000111000011011011100000110110011000111100111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
