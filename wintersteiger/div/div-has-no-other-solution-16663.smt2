(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4465067817742418565529760599019937217235565185546875p-29 {+ 2010887776016875 -29 (2.69433e-009)}
; Y = 1.4410604990134949776603434656863100826740264892578125p-551 {+ 1986359899005021 -551 (1.95504e-166)}
; 1.4465067817742418565529760599019937217235565185546875p-29 / 1.4410604990134949776603434656863100826740264892578125p-551 == 1.0037793574693605336278778850100934505462646484375p522
; [HW: 1.0037793574693605336278778850100934505462646484375p522] 

; mpf : + 17020712890712 522
; mpfd: + 17020712890712 522 (1.37815e+157) class: Pos. norm. non-zero
; hwf : + 17020712890712 522 (1.37815e+157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111100010 #b0111001001001110010001001011100100101001100111101011)))
(assert (= y (fp #b0 #b00111011000 #b0111000011101001010101110100001011010010000001011101)))
(assert (= r (fp #b0 #b11000001001 #b0000000011110111101011110001100010111011000101011000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
