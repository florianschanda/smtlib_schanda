(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5501023078093021378975890911533497273921966552734375p-727 {- 2477440548465623 -727 (-2.1956e-219)}
; Y = -1.44295467458112636194300648639909923076629638671875p125 {- 1994890507385580 125 (-6.13765e+037)}
; -1.5501023078093021378975890911533497273921966552734375p-727 / -1.44295467458112636194300648639909923076629638671875p125 == 1.0742557164931596513923750535468570888042449951171875p-852
; [HW: 1.0742557164931596513923750535468570888042449951171875p-852] 

; mpf : + 334418017128723 -852
; mpfd: + 334418017128723 -852 (3.57727e-257) class: Pos. norm. non-zero
; hwf : + 334418017128723 -852 (3.57727e-257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101000 #b1000110011010011100000010011110101111110101111010111)))
(assert (= y (fp #b1 #b10001111100 #b0111000101100101011110100100000011101111101011101100)))
(assert (= r (fp #b0 #b00010101011 #b0001001100000010011011000011000111100001000100010011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
