(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2814584575057821336230290398816578090190887451171875p-41 {+ 1267576204343315 -41 (5.8274e-013)}
; Y = 1.917131611350072706301261860062368214130401611328125p-626 {+ 4130393583125890 -626 (6.88454e-189)}
; 1.2814584575057821336230290398816578090190887451171875p-41 / 1.917131611350072706301261860062368214130401611328125p-626 == 1.33684974982323723224908462725579738616943359375p584
; [HW: 1.33684974982323723224908462725579738616943359375p584] 

; mpf : + 1517036407783776 584
; mpfd: + 1517036407783776 584 (8.46448e+175) class: Pos. norm. non-zero
; hwf : + 1517036407783776 584 (8.46448e+175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010110 #b0100100000001101101010010101011000101011100000010011)))
(assert (= y (fp #b0 #b00110001101 #b1110101011001001001000110010010011100000010110000010)))
(assert (= r (fp #b0 #b11001000111 #b0101011000111011110010010000001100101000000101100000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
