(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4611262042948724992896814001142047345638275146484375p-909 {- 2076727801833159 -909 (-3.37615e-274)}
; Y = 1.1860273768141507133577761123888194561004638671875p92 {+ 837792824900920 92 (5.87292e+027)}
; -1.4611262042948724992896814001142047345638275146484375p-909 / 1.1860273768141507133577761123888194561004638671875p92 == -1.231949812338800409605710228788666427135467529296875p-1001
; [HW: -1.231949812338800409605710228788666427135467529296875p-1001] 

; mpf : - 1044609088417678 -1001
; mpfd: - 1044609088417678 -1001 (-5.74867e-302) class: Neg. norm. non-zero
; hwf : - 1044609088417678 -1001 (-5.74867e-302) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110010 #b0111011000001100010111011110111011000110011011000111)))
(assert (= y (fp #b0 #b10001011011 #b0010111110011111011111010111101110010011110100111000)))
(assert (= r (fp #b1 #b00000010110 #b0011101101100001000100000001101001001110111110001110)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
