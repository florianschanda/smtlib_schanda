(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.255059789717666518527039443142712116241455078125p624 {- 1148687173929680 624 (-8.73739e+187)}
; Y = -1.866358392897196960547034905175678431987762451171875p376 {- 3901731335421118 376 (-2.87259e+113)}
; -1.255059789717666518527039443142712116241455078125p624 / -1.866358392897196960547034905175678431987762451171875p376 == 1.344929028094549838812099551432766020298004150390625p247
; [HW: 1.344929028094549838812099551432766020298004150390625p247] 

; mpf : + 1553422242395882 247
; mpfd: + 1553422242395882 247 (3.04164e+074) class: Pos. norm. non-zero
; hwf : + 1553422242395882 247 (3.04164e+074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001101111 #b0100000101001011100110010010111101011100101011010000)))
(assert (= y (fp #b1 #b10101110111 #b1101110111001001101010011110010000011011110010111110)))
(assert (= r (fp #b0 #b10011110110 #b0101100001001101010001001100111100011011011011101010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
