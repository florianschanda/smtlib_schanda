(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.931973183010727179720333879231475293636322021484375p1006 {+ 4197234079726406 1006 (1.32488e+303)}
; Y = 1.6093235145697217802762679639272391796112060546875p-883 {+ 2744149153164280 -883 (2.4955e-266)}
; 1.931973183010727179720333879231475293636322021484375p1006 / 1.6093235145697217802762679639272391796112060546875p-883 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101101 #b1110111010010101110010110110010111000111101101000110)))
(assert (= y (fp #b0 #b00010001100 #b1001101111111100101000000011011111000010101111111000)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
