(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2983053311955676800693026962107978761196136474609375p1006 {+ 1343447778414991 1006 (8.90333e+302)}
; Y = -1.3707083312869225988350763145717792212963104248046875p789 {- 1669521902646923 789 (-4.46284e+237)}
; 1.2983053311955676800693026962107978761196136474609375p1006 / -1.3707083312869225988350763145717792212963104248046875p789 == -1.8943568103604102592640856528305448591709136962890625p216
; [HW: -1.8943568103604102592640856528305448591709136962890625p216] 

; mpf : - 4027824997875409 216
; mpfd: - 4027824997875409 216 (-1.99499e+065) class: Neg. norm. non-zero
; hwf : - 4027824997875409 216 (-1.99499e+065) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101101 #b0100110001011101101111001111100110110101000110001111)))
(assert (= y (fp #b1 #b11100010100 #b0101111011100110101111011011111100111011011010001011)))
(assert (= r (fp #b1 #b10011010111 #b1110010011110100100100010110001101110011111011010001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
