(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.569282031769806184939852755633182823657989501953125p-770 {+ 2563818346147218 -770 (2.52699e-232)}
; Y = -1.54100402970198135932378136203624308109283447265625p-35 {- 2436465546571780 -35 (-4.48491e-011)}
; 1.569282031769806184939852755633182823657989501953125p-770 / -1.54100402970198135932378136203624308109283447265625p-35 == -1.0183503751598192987870561410090886056423187255859375p-735
; [HW: -1.0183503751598192987870561410090886056423187255859375p-735] 

; mpf : - 82642742731871 -735
; mpfd: - 82642742731871 -735 (-5.63444e-222) class: Neg. norm. non-zero
; hwf : - 82642742731871 -735 (-5.63444e-222) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111101 #b1001000110111100011101111001110010100110110110010010)))
(assert (= y (fp #b1 #b01111011100 #b1000101001111111001111010111011010010011000000000100)))
(assert (= r (fp #b1 #b00100100000 #b0000010010110010100111000011010100101110010001011111)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
