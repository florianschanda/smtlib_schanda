(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.768764581347194830840408030780963599681854248046875p-147 {- 3462207882090862 -147 (-9.91427e-045)}
; Y = -1.6144972926918603750578995459363795816898345947265625p-627 {- 2767449778387241 -627 (-2.89888e-189)}
; -1.768764581347194830840408030780963599681854248046875p-147 / -1.6144972926918603750578995459363795816898345947265625p-627 == 1.0955512835813576710819461368373595178127288818359375p480
; [HW: 1.0955512835813576710819461368373595178127288818359375p480] 

; mpf : + 430324725131775 480
; mpfd: + 430324725131775 480 (3.42004e+144) class: Pos. norm. non-zero
; hwf : + 430324725131775 480 (3.42004e+144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101101100 #b1100010011001101110000010110111100110101100101101110)))
(assert (= y (fp #b1 #b00110001100 #b1001110101001111101100011100111110010111100100101001)))
(assert (= r (fp #b0 #b10111011111 #b0001100001110110000011001000011000010010100111111111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
