(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0220468207314021835685480255051515996456146240234375p-696 {- 99290053630647 -696 (-3.10881e-210)}
; Y = 1.4171594951805051021409553868579678237438201904296875p-864 {+ 1878719347048987 -864 (1.15213e-260)}
; -1.0220468207314021835685480255051515996456146240234375p-696 / 1.4171594951805051021409553868579678237438201904296875p-864 == -1.4423878528947413624194950898527167737483978271484375p167
; [HW: -1.4423878528947413624194950898527167737483978271484375p167] 

; mpf : - 1992337769449991 167
; mpfd: - 1992337769449991 167 (-2.69831e+050) class: Neg. norm. non-zero
; hwf : - 1992337769449991 167 (-2.69831e+050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101000111 #b0000010110100100110111000100011000000101101010110111)))
(assert (= y (fp #b0 #b00010011111 #b0110101011001010111101101111010100000100001000011011)))
(assert (= r (fp #b1 #b10010100110 #b0111000101000000010101001001000001010100101000000111)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
