(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2237322882609655838592743748449720442295074462890625p401 {+ 1007600650042833 401 (6.31997e+120)}
; Y = -1.5749527031399852550208606771775521337985992431640625p96 {- 2589356779616897 96 (-1.24781e+029)}
; 1.2237322882609655838592743748449720442295074462890625p401 / -1.5749527031399852550208606771775521337985992431640625p96 == -1.553992428878923082180563142173923552036285400390625p304
; [HW: -1.553992428878923082180563142173923552036285400390625p304] 

; mpf : - 2494960096265194 304
; mpfd: - 2494960096265194 304 (-5.06486e+091) class: Neg. norm. non-zero
; hwf : - 2494960096265194 304 (-5.06486e+091) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010000 #b0011100101000110100001001110110100100011110111010001)))
(assert (= y (fp #b1 #b10001011111 #b1001001100110000000110011011000010111011101010000001)))
(assert (= r (fp #b1 #b10100101111 #b1000110111010010011100101010010001000100001111101010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
