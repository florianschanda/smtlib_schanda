(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.193631538312200479623470528167672455310821533203125p138 {- 872038923790002 138 (-4.1592e+041)}
; Y = -1.3418594163317714151872905858908779919147491455078125p-793 {- 1539597940004861 -793 (-2.57585e-239)}
; -1.193631538312200479623470528167672455310821533203125p138 / -1.3418594163317714151872905858908779919147491455078125p-793 == 1.779070927676194013855592856998555362224578857421875p930
; [HW: 1.779070927676194013855592856998555362224578857421875p930] 

; mpf : + 3508623539577694 930
; mpfd: + 3508623539577694 930 (1.61469e+280) class: Pos. norm. non-zero
; hwf : + 3508623539577694 930 (1.61469e+280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001001 #b0011000110010001110101100010010010000110011010110010)))
(assert (= y (fp #b1 #b00011100110 #b0101011110000100000110010100010011111001011111111101)))
(assert (= r (fp #b0 #b11110100001 #b1100011101110001001100010011101110100010001101011110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
