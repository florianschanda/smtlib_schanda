(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9233617916971297301387266998062841594219207763671875p-939 {+ 4158451821015347 -939 (4.139e-283)}
; Y = 1.9670011638232123285519037381163798272609710693359375p61 {+ 4354986081061055 61 (4.5356e+018)}
; 1.9233617916971297301387266998062841594219207763671875p-939 / 1.9670011638232123285519037381163798272609710693359375p61 == 1.955628524345901286807247743126936256885528564453125p-1001
; [HW: 1.955628524345901286807247743126936256885528564453125p-1001] 

; mpf : + 4303768266148818 -1001
; mpfd: + 4303768266148818 -1001 (9.12558e-302) class: Pos. norm. non-zero
; hwf : + 4303768266148818 -1001 (9.12558e-302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010100 #b1110110001100001011100000011100110110111000100110011)))
(assert (= y (fp #b0 #b10000111100 #b1111011110001101011000110110010111010000100010111111)))
(assert (= r (fp #b0 #b00000010110 #b1111010010100100000100100010101100110000101111010010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
