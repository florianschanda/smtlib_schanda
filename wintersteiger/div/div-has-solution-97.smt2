(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7024827028656479566137704750872217118740081787109375p223 {+ 3163700838859951 223 (2.29494e+067)}
; Y = -1.20391326078188765080767552717588841915130615234375p-728 {- 918343685273212 -728 (-8.52626e-220)}
; 1.7024827028656479566137704750872217118740081787109375p223 / -1.20391326078188765080767552717588841915130615234375p-728 == -1.4141240555486211949443031699047423899173736572265625p951
; [HW: -1.4141240555486211949443031699047423899173736572265625p951] 

; mpf : - 1865048942253929 951
; mpfd: - 1865048942253929 951 (-2.69162e+286) class: Neg. norm. non-zero
; hwf : - 1865048942253929 951 (-2.69162e+286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011110 #b1011001111010101111010000000101011010000010010101111)))
(assert (= y (fp #b1 #b00100100111 #b0011010000110011101010001101001001000111011001111100)))
(assert (= r (fp #b1 #b11110110110 #b0110101000000100000010001011101100010001011101101001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
