(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.199285208164106553141436961595900356769561767578125p-49 {- 897500789228322 -49 (-2.13036e-015)}
; Y = 1.4838892402415577720375949866138398647308349609375p-571 {+ 2179243402040472 -571 (1.91988e-172)}
; -1.199285208164106553141436961595900356769561767578125p-49 / 1.4838892402415577720375949866138398647308349609375p-571 == -1.6164079846941656892767014142009429633617401123046875p521
; [HW: -1.6164079846941656892767014142009429633617401123046875p521] 

; mpf : - 2776054770176843 521
; mpfd: - 2776054770176843 521 (-1.10963e+157) class: Neg. norm. non-zero
; hwf : - 2776054770176843 521 (-1.10963e+157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001110 #b0011001100000100010110101111101110100100001100100010)))
(assert (= y (fp #b0 #b00111000100 #b0111101111100000001010100100110110111001010010011000)))
(assert (= r (fp #b1 #b11000001000 #b1001110111001100111010011110011101000001001101001011)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
