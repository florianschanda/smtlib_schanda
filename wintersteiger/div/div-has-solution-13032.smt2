(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.31594078089415855714605640969239175319671630859375p-809 {+ 1422870783106076 -809 (3.85452e-244)}
; Y = -1.2604205912712298509603670026990585029125213623046875p-176 {- 1172830077808715 -176 (-1.31594e-053)}
; 1.31594078089415855714605640969239175319671630859375p-809 / -1.2604205912712298509603670026990585029125213623046875p-176 == -1.0440489389077118875803762421128340065479278564453125p-633
; [HW: -1.0440489389077118875803762421128340065479278564453125p-633] 

; mpf : - 198378784850837 -633
; mpfd: - 198378784850837 -633 (-2.9291e-191) class: Neg. norm. non-zero
; hwf : - 198378784850837 -633 (-2.9291e-191) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010110 #b0101000011100001011111101011100101101001110000011100)))
(assert (= y (fp #b1 #b01101001111 #b0100001010101010111011001000001010110111000001001011)))
(assert (= r (fp #b1 #b00110000110 #b0000101101000110110010101001000000001000001110010101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
