(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.782959606568645494206748480792157351970672607421875p-303 {+ 3526136592388702 -303 (1.09409e-091)}
; Y = -1.879831102684170307526301257894374430179595947265625p498 {- 3962407026197402 498 (-1.53836e+150)}
; 1.782959606568645494206748480792157351970672607421875p-303 / -1.879831102684170307526301257894374430179595947265625p498 == -1.8969359577281126316705694989650510251522064208984375p-802
; [HW: -1.8969359577281126316705694989650510251522064208984375p-802] 

; mpf : - 4039440444999527 -802
; mpfd: - 4039440444999527 -802 (-7.11207e-242) class: Neg. norm. non-zero
; hwf : - 4039440444999527 -802 (-7.11207e-242) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011010000 #b1100100001110000000010100111000001001101001001011110)))
(assert (= y (fp #b1 #b10111110001 #b1110000100111100100111000111010000001000001110011010)))
(assert (= r (fp #b1 #b00011011101 #b1110010110011101100110000100110100001100011101100111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
