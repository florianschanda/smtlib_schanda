(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.134087124556664161190155937219969928264617919921875p613 {- 603874724188574 613 (-3.85508e+184)}
; Y = 1.3951658412328746816655211659963242709636688232421875p-527 {+ 1779668735325923 -527 (3.17554e-159)}
; -1.134087124556664161190155937219969928264617919921875p613 / 1.3951658412328746816655211659963242709636688232421875p-527 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100100 #b0010001001010011100010001010011011001001000110011110)))
(assert (= y (fp #b0 #b00111110000 #b0110010100101001100101101010110010010111011011100011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
