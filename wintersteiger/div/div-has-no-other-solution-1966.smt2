(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.239109600598240046309683748404495418071746826171875p280 {- 1076853908154942 280 (-2.40718e+084)}
; Y = 1.0418925051588481256459317592089064419269561767578125p-720 {+ 188667070623005 -720 (1.88897e-217)}
; -1.239109600598240046309683748404495418071746826171875p280 / 1.0418925051588481256459317592089064419269561767578125p-720 == -1.189287373181865614668595299008302390575408935546875p1000
; [HW: -1.189287373181865614668595299008302390575408935546875p1000] 

; mpf : - 852474543327790 1000
; mpfd: - 852474543327790 1000 (-1.27433e+301) class: Neg. norm. non-zero
; hwf : - 852474543327790 1000 (-1.27433e+301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010111 #b0011110100110110010010010110101010111010101000111110)))
(assert (= y (fp #b0 #b00100101111 #b0000101010111001011101111001101110011010110100011101)))
(assert (= r (fp #b1 #b11111100111 #b0011000001110101001000110010010101011100101000101110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
