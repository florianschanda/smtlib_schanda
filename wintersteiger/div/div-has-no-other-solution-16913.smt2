(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2729210635978571719562069120001979172229766845703125p-69 {- 1229127200320869 -69 (-2.15641e-021)}
; Y = 1.7244015857038059724715139964246191084384918212890625p-216 {+ 3262414711442257 -216 (1.63742e-065)}
; -1.2729210635978571719562069120001979172229766845703125p-69 / 1.7244015857038059724715139964246191084384918212890625p-216 == -1.47636266882498912167420712648890912532806396484375p146
; [HW: -1.47636266882498912167420712648890912532806396484375p146] 

; mpf : - 2145346737813436 146
; mpfd: - 2145346737813436 146 (-1.31696e+044) class: Neg. norm. non-zero
; hwf : - 2145346737813436 146 (-1.31696e+044) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111010 #b0100010111011110001001111010001010001010110101100101)))
(assert (= y (fp #b0 #b01100100111 #b1011100101110010011000011101111111000100101101010001)))
(assert (= r (fp #b1 #b10010010001 #b0111100111110010111001110110001110100011011110111100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
