(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.909526947531212659470156722818501293659210205078125p-380 {- 4096145221984994 -380 (-7.75403e-115)}
; Y = -1.3250664372991927120182253929669968783855438232421875p208 {- 1463969085891299 208 (-5.45101e+062)}
; -1.909526947531212659470156722818501293659210205078125p-380 / -1.3250664372991927120182253929669968783855438232421875p208 == 1.441080155515290783796444884501397609710693359375p-588
; [HW: 1.441080155515290783796444884501397609710693359375p-588] 

; mpf : + 1986448424019184 -588
; mpfd: + 1986448424019184 -588 (1.42249e-177) class: Pos. norm. non-zero
; hwf : + 1986448424019184 -588 (1.42249e-177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000011 #b1110100011010110110000100000111001111010001011100010)))
(assert (= y (fp #b1 #b10011001111 #b0101001100110111100011011101010100111010001011100011)))
(assert (= r (fp #b0 #b00110110011 #b0111000011101010101000010000101011011010010011110000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
