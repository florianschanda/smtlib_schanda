(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.652577791687051433910937703331001102924346923828125p-756 {+ 2938949099472066 -756 (4.35999e-228)}
; Y = 1.07368808528280634817519967327825725078582763671875p-168 {+ 331861633421292 -168 (2.86972e-051)}
; 1.652577791687051433910937703331001102924346923828125p-756 / 1.07368808528280634817519967327825725078582763671875p-168 == 1.539160035711644614053739132941700518131256103515625p-588
; [HW: 1.539160035711644614053739132941700518131256103515625p-588] 

; mpf : + 2428160935924026 -588
; mpfd: + 2428160935924026 -588 (1.51931e-177) class: Pos. norm. non-zero
; hwf : + 2428160935924026 -588 (1.51931e-177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001011 #b1010011100001111010101101001000101100100010011000010)))
(assert (= y (fp #b0 #b01101010111 #b0001001011011101001110001110110001100100111111101100)))
(assert (= r (fp #b0 #b00110110011 #b1000101000000110011001000110000010110001000100111010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
