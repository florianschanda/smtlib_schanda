(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.188940238398022319898927889880724251270294189453125p-684 {+ 850911187244626 -684 (1.4813e-206)}
; Y = -1.276013294740179215835951254121027886867523193359375p-713 {- 1243053371341174 -713 (-2.9612e-215)}
; 1.188940238398022319898927889880724251270294189453125p-684 / -1.276013294740179215835951254121027886867523193359375p-713 == -1.8635232772243386367705397788085974752902984619140625p28
; [HW: -1.8635232772243386367705397788085974752902984619140625p28] 

; mpf : - 3888963109533281 28
; mpfd: - 3888963109533281 28 (-5.00236e+008) class: Neg. norm. non-zero
; hwf : - 3888963109533281 28 (-5.00236e+008) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010011 #b0011000001011110011000110011000011010001011001010010)))
(assert (= y (fp #b1 #b00100110110 #b0100011010101000110011101010101000101011100101110110)))
(assert (= r (fp #b1 #b10000011011 #b1101110100001111110111001000101100000011011001100001)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
