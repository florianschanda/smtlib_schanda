(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.942207584196725012049000724800862371921539306640625p-267 {+ 4243325725094026 -267 (8.19005e-081)}
; Y = -1.9055838645331129033166916997288353741168975830078125p-745 {- 4078387154864061 -745 (-1.02963e-224)}
; 1.942207584196725012049000724800862371921539306640625p-267 / -1.9055838645331129033166916997288353741168975830078125p-745 == -1.01921915920115413456414898973889648914337158203125p478
; [HW: -1.01921915920115413456414898973889648914337158203125p478] 

; mpf : - 86555398216692 478
; mpfd: - 86555398216692 478 (-7.95436e+143) class: Neg. norm. non-zero
; hwf : - 86555398216692 478 (-7.95436e+143) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110100 #b1111000100110100100001000010100000101011000010001010)))
(assert (= y (fp #b1 #b00100010110 #b1110011111010100010110000001100111110100011110111101)))
(assert (= r (fp #b1 #b10111011101 #b0000010011101011100010111111110000111001101111110100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
