(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2155821510086675107942255635862238705158233642578125p885 {+ 970895694950365 885 (3.13567e+266)}
; Y = 1.1710419689671454079871182329952716827392578125p446 {+ 770304547705152 446 (2.1279e+134)}
; 1.2155821510086675107942255635862238705158233642578125p885 / 1.1710419689671454079871182329952716827392578125p446 == 1.038034659065897091778651883942075073719024658203125p439
; [HW: 1.038034659065897091778651883942075073719024658203125p439] 

; mpf : + 171292876396338 439
; mpfd: + 171292876396338 439 (1.4736e+132) class: Pos. norm. non-zero
; hwf : + 171292876396338 439 (1.4736e+132) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110100 #b0011011100110000011001000101000000101110111111011101)))
(assert (= y (fp #b0 #b10110111101 #b0010101111001001011010000000111011110101000101000000)))
(assert (= r (fp #b0 #b10110110110 #b0000100110111100101000111011000011001101011100110010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
