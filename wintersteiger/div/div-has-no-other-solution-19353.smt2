(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2239020985302360156055101469974033534526824951171875p-204 {- 1008365407508243 -204 (-4.76023e-062)}
; Y = 1.1200647525812941207590256453840993344783782958984375p-628 {+ 540723574985447 -628 (1.00556e-189)}
; -1.2239020985302360156055101469974033534526824951171875p-204 / 1.1200647525812941207590256453840993344783782958984375p-628 == -1.092706556214396496073959497152827680110931396484375p424
; [HW: -1.092706556214396496073959497152827680110931396484375p424] 

; mpf : - 417513212021958 424
; mpfd: - 417513212021958 424 (-4.73393e+127) class: Neg. norm. non-zero
; hwf : - 417513212021958 424 (-4.73393e+127) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100110011 #b0011100101010001101001011101111010110001011100010011)))
(assert (= y (fp #b0 #b00110001011 #b0001111010111100100100000100100110111101001011100111)))
(assert (= r (fp #b1 #b10110100111 #b0001011110111011100111011110101100010000110011000110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
