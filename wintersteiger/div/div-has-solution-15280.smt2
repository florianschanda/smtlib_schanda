(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.68373786294922123119022216997109353542327880859375p-288 {- 3079281584797212 -288 (-3.3856e-087)}
; Y = 1.6553131379428716041246616441640071570873260498046875p553 {+ 2951268003850507 553 (4.88054e+166)}
; -1.68373786294922123119022216997109353542327880859375p-288 / 1.6553131379428716041246616441640071570873260498046875p553 == -1.017171811396165193031038143089972436428070068359375p-841
; [HW: -1.017171811396165193031038143089972436428070068359375p-841] 

; mpf : - 77334963405046 -841
; mpfd: - 77334963405046 -841 (-6.93694e-254) class: Neg. norm. non-zero
; hwf : - 77334963405046 -841 (-6.93694e-254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011111 #b1010111100001001011100011101000001100111011000011100)))
(assert (= y (fp #b0 #b11000101000 #b1010011111000010100110100001000000011010100100001011)))
(assert (= r (fp #b1 #b00010110110 #b0000010001100101010111110011000001011100000011110110)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
