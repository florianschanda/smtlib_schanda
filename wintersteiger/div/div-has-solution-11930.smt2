(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9659643340160783964165602810680866241455078125p872 {+ 4350316614728000 872 (6.19059e+262)}
; Y = 1.624189779101739450339891845942474901676177978515625p889 {+ 2811100856571066 889 (6.70352e+267)}
; 1.9659643340160783964165602810680866241455078125p872 / 1.624189779101739450339891845942474901676177978515625p889 == 1.21042772175512514110096162767149507999420166015625p-17
; [HW: 1.21042772175512514110096162767149507999420166015625p-17] 

; mpf : + 947682209284804 -17
; mpfd: + 947682209284804 -17 (9.23483e-006) class: Pos. norm. non-zero
; hwf : + 947682209284804 -17 (9.23483e-006) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100111 #b1111011101001001011100000100011110110011100101000000)))
(assert (= y (fp #b0 #b11101111000 #b1001111111001010111001101011111110111101010010111010)))
(assert (= r (fp #b0 #b01111101110 #b0011010111011110100101110101011100011100001011000100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
