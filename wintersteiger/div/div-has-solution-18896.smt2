(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4297580748815388318462282768450677394866943359375p47 {- 1935458305895960 47 (-2.01221e+014)}
; Y = 1.5242807593820495437597628551884554326534271240234375p-655 {+ 2361150632590519 -655 (1.01957e-197)}
; -1.4297580748815388318462282768450677394866943359375p47 / 1.5242807593820495437597628551884554326534271240234375p-655 == -1.87597733039833070023405525716952979564666748046875p701
; [HW: -1.87597733039833070023405525716952979564666748046875p701] 

; mpf : - 3945051178766924 701
; mpfd: - 3945051178766924 701 (-1.97358e+211) class: Neg. norm. non-zero
; hwf : - 3945051178766924 701 (-1.97358e+211) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101110 #b0110111000000100101000000000110011001110111000011000)))
(assert (= y (fp #b0 #b00101110000 #b1000011000110111010000111000101101110111110010110111)))
(assert (= r (fp #b1 #b11010111100 #b1110000001000000000011001110001000011001001001001100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
