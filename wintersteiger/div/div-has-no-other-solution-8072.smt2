(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.43016457986402567570394239737652242183685302734375p800 {- 1937289041583612 800 (-9.53636e+240)}
; Y = -1.596955598793494690568195437663234770298004150390625p465 {- 2688449012283114 465 (-1.52139e+140)}
; -1.43016457986402567570394239737652242183685302734375p800 / -1.596955598793494690568195437663234770298004150390625p465 == 1.791113767902526188180445387843064963817596435546875p334
; [HW: 1.791113767902526188180445387843064963817596435546875p334] 

; mpf : + 3562859670333486 334
; mpfd: + 3562859670333486 334 (6.26818e+100) class: Pos. norm. non-zero
; hwf : + 3562859670333486 334 (6.26818e+100) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100011111 #b0110111000011111010001000001001001101001110111111100)))
(assert (= y (fp #b1 #b10111010000 #b1001100011010010000101010000010111111011011011101010)))
(assert (= r (fp #b0 #b10101001101 #b1100101010000110011011101001000010001110100000101110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
