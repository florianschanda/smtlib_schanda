(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.714105432520296456999631118378601968288421630859375p-396 {- 3216044959801654 -396 (-1.06208e-119)}
; Y = 1.3438508112165690189243605345836840569972991943359375p-828 {+ 1548566385265983 -828 (7.50783e-250)}
; -1.714105432520296456999631118378601968288421630859375p-396 / 1.3438508112165690189243605345836840569972991943359375p-828 == -1.275517652862478978903482129680924117565155029296875p432
; [HW: -1.275517652862478978903482129680924117565155029296875p432] 

; mpf : - 1240821198765454 432
; mpfd: - 1240821198765454 432 (-1.41464e+130) class: Neg. norm. non-zero
; hwf : - 1240821198765454 432 (-1.41464e+130) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001110011 #b1011011011001111100111010001011010010010000100110110)))
(assert (= y (fp #b0 #b00011000011 #b0101100000000110100110110101010011100000110100111111)))
(assert (= r (fp #b1 #b10110101111 #b0100011010001000010100110010110010000011110110001110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
