(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.83350416176978914251094465726055204868316650390625p-712 {+ 3753769032358180 -712 (8.50991e-215)}
; Y = 1.48803622379424727029118002974428236484527587890625p-105 {+ 2197919755623076 -105 (3.66829e-032)}
; 1.83350416176978914251094465726055204868316650390625p-712 / 1.48803622379424727029118002974428236484527587890625p-105 == 1.23216366137556487814208594500087201595306396484375p-607
; [HW: 1.23216366137556487814208594500087201595306396484375p-607] 

; mpf : + 1045572178859964 -607
; mpfd: + 1045572178859964 -607 (2.31986e-183) class: Pos. norm. non-zero
; hwf : + 1045572178859964 -607 (2.31986e-183) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110111 #b1101010101100000100001110101101111100001100100100100)))
(assert (= y (fp #b0 #b01110010110 #b0111110011101111111100010010010001110101101010100100)))
(assert (= r (fp #b0 #b00110100000 #b0011101101101111000100111110010011101101011110111100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
