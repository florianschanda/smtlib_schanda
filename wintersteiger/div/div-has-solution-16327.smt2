(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6646846276084936722128304609213955700397491455078125p20 {+ 2993473441216509 20 (1.74555e+006)}
; Y = -1.493651484743186319548158280667848885059356689453125p-305 {- 2223208642740306 -305 (-2.2914e-092)}
; 1.6646846276084936722128304609213955700397491455078125p20 / -1.493651484743186319548158280667848885059356689453125p-305 == -1.1145067270459776409552432596683502197265625p325
; [HW: -1.1145067270459776409552432596683502197265625p325] 

; mpf : - 515692453255680 325
; mpfd: - 515692453255680 325 (-7.61783e+097) class: Neg. norm. non-zero
; hwf : - 515692453255680 325 (-7.61783e+097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010011 #b1010101000101000110001011001000110111011011111111101)))
(assert (= y (fp #b1 #b01011001110 #b0111111001011111111100011001011010011000000001010010)))
(assert (= r (fp #b1 #b10101000100 #b0001110101010000010100000001011111010101101000000000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
