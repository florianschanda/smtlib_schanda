(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.461953886702685334597617838880978524684906005859375p-177 {- 2080455352016566 -177 (-7.63176e-054)}
; Y = 1.75906764692610462219590772292576730251312255859375p979 {+ 3418536771845404 979 (8.98769e+294)}
; -1.461953886702685334597617838880978524684906005859375p-177 / 1.75906764692610462219590772292576730251312255859375p979 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001110 #b0111011001000010100111000010001110100101111010110110)))
(assert (= y (fp #b0 #b11111010010 #b1100001001010010010000011101111011111111110100011100)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
