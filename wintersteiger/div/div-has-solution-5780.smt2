(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.499194642284125134068517581908963620662689208984375p-7 {+ 2248172804976134 -7 (0.0117125)}
; Y = 1.10137857117828463771047609043307602405548095703125p-524 {+ 456568495381876 -524 (2.00548e-158)}
; 1.499194642284125134068517581908963620662689208984375p-7 / 1.10137857117828463771047609043307602405548095703125p-524 == 1.3611983032139856053532867008470930159091949462890625p517
; [HW: 1.3611983032139856053532867008470930159091949462890625p517] 

; mpf : + 1626692543761361 517
; mpfd: + 1626692543761361 517 (5.84022e+155) class: Pos. norm. non-zero
; hwf : + 1626692543761361 517 (5.84022e+155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111000 #b0111111111001011001110000101011011110010111000000110)))
(assert (= y (fp #b0 #b00111110011 #b0001100111110011111100100010111110111001110101110100)))
(assert (= r (fp #b0 #b11000000100 #b0101110001110111011111011111001110101100101111010001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
