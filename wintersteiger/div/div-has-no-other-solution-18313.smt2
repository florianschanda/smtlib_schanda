(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5774373515511277421552449595765210688114166259765625p-709 {- 2600546641275465 -709 (-5.85713e-214)}
; Y = -1.8664033471481513704048893487197346985340118408203125p-652 {- 3901933791368965 -652 (-9.98731e-197)}
; -1.5774373515511277421552449595765210688114166259765625p-709 / -1.8664033471481513704048893487197346985340118408203125p-652 == 1.6903498956551261667158314594416879117488861083984375p-58
; [HW: 1.6903498956551261667158314594416879117488861083984375p-58] 

; mpf : + 3109059532827687 -58
; mpfd: + 3109059532827687 -58 (5.86458e-018) class: Pos. norm. non-zero
; hwf : + 3109059532827687 -58 (5.86458e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100111010 #b1001001111010010111011110010110001100110101001001001)))
(assert (= y (fp #b1 #b00101110011 #b1101110111001100100111000001100100100101011100000101)))
(assert (= r (fp #b0 #b01111000101 #b1011000010111010110001010101000010100010110000100111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
