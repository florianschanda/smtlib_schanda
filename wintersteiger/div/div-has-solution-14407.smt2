(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.383242003470494640993138091289438307285308837890625p982 {- 1725968544022442 982 (-5.65398e+295)}
; Y = -1.119562305663762469265520849148742854595184326171875p705 {- 538460755234878 705 (-1.8845e+212)}
; -1.383242003470494640993138091289438307285308837890625p982 / -1.119562305663762469265520849148742854595184326171875p705 == 1.2355203426131808885912732876022346317768096923828125p277
; [HW: 1.2355203426131808885912732876022346317768096923828125p277] 

; mpf : + 1060689327230893 277
; mpfd: + 1060689327230893 277 (3.00026e+083) class: Pos. norm. non-zero
; hwf : + 1060689327230893 277 (3.00026e+083) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010101 #b0110001000011100001001011101111101011011111110101010)))
(assert (= y (fp #b1 #b11011000000 #b0001111010011011101000101010000010101001000000111110)))
(assert (= r (fp #b0 #b10100010100 #b0011110001001011000011111010100100010000111110101101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
