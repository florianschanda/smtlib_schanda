(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.311371205207262136127610574476420879364013671875p245 {- 1402291243745328 245 (-7.41438e+073)}
; Y = -1.3890845856720777096171559605863876640796661376953125p183 {- 1752281195048373 183 (-1.70301e+055)}
; -1.311371205207262136127610574476420879364013671875p245 / -1.3890845856720777096171559605863876640796661376953125p183 == 1.88810849783173484439657840994186699390411376953125p61
; [HW: 1.88810849783173484439657840994186699390411376953125p61] 

; mpf : + 3999685099899572 61
; mpfd: + 3999685099899572 61 (4.35368e+018) class: Pos. norm. non-zero
; hwf : + 3999685099899572 61 (4.35368e+018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110100 #b0100111110110110000001011111011101001000000000110000)))
(assert (= y (fp #b1 #b10010110110 #b0110001110011011000011000010001011010110110110110101)))
(assert (= r (fp #b0 #b10000111100 #b1110001101011011000101000001100101111100101010110100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
