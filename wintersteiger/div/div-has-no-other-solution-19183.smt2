(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2229504762835003983667547799996100366115570068359375p686 {+ 1004079681912447 686 (3.92632e+206)}
; Y = -1.01458928555513860914061297080479562282562255859375p-620 {- 65704300989724 -620 (-2.33181e-187)}
; 1.2229504762835003983667547799996100366115570068359375p686 / -1.01458928555513860914061297080479562282562255859375p-620 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101101 #b0011100100010011010010000100110001000011111001111111)))
(assert (= y (fp #b1 #b00110010011 #b0000001110111100000111111001100001010100110100011100)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
