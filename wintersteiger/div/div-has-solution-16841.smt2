(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.08001849208866307350263014086522161960601806640625p333 {+ 360371251153252 333 (1.88982e+100)}
; Y = 1.2067990116907598707740589816239662468433380126953125p-558 {+ 931339951991093 -558 (1.27908e-168)}
; 1.08001849208866307350263014086522161960601806640625p333 / 1.2067990116907598707740589816239662468433380126953125p-558 == 1.78988958662723174342090715072117745876312255859375p890
; [HW: 1.78988958662723174342090715072117745876312255859375p890] 

; mpf : + 3557346447998236 890
; mpfd: + 3557346447998236 890 (1.47748e+268) class: Pos. norm. non-zero
; hwf : + 3557346447998236 890 (1.47748e+268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001100 #b0001010001111100000101111000011010011000100101100100)))
(assert (= y (fp #b0 #b00111010001 #b0011010011110000110001111011000000001110100100110101)))
(assert (= r (fp #b0 #b11101111001 #b1100101000110110001101000011011000000011110100011100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
