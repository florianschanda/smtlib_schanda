(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8535198471834297695437498987303115427494049072265625p898 {+ 3843911665728617 898 (3.91682e+270)}
; Y = 1.6880231791875839331140696231159381568431854248046875p-821 {+ 3098580933411467 -821 (1.20712e-247)}
; 1.8535198471834297695437498987303115427494049072265625p898 / 1.6880231791875839331140696231159381568431854248046875p-821 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000001 #b1101101010000000010001101101011000100011110001101001)))
(assert (= y (fp #b0 #b00011001010 #b1011000000100010010010010111110110000000001010001011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
