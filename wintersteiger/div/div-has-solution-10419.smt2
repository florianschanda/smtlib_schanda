(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8272936887122621651968756850692443549633026123046875p-751 {- 3725799548210507 -751 (-1.5427e-226)}
; Y = 1.1367281706912002459120003550196997821331024169921875p543 {+ 615768938575939 543 (3.27299e+163)}
; -1.8272936887122621651968756850692443549633026123046875p-751 / 1.1367281706912002459120003550196997821331024169921875p543 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010000 #b1101001111001001100001001110100100110100110101001011)))
(assert (= y (fp #b0 #b11000011110 #b0010001100000000100111100000110110001111100001000011)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
