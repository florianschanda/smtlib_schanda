(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7395312595126710686344040368567220866680145263671875p-19 {- 3330552704770099 -19 (-3.31789e-006)}
; Y = -1.8385757680759382548529856649111025035381317138671875p-394 {- 3776609516628723 -394 (-4.55683e-119)}
; -1.7395312595126710686344040368567220866680145263671875p-19 / -1.8385757680759382548529856649111025035381317138671875p-394 == 1.8922595301395528366583675961010158061981201171875p374
; [HW: 1.8922595301395528366583675961010158061981201171875p374] 

; mpf : + 4018379687454264 374
; mpfd: + 4018379687454264 374 (7.28113e+112) class: Pos. norm. non-zero
; hwf : + 4018379687454264 374 (7.28113e+112) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111101100 #b1011110101010001111010111010110111111010000000110011)))
(assert (= y (fp #b1 #b01001110101 #b1101011010101100111001101100101100011010101011110011)))
(assert (= r (fp #b0 #b10101110101 #b1110010001101011000111101101110101111110011000111000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
