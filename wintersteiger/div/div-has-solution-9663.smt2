(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.35317880397648604429150509531609714031219482421875p-432 {+ 1590575929983660 -432 (1.2201e-130)}
; Y = -1.889438561861595200497276891837827861309051513671875p-640 {- 4005675175768830 -640 (-4.14129e-193)}
; 1.35317880397648604429150509531609714031219482421875p-432 / -1.889438561861595200497276891837827861309051513671875p-640 == -1.432360735395648898560239103971980512142181396484375p207
; [HW: -1.432360735395648898560239103971980512142181396484375p207] 

; mpf : - 1947179646817478 207
; mpfd: - 1947179646817478 207 (-2.9462e+062) class: Neg. norm. non-zero
; hwf : - 1947179646817478 207 (-2.9462e+062) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001001111 #b0101101001101001111011010001010010111000001010101100)))
(assert (= y (fp #b1 #b00101111111 #b1110001110110010001111101101111011111111001011111110)))
(assert (= r (fp #b1 #b10011001110 #b0110111010101111001100010111001010011001010011000110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
