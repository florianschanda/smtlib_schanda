(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8022873699598616070716161630116403102874755859375p-646 {+ 3613181100395288 -646 (6.1723e-195)}
; Y = -1.147662954393685819098891442990861833095550537109375p75 {- 665014826383830 75 (-4.33575e+022)}
; 1.8022873699598616070716161630116403102874755859375p-646 / -1.147662954393685819098891442990861833095550537109375p75 == -1.5703977923658047899380107992328703403472900390625p-721
; [HW: -1.5703977923658047899380107992328703403472900390625p-721] 

; mpf : - 2568843285151592 -721
; mpfd: - 2568843285151592 -721 (-1.42358e-217) class: Neg. norm. non-zero
; hwf : - 2568843285151592 -721 (-1.42358e-217) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111001 #b1100110101100010101101000111111111111000101100011000)))
(assert (= y (fp #b1 #b10001001010 #b0010010111001101001111010100011111110011100111010110)))
(assert (= r (fp #b1 #b00100101110 #b1001001000000101100101101111011111101011111101101000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
