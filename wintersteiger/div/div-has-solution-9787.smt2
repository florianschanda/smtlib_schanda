(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2024259448558558549535746351466514170169830322265625p-525 {+ 911645409822953 -525 (1.09474e-158)}
; Y = 1.716672951468058982982256566174328327178955078125p18 {+ 3227608037178064 18 (450016)}
; 1.2024259448558558549535746351466514170169830322265625p-525 / 1.716672951468058982982256566174328327178955078125p18 == 1.40087946725970002859185115084983408451080322265625p-544
; [HW: 1.40087946725970002859185115084983408451080322265625p-544] 

; mpf : + 1805400619371268 -544
; mpfd: + 1805400619371268 -544 (2.43267e-164) class: Pos. norm. non-zero
; hwf : + 1805400619371268 -544 (2.43267e-164) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111110010 #b0011001111010010001011111100110100000100100011101001)))
(assert (= y (fp #b0 #b10000010001 #b1011011101110111111000001110100001111011101011010000)))
(assert (= r (fp #b0 #b00111011111 #b0110011010100000000010010110100110000100101100000100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
