(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5752636193903584160835862348903901875019073486328125p-855 {+ 2590757021926221 -855 (6.55703e-258)}
; Y = 1.86058247681502475501247317879460752010345458984375p190 {+ 3875718921905724 190 (2.91977e+057)}
; 1.5752636193903584160835862348903901875019073486328125p-855 / 1.86058247681502475501247317879460752010345458984375p190 == 0.00000010092863877986246734508313238620758056640625p-1022
; [HW: 0.00000010092863877986246734508313238620758056640625p-1022] 

; mpf : + 454542180 -1023
; mpfd: + 454542180 -1023 (2.24574e-315) class: Pos. denorm.
; hwf : + 454542180 -1023 (2.24574e-315) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010101000 #b1001001101000100011110011111111111011100001101001101)))
(assert (= y (fp #b0 #b10010111101 #b1101110001001111001000100001100101101110011000111100)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000011011000101111100001101100100)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
