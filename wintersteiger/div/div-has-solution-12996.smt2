(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5443088891779053195563164990744553506374359130859375p-190 {+ 2451349310476063 -190 (9.8409e-058)}
; Y = -1.59864864193414657478342633112333714962005615234375p-942 {- 2696073800740476 -942 (-4.30028e-284)}
; 1.5443088891779053195563164990744553506374359130859375p-190 / -1.59864864193414657478342633112333714962005615234375p-942 == -1.932017891447995072695675844443030655384063720703125p751
; [HW: -1.932017891447995072695675844443030655384063720703125p751] 

; mpf : - 4197435428627826 751
; mpfd: - 4197435428627826 751 (-2.28843e+226) class: Neg. norm. non-zero
; hwf : - 4197435428627826 751 (-2.28843e+226) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000001 #b1000101101010111110100111100110111110000111100011111)))
(assert (= y (fp #b1 #b00001010001 #b1001100101000001000010011001001011100110111001111100)))
(assert (= r (fp #b1 #b11011101110 #b1110111010011000101110010111101100001110010101110010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
