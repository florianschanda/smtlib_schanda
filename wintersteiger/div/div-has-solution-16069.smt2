(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.08591887442731138690987791051156818866729736328125p982 {+ 386944210854932 982 (4.43867e+295)}
; Y = 1.8486256266155363103820263859233818948268890380859375p825 {+ 3821870055802783 825 (4.13614e+248)}
; 1.08591887442731138690987791051156818866729736328125p982 / 1.8486256266155363103820263859233818948268890380859375p825 == 1.17483914405688683046946607646532356739044189453125p156
; [HW: 1.17483914405688683046946607646532356739044189453125p156] 

; mpf : + 787405504024372 156
; mpfd: + 787405504024372 156 (1.07314e+047) class: Pos. norm. non-zero
; hwf : + 787405504024372 156 (1.07314e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010101 #b0001010111111110110001111000001111000110010000010100)))
(assert (= y (fp #b0 #b11100111000 #b1101100100111111100001110111000011011100011110011111)))
(assert (= r (fp #b0 #b10010011011 #b0010110011000010010000100001010111001000111100110100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
