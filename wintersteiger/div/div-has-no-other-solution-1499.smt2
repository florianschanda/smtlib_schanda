(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.610396842867339639582269228412769734859466552734375p516 {+ 2748982994085478 516 (3.4547e+155)}
; Y = 1.5932495991541628654886153526604175567626953125p319 {+ 2671758673688384 319 (1.70158e+096)}
; 1.610396842867339639582269228412769734859466552734375p516 / 1.5932495991541628654886153526604175567626953125p319 == 1.0107624340356213821223718696273863315582275390625p197
; [HW: 1.0107624340356213821223718696273863315582275390625p197] 

; mpf : + 48469693912424 197
; mpfd: + 48469693912424 197 (2.03029e+059) class: Pos. norm. non-zero
; hwf : + 48469693912424 197 (2.03029e+059) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000011 #b1001110001000010111101111010110110110010011001100110)))
(assert (= y (fp #b0 #b10100111110 #b1001011111011111001101001010101010111011011101000000)))
(assert (= r (fp #b0 #b10011000100 #b0000001011000001010100111010111000110101010101101000)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
