(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4058538635701476327000136734568513929843902587890625p-105 {+ 1827803308741393 -105 (3.4657e-032)}
; Y = 1.801330173702621717524152700207196176052093505859375p-984 {+ 3608870271687862 -984 (1.10174e-296)}
; 1.4058538635701476327000136734568513929843902587890625p-105 / 1.801330173702621717524152700207196176052093505859375p-984 == 1.560906361414492682371246701222844421863555908203125p878
; [HW: 1.560906361414492682371246701222844421863555908203125p878] 

; mpf : + 2526097680256050 878
; mpfd: + 2526097680256050 878 (3.14567e+264) class: Pos. norm. non-zero
; hwf : + 2526097680256050 878 (3.14567e+264) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010110 #b0110011111100110000010011110111011111101001100010001)))
(assert (= y (fp #b0 #b00000100111 #b1100110100100011111110010110100101011001110010110110)))
(assert (= r (fp #b0 #b11101101101 #b1000111110010111100011110010111001100100110000110010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
