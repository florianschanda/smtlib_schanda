(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0368551874579932103870305581949651241302490234375p928 {- 165981008502488 928 (-2.35263e+279)}
; Y = -1.416854514157147360009503245237283408641815185546875p-688 {- 1877345834625838 -688 (-1.10329e-207)}
; -1.0368551874579932103870305581949651241302490234375p928 / -1.416854514157147360009503245237283408641815185546875p-688 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011111 #b0000100101101111010101110111000011010001111011011000)))
(assert (= y (fp #b1 #b00101001111 #b0110101010110110111110100011100101111110101100101110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
