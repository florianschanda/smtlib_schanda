(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.29260984388769628594673122279345989227294921875p-686 {+ 1317797583897568 -686 (4.02615e-207)}
; Y = -1.0460997924905732769929045389289967715740203857421875p-85 {- 207615008282403 -85 (-2.7041e-026)}
; 1.29260984388769628594673122279345989227294921875p-686 / -1.0460997924905732769929045389289967715740203857421875p-85 == -1.23564678357332180524963405332528054714202880859375p-601
; [HW: -1.23564678357332180524963405332528054714202880859375p-601] 

; mpf : - 1061258766691868 -601
; mpfd: - 1061258766691868 -601 (-1.4889e-181) class: Neg. norm. non-zero
; hwf : - 1061258766691868 -601 (-1.4889e-181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010001 #b0100101011101000011110101000110111111100001111100000)))
(assert (= y (fp #b1 #b01110101010 #b0000101111001101001100100010110100011001011100100011)))
(assert (= r (fp #b1 #b00110100110 #b0011110001010011010110001111110011011010111000011100)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
