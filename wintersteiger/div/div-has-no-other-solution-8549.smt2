(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.984677532751486950246544438414275646209716796875p-617 {+ 4434593369579696 -617 (3.64907e-186)}
; Y = -1.165488903861688019247822012403048574924468994140625p693 {- 745295765765450 693 (-4.78955e+208)}
; 1.984677532751486950246544438414275646209716796875p-617 / -1.165488903861688019247822012403048574924468994140625p693 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110010110 #b1111110000010011110100111010100001000110000010110000)))
(assert (= y (fp #b1 #b11010110100 #b0010101001011101011110110001010111101111110101001010)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
