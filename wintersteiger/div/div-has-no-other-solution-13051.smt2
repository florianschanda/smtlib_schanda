(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0054624025402192355471697737812064588069915771484375p73 {- 24600474044679 73 (-9.49632e+021)}
; Y = -1.6180411402787580055218086272361688315868377685546875p134 {- 2783409849059051 134 (-3.52378e+040)}
; -1.0054624025402192355471697737812064588069915771484375p73 / -1.6180411402787580055218086272361688315868377685546875p134 == 1.2428143852596935658993970719166100025177001953125p-62
; [HW: 1.2428143852596935658993970719166100025177001953125p-62] 

; mpf : + 1093538774975752 -62
; mpfd: + 1093538774975752 -62 (2.69492e-019) class: Pos. norm. non-zero
; hwf : + 1093538774975752 -62 (2.69492e-019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001000 #b0000000101100101111110111110100001000100100100000111)))
(assert (= y (fp #b1 #b10010000101 #b1001111000110111111100011011010100010100011011101011)))
(assert (= r (fp #b0 #b01111000001 #b0011111000101001000101010110001110110000010100001000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
