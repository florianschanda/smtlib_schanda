(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.34025522341706615492284981883130967617034912109375p-872 {+ 1532373297391964 -872 (4.25629e-263)}
; Y = -1.6829589249908407655453856932581402361392974853515625p170 {- 3075773560098105 170 (-2.51868e+051)}
; 1.34025522341706615492284981883130967617034912109375p-872 / -1.6829589249908407655453856932581402361392974853515625p170 == -0.0000007594760422779955888472613878548145294189453125p-1022
; [HW: -0.0000007594760422779955888472613878548145294189453125p-1022] 

; mpf : - 3420376021 -1023
; mpfd: - 3420376021 -1023 (-1.68989e-314) class: Neg. denorm.
; hwf : - 3420376021 -1023 (-1.68989e-314) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010010111 #b0101011100011010111101110110000011011110100101011100)))
(assert (= y (fp #b1 #b10010101001 #b1010111011010110011001010110011101011000110100111001)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000011001011110111101100101111010101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
