(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5664260187616163566559635000885464251041412353515625p184 {- 2550956007027769 184 (-3.84087e+055)}
; Y = 1.255999789897419116613264122861437499523162841796875p-894 {+ 1152920558388942 -894 (9.50985e-270)}
; -1.5664260187616163566559635000885464251041412353515625p184 / 1.255999789897419116613264122861437499523162841796875p-894 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110111 #b1001000100000001010010111010101000101111010000111001)))
(assert (= y (fp #b0 #b00010000001 #b0100000110001001001100111100010101100100011011001110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
