(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.383426189413837104069671113393269479274749755859375p-688 {+ 1726798043768246 -688 (1.07726e-207)}
; Y = -1.1376618330272745271969370151055045425891876220703125p-648 {- 619973779924773 -648 (-9.74038e-196)}
; 1.383426189413837104069671113393269479274749755859375p-688 / -1.1376618330272745271969370151055045425891876220703125p-648 == -1.2160258428751127279809907122398726642131805419921875p-40
; [HW: -1.2160258428751127279809907122398726642131805419921875p-40] 

; mpf : - 972893905474755 -40
; mpfd: - 972893905474755 -40 (-1.10597e-012) class: Neg. norm. non-zero
; hwf : - 972893905474755 -40 (-1.10597e-012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101001111 #b0110001000101000001101111111111111110110010110110110)))
(assert (= y (fp #b1 #b00101110111 #b0010001100111101110011100100111011000010011100100101)))
(assert (= r (fp #b1 #b01111010111 #b0011011101001101011110000011101000111101010011000011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
