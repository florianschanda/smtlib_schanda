(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.735735058817732490155094637884758412837982177734375p-37 {+ 3313456136734950 -37 (1.26291e-011)}
; Y = -1.1590947684066621459209045497118495404720306396484375p-890 {- 716499139712839 -890 (-1.40418e-268)}
; 1.735735058817732490155094637884758412837982177734375p-37 / -1.1590947684066621459209045497118495404720306396484375p-890 == -1.4974919274320794837507264674059115350246429443359375p853
; [HW: -1.4974919274320794837507264674059115350246429443359375p853] 

; mpf : - 2240504459002943 853
; mpfd: - 2240504459002943 853 (-8.99396e+256) class: Neg. norm. non-zero
; hwf : - 2240504459002943 853 (-8.99396e+256) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011010 #b1011110001011001001000100000000000100100100011100110)))
(assert (= y (fp #b1 #b00010000101 #b0010100010111010011011110100101101000101011101000111)))
(assert (= r (fp #b1 #b11101010100 #b0111111101011011101000011000011001011000010000111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
