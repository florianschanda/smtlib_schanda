(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0149078655150833849774016925948671996593475341796875p-919 {+ 67139057578619 -919 (2.29013e-277)}
; Y = 1.2276527930511897945820010136230848729610443115234375p430 {+ 1025257033955191 430 (3.40388e+129)}
; 1.0149078655150833849774016925948671996593475341796875p-919 / 1.2276527930511897945820010136230848729610443115234375p430 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101000 #b0000001111010001000000000111101011010111001001111011)))
(assert (= y (fp #b0 #b10110101101 #b0011101001000111011101000001010011111111011101110111)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
