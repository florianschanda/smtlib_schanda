(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4713109882991226573523135812138207256793975830078125p358 {- 2122595991279549 358 (-8.63859e+107)}
; Y = 1.1751095115651393196998242274275980889797210693359375p-416 {+ 788623131033791 -416 (6.94385e-126)}
; -1.4713109882991226573523135812138207256793975830078125p358 / 1.1751095115651393196998242274275980889797210693359375p-416 == -1.25206287058256382493937053368426859378814697265625p774
; [HW: -1.25206287058256382493937053368426859378814697265625p774] 

; mpf : - 1135190250029572 774
; mpfd: - 1135190250029572 774 (-1.24406e+233) class: Neg. norm. non-zero
; hwf : - 1135190250029572 774 (-1.24406e+233) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100101 #b0111100010100111110101100100000011111101011110111101)))
(assert (= y (fp #b0 #b01001011111 #b0010110011010011111110100001100101100100000010111111)))
(assert (= r (fp #b1 #b11100000101 #b0100000010000111001100010011100110110000001000000100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
