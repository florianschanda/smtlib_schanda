(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.680973166246400918311110217473469674587249755859375p521 {- 3066830497756598 521 (-1.15395e+157)}
; Y = 1.34862689741484498284762594266794621944427490234375p-11 {+ 1570075965288828 -11 (0.000658509)}
; -1.680973166246400918311110217473469674587249755859375p521 / 1.34862689741484498284762594266794621944427490234375p-11 == -1.246433071643924250793133978731930255889892578125p532
; [HW: -1.246433071643924250793133978731930255889892578125p532] 

; mpf : - 1109835889627344 532
; mpfd: - 1109835889627344 532 (-1.75237e+160) class: Neg. norm. non-zero
; hwf : - 1109835889627344 532 (-1.75237e+160) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001000 #b1010111001010100010000011110011001111011010110110110)))
(assert (= y (fp #b0 #b01111110100 #b0101100100111111100111001100001011100111000101111100)))
(assert (= r (fp #b1 #b11000010011 #b0011111100010110001111001101111101011101000011010000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
