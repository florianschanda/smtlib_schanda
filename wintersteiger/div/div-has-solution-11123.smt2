(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.32488709079643651733704245998524129390716552734375p-32 {- 1463161381048316 -32 (-3.08474e-010)}
; Y = 1.897548999439690131652014315477572381496429443359375p-950 {+ 4042201339423350 -950 (1.99387e-286)}
; -1.32488709079643651733704245998524129390716552734375p-32 / 1.897548999439690131652014315477572381496429443359375p-950 == -1.3964193717133526195794956947793252766132354736328125p917
; [HW: -1.3964193717133526195794956947793252766132354736328125p917] 

; mpf : - 1785314134730701 917
; mpfd: - 1785314134730701 917 (-1.54711e+276) class: Neg. norm. non-zero
; hwf : - 1785314134730701 917 (-1.54711e+276) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111011111 #b0101001100101011110011001110010111011100111111111100)))
(assert (= y (fp #b0 #b00001001001 #b1110010111000101110001010110111100100110101001110110)))
(assert (= r (fp #b1 #b11110010100 #b0110010101111011101111010110110100000010011111001101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
