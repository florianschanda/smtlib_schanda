(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.728416389504511041508294511004351079463958740234375p94 {+ 3280495780343078 94 (3.42348e+028)}
; Y = 1.74578983551410527041980458307079970836639404296875p278 {+ 3358738825318028 278 (8.47873e+083)}
; 1.728416389504511041508294511004351079463958740234375p94 / 1.74578983551410527041980458307079970836639404296875p278 == 1.9800967497276349416068796926992945373058319091796875p-185
; [HW: 1.9800967497276349416068796926992945373058319091796875p-185] 

; mpf : + 4413963356860411 -185
; mpfd: + 4413963356860411 -185 (4.03773e-056) class: Pos. norm. non-zero
; hwf : + 4413963356860411 -185 (4.03773e-056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011101 #b1011101001111001011111110001101011001010110100100110)))
(assert (= y (fp #b0 #b10100010101 #b1011111011101100000101010010100100111000111010001100)))
(assert (= r (fp #b0 #b01101000110 #b1111101011100111100111101101111011111110111111111011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
