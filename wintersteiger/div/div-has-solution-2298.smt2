(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0570492108585607393678174048545770347118377685546875p958 {+ 256926804764395 958 (2.57532e+288)}
; Y = -1.5768150456172651541209006609278731048107147216796875p915 {- 2597744024503611 915 (-4.36744e+275)}
; 1.0570492108585607393678174048545770347118377685546875p958 / -1.5768150456172651541209006609278731048107147216796875p915 == -1.34073963055668965438371742493472993373870849609375p42
; [HW: -1.34073963055668965438371742493472993373870849609375p42] 

; mpf : - 1534554873205468 42
; mpfd: - 1534554873205468 42 (-5.89664e+012) class: Neg. norm. non-zero
; hwf : - 1534554873205468 42 (-5.89664e+012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110111101 #b0000111010011010110001101110111011100110011011101011)))
(assert (= y (fp #b1 #b11110010010 #b1001001110101010001001101001110011000100010100111011)))
(assert (= r (fp #b1 #b10000101001 #b0101011100111010101101100110000110110001001011011100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
