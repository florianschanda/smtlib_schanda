(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9114450505104663147193377881194464862346649169921875p275 {+ 4104783589847619 275 (1.16041e+083)}
; Y = -1.98774373922626157451531980768777430057525634765625p976 {- 4448402335916932 976 (-1.26951e+294)}
; 1.9114450505104663147193377881194464862346649169921875p275 / -1.98774373922626157451531980768777430057525634765625p976 == -1.923230859984502050252785920747555792331695556640625p-702
; [HW: -1.923230859984502050252785920747555792331695556640625p-702] 

; mpf : - 4157862157003146 -702
; mpfd: - 4157862157003146 -702 (-9.14059e-212) class: Neg. norm. non-zero
; hwf : - 4157862157003146 -702 (-9.14059e-212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010010 #b1110100101010100011101100111110000001011001001000011)))
(assert (= y (fp #b1 #b11111001111 #b1111110011011100110001100001000011001110001110000100)))
(assert (= r (fp #b1 #b00101000001 #b1110110001011000110110111000111001001010100110001010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
