(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9040694103364901312858137316652573645114898681640625p-129 {- 4071566659508481 -129 (-2.79778e-039)}
; Y = -1.209222167776343948020212337723933160305023193359375p760 {- 942252876835190 760 (-7.33336e+228)}
; -1.9040694103364901312858137316652573645114898681640625p-129 / -1.209222167776343948020212337723933160305023193359375p760 == 1.574623308335399318735881024622358381748199462890625p-889
; [HW: 1.574623308335399318735881024622358381748199462890625p-889] 

; mpf : + 2587873317297706 -889
; mpfd: + 2587873317297706 -889 (3.81514e-268) class: Pos. norm. non-zero
; hwf : + 2587873317297706 -889 (3.81514e-268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111110 #b1110011101110001000101111100011010110101100100000001)))
(assert (= y (fp #b1 #b11011110111 #b0011010110001111100101011000000000110010100101110110)))
(assert (= r (fp #b0 #b00010000110 #b1001001100011010100000110101110011010001111000101010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
