(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3201431585313418981542099572834558784961700439453125p421 {+ 1441796609466965 421 (7.14906e+126)}
; Y = 1.949093312294851276789131588884629309177398681640625p896 {+ 4274336287590922 896 (1.0297e+270)}
; 1.3201431585313418981542099572834558784961700439453125p421 / 1.949093312294851276789131588884629309177398681640625p896 == 1.354622839454528548941425469820387661457061767578125p-476
; [HW: 1.354622839454528548941425469820387661457061767578125p-476] 

; mpf : + 1597079287624482 -476
; mpfd: + 1597079287624482 -476 (6.94289e-144) class: Pos. norm. non-zero
; hwf : + 1597079287624482 -476 (6.94289e-144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100100 #b0101000111110100111001101110101111101110001001010101)))
(assert (= y (fp #b0 #b11101111111 #b1111001011110111110001111000000100101000101000001010)))
(assert (= r (fp #b0 #b01000100011 #b0101101011001000100011111111100111011111001100100010)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
