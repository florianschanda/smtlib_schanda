(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.521210149642693298943640911602415144443511962890625p794 {- 2347321835712554 794 (-1.58491e+239)}
; Y = 1.5127098569723125276453856713487766683101654052734375p816 {+ 2309039920809687 816 (6.61047e+245)}
; -1.521210149642693298943640911602415144443511962890625p794 / 1.5127098569723125276453856713487766683101654052734375p816 == -1.0056192485500121680530583034851588308811187744140625p-22
; [HW: -1.0056192485500121680530583034851588308811187744140625p-22] 

; mpf : - 25306845675937 -22
; mpfd: - 25306845675937 -22 (-2.39758e-007) class: Neg. norm. non-zero
; hwf : - 25306845675937 -22 (-2.39758e-007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100011001 #b1000010101101110000001110100001100001111000000101010)))
(assert (= y (fp #b0 #b11100101111 #b1000001101000000111101000000010000001000011011010111)))
(assert (= r (fp #b1 #b01111101001 #b0000000101110000010000110101100011000000000110100001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
