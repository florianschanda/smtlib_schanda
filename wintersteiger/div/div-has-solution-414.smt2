(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.59230505424267487768474893528036773204803466796875p175 {- 2667504821576972 175 (-7.62563e+052)}
; Y = 1.3305095790364134256122952137957327067852020263671875p288 {+ 1488482816990771 288 (6.61693e+086)}
; -1.59230505424267487768474893528036773204803466796875p175 / 1.3305095790364134256122952137957327067852020263671875p288 == -1.1967633148465266490489966599852778017520904541015625p-113
; [HW: -1.1967633148465266490489966599852778017520904541015625p-113] 

; mpf : - 886143191423001 -113
; mpfd: - 886143191423001 -113 (-1.15244e-034) class: Neg. norm. non-zero
; hwf : - 886143191423001 -113 (-1.15244e-034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010101110 #b1001011110100001010011011101010100111010010100001100)))
(assert (= y (fp #b0 #b10100011111 #b0101010010011100010001101001100011111001111000110011)))
(assert (= r (fp #b1 #b01110001110 #b0011001001011111000101001010001001010001100000011001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
