(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2867464690859673481782010640017688274383544921875p888 {- 1291391291325368 888 (-2.6554e+267)}
; Y = 1.4968311640166265252815946951159276068210601806640625p-607 {+ 2237528645131329 -607 (2.81816e-183)}
; -1.2867464690859673481782010640017688274383544921875p888 / 1.4968311640166265252815946951159276068210601806640625p-607 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110111 #b0100100101101000001101110111001011110111101110111000)))
(assert (= y (fp #b0 #b00110100000 #b0111111100110000010100111100000100010101110001000001)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
