(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2096012856210516250854425379657186567783355712890625p-38 {- 943960271819345 -38 (-4.4005e-012)}
; Y = 1.560831883765949168463293972308747470378875732421875p-592 {+ 2525762262745822 -592 (9.62939e-179)}
; -1.2096012856210516250854425379657186567783355712890625p-38 / 1.560831883765949168463293972308747470378875732421875p-592 == -1.5499443574954987479230794633622281253337860107421875p553
; [HW: -1.5499443574954987479230794633622281253337860107421875p553] 

; mpf : - 2476729203491235 553
; mpfd: - 2476729203491235 553 (-4.56987e+166) class: Neg. norm. non-zero
; hwf : - 2476729203491235 553 (-4.56987e+166) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111011001 #b0011010110101000011011100000101011110001001001010001)))
(assert (= y (fp #b0 #b00110101111 #b1000111110010010101011011010011101010100001011011110)))
(assert (= r (fp #b1 #b11000101000 #b1000110011001001001001110100011000010000000110100011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
