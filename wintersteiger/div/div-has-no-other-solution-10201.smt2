(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0146032340072601574121335943345911800861358642578125p1020 {- 65767119233501 1020 (-1.13997e+307)}
; Y = -1.007435719131185347663404172635637223720550537109375p303 {- 33487501908438 303 (-1.64175e+091)}
; -1.0146032340072601574121335943345911800861358642578125p1020 / -1.007435719131185347663404172635637223720550537109375p303 == 1.007114612614942839030618415563367307186126708984375p717
; [HW: 1.007114612614942839030618415563367307186126708984375p717] 

; mpf : + 32041366721542 717
; mpfd: + 32041366721542 717 (6.94362e+215) class: Pos. norm. non-zero
; hwf : + 32041366721542 717 (6.94362e+215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111011 #b0000001110111101000010011001110001111010000111011101)))
(assert (= y (fp #b1 #b10100101110 #b0000000111100111010011101010101001111101100111010110)))
(assert (= r (fp #b0 #b11011001100 #b0000000111010010010000110110010010000001010000000110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
