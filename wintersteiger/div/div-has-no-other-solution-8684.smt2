(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.202451760083679488388952449895441532135009765625p-488 {+ 911761671273360 -488 (1.50463e-147)}
; Y = 0.7528899209633646005812579460325650870800018310546875p-1022 {+ 3390714767501611 -1023 (1.67524e-308)}
; 1.202451760083679488388952449895441532135009765625p-488 / 0.7528899209633646005812579460325650870800018310546875p-1022 == 1.597114965418949150688376903417520225048065185546875p534
; [HW: 1.597114965418949150688376903417520225048065185546875p534] 

; mpf : + 2689166735758126 534
; mpfd: + 2689166735758126 534 (8.9816e+160) class: Pos. norm. non-zero
; hwf : + 2689166735758126 534 (8.9816e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000010111 #b0011001111010011111000001110100010010011101110010000)))
(assert (= y (fp #b0 #b00000000000 #b1100000010111101011001001101010000000110100100101011)))
(assert (= r (fp #b0 #b11000010101 #b1001100011011100100001101100000001101101001100101110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
