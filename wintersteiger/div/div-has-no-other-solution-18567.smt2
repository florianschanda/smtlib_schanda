(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.483292728944985316985594181460328400135040283203125p968 {+ 2176556953987506 968 (3.70052e+291)}
; Y = -1.58300200767069210172621751553378999233245849609375p754 {- 2625607624501980 754 (-1.50002e+227)}
; 1.483292728944985316985594181460328400135040283203125p968 / -1.58300200767069210172621751553378999233245849609375p754 == -1.8740250760990202483213806772255338728427886962890625p213
; [HW: -1.8740250760990202483213806772255338728427886962890625p213] 

; mpf : - 3936259007032017 213
; mpfd: - 3936259007032017 213 (-2.46697e+064) class: Neg. norm. non-zero
; hwf : - 3936259007032017 213 (-2.46697e+064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111000111 #b0111101110111001000100101000000100110110100110110010)))
(assert (= y (fp #b1 #b11011110001 #b1001010100111111100111101001110001110010101011011100)))
(assert (= r (fp #b1 #b10011010100 #b1101111111000000000110110111110110111010101011010001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
