(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9316557233380324820615214775898493826389312744140625p-610 {+ 4195804368462753 -610 (4.54603e-184)}
; Y = -1.03580049985106370513676665723323822021484375p-990 {- 161231117788928 -990 (-9.89875e-299)}
; 1.9316557233380324820615214775898493826389312744140625p-610 / -1.03580049985106370513676665723323822021484375p-990 == -1.864891669405240204326901221065782010555267333984375p380
; [HW: -1.864891669405240204326901221065782010555267333984375p380] 

; mpf : - 3895125800049286 380
; mpfd: - 3895125800049286 380 (-4.59253e+114) class: Neg. norm. non-zero
; hwf : - 3895125800049286 380 (-4.59253e+114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011101 #b1110111010000000111111010100111011011110001110100001)))
(assert (= y (fp #b1 #b00000100001 #b0000100100101010001110001011100000001010011100000000)))
(assert (= r (fp #b1 #b10101111011 #b1101110101101001100010100101101010101101101010000110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
