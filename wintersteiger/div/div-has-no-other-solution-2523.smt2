(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.341331347084719904927396783023141324520111083984375p357 {- 1537219727540614 357 (-3.93772e+107)}
; Y = -1.611051134351536351374534206115640699863433837890625p21 {- 2751929660969898 21 (-3.37862e+006)}
; -1.341331347084719904927396783023141324520111083984375p357 / -1.611051134351536351374534206115640699863433837890625p21 == 1.665162971533636238063991186209022998809814453125p335
; [HW: 1.665162971533636238063991186209022998809814453125p335] 

; mpf : + 2995627710739536 335
; mpfd: + 2995627710739536 335 (1.16548e+101) class: Pos. norm. non-zero
; hwf : + 2995627710739536 335 (1.16548e+101) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100100 #b0101011101100001011111011011110011010100000110000110)))
(assert (= y (fp #b1 #b10000010100 #b1001110001101101110110001101111000111001001110101010)))
(assert (= r (fp #b0 #b10101001110 #b1010101001001000000111101101100100111111010001010000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
