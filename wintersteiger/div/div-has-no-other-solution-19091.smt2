(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.247306595462070344382254916126839816570281982421875p308 {+ 1113769891169246 308 (6.50447e+092)}
; Y = 1.650186343058277049777871070546098053455352783203125p987 {+ 2928178972318642 987 (2.15843e+297)}
; 1.247306595462070344382254916126839816570281982421875p308 / 1.650186343058277049777871070546098053455352783203125p987 == 1.511716056442991895636396293411962687969207763671875p-680
; [HW: 1.511716056442991895636396293411962687969207763671875p-680] 

; mpf : + 2304564241116158 -680
; mpfd: + 2304564241116158 -680 (3.01351e-205) class: Pos. norm. non-zero
; hwf : + 2304564241116158 -680 (3.01351e-205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110011 #b0011111101001111011111000010101110011000001111011110)))
(assert (= y (fp #b0 #b11111011010 #b1010011001110010100111001011011110111101101110110010)))
(assert (= r (fp #b0 #b00101010111 #b1000001011111111110100101100111101000010101111111110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
