(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6648480999171997307684023326146416366100311279296875p-869 {- 2994209655045083 -869 (-4.22969e-262)}
; Y = 1.6376087269122814316091307773604057729244232177734375p-351 {+ 2871534424930327 -351 (3.57011e-106)}
; -1.6648480999171997307684023326146416366100311279296875p-869 / 1.6376087269122814316091307773604057729244232177734375p-351 == -1.0166336271645779465444547895458526909351348876953125p-518
; [HW: -1.0166336271645779465444547895458526909351348876953125p-518] 

; mpf : - 74911197100213 -518
; mpfd: - 74911197100213 -518 (-1.18475e-156) class: Neg. norm. non-zero
; hwf : - 74911197100213 -518 (-1.18475e-156) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011010 #b1010101000110011011111000010110111110011101111011011)))
(assert (= y (fp #b0 #b01010100000 #b1010001100111010010100110101010110111011100000010111)))
(assert (= r (fp #b1 #b00111111001 #b0000010001000010000110011111010010101111100010110101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
