(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4660826435350438057270139324828051030635833740234375p818 {- 2099049619748279 818 (-2.56268e+246)}
; Y = -1.4111227522516991417234066830133087933063507080078125p375 {- 1851532273844285 375 (-1.08596e+113)}
; -1.4660826435350438057270139324828051030635833740234375p818 / -1.4111227522516991417234066830133087933063507080078125p375 == 1.0389476331493103788972121037659235298633575439453125p443
; [HW: 1.0389476331493103788972121037659235298633575439453125p443] 

; mpf : + 175404546138197 443
; mpfd: + 175404546138197 443 (2.35984e+133) class: Pos. norm. non-zero
; hwf : + 175404546138197 443 (2.35984e+133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110001 #b0111011101010001001100010010111100110111010110110111)))
(assert (= y (fp #b1 #b10101110110 #b0110100100111111010101110011011110010000000000111101)))
(assert (= r (fp #b0 #b10110111010 #b0000100111111000011110001101101010100010000001010101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
