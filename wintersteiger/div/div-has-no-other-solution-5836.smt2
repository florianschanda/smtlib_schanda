(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4720726199058276062459071908961050212383270263671875p-418 {+ 2126026075099699 -418 (2.17466e-126)}
; Y = 1.3998037757732826324996722178184427320957183837890625p-515 {+ 1800556135593873 -515 (1.30503e-155)}
; 1.4720726199058276062459071908961050212383270263671875p-418 / 1.3998037757732826324996722178184427320957183837890625p-515 == 1.05162783911810908676898179692216217517852783203125p97
; [HW: 1.05162783911810908676898179692216217517852783203125p97] 

; mpf : + 232511117014260 97
; mpfd: + 232511117014260 97 (1.66637e+029) class: Pos. norm. non-zero
; hwf : + 232511117014260 97 (1.66637e+029) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001011101 #b0111100011011001110000000100111111010101001000110011)))
(assert (= y (fp #b0 #b00111111100 #b0110011001011001100010100100110111000011011110010001)))
(assert (= r (fp #b0 #b10001100000 #b0000110100110111011110110110100010010011010011110100)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
