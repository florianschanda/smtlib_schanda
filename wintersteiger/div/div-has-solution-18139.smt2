(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1301473690338579292102849649381823837757110595703125p522 {+ 586131642684133 522 (1.55165e+157)}
; Y = -1.9282241309356453751178150923806242644786834716796875p720 {- 4180349850198075 720 (-1.06354e+217)}
; 1.1301473690338579292102849649381823837757110595703125p522 / -1.9282241309356453751178150923806242644786834716796875p720 == -1.172215771913889259536745157674886286258697509765625p-199
; [HW: -1.172215771913889259536745157674886286258697509765625p-199] 

; mpf : - 775590886218714 -199
; mpfd: - 775590886218714 -199 (-1.45894e-060) class: Neg. norm. non-zero
; hwf : - 775590886218714 -199 (-1.45894e-060) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001001 #b0010000101010001010101101000010110101001001011100101)))
(assert (= y (fp #b1 #b11011001111 #b1110110110100000000110001011110110111010000000111011)))
(assert (= r (fp #b1 #b01100111000 #b0010110000010110010101010011010000111001101111011010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
