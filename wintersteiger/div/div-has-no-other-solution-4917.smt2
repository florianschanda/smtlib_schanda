(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.376052918548356540640043021994642913341522216796875p267 {+ 1693591783845966 267 (3.2632e+080)}
; Y = 1.4654311442538840992710902355611324310302734375p-341 {+ 2096115527828416 -341 (3.27142e-103)}
; 1.376052918548356540640043021994642913341522216796875p267 / 1.4654311442538840992710902355611324310302734375p-341 == 1.8780178433412044736172674674890004098415374755859375p607
; [HW: 1.8780178433412044736172674674890004098415374755859375p607] 

; mpf : + 3954240832096095 607
; mpfd: + 3954240832096095 607 (9.97487e+182) class: Pos. norm. non-zero
; hwf : + 3954240832096095 607 (9.97487e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001010 #b0110000001000101000000010000101010111011000001001110)))
(assert (= y (fp #b0 #b01010101010 #b0111011100100110011111101101011100011100001111000000)))
(assert (= r (fp #b0 #b11001011110 #b1110000011000101110001110000001001110100011101011111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
