(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7296117778491453265132804517634212970733642578125p-445 {- 3285879330846536 -445 (-1.90371e-134)}
; Y = 1.43505652583052523141304845921695232391357421875p52 {+ 1959320407615456 52 (6.46292e+015)}
; -1.7296117778491453265132804517634212970733642578125p-445 / 1.43505652583052523141304845921695232391357421875p52 == -1.20525689874700159265330512425862252712249755859375p-497
; [HW: -1.20525689874700159265330512425862252712249755859375p-497] 

; mpf : - 924394892712220 -497
; mpfd: - 924394892712220 -497 (-2.94559e-150) class: Neg. norm. non-zero
; hwf : - 924394892712220 -497 (-2.94559e-150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001000010 #b1011101011000111110101100110010010100011011101001000)))
(assert (= y (fp #b0 #b10000110011 #b0110111101011111110111010100111001011010011111100000)))
(assert (= r (fp #b1 #b01000001110 #b0011010010001011101101110101001101100101100100011100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
