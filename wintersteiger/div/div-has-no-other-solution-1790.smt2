(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3096559963622238509373119086376391351222991943359375p-543 {+ 1394566629829951 -543 (4.54851e-164)}
; Y = -1.341772877644304085009707705467008054256439208984375p-110 {- 1539208204404230 -110 (-1.03366e-033)}
; 1.3096559963622238509373119086376391351222991943359375p-543 / -1.341772877644304085009707705467008054256439208984375p-110 == -1.952127693416390030733964522369205951690673828125p-434
; [HW: -1.952127693416390030733964522369205951690673828125p-434] 

; mpf : - 4288001925279184 -434
; mpfd: - 4288001925279184 -434 (-4.40038e-131) class: Neg. norm. non-zero
; hwf : - 4288001925279184 -434 (-4.40038e-131) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100000 #b0100111101000101100111011000100101100010110100111111)))
(assert (= y (fp #b1 #b01110010001 #b0101011101111110011011010110010000100100011000000110)))
(assert (= r (fp #b1 #b01001001101 #b1111001110111110101000111111100011010110110111010000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
