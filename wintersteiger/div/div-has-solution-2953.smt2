(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0747772525003627119843940818100236356258392333984375p269 {+ 336766806496423 269 (1.0195e+081)}
; Y = -1.4359199421359625237215595916495658457279205322265625p837 {- 1963208888966889 837 (-1.31594e+252)}
; 1.0747772525003627119843940818100236356258392333984375p269 / -1.4359199421359625237215595916495658457279205322265625p837 == -1.4969877093587931060625351165072061121463775634765625p-569
; [HW: -1.4969877093587931060625351165072061121463775634765625p-569] 

; mpf : - 2238233662675977 -569
; mpfd: - 2238233662675977 -569 (-7.74731e-172) class: Neg. norm. non-zero
; hwf : - 2238233662675977 -569 (-7.74731e-172) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001100 #b0001001100100100100110100001110111111001010010100111)))
(assert (= y (fp #b1 #b11101000100 #b0110111110011000011100110000011100100101111011101001)))
(assert (= r (fp #b1 #b00111000110 #b0111111100111010100101100010011000110101110000001001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
