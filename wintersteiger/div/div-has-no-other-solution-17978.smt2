(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.54170640694654981217581735108979046344757080078125p89 {+ 2439628772468692 89 (9.5427e+026)}
; Y = -1.327197590008163619046399617218412458896636962890625p-715 {- 1473566944437290 -715 (-7.69996e-216)}
; 1.54170640694654981217581735108979046344757080078125p89 / -1.327197590008163619046399617218412458896636962890625p-715 == -1.161625381596019135344022288336418569087982177734375p804
; [HW: -1.161625381596019135344022288336418569087982177734375p804] 

; mpf : - 727896008329446 804
; mpfd: - 727896008329446 804 (-1.23932e+242) class: Neg. norm. non-zero
; hwf : - 727896008329446 804 (-1.23932e+242) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011000 #b1000101010101101010001010110010111011110011111010100)))
(assert (= y (fp #b1 #b00100110100 #b0101001111000011001110001010010001101010010000101010)))
(assert (= r (fp #b1 #b11100100011 #b0010100101100000010001111111000000101000100011100110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
