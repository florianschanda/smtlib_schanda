(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1046076569244380749523770646192133426666259765625p187 {- 471111004745000 187 (-2.16679e+056)}
; Y = 1.0603890524573109654937752566183917224407196044921875p130 {+ 271968114144003 130 (1.44333e+039)}
; -1.1046076569244380749523770646192133426666259765625p187 / 1.0603890524573109654937752566183917224407196044921875p130 == -1.041700359282903054491953298565931618213653564453125p57
; [HW: -1.041700359282903054491953298565931618213653564453125p57] 

; mpf : - 187801722527698 57
; mpfd: - 187801722527698 57 (-1.50125e+017) class: Neg. norm. non-zero
; hwf : - 187801722527698 57 (-1.50125e+017) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010111010 #b0001101011000111100100010100000101100110110100101000)))
(assert (= y (fp #b0 #b10010000001 #b0000111101110101101010000010110101010111001100000011)))
(assert (= r (fp #b1 #b10000111000 #b0000101010101100110111111110111101011001111111010010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
