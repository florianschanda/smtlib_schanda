(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.748925044094061131971784561756066977977752685546875p-692 {+ 3372858549510446 -692 (8.51166e-209)}
; Y = 1.8580725279207996880614928159047849476337432861328125p-670 {+ 3864415117000973 -670 (3.79285e-202)}
; 1.748925044094061131971784561756066977977752685546875p-692 / 1.8580725279207996880614928159047849476337432861328125p-670 == 1.882515367740918321715071215294301509857177734375p-23
; [HW: 1.882515367740918321715071215294301509857177734375p-23] 

; mpf : + 3974495881306736 -23
; mpfd: + 3974495881306736 -23 (2.24413e-007) class: Pos. norm. non-zero
; hwf : + 3974495881306736 -23 (2.24413e-007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101001011 #b1011111110111001100011010011101110001010000100101110)))
(assert (= y (fp #b0 #b00101100001 #b1101101110101010101001000010010100000100000100001101)))
(assert (= r (fp #b0 #b01111101000 #b1110000111101100100001101111001010101010001001110000)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
