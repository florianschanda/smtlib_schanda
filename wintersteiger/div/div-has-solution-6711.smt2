(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.79268296667000992528073766152374446392059326171875p620 {+ 3569926713317996 620 (7.80011e+186)}
; Y = -1.4124689983881653088104712878703139722347259521484375p-152 {- 1857595227442823 -152 (-2.47411e-046)}
; 1.79268296667000992528073766152374446392059326171875p620 / -1.4124689983881653088104712878703139722347259521484375p-152 == -1.2691839387028844843285924071096815168857574462890625p772
; [HW: -1.2691839387028844843285924071096815168857574462890625p772] 

; mpf : - 1212296686036433 772
; mpfd: - 1212296686036433 772 (-3.15269e+232) class: Neg. norm. non-zero
; hwf : - 1212296686036433 772 (-3.15269e+232) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101011 #b1100101011101101010001010101100111110001101001101100)))
(assert (= y (fp #b1 #b01101100111 #b0110100110010111100100010111101010110000111010000111)))
(assert (= r (fp #b1 #b11100000011 #b0100010011101001001111010001010101010110010111010001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
