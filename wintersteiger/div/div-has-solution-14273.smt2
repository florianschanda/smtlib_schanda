(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.535813130118886871144923134124837815761566162109375p218 {+ 2413087813143638 218 (6.4696e+065)}
; Y = -1.494625755099526553948408036376349627971649169921875p1018 {- 2227596366354078 1018 (-4.19825e+306)}
; 1.535813130118886871144923134124837815761566162109375p218 / -1.494625755099526553948408036376349627971649169921875p1018 == -1.0275569819928718207080464708269573748111724853515625p-800
; [HW: -1.0275569819928718207080464708269573748111724853515625p-800] 

; mpf : - 124105613834553 -800
; mpfd: - 124105613834553 -800 (-1.54102e-241) class: Neg. norm. non-zero
; hwf : - 124105613834553 -800 (-1.54102e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011001 #b1000100100101011000011001001111010100000110001010110)))
(assert (= y (fp #b1 #b11111111001 #b0111111010011111110010110010000111101001011010011110)))
(assert (= r (fp #b1 #b00011011111 #b0000011100001101111110010111000001101111100100111001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
