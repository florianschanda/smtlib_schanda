(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0746928518127862872688638162799179553985595703125p930 {+ 336386699591304 930 (9.75395e+279)}
; Y = 1.0959614918695790297675785041064955294132232666015625p302 {+ 432172139025753 302 (8.93005e+090)}
; 1.0746928518127862872688638162799179553985595703125p930 / 1.0959614918695790297675785041064955294132232666015625p302 == 1.9611872493430204666964300486142747104167938232421875p627
; [HW: 1.9611872493430204666964300486142747104167938232421875p627] 

; mpf : + 4328802537974499 627
; mpfd: + 4328802537974499 627 (1.09226e+189) class: Pos. norm. non-zero
; hwf : + 4328802537974499 627 (1.09226e+189) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110100001 #b0001001100011111000100100001101111000111111010001000)))
(assert (= y (fp #b0 #b10100101101 #b0001100010010000111011101010110101000001010101011001)))
(assert (= r (fp #b0 #b11001110010 #b1111011000010000010111100001100101000010101011100011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
