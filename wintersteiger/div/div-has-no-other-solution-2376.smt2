(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1947249397698873618622883441275916993618011474609375p-278 {- 876963166187407 -278 (-2.45997e-084)}
; Y = 1.9608262488518040100871075992472469806671142578125p-575 {+ 4327176736296776 -575 (1.58559e-173)}
; -1.1947249397698873618622883441275916993618011474609375p-278 / 1.9608262488518040100871075992472469806671142578125p-575 == -1.218593376613026801891237482777796685695648193359375p296
; [HW: -1.218593376613026801891237482777796685695648193359375p296] 

; mpf : - 984457049460086 296
; mpfd: - 984457049460086 296 (-1.55145e+089) class: Neg. norm. non-zero
; hwf : - 984457049460086 296 (-1.55145e+089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101001 #b0011000111011001011111100110000000000110111110001111)))
(assert (= y (fp #b0 #b00111000000 #b1111010111111000101101011000001111110100111101001000)))
(assert (= r (fp #b1 #b10100100111 #b0011011111110101101111000100101110101100110101110110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
