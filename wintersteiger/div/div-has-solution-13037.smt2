(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2536828602570817547956494308891706168651580810546875p-169 {+ 1142486034924075 -169 (1.6754e-051)}
; Y = 1.97343517610690799557460195501334965229034423828125p790 {+ 4383962296384404 790 (1.28505e+238)}
; 1.2536828602570817547956494308891706168651580810546875p-169 / 1.97343517610690799557460195501334965229034423828125p790 == 1.270558947601494903523189350380562245845794677734375p-960
; [HW: 1.270558947601494903523189350380562245845794677734375p-960] 

; mpf : + 1218489175599846 -960
; mpfd: + 1218489175599846 -960 (1.30376e-289) class: Pos. norm. non-zero
; hwf : + 1218489175599846 -960 (1.30376e-289) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010110 #b0100000011110001010111000010010001011100001000101011)))
(assert (= y (fp #b0 #b11100010101 #b1111100100110011000011000011011000100111101110010100)))
(assert (= r (fp #b0 #b00000111111 #b0100010101000011010110011110011110010110101011100110)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
