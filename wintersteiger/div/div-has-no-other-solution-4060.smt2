(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.323342777743575116033980521024204790592193603515625p-181 {+ 1456206413358906 -181 (4.31761e-055)}
; Y = 1.566086698785609687689657221199013292789459228515625p837 {+ 2549427845710266 837 (1.43523e+252)}
; 1.323342777743575116033980521024204790592193603515625p-181 / 1.566086698785609687689657221199013292789459228515625p837 == 1.6899993835203817038603801847784779965877532958984375p-1019
; [HW: 1.6899993835203817038603801847784779965877532958984375p-1019] 

; mpf : + 3107480966508263 -1019
; mpfd: + 3107480966508263 -1019 (3.0083e-307) class: Pos. norm. non-zero
; hwf : + 3107480966508263 -1019 (3.0083e-307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001010 #b0101001011000110100101111001111111001110011100111010)))
(assert (= y (fp #b0 #b11101000100 #b1001000011101011000011101101000111111100000110111010)))
(assert (= r (fp #b0 #b00000000100 #b1011000010100011110011001011001001111010111011100111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
