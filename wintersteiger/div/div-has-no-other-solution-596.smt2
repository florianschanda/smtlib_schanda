(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5630751804286144857059071000549010932445526123046875p831 {+ 2535865172759883 831 (2.23824e+250)}
; Y = -1.039958344508393306426796698360703885555267333984375p637 {- 179956385438342 637 (-5.93094e+191)}
; 1.5630751804286144857059071000549010932445526123046875p831 / -1.039958344508393306426796698360703885555267333984375p637 == -1.50301710513944453140311452443711459636688232421875p194
; [HW: -1.50301710513944453140311452443711459636688232421875p194] 

; mpf : - 2265387647266988 194
; mpfd: - 2265387647266988 194 (-3.77384e+058) class: Neg. norm. non-zero
; hwf : - 2265387647266988 194 (-3.77384e+058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111110 #b1001000000100101101100011110110100100001010101001011)))
(assert (= y (fp #b1 #b11001111100 #b0000101000111010101101011100011011011101101010000110)))
(assert (= r (fp #b1 #b10011000001 #b1000000011000101101110101001111111100111000010101100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
