(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4946096167853057945507089243619702756404876708984375p-512 {- 2227523685848167 -512 (-1.11473e-154)}
; Y = 1.95306044904947473384027034626342356204986572265625p-249 {+ 4292202683200772 -249 (2.15897e-075)}
; -1.4946096167853057945507089243619702756404876708984375p-512 / 1.95306044904947473384027034626342356204986572265625p-249 == -1.5305308317647925431259636752656660974025726318359375p-264
; [HW: -1.5305308317647925431259636752656660974025726318359375p-264] 

; mpf : - 2389298456244479 -264
; mpfd: - 2389298456244479 -264 (-5.16325e-080) class: Neg. norm. non-zero
; hwf : - 2389298456244479 -264 (-5.16325e-080) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111111 #b0111111010011110101111000110000001100001010001100111)))
(assert (= y (fp #b0 #b01100000110 #b1111001111111011110001010000001111000111010100000100)))
(assert (= r (fp #b1 #b01011110111 #b1000011111010000110111100101101111110011000011111111)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
