(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1104622811285338457309990189969539642333984375p715 {- 497477888128960 715 (-1.91404e+215)}
; Y = 1.550278801273033746355167750152759253978729248046875p-533 {+ 2478235404363118 -533 (5.51343e-161)}
; -1.1104622811285338457309990189969539642333984375p715 / 1.550278801273033746355167750152759253978729248046875p-533 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001010 #b0001110001000111010000011000110011100011011111000000)))
(assert (= y (fp #b0 #b00111101010 #b1000110011011111000100100100111100100110010101101110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
