(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7376387514360287500636559343547560274600982666015625p695 {+ 3322029606101337 695 (2.85632e+209)}
; Y = -1.0860183101764941948630394108477048575878143310546875p973 {- 387392029657899 973 (-8.67008e+292)}
; 1.7376387514360287500636559343547560274600982666015625p695 / -1.0860183101764941948630394108477048575878143310546875p973 == -1.6000087062561922923720203471020795404911041259765625p-278
; [HW: -1.6000087062561922923720203471020795404911041259765625p-278] 

; mpf : - 2702198985914441 -278
; mpfd: - 2702198985914441 -278 (-3.29445e-084) class: Neg. norm. non-zero
; hwf : - 2702198985914441 -278 (-3.29445e-084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110110 #b1011110011010101111001001010100110101110000101011001)))
(assert (= y (fp #b1 #b11111001100 #b0001011000000101010010111100010100010000101100101011)))
(assert (= r (fp #b1 #b01011101001 #b1001100110011010001010111010101010101111100001001001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
