(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9819545290423261629797480054548941552639007568359375p178 {- 4422330051089791 178 (-7.59334e+053)}
; Y = 1.024693473400249299487541065900586545467376708984375p-87 {+ 111209517603846 -87 (6.62193e-027)}
; -1.9819545290423261629797480054548941552639007568359375p178 / 1.024693473400249299487541065900586545467376708984375p-87 == -1.934192595631149202972665079869329929351806640625p265
; [HW: -1.934192595631149202972665079869329929351806640625p265] 

; mpf : - 4207229425576720 265
; mpfd: - 4207229425576720 265 (-1.1467e+080) class: Neg. norm. non-zero
; hwf : - 4207229425576720 265 (-1.1467e+080) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110001 #b1111101101100001010111110011110001100101010101111111)))
(assert (= y (fp #b0 #b01110101000 #b0000011001010010010011111011110010101101110000000110)))
(assert (= r (fp #b1 #b10100001000 #b1110111100100111001111101111011001100110101100010000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
