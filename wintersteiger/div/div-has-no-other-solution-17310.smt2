(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.66100920525641271296990453265607357025146484375p476 {+ 2976920810481248 476 (3.24078e+143)}
; Y = -1.8702027244834329433587072344380430877208709716796875p83 {- 3919044665720379 83 (-1.80875e+025)}
; 1.66100920525641271296990453265607357025146484375p476 / -1.8702027244834329433587072344380430877208709716796875p83 == -1.776287868167017780507421775837428867816925048828125p392
; [HW: -1.776287868167017780507421775837428867816925048828125p392] 

; mpf : - 3496089753809218 392
; mpfd: - 3496089753809218 392 (-1.79173e+118) class: Neg. norm. non-zero
; hwf : - 3496089753809218 392 (-1.79173e+118) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011011 #b1010100100110111111001100011011011101110011001100000)))
(assert (= y (fp #b1 #b10001010010 #b1101111011000101100110110001001010001011111000111011)))
(assert (= r (fp #b1 #b10110000111 #b1100011010111010110011010011111000001111000101000010)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
