(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.918076354005025851989785223850049078464508056640625p1009 {- 4134648325794698 1009 (-1.05228e+304)}
; Y = -1.03844882094435408959043343202210962772369384765625p1009 {- 173158095677828 1009 (-5.69706e+303)}
; -1.918076354005025851989785223850049078464508056640625p1009 / -1.03844882094435408959043343202210962772369384765625p1009 == 1.8470591090476158324662492304923944175243377685546875p0
; [HW: 1.8470591090476158324662492304923944175243377685546875p0] 

; mpf : + 3814815087867627 0
; mpfd: + 3814815087867627 0 (1.84706) class: Pos. norm. non-zero
; hwf : + 3814815087867627 0 (1.84706) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110000 #b1110101100000111000011010100101110101110101110001010)))
(assert (= y (fp #b1 #b11111110000 #b0000100111010111110010000010110010000110100110000100)))
(assert (= r (fp #b0 #b01111111111 #b1101100011011000110111011010001100100011011011101011)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
