(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.077301048895458190912677309825085103511810302734375p-75 {- 348132975000934 -75 (-2.85159e-023)}
; Y = -1.8274047745989594471183181667583994567394256591796875p-265 {- 3726299834568443 -265 (-3.08238e-080)}
; -1.077301048895458190912677309825085103511810302734375p-75 / -1.8274047745989594471183181667583994567394256591796875p-265 == 1.1790502726817944090242917809518985450267791748046875p189
; [HW: 1.1790502726817944090242917809518985450267791748046875p189] 

; mpf : + 806370741330315 189
; mpfd: + 806370741330315 189 (9.25127e+056) class: Pos. norm. non-zero
; hwf : + 806370741330315 189 (9.25127e+056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110110100 #b0001001111001010000000000110010011110011110101100110)))
(assert (= y (fp #b1 #b01011110110 #b1101001111010000110011001001111101110100111011111011)))
(assert (= r (fp #b0 #b10010111100 #b0010110111010110001111010001100110000010000110001011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
