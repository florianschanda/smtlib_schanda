(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6332656640902680766913590559852309525012969970703125p309 {+ 2851975008823461 309 (1.70343e+093)}
; Y = -1.75053779889052574247898519388400018215179443359375p118 {- 3380121751410844 118 (-5.81716e+035)}
; 1.6332656640902680766913590559852309525012969970703125p309 / -1.75053779889052574247898519388400018215179443359375p118 == -1.86601587823515302488885936327278614044189453125p190
; [HW: -1.86601587823515302488885936327278614044189453125p190] 

; mpf : - 3900188786516768 190
; mpfd: - 3900188786516768 190 (-2.92829e+057) class: Neg. norm. non-zero
; hwf : - 3900188786516768 190 (-2.92829e+057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110100 #b1010001000011101101100101101010011110010100010100101)))
(assert (= y (fp #b1 #b10001110101 #b1100000000100011001111101100010010100101100010011100)))
(assert (= r (fp #b1 #b10010111101 #b1101110110110011001101110111001011010110001100100000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
