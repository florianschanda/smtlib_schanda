(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0724074843525623901285825922968797385692596435546875p320 {+ 326094319549035 320 (2.29065e+096)}
; Y = -1.5983829819625936519145170677802525460720062255859375p-244 {- 2694877374591583 -244 (-5.65408e-074)}
; 1.0724074843525623901285825922968797385692596435546875p320 / -1.5983829819625936519145170677802525460720062255859375p-244 == -1.3418654933823106478740783131797797977924346923828125p563
; [HW: -1.3418654933823106478740783131797797977924346923828125p563] 

; mpf : - 1539625308607405 563
; mpfd: - 1539625308607405 563 (-4.05132e+169) class: Neg. norm. non-zero
; hwf : - 1539625308607405 563 (-4.05132e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111111 #b0001001010001001010011000000000101000111101001101011)))
(assert (= y (fp #b1 #b01100001011 #b1001100100101111101000001000101000000011001001011111)))
(assert (= r (fp #b1 #b11000110010 #b0101011110000100011111110011100110110101001110101101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
