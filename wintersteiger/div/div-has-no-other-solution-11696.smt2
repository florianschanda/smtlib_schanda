(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.950709042252387614979625141131691634654998779296875p-322 {- 4281612888425614 -322 (-2.28315e-097)}
; Y = -1.0897984729149585714225167976110242307186126708984375p-1022 {- 404416369158247 -1022 (-2.42488e-308)}
; -1.950709042252387614979625141131691634654998779296875p-322 / -1.0897984729149585714225167976110242307186126708984375p-1022 == 1.7899722661885297814166051466600038111209869384765625p700
; [HW: 1.7899722661885297814166051466600038111209869384765625p700] 

; mpf : + 3557718803639689 700
; mpfd: + 3557718803639689 700 (9.4155e+210) class: Pos. norm. non-zero
; hwf : + 3557718803639689 700 (9.4155e+210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111101 #b1111001101100001101010101111010001111100010010001110)))
(assert (= y (fp #b1 #b00000000001 #b0001011011111101000010000110000001100110100001100111)))
(assert (= r (fp #b0 #b11010111011 #b1100101000111011100111110101100000000110110110001001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
