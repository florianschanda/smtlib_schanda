(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8621668903426691343838683678768575191497802734375p21 {+ 3882854486078424 21 (3.90525e+006)}
; Y = -1.2600883345946645164303845376707613468170166015625p-760 {- 1171333726763944 -760 (-2.0778e-229)}
; 1.8621668903426691343838683678768575191497802734375p21 / -1.2600883345946645164303845376707613468170166015625p-760 == -1.4778066261058409036621696941438131034374237060546875p781
; [HW: -1.4778066261058409036621696941438131034374237060546875p781] 

; mpf : - 2151849743285419 781
; mpfd: - 2151849743285419 781 (-1.87951e+235) class: Neg. norm. non-zero
; hwf : - 2151849743285419 781 (-1.87951e+235) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010100 #b1101110010110110111110000010010110110111001111011000)))
(assert (= y (fp #b1 #b00100000111 #b0100001010010101001001100010101100100111101110101000)))
(assert (= r (fp #b1 #b11100001100 #b0111101001010001100010001111100011101111110010101011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
