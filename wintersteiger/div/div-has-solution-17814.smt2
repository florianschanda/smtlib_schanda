(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0154288187145323885118841644725762307643890380859375p-796 {+ 69485222213535 -796 (2.43654e-240)}
; Y = 1.5373861407890403452114469473599456250667572021484375p-961 {+ 2420172023411591 -961 (7.88782e-290)}
; 1.0154288187145323885118841644725762307643890380859375p-796 / 1.5373861407890403452114469473599456250667572021484375p-961 == 1.3209808411481824830246978308423422276973724365234375p164
; [HW: 1.3209808411481824830246978308423422276973724365234375p164] 

; mpf : + 1445569196588023 164
; mpfd: + 1445569196588023 164 (3.08899e+049) class: Pos. norm. non-zero
; hwf : + 1445569196588023 164 (3.08899e+049) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100011 #b0000001111110011001001001001111111001011011110011111)))
(assert (= y (fp #b0 #b00000111110 #b1000100110010010001000110101110000000011001110000111)))
(assert (= r (fp #b0 #b10010100011 #b0101001000101011110011001110011101011111101111110111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
