(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3011609534653363340339637943543493747711181640625p319 {+ 1356308357805032 319 (1.38963e+096)}
; Y = 1.9399915296274412579435875159106217324733734130859375p-106 {+ 4233345502561567 -106 (2.39122e-032)}
; 1.3011609534653363340339637943543493747711181640625p319 / 1.9399915296274412579435875159106217324733734130859375p-106 == 1.341408901630836592033801935031078755855560302734375p424
; [HW: 1.341408901630836592033801935031078755855560302734375p424] 

; mpf : + 1537569002165606 424
; mpfd: + 1537569002165606 424 (5.81138e+127) class: Pos. norm. non-zero
; hwf : + 1537569002165606 424 (5.81138e+127) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111110 #b0100110100011000111000100101110111110111001111101000)))
(assert (= y (fp #b0 #b01110010101 #b1111000010100011010010001110111001000100010100011111)))
(assert (= r (fp #b0 #b10110100111 #b0101011101100110100100101110001100010001010101100110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
