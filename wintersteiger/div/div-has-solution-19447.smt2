(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9465610913027404649255913682281970977783203125p-264 {- 4262932178074432 -264 (-6.56673e-080)}
; Y = 1.2938109829909780756906911847181618213653564453125p652 {+ 1323207033515528 652 (2.41784e+196)}
; -1.9465610913027404649255913682281970977783203125p-264 / 1.2938109829909780756906911847181618213653564453125p652 == -1.5045173652821850485139520969823934137821197509765625p-916
; [HW: -1.5045173652821850485139520969823934137821197509765625p-916] 

; mpf : - 2272144218286793 -916
; mpfd: - 2272144218286793 -916 (-2.71595e-276) class: Neg. norm. non-zero
; hwf : - 2272144218286793 -916 (-2.71595e-276) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011110111 #b1111001001010001110100111110001011001111101101000000)))
(assert (= y (fp #b0 #b11010001011 #b0100101100110111001100100101001100100110111000001000)))
(assert (= r (fp #b1 #b00001101011 #b1000000100101000000011001101000000100110101011001001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
