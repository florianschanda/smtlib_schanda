(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.353195125222879102722117750090546905994415283203125p9 {+ 1590649434342834 9 (692.836)}
; Y = -1.5672532537088035287098364278790540993213653564453125p171 {- 2554681542027669 171 (-4.69103e+051)}
; 1.353195125222879102722117750090546905994415283203125p9 / -1.5672532537088035287098364278790540993213653564453125p171 == -1.7268365811595927095112301685730926692485809326171875p-163
; [HW: -1.7268365811595927095112301685730926692485809326171875p-163] 

; mpf : - 3273380956069587 -163
; mpfd: - 3273380956069587 -163 (-1.47694e-049) class: Neg. norm. non-zero
; hwf : - 3273380956069587 -163 (-1.47694e-049) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001000 #b0101101001101010111111101110011111110000010110110010)))
(assert (= y (fp #b1 #b10010101010 #b1001000100110111100000100101110100111010100110010101)))
(assert (= r (fp #b1 #b01101011100 #b1011101000010001111101100101000110011101111011010011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
