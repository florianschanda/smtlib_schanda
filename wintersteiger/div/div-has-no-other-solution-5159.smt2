(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9544071271557452718070635455660521984100341796875p483 {+ 4298267582218360 483 (4.88093e+145)}
; Y = 1.155710404527017676201694484916515648365020751953125p178 {+ 701257319805586 178 (4.4278e+053)}
; 1.9544071271557452718070635455660521984100341796875p483 / 1.155710404527017676201694484916515648365020751953125p178 == 1.6910872477224081489310947290505282580852508544921875p305
; [HW: 1.6910872477224081489310947290505282580852508544921875p305] 

; mpf : + 3112380271323139 305
; mpfd: + 3112380271323139 305 (1.10234e+092) class: Pos. norm. non-zero
; hwf : + 3112380271323139 305 (1.10234e+092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100010 #b1111010001010100000001101000011000110100000001111000)))
(assert (= y (fp #b0 #b10010110001 #b0010011111011100101000110001011100010111001010010010)))
(assert (= r (fp #b0 #b10100110000 #b1011000011101011000110000000011110100110100000000011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
