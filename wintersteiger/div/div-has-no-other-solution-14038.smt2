(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0309747295087865470719634686247445642948150634765625p7 {+ 139497780273673 7 (131.965)}
; Y = -1.425948080660416561471492968848906457424163818359375p144 {- 1918299617341430 144 (-3.17997e+043)}
; 1.0309747295087865470719634686247445642948150634765625p7 / -1.425948080660416561471492968848906457424163818359375p144 == -1.4460200108145573327789179529645480215549468994140625p-138
; [HW: -1.4460200108145573327789179529645480215549468994140625p-138] 

; mpf : - 2008695554504225 -138
; mpfd: - 2008695554504225 -138 (-4.14987e-042) class: Neg. norm. non-zero
; hwf : - 2008695554504225 -138 (-4.14987e-042) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000110 #b0000011111101101111101011011101000111110001000001001)))
(assert (= y (fp #b1 #b10010001111 #b0110110100001010111011101111010000111010111111110110)))
(assert (= r (fp #b1 #b01101110101 #b0111001000101110010111100000111111001111011000100001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
