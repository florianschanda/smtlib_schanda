(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9145886026311347283268560204305686056613922119140625p469 {+ 4118940890006881 469 (2.91839e+141)}
; Y = -1.8959925225160521033984650784987024962902069091796875p698 {- 4035191590530043 698 (-2.49329e+210)}
; 1.9145886026311347283268560204305686056613922119140625p469 / -1.8959925225160521033984650784987024962902069091796875p698 == -1.0098080978138062047122502917773090302944183349609375p-229
; [HW: -1.0098080978138062047122502917773090302944183349609375p-229] 

; mpf : - 44171745659471 -229
; mpfd: - 44171745659471 -229 (-1.1705e-069) class: Neg. norm. non-zero
; hwf : - 44171745659471 -229 (-1.1705e-069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111010100 #b1110101000100010011110101000100110011000010101100001)))
(assert (= y (fp #b1 #b11010111001 #b1110010101011111110001000001010110101010101111111011)))
(assert (= r (fp #b1 #b01100011010 #b0000001010000010110010001001001101011000101001001111)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
