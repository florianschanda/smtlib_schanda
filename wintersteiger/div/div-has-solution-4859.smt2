(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9978848658826031670088241298799403011798858642578125p-655 {+ 4494073910147549 -655 (1.33636e-197)}
; Y = 1.0750344396795952217615877088974229991436004638671875p-540 {+ 337925074580979 -540 (2.98693e-163)}
; 1.9978848658826031670088241298799403011798858642578125p-655 / 1.0750344396795952217615877088974229991436004638671875p-540 == 1.8584380110446094835907615561154671013355255126953125p-115
; [HW: 1.8584380110446094835907615561154671013355255126953125p-115] 

; mpf : + 3866061106661173 -115
; mpfd: + 3866061106661173 -115 (4.47403e-035) class: Pos. norm. non-zero
; hwf : + 3866061106661173 -115 (4.47403e-035) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110000 #b1111111101110101011000011111000000100011100111011101)))
(assert (= y (fp #b0 #b00111100011 #b0001001100110101011101010000000001111111010111110011)))
(assert (= r (fp #b0 #b01110001100 #b1101101111000010100101111110111100010100011100110101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
