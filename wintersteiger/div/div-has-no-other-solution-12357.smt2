(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8898125121615738652991467461106367409229278564453125p982 {+ 4007359298200469 982 (7.72457e+295)}
; Y = 1.6589931269127926594109112556907348334789276123046875p-730 {+ 2967841200804171 -730 (2.9373e-220)}
; 1.8898125121615738652991467461106367409229278564453125p982 / 1.6589931269127926594109112556907348334789276123046875p-730 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010101 #b1110001111001010110000001011011101001110001110010101)))
(assert (= y (fp #b0 #b00100100101 #b1010100010110011110001100000100001100001000101001011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
