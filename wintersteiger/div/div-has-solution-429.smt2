(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.058840014483455771454600835568271577358245849609375p-540 {+ 264991867302166 -540 (2.94193e-163)}
; Y = -1.407742091093072023255672320374287664890289306640625p-83 {- 1836307129510026 -83 (-1.45557e-025)}
; 1.058840014483455771454600835568271577358245849609375p-540 / -1.407742091093072023255672320374287664890289306640625p-83 == -1.504309661809282605560156298452056944370269775390625p-458
; [HW: -1.504309661809282605560156298452056944370269775390625p-458] 

; mpf : - 2271208805003626 -458
; mpfd: - 2271208805003626 -458 (-2.02115e-138) class: Neg. norm. non-zero
; hwf : - 2271208805003626 -458 (-2.02115e-138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100011 #b0000111100010000001000111010000111100111000100010110)))
(assert (= y (fp #b1 #b01110101100 #b0110100001100001110010010010001001110010100010001010)))
(assert (= r (fp #b1 #b01000110101 #b1000000100011010011100000010000010000111000101101010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
