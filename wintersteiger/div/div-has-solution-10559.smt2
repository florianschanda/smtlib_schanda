(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3161068527110393322487880141125060617923736572265625p-773 {+ 1423618704078697 -773 (2.64914e-233)}
; Y = -1.3739039925522142926439528309856541454792022705078125p-944 {- 1683913881530493 -944 (-9.23933e-285)}
; 1.3161068527110393322487880141125060617923736572265625p-773 / -1.3739039925522142926439528309856541454792022705078125p-944 == -1.9158643687557688206624106896924786269664764404296875p170
; [HW: -1.9158643687557688206624106896924786269664764404296875p170] 

; mpf : - 4124686429850395 170
; mpfd: - 4124686429850395 170 (-2.86724e+051) class: Neg. norm. non-zero
; hwf : - 4124686429850395 170 (-2.86724e+051) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111010 #b0101000011101100011000001111001001101111011101101001)))
(assert (= y (fp #b1 #b00001001111 #b0101111110111000001011000000101111011011000001111101)))
(assert (= r (fp #b1 #b10010101001 #b1110101001110110000101100101011101100000101100011011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
