(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9564492857227964162092348487931303679943084716796875p130 {+ 4307464646779963 130 (2.66298e+039)}
; Y = 1.1416965736598674308055478832102380692958831787109375p-839 {+ 638144636334255 -839 (3.11447e-253)}
; 1.9564492857227964162092348487931303679943084716796875p130 / 1.1416965736598674308055478832102380692958831787109375p-839 == 1.713633316294473463159420134616084396839141845703125p969
; [HW: 1.713633316294473463159420134616084396839141845703125p969] 

; mpf : + 3213918737342962 969
; mpfd: + 3213918737342962 969 (8.55035e+291) class: Pos. norm. non-zero
; hwf : + 3213918737342962 969 (8.55035e+291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000001 #b1111010011011001110111000100001001110110010000111011)))
(assert (= y (fp #b0 #b00010111000 #b0010010001000110001110100000010111010011000010101111)))
(assert (= r (fp #b0 #b11111001000 #b1011011010110000101011000100101011010010000111110010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
