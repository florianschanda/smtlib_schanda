(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.572385817955202380602486300631426274776458740234375p587 {- 2577796556455206 587 (-7.96465e+176)}
; Y = -1.9673381468930113413762228447012603282928466796875p987 {- 4356503717888632 987 (-2.57327e+297)}
; -1.572385817955202380602486300631426274776458740234375p587 / -1.9673381468930113413762228447012603282928466796875p987 == 1.5984906513793253335364852318889461457729339599609375p-401
; [HW: 1.5984906513793253335364852318889461457729339599609375p-401] 

; mpf : + 2695362274536655 -401
; mpfd: + 2695362274536655 -401 (3.09515e-121) class: Pos. norm. non-zero
; hwf : + 2695362274536655 -401 (3.09515e-121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001010 #b1001001010000111111000001000000011001111110100100110)))
(assert (= y (fp #b1 #b11111011010 #b1111011110100011011110010000100100010100001001111000)))
(assert (= r (fp #b0 #b01001101110 #b1001100100110110101011101110111010100010110011001111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
