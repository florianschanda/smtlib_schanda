(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.683813620350743445186481039854697883129119873046875p593 {- 3079622765802478 593 (-5.4586e+178)}
; Y = 1.7125737668553131509696640932816080749034881591796875p824 {+ 3209146950883579 824 (1.91587e+248)}
; -1.683813620350743445186481039854697883129119873046875p593 / 1.7125737668553131509696640932816080749034881591796875p824 == -1.9664129545118747000032044525141827762126922607421875p-232
; [HW: -1.9664129545118747000032044525141827762126922607421875p-232] 

; mpf : - 4352337021825699 -232
; mpfd: - 4352337021825699 -232 (-2.84915e-070) class: Neg. norm. non-zero
; hwf : - 4352337021825699 -232 (-2.84915e-070) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010000 #b1010111100001110011010001100111111110111001111101110)))
(assert (= y (fp #b0 #b11100110111 #b1011011001101011001111000000000010100001100011111011)))
(assert (= r (fp #b1 #b01100010111 #b1111011101100110110101101110001000001111001010100011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
