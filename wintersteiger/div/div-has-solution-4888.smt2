(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.126076201676948773666708802920766174793243408203125p205 {- 567796734892594 205 (-5.79051e+061)}
; Y = -1.505585618992310248387411775183863937854766845703125p165 {- 2276955205297650 165 (-7.04133e+049)}
; -1.126076201676948773666708802920766174793243408203125p205 / -1.505585618992310248387411775183863937854766845703125p165 == 1.4958647153266948492955634719692170619964599609375p39
; [HW: 1.4958647153266948492955634719692170619964599609375p39] 

; mpf : + 2233176147171480 39
; mpfd: + 2233176147171480 39 (8.2236e+011) class: Pos. norm. non-zero
; hwf : + 2233176147171480 39 (8.2236e+011) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001100 #b0010000001000110100001111010101100000001101000110010)))
(assert (= y (fp #b1 #b10010100100 #b1000000101101110000011110010001011100110010111110010)))
(assert (= r (fp #b0 #b10000100110 #b0111111011110000111111010110111110010001100010011000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
