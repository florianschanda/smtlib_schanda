(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.402043576700776839061290957033634185791015625p392 {- 1810643302216320 392 (-1.41423e+118)}
; Y = 1.3027190784495534803255623046425171196460723876953125p986 {+ 1363325528903349 986 (8.51974e+296)}
; -1.402043576700776839061290957033634185791015625p392 / 1.3027190784495534803255623046425171196460723876953125p986 == -1.0762439883581313981864013840095140039920806884765625p-594
; [HW: -1.0762439883581313981864013840095140039920806884765625p-594] 

; mpf : - 343372397558921 -594
; mpfd: - 343372397558921 -594 (-1.65994e-179) class: Neg. norm. non-zero
; hwf : - 343372397558921 -594 (-1.65994e-179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000111 #b0110011011101100010100111110110101111111001010000000)))
(assert (= y (fp #b0 #b11111011001 #b0100110101111110111111110101110111010000111010110101)))
(assert (= r (fp #b1 #b00110101101 #b0001001110000100101110011101110010000011110010001001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
