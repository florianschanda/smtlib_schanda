(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7314499085963246383101932224235497415065765380859375p589 {+ 3294157535794591 589 (3.50814e+177)}
; Y = 1.497560888618031160746113528148271143436431884765625p158 {+ 2240815032574298 158 (5.47172e+047)}
; 1.7314499085963246383101932224235497415065765380859375p589 / 1.497560888618031160746113528148271143436431884765625p158 == 1.156179973552947881643149230512790381908416748046875p431
; [HW: 1.156179973552947881643149230512790381908416748046875p431] 

; mpf : + 703372070695790 431
; mpfd: + 703372070695790 431 (6.41141e+129) class: Pos. norm. non-zero
; hwf : + 703372070695790 431 (6.41141e+129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001100 #b1011101101000000010011010001110000010101010110011111)))
(assert (= y (fp #b0 #b10010011101 #b0111111101100000001001101000000001100010000101011010)))
(assert (= r (fp #b0 #b10110101110 #b0010011111111011011010010010011010110011001101101110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
