(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5314902251100723784560386775410734117031097412109375p811 {- 2393619179756783 811 (-2.09142e+244)}
; Y = 1.9987044398588411642236906118341721594333648681640625p780 {+ 4497764943201537 780 (1.271e+235)}
; -1.5314902251100723784560386775410734117031097412109375p811 / 1.9987044398588411642236906118341721594333648681640625p780 == -1.5324829370151740182137700685416348278522491455078125p30
; [HW: -1.5324829370151740182137700685416348278522491455078125p30] 

; mpf : - 2398089956722685 30
; mpfd: - 2398089956722685 30 (-1.64549e+009) class: Neg. norm. non-zero
; hwf : - 2398089956722685 30 (-1.64549e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101010 #b1000100000001111101111100100111011111101110011101111)))
(assert (= y (fp #b0 #b11100001011 #b1111111110101011000110000001101110010000010100000001)))
(assert (= r (fp #b1 #b10000011101 #b1000100001010000110011010100000000101000011111111101)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
