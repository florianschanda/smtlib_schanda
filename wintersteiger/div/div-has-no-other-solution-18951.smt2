(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8065823669220220093478701528511010110378265380859375p577 {+ 3632524047113631 577 (8.93645e+173)}
; Y = 1.5574977616473517638695511777768842875957489013671875p815 {+ 2510746711614899 815 (3.40309e+245)}
; 1.8065823669220220093478701528511010110378265380859375p577 / 1.5574977616473517638695511777768842875957489013671875p815 == 1.1599261401256948378346578465425409376621246337890625p-238
; [HW: 1.1599261401256948378346578465425409376621246337890625p-238] 

; mpf : + 720243305076881 -238
; mpfd: + 720243305076881 -238 (2.62598e-072) class: Pos. norm. non-zero
; hwf : + 720243305076881 -238 (2.62598e-072) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000000 #b1100111001111100001011101001011101110101110110011111)))
(assert (= y (fp #b0 #b11100101110 #b1000111010111000001011000101110111011110010110110011)))
(assert (= r (fp #b0 #b01100010001 #b0010100011110000111010110110010110011101100010010001)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
