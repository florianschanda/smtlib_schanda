(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3668755067240725420418812063871882855892181396484375p764 {- 1652260395373895 764 (-1.32631e+230)}
; Y = 1.8151369667370687022156516832183115184307098388671875p743 {+ 3671050539652979 743 (8.39839e+223)}
; -1.3668755067240725420418812063871882855892181396484375p764 / 1.8151369667370687022156516832183115184307098388671875p743 == -1.50608525061466735905923997052013874053955078125p20
; [HW: -1.50608525061466735905923997052013874053955078125p20] 

; mpf : - 2279205346085920 20
; mpfd: - 2279205346085920 20 (-1.57924e+006) class: Neg. norm. non-zero
; hwf : - 2279205346085920 20 (-1.57924e+006) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111011 #b0101110111101011100011011001111100010101010101000111)))
(assert (= y (fp #b0 #b11011100110 #b1101000010101100110100001111010111100101011101110011)))
(assert (= r (fp #b1 #b10000010011 #b1000000110001110110011011001000001100000110000100000)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
