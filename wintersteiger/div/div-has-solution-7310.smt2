(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.898758090354587313441925289225764572620391845703125p-176 {- 4047646600817138 -176 (-1.9824e-053)}
; Y = -1.718010530691125747893011066480539739131927490234375p38 {- 3233631958468646 38 (-4.72243e+011)}
; -1.898758090354587313441925289225764572620391845703125p-176 / -1.718010530691125747893011066480539739131927490234375p38 == 1.1052074806495799652594769213465042412281036376953125p-214
; [HW: 1.1052074806495799652594769213465042412281036376953125p-214] 

; mpf : + 473812370650037 -214
; mpfd: + 473812370650037 -214 (4.19783e-065) class: Pos. norm. non-zero
; hwf : + 473812370650037 -214 (4.19783e-065) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001111 #b1110011000010101000000101001110100010110100111110010)))
(assert (= y (fp #b1 #b10000100101 #b1011011111001111100010011100001110000000100000100110)))
(assert (= r (fp #b0 #b01100101001 #b0001101011101110111000001010000010101111001110110101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
