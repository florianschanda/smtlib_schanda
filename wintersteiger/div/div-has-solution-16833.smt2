(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.00833705102235438033630998688749969005584716796875p-427 {+ 37546739877644 -427 (2.90936e-129)}
; Y = -1.903625156105552829188809482729993760585784912109375p388 {- 4069565916319574 388 (-1.20011e+117)}
; 1.00833705102235438033630998688749969005584716796875p-427 / -1.903625156105552829188809482729993760585784912109375p388 == -1.05938613785207191853032782091759145259857177734375p-816
; [HW: -1.05938613785207191853032782091759145259857177734375p-816] 

; mpf : - 267451388301564 -816
; mpfd: - 267451388301564 -816 (-2.42425e-246) class: Neg. norm. non-zero
; hwf : - 267451388301564 -816 (-2.42425e-246) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010100 #b0000001000100010011000001000000101111100011100001100)))
(assert (= y (fp #b1 #b10110000011 #b1110011101010011111110100110110101010000111101010110)))
(assert (= r (fp #b1 #b00011001111 #b0000111100110011111011100000111111101001000011111100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
