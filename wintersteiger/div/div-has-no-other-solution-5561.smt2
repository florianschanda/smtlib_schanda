(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.712307861599640990135640095104463398456573486328125p426 {- 3207949420073218 426 (-2.96729e+128)}
; Y = 1.92242579682421332876174346893094480037689208984375p215 {+ 4154236474854460 215 (1.01228e+065)}
; -1.712307861599640990135640095104463398456573486328125p426 / 1.92242579682421332876174346893094480037689208984375p215 == -1.7814033336717802757931394808110781013965606689453125p210
; [HW: -1.7814033336717802757931394808110781013965606689453125p210] 

; mpf : - 3519127762350293 210
; mpfd: - 3519127762350293 210 (-2.93131e+063) class: Neg. norm. non-zero
; hwf : - 3519127762350293 210 (-2.93131e+063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110101001 #b1011011001011001110011101101101001000001000100000010)))
(assert (= y (fp #b0 #b10011010110 #b1110110000100100000110001101011001011000110000111100)))
(assert (= r (fp #b1 #b10011010001 #b1100100000001010000011001000001100011011000011010101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
