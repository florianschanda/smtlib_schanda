(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4137499683764096491955797318951226770877838134765625p96 {+ 1863364203404553 96 (1.12009e+029)}
; Y = -1.26595615225132451797662724857218563556671142578125p581 {- 1197760028175956 581 (-1.00195e+175)}
; 1.4137499683764096491955797318951226770877838134765625p96 / -1.26595615225132451797662724857218563556671142578125p581 == -1.11674481447264550837417118600569665431976318359375p-485
; [HW: -1.11674481447264550837417118600569665431976318359375p-485] 

; mpf : - 525771902956444 -485
; mpfd: - 525771902956444 -485 (-1.11791e-146) class: Neg. norm. non-zero
; hwf : - 525771902956444 -485 (-1.11791e-146) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011111 #b0110100111101011100001001001011011100101110100001001)))
(assert (= y (fp #b1 #b11001000100 #b0100010000010101101100111101000000010110111001010100)))
(assert (= r (fp #b1 #b01000011010 #b0001110111100010111111001111100000100011001110011100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
