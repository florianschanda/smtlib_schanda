(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1864236759654953612397321194293908774852752685546875p536 {- 839577597611243 536 (-2.66881e+161)}
; Y = -1.004190053154911499433410426718182861804962158203125p670 {- 18870321827122 670 (-4.91941e+201)}
; -1.1864236759654953612397321194293908774852752685546875p536 / -1.004190053154911499433410426718182861804962158203125p670 == 1.18147324028758493597024425980634987354278564453125p-134
; [HW: 1.18147324028758493597024425980634987354278564453125p-134] 

; mpf : + 817282817336884 -134
; mpfd: + 817282817336884 -134 (5.42506e-041) class: Pos. norm. non-zero
; hwf : + 817282817336884 -134 (5.42506e-041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000010111 #b0010111110111001011101100100011101111000110011101011)))
(assert (= y (fp #b1 #b11010011101 #b0000000100010010100110010110110101000100110100110010)))
(assert (= r (fp #b0 #b01101111001 #b0010111001110101000001111100000000100010011000110100)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
