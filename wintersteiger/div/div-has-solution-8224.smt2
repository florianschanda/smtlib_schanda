(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.591804069333174087574889199458993971347808837890625p-100 {+ 2665248586125226 -100 (1.25571e-030)}
; Y = 1.797304890986316738832329065189696848392486572265625p-236 {+ 3590742009946650 -236 (1.62758e-071)}
; 1.591804069333174087574889199458993971347808837890625p-100 / 1.797304890986316738832329065189696848392486572265625p-236 == 1.7713233601224231961168698035180568695068359375p135
; [HW: 1.7713233601224231961168698035180568695068359375p135] 

; mpf : + 3473731597229504 135
; mpfd: + 3473731597229504 135 (7.7152e+040) class: Pos. norm. non-zero
; hwf : + 3473731597229504 135 (7.7152e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011011 #b1001011110000000011110001011001101101100111110101010)))
(assert (= y (fp #b0 #b01100010011 #b1100110000011100001011000101111110111010001000011010)))
(assert (= r (fp #b0 #b10010000110 #b1100010101110101011100101001111001011101110111000000)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
