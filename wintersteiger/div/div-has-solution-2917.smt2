(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0622716533802483152015838641091249883174896240234375p680 {+ 280446594959031 680 (5.32884e+204)}
; Y = 1.6400785464265215107815265582758001983165740966796875p141 {+ 2882657503174331 141 (4.57187e+042)}
; 1.0622716533802483152015838641091249883174896240234375p680 / 1.6400785464265215107815265582758001983165740966796875p141 == 1.295391194153200142835657970863394439220428466796875p538
; [HW: 1.295391194153200142835657970863394439220428466796875p538] 

; mpf : + 1330323671916878 538
; mpfd: + 1330323671916878 538 (1.16557e+162) class: Pos. norm. non-zero
; hwf : + 1330323671916878 538 (1.16557e+162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010100111 #b0000111111110001000010001111101010111100011010110111)))
(assert (= y (fp #b0 #b10010001100 #b1010001111011100001100000000011111000101111010111011)))
(assert (= r (fp #b0 #b11000011001 #b0100101110011110110000011101111001101010000101001110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
