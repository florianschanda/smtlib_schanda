(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.16170319295215040966695596580393612384796142578125p-156 {- 728246439523924 -156 (-1.27179e-047)}
; Y = 1.3880242283120625135239833980449475347995758056640625p873 {+ 1747505770036929 873 (8.74145e+262)}
; -1.16170319295215040966695596580393612384796142578125p-156 / 1.3880242283120625135239833980449475347995758056640625p873 == -0.006538651134336159742588279186747968196868896484375p-1022
; [HW: -0.006538651134336159742588279186747968196868896484375p-1022] 

; mpf : - 29447466812102 -1023
; mpfd: - 29447466812102 -1023 (-1.4549e-310) class: Neg. denorm.
; hwf : - 29447466812102 -1023 (-1.4549e-310) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100011 #b0010100101100101011000010110010101100011011001010100)))
(assert (= y (fp #b0 #b11101101000 #b0110001101010101100011100100101010100111111011000001)))
(assert (= r (fp #b1 #b00000000000 #b0000000110101100100001000101110011001000001011000110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
