(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.62809252540156279565053409896790981292724609375p651 {- 2828677263352672 651 (-1.52127e+196)}
; Y = -0.8762606634957295081989059326588176190853118896484375p-1022 {- 3946327197598791 -1023 (-1.94974e-308)}
; -1.62809252540156279565053409896790981292724609375p651 / -0.8762606634957295081989059326588176190853118896484375p-1022 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001010 #b1010000011001010101010111111011101110110001101100000)))
(assert (= y (fp #b1 #b00000000000 #b1110000001010010100111100110110001111100010001000111)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
