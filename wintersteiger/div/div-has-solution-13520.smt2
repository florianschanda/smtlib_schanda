(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.08509386363759485760738243698142468929290771484375p441 {- 383228692569788 441 (-6.16163e+132)}
; Y = -1.2680309667316798094560681420261971652507781982421875p976 {- 1207104161896547 976 (-8.09852e+293)}
; -1.08509386363759485760738243698142468929290771484375p441 / -1.2680309667316798094560681420261971652507781982421875p976 == 1.71146271992772991410447502858005464076995849609375p-536
; [HW: 1.71146271992772991410447502858005464076995849609375p-536] 

; mpf : + 3204143240354524 -536
; mpfd: + 3204143240354524 -536 (7.60834e-162) class: Pos. norm. non-zero
; hwf : + 3204143240354524 -536 (7.60834e-162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111000 #b0001010111001000101101100010000101101001111010111100)))
(assert (= y (fp #b1 #b11111001111 #b0100010010011101101011010110110001101101100001100011)))
(assert (= r (fp #b0 #b00111100111 #b1011011000100010011010111011101001101001101011011100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
