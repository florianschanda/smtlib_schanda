(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5871720659820922616489724532584659755229949951171875p-375 {+ 2644387897559315 -375 (2.06241e-113)}
; Y = 1.43504258715269106261303022620268166065216064453125p304 {+ 1959257633391156 304 (4.67717e+091)}
; 1.5871720659820922616489724532584659755229949951171875p-375 / 1.43504258715269106261303022620268166065216064453125p304 == 1.1060104279770859303511088000959716737270355224609375p-679
; [HW: 1.1060104279770859303511088000959716737270355224609375p-679] 

; mpf : + 477428523934991 -679
; mpfd: + 477428523934991 -679 (4.40953e-205) class: Pos. norm. non-zero
; hwf : + 477428523934991 -679 (4.40953e-205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010001000 #b1001011001010000111010001001010010000100100100010011)))
(assert (= y (fp #b0 #b10100101111 #b0110111101011110111100110111010000110000001000110100)))
(assert (= r (fp #b0 #b00101011000 #b0001101100100011011111111101100100110010010100001111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
