(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1867743860511150710834726851317100226879119873046875p-48 {- 841157055422155 -48 (-4.21627e-015)}
; Y = 0.4965472077243264781287734876968897879123687744140625p-1022 {+ 2236249819679137 -1023 (1.10485e-308)}
; -1.1867743860511150710834726851317100226879119873046875p-48 / 0.4965472077243264781287734876968897879123687744140625p-1022 == -1.195026744274825691860542065114714205265045166015625p975
; [HW: -1.195026744274825691860542065114714205265045166015625p975] 

; mpf : - 878322372843386 975
; mpfd: - 878322372843386 975 (-3.81613e+293) class: Neg. norm. non-zero
; hwf : - 878322372843386 975 (-3.81613e+293) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001111 #b0010111111010000011100100011011111010001111011001011)))
(assert (= y (fp #b0 #b00000000000 #b0111111100011101101101111100001000011000100110100001)))
(assert (= r (fp #b1 #b11111001110 #b0011000111101101010001011101000010000001011101111010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
