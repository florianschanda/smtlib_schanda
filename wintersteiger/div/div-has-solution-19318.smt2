(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.79415598048648394780002490733750164508819580078125p-860 {- 3576560577792980 -860 (-2.3338e-259)}
; Y = -1.60510249929733372908913224819116294384002685546875p-7 {- 2725139390356428 -7 (-0.0125399)}
; -1.79415598048648394780002490733750164508819580078125p-860 / -1.60510249929733372908913224819116294384002685546875p-7 == 1.117782809055441806123099013348110020160675048828125p-853
; [HW: 1.117782809055441806123099013348110020160675048828125p-853] 

; mpf : + 530446614972738 -853
; mpfd: + 530446614972738 -853 (1.86111e-257) class: Pos. norm. non-zero
; hwf : + 530446614972738 -853 (1.86111e-257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010100011 #b1100101101001101110011100110110000011100101111010100)))
(assert (= y (fp #b1 #b01111111000 #b1001101011100111111111110101010100110101101111001100)))
(assert (= r (fp #b0 #b00010101010 #b0001111000100111000000111010000011101100100101000010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
