(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2852258982984803292737296942505054175853729248046875p323 {+ 1284543249293451 323 (2.19618e+097)}
; Y = 1.777373532639115349951453026733361184597015380859375p-827 {+ 3500979151921206 -827 (1.98597e-249)}
; 1.2852258982984803292737296942505054175853729248046875p323 / 1.777373532639115349951453026733361184597015380859375p-827 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000010 #b0100100100000100100100001000000100101010000010001011)))
(assert (= y (fp #b0 #b00011000100 #b1100011100000001111100111010101101110110000000110110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
