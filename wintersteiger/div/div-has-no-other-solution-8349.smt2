(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.03837429155014238091325751156546175479888916015625p-915 {+ 172822445125828 -915 (3.74893e-276)}
; Y = 1.9730243488050251965404413567739538848400115966796875p-575 {+ 4382112094700731 -575 (1.59546e-173)}
; 1.03837429155014238091325751156546175479888916015625p-915 / 1.9730243488050251965404413567739538848400115966796875p-575 == 1.05257118816505279568218611530028283596038818359375p-341
; [HW: 1.05257118816505279568218611530028283596038818359375p-341] 

; mpf : + 236759583430556 -341
; mpfd: + 236759583430556 -341 (2.34976e-103) class: Pos. norm. non-zero
; hwf : + 236759583430556 -341 (2.34976e-103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101100 #b0000100111010010111001011100011100110111000011000100)))
(assert (= y (fp #b0 #b00111000000 #b1111100100011000000111111010110001010100010010111011)))
(assert (= r (fp #b0 #b01010101010 #b0000110101110101010011100010110111100001011110011100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
