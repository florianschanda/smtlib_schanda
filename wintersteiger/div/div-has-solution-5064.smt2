(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3626331186749414126069268604624085128307342529296875p-297 {- 1633154378136667 -297 (-5.35143e-090)}
; Y = -1.473433299915071881258654684643261134624481201171875p-463 {- 2132154033082302 -463 (-6.18646e-140)}
; -1.3626331186749414126069268604624085128307342529296875p-297 / -1.473433299915071881258654684643261134624481201171875p-463 == 1.849602718702615167245539851137436926364898681640625p165
; [HW: 1.849602718702615167245539851137436926364898681640625p165] 

; mpf : + 3826270487362058 165
; mpfd: + 3826270487362058 165 (8.65023e+049) class: Pos. norm. non-zero
; hwf : + 3826270487362058 165 (8.65023e+049) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010110 #b0101110011010101100001100010100100100111110001011011)))
(assert (= y (fp #b1 #b01000110000 #b0111100100110010111011001011101111111000111110111110)))
(assert (= r (fp #b0 #b10010100100 #b1101100101111111100100000101001101101011101000001010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
