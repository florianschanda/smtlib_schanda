(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6295751927150787796705344590009190142154693603515625p398 {- 2835354603313337 398 (-1.05199e+120)}
; Y = 1.5742727188420315709294072803459130227565765380859375p-524 {+ 2586294402586015 -524 (2.86657e-158)}
; -1.6295751927150787796705344590009190142154693603515625p398 / 1.5742727188420315709294072803459130227565765380859375p-524 == -1.0351289031507355797856462231720797717571258544921875p922
; [HW: -1.0351289031507355797856462231720797717571258544921875p922] 

; mpf : - 158206515139587 922
; mpfd: - 158206515139587 922 (-3.66987e+277) class: Neg. norm. non-zero
; hwf : - 158206515139587 922 (-3.66987e+277) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001101 #b1010000100101011110101101111111100010101100010111001)))
(assert (= y (fp #b0 #b00111110011 #b1001001100000011100010010111001001101001010110011111)))
(assert (= r (fp #b1 #b11110011001 #b0000100011111110001101010011001000101101010000000011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
