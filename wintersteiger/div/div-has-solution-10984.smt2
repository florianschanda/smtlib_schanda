(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.850776675685890548805900834850035607814788818359375p-464 {+ 3831557519594486 -464 (3.8854e-140)}
; Y = 1.584232280580656127000338528887368738651275634765625p562 {+ 2631148281120858 562 (2.39153e+169)}
; 1.850776675685890548805900834850035607814788818359375p-464 / 1.584232280580656127000338528887368738651275634765625p562 == 0.0730155190298049650010625555296428501605987548828125p-1022
; [HW: 0.0730155190298049650010625555296428501605987548828125p-1022] 

; mpf : + 328832664294893 -1023
; mpfd: + 328832664294893 -1023 (1.62465e-309) class: Pos. denorm.
; hwf : + 328832664294893 -1023 (1.62465e-309) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101111 #b1101100111001100100000000000111001000101001111110110)))
(assert (= y (fp #b0 #b11000110001 #b1001010110010000001111110010101001011100100001011010)))
(assert (= r (fp #b0 #b00000000000 #b0001001010110001001001010010001001010101010111101101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
