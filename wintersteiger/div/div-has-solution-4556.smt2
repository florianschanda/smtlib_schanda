(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.76621705479862800558521485072560608386993408203125p328 {+ 3450734842476020 328 (9.6579e+098)}
; Y = 1.556804608747095475251853713416494429111480712890625p-137 {+ 2507625028471594 -137 (8.93562e-042)}
; 1.76621705479862800558521485072560608386993408203125p328 / 1.556804608747095475251853713416494429111480712890625p-137 == 1.1345142767916558401708471137681044638156890869140625p465
; [HW: 1.1345142767916558401708471137681044638156890869140625p465] 

; mpf : + 605798446834913 465
; mpfd: + 605798446834913 465 (1.08083e+140) class: Pos. norm. non-zero
; hwf : + 605798446834913 465 (1.08083e+140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000111 #b1100010000100110110011010000011111111111010111110100)))
(assert (= y (fp #b0 #b01101110110 #b1000111010001010101111110011000011010100101100101010)))
(assert (= r (fp #b0 #b10111010000 #b0010001001101111100001110001001110101010010011100001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
