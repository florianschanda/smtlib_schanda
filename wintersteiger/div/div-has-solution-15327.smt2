(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.544995668315727765929068482364527881145477294921875p-181 {- 2454442288745246 -181 (-5.04078e-055)}
; Y = -1.136023262952500889610973899834789335727691650390625p604 {- 612594316346602 604 (-7.54231e+181)}
; -1.544995668315727765929068482364527881145477294921875p-181 / -1.136023262952500889610973899834789335727691650390625p604 == 1.360003548079038449003519417601637542247772216796875p-785
; [HW: 1.360003548079038449003519417601637542247772216796875p-785] 

; mpf : + 1621311844980814 -785
; mpfd: + 1621311844980814 -785 (6.68334e-237) class: Pos. norm. non-zero
; hwf : + 1621311844980814 -785 (6.68334e-237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001010 #b1000101110000100110101100000101111100000101100011110)))
(assert (= y (fp #b1 #b11001011011 #b0010001011010010011010111010100111100000010011101010)))
(assert (= r (fp #b0 #b00011101110 #b0101110000101001001100010100100101110001100001001110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
