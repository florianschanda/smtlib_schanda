(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3077515950740161709830999825499020516872406005859375p64 {+ 1385989968898015 64 (2.41238e+019)}
; Y = -1.4345215055052402686186496794107370078563690185546875p83 {- 1956910890277867 83 (-1.38738e+025)}
; 1.3077515950740161709830999825499020516872406005859375p64 / -1.4345215055052402686186496794107370078563690185546875p83 == -1.823258264243901027867877928656525909900665283203125p-20
; [HW: -1.823258264243901027867877928656525909900665283203125p-20] 

; mpf : - 3707625612078514 -20
; mpfd: - 3707625612078514 -20 (-1.73879e-006) class: Neg. norm. non-zero
; hwf : - 3707625612078514 -20 (-1.73879e-006) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111111 #b0100111011001000110011101111110000100010011111011111)))
(assert (= y (fp #b1 #b10001010010 #b0110111100111100110011010010011110001101101111101011)))
(assert (= r (fp #b1 #b01111101011 #b1101001011000001000011011011100100010110110110110010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
