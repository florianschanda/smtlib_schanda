(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.55280612375763471533218762488104403018951416015625p938 {+ 2489617452963012 938 (3.60789e+282)}
; Y = 1.8045988016732927849972156764124520123004913330078125p-412 {+ 3623590863398589 -412 (1.70617e-124)}
; 1.55280612375763471533218762488104403018951416015625p938 / 1.8045988016732927849972156764124520123004913330078125p-412 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101001 #b1000110110000100101100111011111010010001010011000100)))
(assert (= y (fp #b0 #b01001100011 #b1100110111111010001011111110001110010110011010111101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
