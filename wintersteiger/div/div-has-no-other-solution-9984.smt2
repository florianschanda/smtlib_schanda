(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.690666182196086442246496517327614128589630126953125p227 {+ 3110483960775698 227 (3.64642e+068)}
; Y = 1.1762905576151092557068977839662693440914154052734375p233 {+ 793942089584343 233 (1.62369e+070)}
; 1.690666182196086442246496517327614128589630126953125p227 / 1.1762905576151092557068977839662693440914154052734375p233 == 1.4372861970632977435258226250880397856235504150390625p-6
; [HW: 1.4372861970632977435258226250880397856235504150390625p-6] 

; mpf : + 1969361954148529 -6
; mpfd: + 1969361954148529 -6 (0.0224576) class: Pos. norm. non-zero
; hwf : + 1969361954148529 -6 (0.0224576) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011100010 #b1011000011001111011111111011100011111100010000010010)))
(assert (= y (fp #b0 #b10011101000 #b0010110100100001011000001100001110001100111011010111)))
(assert (= r (fp #b0 #b01111111001 #b0110111111110001111111001111101101100001000010110001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
