(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9679255353968496677907751291058957576751708984375p840 {- 4359149080535640 840 (-1.4428e+253)}
; Y = 1.6785946488241176854927516615134663879871368408203125p-705 {+ 3056118607579909 -705 (9.97238e-213)}
; -1.9679255353968496677907751291058957576751708984375p840 / 1.6785946488241176854927516615134663879871368408203125p-705 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000111 #b1111011111001001111101111100011101111110001001011000)))
(assert (= y (fp #b0 #b00100111110 #b1010110110111000011000001111111111110000101100000101)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
