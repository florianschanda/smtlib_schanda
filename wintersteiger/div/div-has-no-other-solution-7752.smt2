(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.153200940372954175217046213219873607158660888671875p-791 {- 689955697976446 -791 (-8.85479e-239)}
; Y = -1.1144196991577677291473946752375923097133636474609375p-234 {- 515300514490767 -234 (-4.03673e-071)}
; -1.153200940372954175217046213219873607158660888671875p-791 / -1.1144196991577677291473946752375923097133636474609375p-234 == 1.0347994936238975594022804216365329921245574951171875p-557
; [HW: 1.0347994936238975594022804216365329921245574951171875p-557] 

; mpf : + 156722986517267 -557
; mpfd: + 156722986517267 -557 (2.19356e-168) class: Pos. norm. non-zero
; hwf : + 156722986517267 -557 (2.19356e-168) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101000 #b0010011100111000001011010100010010011110010001111110)))
(assert (= y (fp #b1 #b01100010101 #b0001110101001010100111000000000111100110100110001111)))
(assert (= r (fp #b0 #b00111010010 #b0000100011101000100111101001111100001000001100010011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
