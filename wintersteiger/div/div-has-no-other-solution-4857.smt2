(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7231632009736852495507264393381774425506591796875p909 {+ 3256837522433144 909 (7.45749e+273)}
; Y = -1.106557367474255926254045334644615650177001953125p-376 {- 479891720450640 -376 (-7.18945e-114)}
; 1.7231632009736852495507264393381774425506591796875p909 / -1.106557367474255926254045334644615650177001953125p-376 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001100 #b1011100100100001001110010011100111011010010001111000)))
(assert (= y (fp #b1 #b01010000111 #b0001101101000111010101111111100001110011001001010000)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
