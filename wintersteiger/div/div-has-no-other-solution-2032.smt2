(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.618342950914362088354891966446302831172943115234375p214 {- 2784769083325094 214 (-4.26079e+064)}
; Y = 1.3589221629598278173745029562269337475299835205078125p88 {+ 1616441719360893 88 (4.20566e+026)}
; -1.618342950914362088354891966446302831172943115234375p214 / 1.3589221629598278173745029562269337475299835205078125p88 == -1.190901874313019970230698163504712283611297607421875p126
; [HW: -1.190901874313019970230698163504712283611297607421875p126] 

; mpf : - 859745610020446 126
; mpfd: - 859745610020446 126 (-1.01311e+038) class: Neg. norm. non-zero
; hwf : - 859745610020446 126 (-1.01311e+038) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010101 #b1001111001001011101110010011111111100011101010100110)))
(assert (= y (fp #b0 #b10001010111 #b0101101111100010010100101010011110111000110101111101)))
(assert (= r (fp #b1 #b10001111101 #b0011000011011110111100011111101011101011011001011110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
