(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8955329947224937026106772464117966592311859130859375p261 {- 4033122061330207 261 (-7.02361e+078)}
; Y = -1.9132225883924558473836441407911479473114013671875p361 {- 4112788908790584 361 (-8.98657e+108)}
; -1.8955329947224937026106772464117966592311859130859375p261 / -1.9132225883924558473836441407911479473114013671875p361 == 1.981508065211768698787864195764996111392974853515625p-101
; [HW: 1.981508065211768698787864195764996111392974853515625p-101] 

; mpf : + 4420319356748858 -101
; mpfd: + 4420319356748858 -101 (7.81567e-031) class: Pos. norm. non-zero
; hwf : + 4420319356748858 -101 (7.81567e-031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000100 #b1110010101000001101001100111110011010010011100011111)))
(assert (= y (fp #b1 #b10101101000 #b1110100111001000111101001001111100011101001100111000)))
(assert (= r (fp #b0 #b01110011010 #b1111101101000100000111001101000011011000010000111010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
