(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.95703853469299904332956430152989923954010009765625p948 {+ 4310118388222596 948 (4.65624e+285)}
; Y = 1.743898418076735623571948963217437267303466796875p-509 {+ 3350220638451888 -509 (1.04053e-153)}
; 1.95703853469299904332956430152989923954010009765625p948 / 1.743898418076735623571948963217437267303466796875p-509 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110011 #b1111010100000000011110100011011110000100101010000100)))
(assert (= y (fp #b0 #b01000000010 #b1011111001110000001000000111000100101111100010110000)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
