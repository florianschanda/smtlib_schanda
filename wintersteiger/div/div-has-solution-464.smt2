(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1804227628009744677228809450753033161163330078125p477 {- 812551887319624 477 (-4.60623e+143)}
; Y = -1.727046107045258960255296187824569642543792724609375p771 {- 3274324576770198 771 (-2.14502e+232)}
; -1.1804227628009744677228809450753033161163330078125p477 / -1.727046107045258960255296187824569642543792724609375p771 == 1.366984654301461876713119636406190693378448486328125p-295
; [HW: 1.366984654301461876713119636406190693378448486328125p-295] 

; mpf : + 1652751952362754 -295
; mpfd: + 1652751952362754 -295 (2.14741e-089) class: Pos. norm. non-zero
; hwf : + 1652751952362754 -295 (2.14741e-089) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011100 #b0010111000110000001011111010100110101111001001001000)))
(assert (= y (fp #b1 #b11100000010 #b1011101000011111101100011001010001110001100010010110)))
(assert (= r (fp #b0 #b01011011000 #b0101110111110010101101001101000001011011110100000010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
