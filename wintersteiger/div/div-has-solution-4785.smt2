(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.525084305765030734391984879039227962493896484375p427 {- 2364769483781488 427 (-5.28569e+128)}
; Y = -1.35437447741899230635453932336531579494476318359375p-444 {- 1595960764453788 -444 (-2.9814e-134)}
; -1.525084305765030734391984879039227962493896484375p427 / -1.35437447741899230635453932336531579494476318359375p-444 == 1.126043299834885491605973584228195250034332275390625p871
; [HW: 1.126043299834885491605973584228195250034332275390625p871] 

; mpf : + 567648558168938 871
; mpfd: + 567648558168938 871 (1.77289e+262) class: Pos. norm. non-zero
; hwf : + 567648558168938 871 (1.77289e+262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110101010 #b1000011001101011111011001101000011100111010101110000)))
(assert (= y (fp #b1 #b01001000011 #b0101101010111000010010010010011100001101001110011100)))
(assert (= r (fp #b0 #b11101100110 #b0010000001000100010111111010101010101011101101101010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
