(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0158746314126412269018828737898729741573333740234375p-232 {- 71492984114615 -232 (-1.47191e-070)}
; Y = 1.577096191849414186236799650941975414752960205078125p819 {+ 2599010194569954 819 (5.51347e+246)}
; -1.0158746314126412269018828737898729741573333740234375p-232 / 1.577096191849414186236799650941975414752960205078125p819 == -0.0000000011998089188836047469521872699260711669921875p-1022
; [HW: -0.0000000011998089188836047469521872699260711669921875p-1022] 

; mpf : - 5403459 -1023
; mpfd: - 5403459 -1023 (-2.66966e-317) class: Neg. denorm.
; hwf : - 5403459 -1023 (-2.66966e-317) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010111 #b0000010000010000010111000001111011000000110110110111)))
(assert (= y (fp #b0 #b11100110010 #b1001001110111100100100110111011010100011101011100010)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000010100100111001101000011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
