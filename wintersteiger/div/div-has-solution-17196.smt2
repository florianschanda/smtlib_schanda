(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0575588461213121238557732795015908777713775634765625p51 {- 259221997943817 51 (-2.38141e+015)}
; Y = 1.897966528068711244969790641334839165210723876953125p-481 {+ 4044081721201426 -481 (3.03991e-145)}
; -1.0575588461213121238557732795015908777713775634765625p51 / 1.897966528068711244969790641334839165210723876953125p-481 == -1.1144125362394439182622818407253362238407135009765625p531
; [HW: -1.1144125362394439182622818407253362238407135009765625p531] 

; mpf : - 515268255574473 531
; mpfd: - 515268255574473 531 (-7.83382e+159) class: Neg. norm. non-zero
; hwf : - 515268255574473 531 (-7.83382e+159) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000110010 #b0000111010111100001011010011000110101111110000001001)))
(assert (= y (fp #b0 #b01000011110 #b1110010111100001001000100110011011110101001100010010)))
(assert (= r (fp #b1 #b11000010010 #b0001110101001010001000111101010101100110100111001001)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
