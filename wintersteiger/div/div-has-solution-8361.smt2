(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.254012208861692290184919329476542770862579345703125p1019 {- 1143969289177074 1019 (-7.04478e+306)}
; Y = 1.3381279161973231861537669828976504504680633544921875p616 {+ 1522792757389827 616 (3.63894e+185)}
; -1.254012208861692290184919329476542770862579345703125p1019 / 1.3381279161973231861537669828976504504680633544921875p616 == -1.8742785255169476243963799788616597652435302734375p402
; [HW: -1.8742785255169476243963799788616597652435302734375p402] 

; mpf : - 3937400441736152 402
; mpfd: - 3937400441736152 402 (-1.93594e+121) class: Neg. norm. non-zero
; hwf : - 3937400441736152 402 (-1.93594e+121) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111010 #b0100000100000110111100011011000111011000011111110010)))
(assert (= y (fp #b0 #b11001100111 #b0101011010001111100011010001010111101110101000000011)))
(assert (= r (fp #b1 #b10110010001 #b1101111111010000101101111010101010110000101111011000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
