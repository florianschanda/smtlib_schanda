(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.867622002484264687183213027310557663440704345703125p-603 {+ 3907422127086578 -603 (5.62602e-182)}
; Y = -1.5558906863205270720840189824230037629604339599609375p-662 {- 2503509087771855 -662 (-8.13059e-200)}
; 1.867622002484264687183213027310557663440704345703125p-603 / -1.5558906863205270720840189824230037629604339599609375p-662 == -1.20035553840928255198150509386323392391204833984375p59
; [HW: -1.20035553840928255198150509386323392391204833984375p59] 

; mpf : - 902321128121660 59
; mpfd: - 902321128121660 59 (-6.91958e+017) class: Neg. norm. non-zero
; hwf : - 902321128121660 59 (-6.91958e+017) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100100 #b1101111000011100011110011011110111110101101111110010)))
(assert (= y (fp #b1 #b00101101001 #b1000111001001110110110100001110111100101110011001111)))
(assert (= r (fp #b1 #b10000111010 #b0011001101001010100000000010010100001010010100111100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
