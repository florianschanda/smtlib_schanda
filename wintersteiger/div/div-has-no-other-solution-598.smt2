(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9559713819529653822115733419195748865604400634765625p382 {- 4305312359540233 382 (-1.92673e+115)}
; Y = -1.94532241459514576575884348130784928798675537109375p213 {- 4257353674115676 213 (-2.56083e+064)}
; -1.9559713819529653822115733419195748865604400634765625p382 / -1.94532241459514576575884348130784928798675537109375p213 == 1.0054741400592128730551166881923563778400421142578125p169
; [HW: 1.0054741400592128730551166881923563778400421142578125p169] 

; mpf : + 24653335130845 169
; mpfd: + 24653335130845 169 (7.52385e+050) class: Pos. norm. non-zero
; hwf : + 24653335130845 169 (7.52385e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111101 #b1111010010111010100010100101110101100110011000001001)))
(assert (= y (fp #b1 #b10011010100 #b1111001000000000101001100101011011011100101001011100)))
(assert (= r (fp #b0 #b10010101000 #b0000000101100110110000001101010010000111001011011101)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
