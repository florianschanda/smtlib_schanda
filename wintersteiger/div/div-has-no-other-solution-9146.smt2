(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.970117420576798394904471933841705322265625p-575 {+ 4369020453815296 -575 (1.59311e-173)}
; Y = 1.5665848081348843212623478393652476370334625244140625p455 {+ 2551671130790049 455 (1.45748e+137)}
; 1.970117420576798394904471933841705322265625p-575 / 1.5665848081348843212623478393652476370334625244140625p455 == 0.00491245104265392029674330842681229114532470703125p-1022
; [HW: 0.00491245104265392029674330842681229114532470703125p-1022] 

; mpf : + 22123712685172 -1023
; mpfd: + 22123712685172 -1023 (1.09306e-310) class: Pos. denorm.
; hwf : + 22123712685172 -1023 (1.09306e-310) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000000 #b1111100001011001100111011000001010101000010000000000)))
(assert (= y (fp #b0 #b10111000110 #b1001000100001011101100111011010101011001100010100001)))
(assert (= r (fp #b0 #b00000000000 #b0000000101000001111100010100000010010010010001110100)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
