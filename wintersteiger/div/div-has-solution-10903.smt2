(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.511090128958283429483344662003219127655029296875p-239 {- 2301745314329264 -239 (-1.71049e-072)}
; Y = 1.940972203798695172594079849659465253353118896484375p-919 {+ 4237762066393798 -919 (4.37979e-277)}
; -1.511090128958283429483344662003219127655029296875p-239 / 1.940972203798695172594079849659465253353118896484375p-919 == -1.557044584153152388950047679827548563480377197265625p679
; [HW: -1.557044584153152388950047679827548563480377197265625p679] 

; mpf : - 2508705781620890 679
; mpfd: - 2508705781620890 679 (-3.90542e+204) class: Neg. norm. non-zero
; hwf : - 2508705781620890 679 (-3.90542e+204) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010000 #b1000001011010110110011010111110100101111001010110000)))
(assert (= y (fp #b0 #b00001101000 #b1111000011100011100011011110100111000010101011000110)))
(assert (= r (fp #b1 #b11010100110 #b1000111010011010011110010100111101011010000010011010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
