(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.272435645902692868958183680661022663116455078125p700 {+ 1226941073369808 700 (6.69318e+210)}
; Y = 1.9796789783181603095130185465677641332149505615234375p349 {+ 4412081881696375 349 (2.2702e+105)}
; 1.272435645902692868958183680661022663116455078125p700 / 1.9796789783181603095130185465677641332149505615234375p349 == 1.2854969516155521080946755319018848240375518798828125p350
; [HW: 1.2854969516155521080946755319018848240375518798828125p350] 

; mpf : + 1285763964911213 350
; mpfd: + 1285763964911213 350 (2.94829e+105) class: Pos. norm. non-zero
; hwf : + 1285763964911213 350 (2.94829e+105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111011 #b0100010110111110010101111010110101101010101011010000)))
(assert (= y (fp #b0 #b10101011100 #b1111101011001100001111011101010001110100100001110111)))
(assert (= r (fp #b0 #b10101011101 #b0100100100010110010101000000011001001011111001101101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
