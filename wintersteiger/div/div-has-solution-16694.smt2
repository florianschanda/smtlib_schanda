(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2436300819480192725308143053553067147731781005859375p934 {- 1097212346277343 934 (-1.80596e+281)}
; Y = -1.129534518800898279522471057134680449962615966796875p-114 {- 583371610603342 -114 (-5.43851e-035)}
; -1.2436300819480192725308143053553067147731781005859375p934 / -1.129534518800898279522471057134680449962615966796875p-114 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110100101 #b0011111001011110100010101000001001001001110111011111)))
(assert (= y (fp #b1 #b01110001101 #b0010000100101001001011001001100111110011111101001110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
