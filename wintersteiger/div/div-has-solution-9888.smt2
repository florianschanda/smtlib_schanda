(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.677381493587453586968649688060395419597625732421875p-177 {+ 3050655042108126 -177 (8.75634e-054)}
; Y = 1.5888998114382724136106617152108810842037200927734375p655 {+ 2652168971351959 655 (2.37544e+197)}
; 1.677381493587453586968649688060395419597625732421875p-177 / 1.5888998114382724136106617152108810842037200927734375p655 == 1.05568738916841287078796085552312433719635009765625p-832
; [HW: 1.05568738916841287078796085552312433719635009765625p-832] 

; mpf : + 250793705108100 -832
; mpfd: + 250793705108100 -832 (3.6862e-251) class: Pos. norm. non-zero
; hwf : + 250793705108100 -832 (3.6862e-251) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001110 #b1010110101101000110111111010000111011111101011011110)))
(assert (= y (fp #b0 #b11010001110 #b1001011011000010001000110101011010111111011110010111)))
(assert (= r (fp #b0 #b00010111111 #b0000111001000001100001110101101101000111001010000100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
