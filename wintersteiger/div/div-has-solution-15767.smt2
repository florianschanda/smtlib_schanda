(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6179358127027911873341281534521840512752532958984375p-115 {+ 2782935495827175 -115 (3.89504e-035)}
; Y = -1.54617790314500336279479597578756511211395263671875p-952 {- 2459766601081836 -952 (-4.06166e-287)}
; 1.6179358127027911873341281534521840512752532958984375p-115 / -1.54617790314500336279479597578756511211395263671875p-952 == -1.0464098661685881097582750953733921051025390625p837
; [HW: -1.0464098661685881097582750953733921051025390625p837] 

; mpf : - 209011455983168 837
; mpfd: - 209011455983168 837 (-9.58977e+251) class: Neg. norm. non-zero
; hwf : - 209011455983168 837 (-9.58977e+251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110001100 #b1001111000110001000010101001101010010101111011100111)))
(assert (= y (fp #b1 #b00001000111 #b1000101111010010010100001010011111001110001111101100)))
(assert (= r (fp #b1 #b11101000100 #b0000101111100001100001000101100101100111111001000000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
