(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0987851836879183320405672930064611136913299560546875p545 {- 444888916446635 545 (-1.26549e+164)}
; Y = 1.0916133921114161697829558761441148817539215087890625p-333 {+ 412590038575121 -333 (6.2385e-101)}
; -1.0987851836879183320405672930064611136913299560546875p545 / 1.0916133921114161697829558761441148817539215087890625p-333 == -1.006569900688585761372451088391244411468505859375p878
; [HW: -1.006569900688585761372451088391244411468505859375p878] 

; mpf : - 29588202292976 878
; mpfd: - 29588202292976 878 (-2.02852e+264) class: Neg. norm. non-zero
; hwf : - 29588202292976 878 (-2.02852e+264) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100000 #b0001100101001001111111000101110101000100110110101011)))
(assert (= y (fp #b0 #b01010110010 #b0001011101110011111110011010101011111110100000010001)))
(assert (= r (fp #b1 #b11101101101 #b0000000110101110100100001010010010011000011011110000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
