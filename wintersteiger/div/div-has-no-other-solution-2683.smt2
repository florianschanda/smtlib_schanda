(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.753175622694430391135256286361254751682281494140625p441 {+ 3392001453711178 441 (9.95528e+132)}
; Y = 1.542709848952373619113132008351385593414306640625p-408 {+ 2444147873512208 -408 (2.33371e-123)}
; 1.753175622694430391135256286361254751682281494140625p441 / 1.542709848952373619113132008351385593414306640625p-408 == 1.1364260258563725347613626581733115017414093017578125p849
; [HW: 1.1364260258563725347613626581733115017414093017578125p849] 

; mpf : + 614408199210397 849
; mpfd: + 614408199210397 849 (4.26587e+255) class: Pos. norm. non-zero
; hwf : + 614408199210397 849 (4.26587e+255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111000 #b1100000011010000000111100001101110011101111101001010)))
(assert (= y (fp #b0 #b01001100111 #b1000101011101111000010000101110001110111101100010000)))
(assert (= r (fp #b0 #b11101010000 #b0010001011101100110100001110011101100000010110011101)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
