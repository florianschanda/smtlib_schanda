(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.369821049725760797599605211871676146984100341796875p397 {+ 1665525941738702 397 (4.42153e+119)}
; Y = -1.578062440628282825372252773377113044261932373046875p-68 {- 2603361792210414 -68 (-5.34668e-021)}
; 1.369821049725760797599605211871676146984100341796875p397 / -1.578062440628282825372252773377113044261932373046875p-68 == -1.7360796562402007747749621557886712253093719482421875p464
; [HW: -1.7360796562402007747749621557886712253093719482421875p464] 

; mpf : - 3315008065558371 464
; mpfd: - 3315008065558371 464 (-8.26966e+139) class: Neg. norm. non-zero
; hwf : - 3315008065558371 464 (-8.26966e+139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110001100 #b0101111010101100100101111010000111110001110011001110)))
(assert (= y (fp #b1 #b01110111011 #b1001001111111011111001100110110110001011010111101110)))
(assert (= r (fp #b1 #b10111001111 #b1011110001101111101101110110001011001101011101100011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
