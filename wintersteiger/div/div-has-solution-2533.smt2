(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0596689518829183196402254907297901809215545654296875p-655 {+ 268725069465499 -655 (7.08799e-198)}
; Y = -1.445288588474197499778028941364027559757232666015625p152 {- 2005401521124730 152 (-8.25114e+045)}
; 1.0596689518829183196402254907297901809215545654296875p-655 / -1.445288588474197499778028941364027559757232666015625p152 == -1.466376971815184671044107744819484651088714599609375p-808
; [HW: -1.466376971815184671044107744819484651088714599609375p-808] 

; mpf : - 2100375156481046 -808
; mpfd: - 2100375156481046 -808 (-8.59032e-244) class: Neg. norm. non-zero
; hwf : - 2100375156481046 -808 (-8.59032e-244) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110000 #b0000111101000110011101101110010011101100011110011011)))
(assert (= y (fp #b1 #b10010010111 #b0111000111111110011011101101010011000111010101111010)))
(assert (= r (fp #b1 #b00011010111 #b0111011101100100011110110011000110001101110000010110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
