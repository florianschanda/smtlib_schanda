(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.168737265319309326372376744984649121761322021484375p511 {- 759925085215558 511 (-7.8351e+153)}
; Y = -1.08693284289649483298489940352737903594970703125p-970 {- 391510718874912 -970 (-1.0892e-292)}
; -1.168737265319309326372376744984649121761322021484375p511 / -1.08693284289649483298489940352737903594970703125p-970 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111111110 #b0010101100110010010111011000110000101001101101000110)))
(assert (= y (fp #b1 #b00000110101 #b0001011001000001001110110001010100110000010100100000)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
