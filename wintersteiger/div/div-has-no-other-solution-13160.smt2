(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.619265266527528890350140500231646001338958740234375p-207 {+ 2788922823576870 -207 (7.87243e-063)}
; Y = -1.944254386032886028345956219709478318691253662109375p-207 {- 4252543701080662 -207 (-9.45244e-063)}
; 1.619265266527528890350140500231646001338958740234375p-207 / -1.944254386032886028345956219709478318691253662109375p-207 == -1.6656928004483255723044976548408158123493194580078125p-1
; [HW: -1.6656928004483255723044976548408158123493194580078125p-1] 

; mpf : - 2998013848042301 -1
; mpfd: - 2998013848042301 -1 (-0.832846) class: Neg. norm. non-zero
; hwf : - 2998013848042301 -1 (-0.832846) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100110000 #b1001111010001000001010110010001101001000110100100110)))
(assert (= y (fp #b1 #b01100110000 #b1111000110111010101001111100101100011101101001010110)))
(assert (= r (fp #b1 #b01111111110 #b1010101001101010110101111110011100011011101100111101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
