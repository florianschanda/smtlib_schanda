(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1311473747264191302974722930230200290679931640625p-172 {- 590635267948520 -172 (-1.88956e-052)}
; Y = -1.97673735290834695632611328619532287120819091796875p-168 {- 4398833978596876 -168 (-5.28335e-051)}
; -1.1311473747264191302974722930230200290679931640625p-172 / -1.97673735290834695632611328619532287120819091796875p-168 == 1.1444589470241732787059163456433452665805816650390625p-5
; [HW: 1.1444589470241732787059163456433452665805816650390625p-5] 

; mpf : + 650585259988401 -5
; mpfd: + 650585259988401 -5 (0.0357643) class: Pos. norm. non-zero
; hwf : + 650585259988401 -5 (0.0357643) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101010011 #b0010000110010010110111111101010101100111111111101000)))
(assert (= y (fp #b1 #b01101010111 #b1111101000001011011101011000101110000101111000001100)))
(assert (= r (fp #b0 #b01111111010 #b0010010011111011010000101111010100010101010110110001)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
