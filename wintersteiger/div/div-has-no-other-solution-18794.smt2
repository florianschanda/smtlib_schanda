(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.319347266976701238405667027109302580356597900390625p914 {+ 1438212232558058 914 (1.82715e+275)}
; Y = 1.647880351092570361259959099697880446910858154296875p1010 {+ 2917793707761166 1010 (1.8081e+304)}
; 1.319347266976701238405667027109302580356597900390625p914 / 1.647880351092570361259959099697880446910858154296875p1010 == 1.6012658517372979627424456339213065803050994873046875p-97
; [HW: 1.6012658517372979627424456339213065803050994873046875p-97] 

; mpf : + 2707860665834699 -97
; mpfd: + 2707860665834699 -97 (1.01054e-029) class: Pos. norm. non-zero
; hwf : + 2707860665834699 -97 (1.01054e-029) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110010001 #b0101000111000000101111100001001110111011010111101010)))
(assert (= y (fp #b0 #b11111110001 #b1010010111011011011111001001011110101001111000001110)))
(assert (= r (fp #b0 #b01110011110 #b1001100111101100100011110001000101101001110011001011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
