(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.133044818455655633471224064123816788196563720703125p894 {- 599180594820466 894 (-1.49645e+269)}
; Y = -1.26229763700160990680387840257026255130767822265625p500 {- 1181283540260612 500 (-4.13199e+150)}
; -1.133044818455655633471224064123816788196563720703125p894 / -1.26229763700160990680387840257026255130767822265625p500 == 1.7952102344848335224725133230094797909259796142578125p393
; [HW: 1.7952102344848335224725133230094797909259796142578125p393] 

; mpf : + 3581308515707101 393
; mpfd: + 3581308515707101 393 (3.62163e+118) class: Pos. norm. non-zero
; hwf : + 3581308515707101 393 (3.62163e+118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111101 #b0010001000001111001110011010100000101011010101110010)))
(assert (= y (fp #b1 #b10111110011 #b0100001100100101111100000001110010111101011100000100)))
(assert (= r (fp #b0 #b10110001000 #b1100101110010010111001011101111010001110100011011101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
