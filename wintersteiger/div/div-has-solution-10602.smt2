(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5581520075773049871514785991166718304157257080078125p-182 {- 2513693173341245 -182 (-2.54185e-055)}
; Y = 1.18864806847530513067567881080321967601776123046875p-252 {+ 849595370889548 -252 (1.64246e-076)}
; -1.5581520075773049871514785991166718304157257080078125p-182 / 1.18864806847530513067567881080321967601776123046875p-252 == -1.3108606734842613850133830055710859596729278564453125p70
; [HW: -1.3108606734842613850133830055710859596729278564453125p70] 

; mpf : - 1399992013267861 70
; mpfd: - 1399992013267861 70 (-1.54759e+021) class: Neg. norm. non-zero
; hwf : - 1399992013267861 70 (-1.54759e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001001 #b1000111011100011000011001100101010111101110000111101)))
(assert (= y (fp #b0 #b01100000011 #b0011000001001011001111010110010010001110000101001100)))
(assert (= r (fp #b1 #b10001000101 #b0100111110010100100100001010101000111010001110010101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
