(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7539746770884363513687276281416416168212890625p-714 {+ 3395600074782272 -714 (2.0352e-215)}
; Y = -1.5369905011800997218784914366551674902439117431640625p-19 {- 2418390221016193 -19 (-2.93158e-006)}
; 1.7539746770884363513687276281416416168212890625p-714 / -1.5369905011800997218784914366551674902439117431640625p-19 == -1.14117470195276826672170500387437641620635986328125p-695
; [HW: -1.14117470195276826672170500387437641620635986328125p-695] 

; mpf : - 635794335108628 -695
; mpfd: - 635794335108628 -695 (-6.94233e-210) class: Neg. norm. non-zero
; hwf : - 635794335108628 -695 (-6.94233e-210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110101 #b1100000100000100011111000000010000011011011001000000)))
(assert (= y (fp #b1 #b01111101100 #b1000100101111000001101011010000011010100110010000001)))
(assert (= r (fp #b1 #b00101001000 #b0010010000100100000001100111011111101000111000010100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
