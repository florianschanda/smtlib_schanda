(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6045271278769870360036975398543290793895721435546875p322 {- 2722548147842155 322 (-1.3709e+097)}
; Y = -1.7825893104352747986496297016856260597705841064453125p553 {- 3524468926860437 553 (-5.2558e+166)}
; -1.6045271278769870360036975398543290793895721435546875p322 / -1.7825893104352747986496297016856260597705841064453125p553 == 1.800220744603468592259787328657694160938262939453125p-232
; [HW: 1.800220744603468592259787328657694160938262939453125p-232] 

; mpf : + 3603873847210322 -232
; mpfd: + 3603873847210322 -232 (2.60836e-070) class: Pos. norm. non-zero
; hwf : + 3603873847210322 -232 (2.60836e-070) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101000001 #b1001101011000010010010100011001111000110110001101011)))
(assert (= y (fp #b1 #b11000101000 #b1100100001010111110001011110011010000100110010010101)))
(assert (= r (fp #b0 #b01100010111 #b1100110011011011010001000100011110100111000101010010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
