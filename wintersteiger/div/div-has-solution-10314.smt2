(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5892169368534154738625829850207082927227020263671875p-340 {+ 2653597177253427 -340 (7.09553e-103)}
; Y = 1.0346301692295643004371186179923824965953826904296875p552 {+ 155960417238043 552 (1.52526e+166)}
; 1.5892169368534154738625829850207082927227020263671875p-340 / 1.0346301692295643004371186179923824965953826904296875p552 == 1.536024160243484093513188781798817217350006103515625p-892
; [HW: 1.536024160243484093513188781798817217350006103515625p-892] 

; mpf : + 2414038208334138 -892
; mpfd: + 2414038208334138 -892 (4.65202e-269) class: Pos. norm. non-zero
; hwf : + 2414038208334138 -892 (4.65202e-269) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101011 #b1001011011010110111010111101001000001000111000110011)))
(assert (= y (fp #b0 #b11000100111 #b0000100011011101100001011101010001001011110000011011)))
(assert (= r (fp #b0 #b00010000011 #b1000100100111000111000010001111000011100100100111010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
