(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3998590347147850110332001349888741970062255859375p-772 {+ 1800804999742232 -772 (5.63544e-233)}
; Y = 1.101442104235586416649539387435652315616607666015625p-111 {+ 456854622835066 -111 (4.2426e-034)}
; 1.3998590347147850110332001349888741970062255859375p-772 / 1.101442104235586416649539387435652315616607666015625p-111 == 1.27093292451018413657948258332908153533935546875p-661
; [HW: 1.27093292451018413657948258332908153533935546875p-661] 

; mpf : + 1220173417866464 -661
; mpfd: + 1220173417866464 -661 (1.3283e-199) class: Pos. norm. non-zero
; hwf : + 1220173417866464 -661 (1.3283e-199) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111011 #b0110011001011101001010010110010100011100001100011000)))
(assert (= y (fp #b0 #b01110010000 #b0001100111111000000111000001100000100001000101111010)))
(assert (= r (fp #b0 #b00101101010 #b0100010101011011110111000011001000101110010011100000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
