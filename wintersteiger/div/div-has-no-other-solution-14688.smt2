(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.59475839592402479638622025959193706512451171875p-401 {- 2678553690258912 -401 (-3.08792e-121)}
; Y = -1.80538238846338483511999584152363240718841552734375p-486 {- 3627119824574460 -486 (-9.03631e-147)}
; -1.59475839592402479638622025959193706512451171875p-401 / -1.80538238846338483511999584152363240718841552734375p-486 == 1.76667104555215193073536283918656408786773681640625p84
; [HW: 1.76667104555215193073536283918656408786773681640625p84] 

; mpf : + 3452779435064420 84
; mpfd: + 3452779435064420 84 (3.41724e+025) class: Pos. norm. non-zero
; hwf : + 3452779435064420 84 (3.41724e+025) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101110 #b1001100001000010000101100001001110000011110111100000)))
(assert (= y (fp #b1 #b01000011001 #b1100111000101101100010100100101100111001011111111100)))
(assert (= r (fp #b0 #b10001010011 #b1100010001000100100011011011101101101111110001100100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
