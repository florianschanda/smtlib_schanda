(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.69299612568635726717047873535193502902984619140625p-823 {+ 3120977093410276 -823 (3.0267e-248)}
; Y = 1.315027068552186317873520238208584487438201904296875p206 {+ 1418755788543246 206 (1.35243e+062)}
; 1.69299612568635726717047873535193502902984619140625p-823 / 1.315027068552186317873520238208584487438201904296875p206 == 0.0100579923776675794755419701687060296535491943359375p-1022
; [HW: 0.0100579923776675794755419701687060296535491943359375p-1022] 

; mpf : + 45297170724159 -1023
; mpfd: + 45297170724159 -1023 (2.23798e-310) class: Pos. denorm.
; hwf : + 45297170724159 -1023 (2.23798e-310) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001000 #b1011000101101000001100011011000000010011110111100100)))
(assert (= y (fp #b0 #b10011001101 #b0101000010100101100111010010110011001001010100001110)))
(assert (= r (fp #b0 #b00000000000 #b0000001010010011001010010001110001010011010100111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
