(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.59842808354140775151108755380846560001373291015625p128 {+ 2695080494045124 128 (5.43917e+038)}
; Y = -1.231414668118379740491263873991556465625762939453125p923 {- 1042199013106002 923 (-8.73153e+277)}
; 1.59842808354140775151108755380846560001373291015625p128 / -1.231414668118379740491263873991556465625762939453125p923 == -1.29804210143430420743015929474495351314544677734375p-795
; [HW: -1.29804210143430420743015929474495351314544677734375p-795] 

; mpf : - 1342262296960252 -795
; mpfd: - 1342262296960252 -795 (-6.22934e-240) class: Neg. norm. non-zero
; hwf : - 1342262296960252 -795 (-6.22934e-240) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111111 #b1001100100110010100101010011011111010001011111000100)))
(assert (= y (fp #b1 #b11110011010 #b0011101100111101111111011101111101100010000101010010)))
(assert (= r (fp #b1 #b00011100100 #b0100110001001100011111001011011001111101110011111100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
