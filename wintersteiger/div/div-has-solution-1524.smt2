(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1732583889494208051473833620548248291015625p203 {- 780286415911424 203 (-1.50828e+061)}
; Y = 1.5666611507468537478615644431556575000286102294921875p640 {+ 2552014947348867 640 (7.1478e+192)}
; -1.1732583889494208051473833620548248291015625p203 / 1.5666611507468537478615644431556575000286102294921875p640 == -1.4977819401344174554679966604453511536121368408203125p-438
; [HW: -1.4977819401344174554679966604453511536121368408203125p-438] 

; mpf : - 2241810560101125 -438
; mpfd: - 2241810560101125 -438 (-2.11014e-132) class: Neg. norm. non-zero
; hwf : - 2241810560101125 -438 (-2.11014e-132) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001010 #b0010110001011010101010010110101001001011101000000000)))
(assert (= y (fp #b0 #b11001111111 #b1001000100010000101101001000011001011111000110000011)))
(assert (= r (fp #b1 #b01001001001 #b0111111101101110101000110010000101101010101100000101)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
