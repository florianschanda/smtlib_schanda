(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.40109745412463038150008287630043923854827880859375p425 {- 1806382344934940 425 (-1.21399e+128)}
; Y = 1.59419482432167303187497964245267212390899658203125p361 {+ 2676015589400564 361 (7.48807e+108)}
; -1.40109745412463038150008287630043923854827880859375p425 / 1.59419482432167303187497964245267212390899658203125p361 == -1.7577493449971457462055468567996285855770111083984375p63
; [HW: -1.7577493449971457462055468567996285855770111083984375p63] 

; mpf : - 3412599667769383 63
; mpfd: - 3412599667769383 63 (-1.62124e+019) class: Neg. norm. non-zero
; hwf : - 3412599667769383 63 (-1.62124e+019) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110101000 #b0110011010101110010100101001111111111001011000011100)))
(assert (= y (fp #b0 #b10101101000 #b1001100000011101001001101110100111101001111111110100)))
(assert (= r (fp #b1 #b10000111110 #b1100000111111011110111000110111101010100000000100111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
