(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0764343524845128019507001226884312927722930908203125p-580 {+ 344229721367557 -580 (2.72013e-175)}
; Y = -1.94831349736307313236238769604824483394622802734375p-881 {- 4270824313354748 -881 (-1.20846e-265)}
; 1.0764343524845128019507001226884312927722930908203125p-580 / -1.94831349736307313236238769604824483394622802734375p-881 == -1.104990910283589311546847966383211314678192138671875p300
; [HW: -1.104990910283589311546847966383211314678192138671875p300] 

; mpf : - 472837024430462 300
; mpfd: - 472837024430462 300 (-2.25091e+090) class: Neg. norm. non-zero
; hwf : - 472837024430462 300 (-2.25091e+090) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111011 #b0001001110010001001100111010010000110110010000000101)))
(assert (= y (fp #b1 #b00010001110 #b1111001011000100101011000110000110000111100111111100)))
(assert (= r (fp #b1 #b10100101011 #b0001101011100000101011110010111000001011100101111110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
