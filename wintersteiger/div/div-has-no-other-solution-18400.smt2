(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1152941935617821656023807008750736713409423828125p559 {- 519238887162824 559 (-2.10454e+168)}
; Y = 1.34784743723911493162859187577851116657257080078125p283 {+ 1566565588731860 283 (2.09474e+085)}
; -1.1152941935617821656023807008750736713409423828125p559 / 1.34784743723911493162859187577851116657257080078125p283 == -1.654926459401537375271118435193784534931182861328125p275
; [HW: -1.654926459401537375271118435193784534931182861328125p275] 

; mpf : - 2949526558515842 275
; mpfd: - 2949526558515842 275 (-1.00468e+083) class: Neg. norm. non-zero
; hwf : - 2949526558515842 275 (-1.00468e+083) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101110 #b0001110110000011111010111001011011000100001111001000)))
(assert (= y (fp #b0 #b10100011010 #b0101100100001100100001111001011011110000011111010100)))
(assert (= r (fp #b1 #b10100010010 #b1010011110101001010000101010110001101010001010000010)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
