(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5062364694891241523322378270677290856838226318359375p268 {- 2279886375352575 268 (-7.14384e+080)}
; Y = -1.442789292132545586611058752168901264667510986328125p-603 {- 1994145691051778 -603 (-4.34626e-182)}
; -1.5062364694891241523322378270677290856838226318359375p268 / -1.442789292132545586611058752168901264667510986328125p-603 == 1.043975359189697638129246115568093955516815185546875p871
; [HW: 1.043975359189697638129246115568093955516815185546875p871] 

; mpf : + 198047411260206 871
; mpfd: + 198047411260206 871 (1.64368e+262) class: Pos. norm. non-zero
; hwf : + 198047411260206 871 (1.64368e+262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001011 #b1000000110011000101101101001100001111111100011111111)))
(assert (= y (fp #b1 #b00110100100 #b0111000101011010101000111001100010111010011100000010)))
(assert (= r (fp #b0 #b11101100110 #b0000101101000001111110000001100110001100101100101110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
