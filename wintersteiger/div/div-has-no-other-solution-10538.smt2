(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4959250826922187993517354698269627988338470458984375p-111 {+ 2233448017616359 -111 (5.76209e-034)}
; Y = -1.65657946812016287907454170635901391506195068359375p750 {- 2956971047965084 750 (-9.8109e+225)}
; 1.4959250826922187993517354698269627988338470458984375p-111 / -1.65657946812016287907454170635901391506195068359375p750 == -1.8060408347204133239216616857447661459445953369140625p-862
; [HW: -1.8060408347204133239216616857447661459445953369140625p-862] 

; mpf : - 3630085202892257 -862
; mpfd: - 3630085202892257 -862 (-5.87315e-260) class: Neg. norm. non-zero
; hwf : - 3630085202892257 -862 (-5.87315e-260) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010000 #b0111111011110100111100100011101101101101110111100111)))
(assert (= y (fp #b1 #b11011101101 #b1010100000010101100101111000111011001101000110011100)))
(assert (= r (fp #b1 #b00010100001 #b1100111001011000101100010011000001011101010111100001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
