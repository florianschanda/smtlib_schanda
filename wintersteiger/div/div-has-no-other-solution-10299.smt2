(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.02947241129225997013918458833359181880950927734375p-656 {+ 132731940513532 -656 (3.443e-198)}
; Y = 1.5734692239416518955152923808782361447811126708984375p-364 {+ 2582675783252071 -364 (4.18736e-110)}
; 1.02947241129225997013918458833359181880950927734375p-656 / 1.5734692239416518955152923808782361447811126708984375p-364 == 1.30853835032547838324035183177329599857330322265625p-293
; [HW: 1.30853835032547838324035183177329599857330322265625p-293] 

; mpf : + 1389533199555332 -293
; mpfd: + 1389533199555332 -293 (8.22238e-089) class: Pos. norm. non-zero
; hwf : + 1389533199555332 -293 (8.22238e-089) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101111 #b0000011110001011100000010000001010100010011011111100)))
(assert (= y (fp #b0 #b01010010011 #b1001001011001110111000010000101000010111100001100111)))
(assert (= r (fp #b0 #b01011011010 #b0100111011111100010111101000110000110101101100000100)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
