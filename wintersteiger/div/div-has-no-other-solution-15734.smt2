(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.279615719733590228912589736864902079105377197265625p-163 {- 1259277251199130 -163 (-1.09444e-049)}
; Y = -1.812628113747895231000484272954054176807403564453125p-594 {- 3659751670265810 -594 (-2.7957e-179)}
; -1.279615719733590228912589736864902079105377197265625p-163 / -1.812628113747895231000484272954054176807403564453125p-594 == 1.4118899624565377504126217900193296372890472412109375p430
; [HW: 1.4118899624565377504126217900193296372890472412109375p430] 

; mpf : + 1854987481436911 430
; mpfd: + 1854987481436911 430 (3.9147e+129) class: Pos. norm. non-zero
; hwf : + 1854987481436911 430 (3.9147e+129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101011100 #b0100011110010100111001010101001110110100000010011010)))
(assert (= y (fp #b1 #b00110101101 #b1101000000001000011001010110010001011011011111010010)))
(assert (= r (fp #b0 #b10110101101 #b0110100101110001100111101101111001001101001011101111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
