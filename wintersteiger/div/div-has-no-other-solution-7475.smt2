(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6642305710834277565624006456346251070499420166015625p138 {- 2991428552419417 138 (-5.799e+041)}
; Y = 1.97108461892634867496099104755558073520660400390625p705 {+ 4373376327941924 705 (3.31782e+212)}
; -1.6642305710834277565624006456346251070499420166015625p138 / 1.97108461892634867496099104755558073520660400390625p705 == -1.688644470261186025794586385018192231655120849609375p-568
; [HW: -1.688644470261186025794586385018192231655120849609375p-568] 

; mpf : - 3101378979659030 -568
; mpfd: - 3101378979659030 -568 (-1.74784e-171) class: Neg. norm. non-zero
; hwf : - 3101378979659030 -568 (-1.74784e-171) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001001 #b1010101000001011000000111100001111001110100001011001)))
(assert (= y (fp #b0 #b11011000000 #b1111100010011001000000000110011111101111111100100100)))
(assert (= r (fp #b1 #b00111000111 #b1011000001001011000000010000011001010111110100010110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
