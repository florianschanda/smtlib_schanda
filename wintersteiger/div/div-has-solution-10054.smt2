(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8779925596155415679078259927337057888507843017578125p-340 {- 3954126964318621 -340 (-8.38485e-103)}
; Y = -1.595636440534125011225796697544865310192108154296875p-846 {- 2682508051637774 -846 (-3.40062e-255)}
; -1.8779925596155415679078259927337057888507843017578125p-340 / -1.595636440534125011225796697544865310192108154296875p-846 == 1.176955170932860283983245608396828174591064453125p506
; [HW: 1.176955170932860283983245608396828174591064453125p506] 

; mpf : + 796935241874512 506
; mpfd: + 796935241874512 506 (2.46569e+152) class: Pos. norm. non-zero
; hwf : + 796935241874512 506 (2.46569e+152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101011 #b1110000011000100000111101101000110101110000110011101)))
(assert (= y (fp #b1 #b00010110001 #b1001100001111011101000010011100001100110011000001110)))
(assert (= r (fp #b0 #b10111111001 #b0010110101001100111011110010000000000011110001010000)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
