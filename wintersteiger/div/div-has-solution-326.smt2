(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4222460021263600982166508401860482990741729736328125p-680 {- 1901626937834957 -680 (-2.83516e-205)}
; Y = 1.7909258841682216267798821718315593898296356201171875p-394 {+ 3562013517217683 -394 (4.43874e-119)}
; -1.4222460021263600982166508401860482990741729736328125p-680 / 1.7909258841682216267798821718315593898296356201171875p-394 == -1.5882801345371235779424523570924066007137298583984375p-287
; [HW: -1.5882801345371235779424523570924066007137298583984375p-287] 

; mpf : - 2649378194690855 -287
; mpfd: - 2649378194690855 -287 (-6.38732e-087) class: Neg. norm. non-zero
; hwf : - 2649378194690855 -287 (-6.38732e-087) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101010111 #b0110110000011000010100000110000111111111110111001101)))
(assert (= y (fp #b0 #b01001110101 #b1100101001111010000111100110011000001111111110010011)))
(assert (= r (fp #b1 #b01011100000 #b1001011010011001100001101110001010111001001100100111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
