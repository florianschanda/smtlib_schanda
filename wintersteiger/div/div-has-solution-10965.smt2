(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5748045479594880990958927213796414434909820556640625p-756 {+ 2588689548001217 -756 (4.1548e-228)}
; Y = 0.7459342731280056426612645736895501613616943359375p-1022 {+ 3359389314502168 -1023 (1.65976e-308)}
; 1.5748045479594880990958927213796414434909820556640625p-756 / 0.7459342731280056426612645736895501613616943359375p-1022 == 1.0555920304852681734786301603890024125576019287109375p267
; [HW: 1.0555920304852681734786301603890024125576019287109375p267] 

; mpf : + 250364247778223 267
; mpfd: + 250364247778223 267 (2.50325e+080) class: Pos. norm. non-zero
; hwf : + 250364247778223 267 (2.50325e+080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001011 #b1001001100100110011001000000111100010011111111000001)))
(assert (= y (fp #b0 #b00000000000 #b1011111011110101100011000110110000001100111000011000)))
(assert (= r (fp #b0 #b10100001010 #b0000111000111011010001111000000011011010001110101111)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
