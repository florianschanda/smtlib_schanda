(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.819833788500132332188741202116943895816802978515625p549 {+ 3692203144394938 549 (3.35351e+165)}
; Y = 1.84096972268773573233602292020805180072784423828125p12 {+ 3787390929726356 12 (7540.61)}
; 1.819833788500132332188741202116943895816802978515625p549 / 1.84096972268773573233602292020805180072784423828125p12 == 1.977038259861497504488170307013206183910369873046875p536
; [HW: 1.977038259861497504488170307013206183910369873046875p536] 

; mpf : + 4400189143038958 536
; mpfd: + 4400189143038958 536 (4.44726e+161) class: Pos. norm. non-zero
; hwf : + 4400189143038958 536 (4.44726e+161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100100 #b1101000111100000101000001000110111000011100010111010)))
(assert (= y (fp #b0 #b10000001011 #b1101011101001001110010101010111111011110101110010100)))
(assert (= r (fp #b0 #b11000010111 #b1111101000011111001011011110110100001011101111101110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
