(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9940460593027589109027530867024324834346771240234375p106 {- 4476785462265015 106 (-1.61776e+032)}
; Y = 1.276896860247607179417173028923571109771728515625p-839 {+ 1247032596631184 -839 (3.48329e-253)}
; -1.9940460593027589109027530867024324834346771240234375p106 / 1.276896860247607179417173028923571109771728515625p-839 == -1.5616343977195519254763667049701325595378875732421875p945
; [HW: -1.5616343977195519254763667049701325595378875732421875p945] 

; mpf : - 2529376464288227 945
; mpfd: - 2529376464288227 945 (-4.64435e+284) class: Neg. norm. non-zero
; hwf : - 2529376464288227 945 (-4.64435e+284) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101001 #b1111111001111001110011010111001101101100010010110111)))
(assert (= y (fp #b0 #b00010111000 #b0100011011100010101101100110111100100000111010010000)))
(assert (= r (fp #b1 #b11110110000 #b1000111111000111010001011001101010000011100111100011)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
