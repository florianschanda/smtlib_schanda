(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.40622705210684717513913710718043148517608642578125p613 {- 1829484000496212 613 (-4.78016e+184)}
; Y = -1.864840983296928822454674445907585322856903076171875p277 {- 3894897530110782 277 (-4.52846e+083)}
; -1.40622705210684717513913710718043148517608642578125p613 / -1.864840983296928822454674445907585322856903076171875p277 == 1.508146876545710224348795236437581479549407958984375p335
; [HW: 1.508146876545710224348795236437581479549407958984375p335] 

; mpf : + 2288490083860742 335
; mpfd: + 2288490083860742 335 (1.05558e+101) class: Pos. norm. non-zero
; hwf : + 2288490083860742 335 (1.05558e+101) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100100 #b0110011111111110011111101111111110001100101001010100)))
(assert (= y (fp #b1 #b10100010100 #b1101110101100110001101111111101110000000001100111110)))
(assert (= r (fp #b0 #b10101001110 #b1000001000010101111010011110100001010100000100000110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
