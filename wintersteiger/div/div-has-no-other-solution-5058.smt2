(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.63499337592914439909463908406905829906463623046875p169 {- 2859755931217228 169 (-1.22345e+051)}
; Y = 0.618038273145142369457971653901040554046630859375p-1022 {+ 2783396936637168 -1023 (1.37518e-308)}
; -1.63499337592914439909463908406905829906463623046875p169 / 0.618038273145142369457971653901040554046630859375p-1022 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010101000 #b1010001010001110111011010000011011001010110101001100)))
(assert (= y (fp #b0 #b00000000000 #b1001111000110111110000011001101011010101101011110000)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
