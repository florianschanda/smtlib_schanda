(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7257009871658486321877035152283497154712677001953125p71 {+ 3268266695382517 71 (4.0747e+021)}
; Y = -1.1925386276589737821751668889191932976245880126953125p316 {- 867116891779381 316 (-1.59203e+095)}
; 1.7257009871658486321877035152283497154712677001953125p71 / -1.1925386276589737821751668889191932976245880126953125p316 == -1.4470818362953201674514502883539535105228424072265625p-245
; [HW: -1.4470818362953201674514502883539535105228424072265625p-245] 

; mpf : - 2013477591343721 -245
; mpfd: - 2013477591343721 -245 (-2.55944e-074) class: Neg. norm. non-zero
; hwf : - 2013477591343721 -245 (-2.55944e-074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000110 #b1011100111000111100010100011011010001101010111110101)))
(assert (= y (fp #b1 #b10100111011 #b0011000101001010001101100010010100000011000100110101)))
(assert (= r (fp #b1 #b01100001010 #b0111001001110011111101001000100110000110001001101001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
