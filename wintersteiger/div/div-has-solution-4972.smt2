(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6391077185286102579908629195415414869785308837890625p89 {+ 2878285283015057 89 (1.01456e+027)}
; Y = -1.647576308125730637499373187893070280551910400390625p25 {- 2916424419969002 25 (-5.52835e+007)}
; 1.6391077185286102579908629195415414869785308837890625p89 / -1.647576308125730637499373187893070280551910400390625p25 == -1.989719942493280768758268095552921295166015625p63
; [HW: -1.989719942493280768758268095552921295166015625p63] 

; mpf : - 4457302364213888 63
; mpfd: - 4457302364213888 63 (-1.83519e+019) class: Neg. norm. non-zero
; hwf : - 4457302364213888 63 (-1.83519e+019) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011000 #b1010001110011100100100000011110110110011100110010001)))
(assert (= y (fp #b1 #b10000011000 #b1010010111000111100011111001100100010000011111101010)))
(assert (= r (fp #b1 #b10000111110 #b1111110101011110010010010100000100110101001010000000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
