(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4121777587255355257411792990751564502716064453125p-287 {- 1856283600606728 -287 (-5.67911e-087)}
; Y = -1.8640399590060514611877806601114571094512939453125p-735 {- 3891290037412872 -735 (-1.03136e-221)}
; -1.4121777587255355257411792990751564502716064453125p-287 / -1.8640399590060514611877806601114571094512939453125p-735 == 1.5151797062103120605769390749628655612468719482421875p447
; [HW: 1.5151797062103120605769390749628655612468719482421875p447] 

; mpf : + 2320163132917603 447
; mpfd: + 2320163132917603 447 (5.50646e+134) class: Pos. norm. non-zero
; hwf : + 2320163132917603 447 (5.50646e+134) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011100000 #b0110100110000100011110110100100111011101011000001000)))
(assert (= y (fp #b1 #b00100100000 #b1101110100110001101110010000011001011110010000001000)))
(assert (= r (fp #b0 #b10110111110 #b1000001111100010110100010011010110111100011101100011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
