(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.149969493734257497408179915510118007659912109375p-354 {+ 675402556098544 -354 (3.13378e-107)}
; Y = -1.9628022030254459462383920254069380462169647216796875p-710 {- 4336075642776891 -710 (-3.64401e-214)}
; 1.149969493734257497408179915510118007659912109375p-354 / -1.9628022030254459462383920254069380462169647216796875p-710 == -1.171762994724282247460678263450972735881805419921875p355
; [HW: -1.171762994724282247460678263450972735881805419921875p355] 

; mpf : - 773551759036318 355
; mpfd: - 773551759036318 355 (-8.5998e+106) class: Neg. norm. non-zero
; hwf : - 773551759036318 355 (-8.5998e+106) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011101 #b0010011001100100011001101001011011111100011111110000)))
(assert (= y (fp #b1 #b00100111001 #b1111011001111010001101001000011010000010110100111011)))
(assert (= r (fp #b1 #b10101100010 #b0010101111111000101010001101110100000000111110011110)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
