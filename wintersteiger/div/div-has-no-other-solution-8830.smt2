(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2810477863538640708185312178102321922779083251953125p-878 {- 1265726705896565 -878 (-6.35666e-265)}
; Y = 0.77461273242741501832142603234387934207916259765625p-1022 {+ 3488545613116548 -1023 (1.72357e-308)}
; -1.2810477863538640708185312178102321922779083251953125p-878 / 0.77461273242741501832142603234387934207916259765625p-1022 == -1.65379128527803320736211389885284006595611572265625p144
; [HW: -1.65379128527803320736211389885284006595611572265625p144] 

; mpf : - 2944414188756228 144
; mpfd: - 2944414188756228 144 (-3.68808e+043) class: Neg. norm. non-zero
; hwf : - 2944414188756228 144 (-3.68808e+043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010010001 #b0100011111110010101111110110101100000000110001110101)))
(assert (= y (fp #b0 #b00000000000 #b1100011001001101000001010010000011010111010010000100)))
(assert (= r (fp #b1 #b10010001111 #b1010011101011110110111011001110010101101110100000100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
