(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.143536036893103347011901860241778194904327392578125p-466 {- 646428842266018 -466 (-6.00167e-141)}
; Y = 1.7068125176071535786803679002332501113414764404296875p119 {+ 3183200590916379 119 (1.13437e+036)}
; -1.143536036893103347011901860241778194904327392578125p-466 / 1.7068125176071535786803679002332501113414764404296875p119 == -1.3399667802955541606735323512111790478229522705078125p-586
; [HW: -1.3399667802955541606735323512111790478229522705078125p-586] 

; mpf : - 1531074265057405 -586
; mpfd: - 1531074265057405 -586 (-5.29074e-177) class: Neg. norm. non-zero
; hwf : - 1531074265057405 -586 (-5.29074e-177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101101 #b0010010010111110110001110001100001000000110110100010)))
(assert (= y (fp #b0 #b10001110110 #b1011010011110001101010100100011110000110101100011011)))
(assert (= r (fp #b1 #b00110110101 #b0101011100001000000100000001101100011000100001111101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
