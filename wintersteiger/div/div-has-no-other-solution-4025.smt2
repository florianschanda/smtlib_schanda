(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2708803908055765763407407575869001448154449462890625p997 {+ 1219936827093969 997 (1.7022e+300)}
; Y = -1.4981989745880557318713499626028351485729217529296875p-880 {- 2243688716311131 -880 (-1.85855e-265)}
; 1.2708803908055765763407407575869001448154449462890625p997 / -1.4981989745880557318713499626028351485729217529296875p-880 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100100 #b0100010101011000011010101101001110100011001111010001)))
(assert (= y (fp #b1 #b00010001111 #b0111111110001001111101111100111011000001101001011011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
