(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.698268475483191597419363461085595190525054931640625p-151 {- 3144721645990666 -151 (-5.94945e-046)}
; Y = -1.771429256380617545119093847461044788360595703125p82 {- 3474208511578448 82 (-8.56611e+024)}
; -1.698268475483191597419363461085595190525054931640625p-151 / -1.771429256380617545119093847461044788360595703125p82 == 1.91739915028059559887196883209981024265289306640625p-234
; [HW: 1.91739915028059559887196883209981024265289306640625p-234] 

; mpf : + 4131598471353700 -234
; mpfd: + 4131598471353700 -234 (6.94534e-071) class: Pos. norm. non-zero
; hwf : + 4131598471353700 -234 (6.94534e-071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101101000 #b1011001011000001101110010000101000000111001100001010)))
(assert (= y (fp #b1 #b10001010001 #b1100010101111100011000110100001101010101000101010000)))
(assert (= r (fp #b0 #b01100010101 #b1110101011011010101010111011001111010101010101100100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
