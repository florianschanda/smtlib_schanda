(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.127245073905470906794334950973279774188995361328125p374 {+ 573060867425410 374 (4.33747e+112)}
; Y = -1.3183872710132351624423563407617621123790740966796875p-276 {- 1433888795094715 -276 (-1.08584e-083)}
; 1.127245073905470906794334950973279774188995361328125p374 / -1.3183872710132351624423563407617621123790740966796875p-276 == -1.71003634317424246802374909748323261737823486328125p649
; [HW: -1.71003634317424246802374909748323261737823486328125p649] 

; mpf : - 3197719410539028 649
; mpfd: - 3197719410539028 649 (-3.99459e+195) class: Neg. norm. non-zero
; hwf : - 3197719410539028 649 (-3.99459e+195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101110101 #b0010000010010011001000100001011100000000010010000010)))
(assert (= y (fp #b1 #b01011101011 #b0101000110000001110101000000010001110110111010111011)))
(assert (= r (fp #b1 #b11010001000 #b1011010111000100111100010001100011100111101000010100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
