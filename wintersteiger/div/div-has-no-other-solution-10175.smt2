(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.029192169706869552925354582839645445346832275390625p824 {- 131469844613994 824 (-1.15136e+248)}
; Y = 1.077877851800990161024174085468985140323638916015625p400 {+ 350730664351354 400 (2.78335e+120)}
; -1.029192169706869552925354582839645445346832275390625p824 / 1.077877851800990161024174085468985140323638916015625p400 == -1.909663823200795196299850431387312710285186767578125p423
; [HW: -1.909663823200795196299850431387312710285186767578125p423] 

; mpf : - 4096761655199522 423
; mpfd: - 4096761655199522 423 (-4.13661e+127) class: Neg. norm. non-zero
; hwf : - 4096761655199522 423 (-4.13661e+127) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110111 #b0000011101111001001000110101011000110000101101101010)))
(assert (= y (fp #b0 #b10110001111 #b0001001111101111110011011000101010010001011001111010)))
(assert (= r (fp #b1 #b10110100110 #b1110100011011111101110100111001100000000011100100010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
