(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1374273582972289631243256735615432262420654296875p184 {- 618917799617912 184 (-2.78896e+055)}
; Y = 1.8907411965191249780815496706054545938968658447265625p-519 {+ 4011541720727081 -519 (1.1017e-156)}
; -1.1374273582972289631243256735615432262420654296875p184 / 1.8907411965191249780815496706054545938968658447265625p-519 == -1.2031549959256666593176987589686177670955657958984375p702
; [HW: -1.2031549959256666593176987589686177670955657958984375p702] 

; mpf : - 914928763949287 702
; mpfd: - 914928763949287 702 (-2.5315e+211) class: Neg. norm. non-zero
; hwf : - 914928763949287 702 (-2.5315e+211) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110111 #b0010001100101110011100000111100101110110010101111000)))
(assert (= y (fp #b0 #b00111111000 #b1110010000000111100111010111010000111111111000101001)))
(assert (= r (fp #b1 #b11010111101 #b0011010000000001111101110011111110000101000011100111)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
