(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7233573821647489854314017065917141735553741455078125p-559 {- 3257712036772861 -559 (-9.13288e-169)}
; Y = -1.13619672224773093915928257047198712825775146484375p-157 {- 613375507563964 -157 (-6.21934e-048)}
; -1.7233573821647489854314017065917141735553741455078125p-559 / -1.13619672224773093915928257047198712825775146484375p-157 == 1.516777287260115958389405932393856346607208251953125p-402
; [HW: 1.516777287260115958389405932393856346607208251953125p-402] 

; mpf : + 2327357998338194 -402
; mpfd: + 2327357998338194 -402 (1.46846e-121) class: Pos. norm. non-zero
; hwf : + 2327357998338194 -402 (1.46846e-121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010000 #b1011100100101101111100110000101110110111101111111101)))
(assert (= y (fp #b1 #b01101100010 #b0010001011011101110010011101001111100000010110111100)))
(assert (= r (fp #b0 #b01001101101 #b1000010001001011100001000010110000011001000010010010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
