(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.26574900610002405443310635746456682682037353515625p649 {- 1196827124846148 649 (-2.95675e+195)}
; Y = 1.7982792617042406835281553867389447987079620361328125p604 {+ 3595130185548813 604 (1.19392e+182)}
; -1.26574900610002405443310635746456682682037353515625p649 / 1.7982792617042406835281553867389447987079620361328125p604 == -1.407733529552540829854478943161666393280029296875p44
; [HW: -1.407733529552540829854478943161666393280029296875p44] 

; mpf : - 1836268571759280 44
; mpfd: - 1836268571759280 44 (-2.47651e+013) class: Neg. norm. non-zero
; hwf : - 1836268571759280 44 (-2.47651e+013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001000 #b0100010000001000001000000111101000100100111001000100)))
(assert (= y (fp #b0 #b11001011011 #b1100110001011100000001111001101000011000010000001101)))
(assert (= r (fp #b1 #b10000101011 #b0110100001100001001110010111111011101001001010110000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
