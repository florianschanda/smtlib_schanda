(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.440956977764899615834792712121270596981048583984375p-466 {- 1985893680748422 -466 (-7.56263e-141)}
; Y = -1.27244725751472298469479937921278178691864013671875p485 {- 1226993367421420 485 (-1.27112e+146)}
; -1.440956977764899615834792712121270596981048583984375p-466 / -1.27244725751472298469479937921278178691864013671875p485 == 1.1324296305839041121288346403161995112895965576171875p-951
; [HW: 1.1324296305839041121288346403161995112895965576171875p-951] 

; mpf : + 596410034950483 -951
; mpfd: + 596410034950483 -951 (5.94957e-287) class: Pos. norm. non-zero
; hwf : + 596410034950483 -951 (5.94957e-287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101101 #b0111000011100010100011100111011001110001011110000110)))
(assert (= y (fp #b1 #b10111100100 #b0100010110111111000110100111110011101001000111101100)))
(assert (= r (fp #b0 #b00001001000 #b0010000111100110111010001000010001100001000101010011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
