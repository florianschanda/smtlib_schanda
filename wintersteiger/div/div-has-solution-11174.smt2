(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7555030281504813149950905426521785557270050048828125p-830 {- 3402483156055789 -830 (-2.45191e-250)}
; Y = 1.860318636971339145702586392872035503387451171875p-162 {+ 3874530692884016 -162 (3.1822e-049)}
; -1.7555030281504813149950905426521785557270050048828125p-830 / 1.860318636971339145702586392872035503387451171875p-162 == -1.887314348480106485084206724422983825206756591796875p-669
; [HW: -1.887314348480106485084206724422983825206756591796875p-669] 

; mpf : - 3996108569175502 -669
; mpfd: - 3996108569175502 -669 (-7.70508e-202) class: Neg. norm. non-zero
; hwf : - 3996108569175502 -669 (-7.70508e-202) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000001 #b1100000101101000101001010111110111101111011011101101)))
(assert (= y (fp #b0 #b01101011101 #b1101110000111101110101111001100111101110011000110000)))
(assert (= r (fp #b1 #b00101100010 #b1110001100100111000010000111101111111110010111001110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
