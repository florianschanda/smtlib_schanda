(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0015672759135603175906226169900037348270416259765625p230 {- 7058383220297 230 (-1.72814e+069)}
; Y = 1.71551585897901048838321003131568431854248046875p776 {+ 3222396955875552 776 (6.81823e+233)}
; -1.0015672759135603175906226169900037348270416259765625p230 / 1.71551585897901048838321003131568431854248046875p776 == -1.1676572625911407765642024969565682113170623779296875p-547
; [HW: -1.1676572625911407765642024969565682113170623779296875p-547] 

; mpf : - 755061185331419 -547
; mpfd: - 755061185331419 -547 (-2.53459e-165) class: Neg. norm. non-zero
; hwf : - 755061185331419 -547 (-2.53459e-165) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100101 #b0000000001100110101101101000011011001010111001001001)))
(assert (= y (fp #b0 #b11100000111 #b1011011100101100000011000001111000010101100011100000)))
(assert (= r (fp #b1 #b00111011100 #b0010101011101011100101100001101111000100000011011011)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
