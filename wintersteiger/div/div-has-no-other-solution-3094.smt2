(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.73941693136062358604476685286499559879302978515625p-515 {- 3330037816547140 -515 (-1.62165e-155)}
; Y = 1.25397623277164971256070202798582613468170166015625p-643 {+ 1143807267271364 -643 (3.4356e-194)}
; -1.73941693136062358604476685286499559879302978515625p-515 / 1.25397623277164971256070202798582613468170166015625p-643 == -1.387121131886215774642323594889603555202484130859375p128
; [HW: -1.387121131886215774642323594889603555202484130859375p128] 

; mpf : - 1743438585310006 128
; mpfd: - 1743438585310006 128 (-4.72013e+038) class: Neg. norm. non-zero
; hwf : - 1743438585310006 128 (-4.72013e+038) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111100 #b1011110101001010011011011001001001001101011101000100)))
(assert (= y (fp #b0 #b00101111100 #b0100000100000100100101100001110110110111001011000100)))
(assert (= r (fp #b1 #b10001111111 #b0110001100011010010111101101100100001010101100110110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
