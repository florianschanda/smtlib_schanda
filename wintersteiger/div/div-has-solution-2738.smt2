(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5142309939584948086377380604972131550312042236328125p280 {- 2315890512773837 280 (-2.94165e+084)}
; Y = -1.3372727557462675829214049372239969670772552490234375p-289 {- 1518941457101111 -289 (-1.34447e-087)}
; -1.5142309939584948086377380604972131550312042236328125p280 / -1.3372727557462675829214049372239969670772552490234375p-289 == 1.13232770760627321493529962026514112949371337890625p569
; [HW: 1.13232770760627321493529962026514112949371337890625p569] 

; mpf : + 595951014666404 569
; mpfd: + 595951014666404 569 (2.18796e+171) class: Pos. norm. non-zero
; hwf : + 595951014666404 569 (2.18796e+171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010111 #b1000001110100100101001000111010110100100001011001101)))
(assert (= y (fp #b1 #b01011011110 #b0101011001010111100000011101111111000011000100110111)))
(assert (= r (fp #b0 #b11000111000 #b0010000111100000001110101000100010000110000010100100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
