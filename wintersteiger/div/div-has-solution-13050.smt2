(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7714600114616365633679606617079116404056549072265625p-277 {- 3474347020149865 -277 (-7.29495e-084)}
; Y = -1.4538982959231863123505945623037405312061309814453125p-877 {- 2044176196383765 -877 (-1.44287e-264)}
; -1.7714600114616365633679606617079116404056549072265625p-277 / -1.4538982959231863123505945623037405312061309814453125p-877 == 1.218420859580695125856664162711240351200103759765625p600
; [HW: 1.218420859580695125856664162711240351200103759765625p600] 

; mpf : + 983680101817562 600
; mpfd: + 983680101817562 600 (5.05586e+180) class: Pos. norm. non-zero
; hwf : + 983680101817562 600 (5.05586e+180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101010 #b1100010101111110011001110011111101100110010001101001)))
(assert (= y (fp #b1 #b00010010010 #b0111010000110010101011011100000010110011010000010101)))
(assert (= r (fp #b0 #b11001010111 #b0011011111101010011011011111000010101001110011011010)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
