(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.93695959899879799337440999806858599185943603515625p834 {+ 4219690900912196 834 (2.2189e+251)}
; Y = 1.925264228618385420332970170420594513416290283203125p973 {+ 4167019635225010 973 (1.53701e+293)}
; 1.93695959899879799337440999806858599185943603515625p834 / 1.925264228618385420332970170420594513416290283203125p973 == 1.0060746832598688182969226545537821948528289794921875p-139
; [HW: 1.0060746832598688182969226545537821948528289794921875p-139] 

; mpf : + 27357941265539 -139
; mpfd: + 27357941265539 -139 (1.44365e-042) class: Pos. norm. non-zero
; hwf : + 27357941265539 -139 (1.44365e-042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000001 #b1110111111011100100101011001001101011111100001000100)))
(assert (= y (fp #b0 #b11111001100 #b1110110011011110000111011101001000010011000110110010)))
(assert (= r (fp #b0 #b01101110100 #b0000000110001110000111000100010111101111010010000011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
