(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.700359874340173771400941404863260686397552490234375p-910 {- 3154140469103654 -910 (-1.96447e-274)}
; Y = 1.5818136540893494856874212928232736885547637939453125p858 {+ 2620255755755861 858 (3.04013e+258)}
; -1.700359874340173771400941404863260686397552490234375p-910 / 1.5818136540893494856874212928232736885547637939453125p858 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110001 #b1011001101001010110010001110001110111000110000100110)))
(assert (= y (fp #b0 #b11101011001 #b1001010011110001101111010101100010101110000101010101)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
