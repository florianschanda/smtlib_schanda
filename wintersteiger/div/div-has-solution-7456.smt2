(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1726060459074922892597214740817435085773468017578125p-690 {- 777348524030877 -690 (-2.28273e-208)}
; Y = 1.044433627303743339354014096898026764392852783203125p-338 {+ 200111267367858 -338 (1.86527e-102)}
; -1.1726060459074922892597214740817435085773468017578125p-690 / 1.044433627303743339354014096898026764392852783203125p-338 == -1.1227195441175445989046011163736693561077117919921875p-352
; [HW: -1.1227195441175445989046011163736693561077117919921875p-352] 

; mpf : - 552679693158851 -352
; mpfd: - 552679693158851 -352 (-1.22381e-106) class: Neg. norm. non-zero
; hwf : - 552679693158851 -352 (-1.22381e-106) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101001101 #b0010110000101111111010001110101001000011101110011101)))
(assert (= y (fp #b0 #b01010101101 #b0000101101100000000000001001000000011100101110110010)))
(assert (= r (fp #b1 #b01010011111 #b0001111101101010100011000100110010010000100111000011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
