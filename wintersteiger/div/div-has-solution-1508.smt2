(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8252355863585894013567667570896446704864501953125p-360 {- 3716530679217416 -360 (-7.77178e-109)}
; Y = -1.0954704433661810458744412244413979351520538330078125p-321 {- 429960653168829 -321 (-2.56432e-097)}
; -1.8252355863585894013567667570896446704864501953125p-360 / -1.0954704433661810458744412244413979351520538330078125p-321 == 1.66616598139332072747720303595997393131256103515625p-39
; [HW: 1.66616598139332072747720303595997393131256103515625p-39] 

; mpf : + 3000144865569860 -39
; mpfd: + 3000144865569860 -39 (3.03074e-012) class: Pos. norm. non-zero
; hwf : + 3000144865569860 -39 (3.03074e-012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010111 #b1101001101000010101000111010111011100111110100001000)))
(assert (= y (fp #b1 #b01010111110 #b0001100001110000110000000011111111111110000010111101)))
(assert (= r (fp #b0 #b01111011000 #b1010101010001001110110101000111111001010110001000100)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
