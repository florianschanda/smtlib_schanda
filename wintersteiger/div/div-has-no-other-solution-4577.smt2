(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8316164530175582658699795501888729631900787353515625p-288 {- 3745267547925049 -288 (-3.68295e-087)}
; Y = -1.4535305511082274865231056537595577538013458251953125p249 {- 2042520020972149 249 (-1.3149e+075)}
; -1.8316164530175582658699795501888729631900787353515625p-288 / -1.4535305511082274865231056537595577538013458251953125p249 == 1.260115552178152409368294684099964797496795654296875p-537
; [HW: 1.260115552178152409368294684099964797496795654296875p-537] 

; mpf : + 1171456303862798 -537
; mpfd: + 1171456303862798 -537 (2.80093e-162) class: Pos. norm. non-zero
; hwf : + 1171456303862798 -537 (2.80093e-162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011111 #b1101010011100100110100001101110010000110101000111001)))
(assert (= y (fp #b1 #b10011111000 #b0111010000011010100101000000010010111111001001110101)))
(assert (= r (fp #b0 #b00111100110 #b0100001010010110111011101100110111001001010000001110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
