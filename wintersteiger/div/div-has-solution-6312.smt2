(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0432202226797204769326299356180243194103240966796875p-880 {- 194646578755259 -880 (-1.29414e-265)}
; Y = -1.79062570346222482697839950560592114925384521484375p-560 {- 3560661623502012 -560 (-4.74468e-169)}
; -1.0432202226797204769326299356180243194103240966796875p-880 / -1.79062570346222482697839950560592114925384521484375p-560 == 1.1652018851987044900653245349531061947345733642578125p-321
; [HW: 1.1652018851987044900653245349531061947345733642578125p-321] 

; mpf : + 744003148621789 -321
; mpfd: + 744003148621789 -321 (2.72755e-097) class: Pos. norm. non-zero
; hwf : + 744003148621789 -321 (2.72755e-097) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001111 #b0000101100010000011110110000001011101111011010111011)))
(assert (= y (fp #b1 #b00111001111 #b1100101001100110011100100011001110111111010010111100)))
(assert (= r (fp #b0 #b01010111110 #b0010101001001010101010111011011000101010011111011101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
