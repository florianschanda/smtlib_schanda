(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0592847047357552003887803948600776493549346923828125p404 {+ 266994574156717 404 (4.37654e+121)}
; Y = 1.15362009629910478025749398511834442615509033203125p-563 {+ 691843408449268 -563 (3.82098e-170)}
; 1.0592847047357552003887803948600776493549346923828125p404 / 1.15362009629910478025749398511834442615509033203125p-563 == 1.8364532797825139365244240252650342881679534912109375p966
; [HW: 1.8364532797825139365244240252650342881679534912109375p966] 

; mpf : + 3767050679141359 966
; mpfd: + 3767050679141359 966 (1.1454e+291) class: Pos. norm. non-zero
; hwf : + 3767050679141359 966 (1.1454e+291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010011 #b0000111100101101010010000100101111111110001110101101)))
(assert (= y (fp #b0 #b00111001100 #b0010011101010011101001011000100110011100111011110100)))
(assert (= r (fp #b0 #b11111000101 #b1101011000100001110011010101100101001100001111101111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
