(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5899280759920897398984607207239605486392974853515625p-657 {+ 2656799863213369 -657 (2.65871e-198)}
; Y = -1.404484704211582002386649037362076342105865478515625p-92 {- 1821637163164346 -92 (-2.83633e-028)}
; 1.5899280759920897398984607207239605486392974853515625p-657 / -1.404484704211582002386649037362076342105865478515625p-92 == -1.132036590519230667695183001342229545116424560546875p-565
; [HW: -1.132036590519230667695183001342229545116424560546875p-565] 

; mpf : - 594639939861678 -565
; mpfd: - 594639939861678 -565 (-9.37374e-171) class: Neg. norm. non-zero
; hwf : - 594639939861678 -565 (-9.37374e-171) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101110 #b1001011100000101100001101100000101100000110100111001)))
(assert (= y (fp #b1 #b01110100011 #b0110011110001100010011110100000001010010001010111010)))
(assert (= r (fp #b1 #b00111001010 #b0010000111001101001001100110011000100111110010101110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
