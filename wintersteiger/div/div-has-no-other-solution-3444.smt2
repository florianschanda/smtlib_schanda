(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.073452500094035588773522249539382755756378173828125p324 {+ 330800652052930 324 (3.66861e+097)}
; Y = -1.0576168084365631383292338796309195458889007568359375p618 {- 259483037005183 618 (-1.15044e+186)}
; 1.073452500094035588773522249539382755756378173828125p324 / -1.0576168084365631383292338796309195458889007568359375p618 == -1.0149729954470767534502328999224118888378143310546875p-294
; [HW: -1.0149729954470767534502328999224118888378143310546875p-294] 

; mpf : - 67432376716075 -294
; mpfd: - 67432376716075 -294 (-3.18886e-089) class: Neg. norm. non-zero
; hwf : - 67432376716075 -294 (-3.18886e-089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000011 #b0001001011001101110010000111010110110110100111000010)))
(assert (= y (fp #b1 #b11001101001 #b0000111010111111111110011010001111101111010101111111)))
(assert (= r (fp #b1 #b01011011001 #b0000001111010101010001010010110111000100101100101011)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
