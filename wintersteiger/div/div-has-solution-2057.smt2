(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.692633505662417103820871489006094634532928466796875p682 {+ 3119343998005582 682 (3.39641e+205)}
; Y = -1.28227816612939715668062490294687449932098388671875p466 {- 1271267843795180 466 (-2.44321e+140)}
; 1.692633505662417103820871489006094634532928466796875p682 / -1.28227816612939715668062490294687449932098388671875p466 == -1.320020530936506730768087436445057392120361328125p216
; [HW: -1.320020530936506730768087436445057392120361328125p216] 

; mpf : - 1441244343876560 216
; mpfd: - 1441244343876560 216 (-1.39014e+065) class: Neg. norm. non-zero
; hwf : - 1441244343876560 216 (-1.39014e+065) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101001 #b1011000101010000011011011110111011101111000101001110)))
(assert (= y (fp #b1 #b10111010001 #b0100100001000011011000011100001111100110100011101100)))
(assert (= r (fp #b1 #b10011010111 #b0101000111101100110111011001001001101011101111010000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
