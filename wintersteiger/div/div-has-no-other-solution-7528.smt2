(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5854015321512624492328313863254152238368988037109375p415 {- 2636414122058543 415 (-1.34149e+125)}
; Y = 1.12577888858357244572516719927079975605010986328125p-429 {+ 566457755756052 -429 (8.12054e-130)}
; -1.5854015321512624492328313863254152238368988037109375p415 / 1.12577888858357244572516719927079975605010986328125p-429 == -1.408270796538009239640132364002056419849395751953125p844
; [HW: -1.408270796538009239640132364002056419849395751953125p844] 

; mpf : - 1838688207154834 844
; mpfd: - 1838688207154834 844 (-1.65197e+254) class: Neg. norm. non-zero
; hwf : - 1838688207154834 844 (-1.65197e+254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011110 #b1001010111011100110111111111001110011110001100101111)))
(assert (= y (fp #b0 #b01001010010 #b0010000000110011000010111001010011111110011000010100)))
(assert (= r (fp #b1 #b11101001011 #b0110100010000100011011110101011100001010111010010010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
