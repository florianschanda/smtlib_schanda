(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5798222275630584565675462727085687220096588134765625p158 {- 2611287167994121 158 (-5.77228e+047)}
; Y = -1.4743776707325790820135580361238680779933929443359375p-101 {- 2136407101144127 -101 (-5.81539e-031)}
; -1.5798222275630584565675462727085687220096588134765625p158 / -1.4743776707325790820135580361238680779933929443359375p-101 == 1.07151800988554501969929333426989614963531494140625p259
; [HW: 1.07151800988554501969929333426989614963531494140625p259] 

; mpf : + 322088482670820 259
; mpfd: + 322088482670820 259 (9.92586e+077) class: Pos. norm. non-zero
; hwf : + 322088482670820 259 (9.92586e+077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011101 #b1001010001101111001110101100000011100000100100001001)))
(assert (= y (fp #b1 #b01110011010 #b0111100101110000110100001010010110111111110000111111)))
(assert (= r (fp #b0 #b10100000010 #b0001001001001111000000010001100110001000100011100100)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
