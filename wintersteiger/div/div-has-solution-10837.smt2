(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.969544445886997063865919699310325086116790771484375p-787 {- 4366440005215814 -787 (-2.41969e-237)}
; Y = 1.510658213287513707001608054270036518573760986328125p82 {+ 2299800139075330 82 (7.30509e+024)}
; -1.969544445886997063865919699310325086116790771484375p-787 / 1.510658213287513707001608054270036518573760986328125p82 == -1.303765754929335773937282283441163599491119384765625p-869
; [HW: -1.303765754929335773937282283441163599491119384765625p-869] 

; mpf : - 1368039340707674 -869
; mpfd: - 1368039340707674 -869 (-3.31233e-262) class: Neg. norm. non-zero
; hwf : - 1368039340707674 -869 (-3.31233e-262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101100 #b1111100000110100000100001001011100011010011001000110)))
(assert (= y (fp #b0 #b10001010001 #b1000001010111010011111110010010110000000111100000010)))
(assert (= r (fp #b1 #b00010011010 #b0100110111000011100101111010111100010000111101011010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
