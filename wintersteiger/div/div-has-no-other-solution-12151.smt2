(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.18649885536356070048213950940407812595367431640625p242 {- 839916175520356 242 (-8.38545e+072)}
; Y = -1.2517665145892931111148982381564565002918243408203125p85 {- 1133855581288709 85 (-4.84254e+025)}
; -1.18649885536356070048213950940407812595367431640625p242 / -1.2517665145892931111148982381564565002918243408203125p85 == 1.8957191162009203733163076321943663060665130615234375p156
; [HW: 1.8957191162009203733163076321943663060665130615234375p156] 

; mpf : + 4033960277951095 156
; mpfd: + 4033960277951095 156 (1.73162e+047) class: Pos. norm. non-zero
; hwf : + 4033960277951095 156 (1.73162e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110001 #b0010111110111110011000111001010010000111001001100100)))
(assert (= y (fp #b1 #b10001010100 #b0100000001110011110001010011001001100011100100000101)))
(assert (= r (fp #b0 #b10010011011 #b1110010101001101110110010001011001111100001001110111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
