(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.78162186287864354738985639414750039577484130859375p635 {+ 3520111930404892 635 (2.54017e+191)}
; Y = -1.8674499136253166486909549348638392984867095947265625p-358 {- 3906647107765545 -358 (-3.18061e-108)}
; 1.78162186287864354738985639414750039577484130859375p635 / -1.8674499136253166486909549348638392984867095947265625p-358 == -1.908079943541775236326429876498878002166748046875p992
; [HW: -1.908079943541775236326429876498878002166748046875p992] 

; mpf : - 4089628495357360 992
; mpfd: - 4089628495357360 992 (-7.98642e+298) class: Neg. norm. non-zero
; hwf : - 4089628495357360 992 (-7.98642e+298) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111010 #b1100100000011000010111101101001011100111000000011100)))
(assert (= y (fp #b1 #b01010011001 #b1101111000010001001100101001000111110000010100101001)))
(assert (= r (fp #b1 #b11111011111 #b1110100001110111111011010101101110101010010110110000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
