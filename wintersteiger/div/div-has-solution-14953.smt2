(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.853563425105495543476763486978597939014434814453125p-974 {+ 3844107923242194 -974 (1.16089e-293)}
; Y = 1.05139333140939328359309001825749874114990234375p-865 {+ 231454988184672 -865 (4.27385e-261)}
; 1.853563425105495543476763486978597939014434814453125p-974 / 1.05139333140939328359309001825749874114990234375p-865 == 1.7629590846089853162226290805847384035587310791015625p-109
; [HW: 1.7629590846089853162226290805847384035587310791015625p-109] 

; mpf : + 3436062249143961 -109
; mpfd: + 3436062249143961 -109 (2.71627e-033) class: Pos. norm. non-zero
; hwf : + 3436062249143961 -109 (2.71627e-033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110001 #b1101101010000011001000011111001111100011110011010010)))
(assert (= y (fp #b0 #b00010011110 #b0000110100101000000111010000010110100010110001100000)))
(assert (= r (fp #b0 #b01110010010 #b1100001101010001010010010101110010010100111010011001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
