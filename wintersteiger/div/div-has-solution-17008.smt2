(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6950938596947306979956238137674517929553985595703125p-504 {- 3130424447508709 -504 (-3.2365e-152)}
; Y = 1.09244051176358158983248358708806335926055908203125p-293 {+ 416315054332404 -293 (6.8645e-089)}
; -1.6950938596947306979956238137674517929553985595703125p-504 / 1.09244051176358158983248358708806335926055908203125p-293 == -1.551657817008502693312266274006105959415435791015625p-211
; [HW: -1.551657817008502693312266274006105959415435791015625p-211] 

; mpf : - 2484445939115514 -211
; mpfd: - 2484445939115514 -211 (-4.71484e-064) class: Neg. norm. non-zero
; hwf : - 2484445939115514 -211 (-4.71484e-064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000111 #b1011000111110001101010111101001100001010000011100101)))
(assert (= y (fp #b0 #b01011011010 #b0001011110101010001011100110111011011001100111110100)))
(assert (= r (fp #b1 #b01100101100 #b1000110100111001011100100101101010100010010111111010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
