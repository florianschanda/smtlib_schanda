(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.57109792036122808411846563103608787059783935546875p545 {+ 2571996381330892 545 (1.80947e+164)}
; Y = -1.55738198808426631103429826907813549041748046875p-252 {- 2510225313839328 -252 (-2.15197e-076)}
; 1.57109792036122808411846563103608787059783935546875p545 / -1.55738198808426631103429826907813549041748046875p-252 == -1.008807044374407713149821574916131794452667236328125p797
; [HW: -1.008807044374407713149821574916131794452667236328125p797] 

; mpf : - 39663401762818 797
; mpfd: - 39663401762818 797 (-8.40842e+239) class: Neg. norm. non-zero
; hwf : - 39663401762818 797 (-8.40842e+239) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100000 #b1001001000110011011110010010101011000011110111001100)))
(assert (= y (fp #b1 #b01100000011 #b1000111010110000100101100000001000110011100011100000)))
(assert (= r (fp #b1 #b11100011100 #b0000001001000001001011011010111110010000000000000010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
