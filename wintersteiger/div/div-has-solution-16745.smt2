(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1615206209670263515221222405671142041683197021484375p562 {- 727424208399751 562 (-1.75341e+169)}
; Y = 1.4342451418636705806619602299178950488567352294921875p918 {+ 1955666259084675 918 (3.17804e+276)}
; -1.1615206209670263515221222405671142041683197021484375p562 / 1.4342451418636705806619602299178950488567352294921875p918 == -1.6196960855070232643271310735144652426242828369140625p-357
; [HW: -1.6196960855070232643271310735144652426242828369140625p-357] 

; mpf : - 2790863059772385 -357
; mpfd: - 2790863059772385 -357 (-5.51728e-108) class: Neg. norm. non-zero
; hwf : - 2790863059772385 -357 (-5.51728e-108) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110001 #b0010100101011001011010100101100010101110110110000111)))
(assert (= y (fp #b0 #b11110010101 #b0110111100101010101100001000101011000000010110000011)))
(assert (= r (fp #b1 #b01010011010 #b1001111010100100011001110001010010110110001111100001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
