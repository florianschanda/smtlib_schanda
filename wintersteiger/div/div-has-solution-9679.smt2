(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.964799035426867845899323583580553531646728515625p76 {- 4345068576435856 76 (-1.48456e+023)}
; Y = 1.17310049861462584175342271919362246990203857421875p62 {+ 779575341058476 62 (5.40997e+018)}
; -1.964799035426867845899323583580553531646728515625p76 / 1.17310049861462584175342271919362246990203857421875p62 == -1.67487699284690361167804439901374280452728271484375p14
; [HW: -1.67487699284690361167804439901374280452728271484375p14] 

; mpf : - 3039375773506236 14
; mpfd: - 3039375773506236 14 (-27441.2) class: Neg. norm. non-zero
; hwf : - 3039375773506236 14 (-27441.2) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001011 #b1111011011111101000100011101000001011110111010010000)))
(assert (= y (fp #b0 #b10000111101 #b0010110001010000010100000111010001111000100110101100)))
(assert (= r (fp #b1 #b10000001101 #b1010110011000100101111010001010100011001101010111100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
