(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.76520657346704989976160504738800227642059326171875p-94 {+ 3446184039127660 -94 (8.91202e-029)}
; Y = -1.88156737400908813384603490703739225864410400390625p-780 {- 3970226497089316 -780 (-2.95885e-235)}
; 1.76520657346704989976160504738800227642059326171875p-94 / -1.88156737400908813384603490703739225864410400390625p-780 == -1.8763150316599013223139991168864071369171142578125p685
; [HW: -1.8763150316599013223139991168864071369171142578125p685] 

; mpf : - 3946572050042696 685
; mpfd: - 3946572050042696 685 (-3.01198e+206) class: Neg. norm. non-zero
; hwf : - 3946572050042696 685 (-3.01198e+206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110100001 #b1100001111100100100100111111011110111001101001101100)))
(assert (= y (fp #b1 #b00011110011 #b1110000110101110011001100100000010010110111100100100)))
(assert (= r (fp #b1 #b11010101100 #b1110000001010110001011101001000111111000111101001000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
