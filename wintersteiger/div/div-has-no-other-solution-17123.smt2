(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.694700940845689896008252617320977151393890380859375p-48 {+ 3128654898326582 -48 (6.02079e-015)}
; Y = -1.1996952488997234542722480910015292465686798095703125p418 {- 899347448532453 418 (-8.12099e+125)}
; 1.694700940845689896008252617320977151393890380859375p-48 / -1.1996952488997234542722480910015292465686798095703125p418 == -1.41260952929500316344046950689516961574554443359375p-466
; [HW: -1.41260952929500316344046950689516961574554443359375p-466] 

; mpf : - 1858228122382492 -466
; mpfd: - 1858228122382492 -466 (-7.41386e-141) class: Neg. norm. non-zero
; hwf : - 1858228122382492 -466 (-7.41386e-141) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111001111 #b1011000111010111111010111011110101101110110000110110)))
(assert (= y (fp #b1 #b10110100001 #b0011001100011111001110100101001100110000110111100101)))
(assert (= r (fp #b1 #b01000101101 #b0110100110100000110001110011001001010111000010011100)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
