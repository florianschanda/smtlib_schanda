(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4623328772959227617178612490533851087093353271484375p-820 {+ 2082162173911047 -820 (2.09146e-247)}
; Y = -0.2733645101029591462094003873062320053577423095703125p-1022 {- 1231124305836005 -1023 (-6.08256e-309)}
; 1.4623328772959227617178612490533851087093353271484375p-820 / -0.2733645101029591462094003873062320053577423095703125p-1022 == -1.3373470432803753471517893558484502136707305908203125p204
; [HW: -1.3373470432803753471517893558484502136707305908203125p204] 

; mpf : - 1519276018412037 204
; mpfd: - 1519276018412037 204 (-3.43845e+061) class: Neg. norm. non-zero
; hwf : - 1519276018412037 204 (-3.43845e+061) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001011 #b0111011001011011011100101000101111011010000000000111)))
(assert (= y (fp #b1 #b00000000000 #b0100010111111011001101110110111011000111011111100101)))
(assert (= r (fp #b1 #b10011001011 #b0101011001011100011000000011011001001010101000000101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
