(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.330854841025211232619085421902127563953399658203125p-348 {- 1490037738754866 -348 (-2.32109e-105)}
; Y = -1.4306989315167240039983198585105128586292266845703125p-743 {- 1939695547487589 -743 (-3.09216e-224)}
; -1.330854841025211232619085421902127563953399658203125p-348 / -1.4306989315167240039983198585105128586292266845703125p-743 == 1.8604261339796133167823199983104132115840911865234375p394
; [HW: 1.8604261339796133167823199983104132115840911865234375p394] 

; mpf : + 3875014816370423 394
; mpfd: + 3875014816370423 394 (7.50638e+118) class: Pos. norm. non-zero
; hwf : + 3875014816370423 394 (7.50638e+118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100011 #b0101010010110010111001110010000111101101001100110010)))
(assert (= y (fp #b1 #b00100011000 #b0110111001000010010010010000000101001001010101100101)))
(assert (= r (fp #b0 #b10110001001 #b1101110001000100111000110001101000010000111011110111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
