(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.128384108000154650852664417470805346965789794921875p338 {+ 578190620949790 338 (6.31823e+101)}
; Y = 1.3597167870811712742096233341726474463939666748046875p495 {+ 1620020388257675 495 (1.3909e+149)}
; 1.128384108000154650852664417470805346965789794921875p338 / 1.3597167870811712742096233341726474463939666748046875p495 == 1.659734025086789355185601380071602761745452880859375p-158
; [HW: 1.659734025086789355185601380071602761745452880859375p-158] 

; mpf : + 2971177909544502 -158
; mpfd: + 2971177909544502 -158 (4.54254e-048) class: Pos. norm. non-zero
; hwf : + 2971177909544502 -158 (4.54254e-048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010001 #b0010000011011101110001111110100100101111110100011110)))
(assert (= y (fp #b0 #b10111101110 #b0101110000010110011001100011110001010101111110001011)))
(assert (= r (fp #b0 #b01101100001 #b1010100011100100010101000011110111001110011000110110)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
