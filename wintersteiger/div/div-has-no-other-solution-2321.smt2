(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6132253173199806450810456226463429629802703857421875p732 {- 2761721310576419 732 (-3.64462e+220)}
; Y = -1.1197041439826029840531873560394160449504852294921875p-37 {- 539099538234755 -37 (-8.14692e-012)}
; -1.6132253173199806450810456226463429629802703857421875p732 / -1.1197041439826029840531873560394160449504852294921875p-37 == 1.4407603347630779655474952960503287613391876220703125p769
; [HW: 1.4407603347630779655474952960503287613391876220703125p769] 

; mpf : + 1985008079398693 769
; mpfd: + 1985008079398693 769 (4.47361e+231) class: Pos. norm. non-zero
; hwf : + 1985008079398693 769 (4.47361e+231) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011011 #b1001110011111100010101011001101011110111111100100011)))
(assert (= y (fp #b1 #b01111011010 #b0001111010100100111011100100011110011001110110000011)))
(assert (= r (fp #b0 #b11100000000 #b0111000011010101101010110101011100101110011100100101)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
