(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.638182447050868351112740128883160650730133056640625p-871 {- 2874118230732682 -871 (-1.04049e-262)}
; Y = -1.27752639335604545323121783440001308917999267578125p-331 {- 1249867761703764 -331 (-2.92039e-100)}
; -1.638182447050868351112740128883160650730133056640625p-871 / -1.27752639335604545323121783440001308917999267578125p-331 == 1.2823081038250678798107173861353658139705657958984375p-540
; [HW: 1.2823081038250678798107173861353658139705657958984375p-540] 

; mpf : + 1271402671190247 -540
; mpfd: + 1271402671190247 -540 (3.56283e-163) class: Pos. norm. non-zero
; hwf : + 1271402671190247 -540 (3.56283e-163) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011000 #b1010001101011111111011001100001011110110111110001010)))
(assert (= y (fp #b1 #b01010110100 #b0100011100001011111110000011111100111101101101010100)))
(assert (= r (fp #b0 #b00111100011 #b0100100001000101010110000000100101010011000011100111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
