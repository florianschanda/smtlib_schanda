(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.440643143971615192100443891831673681735992431640625p195 {- 1984480298993930 195 (-7.23445e+058)}
; Y = -1.1999160736364007373566664682584814727306365966796875p-815 {- 900341954734267 -815 (-5.49167e-246)}
; -1.440643143971615192100443891831673681735992431640625p195 / -1.1999160736364007373566664682584814727306365966796875p-815 == 1.200619923029849989148942768224515020847320556640625p1010
; [HW: 1.200619923029849989148942768224515020847320556640625p1010] 

; mpf : + 903511810600330 1010
; mpfd: + 903511810600330 1010 (1.31735e+304) class: Pos. norm. non-zero
; hwf : + 903511810600330 1010 (1.31735e+304) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000010 #b0111000011001101111111010011010010010000100100001010)))
(assert (= y (fp #b1 #b00011010000 #b0011001100101101101100110010011000110110100010111011)))
(assert (= r (fp #b0 #b11111110001 #b0011001101011011110100111100100001010110110110001010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
