(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7599995570398829780600635785958729684352874755859375p851 {+ 3422733721886559 851 (2.64265e+256)}
; Y = -1.2109717688604650920325411789235658943653106689453125p315 {- 950132379625685 315 (-8.08319e+094)}
; 1.7599995570398829780600635785958729684352874755859375p851 / -1.2109717688604650920325411789235658943653106689453125p315 == -1.4533778592510524507730451659881509840488433837890625p536
; [HW: -1.4533778592510524507730451659881509840488433837890625p536] 

; mpf : - 2041832357981073 536
; mpfd: - 2041832357981073 536 (-3.26931e+161) class: Neg. norm. non-zero
; hwf : - 2041832357981073 536 (-3.26931e+161) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101010010 #b1100001010001111010101001011101001110101111101011111)))
(assert (= y (fp #b1 #b10100111010 #b0011011000000010001111101110111110100010100011010101)))
(assert (= r (fp #b1 #b11000010111 #b0111010000010000100100100100011000110110101110010001)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
