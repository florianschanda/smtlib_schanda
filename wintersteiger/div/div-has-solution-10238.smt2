(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5067579599449947291844864594168029725551605224609375p-628 {- 2282234959575311 -628 (-1.35271e-189)}
; Y = 1.5847146796017212988516575933317653834819793701171875p371 {+ 2633320813172371 371 (7.62218e+111)}
; -1.5067579599449947291844864594168029725551605224609375p-628 / 1.5847146796017212988516575933317653834819793701171875p371 == -1.90161418877457588649804165470413863658905029296875p-1000
; [HW: -1.90161418877457588649804165470413863658905029296875p-1000] 

; mpf : - 4060509324597132 -1000
; mpfd: - 4060509324597132 -1000 (-1.77471e-301) class: Neg. norm. non-zero
; hwf : - 4060509324597132 -1000 (-1.77471e-301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001011 #b1000000110111010111000111100000011110011100100001111)))
(assert (= y (fp #b0 #b10101110010 #b1001010110101111110111000111101001100001011010010011)))
(assert (= r (fp #b1 #b00000010111 #b1110011011010000001011111111111001100101011110001100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
