(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6552498585353843107981219873181544244289398193359375p-1016 {+ 2950983018734527 -1016 (2.35715e-306)}
; Y = 1.931489640230533932907519556465558707714080810546875p-259 {+ 4195056396641710 -259 (2.08508e-078)}
; 1.6552498585353843107981219873181544244289398193359375p-1016 / 1.931489640230533932907519556465558707714080810546875p-259 == 1.713961932861126857829958680667914450168609619140625p-758
; [HW: 1.713961932861126857829958680667914450168609619140625p-758] 

; mpf : + 3215398694790090 -758
; mpfd: + 3215398694790090 -758 (1.13048e-228) class: Pos. norm. non-zero
; hwf : + 3215398694790090 -758 (1.13048e-228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000111 #b1010011110111110011101000110100100011110001110111111)))
(assert (= y (fp #b0 #b01011111100 #b1110111001110110000110101110010101011010010110101110)))
(assert (= r (fp #b0 #b00100001001 #b1011011011000110001101011001000000111010001111001010)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
