(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2898298529840186432693371898494660854339599609375p-729 {- 1305277617899672 -729 (-4.56736e-220)}
; Y = -1.5872251177232161722940873005427420139312744140625p-773 {- 2644626821360872 -773 (-3.19486e-233)}
; -1.2898298529840186432693371898494660854339599609375p-729 / -1.5872251177232161722940873005427420139312744140625p-773 == 1.6252639132049597758822301329928450286388397216796875p43
; [HW: 1.6252639132049597758822301329928450286388397216796875p43] 

; mpf : + 2815938326518075 43
; mpfd: + 2815938326518075 43 (1.4296e+013) class: Pos. norm. non-zero
; hwf : + 2815938326518075 43 (1.4296e+013) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100110 #b0100101000110010010010100000101111111000100010011000)))
(assert (= y (fp #b1 #b00011111010 #b1001011001010100011000101010010000000010110011101000)))
(assert (= r (fp #b0 #b10000101010 #b1010000000010001010010111011101010010101100100111011)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
