(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.866430180067130351062587578780949115753173828125p565 {- 3902054636092880 565 (-2.25403e+170)}
; Y = -1.6467989991197822252644300533575005829334259033203125p449 {- 2912923731419461 449 (-2.39391e+135)}
; -1.866430180067130351062587578780949115753173828125p565 / -1.6467989991197822252644300533575005829334259033203125p449 == 1.13336854167675671334336584550328552722930908203125p116
; [HW: 1.13336854167675671334336584550328552722930908203125p116] 

; mpf : + 600638514598388 116
; mpfd: + 600638514598388 116 (9.41566e+034) class: Pos. norm. non-zero
; hwf : + 600638514598388 116 (9.41566e+034) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110100 #b1101110111001110010111100100011110100111110111010000)))
(assert (= y (fp #b1 #b10111000000 #b1010010110010100100111101000010001001110000101000101)))
(assert (= r (fp #b0 #b10001110011 #b0010001000100100011100001101010011010001000111110100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
