(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.98736566434060346608703184756450355052947998046875p233 {+ 4446699638002764 233 (2.74326e+070)}
; Y = -1.232990394669820855000352821662090718746185302734375p1000 {- 1049295454615910 1000 (-1.32116e+301)}
; 1.98736566434060346608703184756450355052947998046875p233 / -1.232990394669820855000352821662090718746185302734375p1000 == -1.611825747330979385907312462222762405872344970703125p-767
; [HW: -1.611825747330979385907312462222762405872344970703125p-767] 

; mpf : - 2755418207695474 -767
; mpfd: - 2755418207695474 -767 (-2.0764e-231) class: Neg. norm. non-zero
; hwf : - 2755418207695474 -767 (-2.0764e-231) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101000 #b1111110011000011111111110000010110001001010001001100)))
(assert (= y (fp #b1 #b11111100111 #b0011101110100101010000100010110101100011100101100110)))
(assert (= r (fp #b1 #b00100000000 #b1001110010100000100111001011011110100011001001110010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
