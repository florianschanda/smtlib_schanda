(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.547829937646764353331718666595406830310821533203125p-249 {- 2467206703048370 -249 (-1.71102e-075)}
; Y = -1.0839679316557699895184896377031691372394561767578125p-46 {- 378157945715997 -46 (-1.54041e-014)}
; -1.547829937646764353331718666595406830310821533203125p-249 / -1.0839679316557699895184896377031691372394561767578125p-46 == 1.4279296392859530673291601488017477095127105712890625p-203
; [HW: 1.4279296392859530673291601488017477095127105712890625p-203] 

; mpf : + 1927223764029009 -203
; mpfd: + 1927223764029009 -203 (1.11075e-061) class: Pos. norm. non-zero
; hwf : + 1927223764029009 -203 (1.11075e-061) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000110 #b1000110000111110100101010011000111110110011010110010)))
(assert (= y (fp #b1 #b01111010001 #b0001010101111110111011000010000001011111110100011101)))
(assert (= r (fp #b0 #b01100110100 #b0110110110001100110010111111110110111000111001010001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
