(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.07799989080546776420987953315488994121551513671875p-280 {+ 351280279166444 -280 (5.54907e-085)}
; Y = 1.6676396199443923595850947094731964170932769775390625p81 {+ 3006781543599345 81 (4.03211e+024)}
; 1.07799989080546776420987953315488994121551513671875p-280 / 1.6676396199443923595850947094731964170932769775390625p81 == 1.2928451422153350858224030162091366946697235107421875p-362
; [HW: 1.2928451422153350858224030162091366946697235107421875p-362] 

; mpf : + 1318857273358243 -362
; mpfd: + 1318857273358243 -362 (1.37622e-109) class: Pos. norm. non-zero
; hwf : + 1318857273358243 -362 (1.37622e-109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100111 #b0001001111110111110011010000010000011001110111101100)))
(assert (= y (fp #b0 #b10001010000 #b1010101011101010011011100001110100101100110011110001)))
(assert (= r (fp #b0 #b01010010101 #b0100101011110111111001100011010010011011011110100011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
