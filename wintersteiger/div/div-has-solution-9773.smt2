(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4133011227844252122309853803017176687717437744140625p-653 {+ 1861342782563745 -653 (3.78136e-197)}
; Y = 1.2710752776896361293523796121007762849330902099609375p-861 {+ 1220814519592399 -861 (8.26694e-260)}
; 1.4133011227844252122309853803017176687717437744140625p-653 / 1.2710752776896361293523796121007762849330902099609375p-861 == 1.111894116415595323843490405124612152576446533203125p208
; [HW: 1.111894116415595323843490405124612152576446533203125p208] 

; mpf : + 503926300994226 208
; mpfd: + 503926300994226 208 (4.57407e+062) class: Pos. norm. non-zero
; hwf : + 503926300994226 208 (4.57407e+062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110010 #b0110100111001110000110100011010111000010010110100001)))
(assert (= y (fp #b0 #b00010100010 #b0100010101100101001100000111110001101110010111001111)))
(assert (= r (fp #b0 #b10011001111 #b0001110010100101000101111100001010011110101010110010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
