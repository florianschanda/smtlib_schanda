(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.518858932463376110177932787337340414524078369140625p702 {+ 2336732894899914 702 (3.19576e+211)}
; Y = 1.783416353898720441151226623333059251308441162109375p20 {+ 3528193599494230 20 (1.87005e+006)}
; 1.518858932463376110177932787337340414524078369140625p702 / 1.783416353898720441151226623333059251308441162109375p20 == 1.703313899912382911594477263861335813999176025390625p681
; [HW: 1.703313899912382911594477263861335813999176025390625p681] 

; mpf : + 3167444217569898 681
; mpfd: + 3167444217569898 681 (1.70892e+205) class: Pos. norm. non-zero
; hwf : + 3167444217569898 681 (1.70892e+205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111101 #b1000010011010011111100000110001000101010111011001010)))
(assert (= y (fp #b0 #b10000010011 #b1100100010001101111110010110001100100101100001010110)))
(assert (= r (fp #b0 #b11010101000 #b1011010000001100011000010011011011110010001001101010)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
