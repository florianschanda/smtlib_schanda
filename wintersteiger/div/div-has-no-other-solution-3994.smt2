(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5293305100506511262636877290788106620311737060546875p-910 {- 2383892687819947 -910 (-1.76687e-274)}
; Y = -1.0827520848938687603180142104974947869777679443359375p-165 {- 372682258692159 -165 (-2.31515e-050)}
; -1.5293305100506511262636877290788106620311737060546875p-910 / -1.0827520848938687603180142104974947869777679443359375p-165 == 1.4124475319764042691161876064143143594264984130859375p-745
; [HW: 1.4124475319764042691161876064143143594264984130859375p-745] 

; mpf : + 1857498551318815 -745
; mpfd: + 1857498551318815 -745 (7.63177e-225) class: Pos. norm. non-zero
; hwf : + 1857498551318815 -745 (7.63177e-225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110001 #b1000011110000010001101000100110101110001010010101011)))
(assert (= y (fp #b1 #b01101011010 #b0001010100101111001111011001101001001011100000111111)))
(assert (= r (fp #b0 #b00100010110 #b0110100110010110001010010101010100100111100100011111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
