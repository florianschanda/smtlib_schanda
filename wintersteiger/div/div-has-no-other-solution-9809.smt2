(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0972466235555611291374589200131595134735107421875p-286 {+ 437959857607864 -286 (8.82522e-087)}
; Y = 1.910430178738791173742583850980736315250396728515625p227 {+ 4100213013714874 227 (4.12041e+068)}
; 1.0972466235555611291374589200131595134735107421875p-286 / 1.910430178738791173742583850980736315250396728515625p227 == 1.1486906307980648822564262445666827261447906494140625p-514
; [HW: 1.1486906307980648822564262445666827261447906494140625p-514] 

; mpf : + 669643069455649 -514
; mpfd: + 669643069455649 -514 (2.14183e-155) class: Pos. norm. non-zero
; hwf : + 669643069455649 -514 (2.14183e-155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100001 #b0001100011100101001001111001101111010001010010111000)))
(assert (= y (fp #b0 #b10011100010 #b1110100100010001111100111100001011111001011110111010)))
(assert (= r (fp #b0 #b00111111101 #b0010011000010000100101101101010001111111110100100001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
