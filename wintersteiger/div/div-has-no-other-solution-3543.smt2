(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.658414274789468567661288034287281334400177001953125p-52 {- 2965234282597266 -52 (-3.68242e-016)}
; Y = -1.1239485436636063031556886926409788429737091064453125p-839 {- 558214615056533 -839 (-3.06606e-253)}
; -1.658414274789468567661288034287281334400177001953125p-52 / -1.1239485436636063031556886926409788429737091064453125p-839 == 1.4755250888832736055888972259708680212497711181640625p787
; [HW: 1.4755250888832736055888972259708680212497711181640625p787] 

; mpf : + 2141574613100033 787
; mpfd: + 2141574613100033 787 (1.20103e+237) class: Pos. norm. non-zero
; hwf : + 2141574613100033 787 (1.20103e+237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001011 #b1010100010001101110101101000000101110000101110010010)))
(assert (= y (fp #b1 #b00010111000 #b0001111110111011000101110111110101101100000010010101)))
(assert (= r (fp #b0 #b11100010010 #b0111100110111100000000110010000100101110011000000001)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
