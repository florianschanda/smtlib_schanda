(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1725700733906567752029559414950199425220489501953125p565 {- 777186518217461 565 (-1.41608e+170)}
; Y = -1.918723970428670266841209013364277780055999755859375p-822 {- 4137564930878902 -822 (-6.8605e-248)}
; -1.1725700733906567752029559414950199425220489501953125p565 / -1.918723970428670266841209013364277780055999755859375p-822 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110100 #b0010110000101101100011010110010101111011001011110101)))
(assert (= y (fp #b1 #b00011001001 #b1110101100110001011111100111111100001010110110110110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
