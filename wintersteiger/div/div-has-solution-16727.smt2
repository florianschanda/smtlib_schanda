(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0052180914307626835579867474734783172607421875p716 {- 23500194623168 716 (-3.46527e+215)}
; Y = 1.4103694100893851004485668454435653984546661376953125p920 {+ 1848139522362805 920 (1.25005e+277)}
; -1.0052180914307626835579867474734783172607421875p716 / 1.4103694100893851004485668454435653984546661376953125p920 == -1.425467801896036501574371868628077208995819091796875p-205
; [HW: -1.425467801896036501574371868628077208995819091796875p-205] 

; mpf : - 1916136634077134 -205
; mpfd: - 1916136634077134 -205 (-2.7721e-062) class: Neg. norm. non-zero
; hwf : - 1916136634077134 -205 (-2.7721e-062) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001011 #b0000000101010101111110010000110000001010111011000000)))
(assert (= y (fp #b0 #b11110010111 #b0110100100001101111110000011101110011100110110110101)))
(assert (= r (fp #b1 #b01100110010 #b0110110011101011011101010011011010100100111111001110)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
