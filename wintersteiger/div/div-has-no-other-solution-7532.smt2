(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4061204690825073182480764444335363805294036865234375p544 {+ 1829003993227511 544 (8.0973e+163)}
; Y = -1.340592995744676496627789674676023423671722412109375p-279 {- 1533894488720726 -279 (-1.38016e-084)}
; 1.4061204690825073182480764444335363805294036865234375p544 / -1.340592995744676496627789674676023423671722412109375p-279 == -1.0488794686723179605536415692768059670925140380859375p823
; [HW: -1.0488794686723179605536415692768059670925140380859375p823] 

; mpf : - 220133556898719 823
; mpfd: - 220133556898719 823 (-5.86694e+247) class: Neg. norm. non-zero
; hwf : - 220133556898719 823 (-5.86694e+247) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011111 #b0110011111110111100000101101010011110010000011110111)))
(assert (= y (fp #b1 #b01011101000 #b0101011100110001000110100100000111111000010101010110)))
(assert (= r (fp #b1 #b11100110110 #b0000110010000011010111010110011101100100101110011111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
