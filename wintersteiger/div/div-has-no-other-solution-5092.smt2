(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.787138583386266521557672604103572666645050048828125p36 {- 3544957030827330 36 (-1.22811e+011)}
; Y = -1.8261074969323776162610784012940712273120880126953125p-623 {- 3720457415352629 -623 (-5.24613e-188)}
; -1.787138583386266521557672604103572666645050048828125p36 / -1.8261074969323776162610784012940712273120880126953125p-623 == 1.9573202414298458418073778375401161611080169677734375p658
; [HW: 1.9573202414298458418073778375401161611080169677734375p658] 

; mpf : + 4311387082577687 658
; mpfd: + 4311387082577687 658 (2.34099e+198) class: Pos. norm. non-zero
; hwf : + 4311387082577687 658 (2.34099e+198) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100011 #b1100100110000001111010100000100100010000010101000010)))
(assert (= y (fp #b1 #b00110010000 #b1101001101111011110001111110101001001110000100110101)))
(assert (= r (fp #b0 #b11010010001 #b1111010100010010111100000111100010111101011100010111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
