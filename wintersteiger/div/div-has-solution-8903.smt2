(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.073953394929333615692712555755861103534698486328125p32 {+ 333056481846530 32 (4.61259e+009)}
; Y = 1.4746631005606560815834882305352948606014251708984375p654 {+ 2137692562811495 654 (1.10233e+197)}
; 1.073953394929333615692712555755861103534698486328125p32 / 1.4746631005606560815834882305352948606014251708984375p654 == 1.4565406763362076514312093422631733119487762451171875p-623
; [HW: 1.4565406763362076514312093422631733119487762451171875p-623] 

; mpf : + 2056076419827219 -623
; mpfd: + 2056076419827219 -623 (4.18442e-188) class: Pos. norm. non-zero
; hwf : + 2056076419827219 -623 (4.18442e-188) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011111 #b0001001011101110100111000001010010100110010100000010)))
(assert (= y (fp #b0 #b11010001101 #b0111100110000011100001010101110110000110101001100111)))
(assert (= r (fp #b0 #b00110010000 #b0111010011011111110110011000101000101000011000010011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
