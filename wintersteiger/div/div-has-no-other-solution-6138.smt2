(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1580789358336376349001284324913285672664642333984375p-720 {- 711924236515495 -720 (-2.09962e-217)}
; Y = 1.26711043022867908547368642757646739482879638671875p-847 {+ 1202958434044652 -847 (1.35023e-255)}
; -1.1580789358336376349001284324913285672664642333984375p-720 / 1.26711043022867908547368642757646739482879638671875p-847 == -1.8279053004474687948999189757159911096096038818359375p126
; [HW: -1.8279053004474687948999189757159911096096038818359375p126] 

; mpf : - 3728554002593279 126
; mpfd: - 3728554002593279 126 (-1.55501e+038) class: Neg. norm. non-zero
; hwf : - 3728554002593279 126 (-1.55501e+038) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101111 #b0010100001110111110111000111001110010111100010100111)))
(assert (= y (fp #b0 #b00010110000 #b0100010001100001010110010110001001000000101011101100)))
(assert (= r (fp #b1 #b10001111101 #b1101001111110001100110100000110110011011010111111111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
