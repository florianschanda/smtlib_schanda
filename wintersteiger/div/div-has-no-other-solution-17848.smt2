(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.573216947436325341413976275362074375152587890625p-202 {+ 2581539630876688 -202 (2.44754e-061)}
; Y = 1.0257487080211771246496255116653628647327423095703125p-58 {+ 115961871849445 -58 (3.55878e-018)}
; 1.573216947436325341413976275362074375152587890625p-202 / 1.0257487080211771246496255116653628647327423095703125p-58 == 1.533725497418657823800458572804927825927734375p-144
; [HW: 1.533725497418657823800458572804927825927734375p-144] 

; mpf : + 2403685951292800 -144
; mpfd: + 2403685951292800 -144 (6.87746e-044) class: Pos. norm. non-zero
; hwf : + 2403685951292800 -144 (6.87746e-044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100110101 #b1001001010111110010110001000101011000000100000010000)))
(assert (= y (fp #b0 #b01111000101 #b0000011010010111011101111010001011011101011111100101)))
(assert (= r (fp #b0 #b01101101111 #b1000100010100010001110111111010001110100010110000000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
