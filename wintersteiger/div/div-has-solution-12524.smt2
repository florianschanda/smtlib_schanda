(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.831561498315384284296669648028910160064697265625p-536 {- 3745020053948816 -536 (-8.14224e-162)}
; Y = -1.596139029452991575652731626178137958049774169921875p298 {- 2684771510905502 298 (-8.12848e+089)}
; -1.831561498315384284296669648028910160064697265625p-536 / -1.596139029452991575652731626178137958049774169921875p298 == 1.1474949641091563012906817675684578716754913330078125p-834
; [HW: 1.1474949641091563012906817675684578716754913330078125p-834] 

; mpf : + 664258265401021 -834
; mpfd: + 664258265401021 -834 (1.00169e-251) class: Pos. norm. non-zero
; hwf : + 664258265401021 -834 (1.00169e-251) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111100111 #b1101010011100001001101101101111111100000100110010000)))
(assert (= y (fp #b1 #b10100101001 #b1001100010011100100100010100001101011110101010011110)))
(assert (= r (fp #b0 #b00010111101 #b0010010111000010001110101101111100101100011010111101)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
