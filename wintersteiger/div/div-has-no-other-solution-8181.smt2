(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1659653798182976203179350704886019229888916015625p228 {- 747441622706088 228 (-5.0295e+068)}
; Y = 1.148521817681622980700240077567286789417266845703125p-649 {+ 668882802767346 -649 (4.91668e-196)}
; -1.1659653798182976203179350704886019229888916015625p228 / 1.148521817681622980700240077567286789417266845703125p-649 == -1.0151878369815261482500545753282494843006134033203125p877
; [HW: -1.0151878369815261482500545753282494843006134033203125p877] 

; mpf : - 68399936970565 877
; mpfd: - 68399936970565 877 (-1.02295e+264) class: Neg. norm. non-zero
; hwf : - 68399936970565 877 (-1.02295e+264) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100011 #b0010101001111100101101010000011010010110011110101000)))
(assert (= y (fp #b0 #b00101110110 #b0010011000000101100001101001110110101111010111110010)))
(assert (= r (fp #b1 #b11101101100 #b0000001111100011010110011001111100100001111101000101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
