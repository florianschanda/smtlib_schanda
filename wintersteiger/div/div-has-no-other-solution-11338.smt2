(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.855167826757489368816322894417680799961090087890625p-787 {- 3851333505924266 -787 (-2.27917e-237)}
; Y = 1.309631036023528150025185823324136435985565185546875p430 {+ 1394454218457902 430 (3.63117e+129)}
; -1.855167826757489368816322894417680799961090087890625p-787 / 1.309631036023528150025185823324136435985565185546875p430 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101100 #b1101101011101100010001110101100010000011110010101010)))
(assert (= y (fp #b0 #b10110101101 #b0100111101000011111110101100010110001100001100101110)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
