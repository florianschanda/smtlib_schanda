(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.596390053826810540016367667703889310359954833984375p136 {+ 2685902024181894 136 (1.39065e+041)}
; Y = -1.53244978197394576824308387585915625095367431640625p-281 {- 2397940639691364 -281 (-3.94419e-085)}
; 1.596390053826810540016367667703889310359954833984375p136 / -1.53244978197394576824308387585915625095367431640625p-281 == -1.0417242200070682134338539981399662792682647705078125p417
; [HW: -1.0417242200070682134338539981399662792682647705078125p417] 

; mpf : - 187909181676157 417
; mpfd: - 187909181676157 417 (-3.52583e+125) class: Neg. norm. non-zero
; hwf : - 187909181676157 417 (-3.52583e+125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000111 #b1001100010101101000001001100000011011000100010000110)))
(assert (= y (fp #b1 #b01011100110 #b1000100001001110101000010000000001010111001001100100)))
(assert (= r (fp #b1 #b10110100000 #b0000101010101110011100000100000001100001101001111101)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
