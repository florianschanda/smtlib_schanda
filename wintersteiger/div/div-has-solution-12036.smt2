(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.058036314171833414121692840126343071460723876953125p-666 {- 261372322878226 -666 (-3.4556e-201)}
; Y = -1.393939657799920350811362368403933942317962646484375p-873 {- 1774146496074182 -873 (-2.21339e-263)}
; -1.058036314171833414121692840126343071460723876953125p-666 / -1.393939657799920350811362368403933942317962646484375p-873 == 1.5180518155882740671813735389150679111480712890625p206
; [HW: 1.5180518155882740671813735389150679111480712890625p206] 

; mpf : + 2333097963641960 206
; mpfd: + 2333097963641960 206 (1.56123e+062) class: Pos. norm. non-zero
; hwf : + 2333097963641960 206 (1.56123e+062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100101 #b0000111011011011011101111100011101011001001100010010)))
(assert (= y (fp #b1 #b00010010110 #b0110010011011001001110101011101011011001000111000110)))
(assert (= r (fp #b0 #b10011001101 #b1000010010011111000010110011010110010101110001101000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
