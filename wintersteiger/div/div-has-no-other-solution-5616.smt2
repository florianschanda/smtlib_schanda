(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9899416322205050189353414680226705968379974365234375p766 {- 4458300765986807 766 (-7.72355e+230)}
; Y = -1.9152121990009167706858761448529548943042755126953125p-65 {- 4121749318385461 -65 (-5.19119e-020)}
; -1.9899416322205050189353414680226705968379974365234375p766 / -1.9152121990009167706858761448529548943042755126953125p-65 == 1.0390188790874301805189361402881331741809844970703125p831
; [HW: 1.0390188790874301805189361402881331741809844970703125p831] 

; mpf : + 175725409318565 831
; mpfd: + 175725409318565 831 (1.48782e+250) class: Pos. norm. non-zero
; hwf : + 175725409318565 831 (1.48782e+250) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111101 #b1111110101101100110100001001011101010101111111110111)))
(assert (= y (fp #b1 #b01110111110 #b1110101001001011010110001011111110011011111100110101)))
(assert (= r (fp #b0 #b11100111110 #b0000100111111101001001000010100110011011011010100101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
