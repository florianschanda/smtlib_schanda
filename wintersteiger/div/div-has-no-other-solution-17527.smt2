(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5925922374703109785087917771306820213794708251953125p201 {+ 2668798179853941 201 (5.11839e+060)}
; Y = 1.7116552040148327318291876508737914264202117919921875p374 {+ 3205010111617475 374 (6.5862e+112)}
; 1.5925922374703109785087917771306820213794708251953125p201 / 1.7116552040148327318291876508737914264202117919921875p374 == 1.860879730607835735867183757363818585872650146484375p-174
; [HW: 1.860879730607835735867183757363818585872650146484375p-174] 

; mpf : + 3877057633976262 -174
; mpfd: + 3877057633976262 -174 (7.7714e-053) class: Pos. norm. non-zero
; hwf : + 3877057633976262 -174 (7.7714e-053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011001000 #b1001011110110100000111111111011111001100011001110101)))
(assert (= y (fp #b0 #b10101110101 #b1011011000101111000010010001001101000101100111000011)))
(assert (= r (fp #b0 #b01101010001 #b1101110001100010100111010011000010111111111111000110)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
