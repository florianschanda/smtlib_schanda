(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7354336638996061825679362300434149801731109619140625p-543 {- 3312098774693985 -543 (-6.02727e-164)}
; Y = -1.7953022089863086563354954705573618412017822265625p-599 {- 3581722732037672 -599 (-8.65307e-181)}
; -1.7354336638996061825679362300434149801731109619140625p-543 / -1.7953022089863086563354954705573618412017822265625p-599 == 1.933305329000284178420088210259564220905303955078125p55
; [HW: 1.933305329000284178420088210259564220905303955078125p55] 

; mpf : + 4203233531908578 55
; mpfd: + 4203233531908578 55 (6.96547e+016) class: Pos. norm. non-zero
; hwf : + 4203233531908578 55 (6.96547e+016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111100000 #b1011110001000101011000010110111011010011100001100001)))
(assert (= y (fp #b1 #b00110101000 #b1100101110011000111011001111001000001000011000101000)))
(assert (= r (fp #b0 #b10000110110 #b1110111011101101000110010001100100111101000111100010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
