(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.794362292798897140500002933549694716930389404296875p900 {- 3577489725846286 900 (-1.51672e+271)}
; Y = 1.3803631274792278471608142353943549096584320068359375p-918 {+ 1713003239180927 -918 (6.22956e-277)}
; -1.794362292798897140500002933549694716930389404296875p900 / 1.3803631274792278471608142353943549096584320068359375p-918 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110000011 #b1100101101011011010100111100010010111111001100001110)))
(assert (= y (fp #b0 #b00001101001 #b0110000101011111011110100101100100100000101001111111)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
