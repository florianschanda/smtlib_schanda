(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6050531235892275816468099947087466716766357421875p-336 {+ 2724917021935800 -336 (1.1466e-101)}
; Y = -1.121284389547670290454561836668290197849273681640625p-341 {- 546216331572746 -341 (-2.50315e-103)}
; 1.6050531235892275816468099947087466716766357421875p-336 / -1.121284389547670290454561836668290197849273681640625p-341 == -1.4314416026399074954866819098242558538913726806640625p5
; [HW: -1.4314416026399074954866819098242558538913726806640625p5] 

; mpf : - 1943040240881217 5
; mpfd: - 1943040240881217 5 (-45.8061) class: Neg. norm. non-zero
; hwf : - 1943040240881217 5 (-45.8061) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101111 #b1001101011100100110000101111001000101000100010111000)))
(assert (= y (fp #b1 #b01010101010 #b0001111100001100011111100110011010011111011000001010)))
(assert (= r (fp #b1 #b10000000100 #b0110111001110010111101001111010101111000111001000001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
