(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.756541941044903243351882338174618780612945556640625p-575 {- 3407162003779978 -575 (-1.4204e-173)}
; Y = -1.221506552939282119751851496403105556964874267578125p-429 {- 997576829277474 -429 (-8.81105e-130)}
; -1.756541941044903243351882338174618780612945556640625p-575 / -1.221506552939282119751851496403105556964874267578125p-429 == 1.4380127039172883041118211622233502566814422607421875p-146
; [HW: 1.4380127039172883041118211622233502566814422607421875p-146] 

; mpf : + 1972633850145443 -146
; mpfd: + 1972633850145443 -146 (1.61207e-044) class: Pos. norm. non-zero
; hwf : + 1972633850145443 -146 (1.61207e-044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111000000 #b1100000110101100101110111000111011010111000110001010)))
(assert (= y (fp #b1 #b01001010010 #b0011100010110100101001110100100010111001010100100010)))
(assert (= r (fp #b0 #b01101101101 #b0111000000100001100110011011111010001110101010100011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
