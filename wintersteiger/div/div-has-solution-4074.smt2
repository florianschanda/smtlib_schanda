(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.97329013510334672076851347810588777065277099609375p-714 {- 4383309089774812 -714 (-2.28968e-215)}
; Y = 1.0952316057901219092940436894423328340053558349609375p86 {+ 428885024350287 86 (8.47394e+025)}
; -1.97329013510334672076851347810588777065277099609375p-714 / 1.0952316057901219092940436894423328340053558349609375p86 == -1.801710363973449968710838220431469380855560302734375p-800
; [HW: -1.801710363973449968710838220431469380855560302734375p-800] 

; mpf : - 3610582496449894 -800
; mpfd: - 3610582496449894 -800 (-2.70202e-241) class: Neg. norm. non-zero
; hwf : - 3610582496449894 -800 (-2.70202e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110101 #b1111100100101001100010101101001111001001110011011100)))
(assert (= y (fp #b0 #b10001010101 #b0001100001100001000110010011100001101010000001001111)))
(assert (= r (fp #b1 #b00011011111 #b1100110100111100111000111111001000100001010101100110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
