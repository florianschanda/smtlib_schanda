(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.061052653442748461287692407495342195034027099609375p-879 {+ 274956707294742 -879 (2.63251e-265)}
; Y = 1.509572922835236141736459103412926197052001953125p-539 {+ 2294912425398864 -539 (8.38854e-163)}
; 1.061052653442748461287692407495342195034027099609375p-879 / 1.509572922835236141736459103412926197052001953125p-539 == 1.4057653491159738390336997326812706887722015380859375p-341
; [HW: 1.4057653491159738390336997326812706887722015380859375p-341] 

; mpf : + 1827404675078559 -341
; mpfd: + 1827404675078559 -341 (3.13823e-103) class: Pos. norm. non-zero
; hwf : + 1827404675078559 -341 (3.13823e-103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010010000 #b0000111110100001001001011000110111011110111000010110)))
(assert (= y (fp #b0 #b00111100100 #b1000001001110011010111101111111010000001001001010000)))
(assert (= r (fp #b0 #b01010101010 #b0110011111100000001111001110100001001101100110011111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
