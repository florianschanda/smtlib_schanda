(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.52385488820191294934147663298062980175018310546875p247 {- 2359232679302348 247 (-3.4463e+074)}
; Y = -1.5274995745419766013384332836722023785114288330078125p504 {- 2375646887345341 504 (-8.00016e+151)}
; -1.52385488820191294934147663298062980175018310546875p247 / -1.5274995745419766013384332836722023785114288330078125p504 == 1.99522790526320559223449890851043164730072021484375p-258
; [HW: 1.99522790526320559223449890851043164730072021484375p-258] 

; mpf : + 4482108023292092 -258
; mpfd: + 4482108023292092 -258 (4.30778e-078) class: Pos. norm. non-zero
; hwf : + 4482108023292092 -258 (4.30778e-078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110110 #b1000011000011011010110101001110010101101010011001100)))
(assert (= y (fp #b1 #b10111110111 #b1000011100001010001101100100110101001111110010111101)))
(assert (= r (fp #b0 #b01011111101 #b1111111011000111010000011000100100101100000010111100)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
