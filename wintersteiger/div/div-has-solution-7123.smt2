(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.429195144333929246016623437753878533840179443359375p-975 {+ 1932923092091510 -975 (4.47554e-294)}
; Y = -1.401865008099040021960490776109509170055389404296875p258 {- 1809839100728078 258 (-6.493e+077)}
; 1.429195144333929246016623437753878533840179443359375p-975 / -1.401865008099040021960490776109509170055389404296875p258 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110000 #b0110110111011111101110111010010010000100001001110110)))
(assert (= y (fp #b1 #b10100000001 #b0110011011100000101000000000101100110001001100001110)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
