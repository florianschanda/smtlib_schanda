(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.259735912568278326517656751093454658985137939453125p365 {- 1169746559057234 365 (-9.46734e+109)}
; Y = 1.2856766349528110371380762444459833204746246337890625p288 {+ 1286573186721937 288 (6.39397e+086)}
; -1.259735912568278326517656751093454658985137939453125p365 / 1.2856766349528110371380762444459833204746246337890625p288 == -1.9596465834731688904213342539151199162006378173828125p76
; [HW: -1.9596465834731688904213342539151199162006378173828125p76] 

; mpf : - 4321863995737133 76
; mpfd: - 4321863995737133 76 (-1.48067e+023) class: Neg. norm. non-zero
; hwf : - 4321863995737133 76 (-1.48067e+023) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101100 #b0100001001111110000011011000001000010011110101010010)))
(assert (= y (fp #b0 #b10100011111 #b0100100100100010000110101001110001011010100010010001)))
(assert (= r (fp #b1 #b10001001011 #b1111010110101011011001100000001110111100010000101101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
