(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1107648127635290080661434330977499485015869140625p838 {+ 498840369487592 838 (2.03591e+252)}
; Y = 1.223505503453917508949189141276292502880096435546875p-121 {+ 1006579302070318 -121 (4.60232e-037)}
; 1.1107648127635290080661434330977499485015869140625p838 / 1.223505503453917508949189141276292502880096435546875p-121 == 1.815708731391685315514905596501193940639495849609375p958
; [HW: 1.815708731391685315514905596501193940639495849609375p958] 

; mpf : + 3673625538738454 958
; mpfd: + 3673625538738454 958 (4.42366e+288) class: Pos. norm. non-zero
; hwf : + 3673625538738454 958 (4.42366e+288) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000101 #b0001110001011011000101010011000001011101111011101000)))
(assert (= y (fp #b0 #b01110000110 #b0011100100110111101010000001101111001111100000101110)))
(assert (= r (fp #b0 #b11110111101 #b1101000011010010010010011001010001100011100100010110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
