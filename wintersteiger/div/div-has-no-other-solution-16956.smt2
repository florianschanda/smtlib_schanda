(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2052745063421694826644170461804606020450592041015625p456 {+ 924474190271257 456 (2.24266e+137)}
; Y = 1.747881890650436975676029760506935417652130126953125p-1014 {+ 3368160604050450 -1014 (9.95627e-306)}
; 1.2052745063421694826644170461804606020450592041015625p456 / 1.747881890650436975676029760506935417652130126953125p-1014 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000111 #b0011010010001100110111101011101101110001001100011001)))
(assert (= y (fp #b0 #b00000001001 #b1011111101110101001100000000010110011101010000010010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
