(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9681061196231866006201016716659069061279296875p-68 {- 4359962359590080 -68 (-6.6682e-021)}
; Y = 1.4429275667788596937413103660219348967075347900390625p225 {+ 1994768424697393 225 (7.78025e+067)}
; -1.9681061196231866006201016716659069061279296875p-68 / 1.4429275667788596937413103660219348967075347900390625p225 == -1.363967370875529550033888881443999707698822021484375p-293
; [HW: -1.363967370875529550033888881443999707698822021484375p-293] 

; mpf : - 1639163315850054 -293
; mpfd: - 1639163315850054 -293 (-8.57068e-089) class: Neg. norm. non-zero
; hwf : - 1639163315850054 -293 (-8.57068e-089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111011 #b1111011111010101110011010111101011010110110011000000)))
(assert (= y (fp #b0 #b10011100000 #b0111000101100011101100110111010111001111111000110001)))
(assert (= r (fp #b1 #b01011011010 #b0101110100101100111101110011001010111000101101000110)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
