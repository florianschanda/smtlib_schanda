(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3581918597660933567539132127421908080577850341796875p426 {+ 1613152726169723 426 (2.35364e+128)}
; Y = 1.1677853412241301356289113755337893962860107421875p-861 {+ 755638000215224 -861 (7.59516e-260)}
; 1.3581918597660933567539132127421908080577850341796875p426 / 1.1677853412241301356289113755337893962860107421875p-861 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101001 #b0101101110110010011101100011001101100011100001111011)))
(assert (= y (fp #b0 #b00010100010 #b0010101011110011111110101110100101001110010010111000)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
