(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8782752090448602277916734237805940210819244384765625p249 {+ 3955399904183177 249 (1.69914e+075)}
; Y = 1.3147739710383685718397828168235719203948974609375p-471 {+ 1417615938674328 -471 (2.15637e-142)}
; 1.8782752090448602277916734237805940210819244384765625p249 / 1.3147739710383685718397828168235719203948974609375p-471 == 1.428591720264628772696369196637533605098724365234375p720
; [HW: 1.428591720264628772696369196637533605098724365234375p720] 

; mpf : + 1930205511677862 720
; mpfd: + 1930205511677862 720 (7.87962e+216) class: Pos. norm. non-zero
; hwf : + 1930205511677862 720 (7.87962e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111000 #b1110000011010110101001001110001110111100001110001001)))
(assert (= y (fp #b0 #b01000101000 #b0101000010010101000001101110011100111101111010011000)))
(assert (= r (fp #b0 #b11011001111 #b0110110110111000001011111101110111011111011110100110)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
