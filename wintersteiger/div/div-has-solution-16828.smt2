(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.792436262444294214901674422435462474822998046875p-141 {+ 3568815656258992 -141 (6.43005e-043)}
; Y = -1.42373007414205776655080626369453966617584228515625p-560 {- 1908310604011844 -560 (-3.77251e-169)}
; 1.792436262444294214901674422435462474822998046875p-141 / -1.42373007414205776655080626369453966617584228515625p-560 == -1.2589719743922802575042396711069159209728240966796875p419
; [HW: -1.2589719743922802575042396711069159209728240966796875p419] 

; mpf : - 1166306087372475 419
; mpfd: - 1166306087372475 419 (-1.70445e+126) class: Neg. norm. non-zero
; hwf : - 1166306087372475 419 (-1.70445e+126) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110010 #b1100101011011101000110100101011101011100110110110000)))
(assert (= y (fp #b1 #b00111001111 #b0110110001111001100100101111101011000101100101000100)))
(assert (= r (fp #b1 #b10110100010 #b0100001001001011111111001100000010011000011010111011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
