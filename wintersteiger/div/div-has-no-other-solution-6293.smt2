(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3833516710836863961020526403444819152355194091796875p764 {- 1726462443044347 764 (-1.3423e+230)}
; Y = -1.8087705933853757134244233384379185736179351806640625p139 {- 3642378942998593 139 (-1.26053e+042)}
; -1.3833516710836863961020526403444819152355194091796875p764 / -1.8087705933853757134244233384379185736179351806640625p139 == 1.52960433583182453531890132580883800983428955078125p624
; [HW: 1.52960433583182453531890132580883800983428955078125p624] 

; mpf : + 2385125889506004 624
; mpfd: + 2385125889506004 624 (1.06487e+188) class: Pos. norm. non-zero
; hwf : + 2385125889506004 624 (1.06487e+188) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111011 #b0110001000100011010101011100101000101011110111111011)))
(assert (= y (fp #b1 #b10010001010 #b1100111100001011100101101111000010001110100001000001)))
(assert (= r (fp #b0 #b11001101111 #b1000011110010100001001100101011000110111101011010100)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
