(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9783391390828801714718565563089214265346527099609375p276 {+ 4406047782215631 276 (2.40204e+083)}
; Y = 1.0412680187689471456025103179854340851306915283203125p-88 {+ 185854633950149 -88 (3.36452e-027)}
; 1.9783391390828801714718565563089214265346527099609375p276 / 1.0412680187689471456025103179854340851306915283203125p-88 == 1.8999326815220902719971718397573567926883697509765625p364
; [HW: 1.8999326815220902719971718397573567926883697509765625p364] 

; mpf : + 4052936489161417 364
; mpfd: + 4052936489161417 364 (7.13932e+109) class: Pos. norm. non-zero
; hwf : + 4052936489161417 364 (7.13932e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010011 #b1111101001110100011011110000111011000001111111001111)))
(assert (= y (fp #b0 #b01110100111 #b0000101010010000100010100111011011111011101111000101)))
(assert (= r (fp #b0 #b10101101011 #b1110011001100001111111001111101110111101001011001001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
