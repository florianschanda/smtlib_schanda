(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8136279326393605071388037686119787395000457763671875p160 {- 3664254454252851 160 (-2.65062e+048)}
; Y = 1.6869344955870781976869920981698669493198394775390625p-958 {+ 3093677938353905 -958 (6.92408e-289)}
; -1.8136279326393605071388037686119787395000457763671875p160 / 1.6869344955870781976869920981698669493198394775390625p-958 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011111 #b1101000001001001111010111001000111001100010100110011)))
(assert (= y (fp #b0 #b00001000001 #b1010111111011010111100000110100100001010011011110001)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
