(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.019690854747747010833336389623582363128662109375p31 {+ 88679726104560 31 (2.18977e+009)}
; Y = 1.3198884661693883746380606680759228765964508056640625p823 {+ 1440649577040577 823 (7.38284e+247)}
; 1.019690854747747010833336389623582363128662109375p31 / 1.3198884661693883746380606680759228765964508056640625p823 == 1.5451166986966982097584377697785384953022003173828125p-793
; [HW: 1.5451166986966982097584377697785384953022003173828125p-793] 

; mpf : + 2454987361123885 -793
; mpfd: + 2454987361123885 -793 (2.96602e-239) class: Pos. norm. non-zero
; hwf : + 2454987361123885 -793 (2.96602e-239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011110 #b0000010100001010011101011011100100101011111111110000)))
(assert (= y (fp #b0 #b11100110110 #b0101000111100100001101011110010010010000101011000001)))
(assert (= r (fp #b0 #b00011100110 #b1000101110001100110001001001100101100111111000101101)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
