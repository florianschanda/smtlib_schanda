(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8576825381954045202093084299121983349323272705078125p-29 {- 3862658759419005 -29 (-3.4602e-009)}
; Y = 1.5698091154786111278696125737042166292667388916015625p299 {+ 2566192120141785 299 (1.59888e+090)}
; -1.8576825381954045202093084299121983349323272705078125p-29 / 1.5698091154786111278696125737042166292667388916015625p299 == -1.18338116391241943148315840517170727252960205078125p-328
; [HW: -1.18338116391241943148315840517170727252960205078125p-328] 

; mpf : - 825875341462740 -328
; mpfd: - 825875341462740 -328 (-2.16414e-099) class: Neg. norm. non-zero
; hwf : - 825875341462740 -328 (-2.16414e-099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100010 #b1101101110010001000101010011001111100110010001111101)))
(assert (= y (fp #b0 #b10100101010 #b1001000111011111000000101001101111110001011111011001)))
(assert (= r (fp #b1 #b01010110111 #b0010111011110010000100010110010110110100110011010100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
