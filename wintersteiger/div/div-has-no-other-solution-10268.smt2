(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8301827520740381327613022222067229449748992919921875p-459 {- 3738810732890051 -459 (-1.22949e-138)}
; Y = -1.2350590858900554191990295294090174138545989990234375p-141 {- 1058612011624503 -141 (-4.43056e-043)}
; -1.8301827520740381327613022222067229449748992919921875p-459 / -1.2350590858900554191990295294090174138545989990234375p-141 == 1.481858457609825041600970507715828716754913330078125p-318
; [HW: 1.481858457609825041600970507715828716754913330078125p-318] 

; mpf : + 2170097570136930 -318
; mpfd: + 2170097570136930 -318 (2.77503e-096) class: Pos. norm. non-zero
; hwf : + 2170097570136930 -318 (2.77503e-096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110100 #b1101010010000110110110110101100111011100011111000011)))
(assert (= y (fp #b1 #b01101110010 #b0011110000101100110101010000111010000110100000110111)))
(assert (= r (fp #b0 #b01011000001 #b0111101101011011000100110110110010111100001101100010)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
