(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.545489639292044525831215651123784482479095458984375p986 {- 2456666936250118 986 (-1.01075e+297)}
; Y = 1.403743693901287059588867123238742351531982421875p127 {+ 1818299949407024 127 (2.38835e+038)}
; -1.545489639292044525831215651123784482479095458984375p986 / 1.403743693901287059588867123238742351531982421875p127 == -1.1009770843542077134458168075070716440677642822265625p859
; [HW: -1.1009770843542077134458168075070716440677642822265625p859] 

; mpf : - 454760359470569 859
; mpfd: - 454760359470569 859 (-4.23199e+258) class: Neg. norm. non-zero
; hwf : - 454760359470569 859 (-4.23199e+258) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111011001 #b1000101110100101001101011000000100010000111100000110)))
(assert (= y (fp #b0 #b10001111110 #b0110011101011011101111110010100101000101101100110000)))
(assert (= r (fp #b1 #b11101011010 #b0001100111011001101000100101101011110010010111101001)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
