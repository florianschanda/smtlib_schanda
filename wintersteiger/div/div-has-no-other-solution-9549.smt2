(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9429294615535024348673687200061976909637451171875p451 {+ 4246576771689016 451 (1.12976e+136)}
; Y = -1.3774345108259737902045571900089271366596221923828125p-350 {- 1699813922312621 -350 (-6.00582e-106)}
; 1.9429294615535024348673687200061976909637451171875p451 / -1.3774345108259737902045571900089271366596221923828125p-350 == -1.41054216827225520347610654425807297229766845703125p801
; [HW: -1.41054216827225520347610654425807297229766845703125p801] 

; mpf : - 1848917556050804 801
; mpfd: - 1848917556050804 801 (-1.8811e+241) class: Neg. norm. non-zero
; hwf : - 1848917556050804 801 (-1.8811e+241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000010 #b1111000101100011110100110011111111001110101000111000)))
(assert (= y (fp #b1 #b01010100001 #b0110000010011111100011000101000001100001000110101101)))
(assert (= r (fp #b1 #b11100100000 #b0110100100011001010010101010001001011011101101110100)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
