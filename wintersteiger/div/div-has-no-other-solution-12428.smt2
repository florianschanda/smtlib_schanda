(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.808994617034958451995407813228666782379150390625p-815 {+ 3643387855823376 -815 (8.27925e-246)}
; Y = 1.42652389510536448113953156280331313610076904296875p-360 {+ 1920892855061132 -360 (6.07408e-109)}
; 1.808994617034958451995407813228666782379150390625p-815 / 1.42652389510536448113953156280331313610076904296875p-360 == 1.268113785714990893183085063355974853038787841796875p-455
; [HW: 1.268113785714990893183085063355974853038787841796875p-455] 

; mpf : + 1207477145438926 -455
; mpfd: + 1207477145438926 -455 (1.36305e-137) class: Pos. norm. non-zero
; hwf : + 1207477145438926 -455 (1.36305e-137) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010000 #b1100111100011010010001010110111011001110001000010000)))
(assert (= y (fp #b0 #b01010010111 #b0110110100110000101010111000010001110000101010001100)))
(assert (= r (fp #b0 #b01000111000 #b0100010010100011000110101110010101000000101011001110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
