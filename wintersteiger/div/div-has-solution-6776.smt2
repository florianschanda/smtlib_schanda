(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2615697130503320533279065784881822764873504638671875p-337 {- 1178005262224883 -337 (-4.50612e-102)}
; Y = -1.3766012739190021108015571371652185916900634765625p45 {- 1696061356888872 45 (-4.84349e+013)}
; -1.2615697130503320533279065784881822764873504638671875p-337 / -1.3766012739190021108015571371652185916900634765625p45 == 1.8328759924198088082647473129327408969402313232421875p-383
; [HW: 1.8328759924198088082647473129327408969402313232421875p-383] 

; mpf : + 3750940009107683 -383
; mpfd: + 3750940009107683 -383 (9.30347e-116) class: Pos. norm. non-zero
; hwf : + 3750940009107683 -383 (9.30347e-116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101110 #b0100001011110110001110111001001100101100110111110011)))
(assert (= y (fp #b1 #b10000101100 #b0110000001101000111100001110101100011101001100101000)))
(assert (= r (fp #b0 #b01010000000 #b1101010100110111010111000110110100010001000011100011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
