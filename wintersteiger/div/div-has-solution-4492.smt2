(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4312124957335712327477494909544475376605987548828125p-926 {+ 1942008435103213 -926 (2.52306e-279)}
; Y = 1.1272476327145948271635234050336293876171112060546875p-946 {+ 573072391277227 -946 (1.89515e-285)}
; 1.4312124957335712327477494909544475376605987548828125p-926 / 1.1272476327145948271635234050336293876171112060546875p-946 == 1.2696522522624242856892351483111269772052764892578125p20
; [HW: 1.2696522522624242856892351483111269772052764892578125p20] 

; mpf : + 1214405782808669 20
; mpfd: + 1214405782808669 20 (1.33133e+006) class: Pos. norm. non-zero
; hwf : + 1214405782808669 20 (1.33133e+006) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001100001 #b0110111001100011111100010010111011001101010111101101)))
(assert (= y (fp #b0 #b00001001101 #b0010000010010011010011010000010100000000101010101011)))
(assert (= r (fp #b0 #b10000010011 #b0100010100000111111011100001010011000010100001011101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
