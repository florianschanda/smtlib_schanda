(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0328233307461776036006995127536356449127197265625p-476 {- 147823140117544 -476 (-5.29356e-144)}
; Y = 1.1080801497700900615228647438925690948963165283203125p638 {+ 486749722230725 638 (1.26389e+192)}
; -1.0328233307461776036006995127536356449127197265625p-476 / 1.1080801497700900615228647438925690948963165283203125p638 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100011 #b0000100001100111000111000001110000011001110000101000)))
(assert (= y (fp #b0 #b11001111101 #b0001101110101011001001000000010010011011111111000101)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
