(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.248528260429959235722208177321590483188629150390625p316 {+ 1119271781063402 316 (1.66678e+095)}
; Y = 1.6948570249033159118567937184707261621952056884765625p246 {+ 3129357838430345 246 (1.91651e+074)}
; 1.248528260429959235722208177321590483188629150390625p316 / 1.6948570249033159118567937184707261621952056884765625p246 == 1.4733139634609384582830671206465922296047210693359375p69
; [HW: 1.4733139634609384582830671206465922296047210693359375p69] 

; mpf : + 2131616589471935 69
; mpfd: + 2131616589471935 69 (8.69691e+020) class: Pos. norm. non-zero
; hwf : + 2131616589471935 69 (8.69691e+020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111011 #b0011111110011111100011000100111010101101101011101010)))
(assert (= y (fp #b0 #b10011110101 #b1011000111100010001001100110010101011011000010001001)))
(assert (= r (fp #b0 #b10001000100 #b0111100100101011000110101001100111001110000010111111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
