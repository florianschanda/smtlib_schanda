(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3330212403816832367198230713256634771823883056640625p-826 {- 1499794334089409 -826 (-2.97893e-249)}
; Y = 1.618579775876570092663087052642367780208587646484375p-327 {+ 2785835648136646 -327 (5.92005e-099)}
; -1.3330212403816832367198230713256634771823883056640625p-826 / 1.618579775876570092663087052642367780208587646484375p-327 == -1.647149260418458549537490398506633937358856201171875p-500
; [HW: -1.647149260418458549537490398506633937358856201171875p-500] 

; mpf : - 2914501168073662 -500
; mpfd: - 2914501168073662 -500 (-5.03194e-151) class: Neg. norm. non-zero
; hwf : - 2914501168073662 -500 (-5.03194e-151) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000101 #b0101010101000000111000010100100001010000000011000001)))
(assert (= y (fp #b0 #b01010111000 #b1001111001011011001111101000001101011011010111000110)))
(assert (= r (fp #b1 #b01000001011 #b1010010110101011100100101110110100100000101110111110)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
