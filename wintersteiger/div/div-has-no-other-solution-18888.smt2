(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.152772143621376699229585938155651092529296875p80 {+ 688024569085824 80 (1.39362e+024)}
; Y = 1.787116390467118787199751750449649989604949951171875p-640 {+ 3544857082804926 -640 (3.91702e-193)}
; 1.152772143621376699229585938155651092529296875p80 / 1.787116390467118787199751750449649989604949951171875p-640 == 1.2900918482651972940544737866730429232120513916015625p719
; [HW: 1.2900918482651972940544737866730429232120513916015625p719] 

; mpf : + 1306457539750361 719
; mpfd: + 1306457539750361 719 (3.55785e+216) class: Pos. norm. non-zero
; hwf : + 1306457539750361 719 (3.55785e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001111 #b0010011100011100000100110100000010010111111110000000)))
(assert (= y (fp #b0 #b00101111111 #b1100100110000000011101011011001100110011101010111110)))
(assert (= r (fp #b0 #b11011001110 #b0100101001000011011101011001100100100010100111011001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
