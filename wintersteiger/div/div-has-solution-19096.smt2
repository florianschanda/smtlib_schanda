(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.735184887350430305019699517288245260715484619140625p7 {+ 3310978384719818 7 (222.104)}
; Y = 1.368352915829982752171645188354887068271636962890625p546 {+ 1658914054472746 546 (3.15192e+164)}
; 1.735184887350430305019699517288245260715484619140625p7 / 1.368352915829982752171645188354887068271636962890625p546 == 1.268082866106178041576413306756876409053802490234375p-539
; [HW: 1.268082866106178041576413306756876409053802490234375p-539] 

; mpf : + 1207337895900198 -539
; mpfd: + 1207337895900198 -539 (7.04661e-163) class: Pos. norm. non-zero
; hwf : + 1207337895900198 -539 (7.04661e-163) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000110 #b1011110000110101000100111010011110101110111111001010)))
(assert (= y (fp #b0 #b11000100001 #b0101111001001100011000000110111011100000010000101010)))
(assert (= r (fp #b0 #b00111100100 #b0100010010100001000101000010011010001011010000100110)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
