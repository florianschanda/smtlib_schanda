(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4371754478637506213800634213839657604694366455078125p583 {- 1968863184094717 583 (-4.54985e+175)}
; Y = 1.4462463047397406956662280208547599613666534423828125p-116 {+ 2009714691741357 -116 (1.74086e-035)}
; -1.4371754478637506213800634213839657604694366455078125p583 / 1.4462463047397406956662280208547599613666534423828125p-116 == -1.9874559999271734778147902034106664359569549560546875p698
; [HW: -1.9874559999271734778147902034106664359569549560546875p698] 

; mpf : - 4447106473316779 698
; mpfd: - 4447106473316779 698 (-2.61357e+210) class: Neg. norm. non-zero
; hwf : - 4447106473316779 698 (-2.61357e+210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001000110 #b0110111111101010101110101110101100110000010111111101)))
(assert (= y (fp #b0 #b01110001011 #b0111001000111101001100101010010011010001011010101101)))
(assert (= r (fp #b1 #b11010111001 #b1111110011001001111010101001100111101101000110101011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
