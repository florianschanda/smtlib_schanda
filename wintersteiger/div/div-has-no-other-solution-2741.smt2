(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9609053359084942513845817302353680133819580078125p781 {- 4327532912735816 781 (-2.49392e+235)}
; Y = -1.1698703551673161893376118314336054027080535888671875p1023 {- 765028068232819 1023 (-1.05153e+308)}
; -1.9609053359084942513845817302353680133819580078125p781 / -1.1698703551673161893376118314336054027080535888671875p1023 == 1.6761731992328698925831531596486456692218780517578125p-242
; [HW: 1.6761731992328698925831531596486456692218780517578125p-242] 

; mpf : + 3045213368103069 -242
; mpfd: + 3045213368103069 -242 (2.3717e-073) class: Pos. norm. non-zero
; hwf : + 3045213368103069 -242 (2.3717e-073) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001100 #b1111010111111101111001000110000001000111011001001000)))
(assert (= y (fp #b1 #b11111111110 #b0010101101111100100111111010010000000000111001110011)))
(assert (= r (fp #b0 #b01100001101 #b1010110100011001101011111101000100100011000010011101)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
