(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.859122208869536496678165349294431507587432861328125p-745 {+ 3869142459730562 -745 (1.00453e-224)}
; Y = -1.288101217029737899366637066123075783252716064453125p-994 {- 1297492533660114 -994 (-7.69368e-300)}
; 1.859122208869536496678165349294431507587432861328125p-745 / -1.288101217029737899366637066123075783252716064453125p-994 == -1.4433044424540868444495345102041028439998626708984375p249
; [HW: -1.4433044424540868444495345102041028439998626708984375p249] 

; mpf : - 1996465721847911 249
; mpfd: - 1996465721847911 249 (-1.30565e+075) class: Neg. norm. non-zero
; hwf : - 1996465721847911 249 (-1.30565e+075) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010110 #b1101101111101111011011101101111001011100101010000010)))
(assert (= y (fp #b1 #b00000011101 #b0100100111000001000000000101100100010100100111010010)))
(assert (= r (fp #b1 #b10011111000 #b0111000101111100011001100110001010000011000001100111)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
