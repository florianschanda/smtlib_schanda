(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.307170473882457439884774430538527667522430419921875p512 {+ 1383372831716254 512 (1.75263e+154)}
; Y = -1.0203717618924190713158850485342554748058319091796875p289 {- 91746259267579 289 (-1.01491e+087)}
; 1.307170473882457439884774430538527667522430419921875p512 / -1.0203717618924190713158850485342554748058319091796875p289 == -1.2810727645560582299566476649488322436809539794921875p223
; [HW: -1.2810727645560582299566476649488322436809539794921875p223] 

; mpf : - 1265839197718659 223
; mpfd: - 1265839197718659 223 (-1.72688e+067) class: Neg. norm. non-zero
; hwf : - 1265839197718659 223 (-1.72688e+067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111111 #b0100111010100010101110010110001110011111001110011110)))
(assert (= y (fp #b1 #b10100100000 #b0000010100110111000101010111001100010110111111111011)))
(assert (= r (fp #b1 #b10011011110 #b0100011111110100011000100111101110010000100010000011)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
