(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.508017383494483443229228214477188885211944580078125p616 {- 2287906899003490 616 (-4.10094e+185)}
; Y = -1.254204372649117882332348017371259629726409912109375p-224 {- 1144834717938518 -224 (-4.6521e-068)}
; -1.508017383494483443229228214477188885211944580078125p616 / -1.254204372649117882332348017371259629726409912109375p-224 == 1.2023697384416418554309302635374478995800018310546875p840
; [HW: 1.2023697384416418554309302635374478995800018310546875p840] 

; mpf : + 911392278636843 840
; mpfd: + 911392278636843 840 (8.81525e+252) class: Pos. norm. non-zero
; hwf : + 911392278636843 840 (8.81525e+252) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100111 #b1000001000001101011011010101111111101000100001100010)))
(assert (= y (fp #b1 #b01100011111 #b0100000100010011100010011010101100000111001101010110)))
(assert (= r (fp #b0 #b11101000111 #b0011001111001110100000001101000001001110100100101011)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
