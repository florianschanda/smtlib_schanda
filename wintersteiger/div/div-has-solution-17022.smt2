(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.898751308072059718057289501302875578403472900390625p279 {+ 4047616056132074 279 (1.84432e+084)}
; Y = 1.391345206217775132273573035490699112415313720703125p-255 {+ 1762462124895602 -255 (2.40318e-077)}
; 1.898751308072059718057289501302875578403472900390625p279 / 1.391345206217775132273573035490699112415313720703125p-255 == 1.36468742594342540286334042320959270000457763671875p534
; [HW: 1.36468742594342540286334042320959270000457763671875p534] 

; mpf : + 1642406155585516 534
; mpfd: + 1642406155585516 534 (7.67451e+160) class: Pos. norm. non-zero
; hwf : + 1642406155585516 534 (7.67451e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010110 #b1110011000010100100100001101001101101000000111101010)))
(assert (= y (fp #b0 #b01100000000 #b0110010000101111001100110000111000100110110101110010)))
(assert (= r (fp #b0 #b11000010101 #b0101110101011100001001111011011110110000011111101100)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
