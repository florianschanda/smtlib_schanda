(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7317890133453535117524779707309789955615997314453125p-142 {+ 3295684727815957 -142 (3.10624e-043)}
; Y = 1.4232424351133186046780565447988919913768768310546875p-32 {+ 1906114473063723 -32 (3.31374e-010)}
; 1.7317890133453535117524779707309789955615997314453125p-142 / 1.4232424351133186046780565447988919913768768310546875p-32 == 1.2167913003573900265763541028718464076519012451171875p-110
; [HW: 1.2167913003573900265763541028718464076519012451171875p-110] 

; mpf : + 976341219506707 -110
; mpfd: + 976341219506707 -110 (9.37382e-034) class: Pos. norm. non-zero
; hwf : + 976341219506707 -110 (9.37382e-034) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110001 #b1011101101010110100001100101011111100011111100010101)))
(assert (= y (fp #b0 #b01111011111 #b0110110001011001100111011100000100010111010100101011)))
(assert (= r (fp #b0 #b01110010001 #b0011011101111111101000100111100100010111101000010011)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
