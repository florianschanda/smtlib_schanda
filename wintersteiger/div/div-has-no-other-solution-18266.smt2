(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.572227956979746377186302197515033185482025146484375p-251 {+ 2577085613824966 -251 (4.34497e-076)}
; Y = 1.1509384201692205440537009053514339029788970947265625p-413 {+ 679766212829993 -413 (5.44081e-125)}
; 1.572227956979746377186302197515033185482025146484375p-251 / 1.1509384201692205440537009053514339029788970947265625p-413 == 1.366040032574969753653704174212180078029632568359375p162
; [HW: 1.366040032574969753653704174212180078029632568359375p162] 

; mpf : + 1648497754307318 162
; mpfd: + 1648497754307318 162 (7.98588e+048) class: Pos. norm. non-zero
; hwf : + 1648497754307318 162 (7.98588e+048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000100 #b1001001001111101100010000000100100010101101111000110)))
(assert (= y (fp #b0 #b01001100010 #b0010011010100011111001100111101001010110001100101001)))
(assert (= r (fp #b0 #b10010100001 #b0101110110110100110011001011000011101111101011110110)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
