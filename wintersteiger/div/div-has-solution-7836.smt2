(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9546608116943298139034368432476185262203216552734375p515 {+ 4299410075811799 515 (2.09662e+155)}
; Y = -1.29405727472360698726561167859472334384918212890625p-823 {- 1324316232870820 -823 (-2.31349e-248)}
; 1.9546608116943298139034368432476185262203216552734375p515 / -1.29405727472360698726561167859472334384918212890625p-823 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000010 #b1111010001100100101001101010010011111111111111010111)))
(assert (= y (fp #b1 #b00011001000 #b0100101101000111010101100110101000010110101110100100)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
