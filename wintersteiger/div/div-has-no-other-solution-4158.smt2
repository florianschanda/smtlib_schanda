(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.32032096446517499543915619142353534698486328125p934 {+ 1442597376204320 934 (1.91732e+281)}
; Y = -1.72824801652055537459773404407314956188201904296875p-240 {- 3279737495835276 -240 (-9.78154e-073)}
; 1.32032096446517499543915619142353534698486328125p934 / -1.72824801652055537459773404407314956188201904296875p-240 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110100101 #b0101001000000000100011100000001010011001111000100000)))
(assert (= y (fp #b1 #b01100001111 #b1011101001101110011101100100011001010101001010001100)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
