(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7793473079323740559942734762444160878658294677734375p-188 {+ 3509868245596439 -188 (4.53546e-057)}
; Y = 1.9986874931627713891657549538649618625640869140625p-544 {+ 4497688622067432 -544 (3.47078e-164)}
; 1.7793473079323740559942734762444160878658294677734375p-188 / 1.9986874931627713891657549538649618625640869140625p-544 == 1.780515777498254070820848937728442251682281494140625p355
; [HW: 1.780515777498254070820848937728442251682281494140625p355] 

; mpf : + 3515130564697930 355
; mpfd: + 3515130564697930 355 (1.30676e+107) class: Pos. norm. non-zero
; hwf : + 3515130564697930 355 (1.30676e+107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000011 #b1100011110000011010011100001111111001011100100010111)))
(assert (= y (fp #b0 #b00111011111 #b1111111110101001111110111100101000001110111011101000)))
(assert (= r (fp #b0 #b10101100010 #b1100011111001111111000011100101001011101111101001010)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
