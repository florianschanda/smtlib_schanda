(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0433646107513492307106162115815095603466033935546875p-356 {- 195296844820843 -356 (-7.10817e-108)}
; Y = 1.2879273937160693463965799310244619846343994140625p-818 {+ 1296709703049448 -818 (7.36809e-247)}
; -1.0433646107513492307106162115815095603466033935546875p-356 / 1.2879273937160693463965799310244619846343994140625p-818 == -1.6202227172774377184083505198941566050052642822265625p461
; [HW: -1.6202227172774377184083505198941566050052642822265625p461] 

; mpf : - 2793234798417385 461
; mpfd: - 2793234798417385 461 (-9.64723e+138) class: Neg. norm. non-zero
; hwf : - 2793234798417385 461 (-9.64723e+138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011011 #b0000101100011001111100010111000011111011000101101011)))
(assert (= y (fp #b0 #b00011001101 #b0100100110110101100111000001001110100010000011101000)))
(assert (= r (fp #b1 #b10111001100 #b1001111011000110111010100111111011110001010111101001)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
