(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -0.9009021758526964962499050670885480940341949462890625p-1022 {- 4057302703467473 -1023 (-2.00457e-308)}
; Y = 1.159639083249035085287914625951088964939117431640625p-303 {+ 718950515834122 -303 (7.11597e-092)}
; -0.9009021758526964962499050670885480940341949462890625p-1022 / 1.159639083249035085287914625951088964939117431640625p-303 == -1.5537630438059764070857227125088684260845184326171875p-720
; [HW: -1.5537630438059764070857227125088684260845184326171875p-720] 

; mpf : - 2493927037736147 -720
; mpfd: - 2493927037736147 -720 (-2.81701e-217) class: Neg. norm. non-zero
; hwf : - 2493927037736147 -720 (-2.81701e-217) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1110011010100001100001100110011000101110101111010001)))
(assert (= y (fp #b0 #b01011010000 #b0010100011011110000110110110000110110111110100001010)))
(assert (= r (fp #b1 #b00100101111 #b1000110111000011011010100011001011100001010011010011)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
