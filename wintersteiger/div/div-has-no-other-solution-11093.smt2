(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.764803372267134573547764375689439475536346435546875p-184 {+ 3444368182353966 -184 (7.19742e-056)}
; Y = 1.3945481117289801886727218516170978546142578125p-114 {+ 1776886728962368 -114 (6.7145e-035)}
; 1.764803372267134573547764375689439475536346435546875p-184 / 1.3945481117289801886727218516170978546142578125p-114 == 1.2655019625526626736444768539513461291790008544921875p-70
; [HW: 1.2655019625526626736444768539513461291790008544921875p-70] 

; mpf : + 1195714539618307 -70
; mpfd: + 1195714539618307 -70 (1.07192e-021) class: Pos. norm. non-zero
; hwf : + 1195714539618307 -70 (1.07192e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000111 #b1100001111001010001001110101111111000010000000101110)))
(assert (= y (fp #b0 #b01110001101 #b0110010100000001000110101110010010010011000101000000)))
(assert (= r (fp #b0 #b01110111001 #b0100001111110111111011111100011000110000000000000011)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
