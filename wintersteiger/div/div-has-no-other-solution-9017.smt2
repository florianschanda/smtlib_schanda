(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4459792601791547905776269544730894267559051513671875p997 {+ 2008512029957811 997 (1.93672e+300)}
; Y = -1.0073439214244908068707218262716196477413177490234375p918 {- 33074081790775 918 (-2.2321e+276)}
; 1.4459792601791547905776269544730894267559051513671875p997 / -1.0073439214244908068707218262716196477413177490234375p918 == -1.4354375198238027433461638793232850730419158935546875p79
; [HW: -1.4354375198238027433461638793232850730419158935546875p79] 

; mpf : - 1961036252021611 79
; mpfd: - 1961036252021611 79 (-8.67669e+023) class: Neg. norm. non-zero
; hwf : - 1961036252021611 79 (-8.67669e+023) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100100 #b0111001000101011101100100110000100101001111010110011)))
(assert (= y (fp #b1 #b11110010101 #b0000000111100001010010101000111001010111101100110111)))
(assert (= r (fp #b1 #b10001001110 #b0110111101111000110101010101001100011000001101101011)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
