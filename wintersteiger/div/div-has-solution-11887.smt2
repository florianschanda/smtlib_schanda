(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 0.7402995690009250839835885926731862127780914306640625p-1022 {+ 3334012863095105 -1023 (1.64722e-308)}
; Y = 1.4767948586535710742140281581669114530086517333984375p-227 {+ 2147293147764391 -227 (6.84717e-069)}
; 0.7402995690009250839835885926731862127780914306640625p-1022 / 1.4767948586535710742140281581669114530086517333984375p-227 == 1.0025760377793755395714470068924129009246826171875p-796
; [HW: 1.0025760377793755395714470068924129009246826171875p-796] 

; mpf : + 11601442783288 -796
; mpfd: + 11601442783288 -796 (2.4057e-240) class: Pos. norm. non-zero
; hwf : + 11601442783288 -796 (2.4057e-240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1011110110000100010001011100011000011010000101000001)))
(assert (= y (fp #b0 #b01100011100 #b0111101000001111001110100101010011010001011010100111)))
(assert (= r (fp #b0 #b00011100011 #b0000000010101000110100101011111000000100000000111000)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
