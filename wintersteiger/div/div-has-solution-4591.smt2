(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1192017437315973094058563219732604920864105224609375p135 {- 536836928651535 135 (-4.87481e+040)}
; Y = -1.7966803101976174250609119553701020777225494384765625p-479 {- 3587929148139401 -479 (-1.15107e-144)}
; -1.1192017437315973094058563219732604920864105224609375p135 / -1.7966803101976174250609119553701020777225494384765625p-479 == 1.2458551890163429565205888138734735548496246337890625p613
; [HW: 1.2458551890163429565205888138734735548496246337890625p613] 

; mpf : + 1107233337641105 613
; mpfd: + 1107233337641105 613 (4.23501e+184) class: Pos. norm. non-zero
; hwf : + 1107233337641105 613 (4.23501e+184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000110 #b0001111010000100000000010110011011110100000100001111)))
(assert (= y (fp #b1 #b01000100000 #b1100101111110011001111011010010110101010011110001001)))
(assert (= r (fp #b0 #b11001100100 #b0011111011110000010111011001110001100000100010010001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
