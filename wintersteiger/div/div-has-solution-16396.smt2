(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.635138773867265360451028755051083862781524658203125p-865 {- 2860410745317170 -865 (-6.64674e-261)}
; Y = -1.7386313333781762135998860685504041612148284912109375p-527 {- 3326499797766127 -527 (-3.95731e-159)}
; -1.635138773867265360451028755051083862781524658203125p-865 / -1.7386313333781762135998860685504041612148284912109375p-527 == 1.8809493910249230896880590080399997532367706298828125p-339
; [HW: 1.8809493910249230896880590080399997532367706298828125p-339] 

; mpf : + 3967443349152109 -339
; mpfd: + 3967443349152109 -339 (1.67961e-102) class: Pos. norm. non-zero
; hwf : + 3967443349152109 -339 (1.67961e-102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011110 #b1010001010011000011101000110011000101110011100110010)))
(assert (= y (fp #b1 #b00111110000 #b1011110100010110111100010110110010101000111111101111)))
(assert (= r (fp #b0 #b01010101100 #b1110000110000101111001100011011111100010000101101101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
