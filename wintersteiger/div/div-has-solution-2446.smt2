(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8924099449986757637276468813070096075534820556640625p-540 {- 4019057095757761 -540 (-5.25796e-163)}
; Y = -1.753366097884626384484363370575010776519775390625p-882 {- 3392859277706768 -882 (-5.43771e-266)}
; -1.8924099449986757637276468813070096075534820556640625p-540 / -1.753366097884626384484363370575010776519775390625p-882 == 1.079301092499621805842480171122588217258453369140625p342
; [HW: 1.079301092499621805842480171122588217258453369140625p342] 

; mpf : + 357140370631370 342
; mpfd: + 357140370631370 342 (9.66944e+102) class: Pos. norm. non-zero
; hwf : + 357140370631370 342 (9.66944e+102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111100011 #b1110010001110100111110100110100001100100111111000001)))
(assert (= y (fp #b1 #b00010001101 #b1100000011011100100110011100000001010100011000010000)))
(assert (= r (fp #b0 #b10101010101 #b0001010001001101000100111000111011010010101011001010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
