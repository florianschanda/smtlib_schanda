(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9454521018058963388597248922451399266719818115234375p700 {+ 4257937733389687 700 (1.02333e+211)}
; Y = -1.002722070563538903087419384974054992198944091796875p-290 {- 12259115975630 -290 (-5.0406e-088)}
; 1.9454521018058963388597248922451399266719818115234375p700 / -1.002722070563538903087419384974054992198944091796875p-290 == -1.94017081992873130502630374394357204437255859375p990
; [HW: -1.94017081992873130502630374394357204437255859375p990] 

; mpf : - 4234152954295648 990
; mpfd: - 4234152954295648 990 (-2.03019e+298) class: Neg. norm. non-zero
; hwf : - 4234152954295648 990 (-2.03019e+298) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111011 #b1111001000001001001001100010000100110000110101110111)))
(assert (= y (fp #b1 #b01011011101 #b0000000010110010011001001100010000001100001111001110)))
(assert (= r (fp #b1 #b11111011101 #b1111000010101111000010001110110000111111010101100000)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
