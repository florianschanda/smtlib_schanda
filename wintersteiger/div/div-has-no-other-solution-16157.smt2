(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4419171018184850918686379372957162559032440185546875p-662 {+ 1990217695078379 -662 (7.535e-200)}
; Y = 1.4045389875574090243759428631165064871311187744140625p51 {+ 1821881633620385 51 (3.16274e+015)}
; 1.4419171018184850918686379372957162559032440185546875p-662 / 1.4045389875574090243759428631165064871311187744140625p51 == 1.0266123721678093172471335492446087300777435302734375p-713
; [HW: 1.0266123721678093172471335492446087300777435302734375p-713] 

; mpf : + 119851469378391 -713
; mpfd: + 119851469378391 -713 (2.38243e-215) class: Pos. norm. non-zero
; hwf : + 119851469378391 -713 (2.38243e-215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101001 #b0111000100100001011110101010101111011010011111101011)))
(assert (= y (fp #b0 #b10000110010 #b0110011110001111110111011111100110000100000110100001)))
(assert (= r (fp #b0 #b00100110110 #b0000011011010000000100011000010000100001001101010111)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
