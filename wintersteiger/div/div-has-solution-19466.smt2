(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.349125720691966900943725704564712941646575927734375p624 {+ 1572322465613798 624 (9.39225e+187)}
; Y = -1.3324414513217106570408532206784002482891082763671875p63 {- 1497183196294963 63 (-1.22896e+019)}
; 1.349125720691966900943725704564712941646575927734375p624 / -1.3324414513217106570408532206784002482891082763671875p63 == -1.012521577855226784237174797453917562961578369140625p561
; [HW: -1.012521577855226784237174797453917562961578369140625p561] 

; mpf : - 56392173362890 561
; mpfd: - 56392173362890 561 (-7.64244e+168) class: Neg. norm. non-zero
; hwf : - 56392173362890 561 (-7.64244e+168) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101111 #b0101100101100000010011011010000010010000011111100110)))
(assert (= y (fp #b1 #b10000111110 #b0101010100011010111000100000100101000010111100110011)))
(assert (= r (fp #b1 #b11000110000 #b0000001100110100100111010011011101100001111011001010)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
