(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.39408481687917085167782715870998799800872802734375p-932 {- 1774800234449404 -932 (-3.84002e-281)}
; Y = -1.9820231566605033268757551923044957220554351806640625p-432 {- 4422639122405441 -432 (-1.78711e-130)}
; -1.39408481687917085167782715870998799800872802734375p-932 / -1.9820231566605033268757551923044957220554351806640625p-432 == 1.4067290911253069740638466100790537893772125244140625p-501
; [HW: 1.4067290911253069740638466100790537893772125244140625p-501] 

; mpf : + 1831744983232673 -501
; mpfd: + 1831744983232673 -501 (2.14873e-151) class: Pos. norm. non-zero
; hwf : + 1831744983232673 -501 (2.14873e-151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001011011 #b0110010011100010101111100001100001011000100111111100)))
(assert (= y (fp #b1 #b01001001111 #b1111101101100101110111101001110111000101100001000001)))
(assert (= r (fp #b0 #b01000001010 #b0110100000011111011001011101000010110111000010100001)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
