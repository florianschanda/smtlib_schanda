(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.33652214801572366553727988502942025661468505859375p535 {+ 1515561020405532 535 (1.50322e+161)}
; Y = 1.675886244218362630675756008713506162166595458984375p-771 {+ 3043921037606662 -771 (1.34933e-232)}
; 1.33652214801572366553727988502942025661468505859375p535 / 1.675886244218362630675756008713506162166595458984375p-771 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010110 #b0101011000100110010100001100010000011011011100011100)))
(assert (= y (fp #b0 #b00011111100 #b1010110100000110111000011000001010111011111100000110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
