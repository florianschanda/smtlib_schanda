(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6692551853725425825558659198577515780925750732421875p-128 {- 3014057403459555 -128 (-4.9055e-039)}
; Y = -1.9059642804729912679562175981118343770503997802734375p391 {- 4080100395949143 391 (-9.61265e+117)}
; -1.6692551853725425825558659198577515780925750732421875p-128 / -1.9059642804729912679562175981118343770503997802734375p391 == 1.7516122442318737828514940702007152140140533447265625p-520
; [HW: 1.7516122442318737828514940702007152140140533447265625p-520] 

; mpf : + 3384960623049769 -520
; mpfd: + 3384960623049769 -520 (5.10317e-157) class: Pos. norm. non-zero
; hwf : + 3384960623049769 -520 (5.10317e-157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111111 #b1010101101010100010011101100110111011010011111100011)))
(assert (= y (fp #b1 #b10110000110 #b1110011111101101010001100110101111111001110001010111)))
(assert (= r (fp #b0 #b00111110111 #b1100000001101001101010001111100000111111110000101001)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
