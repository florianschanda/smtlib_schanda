(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.052940344268935124460995211848057806491851806640625p-762 {- 238422114722442 -762 (-4.34057e-230)}
; Y = 1.6764380283734350296498405441525392234325408935546875p-489 {+ 3046406052521835 -489 (1.04887e-147)}
; -1.052940344268935124460995211848057806491851806640625p-762 / 1.6764380283734350296498405441525392234325408935546875p-489 == -1.2561637548756288129681024656747467815876007080078125p-274
; [HW: -1.2561637548756288129681024656747467815876007080078125p-274] 

; mpf : - 1153658991003709 -274
; mpfd: - 1153658991003709 -274 (-4.13835e-083) class: Neg. norm. non-zero
; hwf : - 1153658991003709 -274 (-4.13835e-083) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000101 #b0000110110001101011111111001011101000110001010001010)))
(assert (= y (fp #b0 #b01000010110 #b1010110100101011000010101110100110100010011101101011)))
(assert (= r (fp #b1 #b01011101101 #b0100000110010011111100101010010110011100100000111101)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
