(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5681826739155597660868579623638652265071868896484375p529 {- 2558867278524487 529 (-2.75591e+159)}
; Y = -1.437788139249771557359736107173375785350799560546875p-126 {- 1971622500792494 -126 (-1.69011e-038)}
; -1.5681826739155597660868579623638652265071868896484375p529 / -1.437788139249771557359736107173375785350799560546875p-126 == 1.0906910629641355381380662947776727378368377685546875p655
; [HW: 1.0906910629641355381380662947776727378368377685546875p655] 

; mpf : + 408436237371115 655
; mpfd: + 408436237371115 655 (1.63061e+197) class: Pos. norm. non-zero
; hwf : + 408436237371115 655 (1.63061e+197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000010000 #b1001000101110100011010110111001010011111000001000111)))
(assert (= y (fp #b1 #b01110000001 #b0111000000010010111000100010110010100111100010101110)))
(assert (= r (fp #b0 #b11010001110 #b0001011100110111100001111000110101111000011011101011)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
