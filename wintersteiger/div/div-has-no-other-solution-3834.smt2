(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9352646665406767478856409070431254804134368896484375p-968 {+ 4212057603725383 -968 (7.75719e-292)}
; Y = -1.477957454630736133793789122137241065502166748046875p-638 {- 2152529014573934 -638 (-1.29576e-192)}
; 1.9352646665406767478856409070431254804134368896484375p-968 / -1.477957454630736133793789122137241065502166748046875p-638 == -1.30941838716473579751209399546496570110321044921875p-330
; [HW: -1.30941838716473579751209399546496570110321044921875p-330] 

; mpf : - 1393496533136684 -330
; mpfd: - 1393496533136684 -330 (-5.98659e-100) class: Neg. norm. non-zero
; hwf : - 1393496533136684 -330 (-5.98659e-100) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110111 #b1110111101101101100000010101001111100101100001000111)))
(assert (= y (fp #b1 #b00110000001 #b0111101001011011011010110111010010000100101101101110)))
(assert (= r (fp #b1 #b01010110101 #b0100111100110110000010110001110110100111010100101100)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
