(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3267137040523440116857045723008923232555389404296875p-61 {+ 1471387715826971 -61 (5.7537e-019)}
; Y = 1.286882538526612496099232885171659290790557861328125p677 {+ 1292004093607554 677 (8.06949e+203)}
; 1.3267137040523440116857045723008923232555389404296875p-61 / 1.286882538526612496099232885171659290790557861328125p677 == 1.0309516714488451416542602601111866533756256103515625p-738
; [HW: 1.0309516714488451416542602601111866533756256103515625p-738] 

; mpf : + 139393936003513 -738
; mpfd: + 139393936003513 -738 (7.1302e-223) class: Pos. norm. non-zero
; hwf : + 139393936003513 -738 (7.1302e-223) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000010 #b0101001110100011100000100110001000001111010100011011)))
(assert (= y (fp #b0 #b11010100100 #b0100100101110001001000100101000011000011111010000010)))
(assert (= r (fp #b0 #b00100011101 #b0000011111101100011100101110000010100001000110111001)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
