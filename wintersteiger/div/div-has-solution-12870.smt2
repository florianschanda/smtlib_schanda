(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.575131899696472270733238474349491298198699951171875p831 {+ 2590163809161918 831 (2.2555e+250)}
; Y = -1.941063583048266760755495852208696305751800537109375p-364 {- 4238173601948118 -364 (-5.16561e-110)}
; 1.575131899696472270733238474349491298198699951171875p831 / -1.941063583048266760755495852208696305751800537109375p-364 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111110 #b1001001100111011110110000001110000010101001010111110)))
(assert (= y (fp #b1 #b01010010011 #b1111000011101001100010110000000010100110000111010110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
