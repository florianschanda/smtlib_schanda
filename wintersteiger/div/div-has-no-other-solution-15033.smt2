(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8816596269017205056428565512760542333126068115234375p141 {+ 3970641967182199 141 (5.2453e+042)}
; Y = -1.0222868170202463744544729706831276416778564453125p556 {- 100370900827656 556 (-2.4113e+167)}
; 1.8816596269017205056428565512760542333126068115234375p141 / -1.0222868170202463744544729706831276416778564453125p556 == -1.8406376719073491710076950766961090266704559326171875p-415
; [HW: -1.8406376719073491710076950766961090266704559326171875p-415] 

; mpf : - 3785895505955539 -415
; mpfd: - 3785895505955539 -415 (-2.1753e-125) class: Neg. norm. non-zero
; hwf : - 3785895505955539 -415 (-2.1753e-125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001100 #b1110000110110100011100011111111110111111000101110111)))
(assert (= y (fp #b1 #b11000101011 #b0000010110110100100101101011111000111011111000001000)))
(assert (= r (fp #b1 #b01001100000 #b1101011100110100000001111100110010100000101011010011)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
