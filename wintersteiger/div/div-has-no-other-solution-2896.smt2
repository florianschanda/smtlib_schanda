(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.75367060645332362156523231533356010913848876953125p-847 {+ 3394230662383284 -847 (1.86871e-255)}
; Y = 1.320454443410373546186065141228027641773223876953125p-689 {+ 1443198511932178 -689 (5.1411e-208)}
; 1.75367060645332362156523231533356010913848876953125p-847 / 1.320454443410373546186065141228027641773223876953125p-689 == 1.3280811126842595459862650386639870703220367431640625p-158
; [HW: 1.3280811126842595459862650386639870703220367431640625p-158] 

; mpf : + 1477545976832129 -158
; mpfd: + 1477545976832129 -158 (3.63484e-048) class: Pos. norm. non-zero
; hwf : + 1477545976832129 -158 (3.63484e-048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110000 #b1100000011110000100011101000111010101100011010110100)))
(assert (= y (fp #b0 #b00101001110 #b0101001000001001010011010110101001001110001100010010)))
(assert (= r (fp #b0 #b01101100001 #b0101001111111101000111111011000101101010000010000001)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
