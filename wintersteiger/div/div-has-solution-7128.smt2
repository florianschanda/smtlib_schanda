(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3114646604647053340642059993115253746509552001953125p791 {- 1402712128807925 791 (-1.70798e+238)}
; Y = 1.1072929237250856981944480139645747840404510498046875p712 {+ 483204371307787 712 (2.38572e+214)}
; -1.3114646604647053340642059993115253746509552001953125p791 / 1.1072929237250856981944480139645747840404510498046875p712 == -1.184388188856800194770357848028652369976043701171875p79
; [HW: -1.184388188856800194770357848028652369976043701171875p79] 

; mpf : - 830410578627006 79
; mpfd: - 830410578627006 79 (-7.15919e+023) class: Neg. norm. non-zero
; hwf : - 830410578627006 79 (-7.15919e+023) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010110 #b0100111110111100001001011110001010001110001111110101)))
(assert (= y (fp #b0 #b11011000111 #b0001101101110111100011001000111001111101110100001011)))
(assert (= r (fp #b1 #b10001001110 #b0010111100110100000100000111100011101000100110111110)))
(assert (= (fp.div roundNearestTiesToEven x y) r))
(check-sat)
(exit)
