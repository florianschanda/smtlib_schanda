(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1780396326271691531673013741965405642986297607421875p522 {- 801819223156899 522 (-1.6174e+157)}
; Y = 1.4239327200538720585853980082902126014232635498046875p-890 {+ 1909223240064779 -890 (1.72502e-268)}
; -1.1780396326271691531673013741965405642986297607421875p522 / 1.4239327200538720585853980082902126014232635498046875p-890 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001001 #b0010110110010100000000010101111110000110100010100011)))
(assert (= y (fp #b0 #b00010000101 #b0110110010000110110110101101000001010101111100001011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
