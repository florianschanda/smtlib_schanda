(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7486070197450269692041047164821065962314605712890625p608 {- 3371426295170641 608 (-1.8575e+183)}
; Y = -1.4904674426280823951174170360900461673736572265625p906 {- 2208868991857192 906 (-8.06304e+272)}
; -1.7486070197450269692041047164821065962314605712890625p608 / -1.4904674426280823951174170360900461673736572265625p906 == 1.17319370402467626490761176683008670806884765625p-298
; [HW: 1.17319370402467626490761176683008670806884765625p-298] 

; mpf : + 779995100908448 -298
; mpfd: + 779995100908448 -298 (2.30373e-090) class: Pos. norm. non-zero
; hwf : + 779995100908448 -298 (2.30373e-090) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001011111 #b1011111110100100101101011010101101011100011001010001)))
(assert (= y (fp #b1 #b11110001001 #b0111110110001111010001100011100111010111001000101000)))
(assert (= r (fp #b0 #b01011010101 #b0010110001010110011011000010111010101000101110100000)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
