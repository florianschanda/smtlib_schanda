(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.249997749191467999452243020641617476940155029296875p-497 {+ 1125889770102158 -497 (3.05493e-150)}
; Y = 1.2316976233695324793870895518921315670013427734375p-784 {+ 1043473330269656 -784 (1.21056e-236)}
; 1.249997749191467999452243020641617476940155029296875p-497 / 1.2316976233695324793870895518921315670013427734375p-784 == 1.01485764482671658726076202583499252796173095703125p287
; [HW: 1.01485764482671658726076202583499252796173095703125p287] 

; mpf : + 66912883705204 287
; mpfd: + 66912883705204 287 (2.52356e+086) class: Pos. norm. non-zero
; hwf : + 66912883705204 287 (2.52356e+086) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000001110 #b0011111111111111110110100011110011011001110110001110)))
(assert (= y (fp #b0 #b00011101111 #b0011101101010000100010010001001011101110110111011000)))
(assert (= r (fp #b0 #b10100011110 #b0000001111001101101101011110101010100000010101110100)))
(assert  (not (= (fp.div roundTowardNegative x y) r)))
(check-sat)
(exit)
