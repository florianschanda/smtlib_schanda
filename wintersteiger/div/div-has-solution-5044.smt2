(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5570628578445973033694826881401240825653076171875p16 {+ 2508788079010872 16 (102044)}
; Y = -1.943287256520484174160401380504481494426727294921875p-760 {- 4248188136968990 -760 (-3.20435e-229)}
; 1.5570628578445973033694826881401240825653076171875p16 / -1.943287256520484174160401380504481494426727294921875p-760 == -1.6025040586460350677810993147431872785091400146484375p775
; [HW: -1.6025040586460350677810993147431872785091400146484375p775] 

; mpf : - 2713437054007495 775
; mpfd: - 2713437054007495 775 (-3.18453e+233) class: Neg. norm. non-zero
; hwf : - 2713437054007495 775 (-3.18453e+233) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001111 #b1000111010011011101010111110010001000010010000111000)))
(assert (= y (fp #b1 #b00100000111 #b1111000101111011010001100000110101111101001100011110)))
(assert (= r (fp #b1 #b11100000110 #b1001101000111101101101001011101110010111100011000111)))
(assert (= (fp.div roundTowardPositive x y) r))
(check-sat)
(exit)
