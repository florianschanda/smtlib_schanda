(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9103865958015180392948195731150917708873748779296875p76 {+ 4100016733614811 76 (1.44345e+023)}
; Y = -1.3951239841306739553061788683407939970493316650390625p-120 {- 1779480227696049 -120 (-1.04957e-036)}
; 1.9103865958015180392948195731150917708873748779296875p76 / -1.3951239841306739553061788683407939970493316650390625p-120 == -1.3693310541083654197080932135577313601970672607421875p196
; [HW: -1.3693310541083654197080932135577313601970672607421875p196] 

; mpf : - 1663319197658787 196
; mpfd: - 1663319197658787 196 (-1.37527e+059) class: Neg. norm. non-zero
; hwf : - 1663319197658787 196 (-1.37527e+059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001011 #b1110100100001111000110001000111110101111001011011011)))
(assert (= y (fp #b1 #b01110000111 #b0110010100100110110110000110110110110100110110110001)))
(assert (= r (fp #b1 #b10011000011 #b0101111010001100011110101101111011001010111010100011)))
(assert (= (fp.div roundTowardNegative x y) r))
(check-sat)
(exit)
