(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.65202291915527066379354437231086194515228271484375p809 {+ 2936450175744700 809 (5.64004e+243)}
; Y = 1.1235318077405034298266173209412954747676849365234375p665 {+ 556337803308535 665 (1.72002e+200)}
; 1.65202291915527066379354437231086194515228271484375p809 / 1.1235318077405034298266173209412954747676849365234375p665 == 1.470383755736829112237273875507526099681854248046875p144
; [HW: 1.470383755736829112237273875507526099681854248046875p144] 

; mpf : + 2118420107057518 144
; mpfd: + 2118420107057518 144 (3.27907e+043) class: Pos. norm. non-zero
; hwf : + 2118420107057518 144 (3.27907e+043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100101000 #b1010011011101010111110010101101000000011101010111100)))
(assert (= y (fp #b0 #b11010011000 #b0001111110011111110001111101001001000010110111110111)))
(assert (= r (fp #b0 #b10010001111 #b0111100001101011000100011101111101110101100101101110)))
(assert  (not (= (fp.div roundTowardZero x y) r)))
(check-sat)
(exit)
