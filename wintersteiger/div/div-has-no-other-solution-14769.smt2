(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9833662342173681292223363925586454570293426513671875p-653 {+ 4428687805990067 -653 (5.30659e-197)}
; Y = -1.866246445333378911612953743315301835536956787109375p136 {- 3901227168414422 136 (-1.62573e+041)}
; 1.9833662342173681292223363925586454570293426513671875p-653 / -1.866246445333378911612953743315301835536956787109375p136 == -1.0627568717823157040669457273907028138637542724609375p-789
; [HW: -1.0627568717823157040669457273907028138637542724609375p-789] 

; mpf : - 282631824373775 -789
; mpfd: - 282631824373775 -789 (-3.26413e-238) class: Neg. norm. non-zero
; hwf : - 282631824373775 -789 (-3.26413e-238) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110010 #b1111101110111101111000111011011111110100010010110011)))
(assert (= y (fp #b1 #b10010000111 #b1101110111000010010100111011100011111011101011010110)))
(assert (= r (fp #b1 #b00011101010 #b0001000000010000110101011001011111100111100000001111)))
(assert  (not (= (fp.div roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
