(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2075583244049707953848837860277853906154632568359375p162 {+ 934759592447871 162 (7.05939e+048)}
; Y = 1.8334084015580114357391039447975344955921173095703125p3 {+ 3753337766704101 3 (14.6673)}
; 1.2075583244049707953848837860277853906154632568359375p162 / 1.8334084015580114357391039447975344955921173095703125p3 == 1.317282416049583293471414435771293938159942626953125p158
; [HW: 1.317282416049583293471414435771293938159942626953125p158] 

; mpf : + 1428912970692114 158
; mpfd: + 1428912970692114 158 (4.81303e+047) class: Pos. norm. non-zero
; hwf : + 1428912970692114 158 (4.81303e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100001 #b0011010100100010100010101101011101010100111101111111)))
(assert (= y (fp #b0 #b10000000010 #b1101010101011010010000001100010011100111001111100101)))
(assert (= r (fp #b0 #b10010011101 #b0101000100111001011010111010000010000111011000010010)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
