(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3152183818414797666918047980288974940776824951171875p973 {- 1419617387001619 973 (-1.04999e+293)}
; Y = 1.8322778902597576244914989729295484721660614013671875p-475 {+ 3748246396442547 -475 (1.87821e-143)}
; -1.3152183818414797666918047980288974940776824951171875p973 / 1.8322778902597576244914989729295484721660614013671875p-475 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001100 #b0101000010110010001001101110000100011011011100010011)))
(assert (= y (fp #b0 #b01000100100 #b1101010100010000001010011110111111011001011110110011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
