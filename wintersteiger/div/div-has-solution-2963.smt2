(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4016634335336395356108596388367004692554473876953125p449 {- 1808931289590453 449 (-2.03757e+135)}
; Y = 1.7643156000636543989656956910039298236370086669921875p-242 {+ 3442171451640131 -242 (2.49642e-073)}
; -1.4016634335336395356108596388367004692554473876953125p449 / 1.7643156000636543989656956910039298236370086669921875p-242 == -1.588903293133121064073520756210200488567352294921875p690
; [HW: -1.588903293133121064073520756210200488567352294921875p690] 

; mpf : - 2652184651511582 690
; mpfd: - 2652184651511582 690 (-8.16196e+207) class: Neg. norm. non-zero
; hwf : - 2652184651511582 690 (-8.16196e+207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000000 #b0110011011010011011010100010111100000110101010110101)))
(assert (= y (fp #b0 #b01100001101 #b1100001110101010001011111110101000011000100101000011)))
(assert (= r (fp #b1 #b11010110001 #b1001011011000010010111011100000010000011011100011110)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
