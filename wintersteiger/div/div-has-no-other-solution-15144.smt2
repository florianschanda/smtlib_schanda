(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9689103682355681979032624440151266753673553466796875p-348 {+ 4363584373341115 -348 (3.4339e-105)}
; Y = 1.087767850449921969158140200306661427021026611328125p-458 {+ 395271258581378 -458 (1.4615e-138)}
; 1.9689103682355681979032624440151266753673553466796875p-348 / 1.087767850449921969158140200306661427021026611328125p-458 == 1.8100464795141615326201645075343549251556396484375p110
; [HW: 1.8100464795141615326201645075343549251556396484375p110] 

; mpf : + 3648125023292760 110
; mpfd: + 3648125023292760 110 (2.34957e+033) class: Pos. norm. non-zero
; hwf : + 3648125023292760 110 (2.34957e+033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100011 #b1111100000001010100000101000100001010011101110111011)))
(assert (= y (fp #b0 #b01000110101 #b0001011001110111111101000010111101010010100110000010)))
(assert (= r (fp #b0 #b10001101101 #b1100111101011111001101001100000111000000110101011000)))
(assert  (not (= (fp.div roundTowardPositive x y) r)))
(check-sat)
(exit)
