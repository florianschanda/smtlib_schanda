(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.698151613207039556385780088021419942378997802734375p770 {- 3144195345087334 770 (-1.05456e+232)}
; Y = 1.156807793652333327116821237723343074321746826171875p-907 {+ 706199521061438 -907 (1.06919e-273)}
; -1.698151613207039556385780088021419942378997802734375p770 / 1.156807793652333327116821237723343074321746826171875p-907 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100000001 #b1011001010111010000100000110101001011111101101100110)))
(assert (= y (fp #b0 #b00001110100 #b0010100000100100100011100011100101111110101000111110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
