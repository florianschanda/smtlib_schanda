(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6970036608402221389724218170158565044403076171875p386 {- 3139025427235896 386 (-2.67461e+116)}
; Y = 1.341906261720339887943964640726335346698760986328125p107 {+ 1539808912879362 107 (2.17737e+032)}
; -1.6970036608402221389724218170158565044403076171875p386 / 1.341906261720339887943964640726335346698760986328125p107 == -1.2646216127381677551966276951134204864501953125p279
; [HW: -1.2646216127381677551966276951134204864501953125p279] 

; mpf : - 1191749796521792 279
; mpfd: - 1191749796521792 279 (-1.22837e+084) class: Neg. norm. non-zero
; hwf : - 1191749796521792 279 (-1.22837e+084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000001 #b1011001001101110110101001111100010000000010000111000)))
(assert (= y (fp #b0 #b10001101010 #b0101011110000111001010110011010001100010111100000010)))
(assert (= r (fp #b1 #b10100010110 #b0100001110111110001111011111010010000110011101000000)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
