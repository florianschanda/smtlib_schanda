(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.862746703322034402816598230856470763683319091796875p-925 {+ 3885465731596238 -925 (6.56762e-279)}
; Y = 1.4261755348468916348991797349299304187297821044921875p-203 {+ 1919323979930883 -203 (1.10939e-061)}
; 1.862746703322034402816598230856470763683319091796875p-925 / 1.4261755348468916348991797349299304187297821044921875p-203 == 1.30611320823282195391357163316570222377777099609375p-722
; [HW: 1.30611320823282195391357163316570222377777099609375p-722] 

; mpf : + 1378611330530524 -722
; mpfd: + 1378611330530524 -722 (5.92003e-218) class: Pos. norm. non-zero
; hwf : + 1378611330530524 -722 (5.92003e-218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001100010 #b1101110011011100111101111100101101111111111111001110)))
(assert (= y (fp #b0 #b01100110100 #b0110110100011001110101110000000010000101110100000011)))
(assert (= r (fp #b0 #b00100101101 #b0100111001011101011011110110101000111011110011011100)))
(assert (= (fp.div roundTowardZero x y) r))
(check-sat)
(exit)
