(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.131722382758791667356490506790578365325927734375p-34 {+ 593224873908848 -34 (6.58749e-011)}
; Y = 1.990708040409916446122906563687138259410858154296875p805 {+ 4461752361623054 805 (4.2477e+242)}
; 1.131722382758791667356490506790578365325927734375p-34 * 1.990708040409916446122906563687138259410858154296875p805 == 1.126464423434897721421066307811997830867767333984375p772
; [HW: 1.126464423434897721421066307811997830867767333984375p772] 

; mpf : + 569545130257030 772
; mpfd: + 569545130257030 772 (2.79817e+232) class: Pos. norm. non-zero
; hwf : + 569545130257030 772 (2.79817e+232) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011101 #b0010000110111000100011101101111000011001101001110000)))
(assert (= y (fp #b0 #b11100100100 #b1111110110011111000010101100100101110001111000001110)))
(assert (= r (fp #b0 #b11100000011 #b0010000001011111111110001111001011000010101010000110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
