(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3589886895548579648362874650047160685062408447265625p-842 {+ 1616741328509481 -842 (4.63404e-254)}
; Y = 1.5285519211417042395595444759237580001354217529296875p-70 {+ 2380386235099739 -70 (1.29473e-021)}
; 1.3589886895548579648362874650047160685062408447265625p-842 * 1.5285519211417042395595444759237580001354217529296875p-70 == 1.0386423861144624680719061871059238910675048828125p-911
; [HW: 1.0386423861144624680719061871059238910675048828125p-911] 

; mpf : + 174029835705800 -911
; mpfd: + 174029835705800 -911 (5.99984e-275) class: Pos. norm. non-zero
; hwf : + 174029835705800 -911 (5.99984e-275) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110101 #b0101101111100110101011101100100101000101101000101001)))
(assert (= y (fp #b0 #b01110111001 #b1000011101001111001011011011111110001010101001011011)))
(assert (= r (fp #b0 #b00001110000 #b0000100111100100011101111010100010011001110111001000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
