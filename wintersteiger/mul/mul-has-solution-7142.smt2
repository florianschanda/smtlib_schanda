(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.219441114391309088915704705868847668170928955078125p-431 {+ 988274921002466 -431 (2.19904e-130)}
; Y = -1.4896960531694671825420073218992911279201507568359375p684 {- 2205394962578815 684 (-1.19568e+206)}
; 1.219441114391309088915704705868847668170928955078125p-431 * -1.4896960531694671825420073218992911279201507568359375p684 == -1.8165966151813097706479993576067499816417694091796875p253
; [HW: -1.8165966151813097706479993576067499816417694091796875p253] 

; mpf : - 3677624211842555 253
; mpfd: - 3677624211842555 253 (-2.62934e+076) class: Neg. norm. non-zero
; hwf : - 3677624211842555 253 (-2.62934e+076) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010000 #b0011100000101101010010101111100110110101010111100010)))
(assert (= y (fp #b1 #b11010101011 #b0111110101011100101110000111010101010111110101111111)))
(assert (= r (fp #b1 #b10011111100 #b1101000100001100011110011100110000111010010111111011)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
