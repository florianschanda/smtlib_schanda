(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.77655007012783272557499003596603870391845703125p486 {- 3497270606462240 486 (-3.5494e+146)}
; Y = -1.1750571560206755084010410428163595497608184814453125p31 {- 788387342623253 31 (-2.52342e+009)}
; -1.77655007012783272557499003596603870391845703125p486 * -1.1750571560206755084010410428163595497608184814453125p31 == 1.043773936466371399234276395873166620731353759765625p518
; [HW: 1.043773936466371399234276395873166620731353759765625p518] 

; mpf : + 197140283958490 518
; mpfd: + 197140283958490 518 (8.95662e+155) class: Pos. norm. non-zero
; hwf : + 197140283958490 518 (8.95662e+155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100101 #b1100011011001011111111000100001011100111110100100000)))
(assert (= y (fp #b1 #b10000011110 #b0010110011010000100010111011100000001010001000010101)))
(assert (= r (fp #b0 #b11000000101 #b0000101100110100110001001100100110001010010011011010)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
