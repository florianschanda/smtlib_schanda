(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2339388639684525372786083607934415340423583984375p-996 {+ 1053566980595800 -996 (1.84254e-300)}
; Y = 1.0332470414700318794842814895673654973506927490234375p31 {+ 149731363575607 31 (2.21888e+009)}
; 1.2339388639684525372786083607934415340423583984375p-996 * 1.0332470414700318794842814895673654973506927490234375p31 == 1.2749636805502955194668857075157575309276580810546875p-965
; [HW: 1.2749636805502955194668857075157575309276580810546875p-965] 

; mpf : + 1238326329266731 -965
; mpfd: + 1238326329266731 -965 (4.08839e-291) class: Pos. norm. non-zero
; hwf : + 1238326329266731 -965 (4.08839e-291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011011 #b0011101111100011011010101101101000000010000001011000)))
(assert (= y (fp #b0 #b10000011110 #b0000100010000010111000001100101111001101011100110111)))
(assert (= r (fp #b0 #b00000111010 #b0100011001100100000001010000111110001101001000101011)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
