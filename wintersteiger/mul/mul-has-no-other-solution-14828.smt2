(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.827544879016045786812583173741586506366729736328125p-541 {- 3726930808769026 -541 (-2.53887e-163)}
; Y = -1.725188873055986338300726856687106192111968994140625p744 {- 3265960338468170 744 (-1.59644e+224)}
; -1.827544879016045786812583173741586506366729736328125p-541 * -1.725188873055986338300726856687106192111968994140625p744 == 1.5764300451444654971311365443398244678974151611328125p204
; [HW: 1.5764300451444654971311365443398244678974151611328125p204] 

; mpf : + 2596010136517773 204
; mpfd: + 2596010136517773 204 (4.05316e+061) class: Pos. norm. non-zero
; hwf : + 2596010136517773 204 (4.05316e+061) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111100010 #b1101001111011001111110110010111101011000101000000010)))
(assert (= y (fp #b1 #b11011100111 #b1011100110100101111110100101110100110010110101001010)))
(assert (= r (fp #b0 #b10011001011 #b1001001110010000111010110110000001010011110010001101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
