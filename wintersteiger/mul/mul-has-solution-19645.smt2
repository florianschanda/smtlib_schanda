(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.097969297787129594468069626600481569766998291015625p993 {- 441214493007866 993 (-9.19128e+298)}
; Y = -1.332581822261876158819404736277647316455841064453125p9 {- 1497815370808786 9 (-682.282)}
; -1.097969297787129594468069626600481569766998291015625p993 * -1.332581822261876158819404736277647316455841064453125p9 == 1.4631339276327655074538824919727630913257598876953125p1002
; [HW: 1.4631339276327655074538824919727630913257598876953125p1002] 

; mpf : + 2085769783909557 1002
; mpfd: + 2085769783909557 1002 (6.27104e+301) class: Pos. norm. non-zero
; hwf : + 2085769783909557 1002 (6.27104e+301) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100000 #b0001100100010100100001000001001000000001111111111010)))
(assert (= y (fp #b1 #b10000001000 #b0101010100100100000101010001000111011011110111010010)))
(assert (= r (fp #b0 #b11111101001 #b0111011010001111111100011111000011011001110010110101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
