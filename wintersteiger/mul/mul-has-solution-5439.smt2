(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8925356112022180266052373553975485265254974365234375p-272 {+ 4019623046025207 -272 (2.49394e-082)}
; Y = 1.9236869656627160196649128920398652553558349609375p-241 {+ 4159916274365592 -241 (5.44384e-073)}
; 1.8925356112022180266052373553975485265254974365234375p-272 * 1.9236869656627160196649128920398652553558349609375p-241 == 1.8203230436611141929148516283021308481693267822265625p-512
; [HW: 1.8203230436611141929148516283021308481693267822265625p-512] 

; mpf : + 3694406553755625 -512
; mpfd: + 3694406553755625 -512 (1.35766e-154) class: Pos. norm. non-zero
; hwf : + 3694406553755625 -512 (1.35766e-154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101111 #b1110010001111101001101101011110010100000111111110111)))
(assert (= y (fp #b0 #b01100001110 #b1110110001110110101111111011110101000011010010011000)))
(assert (= r (fp #b0 #b00111111111 #b1101001000000000101100001110010010101101111111101001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
