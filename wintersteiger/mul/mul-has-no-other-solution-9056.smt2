(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.82803497554596905416701702051796019077301025390625p-572 {+ 3729138007318564 -572 (1.18257e-172)}
; Y = 1.1725932930245719365558443314512260258197784423828125p600 {+ 777291090152109 600 (4.86569e+180)}
; 1.82803497554596905416701702051796019077301025390625p-572 * 1.1725932930245719365558443314512260258197784423828125p600 == 1.071770775869770542243486488587222993373870849609375p29
; [HW: 1.071770775869770542243486488587222993373870849609375p29] 

; mpf : + 323226839463190 29
; mpfd: + 323226839463190 29 (5.75403e+008) class: Pos. norm. non-zero
; hwf : + 323226839463190 29 (5.75403e+008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000011 #b1101001111111010000110011010001111101010000000100100)))
(assert (= y (fp #b0 #b11001010111 #b0010110000101111000100101111010100001100101010101101)))
(assert (= r (fp #b0 #b10000011100 #b0001001001011111100100011100111100101011010100010110)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
