(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.43808897440371818987614460638724267482757568359375p789 {+ 1972977341879708 789 (4.68223e+237)}
; Y = 1.0651870229967721481756370849325321614742279052734375p-944 {+ 293576252477655 -944 (7.16325e-285)}
; 1.43808897440371818987614460638724267482757568359375p789 * 1.0651870229967721481756370849325321614742279052734375p-944 == 1.531833713449577860643557869479991495609283447265625p-155
; [HW: 1.531833713449577860643557869479991495609283447265625p-155] 

; mpf : + 2395166113714586 -155
; mpfd: + 2395166113714586 -155 (3.35399e-047) class: Pos. norm. non-zero
; hwf : + 2395166113714586 -155 (3.35399e-047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010100 #b0111000000100110100110010101100111001101010110011100)))
(assert (= y (fp #b0 #b00001001111 #b0001000010110000000110001100001111100101000011010111)))
(assert (= r (fp #b0 #b01101100100 #b1000100000100110010000010001011000101101000110011010)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
