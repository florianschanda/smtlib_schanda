(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4410368898719199126645662545342929661273956298828125p-832 {+ 1986253572883821 -832 (5.03175e-251)}
; Y = 1.794731784339383739990125832264311611652374267578125p738 {+ 3579153767810338 738 (2.59499e+222)}
; 1.4410368898719199126645662545342929661273956298828125p-832 * 1.794731784339383739990125832264311611652374267578125p738 == 1.2931373543293533945330864298739470541477203369140625p-93
; [HW: 1.2931373543293533945330864298739470541477203369140625p-93] 

; mpf : + 1320173279726049 -93
; mpfd: + 1320173279726049 -93 (1.30574e-028) class: Pos. norm. non-zero
; hwf : + 1320173279726049 -93 (1.30574e-028) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111111 #b0111000011100111110010110010101001010100010101101101)))
(assert (= y (fp #b0 #b11011100001 #b1100101101110011100010101100111011010100010100100010)))
(assert (= r (fp #b0 #b01110100010 #b0100101100001011000011001011011000010100100111100001)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
