(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2504215163002783128831651993095874786376953125p791 {- 1127798247495488 791 (-1.62848e+238)}
; Y = -1.1187644301547028380383608237025327980518341064453125p162 {- 534867443389589 162 (-6.5403e+048)}
; -1.2504215163002783128831651993095874786376953125p791 * -1.1187644301547028380383608237025327980518341064453125p162 == 1.3989271151368602996711842934018932282924652099609375p953
; [HW: 1.3989271151368602996711842934018932282924652099609375p953] 

; mpf : + 1796608007078351 953
; mpfd: + 1796608007078351 953 (1.06508e+287) class: Pos. norm. non-zero
; hwf : + 1796608007078351 953 (1.06508e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010110 #b0100000000011011100111111101111010111001011101000000)))
(assert (= y (fp #b1 #b10010100001 #b0001111001100111010110000111111101110001010010010101)))
(assert (= r (fp #b0 #b11110111000 #b0110011000100000000101100110000100000000000111001111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
