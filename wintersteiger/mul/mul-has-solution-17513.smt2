(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0758001852232486061922145381686277687549591064453125p673 {+ 341373685926037 673 (4.21618e+202)}
; Y = 1.982326836014545623498861459665931761264801025390625p686 {+ 4424006772631146 686 (6.36432e+206)}
; 1.0758001852232486061922145381686277687549591064453125p673 * 1.982326836014545623498861459665931761264801025390625p686 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010100000 #b0001001101100111101001000001010010010000100010010101)))
(assert (= y (fp #b0 #b11010101101 #b1111101101111001110001011000001010101010011001101010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
