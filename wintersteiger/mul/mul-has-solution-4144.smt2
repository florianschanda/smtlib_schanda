(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0464484774551436885303701274096965789794921875p812 {- 209185345758912 812 (-2.85808e+244)}
; Y = -1.2108750073676535219391325881588272750377655029296875p-664 {- 949696604602715 -664 (-1.58191e-200)}
; -1.0464484774551436885303701274096965789794921875p812 * -1.2108750073676535219391325881588272750377655029296875p-664 == 1.267118307848366765000491795944981276988983154296875p148
; [HW: 1.267118307848366765000491795944981276988983154296875p148] 

; mpf : + 1202993911689742 148
; mpfd: + 1202993911689742 148 (4.52123e+044) class: Pos. norm. non-zero
; hwf : + 1202993911689742 148 (4.52123e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101011 #b0000101111100100000011000010001110011110011011000000)))
(assert (= y (fp #b1 #b00101100111 #b0011010111111011111001111000110000110000000101011011)))
(assert (= r (fp #b0 #b10010010011 #b0100010001100001110111011000110001011111001000001110)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
