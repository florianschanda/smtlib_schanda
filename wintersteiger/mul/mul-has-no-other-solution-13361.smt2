(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3106053344658035175740451450110413134098052978515625p286 {- 1398842068559481 286 (-1.62949e+086)}
; Y = -1.3095821809502388166635000743553973734378814697265625p548 {- 1394234194768041 548 (-1.20662e+165)}
; -1.3106053344658035175740451450110413134098052978515625p286 * -1.3095821809502388166635000743553973734378814697265625p548 == 1.716345392274744252603113636723719537258148193359375p834
; [HW: 1.716345392274744252603113636723719537258148193359375p834] 

; mpf : + 3226132841717110 834
; mpfd: + 3226132841717110 834 (1.96617e+251) class: Pos. norm. non-zero
; hwf : + 3226132841717110 834 (1.96617e+251) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011101 #b0100111110000011110101001100100101111110011001111001)))
(assert (= y (fp #b1 #b11000100011 #b0100111101000000110001110001111010011011000010101001)))
(assert (= r (fp #b0 #b11101000001 #b1011011101100010011010010110000001110101110101110110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
