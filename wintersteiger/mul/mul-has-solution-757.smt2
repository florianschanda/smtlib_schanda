(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9967573836806213893879657916841097176074981689453125p-102 {- 4488996181722837 -102 (-3.93791e-031)}
; Y = -1.4657109877330543046269895057776011526584625244140625p-862 {- 2097375830816929 -862 (-4.76642e-260)}
; -1.9967573836806213893879657916841097176074981689453125p-102 * -1.4657109877330543046269895057776011526584625244140625p-862 == 1.4633346185488964596999039713409729301929473876953125p-963
; [HW: 1.4633346185488964596999039713409729301929473876953125p-963] 

; mpf : + 2086673615444661 -963
; mpfd: + 2086673615444661 -963 (1.87697e-290) class: Pos. norm. non-zero
; hwf : + 2086673615444661 -963 (1.87697e-290) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110011001 #b1111111100101011011111011110110011110100011011010101)))
(assert (= y (fp #b1 #b00010100001 #b0111011100111000110101011101010110110011100010100001)))
(assert (= r (fp #b0 #b00000111100 #b0111011010011101000110001111100111000101101010110101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
