(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5404492253005368507245975706609897315502166748046875p542 {+ 2433966929676171 542 (2.21771e+163)}
; Y = 1.454266193208416435567187363631092011928558349609375p-731 {+ 2045833058460438 -731 (1.28741e-220)}
; 1.5404492253005368507245975706609897315502166748046875p542 * 1.454266193208416435567187363631092011928558349609375p-731 == 1.120111615354332901262068844516761600971221923828125p-188
; [HW: 1.120111615354332901262068844516761600971221923828125p-188] 

; mpf : + 540934626152642 -188
; mpfd: + 540934626152642 -188 (2.85511e-057) class: Pos. norm. non-zero
; hwf : + 540934626152642 -188 (2.85511e-057) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011101 #b1000101001011010111000010110001111010000011110001011)))
(assert (= y (fp #b0 #b00100100100 #b0111010001001010110010100000101110000010001100010110)))
(assert (= r (fp #b0 #b01101000011 #b0001111010111111101000101000001111010001000011000010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
