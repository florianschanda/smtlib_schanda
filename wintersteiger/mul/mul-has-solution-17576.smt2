(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.779362594640103711896017557592131197452545166015625p204 {+ 3509937090807674 204 (4.57492e+061)}
; Y = -1.2827159556568445974988890156964771449565887451171875p435 {- 1273239472547859 435 (-1.1381e+131)}
; 1.779362594640103711896017557592131197452545166015625p204 * -1.2827159556568445974988890156964771449565887451171875p435 == -1.141208395521911445058549361419863998889923095703125p640
; [HW: -1.141208395521911445058549361419863998889923095703125p640] 

; mpf : - 635946077454066 640
; mpfd: - 635946077454066 640 (-5.2067e+192) class: Neg. norm. non-zero
; hwf : - 635946077454066 640 (-5.2067e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011001011 #b1100011110000100010011101001011110110100011101111010)))
(assert (= y (fp #b1 #b10110110010 #b0100100001100000000100101010011110011010100000010011)))
(assert (= r (fp #b1 #b11001111111 #b0010010000100110001110111100000010101111111011110010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
