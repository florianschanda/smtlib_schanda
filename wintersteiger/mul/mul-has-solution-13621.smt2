(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.075668434405480322624271138920448720455169677734375p191 {+ 340780332992230 191 (3.37604e+057)}
; Y = 1.87703479738835188328494041343219578266143798828125p756 {+ 3949813586709140 756 (7.11458e+227)}
; 1.075668434405480322624271138920448720455169677734375p191 * 1.87703479738835188328494041343219578266143798828125p756 == 1.0095335409156682704434615516220219433307647705078125p948
; [HW: 1.0095335409156682704434615516220219433307647705078125p948] 

; mpf : + 42935251315325 948
; mpfd: + 42935251315325 948 (2.40191e+285) class: Pos. norm. non-zero
; hwf : + 42935251315325 948 (2.40191e+285) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111110 #b0001001101011111000000011010101100011100011011100110)))
(assert (= y (fp #b0 #b11011110011 #b1110000010000101010110100011110000111100101010010100)))
(assert (= r (fp #b0 #b11110110011 #b0000001001110000110010100100011001110010101001111101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
