(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.642843113521954112599132713512517511844635009765625p949 {+ 2895108006515162 949 (7.81739e+285)}
; Y = 1.5517940998768893212655939350952394306659698486328125p351 {+ 2485059702590797 351 (7.11808e+105)}
; 1.642843113521954112599132713512517511844635009765625p949 * 1.5517940998768893212655939350952394306659698486328125p351 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110100 #b1010010010010001010111011100010100001001000111011010)))
(assert (= y (fp #b0 #b10101011110 #b1000110101000010011000001100110100011000110101001101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
