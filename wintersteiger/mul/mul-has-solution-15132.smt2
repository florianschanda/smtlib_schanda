(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2116103971099911884579114484949968755245208740234375p283 {- 953008505572279 283 (-1.88301e+085)}
; Y = -1.5944329715296909899535648946766741573810577392578125p-18 {- 2677088109077853 -18 (-6.08228e-006)}
; -1.2116103971099911884579114484949968755245208740234375p283 * -1.5944329715296909899535648946766741573810577392578125p-18 == 1.93183156580035220173385823727585375308990478515625p265
; [HW: 1.93183156580035220173385823727585375308990478515625p265] 

; mpf : + 4196596292510532 265
; mpfd: + 4196596292510532 265 (1.1453e+080) class: Pos. norm. non-zero
; hwf : + 4196596292510532 265 (1.1453e+080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011010 #b0011011000101100000110010101011100010100101110110111)))
(assert (= y (fp #b1 #b01111101101 #b1001100000101100110000100101110001100010010101011101)))
(assert (= r (fp #b0 #b10100001000 #b1110111010001100100000110111010001111110001101000100)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
