(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6677399880073842108885173729504458606243133544921875p604 {+ 3007233561170435 604 (1.10725e+182)}
; Y = 1.923106285922688396539115274208597838878631591796875p-1020 {+ 4157301125304782 -1020 (1.71162e-307)}
; 1.6677399880073842108885173729504458606243133544921875p604 * 1.923106285922688396539115274208597838878631591796875p-1020 == 1.6036206271108148779802604622091166675090789794921875p-415
; [HW: 1.6036206271108148779802604622091166675090789794921875p-415] 

; mpf : + 2718465631329411 -415
; mpfd: + 2718465631329411 -415 (1.89519e-125) class: Pos. norm. non-zero
; hwf : + 2718465631329411 -415 (1.89519e-125) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011011 #b1010101011110001000000100000001010111001001000000011)))
(assert (= y (fp #b0 #b00000000011 #b1110110001010000101100011000110011000101000111001110)))
(assert (= r (fp #b0 #b01001100000 #b1001101010000110111000011010010010100001110010000011)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
