(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4365885469074850533388598705641925334930419921875p620 {+ 1966220017166776 620 (6.25072e+186)}
; Y = 1.3474174987466807085212394667905755341053009033203125p848 {+ 1564629317897541 848 (2.52894e+255)}
; 1.4365885469074850533388598705641925334930419921875p620 * 1.3474174987466807085212394667905755341053009033203125p848 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101011 #b0110111111000100010001000101101011000110100110111000)))
(assert (= y (fp #b0 #b11101001111 #b0101100011110000010110100110101100101100110101000101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
