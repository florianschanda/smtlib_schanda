(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.629212719430865430325638953945599496364593505859375p-24 {+ 2833722168765622 -24 (9.71086e-008)}
; Y = -1.6591906737593997700486170288058929145336151123046875p602 {- 2968730872708939 602 (-2.75394e+181)}
; 1.629212719430865430325638953945599496364593505859375p-24 * -1.6591906737593997700486170288058929145336151123046875p602 == -1.3515872748249406765097546667675487697124481201171875p579
; [HW: -1.3515872748249406765097546667675487697124481201171875p579] 

; mpf : - 1583408319889811 579
; mpfd: - 1583408319889811 579 (-2.67431e+174) class: Neg. norm. non-zero
; hwf : - 1583408319889811 579 (-2.67431e+174) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111100111 #b1010000100010100000101011011010000101110110010110110)))
(assert (= y (fp #b1 #b11001011001 #b1010100011000000101110000101000110011111111101001011)))
(assert (= r (fp #b1 #b11001000010 #b0101101000000001100111111010011100010000000110010011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
