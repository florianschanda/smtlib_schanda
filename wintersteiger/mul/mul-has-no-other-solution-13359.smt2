(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6525725772915411670993535153684206306934356689453125p-322 {- 2938925615922389 -322 (-1.9342e-097)}
; Y = 1.469683178273978541028554900549352169036865234375p206 {+ 2115264986656880 206 (1.51148e+062)}
; -1.6525725772915411670993535153684206306934356689453125p-322 * 1.469683178273978541028554900549352169036865234375p206 == -1.214379058861126292612198085407726466655731201171875p-115
; [HW: -1.214379058861126292612198085407726466655731201171875p-115] 

; mpf : - 965477449603006 -115
; mpfd: - 965477449603006 -115 (-2.92351e-035) class: Neg. norm. non-zero
; hwf : - 965477449603006 -115 (-2.92351e-035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111101 #b1010011100001110111111110001010110111011110011010101)))
(assert (= y (fp #b0 #b10011001101 #b0111100000111101001010000010001000101011000001110000)))
(assert (= r (fp #b1 #b01110001100 #b0011011011100001100010111100011011000001011110111110)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
