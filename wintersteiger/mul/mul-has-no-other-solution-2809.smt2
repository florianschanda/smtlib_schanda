(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0453128979999217751384321672958321869373321533203125p-265 {+ 204071150547525 -265 (1.76318e-080)}
; Y = 1.8793510467170089217603390352451242506504058837890625p185 {+ 3960245046322577 185 (9.21631e+055)}
; 1.0453128979999217751384321672958321869373321533203125p-265 * 1.8793510467170089217603390352451242506504058837890625p185 == 1.96450988900294287731185249867849051952362060546875p-80
; [HW: 1.96450988900294287731185249867849051952362060546875p-80] 

; mpf : + 4343766376708812 -80
; mpfd: + 4343766376708812 -80 (1.625e-024) class: Pos. norm. non-zero
; hwf : + 4343766376708812 -80 (1.625e-024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110110 #b0000101110011001101000000100011011111111001001000101)))
(assert (= y (fp #b0 #b10010111000 #b1110000100011101001001100111001101011010010110010001)))
(assert (= r (fp #b0 #b01110101111 #b1111011011101010000111101011110111101111101011001100)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
