(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.599950574357785537671361453249119222164154052734375p541 {+ 2701937183118438 541 (1.15169e+163)}
; Y = 1.4816279440313750992430641417740844190120697021484375p-8 {+ 2169059429270919 -8 (0.00578761)}
; 1.599950574357785537671361453249119222164154052734375p541 * 1.4816279440313750992430641417740844190120697021484375p-8 == 1.1852657400187716074668742294306866824626922607421875p534
; [HW: 1.1852657400187716074668742294306866824626922607421875p534] 

; mpf : + 834362717713059 534
; mpfd: + 834362717713059 534 (6.66551e+160) class: Pos. norm. non-zero
; hwf : + 834362717713059 534 (6.66551e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011100 #b1001100110010110010111000110000000010101010001100110)))
(assert (= y (fp #b0 #b01111110111 #b0111101101001011111110000000110001110100010110000111)))
(assert (= r (fp #b0 #b11000010101 #b0010111101101101100100110101011001110011001010100011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
