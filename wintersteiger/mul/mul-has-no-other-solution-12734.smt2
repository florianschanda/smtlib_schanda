(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8261089938634291751640148504520766437053680419921875p-909 {+ 3720464156930755 -909 (4.2195e-274)}
; Y = -1.4244623026878826532737321031163446605205535888671875p-79 {- 1911608268217971 -79 (-2.35658e-024)}
; 1.8261089938634291751640148504520766437053680419921875p-909 * -1.4244623026878826532737321031163446605205535888671875p-79 == -1.3006117111788764173496701914700679481029510498046875p-987
; [HW: -1.3006117111788764173496701914700679481029510498046875p-987] 

; mpf : - 1353834790448395 -987
; mpfd: - 1353834790448395 -987 (-9.94356e-298) class: Neg. norm. non-zero
; hwf : - 1353834790448395 -987 (-9.94356e-298) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110010 #b1101001101111011111000010000011110010011001011000011)))
(assert (= y (fp #b1 #b01110110000 #b0110110010101001100011111011110001101101111001110011)))
(assert (= r (fp #b1 #b00000100100 #b0100110011110100111000111001110001001110110100001011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
