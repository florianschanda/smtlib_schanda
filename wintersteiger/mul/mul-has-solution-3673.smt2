(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1525728105607175866254010543343611061573028564453125p-797 {+ 687126852788117 -797 (1.38281e-240)}
; Y = 1.160820002326112376778155521606095135211944580078125p783 {+ 724268902549602 783 (5.90543e+235)}
; 1.1525728105607175866254010543343611061573028564453125p-797 * 1.160820002326112376778155521606095135211944580078125p783 == 1.337929572636106012595291758771054446697235107421875p-14
; [HW: 1.337929572636106012595291758771054446697235107421875p-14] 

; mpf : + 1521899497401438 -14
; mpfd: + 1521899497401438 -14 (8.16607e-005) class: Pos. norm. non-zero
; hwf : + 1521899497401438 -14 (8.16607e-005) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100010 #b0010011100001111000000101111111110011101111110010101)))
(assert (= y (fp #b0 #b11100001110 #b0010100100101011011111111110101010001000100001100010)))
(assert (= r (fp #b0 #b01111110001 #b0101011010000010100011010110111011010010110001011110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
