(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.15415079623893035432047327049076557159423828125p-718 {+ 694233468500512 -718 (8.37e-217)}
; Y = 1.1011995122363431587331206173985265195369720458984375p247 {+ 455762085597671 247 (2.49043e+074)}
; 1.15415079623893035432047327049076557159423828125p-718 * 1.1011995122363431587331206173985265195369720458984375p247 == 1.27095029386549729366606698022224009037017822265625p-471
; [HW: 1.27095029386549729366606698022224009037017822265625p-471] 

; mpf : + 1220251642488580 -471
; mpfd: + 1220251642488580 -471 (2.08449e-142) class: Pos. norm. non-zero
; hwf : + 1220251642488580 -471 (2.08449e-142) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110001 #b0010011101110110011011010011010001111111101000100000)))
(assert (= y (fp #b0 #b10011110110 #b0001100111101000001101100001001101101101000111100111)))
(assert (= r (fp #b0 #b01000101000 #b0100010101011100111111111001101011111110011100000100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
