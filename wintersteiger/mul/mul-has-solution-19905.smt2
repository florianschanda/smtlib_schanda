(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4474860539406011472607360701658762991428375244140625p-398 {+ 2015298025780385 -398 (2.24221e-120)}
; Y = -1.7317609208161488520971715843188576400279998779296875p232 {- 3295558210311899 232 (-1.19522e+070)}
; 1.4474860539406011472607360701658762991428375244140625p-398 * -1.7317609208161488520971715843188576400279998779296875p232 == -1.2533498908203546395867533647106029093265533447265625p-165
; [HW: -1.2533498908203546395867533647106029093265533447265625p-165] 

; mpf : - 1140986473892905 -165
; mpfd: - 1140986473892905 -165 (-2.67993e-050) class: Neg. norm. non-zero
; hwf : - 1140986473892905 -165 (-2.67993e-050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001110001 #b0111001010001110011100100010111100010111010010100001)))
(assert (= y (fp #b1 #b10011100111 #b1011101101010100101011110000011101100101011011011011)))
(assert (= r (fp #b1 #b01101011010 #b0100000011011011100010011101011110000100110000101001)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
