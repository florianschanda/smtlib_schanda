(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.49435052527175660230795983807183802127838134765625p-1015 {- 2226356841404292 -1015 (-4.25605e-306)}
; Y = 1.4647286701664741226380783700733445584774017333984375p937 {+ 2092951865790119 937 (1.70162e+282)}
; -1.49435052527175660230795983807183802127838134765625p-1015 * 1.4647286701664741226380783700733445584774017333984375p937 == -1.094409028821936136210979384486563503742218017578125p-77
; [HW: -1.094409028821936136210979384486563503742218017578125p-77] 

; mpf : - 425180467022882 -77
; mpfd: - 425180467022882 -77 (-7.24219e-024) class: Neg. norm. non-zero
; hwf : - 425180467022882 -77 (-7.24219e-024) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001000 #b0111111010001101110000011000101011001101011110000100)))
(assert (= y (fp #b0 #b11110101000 #b0111011011111000011101010100011111100000111010100111)))
(assert (= r (fp #b1 #b01110110010 #b0001100000101011001100001010101100111100110000100010)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
