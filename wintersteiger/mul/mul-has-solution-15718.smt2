(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3305381234765072395731522192363627254962921142578125p-469 {- 1488611369720541 -469 (-8.7289e-142)}
; Y = -1.45021479554884269447256883722729980945587158203125p20 {- 2027587185470452 20 (-1.52066e+006)}
; -1.3305381234765072395731522192363627254962921142578125p-469 * -1.45021479554884269447256883722729980945587158203125p20 == 1.929566072707423973753293466870673000812530517578125p-449
; [HW: 1.929566072707423973753293466870673000812530517578125p-449] 

; mpf : + 4186393418661410 -449
; mpfd: + 4186393418661410 -449 (1.32737e-135) class: Pos. norm. non-zero
; hwf : + 4186393418661410 -449 (1.32737e-135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101010 #b0101010010011110001001010111111001101001101011011101)))
(assert (= y (fp #b1 #b10000010011 #b0111001101000001010001101101111100001110101111110100)))
(assert (= r (fp #b0 #b01000111110 #b1110110111111000000010101100100110111111111000100010)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
