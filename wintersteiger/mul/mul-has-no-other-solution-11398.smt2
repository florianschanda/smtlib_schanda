(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5932037786764727815835840374347753822803497314453125p775 {- 2671552316602133 775 (-3.16605e+233)}
; Y = 1.141547615117105340942771363188512623310089111328125p537 {+ 637473786696578 537 (5.13572e+161)}
; -1.5932037786764727815835840374347753822803497314453125p775 * 1.141547615117105340942771363188512623310089111328125p537 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100000110 #b1001011111011100001100111110110101000111011100010101)))
(assert (= y (fp #b0 #b11000011000 #b0010010000111100011101101110100111000001001110000010)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
