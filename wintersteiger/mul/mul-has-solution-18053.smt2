(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.698927584707546234454866862506605684757232666015625p-1015 {- 3147690010047866 -1015 (-4.83871e-306)}
; Y = 1.5270831604091699151837246972718276083469390869140625p578 {+ 2373771524812001 578 (1.51078e+174)}
; -1.698927584707546234454866862506605684757232666015625p-1015 * 1.5270831604091699151837246972718276083469390869140625p578 == -1.2972018526807589378080365349887870252132415771484375p-436
; [HW: -1.2972018526807589378080365349887870252132415771484375p-436] 

; mpf : - 1338478152986887 -436
; mpfd: - 1338478152986887 -436 (-7.3102e-132) class: Neg. norm. non-zero
; hwf : - 1338478152986887 -436 (-7.3102e-132) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001000 #b1011001011101100111010110000111010010111010101111010)))
(assert (= y (fp #b0 #b11001000001 #b1000011011101110111011000000100000111010110011100001)))
(assert (= r (fp #b1 #b01001001011 #b0100110000010101011010111010110110010011000100000111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
