(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.343817756306829647172662589582614600658416748046875p-1022 {+ 1548417519186798 -1023 (7.6502e-309)}
; Y = -1.71445768645173490796196347218938171863555908203125p668 {- 3217631370476020 668 (-2.09973e+201)}
; 0.343817756306829647172662589582614600658416748046875p-1022 * -1.71445768645173490796196347218938171863555908203125p668 == -1.178921990077667292240448659867979586124420166015625p-355
; [HW: -1.178921990077667292240448659867979586124420166015625p-355] 

; mpf : - 805793007842170 -355
; mpfd: - 805793007842170 -355 (-1.60634e-107) class: Neg. norm. non-zero
; hwf : - 805793007842170 -355 (-1.60634e-107) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0101100000000100011100001100001100011111001101101110)))
(assert (= y (fp #b1 #b11010011011 #b1011011011100110101100101110110110101111100111110100)))
(assert (= r (fp #b1 #b01010011100 #b0010110111001101110101001101111111101011001101111010)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
