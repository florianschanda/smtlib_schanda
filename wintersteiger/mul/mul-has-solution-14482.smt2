(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2846265614465586235581895380164496600627899169921875p579 {- 1281844076070467 579 (-2.54182e+174)}
; Y = 1.473032400125528607048863705131225287914276123046875p79 {+ 2130348540939502 79 (8.90393e+023)}
; -1.2846265614465586235581895380164496600627899169921875p579 * 1.473032400125528607048863705131225287914276123046875p79 == -1.8922965470726291759007153814309276640415191650390625p658
; [HW: -1.8922965470726291759007153814309276640415191650390625p658] 

; mpf : - 4018546396900273 658
; mpfd: - 4018546396900273 658 (-2.26322e+198) class: Neg. norm. non-zero
; hwf : - 4018546396900273 658 (-2.26322e+198) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001000010 #b0100100011011101010010010100110011111100011001000011)))
(assert (= y (fp #b0 #b10001001110 #b0111100100011000101001101100000001111100110011101110)))
(assert (= r (fp #b1 #b11010010001 #b1110010001101101100010111110100000000010101110110001)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
