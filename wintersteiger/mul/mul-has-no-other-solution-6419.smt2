(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4958717785763326890702273885835893452167510986328125p165 {- 2233207957219917 165 (-6.9959e+049)}
; Y = 1.7705210106816278159413968751323409378528594970703125p888 {+ 3470118136586917 888 (3.65374e+267)}
; -1.4958717785763326890702273885835893452167510986328125p165 * 1.7705210106816278159413968751323409378528594970703125p888 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100100 #b0111111011110001011100111110111111111110101001001101)))
(assert (= y (fp #b0 #b11101110111 #b1100010101000000110111010110110111000010001010100101)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
