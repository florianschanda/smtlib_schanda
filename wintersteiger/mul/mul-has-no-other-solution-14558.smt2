(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2574531141379574616934178266092203557491302490234375p993 {+ 1159465748897079 993 (1.05263e+299)}
; Y = 1.648139537472610438584297298802994191646575927734375p-326 {+ 2918960979445734 -326 (1.20563e-098)}
; 1.2574531141379574616934178266092203557491302490234375p993 * 1.648139537472610438584297298802994191646575927734375p-326 == 1.036229096964413454173836726113222539424896240234375p668
; [HW: 1.036229096964413454173836726113222539424896240234375p668] 

; mpf : + 163161347588902 668
; mpfd: + 163161347588902 668 (1.26909e+201) class: Pos. norm. non-zero
; hwf : + 163161347588902 668 (1.26909e+201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100000 #b0100000111101000011100101000000101111001110100110111)))
(assert (= y (fp #b0 #b01010111001 #b1010010111101100011110010000010010110000011111100110)))
(assert (= r (fp #b0 #b11010011011 #b0000100101000110010011110110001010100000001100100110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
