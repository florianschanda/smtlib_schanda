(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6883814420440348413876563427038490772247314453125p499 {- 3100194405878280 499 (-2.76337e+150)}
; Y = -1.480785698763884550288594255107454955577850341796875p-601 {- 2165266293798094 -601 (-1.78429e-181)}
; -1.6883814420440348413876563427038490772247314453125p499 * -1.480785698763884550288594255107454955577850341796875p-601 == 1.2500655467185755043146855314262211322784423828125p-101
; [HW: 1.2500655467185755043146855314262211322784423828125p-101] 

; mpf : + 1126195103019976 -101
; mpfd: + 1126195103019976 -101 (4.93064e-031) class: Pos. norm. non-zero
; hwf : + 1126195103019976 -101 (4.93064e-031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110010 #b1011000000111001110001000010010011000000101000001000)))
(assert (= y (fp #b1 #b00110100110 #b0111101100010100110001011000010010010011010011001110)))
(assert (= r (fp #b0 #b01110011010 #b0100000000000100010010111011000100000011001111001000)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
