(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6342940109264050274617829927592538297176361083984375p158 {- 2856606271251495 158 (-5.97131e+047)}
; Y = -1.6547001313932554467100999318063259124755859375p-997 {- 2948507267782080 -997 (-1.23542e-300)}
; -1.6342940109264050274617829927592538297176361083984375p158 * -1.6547001313932554467100999318063259124755859375p-997 == 1.3521332573075663940898039072635583579540252685546875p-838
; [HW: 1.3521332573075663940898039072635583579540252685546875p-838] 

; mpf : + 1585867206395115 -838
; mpfd: + 1585867206395115 -838 (7.37706e-253) class: Pos. norm. non-zero
; hwf : + 1585867206395115 -838 (7.37706e-253) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011101 #b1010001001100001000101111010000011111010010000100111)))
(assert (= y (fp #b1 #b00000011010 #b1010011110011010011011011000010100000101010111000000)))
(assert (= r (fp #b0 #b00010111001 #b0101101000100101011001111011011111111000010011101011)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
