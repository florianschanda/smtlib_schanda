(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.02862362859402356463078831438906490802764892578125p-365 {- 128909363070036 -365 (-1.3687e-110)}
; Y = -1.5587124952455668758233287007897160947322845458984375p-224 {- 2516217385395175 -224 (-5.78159e-068)}
; -1.02862362859402356463078831438906490802764892578125p-365 * -1.5587124952455668758233287007897160947322845458984375p-224 == 1.6033285027943395828486927712219767272472381591796875p-589
; [HW: 1.6033285027943395828486927712219767272472381591796875p-589] 

; mpf : + 2717150020366587 -589
; mpfd: + 2717150020366587 -589 (7.91325e-178) class: Pos. norm. non-zero
; hwf : + 2717150020366587 -589 (7.91325e-178) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010010 #b0000011101010011111000001100110010110100010001010100)))
(assert (= y (fp #b1 #b01100011111 #b1000111100000111110010000011011011110010001111100111)))
(assert (= r (fp #b0 #b00110110010 #b1001101001110011101111001001110000111111000011111011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
