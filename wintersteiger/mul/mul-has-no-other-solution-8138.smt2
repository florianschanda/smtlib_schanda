(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0343754922509511562367379156057722866535186767578125p1 {- 154813454092061 1 (-2.06875)}
; Y = 1.1289803443646022618196411713142879307270050048828125p167 {+ 580875830818541 167 (2.11201e+050)}
; -1.0343754922509511562367379156057722866535186767578125p1 * 1.1289803443646022618196411713142879307270050048828125p167 == -1.167789599443783910004412973648868501186370849609375p168
; [HW: -1.167789599443783910004412973648868501186370849609375p168] 

; mpf : - 755657177531670 168
; mpfd: - 755657177531670 168 (-4.36922e+050) class: Neg. norm. non-zero
; hwf : - 755657177531670 168 (-4.36922e+050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000000000 #b0000100011001100110101010000111100000000011100011101)))
(assert (= y (fp #b0 #b10010100110 #b0010000100000100110110110001100011011111011011101101)))
(assert (= r (fp #b1 #b10010100111 #b0010101011110100010000100101101000111000010100010110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
