(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.34452744423356929104329537949524819850921630859375p-526 {- 1551613669469212 -526 (-6.12057e-159)}
; Y = 1.0754779182183309416132033220492303371429443359375p319 {+ 339922324362776 319 (1.1486e+096)}
; -1.34452744423356929104329537949524819850921630859375p-526 * 1.0754779182183309416132033220492303371429443359375p319 == -1.4460095767117320253447587674600072205066680908203125p-207
; [HW: -1.4460095767117320253447587674600072205066680908203125p-207] 

; mpf : - 2008648563482629 -207
; mpfd: - 2008648563482629 -207 (-7.03011e-063) class: Neg. norm. non-zero
; hwf : - 2008648563482629 -207 (-7.03011e-063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110001 #b0101100000110010111100110101100110001110110000011100)))
(assert (= y (fp #b0 #b10100111110 #b0001001101010010100001010101011001010001011000011000)))
(assert (= r (fp #b1 #b01100110000 #b0111001000101101101011110000000110101110000000000101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
