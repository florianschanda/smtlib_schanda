(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0727216253722671179815506548038683831691741943359375p792 {+ 327509084928319 792 (2.79411e+238)}
; Y = 1.8507267698720397675060667097568511962890625p-85 {+ 3831332763789824 -85 (4.78402e-026)}
; 1.0727216253722671179815506548038683831691741943359375p792 * 1.8507267698720397675060667097568511962890625p-85 == 1.9853146286971001810428560929722152650356292724609375p707
; [HW: 1.9853146286971001810428560929722152650356292724609375p707] 

; mpf : + 4437462594642959 707
; mpfd: + 4437462594642959 707 (1.33671e+213) class: Pos. norm. non-zero
; hwf : + 4437462594642959 707 (1.33671e+213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010111 #b0001001010011101111000100110101010101111100100111111)))
(assert (= y (fp #b0 #b01110101010 #b1101100111001001001110101100011001101110101000000000)))
(assert (= r (fp #b0 #b11011000010 #b1111110000111101100101000101101010000110010000001111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
