(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0854264974254570486067450474365614354610443115234375p-775 {+ 384726741972855 -775 (5.46203e-234)}
; Y = 1.1950066580537337390666152714402414858341217041015625p827 {+ 878231912545561 827 (1.06949e+249)}
; 1.0854264974254570486067450474365614354610443115234375p-775 * 1.1950066580537337390666152714402414858341217041015625p827 == 1.2970918912513649257078895971062593162059783935546875p52
; [HW: 1.2970918912513649257078895971062593162059783935546875p52] 

; mpf : + 1337982930734443 52
; mpfd: + 1337982930734443 52 (5.84158e+015) class: Pos. norm. non-zero
; hwf : + 1337982930734443 52 (5.84158e+015) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111000 #b0001010111011110100000101100110010100111011101110111)))
(assert (= y (fp #b0 #b11100111010 #b0011000111101011111101001101001011010111110100011001)))
(assert (= r (fp #b0 #b10000110011 #b0100110000001110001101101101010011010100110101101011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
