(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2747503863179876493205711085465736687183380126953125p-197 {- 1237365737441589 -197 (-6.34623e-060)}
; Y = 1.08309019293833852515263060922734439373016357421875p813 {+ 374204961955244 813 (5.91631e+244)}
; -1.2747503863179876493205711085465736687183380126953125p-197 * 1.08309019293833852515263060922734439373016357421875p813 == -1.380669641865370778077704017050564289093017578125p616
; [HW: -1.380669641865370778077704017050564289093017578125p616] 

; mpf : - 1714383657256144 616
; mpfd: - 1714383657256144 616 (-3.75463e+185) class: Neg. norm. non-zero
; hwf : - 1714383657256144 616 (-3.75463e+185) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111010 #b0100011001010110000010101001001111001100100100110101)))
(assert (= y (fp #b0 #b11100101100 #b0001010101000101011001100001110101001001110110101100)))
(assert (= r (fp #b1 #b11001100111 #b0110000101110011100100001100111001100100010011010000)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
