(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5939676816246421964251567260362207889556884765625p-386 {- 2674992629634856 -386 (-1.01135e-116)}
; Y = -1.4178569611454976406861305804341100156307220458984375p139 {- 1881860454509031 139 (-9.88102e+041)}
; -1.5939676816246421964251567260362207889556884765625p-386 * -1.4178569611454976406861305804341100156307220458984375p139 == 1.1300090866162244562787009272142313420772552490234375p-246
; [HW: 1.1300090866162244562787009272142313420772552490234375p-246] 

; mpf : + 585508874039607 -246
; mpfd: + 585508874039607 -246 (9.99316e-075) class: Pos. norm. non-zero
; hwf : + 585508874039607 -246 (9.99316e-075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001111101 #b1001100000001110010001000001011101110101011100101000)))
(assert (= y (fp #b1 #b10010001010 #b0110101011111000101011000111111010000110100111100111)))
(assert (= r (fp #b0 #b01100001001 #b0010000101001000010001101000011100110011000100110111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
