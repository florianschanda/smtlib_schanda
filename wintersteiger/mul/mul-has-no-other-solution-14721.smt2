(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7638174949923237644355822340003214776515960693359375p675 {+ 3439928185826495 675 (2.76504e+203)}
; Y = -1.5062728565466290131524829121190123260021209716796875p300 {- 2280050248091195 300 (-3.06833e+090)}
; 1.7638174949923237644355822340003214776515960693359375p675 * -1.5062728565466290131524829121190123260021209716796875p300 == -1.328395208304503416485431444016285240650177001953125p976
; [HW: -1.328395208304503416485431444016285240650177001953125p976] 

; mpf : - 1478960537750418 976
; mpfd: - 1478960537750418 976 (-8.48405e+293) class: Neg. norm. non-zero
; hwf : - 1478960537750418 976 (-8.48405e+293) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010100010 #b1100001110001001100010110001100100011010110010111111)))
(assert (= y (fp #b1 #b10100101011 #b1000000110011011000110010001000110111000011000111011)))
(assert (= r (fp #b1 #b11111001111 #b0101010000010001101101010101011111010100101110010010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
