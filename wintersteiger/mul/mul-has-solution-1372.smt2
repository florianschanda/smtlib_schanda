(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.650761150854502812279633872094564139842987060546875p-84 {- 2930767676495534 -84 (-8.53424e-026)}
; Y = 1.6653949227267894617199317508493550121784210205078125p970 {+ 2996672326046589 970 (1.66193e+292)}
; -1.650761150854502812279633872094564139842987060546875p-84 * 1.6653949227267894617199317508493550121784210205078125p970 == -1.37458461963386024962119336123578250408172607421875p887
; [HW: -1.37458461963386024962119336123578250408172607421875p887] 

; mpf : - 1686979153401772 887
; mpfd: - 1686979153401772 887 (-1.41833e+267) class: Neg. norm. non-zero
; hwf : - 1686979153401772 887 (-1.41833e+267) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101011 #b1010011010011000010010000110010001101101011010101110)))
(assert (= y (fp #b0 #b11111001001 #b1010101001010111010100100101100000001001001101111101)))
(assert (= r (fp #b1 #b11101110110 #b0101111111100100110001110001001011101001011110101100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
