(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.22170554239625062109553255140781402587890625p935 {- 998472998121728 935 (-3.54824e+281)}
; Y = 1.3218165064931728380770437070168554782867431640625p-919 {+ 1449332698724328 -919 (2.98267e-277)}
; -1.22170554239625062109553255140781402587890625p935 * 1.3218165064931728380770437070168554782867431640625p-919 == -1.6148705520135588908914314743014983832836151123046875p16
; [HW: -1.6148705520135588908914314743014983832836151123046875p16] 

; mpf : - 2769130788929355 16
; mpfd: - 2769130788929355 16 (-105832) class: Neg. norm. non-zero
; hwf : - 2769130788929355 16 (-105832) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110100110 #b0011100011000001101100011100010111101111000100000000)))
(assert (= y (fp #b0 #b00001101000 #b0101001001100010100100010000101010110011011111101000)))
(assert (= r (fp #b1 #b10000001111 #b1001110101101000001010000001000000101011111101001011)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
