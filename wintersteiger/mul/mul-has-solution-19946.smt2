(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.324261914618669155885299915098585188388824462890625p-141 {+ 1460345837847082 -141 (4.75056e-043)}
; Y = 1.868369107117437533105430702562443912029266357421875p796 {+ 3910786787234142 796 (7.78645e+239)}
; 1.324261914618669155885299915098585188388824462890625p-141 * 1.868369107117437533105430702562443912029266357421875p796 == 1.23710502550285550427133784978650510311126708984375p656
; [HW: 1.23710502550285550427133784978650510311126708984375p656] 

; mpf : + 1067826104502332 656
; mpfd: + 1067826104502332 656 (3.69899e+197) class: Pos. norm. non-zero
; hwf : + 1067826104502332 656 (3.69899e+197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110010 #b0101001100000010110101000010111010100000001000101010)))
(assert (= y (fp #b0 #b11100011011 #b1101111001001101011100000001001111101101000101011110)))
(assert (= r (fp #b0 #b11010001111 #b0011110010110010111010100011101001000000100000111100)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
