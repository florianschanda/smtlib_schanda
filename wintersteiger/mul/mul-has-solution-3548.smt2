(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.830750270453124439740122397779487073421478271484375p909 {+ 3741366608450630 909 (7.9231e+273)}
; Y = 1.802365023311492731039606951526366174221038818359375p470 {+ 3613530820000758 470 (5.49466e+141)}
; 1.830750270453124439740122397779487073421478271484375p909 * 1.802365023311492731039606951526366174221038818359375p470 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001100 #b1101010010101100000011001011101010111101010001000110)))
(assert (= y (fp #b0 #b10111010101 #b1100110101100111110010110100111010010011101111110110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
