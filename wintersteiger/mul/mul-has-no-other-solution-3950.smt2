(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0265932909385899751697479587164707481861114501953125p444 {- 119765535161589 444 (-4.66355e+133)}
; Y = -1.34739868242635463246870131115429103374481201171875p-232 {- 1564544576724332 -232 (-1.95226e-070)}
; -1.0265932909385899751697479587164707481861114501953125p444 * -1.34739868242635463246870131115429103374481201171875p-232 == 1.3832304475983916436376830461085774004459381103515625p212
; [HW: 1.3832304475983916436376830461085774004459381103515625p212] 

; mpf : + 1725916501001145 212
; mpfd: + 1725916501001145 212 (9.10445e+063) class: Pos. norm. non-zero
; hwf : + 1725916501001145 212 (9.10445e+063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111011 #b0000011011001110110100010110001011011111110011110101)))
(assert (= y (fp #b1 #b01100010111 #b0101100011101111000111101011101110110001110101101100)))
(assert (= r (fp #b0 #b10011010011 #b0110001000011011011000111111111101000100001110111001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
