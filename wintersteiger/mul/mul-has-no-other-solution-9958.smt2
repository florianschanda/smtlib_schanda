(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.438141598206332361087333993054926395416259765625p666 {+ 1973214338417552 666 (4.4033e+200)}
; Y = 1.079053945128450653356821931083686649799346923828125p66 {+ 356027317822658 66 (7.96201e+019)}
; 1.438141598206332361087333993054926395416259765625p666 * 1.079053945128450653356821931083686649799346923828125p66 == 1.551832365197878260687502915970981121063232421875p732
; [HW: 1.551832365197878260687502915970981121063232421875p732] 

; mpf : + 2485232034276144 732
; mpfd: + 2485232034276144 732 (3.50592e+220) class: Pos. norm. non-zero
; hwf : + 2485232034276144 732 (3.50592e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011001 #b0111000000101010000011000011101101010000001110010000)))
(assert (= y (fp #b0 #b10001000001 #b0001010000111100111000010001110011110010010011000010)))
(assert (= r (fp #b0 #b11011011011 #b1000110101000100111000101100100101100110001100110000)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
