(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2025542401715718643373520535533316433429718017578125p1019 {+ 912223200559005 1019 (6.7557e+306)}
; Y = -1.4685262819415136892331474882666952908039093017578125p689 {- 2110054788765085 689 (-3.7718e+207)}
; 1.2025542401715718643373520535533316433429718017578125p1019 * -1.4685262819415136892331474882666952908039093017578125p689 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111010 #b0011001111011010100110000011110100110011111110011101)))
(assert (= y (fp #b1 #b11010110000 #b0111011111110001010101101010001001000001010110011101)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
