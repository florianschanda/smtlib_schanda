(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2564144807544941340182731437380425631999969482421875p727 {+ 1154788159978339 727 (8.87033e+218)}
; Y = -1.28879212911305085498270273092202842235565185546875p693 {- 1300604125061068 693 (-5.29627e+208)}
; 1.2564144807544941340182731437380425631999969482421875p727 * -1.28879212911305085498270273092202842235565185546875p693 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010110 #b0100000110100100011000010010000100001111101101100011)))
(assert (= y (fp #b1 #b11010110100 #b0100100111101110010001111110110111100001111111001100)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
