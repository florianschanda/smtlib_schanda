(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.270118129949090235442099583451636135578155517578125p-312 {- 1216503909384738 -312 (-1.52225e-094)}
; Y = 1.6809384502899351598870225643622688949108123779296875p647 {+ 3066674150987995 647 (9.81655e+194)}
; -1.270118129949090235442099583451636135578155517578125p-312 * 1.6809384502899351598870225643622688949108123779296875p647 == -1.06749520052088708865767330280505120754241943359375p336
; [HW: -1.06749520052088708865767330280505120754241943359375p336] 

; mpf : - 303971359915164 336
; mpfd: - 303971359915164 336 (-1.49432e+101) class: Neg. norm. non-zero
; hwf : - 303971359915164 336 (-1.49432e+101) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000111 #b0100010100100110011101100011011000110000001000100010)))
(assert (= y (fp #b0 #b11010000110 #b1010111001010001111110110111011010010101100011011011)))
(assert (= r (fp #b1 #b10101001111 #b0001000101000111010111011000111011011111110010011100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
