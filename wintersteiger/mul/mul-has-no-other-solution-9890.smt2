(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6555753495497482763454399901092983782291412353515625p606 {+ 2952448899945529 606 (4.39669e+182)}
; Y = -1.358249471577350764306402197689749300479888916015625p-719 {- 1613412186701434 -719 (-4.92507e-217)}
; 1.6555753495497482763454399901092983782291412353515625p606 * -1.358249471577350764306402197689749300479888916015625p-719 == -1.1243421718412165422051884888787753880023956298828125p-112
; [HW: -1.1243421718412165422051884888787753880023956298828125p-112] 

; mpf : - 559987358770541 -112
; mpfd: - 559987358770541 -112 (-2.1654e-034) class: Neg. norm. non-zero
; hwf : - 559987358770541 -112 (-2.1654e-034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011101 #b1010011111010011110010010011111001100001010000111001)))
(assert (= y (fp #b1 #b00100110000 #b0101101110110110001111001100010000111011111001111010)))
(assert (= r (fp #b1 #b01110001111 #b0001111111010100111000110111100110010010010101101101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
