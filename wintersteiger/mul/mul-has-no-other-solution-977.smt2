(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.25412785041829000221014212002046406269073486328125p-214 {- 1144490092448276 -214 (-4.76346e-065)}
; Y = -1.388098435207034686555971347843296825885772705078125p465 {- 1747839968181474 465 (-1.32242e+140)}
; -1.25412785041829000221014212002046406269073486328125p-214 * -1.388098435207034686555971347843296825885772705078125p465 == 1.7408529067151903291232883930206298828125p251
; [HW: 1.7408529067151903291232883930206298828125p251] 

; mpf : + 3336504874618880 251
; mpfd: + 3336504874618880 251 (6.29928e+075) class: Pos. norm. non-zero
; hwf : + 3336504874618880 251 (6.29928e+075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100101001 #b0100000100001110100001011101011010001100101000010100)))
(assert (= y (fp #b1 #b10111010000 #b0110001101011010011010110100011011010111110011100010)))
(assert (= r (fp #b0 #b10011111010 #b1011110110101000100010010011110101111101000000000000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
