(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2199440634067035826859637381858192384243011474609375p-342 {- 990540002000783 -342 (-1.3617e-103)}
; Y = -1.7484874732823516563229304665583185851573944091796875p956 {- 3370887905765883 956 (-1.06497e+288)}
; -1.2199440634067035826859637381858192384243011474609375p-342 * -1.7484874732823516563229304665583185851573944091796875p956 == 1.0665284564858961147137961233966052532196044921875p615
; [HW: 1.0665284564858961147137961233966052532196044921875p615] 

; mpf : + 299617531839416 615
; mpfd: + 299617531839416 615 (1.45017e+185) class: Pos. norm. non-zero
; hwf : + 299617531839416 615 (1.45017e+185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101001 #b0011100001001110010000010000111101000111111110001111)))
(assert (= y (fp #b1 #b11110111011 #b1011111110011100111000000000001100110110100111111011)))
(assert (= r (fp #b0 #b11001100110 #b0001000100001000000000100100100011011100001110111000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
