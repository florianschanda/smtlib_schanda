(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.295915385301071864887489937245845794677734375p720 {+ 1332684418975104 720 (7.14782e+216)}
; Y = -1.12831012697205235184583216323517262935638427734375p5 {- 577857440019196 5 (-36.1059)}
; 1.295915385301071864887489937245845794677734375p720 * -1.12831012697205235184583216323517262935638427734375p5 == -1.4621944529340884511015019597834907472133636474609375p725
; [HW: -1.4621944529340884511015019597834907472133636474609375p725] 

; mpf : - 2081538766006671 725
; mpfd: - 2081538766006671 725 (-2.58079e+218) class: Neg. norm. non-zero
; hwf : - 2081538766006671 725 (-2.58079e+218) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001111 #b0100101111000001000111000101011001000000010110000000)))
(assert (= y (fp #b1 #b10000000100 #b0010000011011000111011101011011100010111001011111100)))
(assert (= r (fp #b1 #b11011010100 #b0111011001010010011000000010101110111110100110001111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
