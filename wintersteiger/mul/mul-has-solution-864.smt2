(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0309733132693359447529246608610264956951141357421875p-313 {- 139491402098211 -313 (-6.17815e-095)}
; Y = -1.9685187178665579654790462882374413311481475830078125p-357 {- 4361820536885181 -357 (-6.7055e-108)}
; -1.0309733132693359447529246608610264956951141357421875p-313 * -1.9685187178665579654790462882374413311481475830078125p-357 == 1.01474513239579522405620082281529903411865234375p-669
; [HW: 1.01474513239579522405620082281529903411865234375p-669] 

; mpf : + 66406172763232 -669
; mpfd: + 66406172763232 -669 (4.14276e-202) class: Pos. norm. non-zero
; hwf : + 66406172763232 -669 (4.14276e-202) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000110 #b0000011111101101110111011111011110001010011000100011)))
(assert (= y (fp #b1 #b01010011010 #b1111011111110000110101111011101011001100111110111101)))
(assert (= r (fp #b0 #b00101100010 #b0000001111000110010101100100010101101010010001100000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
