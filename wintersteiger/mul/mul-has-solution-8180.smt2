(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.366069175797106627356924946070648729801177978515625p132 {- 1648629003711674 132 (-7.43759e+039)}
; Y = 1.933914728856383380417582884547300636768341064453125p801 {+ 4205978024873426 801 (2.57907e+241)}
; -1.366069175797106627356924946070648729801177978515625p132 * 1.933914728856383380417582884547300636768341064453125p801 == -1.3209306498553623487879349340801127254962921142578125p934
; [HW: -1.3209306498553623487879349340801127254962921142578125p934] 

; mpf : - 1445343155100381 934
; mpfd: - 1445343155100381 934 (-1.91821e+281) class: Neg. norm. non-zero
; hwf : - 1445343155100381 934 (-1.91821e+281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000011 #b0101110110110110101101011010001000011111010010111010)))
(assert (= y (fp #b0 #b11100100000 #b1110111100010101000010010010000110110000110111010010)))
(assert (= r (fp #b1 #b11110100101 #b0101001000101000100000101101010101101001101011011101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
