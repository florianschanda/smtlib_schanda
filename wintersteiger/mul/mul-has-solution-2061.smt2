(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1860461838353000274537407676689326763153076171875p662 {+ 837877524194360 662 (2.26965e+199)}
; Y = -1.2880306222459785292500100695178844034671783447265625p-452 {- 1297174603018281 -452 (-1.10756e-136)}
; 1.1860461838353000274537407676689326763153076171875p662 * -1.2880306222459785292500100695178844034671783447265625p-452 == -1.527663804177849637966346563189290463924407958984375p210
; [HW: -1.527663804177849637966346563189290463924407958984375p210] 

; mpf : - 2376386511872262 210
; mpfd: - 2376386511872262 210 (-2.51378e+063) class: Neg. norm. non-zero
; hwf : - 2376386511872262 210 (-2.51378e+063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010101 #b0010111110100000101110010000001100011110010000111000)))
(assert (= y (fp #b1 #b01000111011 #b0100100110111100010111111111011011001011000000101001)))
(assert (= r (fp #b1 #b10011010001 #b1000011100010100111110011001111000111010000100000110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
