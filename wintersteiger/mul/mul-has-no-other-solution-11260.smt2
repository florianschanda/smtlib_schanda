(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9910903960740304885490559172467328608036041259765625p-903 {+ 4463474338449481 -903 (2.94445e-272)}
; Y = -1.556253677085717601613623628509230911731719970703125p770 {- 2505143852846706 770 (-9.66445e+231)}
; 1.9910903960740304885490559172467328608036041259765625p-903 * -1.556253677085717601613623628509230911731719970703125p770 == -1.5493208751501337250289225266897119581699371337890625p-132
; [HW: -1.5493208751501337250289225266897119581699371337890625p-132] 

; mpf : - 2473921288632977 -132
; mpfd: - 2473921288632977 -132 (-2.84565e-040) class: Neg. norm. non-zero
; hwf : - 2473921288632977 -132 (-2.84565e-040) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001111000 #b1111110110111000000110011010011010000100100001001001)))
(assert (= y (fp #b1 #b11100000001 #b1000111001100110101001000001011101011100111001110010)))
(assert (= r (fp #b1 #b01101111011 #b1000110010100000010010101111100111000111101010010001)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
