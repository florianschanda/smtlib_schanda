(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2675754709241171536149295206996612250804901123046875p883 {+ 1205052791147339 883 (8.17448e+265)}
; Y = 1.4269870132570330323318330556503497064113616943359375p-245 {+ 1922978553796415 -245 (2.52389e-074)}
; 1.2675754709241171536149295206996612250804901123046875p883 * 1.4269870132570330323318330556503497064113616943359375p-245 == 1.8088137353318829436688019995926879346370697021484375p638
; [HW: 1.8088137353318829436688019995926879346370697021484375p638] 

; mpf : + 3642573237052807 638
; mpfd: + 3642573237052807 638 (2.06315e+192) class: Pos. norm. non-zero
; hwf : + 3642573237052807 638 (2.06315e+192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110010 #b0100010001111111110100110111100011010100101101001011)))
(assert (= y (fp #b0 #b01100001010 #b0110110101001111000001010101100111000001011100111111)))
(assert (= r (fp #b0 #b11001111101 #b1100111100001110011010101011110111001110010110000111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
