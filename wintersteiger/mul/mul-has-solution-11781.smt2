(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7360559268381392516999994768411852419376373291015625p-416 {+ 3314901197832089 -416 (1.02585e-125)}
; Y = 1.45132126395892413484034477733075618743896484375p188 {+ 2032570276189792 188 (5.69381e+056)}
; 1.7360559268381392516999994768411852419376373291015625p-416 * 1.45132126395892413484034477733075618743896484375p188 == 1.2597874410210547768684818947804160416126251220703125p-227
; [HW: 1.2597874410210547768684818947804160416126251220703125p-227] 

; mpf : + 1169978622577957 -227
; mpfd: + 1169978622577957 -227 (5.84101e-069) class: Pos. norm. non-zero
; hwf : + 1169978622577957 -227 (5.84101e-069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001011111 #b1011110001101110001010010100010111001011111110011001)))
(assert (= y (fp #b0 #b10010111011 #b0111001110001001110010100101010010110001011001100000)))
(assert (= r (fp #b0 #b01100011100 #b0100001010000001011011100000001100011000110100100101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
