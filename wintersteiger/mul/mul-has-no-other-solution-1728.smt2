(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3619201143150292399042200486292131245136260986328125p-814 {- 1629943291967053 -814 (-1.24662e-245)}
; Y = 1.286543637946810481054171759751625359058380126953125p160 {+ 1290477821082642 160 (1.88029e+048)}
; -1.3619201143150292399042200486292131245136260986328125p-814 * 1.286543637946810481054171759751625359058380126953125p160 == -1.7521696584637937998962797792046330869197845458984375p-654
; [HW: -1.7521696584637937998962797792046330869197845458984375p-654] 

; mpf : - 3387470993576935 -654
; mpfd: - 3387470993576935 -654 (-2.34401e-197) class: Neg. norm. non-zero
; hwf : - 3387470993576935 -654 (-2.34401e-197) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010001 #b0101110010100110110010111110111010111111011001001101)))
(assert (= y (fp #b0 #b10010011111 #b0100100101011010111011001000000111011011110000010010)))
(assert (= r (fp #b1 #b00101110001 #b1100000010001110001100001101010000100101001111100111)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
