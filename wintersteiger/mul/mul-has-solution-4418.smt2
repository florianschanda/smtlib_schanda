(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8093192327584353140679240823374129831790924072265625p774 {+ 3644849795074665 774 (1.79776e+233)}
; Y = 1.3056222142979485578706544401939027011394500732421875p-718 {+ 1376400090428387 -718 (9.46849e-217)}
; 1.8093192327584353140679240823374129831790924072265625p774 * 1.3056222142979485578706544401939027011394500732421875p-718 == 1.181143691522966943097117109573446214199066162109375p57
; [HW: 1.181143691522966943097117109573446214199066162109375p57] 

; mpf : + 815798661643350 57
; mpfd: + 815798661643350 57 (1.70221e+017) class: Pos. norm. non-zero
; hwf : + 815798661643350 57 (1.70221e+017) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100000101 #b1100111100101111100010111001010010111000101001101001)))
(assert (= y (fp #b0 #b00100110001 #b0100111000111101010000011110011101010111001111100011)))
(assert (= r (fp #b0 #b10000111000 #b0010111001011111011011101101011011110111110001010110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
