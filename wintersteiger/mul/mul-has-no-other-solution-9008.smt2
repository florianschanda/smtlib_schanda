(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.513664855355037364148529377416707575321197509765625p189 {+ 2313340851170266 189 (1.18768e+057)}
; Y = -1.6774856609280519581517410188098438084125518798828125p692 {- 3051124170104429 692 (-3.4468e+208)}
; 1.513664855355037364148529377416707575321197509765625p189 * -1.6774856609280519581517410188098438084125518798828125p692 == -1.269575545154404405678860712214373052120208740234375p882
; [HW: -1.269575545154404405678860712214373052120208740234375p882] 

; mpf : - 1214060324705574 882
; mpfd: - 1214060324705574 882 (-4.09369e+265) class: Neg. norm. non-zero
; hwf : - 1214060324705574 882 (-4.09369e+265) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111100 #b1000001101111111100010100011101011011010101111011010)))
(assert (= y (fp #b1 #b11010110011 #b1010110101101111101100110100010100110001111001101101)))
(assert (= r (fp #b1 #b11101110001 #b0100010100000010111001110010011000111101010100100110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
