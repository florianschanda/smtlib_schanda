(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0616054902047504793216603502514772117137908935546875p-858 {+ 277446462730091 -858 (5.52366e-259)}
; Y = 1.138130401268996561015001134364865720272064208984375p671 {+ 622084023683590 671 (1.11511e+202)}
; 1.0616054902047504793216603502514772117137908935546875p-858 * 1.138130401268996561015001134364865720272064208984375p671 == 1.20824548255610242364355144673027098178863525390625p-187
; [HW: 1.20824548255610242364355144673027098178863525390625p-187] 

; mpf : + 937854277641252 -187
; mpfd: + 937854277641252 -187 (6.15951e-057) class: Pos. norm. non-zero
; hwf : + 937854277641252 -187 (6.15951e-057) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100101 #b0000111111000101011000001001110110101110111101101011)))
(assert (= y (fp #b0 #b11010011110 #b0010001101011100100000111001010000001000101000000110)))
(assert (= r (fp #b0 #b01101000100 #b0011010101001111100100110111000100011110010000100100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
