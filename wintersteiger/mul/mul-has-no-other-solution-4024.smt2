(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6213240076743382633850387719576247036457061767578125p283 {+ 2798194569438493 283 (2.51976e+085)}
; Y = -1.803218379818644745427036468754522502422332763671875p861 {- 3617373996048382 861 (-2.77252e+259)}
; 1.6213240076743382633850387719576247036457061767578125p283 * -1.803218379818644745427036468754522502422332763671875p861 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011010 #b1001111100001111000101110001010100101110010100011101)))
(assert (= y (fp #b1 #b11101011100 #b1100110110011111101110000100000011011101111111111110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
