(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4658508362642532762976088633877225220203399658203125p-131 {+ 2098005652609925 -131 (5.38469e-040)}
; Y = -1.7811533386122986311050908625475130975246429443359375p101 {- 3518001884693567 101 (-4.51576e+030)}
; 1.4658508362642532762976088633877225220203399658203125p-131 * -1.7811533386122986311050908625475130975246429443359375p101 == -1.30545255545985217082716189906932413578033447265625p-29
; [HW: -1.30545255545985217082716189906932413578033447265625p-29] 

; mpf : - 1375636014948356 -29
; mpfd: - 1375636014948356 -29 (-2.43159e-009) class: Neg. norm. non-zero
; hwf : - 1375636014948356 -29 (-2.43159e-009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111100 #b0111011101000010000000000001101010010001101110000101)))
(assert (= y (fp #b1 #b10001100100 #b1100011111111001101010100100101010000000010000111111)))
(assert (= r (fp #b1 #b01111100010 #b0100111000110010001000111000000000101110000000000100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
