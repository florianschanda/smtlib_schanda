(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.07810408504018884201514083542861044406890869140625p-593 {- 351749528283108 -593 (-3.32562e-179)}
; Y = -1.4186214609558558397139904627692885696887969970703125p712 {- 1885303455570085 712 (-3.05649e+214)}
; -1.07810408504018884201514083542861044406890869140625p-593 * -1.4186214609558558397139904627692885696887969970703125p712 == 1.5294215921821889825338303126045502722263336181640625p119
; [HW: 1.5294215921821889825338303126045502722263336181640625p119] 

; mpf : + 2384302885273601 119
; mpfd: + 2384302885273601 119 (1.01647e+036) class: Pos. norm. non-zero
; hwf : + 2384302885273601 119 (1.01647e+036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110101110 #b0001001111111110101000010001101011101110011111100100)))
(assert (= y (fp #b1 #b11011000111 #b0110101100101010110001101010110000110101100010100101)))
(assert (= r (fp #b0 #b10001110110 #b1000011110001000001011000110100000111000000000000001)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
