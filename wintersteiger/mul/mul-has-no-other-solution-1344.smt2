(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6517078460522072180793884399463422596454620361328125p138 {+ 2935031212635149 138 (5.75536e+041)}
; Y = 1.46300756901462403192226702230982482433319091796875p559 {+ 2085200715283980 559 (2.76067e+168)}
; 1.6517078460522072180793884399463422596454620361328125p138 * 1.46300756901462403192226702230982482433319091796875p559 == 1.2082305402876103439524513305514119565486907958984375p698
; [HW: 1.2082305402876103439524513305514119565486907958984375p698] 

; mpf : + 937786983646439 698
; mpfd: + 937786983646439 698 (1.58886e+210) class: Pos. norm. non-zero
; hwf : + 937786983646439 698 (1.58886e+210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001001 #b1010011011010110010100110100110101010111010000001101)))
(assert (= y (fp #b0 #b11000101110 #b0111011010000111101010011111111010110111111000001100)))
(assert (= r (fp #b0 #b11010111001 #b0011010101001110100110001100000010010000010011100111)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
