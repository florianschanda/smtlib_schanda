(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.909677928150966152998080360703170299530029296875p-729 {- 4096825178247856 -729 (-6.76228e-220)}
; Y = -1.047299795160281377093269838951528072357177734375p-130 {- 213019339858544 -130 (-7.69434e-040)}
; -1.909677928150966152998080360703170299530029296875p-729 * -1.047299795160281377093269838951528072357177734375p-130 == 1.0000026514873088245849430677480995655059814453125p-858
; [HW: 1.0000026514873088245849430677480995655059814453125p-858] 

; mpf : + 11941237256 -858
; mpfd: + 11941237256 -858 (5.20313e-259) class: Pos. norm. non-zero
; hwf : + 11941237256 -858 (5.20313e-259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100110 #b1110100011100000101001110001011101001101001010110000)))
(assert (= y (fp #b1 #b01101111101 #b0000110000011011110101101110000101010010001001110000)))
(assert (= r (fp #b0 #b00010100101 #b0000000000000000001011000111110000001101001000001000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
