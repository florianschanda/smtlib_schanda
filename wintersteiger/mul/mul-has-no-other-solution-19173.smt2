(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2634549396273031529602803857414983212947845458984375p-817 {- 1186495567934439 -817 (-1.44562e-246)}
; Y = 1.45049816049268986972720085759647190570831298828125p11 {+ 2028863347725972 11 (2970.62)}
; -1.2634549396273031529602803857414983212947845458984375p-817 * 1.45049816049268986972720085759647190570831298828125p11 == -1.8326390657948057327786273162928409874439239501953125p-806
; [HW: -1.8326390657948057327786273162928409874439239501953125p-806] 

; mpf : - 3749872986447605 -806
; mpfd: - 3749872986447605 -806 (-4.29438e-243) class: Neg. norm. non-zero
; hwf : - 3749872986447605 -806 (-4.29438e-243) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001110 #b0100001101110001110010000110110110101011001111100111)))
(assert (= y (fp #b0 #b10000001010 #b0111001101010011110110001111001000111001011010010100)))
(assert (= r (fp #b1 #b00011011001 #b1101010100100111110101010111010011110101111011110101)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
