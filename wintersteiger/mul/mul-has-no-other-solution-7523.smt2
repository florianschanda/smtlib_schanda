(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9942472684561056706087356360512785613536834716796875p-3 {+ 4477691627733051 -3 (0.249281)}
; Y = -1.162063631930525531288367346860468387603759765625p-375 {- 729869712372624 -375 (-1.51002e-113)}
; 1.9942472684561056706087356360512785613536834716796875p-3 * -1.162063631930525531288367346860468387603759765625p-375 == -1.1587211118748157456792569064418785274028778076171875p-377
; [HW: -1.1587211118748157456792569064418785274028778076171875p-377] 

; mpf : - 714816340295251 -377
; mpfd: - 714816340295251 -377 (-3.76418e-114) class: Neg. norm. non-zero
; hwf : - 714816340295251 -377 (-3.76418e-114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111100 #b1111111010000110111111010010111000101000000000111011)))
(assert (= y (fp #b1 #b01010001000 #b0010100101111101000000001000111100000011001110010000)))
(assert (= r (fp #b1 #b01010000110 #b0010100010100001111100100110000010101111111001010011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
