(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.07673834591536188298732668044976890087127685546875p364 {+ 345598786069452 364 (4.04603e+109)}
; Y = 1.637385872966861999344700961955823004245758056640625p340 {+ 2870530779984778 340 (3.66733e+102)}
; 1.07673834591536188298732668044976890087127685546875p364 * 1.637385872966861999344700961955823004245758056640625p340 == 1.7630361564835197452083548341761343181133270263671875p704
; [HW: 1.7630361564835197452083548341761343181133270263671875p704] 

; mpf : + 3436409350009395 704
; mpfd: + 3436409350009395 704 (1.48381e+212) class: Pos. norm. non-zero
; hwf : + 3436409350009395 704 (1.48381e+212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101011 #b0001001110100101000111111100111000001110001111001100)))
(assert (= y (fp #b0 #b10101010011 #b1010001100101011101110000111011101010011001110001010)))
(assert (= r (fp #b0 #b11010111111 #b1100001101010110010101100110100111000011001000110011)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
