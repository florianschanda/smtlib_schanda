(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0519046256220507817857878762879408895969390869140625p771 {+ 233757652610273 771 (1.30648e+232)}
; Y = 1.263957260679961169813623200752772390842437744140625p720 {+ 1188757820840010 720 (6.97155e+216)}
; 1.0519046256220507817857878762879408895969390869140625p771 * 1.263957260679961169813623200752772390842437744140625p720 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100000010 #b0000110101001001100111110001110110001110110011100001)))
(assert (= y (fp #b0 #b11011001111 #b0100001110010010101100111111101000101001100001001010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
