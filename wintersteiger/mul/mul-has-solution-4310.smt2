(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.07194623713937620124170280178077518939971923828125p679 {+ 324017046771604 679 (2.68869e+204)}
; Y = 1.2979061005208236689867362656514160335063934326171875p557 {+ 1341649803296979 557 (6.12281e+167)}
; 1.07194623713937620124170280178077518939971923828125p679 * 1.2979061005208236689867362656514160335063934326171875p557 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010100110 #b0001001001101011000100011000111110010101011110010100)))
(assert (= y (fp #b0 #b11000101100 #b0100110001000011100100101111111100000100000011010011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
