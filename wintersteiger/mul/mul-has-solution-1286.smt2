(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5054187303092099181611729363794438540935516357421875p-787 {- 2276203605486627 -787 (-1.84948e-237)}
; Y = -1.4554478275678677245963399400352500379085540771484375p757 {- 2051154666521351 757 (-1.10332e+228)}
; -1.5054187303092099181611729363794438540935516357421875p-787 * -1.4554478275678677245963399400352500379085540771484375p757 == 1.0955292103042586493444332518265582621097564697265625p-29
; [HW: 1.0955292103042586493444332518265582621097564697265625p-29] 

; mpf : + 430225315929257 -29
; mpfd: + 430225315929257 -29 (2.04058e-009) class: Pos. norm. non-zero
; hwf : + 430225315929257 -29 (2.04058e-009) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101100 #b1000000101100011000111110011010101110110110000100011)))
(assert (= y (fp #b1 #b11011110100 #b0111010010011000001110101001010001110000001100000111)))
(assert (= r (fp #b0 #b01111100010 #b0001100001110100100110100011001000010001110010101001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
