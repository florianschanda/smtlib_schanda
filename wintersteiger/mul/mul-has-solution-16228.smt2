(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.300141038719200725637392679345794022083282470703125p386 {+ 1351715070134386 386 (2.04913e+116)}
; Y = 1.40301967753632172986044679419137537479400634765625p277 {+ 1815039269575556 277 (3.407e+083)}
; 1.300141038719200725637392679345794022083282470703125p386 * 1.40301967753632172986044679419137537479400634765625p277 == 1.8241234608955512186412306618876755237579345703125p663
; [HW: 1.8241234608955512186412306618876755237579345703125p663] 

; mpf : + 3711522111396488 663
; mpfd: + 3711522111396488 663 (6.98138e+199) class: Pos. norm. non-zero
; hwf : + 3711522111396488 663 (6.98138e+199) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000001 #b0100110011010110000010110000100101111100100001110010)))
(assert (= y (fp #b0 #b10100010100 #b0110011100101100010011000010111010101001101110000100)))
(assert (= r (fp #b0 #b11010010110 #b1101001011111001110000010101000001101001101010001000)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
