(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.960281634978260800750149428495205938816070556640625p-122 {+ 4324724013458826 -122 (3.68688e-037)}
; Y = -1.172781940012999957190231725689955055713653564453125p99 {- 778140680658898 99 (-7.43339e+029)}
; 1.960281634978260800750149428495205938816070556640625p-122 * -1.172781940012999957190231725689955055713653564453125p99 == -1.149491449420830146976868491037748754024505615234375p-22
; [HW: -1.149491449420830146976868491037748754024505615234375p-22] 

; mpf : - 673249635906726 -22
; mpfd: - 673249635906726 -22 (-2.7406e-007) class: Neg. norm. non-zero
; hwf : - 673249635906726 -22 (-2.7406e-007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110000101 #b1111010111010101000001000110100100101110010110001010)))
(assert (= y (fp #b1 #b10001100010 #b0010110000111011011011111110110110110001111111010010)))
(assert (= r (fp #b1 #b01111101001 #b0010011001000101000100100101011001001011010010100110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
