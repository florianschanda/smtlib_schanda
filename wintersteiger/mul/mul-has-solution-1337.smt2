(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7419577296125192678033499760203994810581207275390625p424 {- 3341480554607601 424 (-7.54668e+127)}
; Y = -1.4115188366453501611630372281069867312908172607421875p74 {- 1853316079371939 74 (-2.66628e+022)}
; -1.7419577296125192678033499760203994810581207275390625p424 * -1.4115188366453501611630372281069867312908172607421875p74 == 1.2294030739940191576664574313326738774776458740234375p499
; [HW: 1.2294030739940191576664574313326738774776458740234375p499] 

; mpf : + 1033139598557111 499
; mpfd: + 1033139598557111 499 (2.01216e+150) class: Pos. norm. non-zero
; hwf : + 1033139598557111 499 (2.01216e+150) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100111 #b1011110111110000111100010001011110110011001111110001)))
(assert (= y (fp #b1 #b10001001001 #b0110100101011001010011000110100100010100011010100011)))
(assert (= r (fp #b0 #b10111110010 #b0011101010111010001010001110110001100111111110110111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
