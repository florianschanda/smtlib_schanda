(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3136745976248527245644481808994896709918975830078125p-652 {- 1412664800978877 -652 (-7.0296e-197)}
; Y = -1.4649086927624050957774670678190886974334716796875p437 {- 2093762615486072 437 (-5.19899e+131)}
; -1.3136745976248527245644481808994896709918975830078125p-652 * -1.4649086927624050957774670678190886974334716796875p437 == 1.924413337521801548035682571935467422008514404296875p-215
; [HW: 1.924413337521801548035682571935467422008514404296875p-215] 

; mpf : + 4163187562399502 -215
; mpfd: + 4163187562399502 -215 (3.65468e-065) class: Pos. norm. non-zero
; hwf : + 4163187562399502 -215 (3.65468e-065) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101110011 #b0101000001001100111110100111101001100010011110111101)))
(assert (= y (fp #b1 #b10110110100 #b0111011100000100010000011000111100001010011001111000)))
(assert (= r (fp #b0 #b01100101000 #b1110110010100110010110100011110010100100011100001110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
