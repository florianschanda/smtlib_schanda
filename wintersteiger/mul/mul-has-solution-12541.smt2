(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.94194054845949448662167924339883029460906982421875p-25 {+ 4242123103047340 -25 (5.78743e-008)}
; Y = 1.3871289777365392037467017871676944196224212646484375p-817 {+ 1743473919878599 -817 (1.58712e-246)}
; 1.94194054845949448662167924339883029460906982421875p-25 * 1.3871289777365392037467017871676944196224212646484375p-817 == 1.3468610039048762860858232670580036938190460205078125p-841
; [HW: 1.3468610039048762860858232670580036938190460205078125p-841] 

; mpf : + 1562123087935357 -841
; mpfd: + 1562123087935357 -841 (9.18537e-254) class: Pos. norm. non-zero
; hwf : + 1562123087935357 -841 (9.18537e-254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111100110 #b1111000100100011000001000000101001101000111010101100)))
(assert (= y (fp #b0 #b00011001110 #b0110001100011010111000100111101010110110010111000111)))
(assert (= r (fp #b0 #b00010110110 #b0101100011001011111000011111110000000111011101111101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
