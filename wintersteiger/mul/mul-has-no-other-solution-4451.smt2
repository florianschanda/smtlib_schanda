(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3908739286216420527608761403826065361499786376953125p1010 {+ 1760339679289269 1010 (1.5261e+304)}
; Y = 1.1521116188535549529348145370022393763065338134765625p292 {+ 685049829987593 292 (9.16755e+087)}
; 1.3908739286216420527608761403826065361499786376953125p1010 * 1.1521116188535549529348145370022393763065338134765625p292 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111110001 #b0110010000010000010100000101010001001001111110110101)))
(assert (= y (fp #b0 #b10100100011 #b0010011011110000110010010111110001010001010100001001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
