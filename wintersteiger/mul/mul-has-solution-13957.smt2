(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.263408195481013240879519798909313976764678955078125p-100 {+ 1186285051014626 -100 (9.96653e-031)}
; Y = 1.8202934787575031361228639070759527385234832763671875p926 {+ 3694273405266739 926 (1.03256e+279)}
; 1.263408195481013240879519798909313976764678955078125p-100 * 1.8202934787575031361228639070759527385234832763671875p926 == 1.1498868496214365020335890221758745610713958740234375p827
; [HW: 1.1498868496214365020335890221758745610713958740234375p827] 

; mpf : + 675030360102839 827
; mpfd: + 675030360102839 827 (1.02911e+249) class: Pos. norm. non-zero
; hwf : + 675030360102839 827 (1.02911e+249) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011011 #b0100001101101110101110000011000100010110110111100010)))
(assert (= y (fp #b0 #b11110011101 #b1101000111111110110000001110000001100010101100110011)))
(assert (= r (fp #b0 #b11100111010 #b0010011001011110111111000000110100111001011110110111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
