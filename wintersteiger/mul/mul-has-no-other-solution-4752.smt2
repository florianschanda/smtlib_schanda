(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1660670594754141138338354721781797707080841064453125p1018 {- 747899547171989 1018 (-3.27536e+306)}
; Y = 1.0389785548078147581207986149820499122142791748046875p48 {+ 175543804907915 48 (2.92446e+014)}
; -1.1660670594754141138338354721781797707080841064453125p1018 * 1.0389785548078147581207986149820499122142791748046875p48 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111001 #b0010101010000011010111101110110101100011110010010101)))
(assert (= y (fp #b0 #b10000101111 #b0000100111111010011111111010001000100101000110001011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
