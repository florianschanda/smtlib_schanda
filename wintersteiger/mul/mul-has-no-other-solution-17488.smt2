(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1368005782812786730318066474865190684795379638671875p-408 {+ 616095033371635 -408 (1.71967e-123)}
; Y = 1.59611719241408156477746160817332565784454345703125p744 {+ 2684673165625204 744 (1.477e+224)}
; 1.1368005782812786730318066474865190684795379638671875p-408 * 1.59611719241408156477746160817332565784454345703125p744 == 1.8144669473410186544271027742070145905017852783203125p336
; [HW: 1.8144669473410186544271027742070145905017852783203125p336] 

; mpf : + 3668033040550597 336
; mpfd: + 3668033040550597 336 (2.53996e+101) class: Pos. norm. non-zero
; hwf : + 3668033040550597 336 (2.53996e+101) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100111 #b0010001100000101010111001101100111001010101111110011)))
(assert (= y (fp #b0 #b11011100111 #b1001100010011011001000101110011000000000011101110100)))
(assert (= r (fp #b0 #b10101001111 #b1101000010000000111001111110011010000000101011000101)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
