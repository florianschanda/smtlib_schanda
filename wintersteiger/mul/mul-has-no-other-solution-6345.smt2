(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2146134681687186240850451213191263377666473388671875p-163 {+ 966533135273331 -163 (1.03884e-049)}
; Y = -1.7947434498614052156284515149309299886226654052734375p820 {- 3579206304650967 820 (-1.25487e+247)}
; 1.2146134681687186240850451213191263377666473388671875p-163 * -1.7947434498614052156284515149309299886226654052734375p820 == -1.0899597830546259302764156018383800983428955078125p658
; [HW: -1.0899597830546259302764156018383800983428955078125p658] 

; mpf : - 405142845443144 658
; mpfd: - 405142845443144 658 (-1.30361e+198) class: Neg. norm. non-zero
; hwf : - 405142845443144 658 (-1.30361e+198) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101011100 #b0011011011110000111010001000001100010000110101110011)))
(assert (= y (fp #b1 #b11100110011 #b1100101101110100010011101000010111011101011011010111)))
(assert (= r (fp #b1 #b11010010001 #b0001011100000111100110101011011000101100110001001000)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
