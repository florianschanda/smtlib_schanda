(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.397715271945342951909196926862932741641998291015625p-75 {+ 1791150350532602 -75 (3.69972e-023)}
; Y = -1.465257608876391781649317636038176715373992919921875p282 {- 2095333993967006 282 (-1.1386e+085)}
; 1.397715271945342951909196926862932741641998291015625p-75 * -1.465257608876391781649317636038176715373992919921875p282 == -1.0240064686303245178322640640544705092906951904296875p208
; [HW: -1.0240064686303245178322640640544705092906951904296875p208] 

; mpf : - 108115523178011 208
; mpfd: - 108115523178011 208 (-4.21252e+062) class: Neg. norm. non-zero
; hwf : - 108115523178011 208 (-4.21252e+062) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110110100 #b0110010111010000101010110000011000011111111111111010)))
(assert (= y (fp #b1 #b10100011001 #b0111011100011011000111110110011001010110110110011110)))
(assert (= r (fp #b1 #b10011001111 #b0000011000100101010010011011010110101000111000011011)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
