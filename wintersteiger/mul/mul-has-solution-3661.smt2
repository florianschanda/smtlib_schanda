(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2916876180411944741166507810703478753566741943359375p-695 {+ 1313644247918911 -695 (7.85797e-210)}
; Y = 1.3608744201522886552169211427099071443080902099609375p589 {+ 1625233904125391 589 (2.75731e+177)}
; 1.2916876180411944741166507810703478753566741943359375p-695 * 1.3608744201522886552169211427099071443080902099609375p589 == 1.75782463821970136308436849503777921199798583984375p-106
; [HW: 1.75782463821970136308436849503777921199798583984375p-106] 

; mpf : + 3412938758298428 -106
; mpfd: + 3412938758298428 -106 (2.16669e-032) class: Pos. norm. non-zero
; hwf : + 3412938758298428 -106 (2.16669e-032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101001000 #b0100101010101100000010100010110000100010100100111111)))
(assert (= y (fp #b0 #b11001001100 #b0101110001100010010001000001100010000100010111001111)))
(assert (= r (fp #b0 #b01110010101 #b1100001000000000110010111010010101000001101100111100)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
