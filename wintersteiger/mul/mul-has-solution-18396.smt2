(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4978744966021222406737933852127753198146820068359375p187 {+ 2242227397374591 187 (2.93822e+056)}
; Y = 1.5489619910095531185589834421989507973194122314453125p-989 {+ 2472305018151189 -989 (2.96057e-298)}
; 1.4978744966021222406737933852127753198146820068359375p187 * 1.5489619910095531185589834421989507973194122314453125p-989 == 1.1600753312696274743842650423175655305385589599609375p-801
; [HW: 1.1600753312696274743842650423175655305385589599609375p-801] 

; mpf : + 720915202257103 -801
; mpfd: + 720915202257103 -801 (8.69881e-242) class: Pos. norm. non-zero
; hwf : + 720915202257103 -801 (8.69881e-242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111010 #b0111111101110100101100111111100001101011001001111111)))
(assert (= y (fp #b0 #b00000100010 #b1000110010001000110001011110011000100010000100010101)))
(assert (= r (fp #b0 #b00011011110 #b0010100011111010101100100110100010110011000011001111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
