(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.483609873663190636960962365265004336833953857421875p660 {+ 2177985246822238 660 (7.09769e+198)}
; Y = 1.39514453236494961885227894526906311511993408203125p58 {+ 1779572768716276 58 (4.02123e+017)}
; 1.483609873663190636960962365265004336833953857421875p660 * 1.39514453236494961885227894526906311511993408203125p58 == 1.0349251017019269749397381019662134349346160888671875p719
; [HW: 1.0349251017019269749397381019662134349346160888671875p719] 

; mpf : + 157288675010675 719
; mpfd: + 157288675010675 719 (2.85414e+216) class: Pos. norm. non-zero
; hwf : + 157288675010675 719 (2.85414e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010011 #b0111101111001101110110110100111101100111111101011110)))
(assert (= y (fp #b0 #b10000111001 #b0110010100101000001100010010101110110011010111110100)))
(assert (= r (fp #b0 #b11011001110 #b0000100011110000110110011111100110011110100001110011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
