(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0573215525033550221678524394519627094268798828125p-44 {+ 258153322494408 -44 (6.01018e-014)}
; Y = 1.8866174808533873186178198011475615203380584716796875p370 {+ 3992970156391483 370 (4.53714e+111)}
; 1.0573215525033550221678524394519627094268798828125p-44 * 1.8866174808533873186178198011475615203380584716796875p370 == 1.9947613238358723464216382126323878765106201171875p326
; [HW: 1.9947613238358723464216382126323878765106201171875p326] 

; mpf : + 4480006727349816 326
; mpfd: + 4480006727349816 326 (2.7269e+098) class: Pos. norm. non-zero
; hwf : + 4480006727349816 326 (2.7269e+098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010011 #b0000111010101100101000000001000101011011100111001000)))
(assert (= y (fp #b0 #b10101110001 #b1110001011111001010111001111110001010011110000111011)))
(assert (= r (fp #b0 #b10101000101 #b1111111010101000101011011001100100110011011000111000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
