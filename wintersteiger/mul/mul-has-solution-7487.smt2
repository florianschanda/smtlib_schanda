(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.104518622060503663107056127046234905719757080078125p-154 {- 470710027364962 -154 (-4.83675e-047)}
; Y = -1.78634671563211977485252646147273480892181396484375p748 {- 3541390775504828 748 (-2.64486e+225)}
; -1.104518622060503663107056127046234905719757080078125p-154 * -1.78634671563211977485252646147273480892181396484375p748 == 1.973053212872295514301868024631403386592864990234375p594
; [HW: 1.973053212872295514301868024631403386592864990234375p594] 

; mpf : + 4382242086903334 594
; mpfd: + 4382242086903334 594 (1.27925e+179) class: Pos. norm. non-zero
; hwf : + 4382242086903334 594 (1.27925e+179) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100101 #b0001101011000001101110110111111110010010101001100010)))
(assert (= y (fp #b1 #b11011101011 #b1100100101001110000001001011001011110100111110111100)))
(assert (= r (fp #b0 #b11001010001 #b1111100100011010000000111110111010001101111000100110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
