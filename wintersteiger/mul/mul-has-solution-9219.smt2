(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.121711418979520313854436608380638062953948974609375p-250 {+ 548139501162902 -250 (6.19986e-076)}
; Y = 1.1825571611592733400897259343764744699001312255859375p-667 {+ 822164362970719 -667 (1.93115e-201)}
; 1.121711418979520313854436608380638062953948974609375p-250 * 1.1825571611592733400897259343764744699001312255859375p-667 == 1.3264878712683618733336743389372713863849639892578125p-917
; [HW: 1.3264878712683618733336743389372713863849639892578125p-917] 

; mpf : + 1470370655385181 -917
; mpfd: + 1470370655385181 -917 (1.19728e-276) class: Pos. norm. non-zero
; hwf : + 1470370655385181 -917 (1.19728e-276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000101 #b0001111100101000011110101100010000010001000110010110)))
(assert (= y (fp #b0 #b00101100100 #b0010111010111100000100001110110011010100011001011111)))
(assert (= r (fp #b0 #b00001101010 #b0101001110010100101101011000100110100011011001011101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
