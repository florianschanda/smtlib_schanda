(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6019801595797653614994260351522825658321380615234375p620 {- 2711077622367863 620 (-6.97035e+186)}
; Y = -1.7977697352849435485921958388644270598888397216796875p-613 {- 3592835482556731 -613 (-5.28867e-185)}
; -1.6019801595797653614994260351522825658321380615234375p620 * -1.7977697352849435485921958388644270598888397216796875p-613 == 1.4399957237097231743661041036830283701419830322265625p8
; [HW: 1.4399957237097231743661041036830283701419830322265625p8] 

; mpf : + 1981564577343721 8
; mpfd: + 1981564577343721 8 (368.639) class: Pos. norm. non-zero
; hwf : + 1981564577343721 8 (368.639) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001101011 #b1001101000011011010111110010101000111100011001110111)))
(assert (= y (fp #b1 #b00110011010 #b1100110000111010101000110010101011001001100100111011)))
(assert (= r (fp #b0 #b10000000111 #b0111000010100011100011110100101110110110100011101001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
