(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.41711659387107147267670370638370513916015625p-451 {+ 1878526136727808 -451 (2.43712e-136)}
; Y = -1.6219828663525166501102603433537296950817108154296875p63 {- 2801161805136027 63 (-1.49602e+019)}
; 1.41711659387107147267670370638370513916015625p-451 * -1.6219828663525166501102603433537296950817108154296875p63 == -1.149269417441357798992385141900740563869476318359375p-387
; [HW: -1.149269417441357798992385141900740563869476318359375p-387] 

; mpf : - 672249692766710 -387
; mpfd: - 672249692766710 -387 (-3.64597e-117) class: Neg. norm. non-zero
; hwf : - 672249692766710 -387 (-3.64597e-117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111100 #b0110101011001000001001110011000101001011100100000000)))
(assert (= y (fp #b1 #b10000111110 #b1001111100111010010001001110010110101000000010011011)))
(assert (= r (fp #b1 #b01001111100 #b0010011000110110100001010100001000110100000111110110)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
