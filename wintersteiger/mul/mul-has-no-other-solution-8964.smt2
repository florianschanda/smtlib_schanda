(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1322578766424928886635825620032846927642822265625p110 {- 595636523963944 110 (-1.46975e+033)}
; Y = -1.3466324776612055291735714490641839802265167236328125p-421 {- 1561093897229517 -421 (-2.48669e-127)}
; -1.1322578766424928886635825620032846927642822265625p110 * -1.3466324776612055291735714490641839802265167236328125p-421 == 1.5247352297744958260494740898138843476772308349609375p-311
; [HW: 1.5247352297744958260494740898138843476772308349609375p-311] 

; mpf : + 2363197385280591 -311
; mpfd: + 2363197385280591 -311 (3.65482e-094) class: Pos. norm. non-zero
; hwf : + 2363197385280591 -311 (3.65482e-094) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101101 #b0010000111011011101001101111011011010001011000101000)))
(assert (= y (fp #b1 #b01001011010 #b0101100010111100111001111111001101001001010011001101)))
(assert (= r (fp #b0 #b01011001000 #b1000011001010101000011000100101011110000110001001111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
