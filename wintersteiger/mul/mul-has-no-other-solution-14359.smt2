(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.35761230803663845989603942143730819225311279296875p571 {+ 1610542657216908 571 (1.04931e+172)}
; Y = 1.4063991823161690053467509642359800636768341064453125p997 {+ 1830259206042773 997 (1.88371e+300)}
; 1.35761230803663845989603942143730819225311279296875p571 * 1.4063991823161690053467509642359800636768341064453125p997 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111010 #b0101101110001100011110101110111110101010000110001100)))
(assert (= y (fp #b0 #b11111100100 #b0110100000001001110001101101110100101011010010010101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
