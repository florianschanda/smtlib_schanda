(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8508722348350641340175570803694427013397216796875p-443 {- 3831987879743096 -443 (-8.1487e-134)}
; Y = -1.35333151646098226450476431637071073055267333984375p417 {- 1591263685871932 417 (-4.58049e+125)}
; -1.8508722348350641340175570803694427013397216796875p-443 * -1.35333151646098226450476431637071073055267333984375p417 == 1.25242186417243228646611896692775189876556396484375p-25
; [HW: 1.25242186417243228646611896692775189876556396484375p-25] 

; mpf : + 1136807013427132 -25
; mpfd: + 1136807013427132 -25 (3.73251e-008) class: Pos. norm. non-zero
; hwf : + 1136807013427132 -25 (3.73251e-008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001000100 #b1101100111010010110000110100010110110000111001111000)))
(assert (= y (fp #b1 #b10110100000 #b0101101001110011111011110010101111011000100100111100)))
(assert (= r (fp #b0 #b01111100110 #b0100000010011110101110000010001101101010011110111100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
