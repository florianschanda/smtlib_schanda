(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9637923906848999688889989556628279387950897216796875p426 {- 4340535051551035 426 (-3.40309e+128)}
; Y = -1.1950845878424243284854355806601233780384063720703125p-370 {- 878582877112869 -370 (-4.96936e-112)}
; -1.9637923906848999688889989556628279387950897216796875p426 * -1.1950845878424243284854355806601233780384063720703125p-370 == 1.173449009914876217663959323544986546039581298828125p57
; [HW: 1.173449009914876217663959323544986546039581298828125p57] 

; mpf : + 781144896420418 57
; mpfd: + 781144896420418 57 (1.69112e+017) class: Pos. norm. non-zero
; hwf : + 781144896420418 57 (1.69112e+017) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110101001 #b1111011010111011000110010001111000100000000100111011)))
(assert (= y (fp #b1 #b01010001101 #b0011000111110001000100000100010010111100101000100101)))
(assert (= r (fp #b0 #b10000111000 #b0010110001100111001001111000000100011011101001000010)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
