(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.249901968491890169588032222236506640911102294921875p-6 {+ 1125458412179230 -6 (0.0195297)}
; Y = -1.034806803121363305564273105119355022907257080078125p-592 {- 156755905567330 -592 (-6.38413e-179)}
; 1.249901968491890169588032222236506640911102294921875p-6 * -1.034806803121363305564273105119355022907257080078125p-592 == -1.29340706023019169634835634496994316577911376953125p-598
; [HW: -1.29340706023019169634835634496994316577911376953125p-598] 

; mpf : - 1321387927120564 -598
; mpfd: - 1321387927120564 -598 (-1.2468e-180) class: Neg. norm. non-zero
; hwf : - 1321387927120564 -598 (-1.2468e-180) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111001 #b0011111111111001100100110100110111100000111100011110)))
(assert (= y (fp #b1 #b00110101111 #b0000100011101001000110010100000100010101101001100010)))
(assert (= r (fp #b1 #b00110101001 #b0100101100011100101110011010000000011010101010110100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
