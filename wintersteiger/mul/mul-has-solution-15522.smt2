(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9271763798368775066904845516546629369258880615234375p435 {- 4175631198740087 435 (-1.7099e+131)}
; Y = 1.545076714522686689434749496285803616046905517578125p-545 {+ 2454807288412706 -545 (1.34154e-164)}
; -1.9271763798368775066904845516546629369258880615234375p435 * 1.545076714522686689434749496285803616046905517578125p-545 == -1.488817674632044063542934964061714708805084228515625p-109
; [HW: -1.488817674632044063542934964061714708805084228515625p-109] 

; mpf : - 2201439097324986 -109
; mpfd: - 2201439097324986 -109 (-2.29389e-033) class: Neg. norm. non-zero
; hwf : - 2201439097324986 -109 (-2.29389e-033) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110110010 #b1110110101011011011011100110010100000101111001110111)))
(assert (= y (fp #b0 #b00111011110 #b1000101110001010001001011100011010101111101000100010)))
(assert (= r (fp #b1 #b01110010010 #b0111110100100011001001111011011001000000010110111010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
