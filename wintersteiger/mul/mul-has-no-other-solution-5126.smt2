(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.118903517790556190192319263587705790996551513671875p40 {- 535493838414590 40 (-1.23025e+012)}
; Y = -1.77735912542389851154212010442279279232025146484375p-775 {- 3500914267592124 -775 (-8.94393e-234)}
; -1.118903517790556190192319263587705790996551513671875p40 * -1.77735912542389851154212010442279279232025146484375p-775 == 1.988693377813946394638833226053975522518157958984375p-735
; [HW: 1.988693377813946394638833226053975522518157958984375p-735] 

; mpf : + 4452679127906566 -735
; mpfd: + 4452679127906566 -735 (1.10033e-221) class: Pos. norm. non-zero
; hwf : + 4452679127906566 -735 (1.10033e-221) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100111 #b0001111001110000011101100000000001001010001011111110)))
(assert (= y (fp #b1 #b00011111000 #b1100011100000001000000011111010011110001010110111100)))
(assert (= r (fp #b0 #b00100100000 #b1111110100011011000000100101101101111011100100000110)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
