(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6883186744524996125704774385667406022548675537109375p247 {+ 3099911725776431 247 (3.81824e+074)}
; Y = -1.6941094529894964448857308525475673377513885498046875p357 {- 3125991073837835 357 (-4.97336e+107)}
; 1.6883186744524996125704774385667406022548675537109375p247 * -1.6941094529894964448857308525475673377513885498046875p357 == -1.4300983130243378749213434275588952004909515380859375p605
; [HW: -1.4300983130243378749213434275588952004909515380859375p605] 

; mpf : - 1936990602269087 605
; mpfd: - 1936990602269087 605 (-1.89895e+182) class: Neg. norm. non-zero
; hwf : - 1936990602269087 605 (-1.89895e+182) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110110 #b1011000000110101101001110001001111111111111000101111)))
(assert (= y (fp #b1 #b10101100100 #b1011000110110001001010000011100001101111001100001011)))
(assert (= r (fp #b1 #b11001011100 #b0110111000011010111011000100110010000001000110011111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
