(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.77425972934970577199464969453401863574981689453125p819 {+ 3486955828587316 819 (6.20274e+246)}
; Y = -1.524637950315009593538206900120712816715240478515625p-475 {- 2362759277543098 -475 (-1.56286e-143)}
; 1.77425972934970577199464969453401863574981689453125p819 * -1.524637950315009593538206900120712816715240478515625p-475 == -1.3525518585410993832596204811125062406063079833984375p345
; [HW: -1.3525518585410993832596204811125062406063079833984375p345] 

; mpf : - 1587752418754471 345
; mpfd: - 1587752418754471 345 (-9.69399e+103) class: Neg. norm. non-zero
; hwf : - 1587752418754471 345 (-9.69399e+103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100110010 #b1100011000110101111000101011100000101010101100110100)))
(assert (= y (fp #b1 #b01000100100 #b1000011001001110101011000011011011010111111010111010)))
(assert (= r (fp #b1 #b10101011000 #b0101101001000000110101101010111010010011111110100111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
