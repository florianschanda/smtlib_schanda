(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.903386696347829865061385135049931704998016357421875p711 {+ 4068491989043550 711 (2.05047e+214)}
; Y = -1.8040177976330074027799810210126452147960662841796875p521 {- 3620974253819259 521 (-1.23842e+157)}
; 1.903386696347829865061385135049931704998016357421875p711 * -1.8040177976330074027799810210126452147960662841796875p521 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000110 #b1110011101000100010110011011110001110100100101011110)))
(assert (= y (fp #b1 #b11000001000 #b1100110111010100000111000100001000111100010101111011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
