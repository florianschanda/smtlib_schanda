(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2590989519701241139415515135624445974826812744140625p125 {- 1166877943544737 125 (-5.35561e+037)}
; Y = -1.2419775570569040468171806423924863338470458984375p-861 {- 1089770035793496 -861 (-8.0777e-260)}
; -1.2590989519701241139415515135624445974826812744140625p125 * -1.2419775570569040468171806423924863338470458984375p-861 == 1.56377264046076280834540739306248724460601806640625p-736
; [HW: 1.56377264046076280834540739306248724460601806640625p-736] 

; mpf : + 2539006253500772 -736
; mpfd: + 2539006253500772 -736 (4.3261e-222) class: Pos. norm. non-zero
; hwf : + 2539006253500772 -736 (4.3261e-222) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001111100 #b0100001001010100010011110001010100100011101110100001)))
(assert (= y (fp #b1 #b00010100010 #b0011110111110010001111011011110111101100111001011000)))
(assert (= r (fp #b0 #b00100011111 #b1001000001010011011001110101110100101000100101100100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
