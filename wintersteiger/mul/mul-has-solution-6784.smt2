(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3393346435875399524917384042055346071720123291015625p335 {+ 1528227374414745 335 (9.37427e+100)}
; Y = -1.2478881707974094350532823227695189416408538818359375p960 {- 1116389073632767 960 (-1.21611e+289)}
; 1.3393346435875399524917384042055346071720123291015625p335 * -1.2478881707974094350532823227695189416408538818359375p960 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001110 #b0101011011011110101000101001110010011011101110011001)))
(assert (= y (fp #b1 #b11110111111 #b0011111101110101100110010110001010100011110111111111)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
