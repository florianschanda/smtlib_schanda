(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.23685683777807042815766180865466594696044921875p274 {+ 1066708366357472 274 (3.75438e+082)}
; Y = -1.8590070190106577907585005959845148026943206787109375p-229 {- 3868623690725039 -229 (-2.15483e-069)}
; 1.23685683777807042815766180865466594696044921875p274 * -1.8590070190106577907585005959845148026943206787109375p-229 == -1.1496627714703795408723863147315569221973419189453125p46
; [HW: -1.1496627714703795408723863147315569221973419189453125p46] 

; mpf : - 674021201825237 46
; mpfd: - 674021201825237 46 (-8.09003e+013) class: Neg. norm. non-zero
; hwf : - 674021201825237 46 (-8.09003e+013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010001 #b0011110010100010101001100101010000010111001111100000)))
(assert (= y (fp #b1 #b01100011010 #b1101101111100111111000100100110110101111011010101111)))
(assert (= r (fp #b1 #b10000101101 #b0010011001010000010011001010010011100100110111010101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
