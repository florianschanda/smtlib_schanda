(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.428892278086114853152821524417959153652191162109375p950 {- 1931559103770710 950 (-1.35986e+286)}
; Y = -1.7971172864474553865221650994499213993549346923828125p157 {- 3589897114215341 157 (-3.28311e+047)}
; -1.428892278086114853152821524417959153652191162109375p950 * -1.7971172864474553865221650994499213993549346923828125p157 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110101 #b0110110111001011111000100110001111100011000001010110)))
(assert (= y (fp #b1 #b10010011100 #b1100110000001111111000001110010001011110001110101101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
