(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5888009472251940490394872540491633117198944091796875p-798 {- 2651723726518779 -798 (-9.53088e-241)}
; Y = -1.463554368383427561894905011286027729511260986328125p-261 {- 2087663280717570 -261 (-3.94984e-079)}
; -1.5888009472251940490394872540491633117198944091796875p-798 * -1.463554368383427561894905011286027729511260986328125p-261 == 0.0000000000169186886722627605195157229900360107421875p-1022
; [HW: 0.0000000000169186886722627605195157229900360107421875p-1022] 

; mpf : + 76195 -1023
; mpfd: + 76195 -1023 (3.76453e-319) class: Pos. denorm.
; hwf : + 76195 -1023 (3.76453e-319) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011100001 #b1001011010111011101010001010110000101111100111111011)))
(assert (= y (fp #b1 #b01011111010 #b0111011010101011011111111100010000011111111100000010)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000010010100110100011)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
