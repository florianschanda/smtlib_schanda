(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.71956971572804118153499075560830533504486083984375p954 {- 3240653903619900 954 (-2.6184e+287)}
; Y = 1.7396151506247468088162122512585483491420745849609375p-513 {+ 3330930516751183 -513 (6.48732e-155)}
; -1.71956971572804118153499075560830533504486083984375p954 * 1.7396151506247468088162122512585483491420745849609375p-513 == -1.495694765017994587452676569228060543537139892578125p442
; [HW: -1.495694765017994587452676569228060543537139892578125p442] 

; mpf : - 2232410759024546 442
; mpfd: - 2232410759024546 442 (-1.69864e+133) class: Neg. norm. non-zero
; hwf : - 2232410759024546 442 (-1.69864e+133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111001 #b1011100000110101101110001000110000111110011100111100)))
(assert (= y (fp #b0 #b00111111110 #b1011110101010111011010110010001110001111001101001111)))
(assert (= r (fp #b1 #b10110111001 #b0111111011100101110110100010010010001100111110100010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
