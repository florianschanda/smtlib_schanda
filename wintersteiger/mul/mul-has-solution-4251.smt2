(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.569287589002016591877008977462537586688995361328125p203 {- 2563843373696130 203 (-2.0174e+061)}
; Y = 1.4414331096043853097654618977685458958148956298828125p988 {+ 1988037987923309 988 (3.77077e+297)}
; -1.569287589002016591877008977462537586688995361328125p203 * 1.4414331096043853097654618977685458958148956298828125p988 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001010 #b1001000110111100110101001101100011001000010010000010)))
(assert (= y (fp #b0 #b11111011011 #b0111000100000001110000101010000100011111010101101101)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
