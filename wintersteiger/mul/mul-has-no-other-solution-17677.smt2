(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.644848770151753125645655018161050975322723388671875p2 {+ 2904140680965758 2 (6.5794)}
; Y = 1.1621206837400472888788272030069492757320404052734375p603 {+ 730126650880727 603 (3.85779e+181)}
; 1.644848770151753125645655018161050975322723388671875p2 * 1.1621206837400472888788272030069492757320404052734375p603 == 1.91151277741773117924140024115331470966339111328125p605
; [HW: 1.91151277741773117924140024115331470966339111328125p605] 

; mpf : + 4105088604721940 605
; mpfd: + 4105088604721940 605 (2.53819e+182) class: Pos. norm. non-zero
; hwf : + 4105088604721940 605 (2.53819e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000000001 #b1010010100010100110011110001101010101010111001111110)))
(assert (= y (fp #b0 #b11001011010 #b0010100110000000101111011011101010101011001011010111)))
(assert (= r (fp #b0 #b11001011100 #b1110100101011000111001101100000011100101001100010100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
