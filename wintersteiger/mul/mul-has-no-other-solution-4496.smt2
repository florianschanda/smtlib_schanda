(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.788700941556549128819142424617893993854522705078125p748 {- 3551993266500834 748 (-2.64834e+225)}
; Y = 1.543075441264198044422073508030734956264495849609375p1000 {+ 2445794354911510 1000 (1.65342e+301)}
; -1.788700941556549128819142424617893993854522705078125p748 * 1.543075441264198044422073508030734956264495849609375p1000 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101011 #b1100100111101000010011100000111001001111010011100010)))
(assert (= y (fp #b0 #b11111100111 #b1000101100000110111111011111101101111101100100010110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
