(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2790229391042602369310543508618138730525970458984375p-720 {- 1256607604577767 -720 (-2.3189e-217)}
; Y = -1.3301981015687187603901975307962857186794281005859375p493 {- 1487080047183327 493 (-3.40176e+148)}
; -1.2790229391042602369310543508618138730525970458984375p-720 * -1.3301981015687187603901975307962857186794281005859375p493 == 1.701353885459329973173225880600512027740478515625p-227
; [HW: 1.701353885459329973173225880600512027740478515625p-227] 

; mpf : + 3158617097209488 -227
; mpfd: + 3158617097209488 -227 (7.88834e-069) class: Pos. norm. non-zero
; hwf : + 3158617097209488 -227 (7.88834e-069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101111 #b0100011101101110000011000001111001001001010111100111)))
(assert (= y (fp #b1 #b10111101100 #b0101010010000111110111001101111101110000010111011111)))
(assert (= r (fp #b0 #b01100011100 #b1011001110001011111011011010000011111000011010010000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
