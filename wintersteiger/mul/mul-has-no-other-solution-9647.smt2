(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.716512906881387579005604493431746959686279296875p261 {- 3226887260437168 261 (-6.36028e+078)}
; Y = 1.4561020038519785213537716117571108043193817138671875p979 {+ 2054100814590707 979 (7.43974e+294)}
; -1.716512906881387579005604493431746959686279296875p261 * 1.4561020038519785213537716117571108043193817138671875p979 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000100 #b1011011101101101011000111100111000110111101010110000)))
(assert (= y (fp #b0 #b11111010010 #b0111010011000011000110011101011000101111001011110011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
