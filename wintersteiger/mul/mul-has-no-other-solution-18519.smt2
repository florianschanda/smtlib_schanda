(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5730155683863020765755891261505894362926483154296875p-3 {+ 2580632700262043 -3 (0.196627)}
; Y = 1.566151947165012270346551304101012647151947021484375p477 {+ 2549721698287430 477 (6.11142e+143)}
; 1.5730155683863020765755891261505894362926483154296875p-3 * 1.566151947165012270346551304101012647151947021484375p477 == 1.231790697674542744977088659652508795261383056640625p475
; [HW: 1.231790697674542744977088659652508795261383056640625p475] 

; mpf : + 1043892499675018 475
; mpfd: + 1043892499675018 475 (1.20167e+143) class: Pos. norm. non-zero
; hwf : + 1043892499675018 475 (1.20167e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111100 #b1001001010110001001001011111011001010001011010011011)))
(assert (= y (fp #b0 #b10111011100 #b1001000011101111010101011000000110100011111101000110)))
(assert (= r (fp #b0 #b10111011010 #b0011101101010110101000101001101000000111011110001010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
