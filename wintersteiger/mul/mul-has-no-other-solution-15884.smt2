(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4523328138121109898150962180807255208492279052734375p-781 {+ 2037125891731671 -781 (1.14193e-235)}
; Y = -1.1822406315927624920192329227575100958347320556640625p-473 {- 820738840532929 -473 (-4.8475e-143)}
; 1.4523328138121109898150962180807255208492279052734375p-781 * -1.1822406315927624920192329227575100958347320556640625p-473 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110010 #b0111001111001100000101010101001000111011000011010111)))
(assert (= y (fp #b1 #b01000100110 #b0010111010100111010100100111000010110001011111000001)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
