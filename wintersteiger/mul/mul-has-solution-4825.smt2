(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.595357838993801014026985285454429686069488525390625p-887 {+ 2681253341844586 -887 (1.54615e-267)}
; Y = 1.67542666823470032255727346637286245822906494140625p183 {+ 3041851291377892 183 (2.05407e+055)}
; 1.595357838993801014026985285454429686069488525390625p-887 * 1.67542666823470032255727346637286245822906494140625p183 == 1.3364525344137476725592250659246928989887237548828125p-703
; [HW: 1.3364525344137476725592250659246928989887237548828125p-703] 

; mpf : + 1515247508613613 -703
; mpfd: + 1515247508613613 -703 (3.1759e-212) class: Pos. norm. non-zero
; hwf : + 1515247508613613 -703 (3.1759e-212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001000 #b1001100001101001010111110000111111100101010001101010)))
(assert (= y (fp #b0 #b10010110110 #b1010110011101000110000110001101011101010000011100100)))
(assert (= r (fp #b0 #b00101000000 #b0101011000100001110000001101011111110110100111101101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
