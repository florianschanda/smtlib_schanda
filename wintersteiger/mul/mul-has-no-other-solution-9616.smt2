(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.59148585286564259178021529805846512317657470703125p-371 {+ 2663815466560628 -371 (3.30883e-112)}
; Y = -1.2568429384615751320808385571581311523914337158203125p-350 {- 1156717761948293 -350 (-5.48002e-106)}
; 1.59148585286564259178021529805846512317657470703125p-371 * -1.2568429384615751320808385571581311523914337158203125p-350 == -1.000123877917840076179345487616956233978271484375p-720
; [HW: -1.000123877917840076179345487616956233978271484375p-720] 

; mpf : - 557896544624 -720
; mpfd: - 557896544624 -720 (-1.81325e-217) class: Neg. norm. non-zero
; hwf : - 557896544624 -720 (-1.81325e-217) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010001100 #b1001011101101011100111011110101000011010110001110100)))
(assert (= y (fp #b1 #b01010100001 #b0100000111000000011101010111010011100110101010000101)))
(assert (= r (fp #b1 #b00100101111 #b0000000000001000000111100101001110011011000101110000)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
