(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2168634516007290624628467412549071013927459716796875p879 {- 976666159819323 879 (-4.90465e+264)}
; Y = 1.635440167269857081322470548911951482295989990234375p-128 {+ 2861768100532774 -128 (4.80613e-039)}
; -1.2168634516007290624628467412549071013927459716796875p879 * 1.635440167269857081322470548911951482295989990234375p-128 == -1.990107366830471846697037108242511749267578125p751
; [HW: -1.990107366830471846697037108242511749267578125p751] 

; mpf : - 4459047168314496 751
; mpfd: - 4459047168314496 751 (-2.35724e+226) class: Neg. norm. non-zero
; hwf : - 4459047168314496 751 (-2.35724e+226) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101110 #b0011011110000100010111001111100001010010101000111011)))
(assert (= y (fp #b0 #b01101111111 #b1010001010101100001101001111000011111101001000100110)))
(assert (= r (fp #b1 #b11011101110 #b1111110101110111101011010010100000010000110010000000)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
