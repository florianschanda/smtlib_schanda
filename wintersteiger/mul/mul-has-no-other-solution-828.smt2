(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.033939483829801719849683649954386055469512939453125p273 {+ 152849846729042 273 (1.56922e+082)}
; Y = -1.7830554362131236789679178400547243654727935791015625p-522 {- 3526568170739865 -522 (-1.29869e-157)}
; 1.033939483829801719849683649954386055469512939453125p273 * -1.7830554362131236789679178400547243654727935791015625p-522 == -1.843571417358119024498819271684624254703521728515625p-249
; [HW: -1.843571417358119024498819271684624254703521728515625p-249] 

; mpf : - 3799107920874426 -249
; mpfd: - 3799107920874426 -249 (-2.03794e-075) class: Neg. norm. non-zero
; hwf : - 3799107920874426 -249 (-2.03794e-075) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010000 #b0000100010110000010000100000110100010111100101010010)))
(assert (= y (fp #b1 #b00111110101 #b1100100001110110010100100011000101111101100010011001)))
(assert (= r (fp #b1 #b01100000110 #b1101011111110100010010111110000101100100101110111010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
