(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.826808339621237564642797224223613739013671875p411 {+ 3723613730225024 411 (9.66098e+123)}
; Y = 1.6943902770218433051496731422957964241504669189453125p973 {+ 3127255792845269 973 (1.35269e+293)}
; 1.826808339621237564642797224223613739013671875p411 * 1.6943902770218433051496731422957964241504669189453125p973 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011010 #b1101001110101001101101100001101010111011101110000000)))
(assert (= y (fp #b0 #b11111001100 #b1011000111000011100011111010101001111000000111010101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
