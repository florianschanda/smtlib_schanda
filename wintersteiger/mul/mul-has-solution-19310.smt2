(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4196402162850088046752716763876378536224365234375p-680 {+ 1889891521690840 -680 (2.82997e-205)}
; Y = -1.290860325838900646289175710990093648433685302734375p534 {- 1309918455064934 534 (-7.25934e+160)}
; 1.4196402162850088046752716763876378536224365234375p-680 * -1.290860325838900646289175710990093648433685302734375p534 == -1.8325572321676737441720206334139220416545867919921875p-146
; [HW: -1.8325572321676737441720206334139220416545867919921875p-146] 

; mpf : - 3749504440554947 -146
; mpfd: - 3749504440554947 -146 (-2.05437e-044) class: Neg. norm. non-zero
; hwf : - 3749504440554947 -146 (-2.05437e-044) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010111 #b0110101101101101100010101000110100000111110011011000)))
(assert (= y (fp #b1 #b11000010101 #b0100101001110101110100101000001100101110100101100110)))
(assert (= r (fp #b1 #b01101101101 #b1101010100100010011110001000010000110101010111000011)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
