(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7673866772184487761165883057401515543460845947265625p-541 {- 3456002353570089 -541 (-2.4553e-163)}
; Y = -1.2582646494052667218710439556161873042583465576171875p-982 {- 1163120578824531 -982 (-3.07834e-296)}
; -1.7673866772184487761165883057401515543460845947265625p-541 * -1.2582646494052667218710439556161873042583465576171875p-982 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111100010 #b1100010001110011011101000000101000001010000100101001)))
(assert (= y (fp #b1 #b00000101001 #b0100001000011101101000011100111011101000100101010011)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
