(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.323878519373912876488930123741738498210906982421875p828 {+ 1458619179165662 828 (2.36965e+249)}
; Y = 1.9541300458486461355533947426010854542255401611328125p-953 {+ 4297019718946957 -953 (2.56666e-287)}
; 1.323878519373912876488930123741738498210906982421875p828 * 1.9541300458486461355533947426010854542255401611328125p-953 == 1.2935153958810909902155117379152216017246246337890625p-124
; [HW: 1.2935153958810909902155117379152216017246246337890625p-124] 

; mpf : + 1321875827517585 -124
; mpfd: + 1321875827517585 -124 (6.08208e-038) class: Pos. norm. non-zero
; hwf : + 1321875827517585 -124 (6.08208e-038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111011 #b0101001011101001101100111110000010010110011111011110)))
(assert (= y (fp #b0 #b00001000110 #b1111010001000001110111011101111100001101000010001101)))
(assert (= r (fp #b0 #b01110000011 #b0100101100100011110100110011001000101110100010010001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
