(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.890467054447833472607953808619640767574310302734375p890 {+ 4010307094596966 890 (1.56051e+268)}
; Y = 1.356009955544021483575534148258157074451446533203125p-717 {+ 1603326303128242 -717 (1.96678e-216)}
; 1.890467054447833472607953808619640767574310302734375p890 * 1.356009955544021483575534148258157074451446533203125p-717 == 1.281746073229621973865732798003591597080230712890625p174
; [HW: 1.281746073229621973865732798003591597080230712890625p174] 

; mpf : + 1268871510410026 174
; mpfd: + 1268871510410026 174 (3.06917e+052) class: Pos. norm. non-zero
; hwf : + 1268871510410026 174 (3.06917e+052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111001 #b1110001111110101101001100001110100000100110101100110)))
(assert (= y (fp #b0 #b00100110010 #b0101101100100011011101111110110000011100101010110010)))
(assert (= r (fp #b0 #b10010101101 #b0100100000100000100000101011101001001100001100101010)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
