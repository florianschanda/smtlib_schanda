(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.592580369529197792388686139020137488842010498046875p-578 {+ 2668744731398766 -578 (1.60977e-174)}
; Y = -1.1611970624814171859640055117779411375522613525390625p730 {- 725967030524529 730 (-6.55847e+219)}
; 1.592580369529197792388686139020137488842010498046875p-578 * -1.1611970624814171859640055117779411375522613525390625p730 == -1.849299646862874180186508965562097728252410888671875p152
; [HW: -1.849299646862874180186508965562097728252410888671875p152] 

; mpf : - 3824905573137534 152
; mpfd: - 3824905573137534 152 (-1.05576e+046) class: Neg. norm. non-zero
; hwf : - 3824905573137534 152 (-1.05576e+046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111101 #b1001011110110011010110001101101101100001001001101110)))
(assert (= y (fp #b1 #b11011011001 #b0010100101000100001101011110111110010001101001110001)))
(assert (= r (fp #b1 #b10010010111 #b1101100101101011101100111001111111000111110001111110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
