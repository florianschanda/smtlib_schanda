(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1823370652829436888708869446418248116970062255859375p-35 {+ 821173139264095 -35 (3.44105e-011)}
; Y = -1.3821757531568910071229083769139833748340606689453125p315 {- 1721166579507413 315 (-9.22597e+094)}
; 1.1823370652829436888708869446418248116970062255859375p-35 * -1.3821757531568910071229083769139833748340606689453125p315 == -1.63419762369276089231107107480056583881378173828125p280
; [HW: -1.63419762369276089231107107480056583881378173828125p280] 

; mpf : - 2856172181741972 280
; mpfd: - 2856172181741972 280 (-3.1747e+084) class: Neg. norm. non-zero
; hwf : - 2856172181741972 280 (-3.1747e+084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011100 #b0010111010101101101001000101010000111101001001011111)))
(assert (= y (fp #b1 #b10100111010 #b0110000111010110010001010010100100100010000011010101)))
(assert (= r (fp #b1 #b10100010111 #b1010001001011010110001101000010011110110000110010100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
