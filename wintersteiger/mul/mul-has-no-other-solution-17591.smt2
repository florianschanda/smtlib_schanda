(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2062353972115573697010404430329799652099609375p-195 {+ 928801658032576 -195 (2.40205e-059)}
; Y = -1.7913304117592312447726499158306978642940521240234375p-219 {- 3563835347525815 -219 (-2.12621e-066)}
; 1.2062353972115573697010404430329799652099609375p-195 * -1.7913304117592312447726499158306978642940521240234375p-219 == -1.0803830753827694532986924969009123742580413818359375p-413
; [HW: -1.0803830753827694532986924969009123742580413818359375p-413] 

; mpf : - 362013188340735 -413
; mpfd: - 362013188340735 -413 (-5.10728e-125) class: Neg. norm. non-zero
; hwf : - 362013188340735 -413 (-5.10728e-125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100111100 #b0011010011001011110101111100111001001101000111000000)))
(assert (= y (fp #b1 #b01100100100 #b1100101010010100101000010011111011010110000010110111)))
(assert (= r (fp #b1 #b01001100010 #b0001010010010011111111000011011111101011101111111111)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
