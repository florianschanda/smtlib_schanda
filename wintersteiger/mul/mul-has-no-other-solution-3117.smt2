(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.29615413496649001245941690285690128803253173828125p-767 {- 1333759651879316 -767 (-1.66974e-231)}
; Y = 1.5746111832302833732910585240460932254791259765625p194 {+ 2587818710678824 194 (3.9536e+058)}
; -1.29615413496649001245941690285690128803253173828125p-767 * 1.5746111832302833732910585240460932254791259765625p194 == -1.020469398054204557269031283794902265071868896484375p-572
; [HW: -1.020469398054204557269031283794902265071868896484375p-572] 

; mpf : - 92185973449414 -572
; mpfd: - 92185973449414 -572 (-6.6015e-173) class: Neg. norm. non-zero
; hwf : - 92185973449414 -572 (-6.6015e-173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000000 #b0100101111010000110000011110010001000001100110010100)))
(assert (= y (fp #b0 #b10011000001 #b1001001100011001101101111110111111100011110100101000)))
(assert (= r (fp #b1 #b00111000011 #b0000010100111101011110111000001100110110001011000110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
