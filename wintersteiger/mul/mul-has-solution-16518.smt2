(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.13017917364263809076874167658388614654541015625p-919 {+ 586274877908384 -919 (2.55024e-277)}
; Y = 1.4323487878397977990374556611641310155391693115234375p399 {+ 1947125839809399 399 (1.84934e+120)}
; 1.13017917364263809076874167658388614654541015625p-919 * 1.4323487878397977990374556611641310155391693115234375p399 == 1.618810769408816963021990886772982776165008544921875p-520
; [HW: 1.618810769408816963021990886772982776165008544921875p-520] 

; mpf : + 2786875950522398 -520
; mpfd: + 2786875950522398 -520 (4.71627e-157) class: Pos. norm. non-zero
; hwf : + 2786875950522398 -520 (4.71627e-157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101000 #b0010000101010011011011000001110101101010010110100000)))
(assert (= y (fp #b0 #b10110001110 #b0110111010101110011010010000000000111100101101110111)))
(assert (= r (fp #b0 #b00111110111 #b1001111001101010011000011111000100000110000000011110)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
