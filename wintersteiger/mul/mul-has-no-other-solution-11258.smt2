(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9473226624923702932079550009802915155887603759765625p740 {- 4266361989800265 740 (-1.12625e+223)}
; Y = 1.3708115539176610742089224004303105175495147705078125p-920 {+ 1669986776048253 -920 (1.54661e-277)}
; -1.9473226624923702932079550009802915155887603759765625p740 * 1.3708115539176610742089224004303105175495147705078125p-920 == -1.334706202475121727957230177707970142364501953125p-179
; [HW: -1.334706202475121727957230177707970142364501953125p-179] 

; mpf : - 1507382728745552 -179
; mpfd: - 1507382728745552 -179 (-1.74187e-054) class: Neg. norm. non-zero
; hwf : - 1507382728745552 -179 (-1.74187e-054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100011 #b1111001010000011101111001110111000101010000101001001)))
(assert (= y (fp #b0 #b00001100111 #b0101111011101101100000011000100100001110001001111101)))
(assert (= r (fp #b1 #b01101001100 #b0101010110101111010011100100000101100110001001010000)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
