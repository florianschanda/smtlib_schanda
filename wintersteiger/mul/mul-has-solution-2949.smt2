(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2147756297120597679395359591580927371978759765625p832 {+ 967263445939496 832 (3.47898e+250)}
; Y = 1.4041376184614744460077417897991836071014404296875p238 {+ 1820074027909496 238 (6.20224e+071)}
; 1.2147756297120597679395359591580927371978759765625p832 * 1.4041376184614744460077417897991836071014404296875p238 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111111 #b0011011011111011100010010010000110010111010100101000)))
(assert (= y (fp #b0 #b10011101101 #b0110011101110101100100000001111001100000000101111000)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
