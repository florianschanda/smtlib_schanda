(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8015289507966196769217503970139659941196441650390625p-544 {+ 3609765484134321 -544 (3.12841e-164)}
; Y = 1.6783532142089099270521046491921879351139068603515625p595 {+ 3055031282736825 595 (2.17636e+179)}
; 1.8015289507966196769217503970139659941196441650390625p-544 * 1.6783532142089099270521046491921879351139068603515625p595 == 1.511800952529955832659425141173414885997772216796875p52
; [HW: 1.511800952529955832659425141173414885997772216796875p52] 

; mpf : + 2304946579101774 52
; mpfd: + 2304946579101774 52 (6.80855e+015) class: Pos. norm. non-zero
; hwf : + 2304946579101774 52 (6.80855e+015) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011111 #b1100110100110001000000000101011001110111111110110001)))
(assert (= y (fp #b0 #b11001010010 #b1010110110101000100011100110011000101001111010111001)))
(assert (= r (fp #b0 #b10000110011 #b1000001100000101011000110010000100101101100001001110)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
