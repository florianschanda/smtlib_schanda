(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8898862286697764023557510881801135838031768798828125p195 {+ 4007691287839341 195 (9.49041e+058)}
; Y = 1.6798680751221641838100140375900082290172576904296875p578 {+ 3061853609781275 578 (1.66193e+174)}
; 1.8898862286697764023557510881801135838031768798828125p195 * 1.6798680751221641838100140375900082290172576904296875p578 == 1.58737977057769175104340320103801786899566650390625p774
; [HW: 1.58737977057769175104340320103801786899566650390625p774] 

; mpf : + 2645323315898660 774
; mpfd: + 2645323315898660 774 (1.57724e+233) class: Pos. norm. non-zero
; hwf : + 2645323315898660 774 (1.57724e+233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000010 #b1110001111001111100101010111100101001100001001101101)))
(assert (= y (fp #b0 #b11001000001 #b1010111000001011110101011000110000111110100000011011)))
(assert (= r (fp #b0 #b11100000101 #b1001011001011110100001010100100011110110100100100100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
