(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3919363007616281091571863726130686700344085693359375p-60 {- 1765124178063039 -60 (-1.20731e-018)}
; Y = -1.40280688415566689997149296686984598636627197265625p-532 {- 1814080933385732 -532 (-9.97792e-161)}
; -1.3919363007616281091571863726130686700344085693359375p-60 * -1.40280688415566689997149296686984598636627197265625p-532 == 1.9526178250145849180086088381358422338962554931640625p-592
; [HW: 1.9526178250145849180086088381358422338962554931640625p-592] 

; mpf : + 4290209281762177 -592
; mpfd: + 4290209281762177 -592 (1.20465e-178) class: Pos. norm. non-zero
; hwf : + 4290209281762177 -592 (1.20465e-178) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111000011 #b0110010001010101111011111111100111100010111010111111)))
(assert (= y (fp #b1 #b00111101011 #b0110011100011110010110100001101000001101011000000100)))
(assert (= r (fp #b0 #b00110101111 #b1111001111011110110000110000010000000110001110000001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
