(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.878283440122856529086448063026182353496551513671875p848 {- 3955436973662974 848 (-3.52531e+255)}
; Y = -1.067946550214192047434380583581514656543731689453125p-535 {- 306004058225746 -535 (-9.49515e-162)}
; -1.878283440122856529086448063026182353496551513671875p848 * -1.067946550214192047434380583581514656543731689453125p-535 == 1.0029531601018248920809128321707248687744140625p314
; [HW: 1.0029531601018248920809128321707248687744140625p314] 

; mpf : + 13299850734144 314
; mpfd: + 13299850734144 314 (3.34734e+094) class: Pos. norm. non-zero
; hwf : + 13299850734144 314 (3.34734e+094) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001111 #b1110000011010111001011101111101111110010001011111110)))
(assert (= y (fp #b1 #b00111101000 #b0001000101100100111100011111001100001011110001010010)))
(assert (= r (fp #b0 #b10100111001 #b0000000011000001100010011100111000001110101001000000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
