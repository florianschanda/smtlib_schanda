(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6793163624429123803594166020047850906848907470703125p-157 {- 3059368916764581 -157 (-9.19228e-048)}
; Y = 1.2171696170565156069898193891276605427265167236328125p309 {+ 978045006451917 309 (1.26946e+093)}
; -1.6793163624429123803594166020047850906848907470703125p-157 * 1.2171696170565156069898193891276605427265167236328125p309 == -1.0220064268956903230645139046828262507915496826171875p153
; [HW: -1.0220064268956903230645139046828262507915496826171875p153] 

; mpf : - 99108135967187 153
; mpfd: - 99108135967187 153 (-1.16693e+046) class: Neg. norm. non-zero
; hwf : - 99108135967187 153 (-1.16693e+046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100010 #b1010110111100111101011010101100001010100011110100101)))
(assert (= y (fp #b0 #b10100110100 #b0011011110011000011011011001001011110001010011001101)))
(assert (= r (fp #b1 #b10010011000 #b0000010110100010001101101001001111010001100111010011)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
