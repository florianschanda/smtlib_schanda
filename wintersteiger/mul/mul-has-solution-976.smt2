(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.65058535547224405348742948262952268123626708984375p486 {+ 2929975964477500 486 (3.29774e+146)}
; Y = -1.960000608809065791859893579385243356227874755859375p895 {- 4323458384107958 895 (-5.17729e+269)}
; 1.65058535547224405348742948262952268123626708984375p486 * -1.960000608809065791859893579385243356227874755859375p895 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100101 #b1010011010001100110000110000100100000010100000111100)))
(assert (= y (fp #b1 #b11101111110 #b1111010111000010100110011001001011111001100110110110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
