(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6564621319412962119344001621357165277004241943359375p726 {+ 2956442612793663 726 (5.84734e+218)}
; Y = 1.5952356878235749437777712955721653997898101806640625p48 {+ 2680703221879873 48 (4.49019e+014)}
; 1.6564621319412962119344001621357165277004241943359375p726 * 1.5952356878235749437777712955721653997898101806640625p48 == 1.321223754200539612924103494151495397090911865234375p775
; [HW: 1.321223754200539612924103494151495397090911865234375p775] 

; mpf : + 1446663179720102 775
; mpfd: + 1446663179720102 775 (2.62557e+233) class: Pos. norm. non-zero
; hwf : + 1446663179720102 775 (2.62557e+233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010101 #b1010100000001101111001101111101111000000000100111111)))
(assert (= y (fp #b0 #b10000101111 #b1001100001100001010111011011010010011101010001000001)))
(assert (= r (fp #b0 #b11100000110 #b0101001000111011101110000100111011111101010110100110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
