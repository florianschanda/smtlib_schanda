(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4301841358517080049495007187942974269390106201171875p-489 {- 1937377113922451 -489 (-8.94796e-148)}
; Y = 1.277349519440335701148114821990020573139190673828125p740 {+ 1249071192402882 740 (7.38765e+222)}
; -1.4301841358517080049495007187942974269390106201171875p-489 * 1.277349519440335701148114821990020573139190673828125p740 == -1.8268450186413709435129248959128744900226593017578125p251
; [HW: -1.8268450186413709435129248959128744900226593017578125p251] 

; mpf : - 3723778917846429 251
; mpfd: - 3723778917846429 251 (-6.61044e+075) class: Neg. norm. non-zero
; hwf : - 3723778917846429 251 (-6.61044e+075) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000010110 #b0110111000100000100011000010101010111101101110010011)))
(assert (= y (fp #b0 #b11011100011 #b0100011100000000011000001100101110001110101111000010)))
(assert (= r (fp #b1 #b10011111010 #b1101001110101100000111010111100111101100110110011101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
