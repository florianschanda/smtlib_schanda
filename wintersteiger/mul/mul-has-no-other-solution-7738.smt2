(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2456278004071117404549795537604950368404388427734375p35 {+ 1106209270385303 35 (4.27994e+010)}
; Y = -1.5066832033918944322437027949490584433078765869140625p802 {- 2281898285990625 802 (-4.01863e+241)}
; 1.2456278004071117404549795537604950368404388427734375p35 * -1.5066832033918944322437027949490584433078765869140625p802 == -1.87676648455138650462004079599864780902862548828125p837
; [HW: -1.87676648455138650462004079599864780902862548828125p837] 

; mpf : - 3948605213116564 837
; mpfd: - 3948605213116564 837 (-1.71995e+252) class: Neg. norm. non-zero
; hwf : - 3948605213116564 837 (-1.71995e+252) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100010 #b0011111011100001011101101010100110111100101010010111)))
(assert (= y (fp #b1 #b11100100001 #b1000000110110101111111011000110000000000001011100001)))
(assert (= r (fp #b1 #b11101000100 #b1110000001110011110001001011000101100000100010010100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
