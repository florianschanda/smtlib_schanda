(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.422528294917601687785690955934114754199981689453125p-114 {- 1902898271544402 -114 (-6.84922e-035)}
; Y = -1.77122131261558735104699735529720783233642578125p687 {- 3473272016115744 687 (-1.13731e+207)}
; -1.422528294917601687785690955934114754199981689453125p-114 * -1.77122131261558735104699735529720783233642578125p687 == 1.25980621687838389988201015512458980083465576171875p574
; [HW: 1.25980621687838389988201015512458980083465576171875p574] 

; mpf : + 1170063181522028 574
; mpfd: + 1170063181522028 574 (7.78971e+172) class: Pos. norm. non-zero
; hwf : + 1170063181522028 574 (7.78971e+172) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001101 #b0110110000101010110100000111100001001110010001010010)))
(assert (= y (fp #b1 #b11010101110 #b1100010101101110110000101000101110101001100000100000)))
(assert (= r (fp #b0 #b11000111101 #b0100001010000010101010010000010011001010010001101100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
