(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7103388646233941283725243920343928039073944091796875p-9 {+ 3199081846024699 -9 (0.00334051)}
; Y = 1.101810942617157618172996080829761922359466552734375p461 {+ 458515723232870 461 (6.56047e+138)}
; 1.7103388646233941283725243920343928039073944091796875p-9 * 1.101810942617157618172996080829761922359466552734375p461 == 1.8844700766254611767891447016154415905475616455078125p452
; [HW: 1.8844700766254611767891447016154415905475616455078125p452] 

; mpf : + 3983299107510781 452
; mpfd: + 3983299107510781 452 (2.19153e+136) class: Pos. norm. non-zero
; hwf : + 3983299107510781 452 (2.19153e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111110110 #b1011010111011000110001001001000010100010100111111011)))
(assert (= y (fp #b0 #b10111001100 #b0001101000010000010010000010110011101010011001100110)))
(assert (= r (fp #b0 #b10111000011 #b1110001001101100101000011000010101100101100111111101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
