(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7716536672686074016525026308954693377017974853515625p703 {+ 3475219168369977 703 (7.45531e+211)}
; Y = 1.883673477475402702197015969431959092617034912109375p-250 {+ 3979711543875414 -250 (1.04113e-075)}
; 1.7716536672686074016525026308954693377017974853515625p703 * 1.883673477475402702197015969431959092617034912109375p-250 == 1.668608512152953693430390558205544948577880859375p454
; [HW: 1.668608512152953693430390558205544948577880859375p454] 

; mpf : + 3011145046188784 454
; mpfd: + 3011145046188784 454 (7.76198e+136) class: Pos. norm. non-zero
; hwf : + 3011145046188784 454 (7.76198e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111110 #b1100010110001011000110000100000011000001110100111001)))
(assert (= y (fp #b0 #b01100000101 #b1110001000111000011011001100111000011001011101010110)))
(assert (= r (fp #b0 #b10111000101 #b1010101100101001111011010110110110000110001011110000)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
