(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.21234126125130625695192065904848277568817138671875p583 {+ 956300025046764 583 (3.83807e+175)}
; Y = 1.575539297808514316301398139330558478832244873046875p974 {+ 2591998567147502 974 (2.51562e+293)}
; 1.21234126125130625695192065904848277568817138671875p583 * 1.575539297808514316301398139330558478832244873046875p974 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000110 #b0011011001011011111111110011010010101010011011101100)))
(assert (= y (fp #b0 #b11111001101 #b1001001101010110100010110001110110100110011111101110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
