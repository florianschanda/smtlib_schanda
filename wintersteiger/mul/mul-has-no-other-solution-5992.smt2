(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4971547349535752058358184513053856790065765380859375p-829 {- 2238985879082399 -829 (-4.18216e-250)}
; Y = -1.5698374990986272425885772463516332209110260009765625p-192 {- 2566319948602313 -192 (-2.5009e-058)}
; -1.4971547349535752058358184513053856790065765380859375p-829 * -1.5698374990986272425885772463516332209110260009765625p-192 == 1.17514482244159434998209690093062818050384521484375p-1020
; [HW: 1.17514482244159434998209690093062818050384521484375p-1020] 

; mpf : + 788782157083836 -1020
; mpfd: + 788782157083836 -1020 (1.04591e-307) class: Pos. norm. non-zero
; hwf : + 788782157083836 -1020 (1.04591e-307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000010 #b0111111101000101100010000101111110101101010110011111)))
(assert (= y (fp #b1 #b01100111111 #b1001000111100000110111101100111010101001101111001001)))
(assert (= r (fp #b0 #b00000000011 #b0010110011010110010010101000010001110011010010111100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
