(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9383285527856257690615393585176207125186920166015625p688 {+ 4225856120676441 688 (2.48923e+207)}
; Y = 1.322212748203706045302396887564100325107574462890625p-358 {+ 1451117212744234 -358 (2.25197e-108)}
; 1.9383285527856257690615393585176207125186920166015625p688 * 1.322212748203706045302396887564100325107574462890625p-358 == 1.2814413613501971500596710029640235006809234619140625p331
; [HW: 1.2814413613501971500596710029640235006809234619140625p331] 

; mpf : + 1267499210103393 331
; mpfd: + 1267499210103393 331 (5.60567e+099) class: Pos. norm. non-zero
; hwf : + 1267499210103393 331 (5.60567e+099) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101111 #b1111000000110110010011001100111100011110000001011001)))
(assert (= y (fp #b0 #b01010011001 #b0101001001111100100010001101111111100011101000101010)))
(assert (= r (fp #b0 #b10101001010 #b0100100000001100100010101000001010111101101001100001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
