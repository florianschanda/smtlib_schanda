(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.398981156459701225003300351090729236602783203125p-571 {+ 1796851387559760 -571 (1.81002e-172)}
; Y = 1.3352205347578891547755119972862303256988525390625p-484 {+ 1509699075422568 -484 (2.67322e-146)}
; 1.398981156459701225003300351090729236602783203125p-571 * 1.3352205347578891547755119972862303256988525390625p-484 == 0.0000000002174578295210949363536201417446136474609375p-1022
; [HW: 0.0000000002174578295210949363536201417446136474609375p-1022] 

; mpf : + 979343 -1023
; mpfd: + 979343 -1023 (4.8386e-318) class: Pos. denorm.
; hwf : + 979343 -1023 (4.8386e-318) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000100 #b0110011000100011101000010000101010110110111101010000)))
(assert (= y (fp #b0 #b01000011011 #b0101010111010001000000110101000110111011100101101000)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000011101111000110001111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
