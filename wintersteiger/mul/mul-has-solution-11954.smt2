(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.00410351316891688355781298014335334300994873046875p-131 {+ 18480580378444 -131 (3.68849e-040)}
; Y = 1.9625377360994626929624473632429726421833038330078125p436 {+ 4334884589627581 436 (3.48254e+131)}
; 1.00410351316891688355781298014335334300994873046875p-131 * 1.9625377360994626929624473632429726421833038330078125p436 == 1.970591035544043023719495977275073528289794921875p305
; [HW: 1.970591035544043023719495977275073528289794921875p305] 

; mpf : + 4371153426005296 305
; mpfd: + 4371153426005296 305 (1.28453e+092) class: Pos. norm. non-zero
; hwf : + 4371153426005296 305 (1.28453e+092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111100 #b0000000100001100111011011000011011011011111101001100)))
(assert (= y (fp #b0 #b10110110011 #b1111011001101000110111111000000110110110100010111101)))
(assert (= r (fp #b0 #b10100110000 #b1111100001111000101001110111001101110011110100110000)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
