(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4793252847950324468939697908353991806507110595703125p596 {- 2158689173992165 596 (-3.83655e+179)}
; Y = -1.3103842837327499548649711869074963033199310302734375p-938 {- 1397846544560471 -938 (-5.63979e-283)}
; -1.4793252847950324468939697908353991806507110595703125p596 * -1.3103842837327499548649711869074963033199310302734375p-938 == 1.9384846037238847582528933344292454421520233154296875p-342
; [HW: 1.9384846037238847582528933344292454421520233154296875p-342] 

; mpf : + 4226558911623835 -342
; mpfd: + 4226558911623835 -342 (2.16373e-103) class: Pos. norm. non-zero
; hwf : + 4226558911623835 -342 (2.16373e-103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010011 #b0111101010110101000011111101011001010111001011100101)))
(assert (= y (fp #b1 #b00001010101 #b0100111101110101010110000010101111010011000101010111)))
(assert (= r (fp #b0 #b01010101001 #b1111000001000000100001101110100011001011001010011011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
