(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.28368255587952884155811261734925210475921630859375p-250 {+ 1277592652950556 -250 (7.0951e-076)}
; Y = 1.1175016718686361372192550334148108959197998046875p567 {+ 529180485643000 567 (5.39828e+170)}
; 1.28368255587952884155811261734925210475921630859375p-250 * 1.1175016718686361372192550334148108959197998046875p567 == 1.43451740234397728812609784654341638088226318359375p317
; [HW: 1.43451740234397728812609784654341638088226318359375p317] 

; mpf : + 1956892411282332 317
; mpfd: + 1956892411282332 317 (3.83014e+095) class: Pos. norm. non-zero
; hwf : + 1956892411282332 317 (3.83014e+095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000101 #b0100100010011111011010111000001111110010110000011100)))
(assert (= y (fp #b0 #b11000110110 #b0001111000010100100101101110110111100110101011111000)))
(assert (= r (fp #b0 #b10100111100 #b0110111100111100100010000101000010011100001110011100)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
