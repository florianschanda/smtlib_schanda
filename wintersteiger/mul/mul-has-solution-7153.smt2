(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2512570641371614232895126406219787895679473876953125p-891 {+ 1131561220422325 -891 (7.57915e-269)}
; Y = 1.118084174188247015280239793355576694011688232421875p781 {+ 531803842872542 781 (1.422e+235)}
; 1.2512570641371614232895126406219787895679473876953125p-891 * 1.118084174188247015280239793355576694011688232421875p781 == 1.399010721253008515674309819587506353855133056640625p-110
; [HW: 1.399010721253008515674309819587506353855133056640625p-110] 

; mpf : + 1796984535551882 -110
; mpfd: + 1796984535551882 -110 (1.07776e-033) class: Pos. norm. non-zero
; hwf : + 1796984535551882 -110 (1.07776e-033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010000100 #b0100000001010010011000100000100101011011101010110101)))
(assert (= y (fp #b0 #b11100001100 #b0001111000111010110000111011001001010000010011011110)))
(assert (= r (fp #b0 #b01110010001 #b0110011000100101100100010000111010001000111110001010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
