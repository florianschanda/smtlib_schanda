(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1412761183577526669097323974710889160633087158203125p325 {- 636251073992325 325 (-7.8008e+097)}
; Y = -1.9324338675202579196366059477441012859344482421875p-95 {- 4199308818311864 -95 (-4.87815e-029)}
; -1.1412761183577526669097323974710889160633087158203125p325 * -1.9324338675202579196366059477441012859344482421875p-95 == 1.102720311653289986253412280348129570484161376953125p231
; [HW: 1.102720311653289986253412280348129570484161376953125p231] 

; mpf : + 462611157285138 231
; mpfd: + 462611157285138 231 (3.80535e+069) class: Pos. norm. non-zero
; hwf : + 462611157285138 231 (3.80535e+069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101000100 #b0010010000101010101010111111010000001101011010000101)))
(assert (= y (fp #b1 #b01110100000 #b1110111010110011111111000110011010101110101010111000)))
(assert (= r (fp #b0 #b10011100110 #b0001101001001011111000001101101100101111100100010010)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
