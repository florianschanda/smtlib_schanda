(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.19713655203550484174002122017554938793182373046875p-503 {- 887824102288204 -503 (-4.57147e-152)}
; Y = -1.012146116777586257740040309727191925048828125p94 {- 54701246993536 94 (-2.00476e+028)}
; -1.19713655203550484174002122017554938793182373046875p-503 * -1.012146116777586257740040309727191925048828125p94 == 1.2116771123952452260397194550023414194583892822265625p-409
; [HW: 1.2116771123952452260397194550023414194583892822265625p-409] 

; mpf : + 953308964506089 -409
; mpfd: + 953308964506089 -409 (9.16471e-124) class: Pos. norm. non-zero
; hwf : + 953308964506089 -409 (9.16471e-124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000001000 #b0011001001110111100010101000001111010110101101001100)))
(assert (= y (fp #b1 #b10001011101 #b0000001100011100000000100000011001010101010010000000)))
(assert (= r (fp #b0 #b01001100110 #b0011011000110000011110001010001100001100100111101001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
