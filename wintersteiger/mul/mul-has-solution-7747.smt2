(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.830341671334834163786808858276344835758209228515625p525 {+ 3739526441613754 525 (2.01039e+158)}
; Y = 1.7635629570964883594541561251389794051647186279296875p-597 {+ 3438781849053659 -597 (3.40004e-180)}
; 1.830341671334834163786808858276344835758209228515625p525 * 1.7635629570964883594541561251389794051647186279296875p-597 == 1.61396138519809451139508382766507565975189208984375p-71
; [HW: 1.61396138519809451139508382766507565975189208984375p-71] 

; mpf : + 2765036265598012 -71
; mpfd: + 2765036265598012 -71 (6.83539e-022) class: Pos. norm. non-zero
; hwf : + 2765036265598012 -71 (6.83539e-022) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001100 #b1101010010010001010001011001001011100011100110111010)))
(assert (= y (fp #b0 #b00110101010 #b1100001101111000110111001010100100101010100111011011)))
(assert (= r (fp #b0 #b01110111000 #b1001110100101100100100101100011001101110110000111100)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
