(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4570648963122077024223699481808580458164215087890625p-378 {- 2058437296715793 -378 (-2.36669e-114)}
; Y = -1.386885035368876639694235564093105494976043701171875p-436 {- 1742375301122494 -436 (-7.8156e-132)}
; -1.4570648963122077024223699481808580458164215087890625p-378 * -1.386885035368876639694235564093105494976043701171875p-436 == 1.01039075012835244393727407441474497318267822265625p-813
; [HW: 1.01039075012835244393727407441474497318267822265625p-813] 

; mpf : + 46795778406148 -813
; mpfd: + 46795778406148 -813 (1.84971e-245) class: Pos. norm. non-zero
; hwf : + 46795778406148 -813 (1.84971e-245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000101 #b0111010100000010001101000111110111001111100000010001)))
(assert (= y (fp #b1 #b01001001011 #b0110001100001010111001011100111000111000100110111110)))
(assert (= r (fp #b0 #b00011010010 #b0000001010101000111101111101101111111011011100000100)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
