(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8698796379222264452124591116444207727909088134765625p760 {+ 3917589613203721 760 (1.13399e+229)}
; Y = -1.19327739617091399537684992537833750247955322265625p345 {- 870444009374468 345 (-8.55244e+103)}
; 1.8698796379222264452124591116444207727909088134765625p760 * -1.19327739617091399537684992537833750247955322265625p345 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110111 #b1101111010110000011011101001010001010101000100001001)))
(assert (= y (fp #b1 #b10101011000 #b0011000101111010101000001001111110011100001100000100)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
