(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1601730892592978516830726221087388694286346435546875p304 {- 721355465102955 304 (-3.7813e+091)}
; Y = 1.1782977875101863229900800433824770152568817138671875p185 {+ 802981849391859 185 (5.77836e+055)}
; -1.1601730892592978516830726221087388694286346435546875p304 * 1.1782977875101863229900800433824770152568817138671875p185 == -1.36702938420308850453466220642440021038055419921875p489
; [HW: -1.36702938420308850453466220642440021038055419921875p489] 

; mpf : - 1652953397931052 489
; mpfd: - 1652953397931052 489 (-2.18497e+147) class: Neg. norm. non-zero
; hwf : - 1652953397931052 489 (-2.18497e+147) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100101111 #b0010100100000001000110101000010000010001011001101011)))
(assert (= y (fp #b0 #b10010111000 #b0010110110100100111011000111111001001110001011110011)))
(assert (= r (fp #b1 #b10111101000 #b0101110111110101101000110100000111010010110000101100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
