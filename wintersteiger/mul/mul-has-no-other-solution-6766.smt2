(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4776178580161911657597784142126329243183135986328125p-820 {- 2150999607387213 -820 (-2.11332e-247)}
; Y = -1.510484681065424439339039963670074939727783203125p142 {- 2299018619424592 142 (-8.42123e+042)}
; -1.4776178580161911657597784142126329243183135986328125p-820 * -1.510484681065424439339039963670074939727783203125p142 == 1.1159595695010808835689886109321378171443939208984375p-677
; [HW: 1.1159595695010808835689886109321378171443939208984375p-677] 

; mpf : + 522235473995111 -677
; mpfd: + 522235473995111 -677 (1.77968e-204) class: Pos. norm. non-zero
; hwf : + 522235473995111 -677 (1.77968e-204) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001011 #b0111101001000101001010011111100000101010010001001101)))
(assert (= y (fp #b1 #b10010001101 #b1000001010101111000111111100001001001000111101010000)))
(assert (= r (fp #b0 #b00101011010 #b0001110110101111100001101011111010101010010101100111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
