(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1466856909867504388245151858427561819553375244140625p-573 {- 660613623268513 -573 (-3.709e-173)}
; Y = 1.06950457343280813660157946287654340267181396484375p-765 {+ 313020771012540 -765 (5.51107e-231)}
; -1.1466856909867504388245151858427561819553375244140625p-573 * 1.06950457343280813660157946287654340267181396484375p-765 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111000010 #b0010010110001101001100011000010110010100010010100001)))
(assert (= y (fp #b0 #b00100000010 #b0001000111001011000011010011110111010000111110111100)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
