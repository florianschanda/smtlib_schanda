(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.765966244477594759842986604780890047550201416015625p-480 {+ 3449605293207674 -480 (5.65698e-145)}
; Y = -1.9551159709028891331428212652099318802356719970703125p173 {- 4301459930653861 173 (-2.34079e+052)}
; 1.765966244477594759842986604780890047550201416015625p-480 * -1.9551159709028891331428212652099318802356719970703125p173 == -1.72633440432677076614709221757948398590087890625p-306
; [HW: -1.72633440432677076614709221757948398590087890625p-306] 

; mpf : - 3271119352672416 -306
; mpfd: - 3271119352672416 -306 (-1.32418e-092) class: Neg. norm. non-zero
; hwf : - 3271119352672416 -306 (-1.32418e-092) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011111 #b1100010000010110010111010010000111011111000001111010)))
(assert (= y (fp #b1 #b10010101100 #b1111010010000010011110101111001011101010010010100101)))
(assert (= r (fp #b1 #b01011001101 #b1011100111110001000011010011000010001011000010100000)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
