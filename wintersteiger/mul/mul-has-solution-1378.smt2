(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9095313578716577307403667873586528003215789794921875p-300 {+ 4096165084392579 -300 (9.37407e-091)}
; Y = 1.614571936589009215623491400037892162799835205078125p914 {+ 2767785944614626 914 (2.23601e+275)}
; 1.9095313578716577307403667873586528003215789794921875p-300 * 1.614571936589009215623491400037892162799835205078125p914 == 1.5415378712281413431384180512395687401294708251953125p615
; [HW: 1.5415378712281413431384180512395687401294708251953125p615] 

; mpf : + 2438869755070069 615
; mpfd: + 2438869755070069 615 (2.09605e+185) class: Pos. norm. non-zero
; hwf : + 2438869755070069 615 (2.09605e+185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011010011 #b1110100011010111000011000000110010111110110010000011)))
(assert (= y (fp #b0 #b11110010001 #b1001110101010100100101100010000010110000011011100010)))
(assert (= r (fp #b0 #b11001100110 #b1000101010100010001110011101011001111000011001110101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
