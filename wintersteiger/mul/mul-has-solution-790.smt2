(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0025154306719823438243111013434827327728271484375p-210 {+ 11328492637016 -210 (6.09245e-064)}
; Y = 1.668645772987991104940874720341525971889495849609375p-798 {+ 3011312854071574 -798 (1.00099e-240)}
; 1.0025154306719823438243111013434827327728271484375p-210 * 1.668645772987991104940874720341525971889495849609375p-798 == 1.6728431357460389339308903799974359571933746337890625p-1008
; [HW: 1.6728431357460389339308903799974359571933746337890625p-1008] 

; mpf : + 3030216095424657 -1008
; mpfd: + 3030216095424657 -1008 (6.09845e-304) class: Pos. norm. non-zero
; hwf : + 3030216095424657 -1008 (6.09845e-304) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100101101 #b0000000010100100110110011110110001111000101101011000)))
(assert (= y (fp #b0 #b00011100001 #b1010101100101100010111101000111110010111100100010110)))
(assert (= r (fp #b0 #b00000001111 #b1010110000111111011100101001111101011110000010010001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
