(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0790193795307445601139306745608337223529815673828125p417 {- 355871648209709 417 (-3.65206e+125)}
; Y = -1.086391517957215224754463633871637284755706787109375p380 {- 389072808080086 380 (-2.67538e+114)}
; -1.0790193795307445601139306745608337223529815673828125p417 * -1.086391517957215224754463633871637284755706787109375p380 == 1.1722375016336581410314465756528079509735107421875p797
; [HW: 1.1722375016336581410314465756528079509735107421875p797] 

; mpf : + 775688748176568 797
; mpfd: + 775688748176568 797 (9.77062e+239) class: Pos. norm. non-zero
; hwf : + 775688748176568 797 (9.77062e+239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100000 #b0001010000111010100111010011001011010101101100101101)))
(assert (= y (fp #b1 #b10101111011 #b0001011000011101110000010010100001000111001011010110)))
(assert (= r (fp #b0 #b11100011100 #b0010110000010111110000011100010010101001010010111000)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
