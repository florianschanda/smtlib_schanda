(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.256227665004756577360467417747713625431060791015625p-594 {+ 1153946816637434 -594 (1.93754e-179)}
; Y = 1.402598574613225679286188096739351749420166015625p719 {+ 1813142790608016 719 (3.86812e+216)}
; 1.256227665004756577360467417747713625431060791015625p-594 * 1.402598574613225679286188096739351749420166015625p719 == 1.761983132325372292115162053960375487804412841796875p125
; [HW: 1.761983132325372292115162053960375487804412841796875p125] 

; mpf : + 3431666950803150 125
; mpfd: + 3431666950803150 125 (7.49465e+037) class: Pos. norm. non-zero
; hwf : + 3431666950803150 125 (7.49465e+037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101101 #b0100000110011000001000101110000110000110100111111010)))
(assert (= y (fp #b0 #b11011001110 #b0110011100010000101100110011111101100001010010010000)))
(assert (= r (fp #b0 #b10001111100 #b1100001100010001010100111001100101110000111011001110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
