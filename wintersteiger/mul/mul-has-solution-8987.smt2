(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3708134700258636229364128666929900646209716796875p-661 {- 1669995405432440 -661 (-1.43269e-199)}
; Y = -1.1315656409662897541323900441057048738002777099609375p924 {- 592518971630543 924 (-1.60471e+278)}
; -1.3708134700258636229364128666929900646209716796875p-661 * -1.1315656409662897541323900441057048738002777099609375p924 == 1.5511654228550402212505332499858923256397247314453125p263
; [HW: 1.5511654228550402212505332499858923256397247314453125p263] 

; mpf : + 2482228392989461 263
; mpfd: + 2482228392989461 263 (2.29904e+079) class: Pos. norm. non-zero
; hwf : + 2482228392989461 263 (2.29904e+079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101101010 #b0101111011101101101000011010111010101101011001111000)))
(assert (= y (fp #b1 #b11110011011 #b0010000110101110010010010010110100111010001111001111)))
(assert (= r (fp #b0 #b10100000110 #b1000110100011001001011010101100111011001001100010101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
