(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7964385319160405263261282016173936426639556884765625p-689 {- 3586840275560585 -689 (-6.99432e-208)}
; Y = -1.8534796171574006162785508422530256211757659912109375p732 {- 3843730485798383 732 (-4.1874e+220)}
; -1.7964385319160405263261282016173936426639556884765625p-689 * -1.8534796171574006162785508422530256211757659912109375p732 == 1.66483110119127264425742396269924938678741455078125p44
; [HW: 1.66483110119127264425742396269924938678741455078125p44] 

; mpf : + 2994133099589332 44
; mpfd: + 2994133099589332 44 (2.9288e+013) class: Pos. norm. non-zero
; hwf : + 2994133099589332 44 (2.9288e+013) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101001110 #b1100101111100011011001010100011111011010100010001001)))
(assert (= y (fp #b1 #b11011011011 #b1101101001111101101000111110001101111110010111101111)))
(assert (= r (fp #b0 #b10000101011 #b1010101000110010010111101111110011111010111011010100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
