(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0547168909919724111290406654006801545619964599609375p290 {+ 246422969882319 290 (2.09814e+087)}
; Y = -1.8265386808136694352100448668352328240871429443359375p554 {- 3722399294919743 554 (-1.07708e+167)}
; 1.0547168909919724111290406654006801545619964599609375p290 * -1.8265386808136694352100448668352328240871429443359375p554 == -1.9264811987043721774881532837753184139728546142578125p844
; [HW: -1.9264811987043721774881532837753184139728546142578125p844] 

; mpf : - 4172500381250781 844
; mpfd: - 4172500381250781 844 (-2.25986e+254) class: Neg. norm. non-zero
; hwf : - 4172500381250781 844 (-2.25986e+254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100001 #b0000111000000001111011010001100101011001011011001111)))
(assert (= y (fp #b1 #b11000101001 #b1101001110011000000010011111101011111001010000111111)))
(assert (= r (fp #b1 #b11101001011 #b1110110100101101110111110011000011001011010011011101)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
