(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6539446367183427977209930759272538125514984130859375p34 {- 2945104822245663 34 (-2.84146e+010)}
; Y = 1.62867042912615378469354254775680601596832275390625p188 {+ 2831279910351396 188 (6.38958e+056)}
; -1.6539446367183427977209930759272538125514984130859375p34 * 1.62867042912615378469354254775680601596832275390625p188 == -1.346865360617481854887955705635249614715576171875p223
; [HW: -1.346865360617481854887955705635249614715576171875p223] 

; mpf : - 1562142708824624 223
; mpfd: - 1562142708824624 223 (-1.81557e+067) class: Neg. norm. non-zero
; hwf : - 1562142708824624 223 (-1.81557e+067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100001 #b1010011101101000111010100110110000011001100100011111)))
(assert (= y (fp #b0 #b10010111011 #b1010000011110000100010111001010100001111001000100100)))
(assert (= r (fp #b1 #b10011011110 #b0101100011001100001010110001001111110111101000110000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
