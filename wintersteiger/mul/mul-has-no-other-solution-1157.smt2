(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.36505805084078790656576529727317392826080322265625p-761 {- 1644075301735172 -761 (-1.12545e-229)}
; Y = 1.649895947877181523466560975066386163234710693359375p967 {+ 2926871148689270 967 (2.05808e+291)}
; -1.36505805084078790656576529727317392826080322265625p-761 * 1.649895947877181523466560975066386163234710693359375p967 == -1.126101873349669713064713505445979535579681396484375p207
; [HW: -1.126101873349669713064713505445979535579681396484375p207] 

; mpf : - 567912349828294 207
; mpfd: - 567912349828294 207 (-2.31626e+062) class: Neg. norm. non-zero
; hwf : - 567912349828294 207 (-2.31626e+062) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000110 #b0101110101110100011100011100010110000000101100000100)))
(assert (= y (fp #b0 #b11111000110 #b1010011001011111100101001011000111101111011101110110)))
(assert (= r (fp #b1 #b10011001110 #b0010000001001000001101100101111000000000010011000110)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
