(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.44854220596935423515105867409147322177886962890625p447 {- 2020054511663524 447 (-5.26428e+134)}
; Y = -1.519769764974113090971741257817484438419342041015625p543 {- 2340834919855866 543 (-4.37588e+163)}
; -1.44854220596935423515105867409147322177886962890625p447 * -1.519769764974113090971741257817484438419342041015625p543 == 1.100725323960564328018563173827715218067169189453125p991
; [HW: 1.100725323960564328018563173827715218067169189453125p991] 

; mpf : + 453626531455570 991
; mpfd: + 453626531455570 991 (2.30359e+298) class: Pos. norm. non-zero
; hwf : + 453626531455570 991 (2.30359e+298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111110 #b0111001011010011101010010111100110000011100110100100)))
(assert (= y (fp #b1 #b11000011110 #b1000010100001111101000011001111000000011011011111010)))
(assert (= r (fp #b0 #b11111011110 #b0001100111001001001000101000010001001010001001010010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
