(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.264832536693848652475935523398220539093017578125p877 {+ 1192699713570000 877 (1.2745e+264)}
; Y = 1.9839592704846851223265957742114551365375518798828125p-102 {+ 4431358603902573 -102 (3.91267e-031)}
; 1.264832536693848652475935523398220539093017578125p877 * 1.9839592704846851223265957742114551365375518798828125p-102 == 1.254688118392210949281206922023557126522064208984375p776
; [HW: 1.254688118392210949281206922023557126522064208984375p776] 

; mpf : + 1147013315086854 776
; mpfd: + 1147013315086854 776 (4.98669e+233) class: Pos. norm. non-zero
; hwf : + 1147013315086854 776 (4.98669e+233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101100 #b0100001111001100000100001010110000000100010011010000)))
(assert (= y (fp #b0 #b01110011001 #b1111101111100100110000010011011101010011111001101101)))
(assert (= r (fp #b0 #b11100000111 #b0100000100110011001111011001001100101100101000000110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
