(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.78744841624725570028431320679374039173126220703125p-4 {- 3546352393984628 -4 (-0.111716)}
; Y = 1.7045936970808412969091705235769040882587432861328125p-298 {+ 3173207911620877 -298 (3.3472e-090)}
; -1.78744841624725570028431320679374039173126220703125p-4 * 1.7045936970808412969091705235769040882587432861328125p-298 == -1.5234366520961020174951272565522231161594390869140625p-301
; [HW: -1.5234366520961020174951272565522231161594390869140625p-301] 

; mpf : - 2357349111332065 -301
; mpfd: - 2357349111332065 -301 (-3.73935e-091) class: Neg. norm. non-zero
; hwf : - 2357349111332065 -301 (-3.73935e-091) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111111011 #b1100100110010110001110000010101100010001101001110100)))
(assert (= y (fp #b0 #b01011010101 #b1011010001100000010000001010010111101110000100001101)))
(assert (= r (fp #b1 #b01011010010 #b1000010111111111111100011100011001000111110011100001)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
