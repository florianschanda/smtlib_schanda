(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8938162305630148463109208023524843156337738037109375p-124 {- 4025390442901295 -124 (-8.90468e-038)}
; Y = -1.5159241490361783366580539222923107445240020751953125p332 {- 2323515805350773 332 (-1.32628e+100)}
; -1.8938162305630148463109208023524843156337738037109375p-124 * -1.5159241490361783366580539222923107445240020751953125p332 == 1.435440878873570635931855576927773654460906982421875p209
; [HW: 1.435440878873570635931855576927773654460906982421875p209] 

; mpf : + 1961051379836894 209
; mpfd: + 1961051379836894 209 (1.18101e+063) class: Pos. norm. non-zero
; hwf : + 1961051379836894 209 (1.18101e+063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000011 #b1110010011010001001000111111011011100110111100101111)))
(assert (= y (fp #b1 #b10101001011 #b1000010000010011100110101110001101010011101101110101)))
(assert (= r (fp #b0 #b10011010000 #b0110111101111001000011011010111000011010011111011110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
