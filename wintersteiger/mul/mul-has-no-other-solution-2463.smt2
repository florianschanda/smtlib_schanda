(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5066329208772766268253917587571777403354644775390625p-398 {- 2281671833676529 -398 (-2.33383e-120)}
; Y = 1.8594569115946073534217930500744841992855072021484375p-995 {+ 3870649826798471 -995 (5.55316e-300)}
; -1.5066329208772766268253917587571777403354644775390625p-398 * 1.8594569115946073534217930500744841992855072021484375p-995 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001110001 #b1000000110110010101100011111001000111110101011110001)))
(assert (= y (fp #b0 #b00000011100 #b1101110000000101010111100011111110011110101110000111)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
