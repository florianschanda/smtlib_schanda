(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.195693278055609543031323482864536345005035400390625p-792 {+ 881324174130154 -792 (4.59053e-239)}
; Y = -1.1099232043492983645904814693494699895381927490234375p637 {- 495050102146871 637 (-6.32995e+191)}
; 1.195693278055609543031323482864536345005035400390625p-792 * -1.1099232043492983645904814693494699895381927490234375p637 == -1.327127714598398622314334716065786778926849365234375p-155
; [HW: -1.327127714598398622314334716065786778926849365234375p-155] 

; mpf : - 1473252253567910 -155
; mpfd: - 1473252253567910 -155 (-2.90578e-047) class: Neg. norm. non-zero
; hwf : - 1473252253567910 -155 (-2.90578e-047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100111 #b0011001000011000111101000110010101001011101111101010)))
(assert (= y (fp #b1 #b11001111100 #b0001110000100011111011010101011111000000011100110111)))
(assert (= r (fp #b1 #b01101100100 #b0101001110111110101001000101001111010000101110100110)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
