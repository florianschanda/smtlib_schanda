(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6285712782586305724663588989642448723316192626953125p-943 {+ 2830833374541365 -943 (2.19039e-284)}
; Y = 1.4492213560259916693695458889123983681201934814453125p129 {+ 2023113131605525 129 (9.86289e+038)}
; 1.6285712782586305724663588989642448723316192626953125p-943 * 1.4492213560259916693695458889123983681201934814453125p129 == 1.180080138131477607288388753659091889858245849609375p-813
; [HW: 1.180080138131477607288388753659091889858245849609375p-813] 

; mpf : + 811008842985750 -813
; mpfd: + 811008842985750 -813 (2.16035e-245) class: Pos. norm. non-zero
; hwf : + 811008842985750 -813 (2.16035e-245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010000 #b1010000011101010000011000001101101010011011000110101)))
(assert (= y (fp #b0 #b10010000000 #b0111001100000000001010111011100011001011111000010101)))
(assert (= r (fp #b0 #b00011010010 #b0010111000011001101110110101111111101111000100010110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
