(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4472772659425052754755824935273267328739166259765625p-909 {- 2014357728229961 -909 (-3.34415e-274)}
; Y = -1.0735588692264836918610626526060514152050018310546875p-301 {- 331279696038187 -301 (-2.6351e-091)}
; -1.4472772659425052754755824935273267328739166259765625p-909 * -1.0735588692264836918610626526060514152050018310546875p-301 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110010 #b0111001010000000110000110100110101110111101001001001)))
(assert (= y (fp #b1 #b01011010010 #b0001001011010100110000010000100110101000100100101011)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
