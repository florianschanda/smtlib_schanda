(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0449875722491916985035231846268288791179656982421875p814 {+ 202606013617763 814 (1.14164e+245)}
; Y = 1.94938435754958305778927751816809177398681640625p-639 {+ 4275647038891680 -639 (8.54536e-193)}
; 1.0449875722491916985035231846268288791179656982421875p814 * 1.94938435754958305778927751816809177398681640625p-639 == 1.0185412135881446449303666668129153549671173095703125p176
; [HW: 1.0185412135881446449303666668129153549671173095703125p176] 

; mpf : + 83502202606565 176
; mpfd: + 83502202606565 176 (9.75569e+052) class: Pos. norm. non-zero
; hwf : + 83502202606565 176 (9.75569e+052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100101101 #b0000101110000100010011100011011110001001011001100011)))
(assert (= y (fp #b0 #b00110000000 #b1111001100001010110110100110111100000010011010100000)))
(assert (= r (fp #b0 #b10010101111 #b0000010010111111000111011111000111111101001111100101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
