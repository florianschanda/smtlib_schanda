(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.26925381525124603143694912432692945003509521484375p539 {+ 1212611382033596 539 (2.28411e+162)}
; Y = 1.92374015169171475037046548095531761646270751953125p-1003 {+ 4160155802945972 -1003 (2.2442e-302)}
; 1.26925381525124603143694912432692945003509521484375p539 * 1.92374015169171475037046548095531761646270751953125p-1003 == 1.2208572635433598829735046820132993161678314208984375p-463
; [HW: 1.2208572635433598829735046820132993161678314208984375p-463] 

; mpf : + 994652689795943 -463
; mpfd: + 994652689795943 -463 (5.12598e-140) class: Pos. norm. non-zero
; hwf : + 994652689795943 -463 (5.12598e-140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011010 #b0100010011101101110100010110101011010011110010111100)))
(assert (= y (fp #b0 #b00000010100 #b1110110001111010001111000000110110000100100110110100)))
(assert (= r (fp #b0 #b01000110000 #b0011100010001010000110100000010000000000101101100111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
