(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0113676426210684855533372683566994965076446533203125p-450 {+ 51195311072325 -450 (3.47865e-136)}
; Y = 1.9788148135103298397297066912869922816753387451171875p757 {+ 4408190029389843 757 (1.50007e+228)}
; 1.0113676426210684855533372683566994965076446533203125p-450 * 1.9788148135103298397297066912869922816753387451171875p757 == 1.0006546365617958738170045762672089040279388427734375p308
; [HW: 1.0006546365617958738170045762672089040279388427734375p308] 

; mpf : + 2948220975767 308
; mpfd: + 2948220975767 308 (5.21823e+092) class: Pos. norm. non-zero
; hwf : + 2948220975767 308 (5.21823e+092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111101 #b0000001011101000111111010110010101001010010001000101)))
(assert (= y (fp #b0 #b11011110100 #b1111101010010011100110111000110011011110000000010011)))
(assert (= r (fp #b0 #b10100110011 #b0000000000101010111001101111101010011111101010010111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
