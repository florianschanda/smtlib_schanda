(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7579248726329594898487584941904060542583465576171875p220 {- 3413390173964627 220 (-2.9621e+066)}
; Y = -1.5141056914679256184541600305237807333469390869140625p-224 {- 2315326200524001 -224 (-5.61613e-068)}
; -1.7579248726329594898487584941904060542583465576171875p220 * -1.5141056914679256184541600305237807333469390869140625p-224 == 1.3308420274132959360002814719337038695812225341796875p-3
; [HW: 1.3308420274132959360002814719337038695812225341796875p-3] 

; mpf : + 1489980031377019 -3
; mpfd: + 1489980031377019 -3 (0.166355) class: Pos. norm. non-zero
; hwf : + 1489980031377019 -3 (0.166355) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011011 #b1100001000000111010111010100110011001000100101010011)))
(assert (= y (fp #b1 #b01100011111 #b1000001110011100011011100011101110001010110011100001)))
(assert (= r (fp #b0 #b01111111100 #b0101010010110010000100000010011111100001111001111011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
