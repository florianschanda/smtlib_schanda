(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.215285462995375542760712050949223339557647705078125p-350 {+ 969559530924258 -350 (5.29883e-106)}
; Y = -1.548201204807293951404290055506862699985504150390625p-812 {- 2468878741694186 -812 (-5.66854e-245)}
; 1.215285462995375542760712050949223339557647705078125p-350 * -1.548201204807293951404290055506862699985504150390625p-812 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100001 #b0011011100011100111100101011011011011110100011100010)))
(assert (= y (fp #b1 #b00011010011 #b1000110001010110111010100000011001000110011011101010)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
