(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.14288908557153856548893600120209157466888427734375p-40 {+ 643515232535292 -40 (1.03945e-012)}
; Y = 1.7285667505879109828725859188125468790531158447265625p-396 {+ 3281172946462249 -396 (1.07105e-119)}
; 1.14288908557153856548893600120209157466888427734375p-40 * 1.7285667505879109828725859188125468790531158447265625p-396 == 1.9755600729287834393943512623081915080547332763671875p-436
; [HW: 1.9755600729287834393943512623081915080547332763671875p-436] 

; mpf : + 4393531980919603 -436
; mpfd: + 4393531980919603 -436 (1.1133e-131) class: Pos. norm. non-zero
; hwf : + 4393531980919603 -436 (1.1133e-131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010111 #b0010010010010100011000010000110101111100001011111100)))
(assert (= y (fp #b0 #b01001110011 #b1011101010000011010110011011111010111010011000101001)))
(assert (= r (fp #b0 #b01001001011 #b1111100110111110010011100001000010000011001100110011)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
