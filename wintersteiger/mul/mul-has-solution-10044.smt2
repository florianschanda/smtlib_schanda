(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.679031104438655663813051432953216135501861572265625p-515 {+ 3058084228922906 -515 (1.56535e-155)}
; Y = -1.5840880769685277140723655975307337939739227294921875p-567 {- 2630498845787011 -567 (-3.27923e-171)}
; 1.679031104438655663813051432953216135501861572265625p-515 * -1.5840880769685277140723655975307337939739227294921875p-567 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111100 #b1010110111010100111110111000001010000111111000011010)))
(assert (= y (fp #b1 #b00111001000 #b1001010110000110110010111101010010010000001110000011)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
