(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.115039303348825949768752252566628158092498779296875p-967 {+ 518090963694734 -967 (8.93891e-292)}
; Y = 1.7374448575880900857981714580091647803783416748046875p792 {+ 3321156385840011 792 (4.52551e+238)}
; 1.115039303348825949768752252566628158092498779296875p-967 * 1.7374448575880900857981714580091647803783416748046875p792 == 1.93731930361202397961051246966235339641571044921875p-175
; [HW: 1.93731930361202397961051246966235339641571044921875p-175] 

; mpf : + 4221310866474284 -175
; mpfd: + 4221310866474284 -175 (4.04531e-053) class: Pos. norm. non-zero
; hwf : + 4221310866474284 -175 (4.04531e-053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000111000 #b0001110101110011001101110011110110100011010010001110)))
(assert (= y (fp #b0 #b11100010111 #b1011110011001001001011111010100111110001101110001011)))
(assert (= r (fp #b0 #b01101010000 #b1110111111110100001010000110101011101100010100101100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
