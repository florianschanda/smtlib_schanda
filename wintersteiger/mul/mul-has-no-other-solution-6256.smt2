(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.646667678871380768867993538151495158672332763671875p560 {- 2912332317597694 560 (-6.21446e+168)}
; Y = -1.5456489772006432037443346416694112122058868408203125p-864 {- 2457384530395909 -864 (-1.25659e-260)}
; -1.646667678871380768867993538151495158672332763671875p560 * -1.5456489772006432037443346416694112122058868408203125p-864 == 1.2725851068184532710603207306121475994586944580078125p-303
; [HW: 1.2725851068184532710603207306121475994586944580078125p-303] 

; mpf : + 1227614185494333 -303
; mpfd: + 1227614185494333 -303 (7.80905e-092) class: Pos. norm. non-zero
; hwf : + 1227614185494333 -303 (7.80905e-092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101111 #b1010010110001100000000110101010000100001111111111110)))
(assert (= y (fp #b1 #b00010011111 #b1000101110101111101001101100000000101100001100000101)))
(assert (= r (fp #b0 #b01011010000 #b0100010111001000001000110011011100101001011100111101)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
