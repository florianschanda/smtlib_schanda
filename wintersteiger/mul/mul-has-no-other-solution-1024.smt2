(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9882493709238417967100076566566713154315948486328125p535 {+ 4450679498641741 535 (2.23624e+161)}
; Y = -1.033413133589631716091616908670403063297271728515625p-92 {- 150479375983546 -92 (-2.08696e-028)}
; 1.9882493709238417967100076566566713154315948486328125p535 * -1.033413133589631716091616908670403063297271728515625p-92 == -1.0273415063820106052361325055244378745555877685546875p444
; [HW: -1.0273415063820106052361325055244378745555877685546875p444] 

; mpf : - 123135197953771 444
; mpfd: - 123135197953771 444 (-4.66695e+133) class: Neg. norm. non-zero
; hwf : - 123135197953771 444 (-4.66695e+133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010110 #b1111110011111101111010010010100001101001000101001101)))
(assert (= y (fp #b1 #b01110100011 #b0000100010001101110000110101110000000110001110111010)))
(assert (= r (fp #b1 #b10110111011 #b0000011011111111110110100101101110111011111011101011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
