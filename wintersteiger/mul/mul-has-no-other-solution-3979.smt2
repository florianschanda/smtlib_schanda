(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7316500546113828828964642525534145534038543701171875p744 {- 3295058913313427 744 (-1.60242e+224)}
; Y = -1.8795177194104619733394656577729620039463043212890625p-605 {- 3960995673402705 -605 (-1.41546e-182)}
; -1.7316500546113828828964642525534145534038543701171875p744 * -1.8795177194104619733394656577729620039463043212890625p-605 == 1.6273334807300943172236884493031539022922515869140625p140
; [HW: 1.6273334807300943172236884493031539022922515869140625p140] 

; mpf : + 2825258830053089 140
; mpfd: + 2825258830053089 140 (2.26817e+042) class: Pos. norm. non-zero
; hwf : + 2825258830053089 140 (2.26817e+042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100111 #b1011101101001101011010110000000010101100001010010011)))
(assert (= y (fp #b1 #b00110100010 #b1110000100101000000100101100000100011110110101010001)))
(assert (= r (fp #b0 #b10010001011 #b1010000010011000111011010100111101101011111011100001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
