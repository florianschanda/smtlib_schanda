(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.12062782788122294874710860312916338443756103515625p-460 {- 543259440696388 -460 (-3.76412e-139)}
; Y = 1.264532813170090808085888056666590273380279541015625p-698 {+ 1191349878820090 -698 (9.61597e-211)}
; -1.12062782788122294874710860312916338443756103515625p-460 * 1.264532813170090808085888056666590273380279541015625p-698 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110011 #b0001111011100001011101110001111110111100110001000100)))
(assert (= y (fp #b0 #b00101000101 #b0100001110111000011011000010010101001000110011111010)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
