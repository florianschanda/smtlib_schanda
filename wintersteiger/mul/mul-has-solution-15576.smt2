(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1098959991794179469337677801377139985561370849609375p811 {+ 494927580953935 811 (1.51568e+244)}
; Y = -1.6343491148163555859440521089709363877773284912109375p-242 {- 2856854437109743 -242 (-2.31252e-073)}
; 1.1098959991794179469337677801377139985561370849609375p811 * -1.6343491148163555859440521089709363877773284912109375p-242 == -1.813957543797096061410911715938709676265716552734375p569
; [HW: -1.813957543797096061410911715938709676265716552734375p569] 

; mpf : - 3665738890940006 569
; mpfd: - 3665738890940006 569 (-3.50505e+171) class: Neg. norm. non-zero
; hwf : - 3665738890940006 569 (-3.50505e+171) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100101010 #b0001110000100010001001001110101001101111110101001111)))
(assert (= y (fp #b1 #b01100001101 #b1010001001100100101101000001111001100001111111101111)))
(assert (= r (fp #b1 #b11000111000 #b1101000001011111100001011000011011110000111001100110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
