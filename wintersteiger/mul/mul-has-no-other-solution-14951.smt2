(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8006646305239240035689363139681518077850341796875p336 {+ 3605872931676280 336 (2.52064e+101)}
; Y = 1.6973328395401414692145181106752716004848480224609375p-384 {+ 3140507916306191 -384 (4.30773e-116)}
; 1.8006646305239240035689363139681518077850341796875p336 * 1.6973328395401414692145181106752716004848480224609375p-384 == 1.5281636051933358277921115586650557816028594970703125p-47
; [HW: 1.5281636051933358277921115586650557816028594970703125p-47] 

; mpf : + 2378637415539365 -47
; mpfd: + 2378637415539365 -47 (1.08583e-014) class: Pos. norm. non-zero
; hwf : + 2378637415539365 -47 (1.08583e-014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001111 #b1100110011111000010110110111001100101010000001111000)))
(assert (= y (fp #b0 #b01001111111 #b1011001010000100011001111010110001000000011100001111)))
(assert (= r (fp #b0 #b01111010000 #b1000011100110101101110101110001100111110001010100101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
