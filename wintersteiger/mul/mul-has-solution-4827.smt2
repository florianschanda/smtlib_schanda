(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.990760328387225275292848891695030033588409423828125p401 {+ 4461987845738178 401 (1.02813e+121)}
; Y = 1.3425209798530672866689883448998443782329559326171875p-369 {+ 1542577357232851 -369 (1.11648e-111)}
; 1.990760328387225275292848891695030033588409423828125p401 * 1.3425209798530672866689883448998443782329559326171875p-369 == 1.3363187533595157763244287707493640482425689697265625p33
; [HW: 1.3363187533595157763244287707493640482425689697265625p33] 

; mpf : + 1514645012307625 33
; mpfd: + 1514645012307625 33 (1.14789e+010) class: Pos. norm. non-zero
; hwf : + 1514645012307625 33 (1.14789e+010) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010000 #b1111110110100010011110000000100010011000111011000010)))
(assert (= y (fp #b0 #b01010001110 #b0101011110101111011101000111011010101001101011010011)))
(assert (= r (fp #b0 #b10000100000 #b0101011000011000111111000101111010110101111010101001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
