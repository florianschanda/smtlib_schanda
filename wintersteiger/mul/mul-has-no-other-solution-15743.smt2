(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.01900478217301238004210972576402127742767333984375p-856 {+ 85589929912636 -856 (2.1208e-258)}
; Y = 1.615399552220984080719290432170964777469635009765625p-30 {+ 2771513194066394 -30 (1.50446e-009)}
; 1.01900478217301238004210972576402127742767333984375p-856 * 1.615399552220984080719290432170964777469635009765625p-30 == 1.6460998688333254857951715166564099490642547607421875p-886
; [HW: 1.6460998688333254857951715166564099490642547607421875p-886] 

; mpf : + 2909775128521891 -886
; mpfd: + 2909775128521891 -886 (3.19066e-267) class: Pos. norm. non-zero
; hwf : + 2909775128521891 -886 (3.19066e-267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100111 #b0000010011011101011111110101010111100110100100111100)))
(assert (= y (fp #b0 #b01111100001 #b1001110110001010110100110011011011000011000111011010)))
(assert (= r (fp #b0 #b00010001001 #b1010010101100110110011010000111010010110110010100011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
