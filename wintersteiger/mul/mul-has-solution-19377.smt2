(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0359762409052997167435705705429427325725555419921875p806 {+ 162022585135299 806 (4.42106e+242)}
; Y = 1.1403266982562001441436905224691145122051239013671875p666 {+ 631975265976755 666 (3.49145e+200)}
; 1.0359762409052997167435705705429427325725555419921875p806 * 1.1403266982562001441436905224691145122051239013671875p666 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100101 #b0000100100110101101111010010101000011111000011000011)))
(assert (= y (fp #b0 #b11010011001 #b0010001111101100011100110101001111000100000110110011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
