(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.271182979712701666130669764243066310882568359375p619 {- 1221299566383344 619 (-2.76551e+186)}
; Y = -1.6050372285708396358216987209743820130825042724609375p127 {- 2724845437136911 127 (-2.73083e+038)}
; -1.271182979712701666130669764243066310882568359375p619 * -1.6050372285708396358216987209743820130825042724609375p127 == 1.0201480033822483139971382115618325769901275634765625p747
; [HW: 1.0201480033822483139971382115618325769901275634765625p747] 

; mpf : + 90738540524553 747
; mpfd: + 90738540524553 747 (7.55214e+224) class: Pos. norm. non-zero
; hwf : + 90738540524553 747 (7.55214e+224) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001101010 #b0100010101101100001111110110110100011001000011110000)))
(assert (= y (fp #b1 #b10001111110 #b1001101011100011101110000100010110010011000000001111)))
(assert (= r (fp #b0 #b11011101010 #b0000010100101000011010110110011110011011010000001001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
