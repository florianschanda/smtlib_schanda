(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.42088922191975797204577247612178325653076171875p-388 {+ 1895516543002080 -388 (2.25383e-117)}
; Y = 1.194114424391516937618007432320155203342437744140625p504 {+ 874213649356874 504 (6.25408e+151)}
; 1.42088922191975797204577247612178325653076171875p-388 * 1.194114424391516937618007432320155203342437744140625p504 == 1.696704315356821979321466642431914806365966796875p116
; [HW: 1.696704315356821979321466642431914806365966796875p116] 

; mpf : + 3137677295028400 116
; mpfd: + 3137677295028400 116 (1.40957e+035) class: Pos. norm. non-zero
; hwf : + 3137677295028400 116 (1.40957e+035) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001111011 #b0110101110111111011001010110001101100010010111100000)))
(assert (= y (fp #b0 #b10111110111 #b0011000110110001011110111010000001110001100001001010)))
(assert (= r (fp #b0 #b10001110011 #b1011001001011011001101101100100101110000100010110000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
