(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8177188753444488700239389800117351114749908447265625p523 {- 3682678422295081 523 (-4.99131e+157)}
; Y = -1.567733793461810964942060309113003313541412353515625p-878 {- 2556845700680250 -878 (-7.77922e-265)}
; -1.8177188753444488700239389800117351114749908447265625p523 * -1.567733793461810964942060309113003313541412353515625p-878 == 1.4248496539454447162853512054425664246082305908203125p-354
; [HW: 1.4248496539454447162853512054425664246082305908203125p-354] 

; mpf : + 1913352743197189 -354
; mpfd: + 1913352743197189 -354 (3.88285e-107) class: Pos. norm. non-zero
; hwf : + 1913352743197189 -354 (3.88285e-107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001010 #b1101000101010110000001100011001011101101001000101001)))
(assert (= y (fp #b1 #b00010010001 #b1001000101010111000000000111101111000000101000111010)))
(assert (= r (fp #b0 #b01010011101 #b0110110011000010111100100110100101101001101000000101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
