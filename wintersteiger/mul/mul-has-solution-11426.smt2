(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7233268451124643672045522180269472301006317138671875p418 {+ 3257574510115571 418 (1.16656e+126)}
; Y = 1.469221458388556555973991635255515575408935546875p442 {+ 2113185585152944 442 (1.66857e+133)}
; 1.7233268451124643672045522180269472301006317138671875p418 * 1.469221458388556555973991635255515575408935546875p442 == 1.2659743903281424071138872022856958210468292236328125p861
; [HW: 1.2659743903281424071138872022856958210468292236328125p861] 

; mpf : + 1197842165171917 861
; mpfd: + 1197842165171917 861 (1.94649e+259) class: Pos. norm. non-zero
; hwf : + 1197842165171917 861 (1.94649e+259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100001 #b1011100100101011111100101011100000010011101011110011)))
(assert (= y (fp #b0 #b10110111001 #b0111100000011110111001011100001001011100001110110000)))
(assert (= r (fp #b0 #b11101011100 #b0100010000010110111001011100110000001000011011001101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
