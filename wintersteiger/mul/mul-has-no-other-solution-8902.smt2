(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6362198482165803969934358974569477140903472900390625p961 {+ 2865279471353905 961 (3.1891e+289)}
; Y = 1.29229108841605278001907208818010985851287841796875p-41 {+ 1316362036874252 -41 (5.87666e-013)}
; 1.6362198482165803969934358974569477140903472900390625p961 * 1.29229108841605278001907208818010985851287841796875p-41 == 1.0572361642698766548420508115668781101703643798828125p921
; [HW: 1.0572361642698766548420508115668781101703643798828125p921] 

; mpf : + 257768768077933 921
; mpfd: + 257768768077933 921 (1.87412e+277) class: Pos. norm. non-zero
; hwf : + 257768768077933 921 (1.87412e+277) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111000000 #b1010001011011111010011011101000100101000000000110001)))
(assert (= y (fp #b0 #b01111010110 #b0100101011010011100101101011100110101000110000001100)))
(assert (= r (fp #b0 #b11110011000 #b0000111010100111000001110111110110110000000001101101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
