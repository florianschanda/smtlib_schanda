(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.682999470674277464610213428386487066745758056640625p-120 {+ 3075956161622922 -120 (1.26615e-036)}
; Y = 1.466684148856060243559795708279125392436981201171875p942 {+ 2101758558887870 942 (5.45246e+283)}
; 1.682999470674277464610213428386487066745758056640625p-120 * 1.466684148856060243559795708279125392436981201171875p942 == 1.2342143230855511237820110181928612291812896728515625p823
; [HW: 1.2342143230855511237820110181928612291812896728515625p823] 

; mpf : + 1054807538172921 823
; mpfd: + 1054807538172921 823 (6.90362e+247) class: Pos. norm. non-zero
; hwf : + 1054807538172921 823 (6.90362e+247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110000111 #b1010111011011001000011011010010110111011001110001010)))
(assert (= y (fp #b0 #b11110101101 #b0111011101111000100111001100010011100101111110111110)))
(assert (= r (fp #b0 #b11100110110 #b0011101111110101011110000100100111101000001111111001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
