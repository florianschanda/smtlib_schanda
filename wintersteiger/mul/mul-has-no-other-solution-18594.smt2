(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.382026386965407471763001012732274830341339111328125p-955 {+ 1720493893983106 -955 (4.53806e-288)}
; Y = 1.6759122650820816868844076452660374343395233154296875p-114 {+ 3044038225158811 -114 (8.06922e-035)}
; 1.382026386965407471763001012732274830341339111328125p-955 * 1.6759122650820816868844076452660374343395233154296875p-114 == 0.000000000000016431300764452316798269748687744140625p-1022
; [HW: 0.000000000000016431300764452316798269748687744140625p-1022] 

; mpf : + 74 -1023
; mpfd: + 74 -1023 (3.65609e-322) class: Pos. denorm.
; hwf : + 74 -1023 (3.65609e-322) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001000100 #b0110000111001100011110110011011000111001101110000010)))
(assert (= y (fp #b0 #b01110001101 #b1010110100001000100101100001000101111110001010011011)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000001001010)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
