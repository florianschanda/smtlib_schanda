(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.81095291185857032445483127958141267299652099609375p-474 {- 3652207231661276 -474 (-3.71269e-143)}
; Y = 1.688661591868050759757124978932552039623260498046875p346 {+ 3101456088521326 346 (2.42059e+104)}
; -1.81095291185857032445483127958141267299652099609375p-474 * 1.688661591868050759757124978932552039623260498046875p346 == -1.5290433134685874616565115502453409135341644287109375p-127
; [HW: -1.5290433134685874616565115502453409135341644287109375p-127] 

; mpf : - 2382599269399983 -127
; mpfd: - 2382599269399983 -127 (-8.98691e-039) class: Neg. norm. non-zero
; hwf : - 2382599269399983 -127 (-8.98691e-039) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100101 #b1100111110011010100111000010101100000111010011011100)))
(assert (= y (fp #b0 #b10101011001 #b1011000001001100001000000100011100010101101001101110)))
(assert (= r (fp #b1 #b01110000000 #b1000011101101111011000011111000110000011110110101111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
