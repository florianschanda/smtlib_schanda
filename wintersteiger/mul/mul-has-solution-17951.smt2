(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0535269225072771970275198327726684510707855224609375p631 {- 241063828258063 631 (-9.388e+189)}
; Y = -1.0759516110823044154898298074840568006038665771484375p-415 {- 342055647368455 -415 (-1.27158e-125)}
; -1.0535269225072771970275198327726684510707855224609375p631 * -1.0759516110823044154898298074840568006038665771484375p-415 == 1.1335439895902867935006952393450774252414703369140625p216
; [HW: 1.1335439895902867935006952393450774252414703369140625p216] 

; mpf : + 601428661756385 216
; mpfd: + 601428661756385 216 (1.19376e+065) class: Pos. norm. non-zero
; hwf : + 601428661756385 216 (1.19376e+065) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001110110 #b0000110110110011111100001011110110011111110100001111)))
(assert (= y (fp #b1 #b01001100000 #b0001001101110001100100001001010110101101010100000111)))
(assert (= r (fp #b0 #b10011010111 #b0010001000101111111100000101101111011110000111100001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
