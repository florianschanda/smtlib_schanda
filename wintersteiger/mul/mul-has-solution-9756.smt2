(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4696211394506117908775877367588691413402557373046875p738 {- 2114985588635083 738 (-2.12492e+222)}
; Y = 1.4483082196495555837856272773933596909046173095703125p-113 {+ 2019000730960869 -113 (1.39467e-034)}
; -1.4696211394506117908775877367588691413402557373046875p738 * 1.4483082196495555837856272773933596909046173095703125p-113 == -1.064232188018533253881514610839076340198516845703125p626
; [HW: -1.064232188018533253881514610839076340198516845703125p626] 

; mpf : - 289276058025458 626
; mpfd: - 289276058025458 626 (-2.96356e+188) class: Neg. norm. non-zero
; hwf : - 289276058025458 626 (-2.96356e+188) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100001 #b0111100000111001000101110100101101110011010111001011)))
(assert (= y (fp #b0 #b01110001110 #b0111001011000100010100111101010111101100001111100101)))
(assert (= r (fp #b1 #b11001110001 #b0001000001110001100001010100101011100011110111110010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
