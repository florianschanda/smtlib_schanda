(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1472744565256343118875292930169962346553802490234375p505 {- 663265187530039 505 (-1.20175e+152)}
; Y = 1.05520430217058613919789422652684152126312255859375p-647 {+ 248618074684700 -647 (1.80688e-195)}
; -1.1472744565256343118875292930169962346553802490234375p505 * 1.05520430217058613919789422652684152126312255859375p-647 == -1.210608942296270473804042921983636915683746337890625p-142
; [HW: -1.210608942296270473804042921983636915683746337890625p-142] 

; mpf : - 948498354046378 -142
; mpfd: - 948498354046378 -142 (-2.17142e-043) class: Neg. norm. non-zero
; hwf : - 948498354046378 -142 (-2.17142e-043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111111000 #b0010010110110011110001110101111001010000010100110111)))
(assert (= y (fp #b0 #b00101111000 #b0000111000100001110111101000000001101011110100011100)))
(assert (= r (fp #b1 #b01101110001 #b0011010111101010011101111011011101101000010110101010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
