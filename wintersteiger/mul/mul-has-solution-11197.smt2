(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4476051611189451051586729590781033039093017578125p-32 {+ 2015834436824392 -32 (3.37047e-010)}
; Y = -0.6485575594329626714085179628455080091953277587890625p-1022 {- 2920843582990609 -1023 (-1.44309e-308)}
; 1.4476051611189451051586729590781033039093017578125p-32 * -0.6485575594329626714085179628455080091953277587890625p-1022 == -0.0000000002185942538091012465883977711200714111328125p-1022
; [HW: -0.0000000002185942538091012465883977711200714111328125p-1022] 

; mpf : - 984461 -1023
; mpfd: - 984461 -1023 (-4.86388e-318) class: Neg. denorm.
; hwf : - 984461 -1023 (-4.86388e-318) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111011111 #b0111001010010110010000000111100010000110110101001000)))
(assert (= y (fp #b1 #b00000000000 #b1010011000000111110111100100001101010110100100010001)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000011110000010110001101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
