(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2472120102242139072501458940678276121616363525390625p-266 {+ 1113343917127281 -266 (1.05187e-080)}
; Y = 1.413680176246198794132169496151618659496307373046875p790 {+ 1863049887592942 790 (9.20551e+237)}
; 1.2472120102242139072501458940678276121616363525390625p-266 * 1.413680176246198794132169496151618659496307373046875p790 == 1.763158894430142620279866605415008962154388427734375p524
; [HW: 1.763158894430142620279866605415008962154388427734375p524] 

; mpf : + 3436962112580070 524
; mpfd: + 3436962112580070 524 (9.68298e+157) class: Pos. norm. non-zero
; hwf : + 3436962112580070 524 (9.68298e+157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110101 #b0011111101001001010010010100101100010111011001110001)))
(assert (= y (fp #b0 #b11100010101 #b0110100111100110111100011010101111111011000111101110)))
(assert (= r (fp #b0 #b11000001011 #b1100001101011110011000011001110100111010100111100110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
