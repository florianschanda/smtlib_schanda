(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.528373395257259570456653818837366998195648193359375p-190 {+ 2379582225993078 -190 (9.73936e-058)}
; Y = -1.58815697193459559599659769446589052677154541015625p-301 {- 2648823519640004 -301 (-3.89821e-091)}
; 1.528373395257259570456653818837366998195648193359375p-190 * -1.58815697193459559599659769446589052677154541015625p-301 == -1.2136484316985829412516295633395202457904815673828125p-490
; [HW: -1.2136484316985829412516295633395202457904815673828125p-490] 

; mpf : - 962186997386029 -490
; mpfd: - 962186997386029 -490 (-3.7966e-148) class: Neg. norm. non-zero
; hwf : - 962186997386029 -490 (-3.7966e-148) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000001 #b1000011101000011011110101001010010110100110101110110)))
(assert (= y (fp #b1 #b01011010010 #b1001011010010001011101001000111101011111100111000100)))
(assert (= r (fp #b1 #b01000010101 #b0011011010110001101010011110001011111100101100101101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
