(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1214937775449975720931661271606571972370147705078125p-708 {+ 547159331279485 -708 (8.32837e-214)}
; Y = -1.472978885050575836856978639843873679637908935546875p811 {- 2130107530467886 811 (-2.01151e+244)}
; 1.1214937775449975720931661271606571972370147705078125p-708 * -1.472978885050575836856978639843873679637908935546875p811 == -1.65193665403938894087332300841808319091796875p103
; [HW: -1.65193665403938894087332300841808319091796875p103] 

; mpf : - 2936061672200960 103
; mpfd: - 2936061672200960 103 (-1.67526e+031) class: Neg. norm. non-zero
; hwf : - 2936061672200960 103 (-1.67526e+031) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111011 #b0001111100011010001101110101100100111001001001111101)))
(assert (= y (fp #b1 #b11100101010 #b0111100100010101001001001110101011111101101000101110)))
(assert (= r (fp #b1 #b10001100110 #b1010011011100101010100100001000000101001101100000000)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
