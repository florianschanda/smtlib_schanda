(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9149975784592869754163757534115575253963470458984375p383 {+ 4120782753394151 383 (3.77274e+115)}
; Y = 1.0605335055593894111325425910763442516326904296875p179 {+ 272618673080696 179 (8.12631e+053)}
; 1.9149975784592869754163757534115575253963470458984375p383 * 1.0605335055593894111325425910763442516326904296875p179 == 1.015459547510584759066887272638268768787384033203125p563
; [HW: 1.015459547510584759066887272638268768787384033203125p563] 

; mpf : + 69623612407986 563
; mpfd: + 69623612407986 563 (3.06584e+169) class: Pos. norm. non-zero
; hwf : + 69623612407986 563 (3.06584e+169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101111110 #b1110101000111101010010000000001101100110110111100111)))
(assert (= y (fp #b0 #b10010110010 #b0000111101111111000111111011001010110000100101111000)))
(assert (= r (fp #b0 #b11000110010 #b0000001111110101001010000010101011111000000010110010)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
