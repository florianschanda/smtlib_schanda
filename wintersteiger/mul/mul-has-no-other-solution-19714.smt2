(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2651454774202564035334717118530534207820892333984375p775 {- 1194109073308839 775 (-2.51413e+233)}
; Y = -1.4848126085432034049205185510800220072269439697265625p-590 {- 2183401883179689 -590 (-3.66416e-178)}
; -1.2651454774202564035334717118530534207820892333984375p775 * -1.4848126085432034049205185510800220072269439697265625p-590 == 1.878503956515007455863042196142487227916717529296875p185
; [HW: 1.878503956515007455863042196142487227916717529296875p185] 

; mpf : + 3956430091204494 185
; mpfd: + 3956430091204494 185 (9.21216e+055) class: Pos. norm. non-zero
; hwf : + 3956430091204494 185 (9.21216e+055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100000110 #b0100001111100000100100101111001000110011110010100111)))
(assert (= y (fp #b1 #b00110110001 #b0111110000011100101011011101101001100001101010101001)))
(assert (= r (fp #b0 #b10010111000 #b1110000011100101101000101010001010100011011110001110)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
