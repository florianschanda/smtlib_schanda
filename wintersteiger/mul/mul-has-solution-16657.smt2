(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2210651568368795505392654376919381320476531982421875p59 {+ 995588957955171 59 (7.03896e+017)}
; Y = 1.5367155425391272327573233269504271447658538818359375p-577 {+ 2417151917383167 -577 (3.1066e-174)}
; 1.2210651568368795505392654376919381320476531982421875p59 * 1.5367155425391272327573233269504271447658538818359375p-577 == 1.87642980496420985758732058457098901271820068359375p-518
; [HW: 1.87642980496420985758732058457098901271820068359375p-518] 

; mpf : + 3947088943053212 -518
; mpfd: + 3947088943053212 -518 (2.18673e-156) class: Pos. norm. non-zero
; hwf : + 3947088943053212 -518 (2.18673e-156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111010 #b0011100010010111101110011110001011100110010001100011)))
(assert (= y (fp #b0 #b00110111110 #b1000100101100110001100001001011001110101110111111111)))
(assert (= r (fp #b0 #b00111111001 #b1110000001011101101101000010010110001111100110011100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
