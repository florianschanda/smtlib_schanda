(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.461366569688736571919207563041709363460540771484375p-483 {- 2077810311331398 -483 (-5.85155e-146)}
; Y = 1.1300393762002347575190697170910425484180450439453125p-558 {+ 585645286198869 -558 (1.19772e-168)}
; -1.461366569688736571919207563041709363460540771484375p-483 * 1.1300393762002347575190697170910425484180450439453125p-558 == -0.000003149798902146727641593315638601779937744140625p-1022
; [HW: -0.000003149798902146727641593315638601779937744140625p-1022] 

; mpf : - 14185433162 -1023
; mpfd: - 14185433162 -1023 (-7.00854e-314) class: Neg. denorm.
; hwf : - 14185433162 -1023 (-7.00854e-314) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011100 #b0111011000011100000111101001100001000111111001000110)))
(assert (= y (fp #b0 #b00111010001 #b0010000101001010010000101011001111111000111001010101)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000001101001101100001001000100001001010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
