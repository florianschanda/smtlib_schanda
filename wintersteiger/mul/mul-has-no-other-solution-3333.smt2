(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5394309057487678416009657667018473148345947265625p301 {- 2429380826122280 301 (-6.27175e+090)}
; Y = 1.6012316011167033735773657099343836307525634765625p239 {+ 2707706414752552 239 (1.41457e+072)}
; -1.5394309057487678416009657667018473148345947265625p301 * 1.6012316011167033735773657099343836307525634765625p239 == -1.2324927070103182114024775728466920554637908935546875p541
; [HW: -1.2324927070103182114024775728466920554637908935546875p541] 

; mpf : - 1047054068658027 541
; mpfd: - 1047054068658027 541 (-8.87181e+162) class: Neg. norm. non-zero
; hwf : - 1047054068658027 541 (-8.87181e+162) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100101100 #b1000101000011000001001001101001010100100100000101000)))
(assert (= y (fp #b0 #b10011101110 #b1001100111101010010100000111000000011110001100101000)))
(assert (= r (fp #b1 #b11000011100 #b0011101110000100101001000101110100101010111101101011)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
