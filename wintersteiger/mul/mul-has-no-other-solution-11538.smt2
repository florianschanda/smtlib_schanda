(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5095821388109553762291170642129145562648773193359375p172 {+ 2294953930463679 172 (9.03683e+051)}
; Y = -1.2561400343309363503152553676045499742031097412109375p156 {- 1153552163167471 156 (-1.14741e+047)}
; 1.5095821388109553762291170642129145562648773193359375p172 * -1.2561400343309363503152553676045499742031097412109375p156 == -1.896246559671361797683175609563477337360382080078125p328
; [HW: -1.896246559671361797683175609563477337360382080078125p328] 

; mpf : - 4036335672168034 328
; mpfd: - 4036335672168034 328 (-1.03689e+099) class: Neg. norm. non-zero
; hwf : - 4036335672168034 328 (-1.03689e+099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010101011 #b1000001001110011111110011001110011010001100110111111)))
(assert (= y (fp #b1 #b10010011011 #b0100000110010010011001001010111010100101110011101111)))
(assert (= r (fp #b1 #b10101000111 #b1110010101110000011010100001111011110000111001100010)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
