(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2842330658047280689260105646098963916301727294921875p141 {+ 1280071929244547 141 (3.57992e+042)}
; Y = -1.840469284977853003937298126402311027050018310546875p995 {- 3785137158642606 995 (-6.16275e+299)}
; 1.2842330658047280689260105646098963916301727294921875p141 * -1.840469284977853003937298126402311027050018310546875p995 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001100 #b0100100011000011011111111000101000010010101110000011)))
(assert (= y (fp #b1 #b11111100010 #b1101011100101000111111101011110001000101101110101110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
