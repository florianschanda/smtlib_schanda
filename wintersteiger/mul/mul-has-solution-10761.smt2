(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7797892379517674665834192637703381478786468505859375p-181 {- 3511858521467103 -181 (-5.80683e-055)}
; Y = -1.8532699316388103749631000027875415980815887451171875p-139 {- 3842786146174995 -139 (-2.65931e-042)}
; -1.7797892379517674665834192637703381478786468505859375p-181 * -1.8532699316388103749631000027875415980815887451171875p-139 == 1.6492149396751811796235642759711481630802154541015625p-319
; [HW: 1.6492149396751811796235642759711481630802154541015625p-319] 

; mpf : + 2923804160404505 -319
; mpfd: + 2923804160404505 -319 (1.54422e-096) class: Pos. norm. non-zero
; hwf : + 2923804160404505 -319 (1.54422e-096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001010 #b1100011110100000010001000111101011000110100011011111)))
(assert (= y (fp #b1 #b01101110100 #b1101101001101111111001011111001100001100100000010011)))
(assert (= r (fp #b0 #b01011000000 #b1010011000110010111100110100010111111010110000011001)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
