(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5158493701520734386889444067492149770259857177734375p-511 {- 2323179031196183 -511 (-2.26114e-154)}
; Y = 1.63021948341200140220053071971051394939422607421875p445 {+ 2838256230655916 445 (1.48113e+134)}
; -1.5158493701520734386889444067492149770259857177734375p-511 * 1.63021948341200140220053071971051394939422607421875p445 == -1.2355835885698602805149448613519780337810516357421875p-65
; [HW: -1.2355835885698602805149448613519780337810516357421875p-65] 

; mpf : - 1060974161697827 -65
; mpfd: - 1060974161697827 -65 (-3.34906e-020) class: Neg. norm. non-zero
; hwf : - 1060974161697827 -65 (-3.34906e-020) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000000 #b1000010000001110101101000100111001110111001000010111)))
(assert (= y (fp #b0 #b10110111100 #b1010000101010110000100000110011010001110011110101100)))
(assert (= r (fp #b1 #b01110111110 #b0011110001001111001101001100000001100001110000100011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
