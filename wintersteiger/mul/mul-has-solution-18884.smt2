(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.79410067399028694268281469703651964664459228515625p-208 {- 3576311499477316 -208 (-4.36122e-063)}
; Y = -1.65369789020266022561145291547290980815887451171875p690 {- 2943993574729580 690 (-8.4948e+207)}
; -1.79410067399028694268281469703651964664459228515625p-208 * -1.65369789020266022561145291547290980815887451171875p690 == 1.48345024969445393736577898380346596240997314453125p483
; [HW: 1.48345024969445393736577898380346596240997314453125p483] 

; mpf : + 2177266364376116 483
; mpfd: + 2177266364376116 483 (3.70477e+145) class: Pos. norm. non-zero
; hwf : + 2177266364376116 483 (3.70477e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100101111 #b1100101101001010001011101000100010000101000101000100)))
(assert (= y (fp #b1 #b11010110001 #b1010011101011000101111101011001111100010011101101100)))
(assert (= r (fp #b0 #b10111100010 #b0111101111000011011001010100001110101110010000110100)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
