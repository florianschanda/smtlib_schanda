(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7308270855971858992461420712061226367950439453125p588 {+ 3291352590367752 588 (1.75344e+177)}
; Y = -1.1250966072643946436215856010676361620426177978515625p-710 {- 563385033861241 -710 (-2.08878e-214)}
; 1.7308270855971858992461420712061226367950439453125p588 * -1.1250966072643946436215856010676361620426177978515625p-710 == -1.9473476817667136895551038833218626677989959716796875p-122
; [HW: -1.9473476817667136895551038833218626677989959716796875p-122] 

; mpf : - 4266474666594875 -122
; mpfd: - 4266474666594875 -122 (-3.66255e-037) class: Neg. norm. non-zero
; hwf : - 4266474666594875 -122 (-3.66255e-037) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001011 #b1011101100010111011110111101111110101011110000001000)))
(assert (= y (fp #b1 #b00100111001 #b0010000000000110010101001100110100001010100001111001)))
(assert (= r (fp #b1 #b01110000101 #b1111001010000101011000001010111100100001001000111011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
