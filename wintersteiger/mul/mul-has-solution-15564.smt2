(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.847247855373233438314173326944001019001007080078125p735 {+ 3815665125749346 735 (3.33866e+221)}
; Y = 1.363202459110941955344742382294498383998870849609375p-825 {+ 1635718459512086 -825 (6.09276e-249)}
; 1.847247855373233438314173326944001019001007080078125p735 * 1.363202459110941955344742382294498383998870849609375p-825 == 1.2590864095161027336189363268204033374786376953125p-89
; [HW: 1.2590864095161027336189363268204033374786376953125p-89] 

; mpf : + 1166821457353480 -89
; mpfd: + 1166821457353480 -89 (2.03416e-027) class: Pos. norm. non-zero
; hwf : + 1166821457353480 -89 (2.03416e-027) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011110 #b1101100011100101001111000100011001101111001001100010)))
(assert (= y (fp #b0 #b00011000110 #b0101110011111010110101100001101110110101010100010110)))
(assert (= r (fp #b0 #b01110100110 #b0100001001010011011111001010011110110101101100001000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
