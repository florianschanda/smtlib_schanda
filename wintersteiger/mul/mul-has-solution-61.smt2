(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.760612324745749024401675342232920229434967041015625p-721 {- 3425493382298362 -721 (-1.59601e-217)}
; Y = 1.9966209210379293192971772441524080932140350341796875p606 {+ 4488381608616059 606 (5.30241e+182)}
; -1.760612324745749024401675342232920229434967041015625p-721 * 1.9966209210379293192971772441524080932140350341796875p606 == -1.7576377007122936380056898997281678020954132080078125p-114
; [HW: -1.7576377007122936380056898997281678020954132080078125p-114] 

; mpf : - 3412096866609725 -114
; mpfd: - 3412096866609725 -114 (-8.46272e-035) class: Neg. norm. non-zero
; hwf : - 3412096866609725 -114 (-8.46272e-035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101110 #b1100001010110111011111010100001110110111101011111010)))
(assert (= y (fp #b0 #b11001011101 #b1111111100100010100011000111011001011110000001111011)))
(assert (= r (fp #b1 #b01110001101 #b1100000111110100100010110101101011000110101000111101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
