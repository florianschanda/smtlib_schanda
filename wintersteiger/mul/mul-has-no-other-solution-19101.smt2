(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2877867655046137951302398505504243075847625732421875p-424 {- 1296076369888739 -424 (-2.97253e-128)}
; Y = -1.1995416159087373131342246779240667819976806640625p-734 {- 898655547051496 -734 (-1.32739e-221)}
; -1.2877867655046137951302398505504243075847625732421875p-424 * -1.1995416159087373131342246779240667819976806640625p-734 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001010111 #b0100100110101100011001001011101000010000010111100011)))
(assert (= y (fp #b1 #b00100100001 #b0011001100010101001010001100101010000100110111101000)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
