(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.432661052822160829833819661871530115604400634765625p-241 {- 1948532156267610 -241 (-4.05429e-073)}
; Y = -1.9365038727084897818286890469607897102832794189453125p178 {- 4217638492160981 178 (-7.41921e+053)}
; -1.432661052822160829833819661871530115604400634765625p-241 * -1.9365038727084897818286890469607897102832794189453125p178 == 1.3871768385343681284638250872376374900341033935546875p-62
; [HW: 1.3871768385343681284638250872376374900341033935546875p-62] 

; mpf : + 1743689465749867 -62
; mpfd: + 1743689465749867 -62 (3.00796e-019) class: Pos. norm. non-zero
; hwf : + 1743689465749867 -62 (3.00796e-019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100001110 #b0110111011000010110111111111000000011111110001011010)))
(assert (= y (fp #b1 #b10010110001 #b1110111110111110101101111100000111011100001111010101)))
(assert (= r (fp #b0 #b01111000001 #b0110001100011110000001010111001101000110000101101011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
