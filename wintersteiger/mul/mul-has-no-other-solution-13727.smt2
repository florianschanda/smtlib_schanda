(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2519158352124641897518131372635252773761749267578125p853 {- 1134528061591581 853 (-7.51902e+256)}
; Y = -1.1575638638158525228760709069320000708103179931640625p-480 {- 709604558368129 -480 (-3.70806e-145)}
; -1.2519158352124641897518131372635252773761749267578125p853 * -1.1575638638158525228760709069320000708103179931640625p-480 == 1.4491725313807901631690810972941108047962188720703125p373
; [HW: 1.4491725313807901631690810972941108047962188720703125p373] 

; mpf : + 2022893244951589 373
; mpfd: + 2022893244951589 373 (2.7881e+112) class: Pos. norm. non-zero
; hwf : + 2022893244951589 373 (2.7881e+112) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101010100 #b0100000001111101100011100110000110010101000000011101)))
(assert (= y (fp #b1 #b01000011111 #b0010100001010110000110101111101000011110110110000001)))
(assert (= r (fp #b0 #b10101110100 #b0111001011111100111110001001010010001010110000100101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
