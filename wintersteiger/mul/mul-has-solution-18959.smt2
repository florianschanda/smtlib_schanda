(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6698876143912297909110975524527020752429962158203125p111 {- 3016905610552453 111 (-4.33528e+033)}
; Y = 1.1479531520240129349730295871268026530742645263671875p-298 {+ 666321760323635 -298 (2.25416e-090)}
; -1.6698876143912297909110975524527020752429962158203125p111 * 1.1479531520240129349730295871268026530742645263671875p-298 == -1.9169527504662717820593798023764975368976593017578125p-187
; [HW: -1.9169527504662717820593798023764975368976593017578125p-187] 

; mpf : - 4129588065316253 -187
; mpfd: - 4129588065316253 -187 (-9.77242e-057) class: Neg. norm. non-zero
; hwf : - 4129588065316253 -187 (-9.77242e-057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101110 #b1010101101111101110000010011001111001110010010000101)))
(assert (= y (fp #b0 #b01011010101 #b0010010111100000010000011111110101001000100000110011)))
(assert (= r (fp #b1 #b01101000100 #b1110101010111101011010100101101100111010110110011101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
