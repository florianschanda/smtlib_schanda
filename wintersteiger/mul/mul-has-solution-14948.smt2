(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6712030251520195722747530453489162027835845947265625p-781 {+ 3022829693964585 -781 (1.31402e-235)}
; Y = 1.7115184911156842151314094735425896942615509033203125p499 {+ 3204394411455813 499 (2.80123e+150)}
; 1.6712030251520195722747530453489162027835845947265625p-781 * 1.7115184911156842151314094735425896942615509033203125p499 == 1.430147439978075585287342619267292320728302001953125p-281
; [HW: 1.430147439978075585287342619267292320728302001953125p-281] 

; mpf : + 1937211850399634 -281
; mpfd: + 1937211850399634 -281 (3.68088e-085) class: Pos. norm. non-zero
; hwf : + 1937211850399634 -281 (3.68088e-085) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110010 #b1010101111010011111101100010001000000001000100101001)))
(assert (= y (fp #b0 #b10111110010 #b1011011000100110000100110110100111010111010101000101)))
(assert (= r (fp #b0 #b01011100110 #b0110111000011110001001001000001100101001111110010010)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
