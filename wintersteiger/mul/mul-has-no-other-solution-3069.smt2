(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6228079935918102716385646999697200953960418701171875p-626 {+ 2804877847863443 -626 (5.8276e-189)}
; Y = -1.18484430938720830539523376501165330410003662109375p130 {- 832464762877788 130 (-1.61273e+039)}
; 1.6228079935918102716385646999697200953960418701171875p-626 * -1.18484430938720830539523376501165330410003662109375p130 == -1.92277481643532954791453448706306517124176025390625p-496
; [HW: -1.92277481643532954791453448706306517124176025390625p-496] 

; mpf : - 4155808319445028 -496
; mpfd: - 4155808319445028 -496 (-9.39833e-150) class: Neg. norm. non-zero
; hwf : - 4155808319445028 -496 (-9.39833e-150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001101 #b1001111101110000010110000011110000101010000010010011)))
(assert (= y (fp #b1 #b10010000001 #b0010111101010001111101001110011110101011011101011100)))
(assert (= r (fp #b1 #b01000001111 #b1110110000111010111110000110101000101001100000100100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
