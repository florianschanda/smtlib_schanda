(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.772322650497597518182146814069710671901702880859375p119 {+ 3478232000990774 119 (1.17791e+036)}
; Y = -1.138754056472922382425849718856625258922576904296875p687 {- 624892717027598 687 (-7.31201e+206)}
; 1.772322650497597518182146814069710671901702880859375p119 * -1.138754056472922382425849718856625258922576904296875p687 == -1.009119803816490357206703265546821057796478271484375p807
; [HW: -1.009119803816490357206703265546821057796478271484375p807] 

; mpf : - 41071945069638 807
; mpfd: - 41071945069638 807 (-8.6129e+242) class: Neg. norm. non-zero
; hwf : - 41071945069638 807 (-8.6129e+242) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001110110 #b1100010110110110111011111110110111011000111000110110)))
(assert (= y (fp #b1 #b11010101110 #b0010001110000101011000101100011010111101000100001110)))
(assert (= r (fp #b1 #b11100100110 #b0000001001010101101011001110101100100011010001000110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
