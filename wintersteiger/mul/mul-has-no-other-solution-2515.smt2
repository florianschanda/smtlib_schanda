(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8373901170509256974838763198931701481342315673828125p970 {- 3771269819114285 970 (-1.83357e+292)}
; Y = -1.220763719813553027648822535411454737186431884765625p22 {- 994231406289242 22 (-5.12025e+006)}
; -1.8373901170509256974838763198931701481342315673828125p970 * -1.220763719813553027648822535411454737186431884765625p22 == 1.1215095970198738495327006603474728763103485107421875p993
; [HW: 1.1215095970198738495327006603474728763103485107421875p993] 

; mpf : + 547230575860643 993
; mpfd: + 547230575860643 993 (9.38834e+298) class: Pos. norm. non-zero
; hwf : + 547230575860643 993 (9.38834e+298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001001 #b1101011001011111001100101101111010111010001100101101)))
(assert (= y (fp #b1 #b10000010101 #b0011100010000011111110001001110010111110000101011010)))
(assert (= r (fp #b0 #b11111100000 #b0001111100011011010000001100000101011001101110100011)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
