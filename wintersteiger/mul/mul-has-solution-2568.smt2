(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6038579539752799707486019542557187378406524658203125p488 {- 2719534456507781 488 (-1.28175e+147)}
; Y = 1.425836108781825206648363746353425085544586181640625p-757 {+ 1917795340830730 -757 (1.88089e-228)}
; -1.6038579539752799707486019542557187378406524658203125p488 * 1.425836108781825206648363746353425085544586181640625p-757 == -1.14341929206744641334125844878144562244415283203125p-268
; [HW: -1.14341929206744641334125844878144562244415283203125p-268] 

; mpf : - 645903070312692 -268
; mpfd: - 645903070312692 -268 (-2.41083e-081) class: Neg. norm. non-zero
; hwf : - 645903070312692 -268 (-2.41083e-081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100111 #b1001101010010110011011110101001111000000110110000101)))
(assert (= y (fp #b0 #b00100001010 #b0110110100000011100110000110000010101100100000001010)))
(assert (= r (fp #b1 #b01011110011 #b0010010010110111001000000111000100001011100011110100)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
