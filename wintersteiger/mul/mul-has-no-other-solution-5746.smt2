(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7998265923803467014607804230763576924800872802734375p-262 {+ 3602098743405143 -262 (2.42869e-079)}
; Y = -1.9392022065246654616288424222148023545742034912109375p-813 {- 4229790707330031 -813 (-3.55007e-245)}
; 1.7998265923803467014607804230763576924800872802734375p-262 * -1.9392022065246654616288424222148023545742034912109375p-813 == -0.000000000000000444089209850062616169452667236328125p-1022
; [HW: -0.000000000000000444089209850062616169452667236328125p-1022] 

; mpf : - 2 -1023
; mpfd: - 2 -1023 (-9.88131e-324) class: Neg. denorm.
; hwf : - 2 -1023 (-9.88131e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111001 #b1100110011000001011011111000000010111110101001010111)))
(assert (= y (fp #b1 #b00011010010 #b1111000001101111100011100100100101011010101111101111)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000010)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
