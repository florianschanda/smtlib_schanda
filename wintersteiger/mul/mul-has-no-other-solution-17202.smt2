(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0755310526583847785531133922631852328777313232421875p467 {- 340161620607203 467 (-4.09856e+140)}
; Y = 1.0644152544423810535789698406006209552288055419921875p198 {+ 290100515903683 198 (4.27612e+059)}
; -1.0755310526583847785531133922631852328777313232421875p467 * 1.0644152544423810535789698406006209552288055419921875p198 == -1.1448116590760564204032334600924514234066009521484375p665
; [HW: -1.1448116590760564204032334600924514234066009521484375p665] 

; mpf : - 652173733853831 665
; mpfd: - 652173733853831 665 (-1.75259e+200) class: Neg. norm. non-zero
; hwf : - 652173733853831 665 (-1.75259e+200) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010010 #b0001001101010110000000001100100100000000000011100011)))
(assert (= y (fp #b0 #b10011000101 #b0001000001111101100001001010001100110001100011000011)))
(assert (= r (fp #b1 #b11010011000 #b0010010100010010011000000111101111001111101010000111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
