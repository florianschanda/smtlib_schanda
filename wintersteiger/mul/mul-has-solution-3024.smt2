(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.59850498248079020413570106029510498046875p-352 {+ 2695426816079872 -352 (1.74243e-106)}
; Y = 1.325157814735865802191483453498221933841705322265625p711 {+ 1464380613281050 711 (1.42756e+214)}
; 1.59850498248079020413570106029510498046875p-352 * 1.325157814735865802191483453498221933841705322265625p711 == 1.0591356847143187369653105633915401995182037353515625p360
; [HW: 1.0591356847143187369653105633915401995182037353515625p360] 

; mpf : + 266323447643705 360
; mpfd: + 266323447643705 360 (2.48743e+108) class: Pos. norm. non-zero
; hwf : + 266323447643705 360 (2.48743e+108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011111 #b1001100100110111100111110101111000111111100000000000)))
(assert (= y (fp #b0 #b11011000110 #b0101001100111101100010101110010001010100010100011010)))
(assert (= r (fp #b0 #b10101100111 #b0000111100100011100001000010011111011111111000111001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
