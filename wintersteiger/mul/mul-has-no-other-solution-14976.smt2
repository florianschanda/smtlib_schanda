(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.35412714558555169475084767327643930912017822265625p-323 {+ 1594846880900868 -323 (7.92448e-098)}
; Y = 1.0076548112882643959409278977545909583568572998046875p255 {+ 34474205265419 255 (5.83392e+076)}
; 1.35412714558555169475084767327643930912017822265625p-323 * 1.0076548112882643959409278977545909583568572998046875p255 == 1.3644927333453253925910075849969871342182159423828125p-68
; [HW: 1.3644927333453253925910075849969871342182159423828125p-68] 

; mpf : + 1641529338073261 -68
; mpfd: + 1641529338073261 -68 (4.62308e-021) class: Pos. norm. non-zero
; hwf : + 1641529338073261 -68 (4.62308e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010111100 #b0101101010101000000100111001110011101010011100000100)))
(assert (= y (fp #b0 #b10011111110 #b0000000111110101101010100110110000100011111000001011)))
(assert (= r (fp #b0 #b01110111011 #b0101110101001111011001010101000101011001000010101101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
