(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2916084768222926282277285281452350318431854248046875p700 {- 1313287827554955 700 (-6.79404e+210)}
; Y = -1.610244572525385109429407748393714427947998046875p-559 {- 2748297229430192 -559 (-8.53344e-169)}
; -1.2916084768222926282277285281452350318431854248046875p700 * -1.610244572525385109429407748393714427947998046875p-559 == 1.0399027698154383880790874172816984355449676513671875p142
; [HW: 1.0399027698154383880790874172816984355449676513671875p142] 

; mpf : + 179706099271859 142
; mpfd: + 179706099271859 142 (5.79765e+042) class: Pos. norm. non-zero
; hwf : + 179706099271859 142 (5.79765e+042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111011 #b0100101010100110110110100110011100110000001010001011)))
(assert (= y (fp #b1 #b00111010000 #b1001110000111000111111010000000110001110110110110000)))
(assert (= r (fp #b0 #b10010001101 #b0000101000110111000100010110001101100000100010110011)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
