(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3922434789508983943306930086691863834857940673828125p-985 {+ 1766507585641773 -985 (4.25765e-297)}
; Y = -1.0256890531376352537762386418762616813182830810546875p-782 {- 115693210138155 -782 (-4.03236e-236)}
; 1.3922434789508983943306930086691863834857940673828125p-985 * -1.0256890531376352537762386418762616813182830810546875p-782 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100110 #b0110010001101010000100011001001000101001110100101101)))
(assert (= y (fp #b1 #b00011110001 #b0000011010010011100011101100101100010111011000101011)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
