(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.41647134530099183535867268801666796207427978515625p870 {+ 1875620195508036 870 (1.11507e+262)}
; Y = -1.1101337947179732434932475371169857680797576904296875p-104 {- 495998516852763 -104 (-5.47338e-032)}
; 1.41647134530099183535867268801666796207427978515625p870 * -1.1101337947179732434932475371169857680797576904296875p-104 == -1.572472709668262691451445789425633847713470458984375p766
; [HW: -1.572472709668262691451445789425633847713470458984375p766] 

; mpf : - 2578187881941766 766
; mpfd: - 2578187881941766 766 (-6.10323e+230) class: Neg. norm. non-zero
; hwf : - 2578187881941766 766 (-6.10323e+230) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100101 #b0110101010011101110111011011011111001001111101000100)))
(assert (= y (fp #b1 #b01110010111 #b0001110000110001101110100111011001111111100000011011)))
(assert (= r (fp #b1 #b11011111101 #b1001001010001101100100100100110111100000101100000110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
