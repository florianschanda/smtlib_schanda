(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6147336507183165377199429713073186576366424560546875p-936 {- 2768514240307115 -936 (-2.77987e-282)}
; Y = -1.317625219872719188884957475238479673862457275390625p519 {- 1430456821862250 519 (-2.26131e+156)}
; -1.6147336507183165377199429713073186576366424560546875p-936 * -1.317625219872719188884957475238479673862457275390625p519 == 1.0638068907818001296305965297506190836429595947265625p-416
; [HW: 1.0638068907818001296305965297506190836429595947265625p-416] 

; mpf : + 287360689548585 -416
; mpfd: + 287360689548585 -416 (6.28615e-126) class: Pos. norm. non-zero
; hwf : + 287360689548585 -416 (6.28615e-126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010111 #b1001110101011111001011110011110110010101111110101011)))
(assert (= y (fp #b1 #b11000000110 #b0101000101001111111000101110101110111100111101101010)))
(assert (= r (fp #b0 #b01001011111 #b0001000001010101101001011111110100101010110100101001)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
