(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.065428545005151494962092328933067619800567626953125p269 {+ 294663970904594 269 (1.01063e+081)}
; Y = 1.199394813850287899725799434236250817775726318359375p-305 {+ 897994409355766 -305 (1.83998e-092)}
; 1.065428545005151494962092328933067619800567626953125p269 * 1.199394813850287899725799434236250817775726318359375p-305 == 1.27786947140723672333706417703069746494293212890625p-36
; [HW: 1.27786947140723672333706417703069746494293212890625p-36] 

; mpf : + 1251412847887268 -36
; mpfd: + 1251412847887268 -36 (1.85954e-011) class: Pos. norm. non-zero
; hwf : + 1251412847887268 -36 (1.85954e-011) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001100 #b0001000010111111111011001101010100000101101000010010)))
(assert (= y (fp #b0 #b01011001110 #b0011001100001011100010011101110001111010100111110110)))
(assert (= r (fp #b0 #b01111011011 #b0100011100100010011101000010010001000000001110100100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
