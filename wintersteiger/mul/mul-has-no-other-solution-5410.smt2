(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.53135527641516144825573064736090600490570068359375p487 {+ 2393011424864668 487 (6.11905e+146)}
; Y = 1.657499980744081558015068367240019142627716064453125p530 {+ 2961116668275154 530 (5.82574e+159)}
; 1.53135527641516144825573064736090600490570068359375p487 * 1.657499980744081558015068367240019142627716064453125p530 == 1.2691106705852390756916747704963199794292449951171875p1018
; [HW: 1.2691106705852390756916747704963199794292449951171875p1018] 

; mpf : + 1211966715769107 1018
; mpfd: + 1211966715769107 1018 (3.5648e+306) class: Pos. norm. non-zero
; hwf : + 1211966715769107 1018 (3.5648e+306) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100110 #b1000100000000110111001100011111011000010100110011100)))
(assert (= y (fp #b0 #b11000010001 #b1010100001010001111010110011001001101010100111010010)))
(assert (= r (fp #b0 #b11111111001 #b0100010011100100011011111101100100101011000100010011)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
