(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0325837708799594505393315557739697396755218505859375p452 {- 146744258393311 452 (-1.20083e+136)}
; Y = 1.6959065178900090131719480268657207489013671875p570 {+ 3134084334654144 570 (6.55389e+171)}
; -1.0325837708799594505393315557739697396755218505859375p452 * 1.6959065178900090131719480268657207489013671875p570 == -1.7511655473027669671637340798042714595794677734375p1022
; [HW: -1.7511655473027669671637340798042714595794677734375p1022] 

; mpf : - 3382948878926296 1022
; mpfd: - 3382948878926296 1022 (-7.87015e+307) class: Neg. norm. non-zero
; hwf : - 3382948878926296 1022 (-7.87015e+307) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000011 #b0000100001010111011010001111011001001111010011011111)))
(assert (= y (fp #b0 #b11000111001 #b1011001000100110111011011111011101101001001011000000)))
(assert (= r (fp #b1 #b11111111101 #b1100000001001100011000101010001110001100000111011000)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
