(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2465441831350834167579932909575290977954864501953125p-276 {+ 1110336291297525 -276 (1.02667e-083)}
; Y = 1.9247968699731161645871679866104386746883392333984375p739 {+ 4164914839004327 739 (5.56611e+222)}
; 1.2465441831350834167579932909575290977954864501953125p-276 * 1.9247968699731161645871679866104386746883392333984375p739 == 1.19967217099080158959623076952993869781494140625p464
; [HW: 1.19967217099080158959623076952993869781494140625p464] 

; mpf : + 899243514870432 464
; mpfd: + 899243514870432 464 (5.71453e+139) class: Pos. norm. non-zero
; hwf : + 899243514870432 464 (5.71453e+139) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101011 #b0011111100011101100001010000001110010101100011110101)))
(assert (= y (fp #b0 #b11011100010 #b1110110010111111011111001101011111111010010010100111)))
(assert (= r (fp #b0 #b10111001111 #b0011001100011101101101110010010001010011101010100000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
