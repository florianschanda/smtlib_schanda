(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1553488595830805341080349535332061350345611572265625p750 {+ 699629066130793 750 (6.84242e+225)}
; Y = -1.35667865126344988624396137311123311519622802734375p-315 {- 1606337840921084 -315 (-2.03249e-095)}
; 1.1553488595830805341080349535332061350345611572265625p750 * -1.35667865126344988624396137311123311519622802734375p-315 == -1.56743713255793881700128622469492256641387939453125p435
; [HW: -1.56743713255793881700128622469492256641387939453125p435] 

; mpf : - 2555509658744116 435
; mpfd: - 2555509658744116 435 (-1.39072e+131) class: Neg. norm. non-zero
; hwf : - 2555509658744116 435 (-1.39072e+131) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101101 #b0010011111000100111100010101111101100001010101101001)))
(assert (= y (fp #b1 #b01011000100 #b0101101101001111010010101100011001011011100111111100)))
(assert (= r (fp #b1 #b10110110010 #b1001000101000011100011110101011011011111010100110100)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
