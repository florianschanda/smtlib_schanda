(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.536284248228437121497336192987859249114990234375p652 {+ 2415209540486256 652 (2.87097e+196)}
; Y = -1.7905982678427190268877211565268225967884063720703125p-1001 {- 3560538064456229 -1001 (-8.3555e-302)}
; 1.536284248228437121497336192987859249114990234375p652 * -1.7905982678427190268877211565268225967884063720703125p-1001 == -1.3754339568959466078013065271079540252685546875p-348
; [HW: -1.3754339568959466078013065271079540252685546875p-348] 

; mpf : - 1690804228378816 -348
; mpfd: - 1690804228378816 -348 (-2.39884e-105) class: Neg. norm. non-zero
; hwf : - 1690804228378816 -348 (-2.39884e-105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010001011 #b1000100101001001111011001010101110000000010001110000)))
(assert (= y (fp #b1 #b00000010110 #b1100101001100100101001011110100010101000101000100101)))
(assert (= r (fp #b1 #b01010100011 #b0110000000011100011100001001011010101101000011000000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
