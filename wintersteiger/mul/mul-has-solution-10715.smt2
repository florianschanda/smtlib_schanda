(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3986557147430327407988670529448427259922027587890625p-438 {+ 1795385728365841 -438 (1.97048e-132)}
; Y = -1.9008807055128011942457533223205246031284332275390625p879 {- 4057206009652721 879 (-7.66163e+264)}
; 1.3986557147430327407988670529448427259922027587890625p-438 * -1.9008807055128011942457533223205246031284332275390625p879 == -1.3293388309051235030011639537406153976917266845703125p442
; [HW: -1.3293388309051235030011639537406153976917266845703125p442] 

; mpf : - 1483210236142949 442
; mpfd: - 1483210236142949 442 (-1.50971e+133) class: Neg. norm. non-zero
; hwf : - 1483210236142949 442 (-1.50971e+133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001001001 #b0110011000001110010011010000100100101111010100010001)))
(assert (= y (fp #b1 #b11101101110 #b1110011010100000000111100010111111000110010111110001)))
(assert (= r (fp #b1 #b10110111001 #b0101010001001111100011001011010000001010010101100101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
