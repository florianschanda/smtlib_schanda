(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.096530570243336999425309841171838343143463134765625p473 {+ 434735040177754 473 (2.67429e+142)}
; Y = 1.8213770173383172501502258455730043351650238037109375p-542 {+ 3699153229215535 -542 (1.26515e-163)}
; 1.096530570243336999425309841171838343143463134765625p473 * 1.8213770173383172501502258455730043351650238037109375p-542 == 1.997195579450093294582302405615337193012237548828125p-69
; [HW: 1.997195579450093294582302405615337193012237548828125p-69] 

; mpf : + 4490969640026946 -69
; mpfd: + 4490969640026946 -69 (3.38338e-021) class: Pos. norm. non-zero
; hwf : + 4490969640026946 -69 (3.38338e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011000 #b0001100010110110001110100011101001000010011001011010)))
(assert (= y (fp #b0 #b00111100001 #b1101001001000101110000111010001100100111011100101111)))
(assert (= r (fp #b0 #b01110111010 #b1111111101001000001101011010000101110100001101000010)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
