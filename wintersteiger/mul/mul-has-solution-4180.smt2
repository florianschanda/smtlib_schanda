(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1977254524264677737477313712588511407375335693359375p-733 {+ 890476273869503 -733 (2.65076e-221)}
; Y = 1.8832458724340799260943413173663429915904998779296875p353 {+ 3977785781970651 353 (3.45538e+106)}
; 1.1977254524264677737477313712588511407375335693359375p-733 * 1.8832458724340799260943413173663429915904998779296875p353 == 1.1278057572956929899277156437165103852748870849609375p-379
; [HW: 1.1278057572956929899277156437165103852748870849609375p-379] 

; mpf : + 575585960932687 -379
; mpfd: + 575585960932687 -379 (9.15938e-115) class: Pos. norm. non-zero
; hwf : + 575585960932687 -379 (9.15938e-115) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100100010 #b0011001010011110001000101001111111000010001010111111)))
(assert (= y (fp #b0 #b10101100000 #b1110001000011100011001101100100001101110011011011011)))
(assert (= r (fp #b0 #b01010000100 #b0010000010110111111000001100101111010011010101001111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
