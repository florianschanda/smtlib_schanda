(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.638237978648764414657534871366806328296661376953125p168 {- 2874368322816274 168 (-6.12938e+050)}
; Y = -1.58753049602940610185441983048804104328155517578125p38 {- 2646002122986836 38 (-4.36377e+011)}
; -1.638237978648764414657534871366806328296661376953125p168 * -1.58753049602940610185441983048804104328155517578125p38 == 1.3003763754292421150893233061651699244976043701171875p207
; [HW: 1.3003763754292421150893233061651699244976043701171875p207] 

; mpf : + 1352774932454035 207
; mpfd: + 1352774932454035 207 (2.67472e+062) class: Pos. norm. non-zero
; hwf : + 1352774932454035 207 (2.67472e+062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100111 #b1010001101100011100100000110110101011100100100010010)))
(assert (= y (fp #b1 #b10000100101 #b1001011001101000011001100000100111011001010101010100)))
(assert (= r (fp #b0 #b10011001110 #b0100110011100101011101110101010011110101101010010011)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
