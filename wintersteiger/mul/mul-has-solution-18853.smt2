(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.888865670986841660550226151826791465282440185546875p792 {+ 4003095104638766 792 (4.91992e+238)}
; Y = 1.674491014940882482875394998700357973575592041015625p-74 {+ 3037637483552506 -74 (8.86468e-023)}
; 1.888865670986841660550226151826791465282440185546875p792 * 1.674491014940882482875394998700357973575592041015625p-74 == 1.5814442972488738092806670465506613254547119140625p719
; [HW: 1.5814442972488738092806670465506613254547119140625p719] 

; mpf : + 2618592320426728 719
; mpfd: + 2618592320426728 719 (4.36135e+216) class: Pos. norm. non-zero
; hwf : + 2618592320426728 719 (4.36135e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010111 #b1110001110001100101100110101101101101100111100101110)))
(assert (= y (fp #b0 #b01110110101 #b1010110010101011011100010111001010011101111011111010)))
(assert (= r (fp #b0 #b11011001110 #b1001010011011001100010001001000100100001001011101000)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
