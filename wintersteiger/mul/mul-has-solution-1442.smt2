(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9315572296207765834452629860606975853443145751953125p-175 {- 4195360792194421 -175 (-4.03328e-053)}
; Y = 1.938777219824014963478475692681968212127685546875p734 {+ 4227876737383344 734 (1.75204e+221)}
; -1.9315572296207765834452629860606975853443145751953125p-175 * 1.938777219824014963478475692681968212127685546875p734 == -1.8724295777875727964101315592415630817413330078125p560
; [HW: -1.8724295777875727964101315592415630817413330078125p560] 

; mpf : - 3929073521431112 560
; mpfd: - 3929073521431112 560 (-7.06648e+168) class: Neg. norm. non-zero
; hwf : - 3929073521431112 560 (-7.06648e+168) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101010000 #b1110111001111010100010001101101110010010110101110101)))
(assert (= y (fp #b0 #b11011011101 #b1111000001010011101101000011000101011111101110110000)))
(assert (= r (fp #b1 #b11000101111 #b1101111101010111100010110111100010101001001001001000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
