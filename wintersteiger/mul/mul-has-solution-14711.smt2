(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0397904984265362582362968169036321341991424560546875p386 {- 179200473886635 386 (-1.63879e+116)}
; Y = 1.0805391022166130898796154724550433456897735595703125p763 {+ 362715870731493 763 (5.24236e+229)}
; -1.0397904984265362582362968169036321341991424560546875p386 * 1.0805391022166130898796154724550433456897735595703125p763 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000001 #b0000101000101111101101011100100101101110111110101011)))
(assert (= y (fp #b0 #b11011111010 #b0001010010011110001101011110101000010001110011100101)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
