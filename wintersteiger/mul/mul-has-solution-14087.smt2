(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2709436865390684179288882660330273211002349853515625p105 {- 1220221885735737 105 (-5.15556e+031)}
; Y = 1.962376238724491184228782003629021346569061279296875p86 {+ 4334157270109838 86 (1.51832e+026)}
; -1.2709436865390684179288882660330273211002349853515625p105 * 1.962376238724491184228782003629021346569061279296875p86 == -1.24703484561058797197574676829390227794647216796875p192
; [HW: -1.24703484561058797197574676829390227794647216796875p192] 

; mpf : - 1112546038639372 192
; mpfd: - 1112546038639372 192 (-7.82776e+057) class: Neg. norm. non-zero
; hwf : - 1112546038639372 192 (-7.82776e+057) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101000 #b0100010101011100100100001100000010111110001100111001)))
(assert (= y (fp #b0 #b10001010101 #b1111011001011110010010100000011111000100111010001110)))
(assert (= r (fp #b1 #b10010111111 #b0011111100111101101011001111011011011110101100001100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
