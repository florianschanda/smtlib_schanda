(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8554970909114720800658915322856046259403228759765625p-246 {- 3852816379845449 -246 (-1.6409e-074)}
; Y = -1.13838482015574538053215292165987193584442138671875p-590 {- 623229824487148 -590 (-2.80926e-178)}
; -1.8554970909114720800658915322856046259403228759765625p-246 * -1.13838482015574538053215292165987193584442138671875p-590 == 1.0561348610683822801803444235702045261859893798828125p-835
; [HW: 1.0561348610683822801803444235702045261859893798828125p-835] 

; mpf : + 252808939390061 -835
; mpfd: + 252808939390061 -835 (4.6097e-252) class: Pos. norm. non-zero
; hwf : + 252808939390061 -835 (4.6097e-252) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100001001 #b1101101100000001110110110111101101001001101101001001)))
(assert (= y (fp #b1 #b00110110001 #b0010001101101101001100000000010011010100111011101100)))
(assert (= r (fp #b0 #b00010111100 #b0000111001011110110110101011000001110100010001101101)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
