(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3756431520006693336455327880685217678546905517578125p865 {+ 1691746359374493 865 (3.38417e+260)}
; Y = -1.001962330949593305007283561280928552150726318359375p-299 {- 8837552933366 -299 (-9.83745e-091)}
; 1.3756431520006693336455327880685217678546905517578125p865 * -1.001962330949593305007283561280928552150726318359375p-299 == -1.3783426191334362531648594085709191858768463134765625p566
; [HW: -1.3783426191334362531648594085709191858768463134765625p566] 

; mpf : - 1703903678547721 566
; mpfd: - 1703903678547721 566 (-3.32916e+170) class: Neg. norm. non-zero
; hwf : - 1703903678547721 566 (-3.32916e+170) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100000 #b0110000000101010001001100100110011001111001010011101)))
(assert (= y (fp #b1 #b01011010100 #b0000000010000000100110100111001101000000100111110110)))
(assert (= r (fp #b1 #b11000110101 #b0110000011011011000011111101011111011100011100001001)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
