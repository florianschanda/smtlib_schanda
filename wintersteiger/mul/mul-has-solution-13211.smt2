(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8434177097309287773896357975900173187255859375p259 {+ 3798415683261888 259 (1.70763e+078)}
; Y = -1.72498061544351966034582801512442529201507568359375p-192 {- 3265022429562268 -192 (-2.74805e-058)}
; 1.8434177097309287773896357975900173187255859375p259 * -1.72498061544351966034582801512442529201507568359375p-192 == -1.589929907725570412679871878935955464839935302734375p68
; [HW: -1.589929907725570412679871878935955464839935302734375p68] 

; mpf : - 2656808112607590 68
; mpfd: - 2656808112607590 68 (-4.69264e+020) class: Neg. norm. non-zero
; hwf : - 2656808112607590 68 (-4.69264e+020) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100000010 #b1101011111101010001110010001100000101001010111000000)))
(assert (= y (fp #b1 #b01100111111 #b1011100110011000010101000110000110010000010110011100)))
(assert (= r (fp #b1 #b10001000011 #b1001011100000101101001010111110010011101000101100110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
