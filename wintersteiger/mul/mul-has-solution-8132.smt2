(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9669512408697775729393697474733926355838775634765625p574 {+ 4354761248066569 574 (1.21622e+173)}
; Y = 1.4023202236994334324293731697252951562404632568359375p696 {+ 1811889209536383 696 (4.61025e+209)}
; 1.9669512408697775729393697474733926355838775634765625p574 * 1.4023202236994334324293731697252951562404632568359375p696 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111101 #b1111011110001010000111011101010001011100110000001001)))
(assert (= y (fp #b0 #b11010110111 #b0110011011111110011101010100101101001110111101111111)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
