(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.175895878576640907198225249885581433773040771484375p625 {+ 792164613213766 625 (1.63725e+188)}
; Y = 1.871868188880390082573512700037099421024322509765625p803 {+ 3926545250557914 803 (9.98532e+241)}
; 1.175895878576640907198225249885581433773040771484375p625 * 1.871868188880390082573512700037099421024322509765625p803 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001110000 #b0010110100000111100000110010010111111100111001000110)))
(assert (= y (fp #b0 #b11100100010 #b1101111100110010110000001110110110101001111111011010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
