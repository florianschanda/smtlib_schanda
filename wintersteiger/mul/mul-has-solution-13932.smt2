(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.936787102489423428863801746047101914882659912109375p481 {+ 4218914045696854 481 (1.20923e+145)}
; Y = -1.658052849091094405054036542424000799655914306640625p-710 {- 2963606565956746 -710 (-3.07823e-214)}
; 1.936787102489423428863801746047101914882659912109375p481 * -1.658052849091094405054036542424000799655914306640625p-710 == -1.6056476866827369409662651378312148153781890869140625p-228
; [HW: -1.6056476866827369409662651378312148153781890869140625p-228] 

; mpf : - 2727594696062177 -228
; mpfd: - 2727594696062177 -228 (-3.7223e-069) class: Neg. norm. non-zero
; hwf : - 2727594696062177 -228 (-3.7223e-069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100000 #b1110111111010001010001111001000010000001101101010110)))
(assert (= y (fp #b1 #b00100111001 #b1010100001110110001001101100100111100010110010001010)))
(assert (= r (fp #b1 #b01100011011 #b1001101100001011101110100000111100110011010011100001)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
