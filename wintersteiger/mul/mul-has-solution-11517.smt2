(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.488571952360698613659906186512671411037445068359375p474 {+ 2200332462595318 474 (7.26086e+142)}
; Y = 1.19634057310335162327419311623089015483856201171875p240 {+ 884239331865964 240 (2.11375e+072)}
; 1.488571952360698613659906186512671411037445068359375p474 * 1.19634057310335162327419311623089015483856201171875p240 == 1.78083902259277326862729751155711710453033447265625p714
; [HW: 1.78083902259277326862729751155711710453033447265625p714] 

; mpf : + 3516586331185156 714
; mpfd: + 3516586331185156 714 (1.53476e+215) class: Pos. norm. non-zero
; hwf : + 3516586331185156 714 (1.53476e+215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011001 #b0111110100010011000011010010110100100001110011110110)))
(assert (= y (fp #b0 #b10011101111 #b0011001001000011011000000011010001011011010101101100)))
(assert (= r (fp #b0 #b11011001001 #b1100011111100101000100001111000101111010000000000100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
