(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.322639096461001084747977074584923684597015380859375p-165 {+ 1453037314596918 -165 (2.82808e-050)}
; Y = -1.3167779521798543829191885379259474575519561767578125p214 {- 1426641067396381 214 (-3.46682e+064)}
; 1.322639096461001084747977074584923684597015380859375p-165 * -1.3167779521798543829191885379259474575519561767578125p214 == -1.7416220009109297794935855563380755484104156494140625p49
; [HW: -1.7416220009109297794935855563380755484104156494140625p49] 

; mpf : - 3339968566952225 49
; mpfd: - 3339968566952225 49 (-9.80446e+014) class: Neg. norm. non-zero
; hwf : - 3339968566952225 49 (-9.80446e+014) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101011010 #b0101001010011000011110011100111110110110000000110110)))
(assert (= y (fp #b1 #b10011010101 #b0101000100011000010111000010000010110100110100011101)))
(assert (= r (fp #b1 #b10000110000 #b1011110111011010111100000111111111101000000100100001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
