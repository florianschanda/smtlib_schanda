(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3985075982175836362131349233095534145832061767578125p569 {+ 1794718670837021 569 (2.70229e+171)}
; Y = 1.91645977028792291463332730927504599094390869140625p269 {+ 4127367879968740 269 (1.81789e+081)}
; 1.3985075982175836362131349233095534145832061767578125p569 * 1.91645977028792291463332730927504599094390869140625p269 == 1.3400917752129923865567207030835561454296112060546875p839
; [HW: 1.3400917752129923865567207030835561454296112060546875p839] 

; mpf : + 1531637192121003 839
; mpfd: + 1531637192121003 839 (4.91248e+252) class: Pos. norm. non-zero
; hwf : + 1531637192121003 839 (4.91248e+252) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111000 #b0110011000000100100110000000110110001101010100011101)))
(assert (= y (fp #b0 #b10100001100 #b1110101010011101000110111000010101111100011111100100)))
(assert (= r (fp #b0 #b11101000110 #b0101011100010000010000010010110000101101101010101011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
