(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5676810005158390293189540898310951888561248779296875p997 {+ 2556607942388443 997 (2.09973e+300)}
; Y = -1.0239471624752651823797577890218235552310943603515625p-898 {- 107848432000185 -898 (-4.84553e-271)}
; 1.5676810005158390293189540898310951888561248779296875p997 * -1.0239471624752651823797577890218235552310943603515625p-898 == -1.6052225121445780064988184676622040569782257080078125p99
; [HW: -1.6052225121445780064988184676622040569782257080078125p99] 

; mpf : - 2725679880170557 99
; mpfd: - 2725679880170557 99 (-1.01743e+030) class: Neg. norm. non-zero
; hwf : - 2725679880170557 99 (-1.01743e+030) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100100 #b1001000101010011100010101100001111000110101011011011)))
(assert (= y (fp #b1 #b00001111101 #b0000011000100001011001101011011110101001110010111001)))
(assert (= r (fp #b1 #b10001100010 #b1001101011101111110111001101000001110110110000111101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
