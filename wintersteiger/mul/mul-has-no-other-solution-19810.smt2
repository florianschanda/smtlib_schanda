(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9395596734441007402693912808899767696857452392578125p483 {+ 4231400595215197 483 (4.84385e+145)}
; Y = -1.329597002710550146531431892071850597858428955078125p-80 {- 1484372938589666 -80 (-1.09982e-024)}
; 1.9395596734441007402693912808899767696857452392578125p483 * -1.329597002710550146531431892071850597858428955078125p-80 == -1.289416364194764685890959299285896122455596923828125p404
; [HW: -1.289416364194764685890959299285896122455596923828125p404] 

; mpf : - 1303415429942466 404
; mpfd: - 1303415429942466 404 (-5.32735e+121) class: Neg. norm. non-zero
; hwf : - 1303415429942466 404 (-5.32735e+121) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100010 #b1111000010000110111110111001011000010101001101011101)))
(assert (= y (fp #b1 #b01110101111 #b0101010001100000011110000001101110000000010111100010)))
(assert (= r (fp #b1 #b10110010011 #b0100101000010111001100001101101100100100110011000010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
