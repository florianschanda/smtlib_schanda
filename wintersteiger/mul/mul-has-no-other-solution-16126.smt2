(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.894158455692817266680094689945690333843231201171875p-484 {+ 4026931687868350 -484 (3.79226e-146)}
; Y = 1.080157600148556884533945776638574898242950439453125p-51 {+ 360997738159954 -51 (4.79686e-016)}
; 1.894158455692817266680094689945690333843231201171875p-484 * 1.080157600148556884533945776638574898242950439453125p-51 == 1.02299482590112500446366539108566939830780029296875p-534
; [HW: 1.02299482590112500446366539108566939830780029296875p-534] 

; mpf : + 103559489359756 -534
; mpfd: + 103559489359756 -534 (1.8191e-161) class: Pos. norm. non-zero
; hwf : + 103559489359756 -534 (1.8191e-161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011011 #b1110010011100111100100011000110010100100011110111110)))
(assert (= y (fp #b0 #b01111001100 #b0001010010000101001101010101111100101001111101010010)))
(assert (= r (fp #b0 #b00111101001 #b0000010111100010111111010010100100111000111110001100)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
