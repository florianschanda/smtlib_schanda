(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.547658946501957899499757331795990467071533203125p-430 {+ 2466436627392336 -430 (5.58184e-130)}
; Y = -1.24415908084234416719482396729290485382080078125p214 {- 1099594745500704 214 (-3.27563e+064)}
; 1.547658946501957899499757331795990467071533203125p-430 * -1.24415908084234416719482396729290485382080078125p214 == -1.9255339323373068527445184372481890022754669189453125p-216
; [HW: -1.9255339323373068527445184372481890022754669189453125p-216] 

; mpf : - 4168234272793045 -216
; mpfd: - 4168234272793045 -216 (-1.8284e-065) class: Neg. norm. non-zero
; hwf : - 4168234272793045 -216 (-1.8284e-065) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010001 #b1000110000110011011000000111000010010110011101010000)))
(assert (= y (fp #b1 #b10011010101 #b0011111010000001001101011010001100111101010000100000)))
(assert (= r (fp #b1 #b01100100111 #b1110110011101111110010101011001010111010000111010101)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
