(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.14177037385187762907889919006265699863433837890625p916 {- 638477002851492 916 (-6.32492e+275)}
; Y = -1.062231659044271747660559412906877696514129638671875p103 {- 280266476482430 103 (-1.07723e+031)}
; -1.14177037385187762907889919006265699863433837890625p916 * -1.062231659044271747660559412906877696514129638671875p103 == 1.2128246384642784594376507811830379068851470947265625p1019
; [HW: 1.2128246384642784594376507811830379068851470947265625p1019] 

; mpf : + 958476962482985 1019
; mpfd: + 958476962482985 1019 (6.8134e+306) class: Pos. norm. non-zero
; hwf : + 958476962482985 1019 (6.8134e+306) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110010011 #b0010010001001011000100000010111100111100010010100100)))
(assert (= y (fp #b1 #b10001100110 #b0000111111101110011010011111110001011110111101111110)))
(assert (= r (fp #b0 #b11111111010 #b0011011001111011101011001110110111111100101100101001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
