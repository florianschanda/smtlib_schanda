(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.117169041179125965612684012739919126033782958984375p-777 {- 527682450193670 -777 (-1.40544e-234)}
; Y = 1.9894287404186725698451709831715561449527740478515625p-383 {+ 4455990906659193 -383 (1.00981e-115)}
; -1.117169041179125965612684012739919126033782958984375p-777 * 1.9894287404186725698451709831715561449527740478515625p-383 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110110 #b0001110111111110110010100100111111110111110100000110)))
(assert (= y (fp #b0 #b01010000000 #b1111110101001011001100111011000111010010000101111001)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
