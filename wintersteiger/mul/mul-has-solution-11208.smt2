(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1196128134097282913472781729069538414478302001953125p-603 {- 538688221900789 -603 (-3.37272e-182)}
; Y = -1.8574822048604466839805127165163867175579071044921875p-67 {- 3861756538286339 -67 (-1.25868e-020)}
; -1.1196128134097282913472781729069538414478302001953125p-603 * -1.8574822048604466839805127165163867175579071044921875p-67 == 1.0398304386211549843466173115302808582782745361328125p-669
; [HW: 1.0398304386211549843466173115302808582782745361328125p-669] 

; mpf : + 179380348532237 -669
; mpfd: + 179380348532237 -669 (4.24517e-202) class: Pos. norm. non-zero
; hwf : + 179380348532237 -669 (4.24517e-202) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110100100 #b0001111010011110111100100000000111000110111111110101)))
(assert (= y (fp #b1 #b01110111100 #b1101101110000011111101000010101011000111000100000011)))
(assert (= r (fp #b0 #b00101100010 #b0000101000110010010100111101111101000011011000001101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
