(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.708190007705166379992078873328864574432373046875p555 {- 3189404254808496 555 (-2.01458e+167)}
; Y = 1.729488351636941256828094992670230567455291748046875p496 {+ 3285323468603246 496 (3.53831e+149)}
; -1.708190007705166379992078873328864574432373046875p555 * 1.729488351636941256828094992670230567455291748046875p496 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101010 #b1011010101001011111100001011101001110010100110110000)))
(assert (= y (fp #b0 #b10111101111 #b1011101010111111101111111010010100010111111101101110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
