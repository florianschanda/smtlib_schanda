(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.13174722144847716975846196874044835567474365234375p-312 {- 593336737422460 -312 (-1.35641e-094)}
; Y = -1.36144003658976320281226435326971113681793212890625p465 {- 1627781214102436 465 (-1.29702e+140)}
; -1.13174722144847716975846196874044835567474365234375p-312 * -1.36144003658976320281226435326971113681793212890625p465 == 1.5408059785791774487506700097583234310150146484375p153
; [HW: 1.5408059785791774487506700097583234310150146484375p153] 

; mpf : + 2435573603608920 153
; mpfd: + 2435573603608920 153 (1.75929e+046) class: Pos. norm. non-zero
; hwf : + 2435573603608920 153 (1.75929e+046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000111 #b0010000110111010001011111001011101110101110001111100)))
(assert (= y (fp #b1 #b10111010000 #b0101110010000111010101011001000010011110001110100100)))
(assert (= r (fp #b0 #b10010011000 #b1000101001110010010000101011011101111010100101011000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
