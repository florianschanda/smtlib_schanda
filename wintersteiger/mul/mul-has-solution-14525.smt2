(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.638252652955414223612251589656807482242584228515625p-607 {- 2874434410018234 -607 (-3.08442e-183)}
; Y = -1.015221087314490677755429715034551918506622314453125p733 {- 68549683157714 733 (-4.5872e+220)}
; -1.638252652955414223612251589656807482242584228515625p-607 * -1.015221087314490677755429715034551918506622314453125p733 == 1.66318863962924456956216090475209057331085205078125p126
; [HW: 1.66318863962924456956216090475209057331085205078125p126] 

; mpf : + 2986736110310612 126
; mpfd: + 2986736110310612 126 (1.41488e+038) class: Pos. norm. non-zero
; hwf : + 2986736110310612 126 (1.41488e+038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110100000 #b1010001101100100100001101001111100000111010110111010)))
(assert (= y (fp #b1 #b11011011100 #b0000001111100101100001110111100000111001101011010010)))
(assert (= r (fp #b0 #b10001111101 #b1010100111000110101110110000111001001001010011010100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
