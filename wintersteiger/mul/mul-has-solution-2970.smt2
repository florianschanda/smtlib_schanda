(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.278550680601075573150637865182943642139434814453125p-27 {- 1254480741358802 -27 (-9.52594e-009)}
; Y = -1.6471546009381625719214525815914385020732879638671875p-524 {- 2914525219636211 -524 (-2.99928e-158)}
; -1.278550680601075573150637865182943642139434814453125p-27 * -1.6471546009381625719214525815914385020732879638671875p-524 == 1.0529853180423403014032146529643796384334564208984375p-550
; [HW: 1.0529853180423403014032146529643796384334564208984375p-550] 

; mpf : + 238624658591591 -550
; mpfd: + 238624658591591 -550 (2.8571e-166) class: Pos. norm. non-zero
; hwf : + 238624658591591 -550 (2.8571e-166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100100 #b0100011101001111000110001110111101110101110011010010)))
(assert (= y (fp #b1 #b00111110011 #b1010010110101011111011001000011001111100001111110011)))
(assert (= r (fp #b0 #b00111011001 #b0000110110010000011100100010000000101000111101100111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
