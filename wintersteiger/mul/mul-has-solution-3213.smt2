(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2687161640750794777687815440003760159015655517578125p-270 {+ 1210190016396957 -270 (6.68753e-082)}
; Y = 1.66423744675889917488120772759430110454559326171875p71 {+ 2991459517708908 71 (3.92957e+021)}
; 1.2687161640750794777687815440003760159015655517578125p-270 * 1.66423744675889917488120772759430110454559326171875p71 == 1.055722474781027653278897560085169970989227294921875p-198
; [HW: 1.055722474781027653278897560085169970989227294921875p-198] 

; mpf : + 250951716659998 -198
; mpfd: + 250951716659998 -198 (2.62791e-060) class: Pos. norm. non-zero
; hwf : + 250951716659998 -198 (2.62791e-060) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110001 #b0100010011001010100101010010000010011011111010011101)))
(assert (= y (fp #b0 #b10001000110 #b1010101000001011011101110001111010011011101001101100)))
(assert (= r (fp #b0 #b01100111001 #b0000111001000011110100111111111011010110001100011110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
