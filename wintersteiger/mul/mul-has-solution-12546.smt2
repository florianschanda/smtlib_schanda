(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9157737091553508346208900547935627400875091552734375p713 {+ 4124278135307735 713 (8.25527e+214)}
; Y = 1.9204446738246236936475952461478300392627716064453125p-762 {+ 4145314290051733 -762 (7.91672e-230)}
; 1.9157737091553508346208900547935627400875091552734375p713 * 1.9204446738246236936475952461478300392627716064453125p-762 == 1.8395687080003184643572922141174785792827606201171875p-48
; [HW: 1.8395687080003184643572922141174785792827606201171875p-48] 

; mpf : + 3781081320502163 -48
; mpfd: + 3781081320502163 -48 (6.53546e-015) class: Pos. norm. non-zero
; hwf : + 3781081320502163 -48 (6.53546e-015) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001000 #b1110101001110000001001010101001101011011110111010111)))
(assert (= y (fp #b0 #b00100000101 #b1110101110100010010000110001101111011010101010010101)))
(assert (= r (fp #b0 #b01111001111 #b1101011011101101111110011000111110011011001110010011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
