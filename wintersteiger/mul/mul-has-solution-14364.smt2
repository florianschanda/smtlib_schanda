(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4111536220921105933001626908662728965282440185546875p681 {+ 1851671299246059 681 (1.4158e+205)}
; Y = 1.2789678606530170412725055939517915248870849609375p-607 {+ 1256359553285272 -607 (2.40798e-183)}
; 1.4111536220921105933001626908662728965282440185546875p681 * 1.2789678606530170412725055939517915248870849609375p-607 == 1.80482012909990263693771339603699743747711181640625p74
; [HW: 1.80482012909990263693771339603699743747711181640625p74] 

; mpf : + 3624587633514596 74
; mpfd: + 3624587633514596 74 (3.40921e+022) class: Pos. norm. non-zero
; hwf : + 3624587633514596 74 (3.40921e+022) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101000 #b0110100101000001010111010010000010000100011111101011)))
(assert (= y (fp #b0 #b00110100000 #b0100011101101010011100000000111000100011110010011000)))
(assert (= r (fp #b0 #b10001001001 #b1100111000001000101100010010010110100101100001100100)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
