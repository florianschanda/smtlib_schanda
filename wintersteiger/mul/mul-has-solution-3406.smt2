(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.08344135803794561212498592794872820377349853515625p-667 {- 375786468966980 -667 (-1.76929e-201)}
; Y = 1.9223802681357626820357609176426194608211517333984375p221 {+ 4154031431870119 221 (6.47841e+066)}
; -1.08344135803794561212498592794872820377349853515625p-667 * 1.9223802681357626820357609176426194608211517333984375p221 == -1.041393144187180208604104336700402200222015380859375p-445
; [HW: -1.041393144187180208604104336700402200222015380859375p-445] 

; mpf : - 186418148737078 -445
; mpfd: - 186418148737078 -445 (-1.14622e-134) class: Neg. norm. non-zero
; hwf : - 186418148737078 -445 (-1.14622e-134) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100100 #b0001010101011100011010011010111111101000001001000100)))
(assert (= y (fp #b0 #b10011011100 #b1110110000100001000111001111111000011110011010100111)))
(assert (= r (fp #b1 #b01001000010 #b0000101010011000101111011011100010010000000000110110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
