(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.941944662685337608110103246872313320636749267578125p198 {+ 4242141631873314 198 (7.80146e+059)}
; Y = -1.798311312715760390545938207651488482952117919921875p643 {- 3595274530472350 643 (-6.56375e+193)}
; 1.941944662685337608110103246872313320636749267578125p198 * -1.798311312715760390545938207651488482952117919921875p643 == -1.746110527787517074926881832652725279331207275390625p842
; [HW: -1.746110527787517074926881832652725279331207275390625p842] 

; mpf : - 3360183094921066 842
; mpfd: - 3360183094921066 842 (-5.12069e+253) class: Neg. norm. non-zero
; hwf : - 3360183094921066 842 (-5.12069e+253) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000101 #b1111000100100011010010010001000011100000000100100010)))
(assert (= y (fp #b1 #b11010000010 #b1100110001011110001000010101010000100100000110011110)))
(assert (= r (fp #b1 #b11101001001 #b1011111100000001000110010111110000001100011101101010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
