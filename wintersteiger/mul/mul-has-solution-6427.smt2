(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9778741723347048608872000841074623167514801025390625p-89 {+ 4403953758141809 -89 (3.19543e-027)}
; Y = -1.6947718921423966520478643360547721385955810546875p-464 {- 3128974434559992 -464 (-3.5579e-140)}
; 1.9778741723347048608872000841074623167514801025390625p-89 * -1.6947718921423966520478643360547721385955810546875p-464 == -1.6760227767336324244951129003311507403850555419921875p-552
; [HW: -1.6760227767336324244951129003311507403850555419921875p-552] 

; mpf : - 3044535925391555 -552
; mpfd: - 3044535925391555 -552 (-1.1369e-166) class: Neg. norm. non-zero
; hwf : - 3044535925391555 -552 (-1.1369e-166) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110100110 #b1111101001010101111101100011010111000111110101110001)))
(assert (= y (fp #b1 #b01000101111 #b1011000111011100100100100001101011101110011111111000)))
(assert (= r (fp #b1 #b00111010111 #b1010110100001111110101000010010101101100000011000011)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
