(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0405794616162733490227765287272632122039794921875p483 {- 182753648213944 483 (-2.59874e+145)}
; Y = 1.1554330630145812630615864691208116710186004638671875p-21 {+ 700008284673523 -21 (5.50953e-007)}
; -1.0405794616162733490227765287272632122039794921875p483 * 1.1554330630145812630615864691208116710186004638671875p-21 == -1.2023199146453544816637304393225349485874176025390625p462
; [HW: -1.2023199146453544816637304393225349485874176025390625p462] 

; mpf : - 911167892206449 462
; mpfd: - 911167892206449 462 (-1.43179e+139) class: Neg. norm. non-zero
; hwf : - 911167892206449 462 (-1.43179e+139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100010 #b0000101001100011011010100110010010000111111110111000)))
(assert (= y (fp #b0 #b01111101010 #b0010011111001010011101100001001001011101010111110011)))
(assert (= r (fp #b1 #b10111001101 #b0011001111001011001111001110100010111011001101110001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
