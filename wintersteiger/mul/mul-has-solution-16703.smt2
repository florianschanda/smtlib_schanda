(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.18972299727610764108476359979249536991119384765625p-238 {- 854436419836292 -238 (-2.69344e-072)}
; Y = -1.623683447983307104323102976195514202117919921875p-152 {- 2808820543934768 -152 (-2.84408e-046)}
; -1.18972299727610764108476359979249536991119384765625p-238 * -1.623683447983307104323102976195514202117919921875p-152 == 1.931733538362305324653789284639060497283935546875p-390
; [HW: 1.931733538362305324653789284639060497283935546875p-390] 

; mpf : + 4196154816177072 -390
; mpfd: + 4196154816177072 -390 (7.66036e-118) class: Pos. norm. non-zero
; hwf : + 4196154816177072 -390 (7.66036e-118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010001 #b0011000010010001101011111011010010011001100110000100)))
(assert (= y (fp #b1 #b01101100111 #b1001111110101001101101111110110000100101000100110000)))
(assert (= r (fp #b0 #b01001111001 #b1110111010000110000101101101001111011010001110110000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
