(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6687216724076157081668725368217565119266510009765625p-822 {+ 3011654674669513 -822 (5.96661e-248)}
; Y = 1.801551278455675753065179378609172999858856201171875p435 {+ 3609866038971326 435 (1.59843e+131)}
; 1.6687216724076157081668725368217565119266510009765625p-822 * 1.801551278455675753065179378609172999858856201171875p435 == 1.5031438311563165566298039266257546842098236083984375p-386
; [HW: 1.5031438311563165566298039266257546842098236083984375p-386] 

; mpf : + 2265958370509351 -386
; mpfd: + 2265958370509351 -386 (9.53723e-117) class: Pos. norm. non-zero
; hwf : + 2265958370509351 -386 (9.53723e-117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001001 #b1010101100110001010101111111000100011101111111001001)))
(assert (= y (fp #b0 #b10110110010 #b1100110100110010011101101110111100001000101110111110)))
(assert (= r (fp #b0 #b01001111101 #b1000000011001110000010001011110000000000001000100111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
