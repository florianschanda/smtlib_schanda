(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.112372383755292570839401378179900348186492919921875p334 {- 506080225607070 334 (-3.89286e+100)}
; Y = -1.3986329742248220231459754359093494713306427001953125p1006 {- 1795283314176501 1006 (-9.59134e+302)}
; -1.112372383755292570839401378179900348186492919921875p334 * -1.3986329742248220231459754359093494713306427001953125p1006 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101001101 #b0001110011000100011011111100000100110011110110011110)))
(assert (= y (fp #b1 #b11111101101 #b0110011000001100110011111000001101100111000111110101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
