(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5521679984843075317257898859679698944091796875p397 {- 2486743592219840 397 (-5.01011e+119)}
; Y = -1.1260208427900184613434930724906735122203826904296875p330 {- 567547420630043 330 (-2.46289e+099)}
; -1.5521679984843075317257898859679698944091796875p397 * -1.1260208427900184613434930724906735122203826904296875p330 == 1.747773517804996235014414196484722197055816650390625p727
; [HW: 1.747773517804996235014414196484722197055816650390625p727] 

; mpf : + 3367672536144106 727
; mpfd: + 3367672536144106 727 (1.23393e+219) class: Pos. norm. non-zero
; hwf : + 3367672536144106 727 (1.23393e+219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001100 #b1000110101011010111000011100011101100011010011000000)))
(assert (= y (fp #b1 #b10101001001 #b0010000001000010111001101110011001100101110000011011)))
(assert (= r (fp #b0 #b11011010110 #b1011111101101110000101011101001111001001100011101010)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
