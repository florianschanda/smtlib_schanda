(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.661288224539716029681812869966961443424224853515625p1014 {- 2978177401621562 1014 (-2.91649e+305)}
; Y = 1.870978950505439275531216480885632336139678955078125p-759 {+ 3922540476943842 -759 (6.17024e-229)}
; -1.661288224539716029681812869966961443424224853515625p1014 * 1.870978950505439275531216480885632336139678955078125p-759 == -1.55411764941818120178140816278755664825439453125p256
; [HW: -1.55411764941818120178140816278755664825439453125p256] 

; mpf : - 2495524039439136 256
; mpfd: - 2495524039439136 256 (-1.79955e+077) class: Neg. norm. non-zero
; hwf : - 2495524039439136 256 (-1.79955e+077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110101 #b1010100101001010001011110110000110100000110000111010)))
(assert (= y (fp #b0 #b00100001000 #b1101111011111000011110011111101111101100110111100010)))
(assert (= r (fp #b1 #b10011111111 #b1000110111011010101001110111111001100011001100100000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
