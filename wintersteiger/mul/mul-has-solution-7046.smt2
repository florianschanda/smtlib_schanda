(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.490465062910088622771809241385199129581451416015625p700 {- 2208858274560122 700 (-7.84005e+210)}
; Y = 1.3634616789577072015759995338157750666141510009765625p-661 {+ 1636885881917385 -661 (1.425e-199)}
; -1.490465062910088622771809241385199129581451416015625p700 * 1.3634616789577072015759995338157750666141510009765625p-661 == -1.0160959985515969350444720475934445858001708984375p40
; [HW: -1.0160959985515969350444720475934445858001708984375p40] 

; mpf : - 72489933079128 40
; mpfd: - 72489933079128 40 (-1.11721e+012) class: Neg. norm. non-zero
; hwf : - 72489933079128 40 (-1.11721e+012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111011 #b0111110110001111000111100100110100000111100001111010)))
(assert (= y (fp #b0 #b00101101010 #b0101110100001011110100110001100001111000111111001001)))
(assert (= r (fp #b1 #b10000100111 #b0000010000011110110111100000101101100000001001011000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
