(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0712105689469673119873505129362456500530242919921875p180 {+ 320703891774403 180 (1.64163e+054)}
; Y = -1.9544406118739725553012931413832120597362518310546875p762 {- 4298418383982891 762 (-4.7411e+229)}
; 1.0712105689469673119873505129362456500530242919921875p180 * -1.9544406118739725553012931413832120597362518310546875p762 == -1.0468087199092883654572005980298854410648345947265625p943
; [HW: -1.0468087199092883654572005980298854410648345947265625p943] 

; mpf : - 210807733541161 943
; mpfd: - 210807733541161 943 (-7.78311e+283) class: Neg. norm. non-zero
; hwf : - 210807733541161 943 (-7.78311e+283) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110011 #b0001001000111010110110110001100011000001101111000011)))
(assert (= y (fp #b1 #b11011111001 #b1111010001010110001110000100110111111001000100101011)))
(assert (= r (fp #b1 #b11110101110 #b0000101111111011101010000000000100101101100100101001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
