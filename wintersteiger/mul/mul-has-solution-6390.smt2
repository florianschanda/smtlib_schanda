(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6506729763216607675957448009285144507884979248046875p-56 {+ 2930370573702283 -56 (2.29077e-017)}
; Y = 1.6368809533846284676172899708035401999950408935546875p-302 {+ 2868256824342379 -302 (2.0089e-091)}
; 1.6506729763216607675957448009285144507884979248046875p-56 * 1.6368809533846284676172899708035401999950408935546875p-302 == 1.35097757760382108926933142356574535369873046875p-357
; [HW: 1.35097757760382108926933142356574535369873046875p-357] 

; mpf : + 1580662487711968 -357
; mpfd: + 1580662487711968 -357 (4.60193e-108) class: Pos. norm. non-zero
; hwf : + 1580662487711968 -357 (4.60193e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000111 #b1010011010010010100000010001000110110001010010001011)))
(assert (= y (fp #b0 #b01011010001 #b1010001100001010101000010101001000111011011101101011)))
(assert (= r (fp #b0 #b01010011010 #b0101100111011001101010101010000101110000000011100000)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
