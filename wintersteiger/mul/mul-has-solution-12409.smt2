(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2368423269300585776164780327235348522663116455078125p937 {- 1066643015307773 937 (-1.43688e+282)}
; Y = -1.1383217028646459567653437261469662189483642578125p-941 {- 622945569478472 -941 (-6.12406e-284)}
; -1.2368423269300585776164780327235348522663116455078125p937 * -1.1383217028646459567653437261469662189483642578125p-941 == 1.4079244637660954797553358730510808527469635009765625p-4
; [HW: 1.4079244637660954797553358730510808527469635009765625p-4] 

; mpf : + 1837128463012297 -4
; mpfd: + 1837128463012297 -4 (0.0879953) class: Pos. norm. non-zero
; hwf : + 1837128463012297 -4 (0.0879953) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110101000 #b0011110010100001101100101110000001111001000111111101)))
(assert (= y (fp #b1 #b00001010010 #b0010001101101001000011010001011000100001011101001000)))
(assert (= r (fp #b0 #b01111111011 #b0110100001101101101111001101011100011101000111001001)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
