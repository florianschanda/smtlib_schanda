(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.599318348632916553242466761730611324310302734375p-998 {+ 2699089891579504 -998 (5.97034e-301)}
; Y = -1.0703217072293751410683171343407593667507171630859375p247 {- 316700814474271 247 (-2.4206e+074)}
; 1.599318348632916553242466761730611324310302734375p-998 * -1.0703217072293751410683171343407593667507171630859375p247 == -1.711785145312048062038456919253803789615631103515625p-751
; [HW: -1.711785145312048062038456919253803789615631103515625p-751] 

; mpf : - 3205595315195194 -751
; mpfd: - 3205595315195194 -751 (-1.44518e-226) class: Neg. norm. non-zero
; hwf : - 3205595315195194 -751 (-1.44518e-226) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011001 #b1001100101101100111011010110001101000101011001110000)))
(assert (= y (fp #b1 #b10011110110 #b0001001000000000100110100111100010111111110000011111)))
(assert (= r (fp #b1 #b00100010000 #b1011011000110111100011010010000011100100110100111010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
