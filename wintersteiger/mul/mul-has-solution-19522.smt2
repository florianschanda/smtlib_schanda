(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.264442869690668658222421072423458099365234375p87 {- 1190944809399680 87 (-1.95663e+026)}
; Y = 1.75358063923089257940546303871087729930877685546875p379 {+ 3393825486033868 379 (2.15921e+114)}
; -1.264442869690668658222421072423458099365234375p87 * 1.75358063923089257940546303871087729930877685546875p379 == -1.10865126785155343469568833825178444385528564453125p467
; [HW: -1.10865126785155343469568833825178444385528564453125p467] 

; mpf : - 489321809409588 467
; mpfd: - 489321809409588 467 (-4.22477e+140) class: Neg. norm. non-zero
; hwf : - 489321809409588 467 (-4.22477e+140) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010110 #b0100001110110010100001110010010011111011010110000000)))
(assert (= y (fp #b0 #b10101111010 #b1100000011101010101010010010100001100101001111001100)))
(assert (= r (fp #b1 #b10111010010 #b0001101111010000100100011100101000010111011000110100)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
