(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0310120277090799589814196224324405193328857421875p-829 {+ 139665756434616 -829 (2.88003e-250)}
; Y = 1.3198666088562081011303916966426186263561248779296875p95 {+ 1440551140453083 95 (5.22853e+028)}
; 1.0310120277090799589814196224324405193328857421875p-829 * 1.3198666088562081011303916966426186263561248779296875p95 == 1.3607983487023460611453629098832607269287109375p-734
; [HW: 1.3607983487023460611453629098832607269287109375p-734] 

; mpf : + 1624891308771776 -734
; mpfd: + 1624891308771776 -734 (1.50583e-221) class: Pos. norm. non-zero
; hwf : + 1624891308771776 -734 (1.50583e-221) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000010 #b0000011111110000011001110111110011001011000010111000)))
(assert (= y (fp #b0 #b10001011110 #b0101000111100010110001110011000000011110101011011011)))
(assert (= r (fp #b0 #b00100100001 #b0101110001011101010001111101010000100000100111000000)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
