(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6256946570033667942567490172223187983036041259765625p283 {- 2817878224128073 283 (-2.52655e+085)}
; Y = -1.7103280097038346951876519597135484218597412109375p-862 {- 3199032959813016 -862 (-5.5619e-260)}
; -1.6256946570033667942567490172223187983036041259765625p283 * -1.7103280097038346951876519597135484218597412109375p-862 == 1.3902355535493631233379119294113479554653167724609375p-578
; [HW: 1.3902355535493631233379119294113479554653167724609375p-578] 

; mpf : + 1757464693551631 -578
; mpfd: + 1757464693551631 -578 (1.40524e-174) class: Pos. norm. non-zero
; hwf : + 1757464693551631 -578 (1.40524e-174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011010 #b1010000000101101100001100110100100011100100001001001)))
(assert (= y (fp #b1 #b00010100001 #b1011010111011000000011100111001100011100010110011000)))
(assert (= r (fp #b0 #b00110111101 #b0110001111100110011110100010110000111011001000001111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
