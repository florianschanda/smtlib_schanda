(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1042535032545226503231106107705272734165191650390625p449 {+ 469516038409137 449 (1.60523e+135)}
; Y = 1.2947164315690293800997778816963545978069305419921875p-86 {+ 1327284811394243 -86 (1.67338e-026)}
; 1.1042535032545226503231106107705272734165191650390625p449 * 1.2947164315690293800997778816963545978069305419921875p-86 == 1.42969515528129509362997850985266268253326416015625p363
; [HW: 1.42969515528129509362997850985266268253326416015625p363] 

; mpf : + 1935174941207748 363
; mpfd: + 1935174941207748 363 (2.68616e+109) class: Pos. norm. non-zero
; hwf : + 1935174941207748 363 (2.68616e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000000 #b0001101010110000010110111000101011111000101110110001)))
(assert (= y (fp #b0 #b01110101001 #b0100101101110010100010010011101100101110110011000011)))
(assert (= r (fp #b0 #b10101101010 #b0110111000000000100000000110111100101110110011000100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
