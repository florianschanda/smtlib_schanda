(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3017699796741002415956245386041700839996337890625p564 {+ 1359051168011880 564 (7.86053e+169)}
; Y = 1.292694102404233102987518577720038592815399169921875p-112 {+ 1318177050521246 -112 (2.48964e-034)}
; 1.3017699796741002415956245386041700839996337890625p564 * 1.292694102404233102987518577720038592815399169921875p-112 == 1.6827903754115876022723341520759277045726776123046875p452
; [HW: 1.6827903754115876022723341520759277045726776123046875p452] 

; mpf : + 3075014480275787 452
; mpfd: + 3075014480275787 452 (1.95699e+136) class: Pos. norm. non-zero
; hwf : + 3075014480275787 452 (1.95699e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110011 #b0100110101000000110011000010000110011101011001101000)))
(assert (= y (fp #b0 #b01110001111 #b0100101011101110000000000010110110001110111010011110)))
(assert (= r (fp #b0 #b10111000011 #b1010111011001011010110011001110001101010100101001011)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
