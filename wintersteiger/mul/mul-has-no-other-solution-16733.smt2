(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9385668442246297704656399218947626650333404541015625p173 {+ 4226929289912345 173 (2.32097e+052)}
; Y = 1.2536648675920776252468158418196253478527069091796875p-257 {+ 1142405003164667 -257 (5.41343e-078)}
; 1.9385668442246297704656399218947626650333404541015625p173 * 1.2536648675920776252468158418196253478527069091796875p-257 == 1.215156573041630938547541518346406519412994384765625p-83
; [HW: 1.215156573041630938547541518346406519412994384765625p-83] 

; mpf : + 968979062176602 -83
; mpfd: + 968979062176602 -83 (1.25644e-025) class: Pos. norm. non-zero
; hwf : + 968979062176602 -83 (1.25644e-025) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010101100 #b1111000001000101111010101010110100001110000000011001)))
(assert (= y (fp #b0 #b01011111110 #b0100000011110000001011100100011001110011101111111011)))
(assert (= r (fp #b0 #b01110101100 #b0011011100010100100000000100110010111011101101011010)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
