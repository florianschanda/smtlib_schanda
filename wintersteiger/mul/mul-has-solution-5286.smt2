(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5521575365316546690763743754359893500804901123046875p761 {+ 2486696475773771 761 (1.88262e+229)}
; Y = -1.375135778957044419001931601087562739849090576171875p-787 {- 1689461354324286 -787 (-1.68943e-237)}
; 1.5521575365316546690763743754359893500804901123046875p761 * -1.375135778957044419001931601087562739849090576171875p-787 == -1.0672136815312518454135215506539680063724517822265625p-25
; [HW: -1.0672136815312518454135215506539680063724517822265625p-25] 

; mpf : - 302703511098345 -25
; mpfd: - 302703511098345 -25 (-3.18054e-008) class: Neg. norm. non-zero
; hwf : - 302703511098345 -25 (-3.18054e-008) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111000 #b1000110101011010001100100100000110100100101101001011)))
(assert (= y (fp #b1 #b00011101100 #b0110000000001000111001011111111000101110000100111110)))
(assert (= r (fp #b1 #b01111100110 #b0001000100110100111010100111010000000101001111101001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
