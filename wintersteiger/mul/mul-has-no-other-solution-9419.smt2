(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.786522411066847393357193141127936542034149169921875p46 {- 3542182037399198 46 (-1.25715e+014)}
; Y = 1.609603841079628949728430598042905330657958984375p-333 {+ 2745411631529840 -333 (9.19878e-101)}
; -1.786522411066847393357193141127936542034149169921875p46 * 1.609603841079628949728430598042905330657958984375p-333 == -1.4377966675140185781600621339748613536357879638671875p-286
; [HW: -1.4377966675140185781600621339748613536357879638671875p-286] 

; mpf : - 1971660908680179 -286
; mpfd: - 1971660908680179 -286 (-1.15643e-086) class: Neg. norm. non-zero
; hwf : - 1971660908680179 -286 (-1.15643e-086) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101101 #b1100100101011001100010000110000100011010011010011110)))
(assert (= y (fp #b0 #b01010110010 #b1001110000001110111111110101000011110011111101110000)))
(assert (= r (fp #b1 #b01011100001 #b0111000000010011011100010100000101000101001111110011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
