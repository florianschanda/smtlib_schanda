(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4306154947863258808382624920341186225414276123046875p-863 {- 1939319781859659 -863 (-2.32614e-260)}
; Y = -1.5267900239383302984919055234058760106563568115234375p871 {- 2372451355511159 871 (-2.40384e+262)}
; -1.4306154947863258808382624920341186225414276123046875p-863 * -1.5267900239383302984919055234058760106563568115234375p871 == 1.0921247327656804504414367329445667564868927001953125p9
; [HW: 1.0921247327656804504414367329445667564868927001953125p9] 

; mpf : + 414892912155125 9
; mpfd: + 414892912155125 9 (559.168) class: Pos. norm. non-zero
; hwf : + 414892912155125 9 (559.168) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010100000 #b0110111000111100110100010010101101000010000101001011)))
(assert (= y (fp #b1 #b11101100110 #b1000011011011011101101100000010010101100100101110111)))
(assert (= r (fp #b0 #b10000001000 #b0001011110010101011111001000101001100001100111110101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
