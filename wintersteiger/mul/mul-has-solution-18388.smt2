(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6874458324262702202389618832967244088649749755859375p29 {- 3095980794752351 29 (-9.05941e+008)}
; Y = 1.446404937365672882521039355196990072727203369140625p-143 {+ 2010429109576394 -143 (1.29718e-043)}
; -1.6874458324262702202389618832967244088649749755859375p29 * 1.446404937365672882521039355196990072727203369140625p-143 == -1.2203649917792425139140277678961865603923797607421875p-113
; [HW: -1.2203649917792425139140277678961865603923797607421875p-113] 

; mpf : - 992435694862499 -113
; mpfd: - 992435694862499 -113 (-1.17517e-034) class: Neg. norm. non-zero
; hwf : - 992435694862499 -113 (-1.17517e-034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011100 #b1010111111111100011100110011100000001010110101011111)))
(assert (= y (fp #b0 #b01101110000 #b0111001001000111100110000000111011000010001011001010)))
(assert (= r (fp #b1 #b01110001110 #b0011100001101001110101110001000011100000000010100011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
