(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.701962603904485948902447489672340452671051025390625p-656 {- 3161358521372266 -656 (-5.6921e-198)}
; Y = 1.8446409237838994332747688531526364386081695556640625p176 {+ 3803924549615041 176 (1.76681e+053)}
; -1.701962603904485948902447489672340452671051025390625p-656 * 1.8446409237838994332747688531526364386081695556640625p176 == -1.5697549349560109277490482782013714313507080078125p-479
; [HW: -1.5697549349560109277490482782013714313507080078125p-479] 

; mpf : - 2565948112760392 -479
; mpfd: - 2565948112760392 -479 (-1.00569e-144) class: Neg. norm. non-zero
; hwf : - 2565948112760392 -479 (-1.00569e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101101111 #b1011001110110011110100100011101011001000111001101010)))
(assert (= y (fp #b0 #b10010101111 #b1101100000111010011000110011100010000011110111000001)))
(assert (= r (fp #b1 #b01000100000 #b1001000111011011011101011001110001011110111001001000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
