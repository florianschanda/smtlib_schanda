(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.99657830504208444466485161683522164821624755859375p-736 {- 4488189683233052 -736 (-5.52344e-222)}
; Y = -1.842280067369760132578448974527418613433837890625p903 {- 3793292197548048 903 (-1.24578e+272)}
; -1.99657830504208444466485161683522164821624755859375p-736 * -1.842280067369760132578448974527418613433837890625p903 == 1.8391282071609664772182668457389809191226959228515625p168
; [HW: 1.8391282071609664772182668457389809191226959228515625p168] 

; mpf : + 3779097481086201 168
; mpfd: + 3779097481086201 168 (6.881e+050) class: Pos. norm. non-zero
; hwf : + 3779097481086201 168 (6.881e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011111 #b1111111100011111110000010111110000001111000100011100)))
(assert (= y (fp #b1 #b11110000110 #b1101011110011111101010101001111101101101000000010000)))
(assert (= r (fp #b0 #b10010100111 #b1101011011010001000110110010111011101000010011111001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
