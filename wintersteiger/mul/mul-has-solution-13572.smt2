(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.48042687024749408664092698018066585063934326171875p509 {+ 2163650273825388 509 (2.48116e+153)}
; Y = -1.550340546304209254913075710646808147430419921875p282 {- 2478513479262512 282 (-1.20472e+085)}
; 1.48042687024749408664092698018066585063934326171875p509 * -1.550340546304209254913075710646808147430419921875p282 == -1.1475829013914651266503597071277908980846405029296875p792
; [HW: -1.1475829013914651266503597071277908980846405029296875p792] 

; mpf : - 664654299712859 792
; mpfd: - 664654299712859 792 (-2.9891e+238) class: Neg. norm. non-zero
; hwf : - 664654299712859 792 (-2.9891e+238) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111111100 #b0111101011111101010000010101111111010101001001101100)))
(assert (= y (fp #b1 #b10100011001 #b1000110011100011000111100011100000001010000100110000)))
(assert (= r (fp #b1 #b11100010111 #b0010010111000111111111100011011011101100110101011011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
