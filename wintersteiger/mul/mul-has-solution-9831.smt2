(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7718849007306876064404832504806108772754669189453125p348 {- 3476260551303637 348 (-1.01595e+105)}
; Y = 1.5649308343152392719588306135847233235836029052734375p-782 {+ 2544222294912215 -782 (6.15231e-236)}
; -1.7718849007306876064404832504806108772754669189453125p348 * 1.5649308343152392719588306135847233235836029052734375p-782 == -1.3864386580055250153264978507650084793567657470703125p-433
; [HW: -1.3864386580055250153264978507650084793567657470703125p-433] 

; mpf : - 1740364996195237 -433
; mpfd: - 1740364996195237 -433 (-6.25047e-131) class: Neg. norm. non-zero
; hwf : - 1740364996195237 -433 (-6.25047e-131) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101011011 #b1100010110011010001111111011010011101010000111010101)))
(assert (= y (fp #b0 #b00011110001 #b1001000010011111010011101010000111100010110011010111)))
(assert (= r (fp #b1 #b01001001110 #b0110001011101101101001001101011000001011001110100101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
