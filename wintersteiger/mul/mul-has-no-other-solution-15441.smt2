(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9529060058508107555752530970494262874126434326171875p87 {- 4291507132868819 87 (-3.02198e+026)}
; Y = -1.1931366958505302822146632024669088423252105712890625p140 {- 869810351464017 140 (-1.66299e+042)}
; -1.9529060058508107555752530970494262874126434326171875p87 * -1.1931366958505302822146632024669088423252105712890625p140 == 1.1650419095637463140491263402509503066539764404296875p228
; [HW: 1.1650419095637463140491263402509503066539764404296875p228] 

; mpf : + 743282682411803 228
; mpfd: + 743282682411803 228 (5.02551e+068) class: Pos. norm. non-zero
; hwf : + 743282682411803 228 (5.02551e+068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010110 #b1111001111110001101001011110001101001010100011010011)))
(assert (= y (fp #b1 #b10010001011 #b0011000101110001011010000001000001010101111001010001)))
(assert (= r (fp #b0 #b10011100011 #b0010101001000000001011111100010000001011101100011011)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
