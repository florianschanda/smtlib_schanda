(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.187788689818841891820966338855214416980743408203125p-999 {- 845725073492530 -999 (-2.21704e-301)}
; Y = -1.928584637416052682823419672786258161067962646484375p509 {- 4181973427048902 509 (-3.23226e+153)}
; -1.187788689818841891820966338855214416980743408203125p-999 * -1.928584637416052682823419672786258161067962646484375p509 == 1.145375509840579564269091861206106841564178466796875p-489
; [HW: 1.145375509840579564269091861206106841564178466796875p-489] 

; mpf : + 654713091946830 -489
; mpfd: + 654713091946830 -489 (7.16605e-148) class: Pos. norm. non-zero
; hwf : + 654713091946830 -489 (7.16605e-148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011000 #b0011000000010010111010110110100101010100101000110010)))
(assert (= y (fp #b1 #b10111111100 #b1110110110110111101110010000100101000101000111000110)))
(assert (= r (fp #b0 #b01000010110 #b0010010100110111010101000101010001100111100101001110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
