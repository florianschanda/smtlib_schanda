(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7356384610720836381148046712041832506656646728515625p-847 {- 3313021099163641 -847 (-1.84949e-255)}
; Y = 1.05836612171526933678933346527628600597381591796875p-784 {+ 262857644007948 -784 (1.04021e-236)}
; -1.7356384610720836381148046712041832506656646728515625p-847 * 1.05836612171526933678933346527628600597381591796875p-784 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110000 #b1011110001010010110011010101101111111011111111111001)))
(assert (= y (fp #b0 #b00011101111 #b0000111011110001000101010000011111110110001000001100)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
