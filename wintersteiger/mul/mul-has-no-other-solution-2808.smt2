(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0185627954729772337572057949728332459926605224609375p-592 {+ 83599398775055 -592 (6.28392e-179)}
; Y = 1.9009113652587543707994655051152221858501434326171875p-356 {+ 4057344088873171 -356 (1.29504e-107)}
; 1.0185627954729772337572057949728332459926605224609375p-592 * 1.9009113652587543707994655051152221858501434326171875p-356 == 1.9361975941443103632622069198987446725368499755859375p-948
; [HW: 1.9361975941443103632622069198987446725368499755859375p-948] 

; mpf : + 4216259136133471 -948
; mpfd: + 4216259136133471 -948 (8.13793e-286) class: Pos. norm. non-zero
; hwf : + 4216259136133471 -948 (8.13793e-286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101111 #b0000010011000000100010000000011101111010100100001111)))
(assert (= y (fp #b0 #b01010011011 #b1110011010100010001000001001001001100001100011010011)))
(assert (= r (fp #b0 #b00001001011 #b1110111110101010101001010100000101110001100101011111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
