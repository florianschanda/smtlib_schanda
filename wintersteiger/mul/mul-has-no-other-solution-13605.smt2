(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1973475641789352863497697398997843265533447265625p-546 {+ 888774416498728 -546 (5.19808e-165)}
; Y = 1.876985373246703669991575225139968097209930419921875p771 {+ 3949591000163230 771 (2.33124e+232)}
; 1.1973475641789352863497697398997843265533447265625p-546 * 1.876985373246703669991575225139968097209930419921875p771 == 1.1237019323282151361809155787341296672821044921875p226
; [HW: 1.1237019323282151361809155787341296672821044921875p226] 

; mpf : + 557103976338360 226
; mpfd: + 557103976338360 226 (1.2118e+068) class: Pos. norm. non-zero
; hwf : + 557103976338360 226 (1.2118e+068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011101 #b0011001010000101010111101011011000011000000000101000)))
(assert (= y (fp #b0 #b11100000010 #b1110000010000010000111010000100100101010001110011110)))
(assert (= r (fp #b0 #b10011100001 #b0001111110101010111011100000100111001101001110111000)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
