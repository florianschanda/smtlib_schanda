(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.928495198429898582759278724552132189273834228515625p489 {+ 4181570629664186 489 (3.08238e+147)}
; Y = 1.7562223268836287815020114067010581493377685546875p-94 {+ 3405722589562360 -94 (8.86666e-029)}
; 1.928495198429898582759278724552132189273834228515625p489 * 1.7562223268836287815020114067010581493377685546875p-94 == 1.6934331623852310055866610127850435674190521240234375p396
; [HW: 1.6934331623852310055866610127850435674190521240234375p396] 

; mpf : + 3122945331724471 396
; mpfd: + 3122945331724471 396 (2.73304e+119) class: Pos. norm. non-zero
; hwf : + 3122945331724471 396 (2.73304e+119) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101000 #b1110110110110001110111000111111110111111110110111010)))
(assert (= y (fp #b0 #b01110100001 #b1100000110010111110010010101001001111000010111111000)))
(assert (= r (fp #b0 #b10110001011 #b1011000110000100110101011111001001101000000010110111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
