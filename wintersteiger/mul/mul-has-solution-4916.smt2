(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8148794663821579131735006740200333297252655029296875p445 {- 3669890861150555 445 (-1.64891e+134)}
; Y = 1.9695420956649243304781293772975914180278778076171875p970 {+ 4366429420756563 970 (1.96545e+292)}
; -1.8148794663821579131735006740200333297252655029296875p445 * 1.9695420956649243304781293772975914180278778076171875p970 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111100 #b1101000010011011111100001101001001001011000101011011)))
(assert (= y (fp #b0 #b11111001001 #b1111100000110011111010010010100011111001111001010011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
