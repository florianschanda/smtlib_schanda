(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2446574476392360253385049873031675815582275390625p-123 {- 1101839190021480 -123 (-1.17047e-037)}
; Y = -1.4927200630349950483122256628121249377727508544921875p-235 {- 2219013892282371 -235 (-2.70352e-071)}
; -1.2446574476392360253385049873031675815582275390625p-123 * -1.4927200630349950483122256628121249377727508544921875p-235 == 1.8579251436970165567430512965074740350246429443359375p-358
; [HW: 1.8579251436970165567430512965074740350246429443359375p-358] 

; mpf : + 3863751357465663 -358
; mpfd: + 3863751357465663 -358 (3.16439e-108) class: Pos. norm. non-zero
; hwf : + 3863751357465663 -358 (3.16439e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000100 #b0011111010100001110111101101100001010101010101101000)))
(assert (= y (fp #b1 #b01100010100 #b0111111000100010111001101110110011010001100000000011)))
(assert (= r (fp #b0 #b01010011001 #b1101101110100000111110110111001010011000010000111111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
