(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5623719887844351728034553161705844104290008544921875p275 {+ 2532698279133187 275 (9.48491e+082)}
; Y = 1.5611685096089973345812040861346758902072906494140625p541 {+ 2527278290767137 541 (1.12377e+163)}
; 1.5623719887844351728034553161705844104290008544921875p275 * 1.5611685096089973345812040861346758902072906494140625p541 == 1.2195629745927207832068006609915755689144134521484375p817
; [HW: 1.2195629745927207832068006609915755689144134521484375p817] 

; mpf : + 988823730560135 817
; mpfd: + 988823730560135 817 (1.06589e+246) class: Pos. norm. non-zero
; hwf : + 988823730560135 817 (1.06589e+246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010010 #b1000111111110111100111000101010000000100000000000011)))
(assert (= y (fp #b0 #b11000011100 #b1000111110101000101111010100110001010000110100100001)))
(assert (= r (fp #b0 #b11100110000 #b0011100000110101010001110111001101001001110010000111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
