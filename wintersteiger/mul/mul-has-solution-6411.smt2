(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0366966198693317036116923191002570092678070068359375p480 {- 165266883569279 480 (-3.23631e+144)}
; Y = -1.1233532559341974366162730802898295223712921142578125p-549 {- 555533677460189 -549 (-6.09605e-166)}
; -1.0366966198693317036116923191002570092678070068359375p480 * -1.1233532559341974366162730802898295223712921142578125p-549 == 1.1645765233461908838563658719067461788654327392578125p-69
; [HW: 1.1645765233461908838563658719067461788654327392578125p-69] 

; mpf : + 741186769215837 -69
; mpfd: + 741186769215837 -69 (1.97287e-021) class: Pos. norm. non-zero
; hwf : + 741186769215837 -69 (1.97287e-021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011111 #b0000100101100100111100110001111000110110011001111111)))
(assert (= y (fp #b1 #b00111011010 #b0001111110010100000101000011100000010111101011011101)))
(assert (= r (fp #b0 #b01110111010 #b0010101000100001101011111110000101110110000101011101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
