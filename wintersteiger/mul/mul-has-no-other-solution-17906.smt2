(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.767567950827551026549144808086566627025604248046875p621 {+ 3456818737328494 621 (1.53817e+187)}
; Y = 1.6929912055312634766579549250309355556964874267578125p978 {+ 3120954935001629 978 (4.32504e+294)}
; 1.767567950827551026549144808086566627025604248046875p621 * 1.6929912055312634766579549250309355556964874267578125p978 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101100 #b1100010001111111010101010100111001000011000101101110)))
(assert (= y (fp #b0 #b11111010001 #b1011000101100111110111110010010000101100001000011101)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
