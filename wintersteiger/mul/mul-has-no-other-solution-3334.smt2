(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.27374525601755639314660584204830229282379150390625p502 {- 1232839032995108 502 (-1.66779e+151)}
; Y = -1.33067891375841274026470273383893072605133056640625p406 {- 1489245432781668 406 (-2.19913e+122)}
; -1.27374525601755639314660584204830229282379150390625p502 * -1.33067891375841274026470273383893072605133056640625p406 == 1.694945953682373218640577761107124388217926025390625p908
; [HW: 1.694945953682373218640577761107124388217926025390625p908] 

; mpf : + 3129758338046570 908
; mpfd: + 3129758338046570 908 (3.66768e+273) class: Pos. norm. non-zero
; hwf : + 3129758338046570 908 (3.66768e+273) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110101 #b0100011000010100001010110100101000000111110100100100)))
(assert (= y (fp #b1 #b10110010101 #b0101010010100111010111111001000000010001101101100100)))
(assert (= r (fp #b0 #b11110001011 #b1011000111100111111110100101111110001101101001101010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
