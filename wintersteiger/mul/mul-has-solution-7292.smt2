(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2876201029339811032770057863672263920307159423828125p979 {+ 1295325788397741 979 (6.5789e+294)}
; Y = -1.400504580631306783544687277753837406635284423828125p810 {- 1803712280091330 810 (-9.56271e+243)}
; 1.2876201029339811032770057863672263920307159423828125p979 * -1.400504580631306783544687277753837406635284423828125p810 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010010 #b0100100110100001011110001001011111000110000010101101)))
(assert (= y (fp #b1 #b11100101001 #b0110011010000111011101111101101110110101101011000010)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
