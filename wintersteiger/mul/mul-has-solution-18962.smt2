(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2351929948203232978443111278465948998928070068359375p-939 {- 1059215083832959 -939 (-2.65809e-283)}
; Y = 1.2141660366469668730360353947617113590240478515625p-79 {+ 964518082838696 -79 (2.00867e-024)}
; -1.2351929948203232978443111278465948998928070068359375p-939 * 1.2141660366469668730360353947617113590240478515625p-79 == -1.49972938301508929015426474506966769695281982421875p-1018
; [HW: -1.49972938301508929015426474506966769695281982421875p-1018] 

; mpf : - 2250581063132844 -1018
; mpfd: - 2250581063132844 -1018 (-5.33921e-307) class: Neg. norm. non-zero
; hwf : - 2250581063132844 -1018 (-5.33921e-307) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010100 #b0011110000110101100110111010110100000000011001111111)))
(assert (= y (fp #b0 #b01110110000 #b0011011011010011100101011101101101010000000010101000)))
(assert (= r (fp #b1 #b00000000101 #b0111111111101110010000111100110011100110011010101100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
