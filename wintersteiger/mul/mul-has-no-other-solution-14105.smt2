(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.907671085482701922586556975147686898708343505859375p180 {+ 4087787162354870 180 (2.9235e+054)}
; Y = 1.9889033197979524292264841278665699064731597900390625p1015 {+ 4453624622547505 1015 (6.98328e+305)}
; 1.907671085482701922586556975147686898708343505859375p180 * 1.9889033197979524292264841278665699064731597900390625p1015 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110011 #b1110100001011101001000011101101110101100010010110110)))
(assert (= y (fp #b0 #b11111110110 #b1111110100101000110001001001100101110000001000110001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
