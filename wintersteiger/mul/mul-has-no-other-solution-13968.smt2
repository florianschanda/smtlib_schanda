(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.982077040245179500033145814086310565471649169921875p288 {- 4422881792497310 288 (-9.85733e+086)}
; Y = -1.084097209689560248335737924207933247089385986328125p73 {- 378740162220802 73 (-1.0239e+022)}
; -1.982077040245179500033145814086310565471649169921875p288 * -1.084097209689560248335737924207933247089385986328125p73 == 1.07438209435977061190214953967370092868804931640625p362
; [HW: 1.07438209435977061190214953967370092868804931640625p362] 

; mpf : + 334987172441700 362
; mpfd: + 334987172441700 362 (1.00929e+109) class: Pos. norm. non-zero
; hwf : + 334987172441700 362 (1.00929e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011111 #b1111101101101001011001101010001000000001011010011110)))
(assert (= y (fp #b1 #b10001001000 #b0001010110000111011001010000110101001101001100000010)))
(assert (= r (fp #b0 #b10101101001 #b0001001100001010101101000111011010101110111001100100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
