(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.50460536193388438874762869090773165225982666015625p423 {+ 2272540519974596 423 (3.2592e+127)}
; Y = 1.849955530308724949151155669824220240116119384765625p-749 {+ 3827859409579866 -749 (6.24733e-226)}
; 1.50460536193388438874762869090773165225982666015625p423 * 1.849955530308724949151155669824220240116119384765625p-749 == 1.391726505120875145848913234658539295196533203125p-325
; [HW: 1.391726505120875145848913234658539295196533203125p-325] 

; mpf : + 1764179342493520 -325
; mpfd: + 1764179342493520 -325 (2.03613e-098) class: Pos. norm. non-zero
; hwf : + 1764179342493520 -325 (2.03613e-098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100110 #b1000000100101101110100010010011011100100011011000100)))
(assert (= y (fp #b0 #b00100010010 #b1101100110010110101011111000010110111010111101011010)))
(assert (= r (fp #b0 #b01010111010 #b0110010001001000001100000011000001111000011101010000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
