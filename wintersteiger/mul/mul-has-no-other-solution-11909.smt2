(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2250441066594996986083287993096746504306793212890625p728 {+ 1013508554893649 728 (1.72977e+219)}
; Y = -1.7528198545915554262819568975828588008880615234375p273 {- 3390399216615640 273 (-2.66027e+082)}
; 1.2250441066594996986083287993096746504306793212890625p728 * -1.7528198545915554262819568975828588008880615234375p273 == -1.07364081645157316557970261783339083194732666015625p1002
; [HW: -1.07364081645157316557970261783339083194732666015625p1002] 

; mpf : - 331648753530564 1002
; mpfd: - 331648753530564 1002 (-4.60166e+301) class: Neg. norm. non-zero
; hwf : - 331648753530564 1002 (-4.60166e+301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010111 #b0011100110011100011111011001011001000010100101010001)))
(assert (= y (fp #b1 #b10100010000 #b1100000010111000110011010100111101000000000011011000)))
(assert (= r (fp #b1 #b11111101001 #b0001001011011010000111111110001001001111011011000100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
