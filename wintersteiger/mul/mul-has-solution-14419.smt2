(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4843947446165766113068684717291034758090972900390625p-10 {- 2181519991355441 -10 (-0.0014496)}
; Y = -1.8021503368619871121580899853142909705638885498046875p-706 {- 3612563958186763 -706 (-5.35321e-213)}
; -1.4843947446165766113068684717291034758090972900390625p-10 * -1.8021503368619871121580899853142909705638885498046875p-706 == 1.3375512445234634117952055021305568516254425048828125p-715
; [HW: 1.3375512445234634117952055021305568516254425048828125p-715] 

; mpf : + 1520195659054317 -715
; mpfd: + 1520195659054317 -715 (7.76003e-216) class: Pos. norm. non-zero
; hwf : + 1520195659054317 -715 (7.76003e-216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110101 #b0111110000000001010010110100001001111011100000110001)))
(assert (= y (fp #b1 #b00100111101 #b1100110101011001101110010111011101001100001100001011)))
(assert (= r (fp #b0 #b00100110100 #b0101011001101001110000100010001111110011110011101101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
