(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3535517837115145223236822857870720326900482177734375p-484 {+ 1592255681379351 -484 (2.70992e-146)}
; Y = 1.2548115041573193462198787528905086219310760498046875p-12 {+ 1147568995172619 -12 (0.00030635)}
; 1.3535517837115145223236822857870720326900482177734375p-484 * 1.2548115041573193462198787528905086219310760498046875p-12 == 1.6984523496738679337880739694810472428798675537109375p-496
; [HW: 1.6984523496738679337880739694810472428798675537109375p-496] 

; mpf : + 3145549741727279 -496
; mpfd: + 3145549741727279 -496 (8.30186e-150) class: Pos. norm. non-zero
; hwf : + 3145549741727279 -496 (8.30186e-150) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011011 #b0101101010000010010111101010010001111011110000010111)))
(assert (= y (fp #b0 #b01111110011 #b0100000100111011010100111010010100000000000100001011)))
(assert (= r (fp #b0 #b01000001111 #b1011001011001101110001011110111110101001111000101111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
