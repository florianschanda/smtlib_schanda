(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7739029208572387741327247567824088037014007568359375p-190 {- 3485348905993599 -190 (-1.1304e-057)}
; Y = -1.146289709007097368242966695106588304042816162109375p344 {- 658830278972502 344 (-4.10783e+103)}
; -1.7739029208572387741327247567824088037014007568359375p-190 * -1.146289709007097368242966695106588304042816162109375p344 == 1.0167033314781421804440242340206168591976165771484375p155
; [HW: 1.0167033314781421804440242340206168591976165771484375p155] 

; mpf : + 75225117420807 155
; mpfd: + 75225117420807 155 (4.64348e+046) class: Pos. norm. non-zero
; hwf : + 75225117420807 155 (4.64348e+046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101000001 #b1100011000011110100000000111011101011100010101111111)))
(assert (= y (fp #b1 #b10101010111 #b0010010101110011001111100000101111101101010001010110)))
(assert (= r (fp #b0 #b10010011010 #b0000010001000110101010110110011001101110110100000111)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
