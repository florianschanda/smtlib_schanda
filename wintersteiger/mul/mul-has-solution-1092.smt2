(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0824427578877513500543727786862291395664215087890625p503 {- 371289173702673 503 (-2.83461e+151)}
; Y = 1.2465632573692697615541646882775239646434783935546875p182 {+ 1110422194011499 182 (7.64141e+054)}
; -1.0824427578877513500543727786862291395664215087890625p503 * 1.2465632573692697615541646882775239646434783935546875p182 == -1.3493333701883309938551747109158895909786224365234375p685
; [HW: -1.3493333701883309938551747109158895909786224365234375p685] 

; mpf : - 1573257635808247 685
; mpfd: - 1573257635808247 685 (-2.16604e+206) class: Neg. norm. non-zero
; hwf : - 1573257635808247 685 (-2.16604e+206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110110 #b0001010100011010111101111111010011101011100000010001)))
(assert (= y (fp #b0 #b10010110101 #b0011111100011110110001010000011011001011110101101011)))
(assert (= r (fp #b1 #b11010101100 #b0101100101101101111010010110100001011100001111110111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
