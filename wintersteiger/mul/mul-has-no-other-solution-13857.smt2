(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.875517116418109697661975587834604084491729736328125p845 {- 3942978559257090 845 (-4.40015e+254)}
; Y = -1.751173569471168089961565783596597611904144287109375p781 {- 3382985007560918 781 (-2.22718e+235)}
; -1.875517116418109697661975587834604084491729736328125p845 * -1.751173569471168089961565783596597611904144287109375p781 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001100 #b1110000000100001111000111100011000011010101000000010)))
(assert (= y (fp #b1 #b11100001100 #b1100000001001100111010010011101001111111100011010110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
