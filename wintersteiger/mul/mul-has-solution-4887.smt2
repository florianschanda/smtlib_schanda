(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8616240863629129886902546786586754024028778076171875p963 {- 3880409914277459 963 (-1.45137e+290)}
; Y = 1.403898078716988351288819103501737117767333984375p-92 {+ 1818995236805488 -92 (2.83515e-028)}
; -1.8616240863629129886902546786586754024028778076171875p963 * 1.403898078716988351288819103501737117767333984375p-92 == -1.3067652390690811525786330093978904187679290771484375p872
; [HW: -1.3067652390690811525786330093978904187679290771484375p872] 

; mpf : - 1381547816361735 872
; mpfd: - 1381547816361735 872 (-4.11485e+262) class: Neg. norm. non-zero
; hwf : - 1381547816361735 872 (-4.11485e+262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111000010 #b1101110010010011011001010110100001011111111001010011)))
(assert (= y (fp #b0 #b01110100011 #b0110011101100101110111010100111100000001101101110000)))
(assert (= r (fp #b1 #b11101100111 #b0100111010001000001010101010110101011001111100000111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
