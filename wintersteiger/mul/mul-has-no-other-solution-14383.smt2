(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.576079422164891941093856075895018875598907470703125p815 {- 2594431070997618 815 (-3.44369e+245)}
; Y = -1.154154593295469322100643694284372031688690185546875p191 {- 694250568922926 191 (-3.62237e+057)}
; -1.576079422164891941093856075895018875598907470703125p815 * -1.154154593295469322100643694284372031688690185546875p191 == 1.8190393044900792229867647620267234742641448974609375p1006
; [HW: 1.8190393044900792229867647620267234742641448974609375p1006] 

; mpf : + 3688625106503311 1006
; mpfd: + 3688625106503311 1006 (1.24743e+303) class: Pos. norm. non-zero
; hwf : + 3688625106503311 1006 (1.24743e+303) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101110 #b1001001101111001111100001110011000011000110001110010)))
(assert (= y (fp #b1 #b10010111110 #b0010011101110110101011001110100010111011011100101110)))
(assert (= r (fp #b0 #b11111101101 #b1101000110101100100011110101001011101100011010001111)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
