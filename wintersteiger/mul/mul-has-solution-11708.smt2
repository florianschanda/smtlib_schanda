(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.868947992637704391682973437127657234668731689453125p956 {- 3913393855847506 956 (-1.13834e+288)}
; Y = 1.59208370577803037804187624715268611907958984375p-574 {+ 2666507956714080 -574 (2.57483e-173)}
; -1.868947992637704391682973437127657234668731689453125p956 * 1.59208370577803037804187624715268611907958984375p-574 == -1.4877608230125236588037296314723789691925048828125p383
; [HW: -1.4877608230125236588037296314723789691925048828125p383] 

; mpf : - 2196679460765128 383
; mpfd: - 2196679460765128 383 (-2.93104e+115) class: Neg. norm. non-zero
; hwf : - 2196679460765128 383 (-2.93104e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111011 #b1101111001110011011000000010101001001101110001010010)))
(assert (= y (fp #b0 #b00111000001 #b1001011110010010110011000011100011001111101001100000)))
(assert (= r (fp #b1 #b10101111110 #b0111110011011101111001001010111100011011110111001000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
