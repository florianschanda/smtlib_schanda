(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3630898891633027592007465500500984489917755126953125p354 {- 1635211489537845 354 (-5.00199e+106)}
; Y = -1.04231785740336224677093923673965036869049072265625p134 {- 190582686832900 134 (-2.26997e+040)}
; -1.3630898891633027592007465500500984489917755126953125p354 * -1.04231785740336224677093923673965036869049072265625p134 == 1.4207729327208802327930925457621924579143524169921875p488
; [HW: 1.4207729327208802327930925457621924579143524169921875p488] 

; mpf : + 1894992823009347 488
; mpfd: + 1894992823009347 488 (1.13544e+147) class: Pos. norm. non-zero
; hwf : + 1894992823009347 488 (1.13544e+147) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100001 #b0101110011110011011101010111111101110110111100110101)))
(assert (= y (fp #b1 #b10010000101 #b0000101011010101010101111101010110010101100100000100)))
(assert (= r (fp #b0 #b10111100111 #b0110101110110111110001100110000100010100000001000011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
