(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.81545977281264203639921106514520943164825439453125p130 {+ 3672504328974644 130 (2.47108e+039)}
; Y = -1.696549262990182160848462444846518337726593017578125p914 {- 3136979001247778 914 (-2.34954e+275)}
; 1.81545977281264203639921106514520943164825439453125p130 * -1.696549262990182160848462444846518337726593017578125p914 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000001 #b1101000011000001111110001011111101101111000100110100)))
(assert (= y (fp #b1 #b11110010001 #b1011001001010001000011010111000010011000100000100010)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
