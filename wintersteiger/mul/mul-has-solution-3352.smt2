(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.535822177547397249242067118757404386997222900390625p403 {+ 2413128559139306 403 (3.1727e+121)}
; Y = 1.8650745953732468240815478566219098865985870361328125p-258 {+ 3895949625370637 -258 (4.02677e-078)}
; 1.535822177547397249242067118757404386997222900390625p403 * 1.8650745953732468240815478566219098865985870361328125p-258 == 1.432211463177235355459515631082467734813690185546875p146
; [HW: 1.432211463177235355459515631082467734813690185546875p146] 

; mpf : + 1946507384510254 146
; mpfd: + 1946507384510254 146 (1.27758e+044) class: Pos. norm. non-zero
; hwf : + 1946507384510254 146 (1.27758e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010010 #b1000100100101011101001000110100100001001100111101010)))
(assert (= y (fp #b0 #b01011111101 #b1101110101110101100001110101011110111010100000001101)))
(assert (= r (fp #b0 #b10010010001 #b0110111010100101011010010001001101001101011100101110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
