(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3342213087380823122174433592590503394603729248046875p420 {+ 1505198961492107 420 (3.61265e+126)}
; Y = -1.870151942489617358233999766525812447071075439453125p-337 {- 3918815963951954 -337 (-6.67988e-102)}
; 1.3342213087380823122174433592590503394603729248046875p420 * -1.870151942489617358233999766525812447071075439453125p-337 == -1.247598286123781985423875084961764514446258544921875p84
; [HW: -1.247598286123781985423875084961764514446258544921875p84] 

; mpf : - 1115083549124638 84
; mpfd: - 1115083549124638 84 (-2.41321e+025) class: Neg. norm. non-zero
; hwf : - 1115083549124638 84 (-2.41321e+025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100011 #b0101010110001111100001110001011010101000000010001011)))
(assert (= y (fp #b1 #b01010101110 #b1101111011000010010001110001011110001011001101010010)))
(assert (= r (fp #b1 #b10001010011 #b0011111101100010100110011110110101110010100000011110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
