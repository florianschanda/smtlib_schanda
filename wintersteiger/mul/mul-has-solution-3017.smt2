(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.68331466589660294630448333919048309326171875p523 {+ 3077375674708736 523 (4.62225e+157)}
; Y = -1.28295469650462035104965252685360610485076904296875p-181 {- 1274314665740940 -181 (-4.18584e-055)}
; 1.68331466589660294630448333919048309326171875p523 * -1.28295469650462035104965252685360610485076904296875p-181 == -1.0798082281535761328683520332560874521732330322265625p343
; [HW: -1.0798082281535761328683520332560874521732330322265625p343] 

; mpf : - 359424306573545 343
; mpfd: - 359424306573545 343 (-1.9348e+103) class: Neg. norm. non-zero
; hwf : - 359424306573545 343 (-1.9348e+103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001010 #b1010111011101101101101011011111011100111001100000000)))
(assert (= y (fp #b1 #b01101001010 #b0100100001101111101110000000111110111100101010001100)))
(assert (= r (fp #b1 #b10101010110 #b0001010001101110010011111110000111011111000011101001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
