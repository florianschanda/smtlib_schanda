(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6864604802452654030986423094873316586017608642578125p207 {- 3091543163037149 207 (-3.46885e+062)}
; Y = 1.0881275402288974607500904312473721802234649658203125p849 {+ 396891157335941 849 (4.08457e+255)}
; -1.6864604802452654030986423094873316586017608642578125p207 * 1.0881275402288974607500904312473721802234649658203125p849 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001110 #b1010111110111011110111111100000010100110010111011101)))
(assert (= y (fp #b0 #b11101010000 #b0001011010001111100001101100011100101000111110000101)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
