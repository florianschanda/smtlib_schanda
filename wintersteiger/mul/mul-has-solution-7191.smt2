(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0509749556792915559100265454617328941822052001953125p446 {+ 229570791402485 446 (1.90972e+134)}
; Y = 1.6904834470372680499394846265204250812530517578125p-709 {+ 3109660994782536 -709 (6.27688e-214)}
; 1.0509749556792915559100265454617328941822052001953125p446 * 1.6904834470372680499394846265204250812530517578125p-709 == 1.776655765826568700305188031052239239215850830078125p-263
; [HW: 1.776655765826568700305188031052239239215850830078125p-263] 

; mpf : + 3497746617571682 -263
; mpfd: + 3497746617571682 -263 (1.19871e-079) class: Pos. norm. non-zero
; hwf : + 3497746617571682 -263 (1.19871e-079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111101 #b0000110100001100101100011101011110001110101111110101)))
(assert (= y (fp #b0 #b00100111010 #b1011000011000011100001011110111101110100010101001000)))
(assert (= r (fp #b0 #b01011111000 #b1100011011010010111010011000101001111001100101100010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
