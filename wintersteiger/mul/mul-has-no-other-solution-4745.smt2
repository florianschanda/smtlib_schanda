(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.443010755414656731687728097313083708286285400390625p759 {+ 1995143073006570 759 (4.37559e+228)}
; Y = 1.4197621070732864279051455014268867671489715576171875p-763 {+ 1890440468999507 -763 (2.92637e-230)}
; 1.443010755414656731687728097313083708286285400390625p759 * 1.4197621070732864279051455014268867671489715576171875p-763 == 1.024365995318464062080465737381018698215484619140625p-3
; [HW: 1.024365995318464062080465737381018698215484619140625p-3] 

; mpf : + 109734687436746 -3
; mpfd: + 109734687436746 -3 (0.128046) class: Pos. norm. non-zero
; hwf : + 109734687436746 -3 (0.128046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110110 #b0111000101101001001001110010001001001000001111101010)))
(assert (= y (fp #b0 #b00100000100 #b0110101101110101100001111000100111111010110101010011)))
(assert (= r (fp #b0 #b01111111100 #b0000011000111100110110011001000100000110111111001010)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
