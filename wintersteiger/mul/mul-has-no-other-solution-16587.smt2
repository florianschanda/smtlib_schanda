(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5886210245726164469459718020516447722911834716796875p-166 {- 2650913426927675 -166 (-1.6984e-050)}
; Y = 1.40124193777575811736824107356369495391845703125p824 {+ 1807033041452320 824 (1.56758e+248)}
; -1.5886210245726164469459718020516447722911834716796875p-166 * 1.40124193777575811736824107356369495391845703125p824 == -1.1130212014317215629688462286139838397502899169921875p659
; [HW: -1.1130212014317215629688462286139838397502899169921875p659] 

; mpf : - 509002240652867 659
; mpfd: - 509002240652867 659 (-2.66238e+198) class: Neg. norm. non-zero
; hwf : - 509002240652867 659 (-2.66238e+198) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101011001 #b1001011010101111110111100001001001000111000000111011)))
(assert (= y (fp #b0 #b11100110111 #b0110011010110111110010101010100010000111110100100000)))
(assert (= r (fp #b1 #b11010010010 #b0001110011101110111101010001101111100111011001000011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
