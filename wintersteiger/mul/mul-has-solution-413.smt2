(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6312369171361524866625813956488855183124542236328125p656 {- 2842838344796877 656 (-4.87747e+197)}
; Y = -1.2923533368457500447590291514643467962741851806640625p-415 {- 1316642378879041 -415 (-1.52733e-125)}
; -1.6312369171361524866625813956488855183124542236328125p656 * -1.2923533368457500447590291514643467962741851806640625p-415 == 1.054067236523440254103434199350886046886444091796875p242
; [HW: 1.054067236523440254103434199350886046886444091796875p242] 

; mpf : + 243497186259918 242
; mpfd: + 243497186259918 242 (7.4495e+072) class: Pos. norm. non-zero
; hwf : + 243497186259918 242 (7.4495e+072) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001111 #b1010000110011000101111100001101100100000101011001101)))
(assert (= y (fp #b1 #b01001100000 #b0100101011010111101010110001010010100001000001000001)))
(assert (= r (fp #b0 #b10011110001 #b0000110111010111010110011011010010100111001111001110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
