(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2880338490776150894845386574161238968372344970703125p22 {+ 1297189135376037 22 (5.40241e+006)}
; Y = 1.2448578837893988779939036248833872377872467041015625p-800 {+ 1102741874192665 -800 (1.86691e-241)}
; 1.2880338490776150894845386574161238968372344970703125p22 * 1.2448578837893988779939036248833872377872467041015625p-800 == 1.603419091611873792402320759720169007778167724609375p-778
; [HW: 1.603419091611873792402320759720169007778167724609375p-778] 

; mpf : + 2717557996131478 -778
; mpfd: + 2717557996131478 -778 (1.00858e-234) class: Pos. norm. non-zero
; hwf : + 2717557996131478 -778 (1.00858e-234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010101 #b0100100110111100100101100001100111101101111010100101)))
(assert (= y (fp #b0 #b00011011111 #b0011111010101111000000011001101100001011000100011001)))
(assert (= r (fp #b0 #b00011110101 #b1001101001111001101011000111000001000001010010010110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
