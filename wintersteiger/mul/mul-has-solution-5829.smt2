(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8669597256799936868532086009508930146694183349609375p-279 {+ 3904439497517647 -279 (1.92206e-084)}
; Y = -1.3167375173875115468291596698691137135028839111328125p-520 {- 1426458965280653 -520 (-3.8362e-157)}
; 1.8669597256799936868532086009508930146694183349609375p-279 * -1.3167375173875115468291596698691137135028839111328125p-520 == -1.2291479571271721749070593432406894862651824951171875p-798
; [HW: -1.2291479571271721749070593432406894862651824951171875p-798] 

; mpf : - 1031990654330643 -798
; mpfd: - 1031990654330643 -798 (-7.3734e-241) class: Neg. norm. non-zero
; hwf : - 1031990654330643 -798 (-7.3734e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101000 #b1101110111110001000100101001010010111110101001001111)))
(assert (= y (fp #b1 #b00111110111 #b0101000100010101101101011011111010011000011110001101)))
(assert (= r (fp #b1 #b00011100001 #b0011101010101001011100001100010111001110011100010011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
