(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.28809616949494643023399476078338921070098876953125p-189 {+ 1297469801584308 -189 (1.64164e-057)}
; Y = 1.3155615199814036930803240466048009693622589111328125p458 {+ 1421162743800717 458 (9.7915e+137)}
; 1.28809616949494643023399476078338921070098876953125p-189 * 1.3155615199814036930803240466048009693622589111328125p458 == 1.6945697546229954166818743033218197524547576904296875p269
; [HW: 1.6945697546229954166818743033218197524547576904296875p269] 

; mpf : + 3128064088102939 269
; mpfd: + 3128064088102939 269 (1.60742e+081) class: Pos. norm. non-zero
; hwf : + 3128064088102939 269 (1.60742e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000010 #b0100100111000000101010111010101000010101011010110100)))
(assert (= y (fp #b0 #b10111001001 #b0101000011001000101000111100100000110010001110001101)))
(assert (= r (fp #b0 #b10100001100 #b1011000111001111010100101100110011100101100000011011)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
