(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.20682590408764678358011224190704524517059326171875p927 {- 931461064579692 927 (-1.36915e+279)}
; Y = -1.0048979378485103364226915800827555358409881591796875p680 {- 22058351069435 680 (-5.04103e+204)}
; -1.20682590408764678358011224190704524517059326171875p927 * -1.0048979378485103364226915800827555358409881591796875p680 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011110 #b0011010011110010100010101101111000000101101001101100)))
(assert (= y (fp #b1 #b11010100111 #b0000000101000000111111011100001011100000100011111011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
