(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6539906602122684819988762683351524174213409423828125p43 {+ 2945312093635757 43 (1.45487e+013)}
; Y = 1.479640433749424222042989640613086521625518798828125p-977 {+ 2160108478705730 -977 (1.15838e-294)}
; 1.6539906602122684819988762683351524174213409423828125p43 * 1.479640433749424222042989640613086521625518798828125p-977 == 1.2236557289469887077615339876501820981502532958984375p-933
; [HW: 1.2236557289469887077615339876501820981502532958984375p-933] 

; mpf : + 1007255857544935 -933
; mpfd: + 1007255857544935 -933 (1.68528e-281) class: Pos. norm. non-zero
; hwf : + 1007255857544935 -933 (1.68528e-281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101010 #b1010011101101011111011101001000110000000010010101101)))
(assert (= y (fp #b0 #b00000101110 #b0111101011001001101101110010100011001011000001000010)))
(assert (= r (fp #b0 #b00001011010 #b0011100101000001100000000111100101100011111011100111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
