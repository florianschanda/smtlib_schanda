(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.814222750538373230000388502958230674266815185546875p233 {- 3666933275921198 233 (-2.50426e+070)}
; Y = 1.91860595143381740257382261916063725948333740234375p-409 {+ 4137033420577660 -409 (1.45117e-123)}
; -1.814222750538373230000388502958230674266815185546875p233 * 1.91860595143381740257382261916063725948333740234375p-409 == -1.74038928320477648270525605767033994197845458984375p-175
; [HW: -1.74038928320477648270525605767033994197845458984375p-175] 

; mpf : - 3334416899950140 -175
; mpfd: - 3334416899950140 -175 (-3.6341e-053) class: Neg. norm. non-zero
; hwf : - 3334416899950140 -175 (-3.6341e-053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101000 #b1101000001110000111001101111010100111000101100101110)))
(assert (= y (fp #b0 #b01001100110 #b1110101100101001110000100111011101010001101101111100)))
(assert (= r (fp #b1 #b01101010000 #b1011110110001010001001101110110110101100011000111100)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
