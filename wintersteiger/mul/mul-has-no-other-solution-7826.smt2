(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9238015282684270967905604265979491174221038818359375p357 {- 4160432218473983 357 (-5.64766e+107)}
; Y = -1.5840242883895589987020002809003926813602447509765625p-537 {- 2630211567566537 -537 (-3.5209e-162)}
; -1.9238015282684270967905604265979491174221038818359375p357 * -1.5840242883895589987020002809003926813602447509765625p-537 == 1.52367417340907085332446513348259031772613525390625p-179
; [HW: 1.52367417340907085332446513348259031772613525390625p-179] 

; mpf : + 2358418812228644 -179
; mpfd: + 2358418812228644 -179 (1.98849e-054) class: Pos. norm. non-zero
; hwf : + 2358418812228644 -179 (1.98849e-054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100100 #b1110110001111110010000011100011111101000010111111111)))
(assert (= y (fp #b1 #b00111100110 #b1001010110000010100111011010001010110011111011001001)))
(assert (= r (fp #b0 #b01101001100 #b1000011000001111100000101011100010001101010000100100)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
