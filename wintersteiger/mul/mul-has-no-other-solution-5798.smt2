(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5286830372179800452414610845153219997882843017578125p-981 {+ 2380976729411997 -981 (7.47983e-296)}
; Y = 1.6514710805623080691617587945074774324893951416015625p948 {+ 2933964915663065 948 (3.92922e+285)}
; 1.5286830372179800452414610845153219997882843017578125p-981 * 1.6514710805623080691617587945074774324893951416015625p948 == 1.262287913655824045378039954812265932559967041015625p-32
; [HW: 1.262287913655824045378039954812265932559967041015625p-32] 

; mpf : + 1181239750204154 -32
; mpfd: + 1181239750204154 -32 (2.93899e-010) class: Pos. norm. non-zero
; hwf : + 1181239750204154 -32 (2.93899e-010) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000101010 #b1000011101010111110001011000001011001101000110011101)))
(assert (= y (fp #b0 #b11110110011 #b1010011011000110110011110000100101001110000011011001)))
(assert (= r (fp #b0 #b01111011111 #b0100001100100101010011001111101101001001101011111010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
