(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.09486139235451584994507356896065175533294677734375p-561 {- 427217731259644 -561 (-1.45055e-169)}
; Y = -1.3469185029332420011627391431829892098903656005859375p149 {- 1562382040538079 149 (-9.61193e+044)}
; -1.09486139235451584994507356896065175533294677734375p-561 * -1.3469185029332420011627391431829892098903656005859375p149 == 1.4746890675095494227520021013333462178707122802734375p-412
; [HW: 1.4746890675095494227520021013333462178707122802734375p-412] 

; mpf : + 2137809507552855 -412
; mpfd: + 2137809507552855 -412 (1.39426e-124) class: Pos. norm. non-zero
; hwf : + 2137809507552855 -412 (1.39426e-124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001110 #b0001100001001000110101100001000111010000110011111100)))
(assert (= y (fp #b1 #b10010010100 #b0101100011001111101001101010100001111001101111011111)))
(assert (= r (fp #b0 #b01001100011 #b0111100110000101001110010000010010111000111001010111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
