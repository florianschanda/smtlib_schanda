(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6430862133955443926680572985787875950336456298828125p-444 {+ 2896202831015277 -444 (3.61695e-134)}
; Y = 1.2097732773451090881877689753309823572635650634765625p837 {+ 944734853683721 837 (1.10869e+252)}
; 1.6430862133955443926680572985787875950336456298828125p-444 * 1.2097732773451090881877689753309823572635650634765625p837 == 1.9877617933400928418308239997713826596736907958984375p393
; [HW: 1.9877617933400928418308239997713826596736907958984375p393] 

; mpf : + 4448483644417255 393
; mpfd: + 4448483644417255 393 (4.01008e+118) class: Pos. norm. non-zero
; hwf : + 4448483644417255 393 (4.01008e+118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001000011 #b1010010010100001010011000100111100001010110101101101)))
(assert (= y (fp #b0 #b11101000100 #b0011010110110011101100111001010111000101101000001001)))
(assert (= r (fp #b0 #b10110001000 #b1111110011011101111101001111011010100010010011100111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
