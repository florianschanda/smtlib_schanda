(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4567034191019188060778333237976767122745513916015625p536 {- 2056809348086233 536 (-3.27679e+161)}
; Y = 1.104731308775846354564009743626229465007781982421875p219 {+ 471667883176926 219 (9.30734e+065)}
; -1.4567034191019188060778333237976767122745513916015625p536 * 1.104731308775846354564009743626229465007781982421875p219 == -1.6092658746827128712908461238839663565158843994140625p755
; [HW: -1.6092658746827128712908461238839663565158843994140625p755] 

; mpf : - 2743889566190625 755
; mpfd: - 2743889566190625 755 (-3.04982e+227) class: Neg. norm. non-zero
; hwf : - 2743889566190625 755 (-3.04982e+227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000010111 #b0111010011101010100000111110100100000011100111011001)))
(assert (= y (fp #b0 #b10011011010 #b0001101011001111101010111100101000001111001111011110)))
(assert (= r (fp #b1 #b11011110010 #b1001101111111000110110010010111001010100110000100001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
