(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6356933743249317814161258866079151630401611328125p139 {- 2862908443731656 139 (-1.13991e+042)}
; Y = -1.1986486769198767543542771818465553224086761474609375p816 {- 894634107353999 816 (-5.23803e+245)}
; -1.6356933743249317814161258866079151630401611328125p139 * -1.1986486769198767543542771818465553224086761474609375p816 == 1.9606216989811879880534206677111797034740447998046875p955
; [HW: 1.9606216989811879880534206677111797034740447998046875p955] 

; mpf : + 4326255525575691 955
; mpfd: + 4326255525575691 955 (5.9709e+287) class: Pos. norm. non-zero
; hwf : + 4326255525575691 955 (5.9709e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001010 #b1010001010111100110011010000110100000010011011001000)))
(assert (= y (fp #b1 #b11100101111 #b0011001011011010101000111100001011000011101110001111)))
(assert (= r (fp #b0 #b11110111010 #b1111010111101011010011011011110011110011110000001011)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
