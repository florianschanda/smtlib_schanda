(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0586553855658855649579663804615847766399383544921875p539 {+ 264160372577795 539 (1.90512e+162)}
; Y = -1.53461155003978166888600753736682236194610595703125p-559 {- 2407676377547124 -559 (-8.13263e-169)}
; 1.0586553855658855649579663804615847766399383544921875p539 * -1.53461155003978166888600753736682236194610595703125p-559 == -1.62462478220122630290234155836515128612518310546875p-20
; [HW: -1.62462478220122630290234155836515128612518310546875p-20] 

; mpf : - 2813059936367820 -20
; mpfd: - 2813059936367820 -20 (-1.54936e-006) class: Neg. norm. non-zero
; hwf : - 2813059936367820 -20 (-1.54936e-006) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011010 #b0000111100000100000010100001001010111101011000000011)))
(assert (= y (fp #b1 #b00111010000 #b1000100011011100010011010111001101111100000101110100)))
(assert (= r (fp #b1 #b01111101011 #b1001111111100111011010001110001111010011010011001100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
