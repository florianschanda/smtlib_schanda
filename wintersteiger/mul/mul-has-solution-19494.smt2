(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2884863182434938000398005897295661270618438720703125p901 {+ 1299226875342885 901 (2.17824e+271)}
; Y = 1.377819587708132065273503030766732990741729736328125p170 {+ 1701548154415618 170 (2.06201e+051)}
; 1.2884863182434938000398005897295661270618438720703125p901 * 1.377819587708132065273503030766732990741729736328125p170 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000100 #b0100100111011010001111010100011000110011000000100101)))
(assert (= y (fp #b0 #b10010101001 #b0110000010111000110010001101010011111110101000000010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
