(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.248173766082898428209091434837318956851959228515625p706 {- 1117675280454074 706 (-4.20196e+212)}
; Y = -1.1366912738576804287049526465125381946563720703125p292 {- 615602770010248 292 (-9.04485e+087)}
; -1.248173766082898428209091434837318956851959228515625p706 * -1.1366912738576804287049526465125381946563720703125p292 == 1.4187882281645081139487274413113482296466827392578125p998
; [HW: 1.4187882281645081139487274413113482296466827392578125p998] 

; mpf : + 1886054508308829 998
; mpfd: + 1886054508308829 998 (3.80061e+300) class: Pos. norm. non-zero
; hwf : + 1886054508308829 998 (3.80061e+300) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000001 #b0011111110001000010100001110000100001101000110111010)))
(assert (= y (fp #b1 #b10100100011 #b0010001011111110001100110000011011011110000010001000)))
(assert (= r (fp #b0 #b11111100101 #b0110101100110101101101001000111111101010100101011101)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
