(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9096511191477134605776200260152108967304229736328125p46 {- 4096704441230797 46 (-1.3438e+014)}
; Y = 1.79699479032222342311797547154128551483154296875p147 {+ 3589345440711392 147 (3.20595e+044)}
; -1.9096511191477134605776200260152108967304229736328125p46 * 1.79699479032222342311797547154128551483154296875p147 == -1.7158165562207223775459397074882872402667999267578125p194
; [HW: -1.7158165562207223775459397074882872402667999267578125p194] 

; mpf : - 3223751175861277 194
; mpfd: - 3223751175861277 194 (-4.30814e+058) class: Neg. norm. non-zero
; hwf : - 3223751175861277 194 (-4.30814e+058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101101 #b1110100011011110111001010100111110000010010111001101)))
(assert (= y (fp #b0 #b10010010010 #b1100110000000111110110011011111110000100001011100000)))
(assert (= r (fp #b1 #b10011000001 #b1011011100111111110000001111101011100111010000011101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
