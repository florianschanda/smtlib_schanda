(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0016675227939277892375002920744009315967559814453125p781 {- 7509855033365 781 (-1.27394e+235)}
; Y = 1.6284579414495350402347639828803949058055877685546875p742 {+ 2830322950930155 742 (3.76733e+223)}
; -1.0016675227939277892375002920744009315967559814453125p781 * 1.6284579414495350402347639828803949058055877685546875p742 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001100 #b0000000001101101010010000110001111011101100000010101)))
(assert (= y (fp #b0 #b11011100101 #b1010000011100010100111101010000101101111111011101011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
