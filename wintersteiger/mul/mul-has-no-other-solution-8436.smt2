(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4949652901911674174328936715028248727321624755859375p-168 {+ 2229125496466271 -168 (3.99569e-051)}
; Y = -1.1623814014538762506845159805379807949066162109375p481 {- 731300819079576 481 (-7.25732e+144)}
; 1.4949652901911674174328936715028248727321624755859375p-168 * -1.1623814014538762506845159805379807949066162109375p481 == -1.737719849137310035303016775287687778472900390625p313
; [HW: -1.737719849137310035303016775287687778472900390625p313] 

; mpf : - 3322394837678608 313
; mpfd: - 3322394837678608 313 (-2.8998e+094) class: Neg. norm. non-zero
; hwf : - 3322394837678608 313 (-2.8998e+094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010111 #b0111111010110110000010111001011000000110101101011111)))
(assert (= y (fp #b1 #b10111100000 #b0010100110010001110100111101100010111001000110011000)))
(assert (= r (fp #b1 #b10100111000 #b1011110011011011001101010100000110100111101000010000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
