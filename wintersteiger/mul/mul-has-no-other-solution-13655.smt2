(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.322286682346598407633564420393668115139007568359375p803 {+ 1451450182522614 803 (7.05362e+241)}
; Y = 1.2815862392078531950545539075392298400402069091796875p134 {+ 1268151681969147 134 (2.79105e+040)}
; 1.322286682346598407633564420393668115139007568359375p803 * 1.2815862392078531950545539075392298400402069091796875p134 == 1.6946244163832060447560934335342608392238616943359375p937
; [HW: 1.6946244163832060447560934335342608392238616943359375p937] 

; mpf : + 3128310262785855 937
; mpfd: + 3128310262785855 937 (1.9687e+282) class: Pos. norm. non-zero
; hwf : + 3128310262785855 937 (1.9687e+282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100010 #b0101001010000001011000010100100010011101011011110110)))
(assert (= y (fp #b0 #b10010000101 #b0100100000010110000010010010100001100110101111111011)))
(assert (= r (fp #b0 #b11110101000 #b1011000111010010111001111101111101011110011100111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
