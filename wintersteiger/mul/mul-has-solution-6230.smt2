(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0600178443562884300632731537916697561740875244140625p-471 {- 270296341478561 -471 (-1.73854e-142)}
; Y = -1.5446699860040944418670960658346302807331085205078125p824 {- 2452975546007933 824 (-1.72803e+248)}
; -1.0600178443562884300632731537916697561740875244140625p-471 * -1.5446699860040944418670960658346302807331085205078125p824 == 1.63737774880591846482502660364843904972076416015625p353
; [HW: 1.63737774880591846482502660364843904972076416015625p353] 

; mpf : + 2870494192016580 353
; mpfd: + 2870494192016580 353 (3.00426e+106) class: Pos. norm. non-zero
; hwf : + 2870494192016580 353 (3.00426e+106) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101000 #b0000111101011101010101000101011010101111110010100001)))
(assert (= y (fp #b1 #b11100110111 #b1000101101101111011111100000000100000000000101111101)))
(assert (= r (fp #b0 #b10101100000 #b1010001100101011001100000010101001010001110011000100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
