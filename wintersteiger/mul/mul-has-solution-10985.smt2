(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7124099411137378989877788626472465693950653076171875p360 {+ 3208409145334867 360 (4.02167e+108)}
; Y = -1.5371398815845667140678187934099696576595306396484375p-34 {- 2419062970550087 -34 (-8.94733e-011)}
; 1.7124099411137378989877788626472465693950653076171875p360 * -1.5371398815845667140678187934099696576595306396484375p-34 == -1.316106807053902816306845124927349388599395751953125p327
; [HW: -1.316106807053902816306845124927349388599395751953125p327] 

; mpf : - 1423618498457234 327
; mpfd: - 1423618498457234 327 (-3.59832e+098) class: Neg. norm. non-zero
; hwf : - 1423618498457234 327 (-3.59832e+098) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100111 #b1011011001100000011111110111011001101101110001010011)))
(assert (= y (fp #b1 #b01111011101 #b1000100110000001111111111101000011001000011101000111)))
(assert (= r (fp #b1 #b10101000110 #b0101000011101100011000000010111001010110111010010010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
