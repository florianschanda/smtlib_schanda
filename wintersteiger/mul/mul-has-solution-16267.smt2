(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0167572529126729374837623254279606044292449951171875p827 {+ 75467957973267 827 (9.09963e+248)}
; Y = 1.4874426936024056633556256201700307428836822509765625p-620 {+ 2195246733272265 -620 (3.41856e-187)}
; 1.0167572529126729374837623254279606044292449951171875p827 * 1.4874426936024056633556256201700307428836822509765625p-620 == 1.512368147012208563495505586615763604640960693359375p207
; [HW: 1.512368147012208563495505586615763604640960693359375p207] 

; mpf : + 2307500995960694 207
; mpfd: + 2307500995960694 207 (3.11076e+062) class: Pos. norm. non-zero
; hwf : + 2307500995960694 207 (3.11076e+062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111010 #b0000010001001010001101000000110100111011000100010011)))
(assert (= y (fp #b0 #b00110010011 #b0111110011001001000010110101101110110010010011001001)))
(assert (= r (fp #b0 #b10011001110 #b1000001100101010100011110001001011101101111101110110)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
