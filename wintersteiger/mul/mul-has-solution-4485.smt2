(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.560649721121550204117056637187488377094268798828125p878 {+ 2524941875128386 878 (3.14515e+264)}
; Y = 1.830271536837804635666770991520024836063385009765625p-855 {+ 3739210583919066 -855 (7.6185e-258)}
; 1.560649721121550204117056637187488377094268798828125p878 * 1.830271536837804635666770991520024836063385009765625p-855 == 1.4282063817713155362554289240506477653980255126953125p24
; [HW: 1.4282063817713155362554289240506477653980255126953125p24] 

; mpf : + 1928470101382965 24
; mpfd: + 1928470101382965 24 (2.39613e+007) class: Pos. norm. non-zero
; hwf : + 1928470101382965 24 (2.39613e+007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101101 #b1000111110000110101111010111100010111010100001000010)))
(assert (= y (fp #b0 #b00010101000 #b1101010010001100101011001110100110000100100111011010)))
(assert (= r (fp #b0 #b10000010111 #b0110110110011110111011101111010110100101011100110101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
