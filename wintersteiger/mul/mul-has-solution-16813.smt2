(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.999393579132108467177886268473230302333831787109375p25 {+ 4500868550575830 25 (6.70885e+007)}
; Y = 1.11280708958617768900012379162944853305816650390625p-693 {+ 508037966625060 -693 (2.7079e-209)}
; 1.999393579132108467177886268473230302333831787109375p25 * 1.11280708958617768900012379162944853305816650390625p-693 == 1.1124696748656461853244081794400699436664581298828125p-667
; [HW: 1.1124696748656461853244081794400699436664581298828125p-667] 

; mpf : + 506518385815405 -667
; mpfd: + 506518385815405 -667 (1.81669e-201) class: Pos. norm. non-zero
; hwf : + 506518385815405 -667 (1.81669e-201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011000 #b1111111111011000010000011111001000110100011011010110)))
(assert (= y (fp #b0 #b00101001010 #b0001110011100000111011001110100010000111100100100100)))
(assert (= r (fp #b0 #b00101100100 #b0001110011001010110100000000011101010110111101101101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
