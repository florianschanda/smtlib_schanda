(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3380415892242305542225722092553041875362396240234375p458 {+ 1522403975265975 458 (9.95881e+137)}
; Y = 1.0937718164426415423662319881259463727474212646484375p15 {+ 422310717588935 15 (35840.7)}
; 1.3380415892242305542225722092553041875362396240234375p458 * 1.0937718164426415423662319881259463727474212646484375p15 == 1.4635121795215855211580446848529390990734100341796875p473
; [HW: 1.4635121795215855211580446848529390990734100341796875p473] 

; mpf : + 2087473278975099 473
; mpfd: + 2087473278975099 473 (3.56931e+142) class: Pos. norm. non-zero
; hwf : + 2087473278975099 473 (3.56931e+142) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111001001 #b0101011010001001111001001100001001100111111010110111)))
(assert (= y (fp #b0 #b10000001110 #b0001100000000001011011100000010011101000010111000111)))
(assert (= r (fp #b0 #b10111011000 #b0111011010101000101110111111010001010111110001111011)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
