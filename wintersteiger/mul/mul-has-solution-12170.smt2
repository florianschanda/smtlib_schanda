(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.345474549527306606933052535168826580047607421875p65 {+ 1555879052517168 65 (4.96392e+019)}
; Y = 1.2551431629940090761721194212441332638263702392578125p937 {+ 1149062653785949 937 (1.45814e+282)}
; 1.345474549527306606933052535168826580047607421875p65 * 1.2551431629940090761721194212441332638263702392578125p937 == 1.6887631818216430890089441163581795990467071533203125p1002
; [HW: 1.6887631818216430890089441163581795990467071533203125p1002] 

; mpf : + 3101913608998469 1002
; mpfd: + 3101913608998469 1002 (7.2381e+301) class: Pos. norm. non-zero
; hwf : + 3101913608998469 1002 (7.2381e+301) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000000 #b0101100001110001000001010010001111010001111100110000)))
(assert (= y (fp #b0 #b11110101000 #b0100000101010001000011111111010011011011011101011101)))
(assert (= r (fp #b0 #b11111101001 #b1011000001010010110010001010110010011100111001000101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
