(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7359307245400170671700834645889699459075927734375p259 {+ 3314337336808920 259 (1.60806e+078)}
; Y = 1.732496654506643363191642492893151938915252685546875p-411 {+ 3298871660286254 -411 (3.276e-124)}
; 1.7359307245400170671700834645889699459075927734375p259 * 1.732496654506643363191642492893151938915252685546875p-411 == 1.5037470863604365245436156328651122748851776123046875p-151
; [HW: 1.5037470863604365245436156328651122748851776123046875p-151] 

; mpf : + 2268675190421835 -151
; mpfd: + 2268675190421835 -151 (5.268e-046) class: Pos. norm. non-zero
; hwf : + 2268675190421835 -151 (5.268e-046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100000010 #b1011110001100101111101001011101000000101010111011000)))
(assert (= y (fp #b0 #b01001100100 #b1011101110000100111001101001011110001001000100101110)))
(assert (= r (fp #b0 #b01101101000 #b1000000011110101100100011010110101011111100101001011)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
