(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2592834659683458387036125714075751602649688720703125p45 {+ 1167708920718373 45 (4.43071e+013)}
; Y = -1.32356020247953409807450952939689159393310546875p378 {- 1457185607318752 378 (-8.14858e+113)}
; 1.2592834659683458387036125714075751602649688720703125p45 * -1.32356020247953409807450952939689159393310546875p378 == -1.6667374791961930835526572991511784493923187255859375p423
; [HW: -1.6667374791961930835526572991511784493923187255859375p423] 

; mpf : - 3002718662861919 423
; mpfd: - 3002718662861919 423 (-3.6104e+127) class: Neg. norm. non-zero
; hwf : - 3002718662861919 423 (-3.6104e+127) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101100 #b0100001001100000011001101011011010111010010000100101)))
(assert (= y (fp #b1 #b10101111001 #b0101001011010100110101110110011111101111110011100000)))
(assert (= r (fp #b1 #b10110100110 #b1010101010101111010011101011010000101010010001011111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
