(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.26875721985529477109366780496202409267425537109375p-112 {+ 1210374915193436 -112 (2.44354e-034)}
; Y = -1.796400963690468532973909532302059233188629150390625p-456 {- 3586671083313898 -456 (-9.6544e-138)}
; 1.26875721985529477109366780496202409267425537109375p-112 * -1.796400963690468532973909532302059233188629150390625p-456 == -1.139598346218645641414468627772293984889984130859375p-567
; [HW: -1.139598346218645641414468627772293984889984130859375p-567] 

; mpf : - 628695060011830 -567
; mpfd: - 628695060011830 -567 (-2.35909e-171) class: Neg. norm. non-zero
; hwf : - 628695060011830 -567 (-2.35909e-171) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110001111 #b0100010011001101010001011110110111010111101001011100)))
(assert (= y (fp #b1 #b01000110111 #b1100101111100000111011101111110110001101101011101010)))
(assert (= r (fp #b1 #b00111001000 #b0010001110111100101101111001101110010101101100110110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
