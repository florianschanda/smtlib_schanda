(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6470473016935052168463471389259211719036102294921875p338 {+ 2914041986797955 338 (9.22241e+101)}
; Y = 1.34445565197054595074632743489928543567657470703125p695 {+ 1551290345860212 695 (2.21001e+209)}
; 1.6470473016935052168463471389259211719036102294921875p338 * 1.34445565197054595074632743489928543567657470703125p695 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010001 #b1010010110100100111001000101011110111101000110000011)))
(assert (= y (fp #b0 #b11010110110 #b0101100000101110001111101110000000100010110001110100)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
