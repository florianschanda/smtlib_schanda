(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.54460423336213015232942780130542814731597900390625p273 {- 2452679422434084 273 (-2.34426e+082)}
; Y = -1.8568458105198859531270727529772557318210601806640625p589 {- 3858890472971329 589 (-3.76221e+177)}
; -1.54460423336213015232942780130542814731597900390625p273 * -1.8568458105198859531270727529772557318210601806640625p589 == 1.4340459498148756534163794640335254371166229248046875p863
; [HW: 1.4340459498148756534163794640335254371166229248046875p863] 

; mpf : + 1954769177847947 863
; mpfd: + 1954769177847947 863 (8.81961e+259) class: Pos. norm. non-zero
; hwf : + 1954769177847947 863 (8.81961e+259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010000 #b1000101101101011001011101101101110001101101100100100)))
(assert (= y (fp #b1 #b11001001100 #b1101101101011010001111110011110111100101110001000001)))
(assert (= r (fp #b0 #b11101011110 #b0110111100011101101000101010011101101010100010001011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
