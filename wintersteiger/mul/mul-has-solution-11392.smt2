(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.70146365803958499185455366387031972408294677734375p-597 {- 3159111468961020 -597 (-3.28031e-180)}
; Y = -1.4940071464556028413284138878225348889827728271484375p-291 {- 2224810400695815 -291 (-3.75512e-088)}
; -1.70146365803958499185455366387031972408294677734375p-597 * -1.4940071464556028413284138878225348889827728271484375p-291 == 1.270999432272815976574520391295664012432098388671875p-887
; [HW: 1.270999432272815976574520391295664012432098388671875p-887] 

; mpf : + 1220472942201470 -887
; mpfd: + 1220472942201470 -887 (1.2318e-267) class: Pos. norm. non-zero
; hwf : + 1220472942201470 -887 (1.2318e-267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110101010 #b1011001110010011000111110100111010011100110011111100)))
(assert (= y (fp #b1 #b01011011100 #b0111111001110111010000001001101000000100011000000111)))
(assert (= r (fp #b0 #b00010001000 #b0100010101100000001110000000001011011000101001111110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
