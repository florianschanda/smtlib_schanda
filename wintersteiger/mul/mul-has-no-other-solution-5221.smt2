(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.593936898819123371140449307858943939208984375p877 {- 2674853996203392 877 (-1.60612e+264)}
; Y = 1.865652758539283251337792535196058452129364013671875p474 {+ 3898553440789758 474 (9.10015e+142)}
; -1.593936898819123371140449307858943939208984375p877 * 1.865652758539283251337792535196058452129364013671875p474 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101100 #b1001100000001100001111111010010001010000110110000000)))
(assert (= y (fp #b0 #b10111011001 #b1101110110011011011010110100111110011110010011111110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
