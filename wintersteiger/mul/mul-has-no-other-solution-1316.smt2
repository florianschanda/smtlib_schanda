(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.746915772820095913431259759818203747272491455078125p-311 {- 3363809596149730 -311 (-4.18739e-094)}
; Y = -1.0489177782703500430017129474435932934284210205078125p12 {- 220306087990141 12 (-4296.37)}
; -1.746915772820095913431259759818203747272491455078125p-311 * -1.0489177782703500430017129474435932934284210205078125p12 == 1.83237101125188672767762909643352031707763671875p-299
; [HW: 1.83237101125188672767762909643352031707763671875p-299] 

; mpf : + 3748665776108000 -299
; mpfd: + 3748665776108000 -299 (1.79906e-090) class: Pos. norm. non-zero
; hwf : + 3748665776108000 -299 (1.79906e-090) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011001000 #b1011111100110101110111110100000100100000111111100010)))
(assert (= y (fp #b1 #b10000001011 #b0000110010000101111000000010000111011101001101111101)))
(assert (= r (fp #b0 #b01011010100 #b1101010100010110010001000011111101110111000111100000)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
