(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6942137463647302109137626757728867232799530029296875p788 {- 3126460769443675 788 (-2.75807e+237)}
; Y = -1.4675648626685029451977015924057923257350921630859375p153 {- 2105724941285407 153 (-1.67566e+046)}
; -1.6942137463647302109137626757728867232799530029296875p788 * -1.4675648626685029451977015924057923257350921630859375p153 == 1.2431842820074223698867399434675462543964385986328125p942
; [HW: 1.2431842820074223698867399434675462543964385986328125p942] 

; mpf : + 1095204641830989 942
; mpfd: + 1095204641830989 942 (4.62159e+283) class: Pos. norm. non-zero
; hwf : + 1095204641830989 942 (4.62159e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010011 #b1011000110110111111111011111100100010001111101011011)))
(assert (= y (fp #b1 #b10010011000 #b0111011110110010010101001011000111101011100000011111)))
(assert (= r (fp #b0 #b11110101101 #b0011111001000001010100110011101000011111100001001101)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
