(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0286020052002704527893683916772715747356414794921875p-272 {- 128811979961987 -272 (-1.35547e-082)}
; Y = -1.58764188359171587450191509560681879520416259765625p352 {- 2646503767970948 352 (-1.4565e+106)}
; -1.0286020052002704527893683916772715747356414794921875p-272 * -1.58764188359171587450191509560681879520416259765625p352 == 1.6330516250023732194307513054809533059597015380859375p80
; [HW: 1.6330516250023732194307513054809533059597015380859375p80] 

; mpf : + 2851011062466975 80
; mpfd: + 2851011062466975 80 (1.97424e+024) class: Pos. norm. non-zero
; hwf : + 2851011062466975 80 (1.97424e+024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101111 #b0000011101010010011101100000010011101111011010000011)))
(assert (= y (fp #b1 #b10101011111 #b1001011001101111101100101100111111001001010010000100)))
(assert (= r (fp #b0 #b10001001111 #b1010001000001111101010111101101000010000100110011111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
