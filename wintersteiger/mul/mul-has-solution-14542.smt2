(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.322283345851586577879288597614504396915435791015625p302 {- 1451435156284922 302 (-1.07742e+091)}
; Y = -1.5799933166744128953951076255179941654205322265625p34 {- 2612057684852264 34 (-2.71441e+010)}
; -1.322283345851586577879288597614504396915435791015625p302 * -1.5799933166744128953951076255179941654205322265625p34 == 1.0445994245976939485132106710807420313358306884765625p337
; [HW: 1.0445994245976939485132106710807420313358306884765625p337] 

; mpf : + 200857951999113 337
; mpfd: + 200857951999113 337 (2.92455e+101) class: Pos. norm. non-zero
; hwf : + 200857951999113 337 (2.92455e+101) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100101101 #b0101001010000001001010010100111001111010010111111010)))
(assert (= y (fp #b1 #b10000100001 #b1001010001111010011100010010011100000011111000101000)))
(assert (= r (fp #b0 #b10101010000 #b0000101101101010110111100010111000010001010010001001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
