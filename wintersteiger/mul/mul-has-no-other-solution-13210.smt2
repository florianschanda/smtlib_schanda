(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.94476370167353618256811387254856526851654052734375p-197 {- 4254837454810108 -197 (-9.68184e-060)}
; Y = -1.9598659755450338337823268375359475612640380859375p-218 {- 4322852049790232 -218 (-4.65251e-066)}
; -1.94476370167353618256811387254856526851654052734375p-197 * -1.9598659755450338337823268375359475612640380859375p-218 == 1.9057381046924881662363304712926037609577178955078125p-414
; [HW: 1.9057381046924881662363304712926037609577178955078125p-414] 

; mpf : + 4079081790788349 -414
; mpfd: + 4079081790788349 -414 (4.50448e-125) class: Pos. norm. non-zero
; hwf : + 4079081790788349 -414 (4.50448e-125) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111010 #b1111000111011100000010001011000100100010101111111100)))
(assert (= y (fp #b1 #b01100100101 #b1111010110111001110001101100110110000010010100011000)))
(assert (= r (fp #b0 #b01001100001 #b1110011111011110011100111101001001100101001011111101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
