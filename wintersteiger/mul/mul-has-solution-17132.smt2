(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.691179730257742708232626682729460299015045166015625p842 {+ 3112796775634810 842 (4.95959e+253)}
; Y = -1.077880704206681361512210060027427971363067626953125p729 {- 350743510444562 729 (-3.04395e+219)}
; 1.691179730257742708232626682729460299015045166015625p842 * -1.077880704206681361512210060027427971363067626953125p729 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001001 #b1011000011110001001001111010000100011101011101111010)))
(assert (= y (fp #b1 #b11011011000 #b0001001111101111111111010110010110001110101000010010)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
