(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4765746413508946677239919154089875519275665283203125p-615 {+ 2146301377202117 -615 (1.08595e-185)}
; Y = 1.1396375887599619058931921244948171079158782958984375p107 {+ 628871792706279 107 (1.84917e+032)}
; 1.4765746413508946677239919154089875519275665283203125p-615 * 1.1396375887599619058931921244948171079158782958984375p107 == 1.6827599638932391190593307328526861965656280517578125p-508
; [HW: 1.6827599638932391190593307328526861965656280517578125p-508] 

; mpf : + 3074877518973085 -508
; mpfd: + 3074877518973085 -508 (2.0081e-153) class: Pos. norm. non-zero
; hwf : + 3074877518973085 -508 (2.0081e-153) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011000 #b0111101000000000110010111011001010110100011111000101)))
(assert (= y (fp #b0 #b10001101010 #b0010001110111111010010011111110100000100001011100111)))
(assert (= r (fp #b0 #b01000000011 #b1010111011001001010110110110001111110000100010011101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
