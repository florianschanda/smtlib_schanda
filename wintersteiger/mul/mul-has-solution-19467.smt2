(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.043097204280968970380172322620637714862823486328125p-1003 {- 194092553140482 -1003 (-1.21686e-302)}
; Y = 1.9380351687461807586032591643743216991424560546875p-833 {+ 4224534836425720 -833 (3.38357e-251)}
; -1.043097204280968970380172322620637714862823486328125p-1003 * 1.9380351687461807586032591643743216991424560546875p-833 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000010100 #b0000101100001000011010110001101011101111100100000010)))
(assert (= y (fp #b0 #b00010111110 #b1111000000100011000100101010010001000011001111111000)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
