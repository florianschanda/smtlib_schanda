(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7169416560138299754356694393209181725978851318359375p-163 {- 3228818174870271 -163 (-1.46847e-049)}
; Y = 1.7217321835767613880108228840981610119342803955078125p-455 {+ 3250392793017597 -455 (1.85062e-137)}
; -1.7169416560138299754356694393209181725978851318359375p-163 * 1.7217321835767613880108228840981610119342803955078125p-455 == -1.4780568532412960980337857108679600059986114501953125p-617
; [HW: -1.4780568532412960980337857108679600059986114501953125p-617] 

; mpf : - 2152976666119413 -617
; mpfd: - 2152976666119413 -617 (-2.71759e-186) class: Neg. norm. non-zero
; hwf : - 2152976666119413 -617 (-2.71759e-186) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101011100 #b1011011110001001011111010000010110111000001011111111)))
(assert (= y (fp #b0 #b01000111000 #b1011100011000011011100001011110011101110110011111101)))
(assert (= r (fp #b1 #b00110010110 #b0111101001100001111011110001011001001100110011110101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
