(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.54541143425885962869870127178728580474853515625p506 {- 2456314732091808 506 (-3.23759e+152)}
; Y = 1.20944116425249692525767386541701853275299072265625p400 {+ 943239149283588 400 (3.12308e+120)}
; -1.54541143425885962869870127178728580474853515625p506 * 1.20944116425249692525767386541701853275299072265625p400 == -1.8690842042991564486698052860447205603122711181640625p906
; [HW: -1.8690842042991564486698052860447205603122711181640625p906] 

; mpf : - 3914007298635265 906
; mpfd: - 3914007298635265 906 (-1.01113e+273) class: Neg. norm. non-zero
; hwf : - 3914007298635265 906 (-1.01113e+273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111111001 #b1000101110100000000101010111000100000001100110100000)))
(assert (= y (fp #b0 #b10110001111 #b0011010110011101111011111010011011100110100100000100)))
(assert (= r (fp #b1 #b11110001001 #b1101111001111100010011010110101011101111011000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
