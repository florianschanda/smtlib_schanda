(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5616246216058942142268506358959712088108062744140625p241 {+ 2529332436586401 241 (5.5183e+072)}
; Y = -1.095520155247670768261514240293763577938079833984375p-990 {- 430184535579782 -990 (-1.04695e-298)}
; 1.5616246216058942142268506358959712088108062744140625p241 * -1.095520155247670768261514240293763577938079833984375p-990 == -1.7107912479002742589528907046769745647907257080078125p-749
; [HW: -1.7107912479002742589528907046769745647907257080078125p-749] 

; mpf : - 3201119199181885 -749
; mpfd: - 3201119199181885 -749 (-5.77737e-226) class: Neg. norm. non-zero
; hwf : - 3201119199181885 -749 (-5.77737e-226) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110000 #b1000111111000110101000011001011001101100111110100001)))
(assert (= y (fp #b1 #b00000100001 #b0001100001110100000000100100011011100101110010000110)))
(assert (= r (fp #b1 #b00100010010 #b1011010111110110011010100100110000000011110000111101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
