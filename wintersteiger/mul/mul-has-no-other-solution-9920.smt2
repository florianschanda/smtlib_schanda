(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.423500309254190909769022255204617977142333984375p694 {- 1907275834948464 694 (-1.16997e+209)}
; Y = -1.9111475034163978303780595524585805833339691162109375p206 {- 4103443556865647 206 (-1.9655e+062)}
; -1.423500309254190909769022255204617977142333984375p694 * -1.9111475034163978303780595524585805833339691162109375p206 == 1.360259531071808414282031662878580391407012939453125p901
; [HW: 1.360259531071808414282031662878580391407012939453125p901] 

; mpf : + 1622464689891666 901
; mpfd: + 1622464689891666 901 (2.29958e+271) class: Pos. norm. non-zero
; hwf : + 1622464689891666 901 (2.29958e+271) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110101 #b0110110001101010100001000010101000010111101101110000)))
(assert (= y (fp #b1 #b10011001101 #b1110100101000000111101100111100100000001011001101111)))
(assert (= r (fp #b0 #b11110000100 #b0101110000111001111101111111100000000110100101010010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
