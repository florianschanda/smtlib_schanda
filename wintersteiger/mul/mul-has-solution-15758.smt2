(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3926754711166180467074582338682375848293304443359375p264 {- 1768453105398335 264 (-4.12828e+079)}
; Y = -1.0151379428857716380463216410134918987751007080078125p-731 {- 68175233939517 -731 (-8.98666e-221)}
; -1.3926754711166180467074582338682375848293304443359375p264 * -1.0151379428857716380463216410134918987751007080078125p-731 == 1.4137577128567964113159405314945615828037261962890625p-467
; [HW: 1.4137577128567964113159405314945615828037261962890625p-467] 

; mpf : + 1863399081443537 -467
; mpfd: + 1863399081443537 -467 (3.70994e-141) class: Pos. norm. non-zero
; hwf : + 1863399081443537 -467 (3.70994e-141) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000111 #b0110010010000110011000010011001001100011001000111111)))
(assert (= y (fp #b1 #b00100100100 #b0000001111100000000101001000100110011111100000111101)))
(assert (= r (fp #b0 #b01000101100 #b0110100111101100000001101000010100110000000011010001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
