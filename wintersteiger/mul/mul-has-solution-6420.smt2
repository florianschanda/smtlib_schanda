(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5087214337243664008525456665665842592716217041015625p-609 {- 2291077659356441 -609 (-7.10136e-184)}
; Y = 1.6913478194672908472284689196385443210601806640625p654 {+ 3113553782136296 654 (1.2643e+197)}
; -1.5087214337243664008525456665665842592716217041015625p-609 * 1.6913478194672908472284689196385443210601806640625p654 == -1.275886353556635821604459124500863254070281982421875p46
; [HW: -1.275886353556635821604459124500863254070281982421875p46] 

; mpf : - 1242481679074270 46
; mpfd: - 1242481679074270 46 (-8.97825e+013) class: Neg. norm. non-zero
; hwf : - 1242481679074270 46 (-8.97825e+013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011110 #b1000001000111011100100010110000010011110110100011001)))
(assert (= y (fp #b0 #b11010001101 #b1011000011111100001010111011001011000101110111101000)))
(assert (= r (fp #b1 #b10000101101 #b0100011010100000011111001111000111110000001111011110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
