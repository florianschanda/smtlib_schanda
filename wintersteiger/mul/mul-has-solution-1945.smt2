(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8267600299321962165066679517622105777263641357421875p1021 {- 3723396162727459 1021 (-4.10494e+307)}
; Y = 1.20249729035727792592069818056188523769378662109375p-776 {+ 911966721396572 -776 (3.02557e-234)}
; -1.8267600299321962165066679517622105777263641357421875p1021 * 1.20249729035727792592069818056188523769378662109375p-776 == -1.098336993063222966071634800755418837070465087890625p246
; [HW: -1.098336993063222966071634800755418837070465087890625p246] 

; mpf : - 442870445316266 246
; mpfd: - 442870445316266 246 (-1.24198e+074) class: Neg. norm. non-zero
; hwf : - 442870445316266 246 (-1.24198e+074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111100 #b1101001110100110100010111001101000110010111000100011)))
(assert (= y (fp #b0 #b00011110111 #b0011001111010110110111001100011110011100111101011100)))
(assert (= r (fp #b1 #b10011110101 #b0001100100101100100111001111100100110001100010101010)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
