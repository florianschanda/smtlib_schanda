(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.742029968184029886657526731141842901706695556640625p-385 {- 3341805888211338 -385 (-2.21059e-116)}
; Y = -1.96694232399466972793788954732008278369903564453125p-513 {- 4354721090031156 -513 (-7.33506e-155)}
; -1.742029968184029886657526731141842901706695556640625p-385 * -1.96694232399466972793788954732008278369903564453125p-513 == 1.713236237044128085216243562172167003154754638671875p-897
; [HW: 1.713236237044128085216243562172167003154754638671875p-897] 

; mpf : + 3212130451379070 -897
; mpfd: + 3212130451379070 -897 (1.62148e-270) class: Pos. norm. non-zero
; hwf : + 3212130451379070 -897 (1.62148e-270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001111110 #b1011110111110101101011010000111000000000100110001010)))
(assert (= y (fp #b1 #b00111111110 #b1111011110001001100010000011101010101100111000110100)))
(assert (= r (fp #b0 #b00001111110 #b1011011010010110101001100110100001101101001101111110)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
