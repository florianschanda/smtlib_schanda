(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.92703804109064069649548400775529444217681884765625p82 {+ 4175008176414084 82 (9.31858e+024)}
; Y = 1.292489856211982424127882040920667350292205810546875p-112 {+ 1317257207445934 -112 (2.48924e-034)}
; 1.92703804109064069649548400775529444217681884765625p82 * 1.292489856211982424127882040920667350292205810546875p-112 == 1.24533856032213119391371947131119668483734130859375p-29
; [HW: 1.24533856032213119391371947131119668483734130859375p-29] 

; mpf : + 1104906648846364 -29
; mpfd: + 1104906648846364 -29 (2.31962e-009) class: Pos. norm. non-zero
; hwf : + 1104906648846364 -29 (2.31962e-009) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001010001 #b1110110101010010010111010111010010100001110110000100)))
(assert (= y (fp #b0 #b01110001111 #b0100101011100000100111010111111011010111100110101110)))
(assert (= r (fp #b0 #b01111100010 #b0011111011001110100000100000010100001000000000011100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
