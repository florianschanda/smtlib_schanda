(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.41555020314027313332871926832012832164764404296875p771 {- 1871471740016268 771 (-1.75813e+232)}
; Y = 1.74189204546408848983674033661372959613800048828125p370 {+ 3341184739501204 370 (4.18909e+111)}
; -1.41555020314027313332871926832012832164764404296875p771 * 1.74189204546408848983674033661372959613800048828125p370 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100000010 #b0110101001100001011111111000010001010101011010001100)))
(assert (= y (fp #b0 #b10101110001 #b1011110111101100101000110001100001101110010010010100)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
