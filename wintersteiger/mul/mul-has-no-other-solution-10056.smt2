(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.304949493315307851304396535851992666721343994140625p887 {+ 1373370424461642 887 (1.34648e+267)}
; Y = 1.8842040967695370401457921616383828222751617431640625p149 {+ 3982101240730753 149 (1.34461e+045)}
; 1.304949493315307851304396535851992666721343994140625p887 * 1.8842040967695370401457921616383828222751617431640625p149 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110110 #b0100111000010001001010111000010010111000100101001010)))
(assert (= y (fp #b0 #b10010010100 #b1110001001011011001100110001111010011101010010000001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
