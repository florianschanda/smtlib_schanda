(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5782135486354078590665039882878772914409637451171875p578 {+ 2604042322174995 578 (1.56136e+174)}
; Y = 1.1684013410012654698988399104564450681209564208984375p398 {+ 758412216581991 398 (7.54276e+119)}
; 1.5782135486354078590665039882878772914409637451171875p578 * 1.1684013410012654698988399104564450681209564208984375p398 == 1.8439868266119763262622655020095407962799072265625p976
; [HW: 1.8439868266119763262622655020095407962799072265625p976] 

; mpf : + 3800978757835304 976
; mpfd: + 3800978757835304 976 (1.1777e+294) class: Pos. norm. non-zero
; hwf : + 3800978757835304 976 (1.1777e+294) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000001 #b1001010000000101110011011001100101111110010000010011)))
(assert (= y (fp #b0 #b10110001101 #b0010101100011100010110011010110000110011111101100111)))
(assert (= r (fp #b0 #b11111001111 #b1101100000001111100001010100101010001101101000101000)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
