(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0195088416569648703813300016918219625949859619140625p289 {+ 87860012016737 289 (1.01405e+087)}
; Y = 1.36914668997839239494851426570676267147064208984375p197 {+ 1662488895431740 197 (2.75017e+059)}
; 1.0195088416569648703813300016918219625949859619140625p289 * 1.36914668997839239494851426570676267147064208984375p197 == 1.395857155958338591261735928128473460674285888671875p486
; [HW: 1.395857155958338591261735928128473460674285888671875p486] 

; mpf : + 1782782140065918 486
; mpfd: + 1782782140065918 486 (2.78881e+146) class: Pos. norm. non-zero
; hwf : + 1782782140065918 486 (2.78881e+146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100000 #b0000010011111110100010000000110011100110010001100001)))
(assert (= y (fp #b0 #b10011000100 #b0101111010000000011001011100000011100010010000111100)))
(assert (= r (fp #b0 #b10111100101 #b0110010101010110111001010000001010111010100001111110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
