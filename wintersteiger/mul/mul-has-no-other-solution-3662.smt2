(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2880397214933443361672971150255762040615081787109375p-843 {+ 1297215582385327 -843 (2.19605e-254)}
; Y = 1.6200753707699575567602323644678108394145965576171875p-271 {+ 2792571208741203 -271 (4.26979e-082)}
; 1.2880397214933443361672971150255762040615081787109375p-843 * 1.6200753707699575567602323644678108394145965576171875p-271 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110100 #b0100100110111100111110001001111111000011010010101111)))
(assert (= y (fp #b0 #b01011110000 #b1001111010111101010000100110111010000011000101010011)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
