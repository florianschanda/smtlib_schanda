(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8366774022044081160487394299707375466823577880859375p618 {- 3768060036797087 618 (-1.99788e+186)}
; Y = -1.8339166711169585521901126412558369338512420654296875p-520 {- 3755626809300379 -520 (-5.34296e-157)}
; -1.8366774022044081160487394299707375466823577880859375p618 * -1.8339166711169585521901126412558369338512420654296875p-520 == 1.6841566536832257572342541607213206589221954345703125p99
; [HW: 1.6841566536832257572342541607213206589221954345703125p99] 

; mpf : + 3081167650590821 99
; mpfd: + 3081167650590821 99 (1.06746e+030) class: Pos. norm. non-zero
; hwf : + 3081167650590821 99 (1.06746e+030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001101001 #b1101011000110000011111010111111111000101001010011111)))
(assert (= y (fp #b1 #b00111110111 #b1101010101111011100100000001111000001001010110011011)))
(assert (= r (fp #b0 #b10001100010 #b1010111100100100111000111111010011101001000001100101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
