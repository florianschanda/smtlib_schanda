(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.272667239530628879862206304096616804599761962890625p-46 {+ 1227984078346282 -46 (1.80857e-014)}
; Y = -1.2665899591855531713946447780472226440906524658203125p49 {- 1200614440848773 49 (-7.13027e+014)}
; 1.272667239530628879862206304096616804599761962890625p-46 * -1.2665899591855531713946447780472226440906524658203125p49 == -1.6119475469738897555060930244508199393749237060546875p3
; [HW: -1.6119475469738897555060930244508199393749237060546875p3] 

; mpf : - 2755966744521899 3
; mpfd: - 2755966744521899 3 (-12.8956) class: Neg. norm. non-zero
; hwf : - 2755966744521899 3 (-12.8956) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010001 #b0100010111001101100001010010110001111001100000101010)))
(assert (= y (fp #b1 #b10000110000 #b0100010000111111001111010101010000100100110110000101)))
(assert (= r (fp #b1 #b10000000010 #b1001110010101000100110000010110100011110110010101011)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
