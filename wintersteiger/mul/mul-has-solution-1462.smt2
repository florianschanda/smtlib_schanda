(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.77907693454745352568124872050248086452484130859375p-781 {+ 3508650592120860 -781 (1.39884e-235)}
; Y = -1.065170731619115240818018719437532126903533935546875p581 {- 293502882635310 581 (-8.43037e+174)}
; 1.77907693454745352568124872050248086452484130859375p-781 * -1.065170731619115240818018719437532126903533935546875p581 == -1.895020679978603794779701274819672107696533203125p-200
; [HW: -1.895020679978603794779701274819672107696533203125p-200] 

; mpf : - 4030814800840528 -200
; mpfd: - 4030814800840528 -200 (-1.17927e-060) class: Neg. norm. non-zero
; hwf : - 4030814800840528 -200 (-1.17927e-060) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110010 #b1100011101110001100101100000001011110011000000011100)))
(assert (= y (fp #b1 #b11001000100 #b0001000010101111000001110111000011110101111000101110)))
(assert (= r (fp #b1 #b01100110111 #b1110010100100000000100110100010111000000011101010000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
