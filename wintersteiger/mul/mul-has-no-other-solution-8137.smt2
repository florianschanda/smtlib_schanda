(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4981819471142883148928603986860252916812896728515625p-213 {+ 2243612031386617 -213 (1.13809e-064)}
; Y = -1.5216067586450350290760979987680912017822265625p477 {- 2349108003867712 477 (-5.93759e+143)}
; 1.4981819471142883148928603986860252916812896728515625p-213 * -1.5216067586450350290760979987680912017822265625p477 == -1.13982188820453966826562464120797812938690185546875p265
; [HW: -1.13982188820453966826562464120797812938690185546875p265] 

; mpf : - 629701803616204 265
; mpfd: - 629701803616204 265 (-6.7575e+079) class: Neg. norm. non-zero
; hwf : - 629701803616204 265 (-6.7575e+079) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100101010 #b0111111110001000110110100010001001010000001111111001)))
(assert (= y (fp #b1 #b10111011100 #b1000010110001000000001010100000111000000110001000000)))
(assert (= r (fp #b1 #b10100001000 #b0010001111001011010111100000010100011010011111001100)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
