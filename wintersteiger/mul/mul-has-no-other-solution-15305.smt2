(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8720272100956198979559985673404298722743988037109375p1022 {- 3927261418443567 1022 (-8.41333e+307)}
; Y = 1.2781705822871394229167663070256821811199188232421875p865 {+ 1252768930733795 865 (3.14438e+260)}
; -1.8720272100956198979559985673404298722743988037109375p1022 * 1.2781705822871394229167663070256821811199188232421875p865 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111101 #b1101111100111101001011001101110010010101001100101111)))
(assert (= y (fp #b0 #b11101100000 #b0100011100110110001011111111000110100001111011100011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
