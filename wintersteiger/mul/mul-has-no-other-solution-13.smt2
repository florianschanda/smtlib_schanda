(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.650536545739118565734315779991447925567626953125p772 {- 2929756144981584 772 (-4.09998e+232)}
; Y = -1.8289071040362927522693325954605825245380401611328125p-653 {- 3733065724862605 -653 (-4.89333e-197)}
; -1.650536545739118565734315779991447925567626953125p772 * -1.8289071040362927522693325954605825245380401611328125p-653 == 1.5093390069868986014256506678066216409206390380859375p120
; [HW: 1.5093390069868986014256506678066216409206390380859375p120] 

; mpf : + 2293858962071455 120
; mpfd: + 2293858962071455 120 (2.00626e+036) class: Pos. norm. non-zero
; hwf : + 2293858962071455 120 (2.00626e+036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100000011 #b1010011010001001100100000010010011001101011001010000)))
(assert (= y (fp #b1 #b00101110010 #b1101010000110011010000011000011101000010000010001101)))
(assert (= r (fp #b0 #b10001110111 #b1000001001100100000010101000100110010101111110011111)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
