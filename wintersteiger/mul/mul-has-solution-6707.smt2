(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5040309076906279717178449573111720383167266845703125p-812 {+ 2269953408058725 -812 (5.50681e-245)}
; Y = 1.1882621734791982692769352070172317326068878173828125p873 {+ 847857454328877 873 (7.48339e+262)}
; 1.5040309076906279717178449573111720383167266845703125p-812 * 1.1882621734791982692769352070172317326068878173828125p873 == 1.7871830353523570078522197945858351886272430419921875p61
; [HW: 1.7871830353523570078522197945858351886272430419921875p61] 

; mpf : + 3545157224685251 61
; mpfd: + 3545157224685251 61 (4.12096e+018) class: Pos. norm. non-zero
; hwf : + 3545157224685251 61 (4.12096e+018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010011 #b1000000100001000001010110110100010110100010101100101)))
(assert (= y (fp #b0 #b11101101000 #b0011000000110001111100110010011000101010110000101101)))
(assert (= r (fp #b0 #b10000111100 #b1100100110000100110100111101000011001101111011000011)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
