(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3937662422596777123118272356805391609668731689453125p339 {- 1773365501911765 339 (-1.56084e+102)}
; Y = -1.9827059984323991415067212074063718318939208984375p441 {- 4425714368354904 441 (-1.12587e+133)}
; -1.3937662422596777123118272356805391609668731689453125p339 * -1.9827059984323991415067212074063718318939208984375p441 == 1.3817143444704236276976416775141842663288116455078125p781
; [HW: 1.3817143444704236276976416775141842663288116455078125p781] 

; mpf : + 1719088579518973 781
; mpfd: + 1719088579518973 781 (1.7573e+235) class: Pos. norm. non-zero
; hwf : + 1719088579518973 781 (1.7573e+235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010010 #b0110010011001101110111010100110011000110001011010101)))
(assert (= y (fp #b1 #b10110111000 #b1111101110010010100111101100110011011001101001011000)))
(assert (= r (fp #b0 #b11100001100 #b0110000110111000000010000000000111101010000111111101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
