(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7577133083791436352072423687786795198917388916015625p-533 {- 3412437373269977 -533 (-6.25116e-161)}
; Y = -1.2277970116803642586233991096378304064273834228515625p-337 {- 1025906536919801 -337 (-4.38549e-102)}
; -1.7577133083791436352072423687786795198917388916015625p-533 * -1.2277970116803642586233991096378304064273834228515625p-337 == 1.0790575737093595076743213212466798722743988037109375p-869
; [HW: 1.0790575737093595076743213212466798722743988037109375p-869] 

; mpf : + 356043659498287 -869
; mpfd: + 356043659498287 -869 (2.74144e-262) class: Pos. norm. non-zero
; hwf : + 356043659498287 -869 (2.74144e-262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101010 #b1100000111111001011111111101011100111011011111011001)))
(assert (= y (fp #b1 #b01010101110 #b0011101001010000111001111010101101001011001011111001)))
(assert (= r (fp #b0 #b00010011010 #b0001010000111101000111011111110110010101001100101111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
