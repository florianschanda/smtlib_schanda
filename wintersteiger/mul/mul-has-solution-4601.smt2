(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1259110252281134822993635680177249014377593994140625p-1006 {- 567052846299169 -1006 (-1.64183e-303)}
; Y = -1.1804753174257516246115073954570107161998748779296875p906 {- 812788572308187 906 (-6.38606e+272)}
; -1.1259110252281134822993635680177249014377593994140625p-1006 * -1.1804753174257516246115073954570107161998748779296875p906 == 1.329110174899310603535695918253622949123382568359375p-100
; [HW: 1.329110174899310603535695918253622949123382568359375p-100] 

; mpf : + 1482180461040374 -100
; mpfd: + 1482180461040374 -100 (1.04848e-030) class: Pos. norm. non-zero
; hwf : + 1482180461040374 -100 (1.04848e-030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000010001 #b0010000000111011101101000111011110001111100000100001)))
(assert (= y (fp #b1 #b11110001001 #b0010111000110011101000010110001000010100001011011011)))
(assert (= r (fp #b0 #b01110011011 #b0101010001000000100100000111110111111001001011110110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
