(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5788832940511368096991873244405724108219146728515625p283 {- 2607058587379705 283 (-2.4538e+085)}
; Y = -1.2572323825856581702709036107989959418773651123046875p232 {- 1158471662360395 232 (-8.6771e+069)}
; -1.5788832940511368096991873244405724108219146728515625p283 * -1.2572323825856581702709036107989959418773651123046875p232 == 1.9850232056046028805695868868497200310230255126953125p515
; [HW: 1.9850232056046028805695868868497200310230255126953125p515] 

; mpf : + 4436150141712181 515
; mpfd: + 4436150141712181 515 (2.12918e+155) class: Pos. norm. non-zero
; hwf : + 4436150141712181 515 (2.12918e+155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100011010 #b1001010000110001101100100001000000100110011111111001)))
(assert (= y (fp #b1 #b10011100111 #b0100000111011001111110110011111010101101011101001011)))
(assert (= r (fp #b0 #b11000000010 #b1111110000101010011110110001010111011111011100110101)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
