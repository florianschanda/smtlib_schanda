(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3068390109708205581995343891321681439876556396484375p1003 {- 1381880055470919 1003 (-1.12023e+302)}
; Y = -1.7361065175819039296811752137728035449981689453125p-183 {- 3315129038286856 -183 (-1.41608e-055)}
; -1.3068390109708205581995343891321681439876556396484375p1003 * -1.7361065175819039296811752137728035449981689453125p-183 == 1.13440586218836525489450650638900697231292724609375p821
; [HW: 1.13440586218836525489450650638900697231292724609375p821] 

; mpf : + 605310190867932 821
; mpfd: + 605310190867932 821 (1.58633e+247) class: Pos. norm. non-zero
; hwf : + 605310190867932 821 (1.58633e+247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101010 #b0100111010001101000000000101110101000001101101000111)))
(assert (= y (fp #b1 #b01101001000 #b1011110001110001011110100000101101100011000000001000)))
(assert (= r (fp #b0 #b11100110100 #b0010001001101000011011000010111001111101010111011100)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
