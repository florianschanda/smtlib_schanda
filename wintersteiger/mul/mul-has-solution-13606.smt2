(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.427806960501820210396317634149454534053802490234375p1002 {+ 1926671267902502 1002 (6.11963e+301)}
; Y = -1.5283515046397544434597648432827554643154144287109375p15 {- 2379483639416239 15 (-50081)}
; 1.427806960501820210396317634149454534053802490234375p1002 * -1.5283515046397544434597648432827554643154144287109375p15 == -1.0910954582090355291512651092489250004291534423828125p1018
; [HW: -1.0910954582090355291512651092489250004291534423828125p1018] 

; mpf : - 410257471645357 1018
; mpfd: - 410257471645357 1018 (-3.06477e+306) class: Neg. norm. non-zero
; hwf : - 410257471645357 1018 (-3.06477e+306) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101001 #b0110110110000100110000011100100001011011010000100110)))
(assert (= y (fp #b1 #b10000001110 #b1000011101000010000010110101000100111000010110101111)))
(assert (= r (fp #b1 #b11111111001 #b0001011101010010000010000010110111010010011010101101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
