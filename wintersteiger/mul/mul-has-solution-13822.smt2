(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.539936958143637735219044770929031074047088623046875p174 {+ 2431659883499246 174 (3.68742e+052)}
; Y = 1.5515822489887785007312004381674341857433319091796875p635 {+ 2484105611010043 635 (2.21219e+191)}
; 1.539936958143637735219044770929031074047088623046875p174 * 1.5515822489887785007312004381674341857433319091796875p635 == 1.1946694244087219249905729157035239040851593017578125p810
; [HW: 1.1946694244087219249905729157035239040851593017578125p810] 

; mpf : + 876713147227549 810
; mpfd: + 876713147227549 810 (8.15726e+243) class: Pos. norm. non-zero
; hwf : + 876713147227549 810 (8.15726e+243) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010101101 #b1000101000111001010011101111100100100000111011101110)))
(assert (= y (fp #b0 #b11001111010 #b1000110100110100011111101000100001110101111111111011)))
(assert (= r (fp #b0 #b11100101001 #b0011000111010101110110101111101101011101110110011101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
