(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.99019306178544486130022050929255783557891845703125p-614 {- 4459433104081780 -614 (-2.92737e-185)}
; Y = -1.31123447647069202304237478529103100299835205078125p116 {- 1401675472258260 116 (-1.08933e+035)}
; -1.99019306178544486130022050929255783557891845703125p-614 * -1.31123447647069202304237478529103100299835205078125p116 == 1.304804878722920502553961341618560254573822021484375p-497
; [HW: 1.304804878722920502553961341618560254573822021484375p-497] 

; mpf : + 1372719138237254 -497
; mpfd: + 1372719138237254 -497 (3.18888e-150) class: Pos. norm. non-zero
; hwf : + 1372719138237254 -497 (3.18888e-150) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011001 #b1111110101111101010010101110000100011000001101110100)))
(assert (= y (fp #b1 #b10001110011 #b0100111110101101000100000000100111010100010011010100)))
(assert (= r (fp #b0 #b01000001110 #b0100111000000111101100010100100111000110101101000110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
