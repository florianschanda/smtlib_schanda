(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2062525704276956250993180219666101038455963134765625p820 {+ 928878999322377 820 (8.43402e+246)}
; Y = -1.349157130274093230326570846955291926860809326171875p963 {- 1572463921796158 963 (-1.05184e+290)}
; 1.2062525704276956250993180219666101038455963134765625p820 * -1.349157130274093230326570846955291926860809326171875p963 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100110011 #b0011010011001100111101111110110010110011111100001001)))
(assert (= y (fp #b1 #b11111000010 #b0101100101100010010111001001011110110001010000111110)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
