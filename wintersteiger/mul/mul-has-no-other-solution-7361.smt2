(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0099109746430194878286101811681874096393585205078125p-201 {- 44635061709181 -201 (-3.14235e-061)}
; Y = -1.92788596126493860793971180100925266742706298828125p701 {- 4178826869395092 701 (-2.02819e+211)}
; -1.0099109746430194878286101811681874096393585205078125p-201 * -1.92788596126493860793971180100925266742706298828125p701 == 1.9469931901416686059747007675468921661376953125p500
; [HW: 1.9469931901416686059747007675468921661376953125p500] 

; mpf : + 4264878178244416 500
; mpfd: + 4264878178244416 500 (6.37327e+150) class: Pos. norm. non-zero
; hwf : + 4264878178244416 500 (6.37327e+150) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100110110 #b0000001010001001100001101000111111110110100101111101)))
(assert (= y (fp #b1 #b11010111100 #b1110110110001001111011110011001000001100111010010100)))
(assert (= r (fp #b0 #b10111110011 #b1111001001101110001001010100110100110001011101000000)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
