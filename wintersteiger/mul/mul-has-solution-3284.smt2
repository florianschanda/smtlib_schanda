(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.10490423456848052552459193975664675235748291015625p-319 {+ 472446671712196 -319 (1.03456e-096)}
; Y = 1.6128908846344287564278374702553264796733856201171875p75 {+ 2760215159658387 75 (6.09333e+022)}
; 1.10490423456848052552459193975664675235748291015625p-319 * 1.6128908846344287564278374702553264796733856201171875p75 == 1.7820899683294830762037008753395639359951019287109375p-244
; [HW: 1.7820899683294830762037008753395639359951019287109375p-244] 

; mpf : + 3522220089938863 -244
; mpfd: + 3522220089938863 -244 (6.30392e-074) class: Pos. norm. non-zero
; hwf : + 3522220089938863 -244 (6.30392e-074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011000000 #b0001101011011011000000010000000010101110111111000100)))
(assert (= y (fp #b0 #b10001001010 #b1001110011100110011010101100000110000101011110010011)))
(assert (= r (fp #b0 #b01100001011 #b1100100000110111000011000101010010000001001110101111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
