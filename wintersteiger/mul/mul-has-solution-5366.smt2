(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.911723178082954444079177847015671432018280029296875p757 {- 4106036165079438 757 (-1.44921e+228)}
; Y = -1.6335984047435572197315423181862570345401763916015625p629 {- 2853473539505625 629 (-3.63926e+189)}
; -1.911723178082954444079177847015671432018280029296875p757 * -1.6335984047435572197315423181862570345401763916015625p629 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011110100 #b1110100101100110101100001011000011011111000110001110)))
(assert (= y (fp #b1 #b11001110100 #b1010001000110011100000010100101100101011110111011001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
