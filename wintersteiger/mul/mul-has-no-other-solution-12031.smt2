(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0266526998951570615048467516317032277584075927734375p-979 {+ 120033089316247 -979 (2.00936e-295)}
; Y = -1.4783625019869519601201091063558124005794525146484375p-68 {- 2154353185696455 -68 (-5.00889e-021)}
; 1.0266526998951570615048467516317032277584075927734375p-979 * -1.4783625019869519601201091063558124005794525146484375p-68 == -0.000000045232917411652806549682281911373138427734375p-1022
; [HW: -0.000000045232917411652806549682281911373138427734375p-1022] 

; mpf : - 203710950 -1023
; mpfd: - 203710950 -1023 (-1.00647e-315) class: Neg. denorm.
; hwf : - 203710950 -1023 (-1.00647e-315) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000101100 #b0000011011010010101101100001101001100110010110010111)))
(assert (= y (fp #b1 #b01110111011 #b0111101001110101111101110000010110101010101011000111)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000001100001001000110000111100110)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
