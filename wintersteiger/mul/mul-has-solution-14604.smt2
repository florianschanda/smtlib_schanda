(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0925464254977175215799434226937592029571533203125p-739 {+ 416792047385992 -739 (3.7781e-223)}
; Y = 1.668182025124843814722908064140938222408294677734375p432 {+ 3009224319367910 432 (1.85013e+130)}
; 1.0925464254977175215799434226937592029571533203125p-739 * 1.668182025124843814722908064140938222408294677734375p432 == 1.82256630862969171147369706886820495128631591796875p-307
; [HW: 1.82256630862969171147369706886820495128631591796875p-307] 

; mpf : + 3704509321032204 -307
; mpfd: + 3704509321032204 -307 (6.98996e-093) class: Pos. norm. non-zero
; hwf : + 3704509321032204 -307 (6.98996e-093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100011100 #b0001011110110001000111110101111011011111110110001000)))
(assert (= y (fp #b0 #b10110101111 #b1010101100001101111110100010100110101111101011100110)))
(assert (= r (fp #b0 #b01011001100 #b1101001010010011101101001010001001011011001000001100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
