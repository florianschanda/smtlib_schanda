(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6961931856919261196736670171958394348621368408203125p-824 {+ 3135375371660037 -824 (1.51621e-248)}
; Y = 1.513140076618160190236039852607063949108123779296875p-95 {+ 2310977457846414 -95 (3.8197e-029)}
; 1.6961931856919261196736670171958394348621368408203125p-824 * 1.513140076618160190236039852607063949108123779296875p-95 == 1.2832889434785410553985229853424243628978729248046875p-918
; [HW: 1.2832889434785410553985229853424243628978729248046875p-918] 

; mpf : + 1275819980288139 -918
; mpfd: + 1275819980288139 -918 (5.79146e-277) class: Pos. norm. non-zero
; hwf : + 1275819980288139 -918 (5.79146e-277) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000111 #b1011001000111001101101110111010000111110101100000101)))
(assert (= y (fp #b0 #b01110100000 #b1000001101011101001001011110011101010111100010001110)))
(assert (= r (fp #b0 #b00001101001 #b0100100010000101100111111100101110001111000010001011)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
