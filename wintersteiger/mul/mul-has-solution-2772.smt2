(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0973406218417032231826624411041848361492156982421875p880 {- 438383188254307 880 (-8.84581e+264)}
; Y = -1.25184480021327804166730857104994356632232666015625p62 {- 1134208148395716 62 (-5.77312e+018)}
; -1.0973406218417032231826624411041848361492156982421875p880 * -1.25184480021327804166730857104994356632232666015625p62 == 1.3737001515153413055969622291740961372852325439453125p942
; [HW: 1.3737001515153413055969622291740961372852325439453125p942] 

; mpf : + 1682995863112789 942
; mpfd: + 1682995863112789 942 (5.10679e+283) class: Pos. norm. non-zero
; hwf : + 1682995863112789 942 (5.10679e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101111 #b0001100011101011010100001010001101100001111001100011)))
(assert (= y (fp #b1 #b10000111101 #b0100000001111000111001101001110010010101011011000100)))
(assert (= r (fp #b0 #b11110101101 #b0101111110101010110100000010100101000100110001010101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
