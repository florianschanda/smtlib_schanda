(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1304379626042286854925578154507093131542205810546875p-297 {+ 587440359779371 -297 (4.43954e-090)}
; Y = 1.17490217452098821837580544524826109409332275390625p949 {+ 787689367999012 949 (5.59072e+285)}
; 1.1304379626042286854925578154507093131542205810546875p-297 * 1.17490217452098821837580544524826109409332275390625p949 == 1.328154020424783698928195008193142712116241455078125p652
; [HW: 1.328154020424783698928195008193142712116241455078125p652] 

; mpf : + 1477874324105186 652
; mpfd: + 1477874324105186 652 (2.48202e+196) class: Pos. norm. non-zero
; hwf : + 1477874324105186 652 (2.48202e+196) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011010110 #b0010000101100100011000011101111110001010110000101011)))
(assert (= y (fp #b0 #b11110110100 #b0010110011000110011000111000111110010001001000100100)))
(assert (= r (fp #b0 #b11010001011 #b0101010000000001111001101110000111000110011111100010)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
