(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.221505250174395929008142047678120434284210205078125p480 {- 997570962146018 480 (-3.81323e+144)}
; Y = 1.039501257791172417199732080916874110698699951171875p-661 {+ 177897849868990 -661 (1.08642e-199)}
; -1.221505250174395929008142047678120434284210205078125p480 * 1.039501257791172417199732080916874110698699951171875p-661 == -1.2697562439548051305138187672127969563007354736328125p-181
; [HW: -1.2697562439548051305138187672127969563007354736328125p-181] 

; mpf : - 1214874119755725 -181
; mpfd: - 1214874119755725 -181 (-4.14277e-055) class: Neg. norm. non-zero
; hwf : - 1214874119755725 -181 (-4.14277e-055) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011111 #b0011100010110100100100010110110101100100001011100010)))
(assert (= y (fp #b0 #b00101101010 #b0000101000011100110000010010001001011101001010111110)))
(assert (= r (fp #b1 #b01101001010 #b0100010100001110101111101100010110101101011111001101)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
