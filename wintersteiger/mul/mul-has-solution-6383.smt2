(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4127047835561625799272178483079187572002410888671875p284 {+ 1858657109437555 284 (4.39107e+085)}
; Y = 1.519467093084876818664952224935404956340789794921875p95 {+ 2339471806848286 95 (6.01923e+028)}
; 1.4127047835561625799272178483079187572002410888671875p284 * 1.519467093084876818664952224935404956340789794921875p95 == 1.073279215428591282233128367806784808635711669921875p380
; [HW: 1.073279215428591282233128367806784808635711669921875p380] 

; mpf : + 330020247298206 380
; mpfd: + 330020247298206 380 (2.64308e+114) class: Pos. norm. non-zero
; hwf : + 330020247298206 380 (2.64308e+114) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011011 #b0110100110100111000001010100110001000110110001110011)))
(assert (= y (fp #b0 #b10001011110 #b1000010011111011110010111010000000100101110100011110)))
(assert (= r (fp #b0 #b10101111011 #b0001001011000010011011010011100110111110000010011110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
