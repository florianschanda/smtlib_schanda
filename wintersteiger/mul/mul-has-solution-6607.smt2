(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.354219785144828325229582333122380077838897705078125p356 {+ 1595264092385506 356 (1.98778e+107)}
; Y = -1.0387205749232040208340777098783291876316070556640625p933 {- 174381966795713 933 (-7.54197e+280)}
; 1.354219785144828325229582333122380077838897705078125p356 * -1.0387205749232040208340777098783291876316070556640625p933 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100011 #b0101101010101110001001011101100011001011000011100010)))
(assert (= y (fp #b1 #b11110100100 #b0000100111101001100101110111001011111010001111000001)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
