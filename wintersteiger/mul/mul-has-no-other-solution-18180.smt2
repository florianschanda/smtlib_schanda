(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3330435569475931334437746045296080410480499267578125p-409 {+ 1499894838967325 -409 (1.00827e-123)}
; Y = -1.90435140285957604788791286409832537174224853515625p-59 {- 4072836640930372 -59 (-3.30352e-018)}
; 1.3330435569475931334437746045296080410480499267578125p-409 * -1.90435140285957604788791286409832537174224853515625p-59 == -1.269291683873034148888336858362890779972076416015625p-467
; [HW: -1.269291683873034148888336858362890779972076416015625p-467] 

; mpf : - 1212781927144570 -467
; mpfd: - 1212781927144570 -467 (-3.33084e-141) class: Neg. norm. non-zero
; hwf : - 1212781927144570 -467 (-3.33084e-141) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100110 #b0101010101000010010101111011000100111011110000011101)))
(assert (= y (fp #b1 #b01111000100 #b1110011110000011100100101101001101011111101001000100)))
(assert (= r (fp #b1 #b01000101100 #b0100010011110000010011001011111101010001110001111010)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
