(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.120395587949249094350534505792893469333648681640625p-287 {+ 542213525025290 -287 (4.5057e-087)}
; Y = -1.081635013877448425745342319714836776256561279296875p-1013 {- 367651418078862 -1013 (-1.23224e-305)}
; 1.120395587949249094350534505792893469333648681640625p-287 * -1.081635013877448425745342319714836776256561279296875p-1013 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100000 #b0001111011010010001111101100100011010011001000001010)))
(assert (= y (fp #b1 #b00000001010 #b0001010011100110000010000100001011001111111010001110)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
