(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.665224264018565492051493492908775806427001953125p587 {+ 2995903747551824 587 (8.4349e+176)}
; Y = 1.8662814424252387457414670279831625521183013916015625p-335 {+ 3901384781304281 -335 (2.66642e-101)}
; 1.665224264018565492051493492908775806427001953125p587 * 1.8662814424252387457414670279831625521183013916015625p-335 == 1.553888570707037342089051890070550143718719482421875p253
; [HW: 1.553888570707037342089051890070550143718719482421875p253] 

; mpf : + 2494492360640990 253
; mpfd: + 2494492360640990 253 (2.2491e+076) class: Pos. norm. non-zero
; hwf : + 2494492360640990 253 (2.2491e+076) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001010 #b1010101001001100001000110010101001110111001001010000)))
(assert (= y (fp #b0 #b01010110000 #b1101110111000100100111101110000001011001000111011001)))
(assert (= r (fp #b0 #b10011111100 #b1000110111001011101001000011000011010000100111011110)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
