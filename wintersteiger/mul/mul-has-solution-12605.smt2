(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5813615876457658426801344830892048776149749755859375p324 {- 2618219829488991 324 (-5.40443e+097)}
; Y = -1.9635466560986667428068130902829580008983612060546875p-709 {- 4339428361360043 -709 (-7.29079e-214)}
; -1.5813615876457658426801344830892048776149749755859375p324 * -1.9635466560986667428068130902829580008983612060546875p-709 == 1.5525386287523612605099287975463084876537322998046875p-384
; [HW: 1.5525386287523612605099287975463084876537322998046875p-384] 

; mpf : + 2488412762556939 -384
; mpfd: + 2488412762556939 -384 (3.94025e-116) class: Pos. norm. non-zero
; hwf : + 2488412762556939 -384 (3.94025e-116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101000011 #b1001010011010100000111001110111000010110110101011111)))
(assert (= y (fp #b1 #b00100111010 #b1111011010101010111111100110000000011101001010101011)))
(assert (= r (fp #b0 #b01001111111 #b1000110101110011001010111110110001000100101000001011)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
