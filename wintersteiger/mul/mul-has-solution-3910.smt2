(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4156180984037451953128083914634771645069122314453125p557 {- 1871777513099541 557 (-6.67811e+167)}
; Y = -1.380000026346635433327492137323133647441864013671875p5 {- 1711367977055486 5 (-44.16)}
; -1.4156180984037451953128083914634771645069122314453125p557 * -1.380000026346635433327492137323133647441864013671875p5 == 1.95355301309394224773541282047517597675323486328125p562
; [HW: 1.95355301309394224773541282047517597675323486328125p562] 

; mpf : + 4294420994447892 562
; mpfd: + 4294420994447892 562 (2.94905e+169) class: Pos. norm. non-zero
; hwf : + 4294420994447892 562 (2.94905e+169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101100 #b0110101001100101111100101001110001000101000100010101)))
(assert (= y (fp #b1 #b10000000100 #b0110000101000111101011101000010110100011010011111110)))
(assert (= r (fp #b0 #b11000110001 #b1111010000011100000011001101111000111101101000010100)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
