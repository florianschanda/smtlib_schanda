(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.29238147651517021330391798983328044414520263671875p-569 {+ 1316769108683756 -569 (6.68841e-172)}
; Y = -1.2494227599767013803244708469719626009464263916015625p719 {- 1123300248888793 719 (-3.44569e+216)}
; 1.29238147651517021330391798983328044414520263671875p-569 * -1.2494227599767013803244708469719626009464263916015625p719 == -1.6147308313303483373601920902729034423828125p150
; [HW: -1.6147308313303483373601920902729034423828125p150] 

; mpf : - 2768501542912512 150
; mpfd: - 2768501542912512 150 (-2.30462e+045) class: Neg. norm. non-zero
; hwf : - 2768501542912512 150 (-2.30462e+045) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000110 #b0100101011011001100000110010111110010110101111101100)))
(assert (= y (fp #b1 #b11011001110 #b0011111111011010001010111000010011111010010111011001)))
(assert (= r (fp #b1 #b10010010101 #b1001110101011110111111111111000001101000001000000000)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
