(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4011209268316218157224284368567168712615966796875p248 {- 1806488056609400 248 (-6.33745e+074)}
; Y = -1.64613320738850976709954920806922018527984619140625p-533 {- 2909925272026596 -533 (-5.85433e-161)}
; -1.4011209268316218157224284368567168712615966796875p248 * -1.64613320738850976709954920806922018527984619140625p-533 == 1.1532158426122496308607878745533525943756103515625p-284
; [HW: 1.1532158426122496308607878745533525943756103515625p-284] 

; mpf : + 690022811695784 -284
; mpfd: + 690022811695784 -284 (3.71015e-086) class: Pos. norm. non-zero
; hwf : + 690022811695784 -284 (3.71015e-086) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110111 #b0110011010101111110111000110111001111011101001111000)))
(assert (= y (fp #b1 #b00111101010 #b1010010101101000111111000110001010010111110111100100)))
(assert (= r (fp #b0 #b01011100011 #b0010011100111001001001110100100100111111101010101000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
