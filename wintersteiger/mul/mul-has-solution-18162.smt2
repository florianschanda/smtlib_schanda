(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.344304963365849925338579851086251437664031982421875p926 {- 1550611704716254 926 (-7.6256e+278)}
; Y = 1.6004283778752192990424418894690461456775665283203125p-840 {+ 2704089018861509 -840 (2.18293e-253)}
; -1.344304963365849925338579851086251437664031982421875p926 * 1.6004283778752192990424418894690461456775665283203125p-840 == -1.0757319059446064368756879048305563628673553466796875p87
; [HW: -1.0757319059446064368756879048305563628673553466796875p87] 

; mpf : - 341066183392187 87
; mpfd: - 341066183392187 87 (-1.66461e+026) class: Neg. norm. non-zero
; hwf : - 341066183392187 87 (-1.66461e+026) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011101 #b0101100000100100010111101011110110000001101111011110)))
(assert (= y (fp #b0 #b00010110111 #b1001100110110101101011001001011010010000011111000101)))
(assert (= r (fp #b1 #b10001010110 #b0001001101100011001010101000101101001011101110111011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
