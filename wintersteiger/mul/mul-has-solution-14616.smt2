(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5525427224930599123808860895223915576934814453125p205 {+ 2488431199126024 205 (7.98349e+061)}
; Y = -1.012306266883598926398235562373884022235870361328125p-45 {- 55422498951298 -45 (-2.87715e-014)}
; 1.5525427224930599123808860895223915576934814453125p205 * -1.012306266883598926398235562373884022235870361328125p-45 == -1.5716487275842487836285954472259618341922760009765625p160
; [HW: -1.5716487275842487836285954472259618341922760009765625p160] 

; mpf : - 2574476996535241 160
; mpfd: - 2574476996535241 160 (-2.29697e+048) class: Neg. norm. non-zero
; hwf : - 2574476996535241 160 (-2.29697e+048) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011001100 #b1000110101110011011100001001101011000000001000001000)))
(assert (= y (fp #b1 #b01111010010 #b0000001100100110100000001110010111001101000010000010)))
(assert (= r (fp #b1 #b10010011111 #b1001001001010111100100100010110111000110001111001001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
