(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.588618462385199325836993011762388050556182861328125p-664 {+ 2650901887861378 -664 (2.0754e-200)}
; Y = 1.4790742234424805179315853820298798382282257080078125p-949 {+ 2157558494178365 -949 (3.10831e-286)}
; 1.588618462385199325836993011762388050556182861328125p-664 * 1.4790742234424805179315853820298798382282257080078125p-949 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101100111 #b1001011010101111101100110001010111000100001010000010)))
(assert (= y (fp #b0 #b00001001010 #b0111101010100100100110111011101000001010110000111101)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
