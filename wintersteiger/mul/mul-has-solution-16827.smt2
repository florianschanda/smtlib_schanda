(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2662090398462433338266919236048124730587005615234375p103 {+ 1198898932654199 103 (1.28409e+031)}
; Y = 1.688765702297812421051048659137450158596038818359375p-896 {+ 3101924960214006 -896 (3.19664e-270)}
; 1.2662090398462433338266919236048124730587005615234375p103 * 1.688765702297812421051048659137450158596038818359375p-896 == 1.0691651992158901496310363654629327356815338134765625p-792
; [HW: 1.0691651992158901496310363654629327356815338134765625p-792] 

; mpf : + 311492365415689 -792
; mpfd: + 311492365415689 -792 (4.10476e-239) class: Pos. norm. non-zero
; hwf : + 311492365415689 -792 (4.10476e-239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001100110 #b0100010000100110010001101001000000001010000001110111)))
(assert (= y (fp #b0 #b00001111111 #b1011000001010010111100101111010111111001101111110110)))
(assert (= r (fp #b0 #b00011100111 #b0001000110110100110011110111110010100111010100001001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
