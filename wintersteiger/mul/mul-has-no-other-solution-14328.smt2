(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4590205535567533079444046961725689470767974853515625p328 {+ 2067244793953593 328 (7.97811e+098)}
; Y = -1.84299396987045582818609545938670635223388671875p784 {- 3796507328584160 784 (-1.87517e+236)}
; 1.4590205535567533079444046961725689470767974853515625p328 * -1.84299396987045582818609545938670635223388671875p784 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000111 #b0111010110000010010111101111100110110111110100111001)))
(assert (= y (fp #b1 #b11100001111 #b1101011111001110011100111110101101010001100111100000)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
