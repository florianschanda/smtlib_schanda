(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.458377844067883177814337614108808338642120361328125p258 {- 2064350287739010 258 (-6.75474e+077)}
; Y = 1.1529468464897225654652856974280439317226409912109375p472 {+ 688811360858607 472 (1.40594e+142)}
; -1.458377844067883177814337614108808338642120361328125p258 * 1.1529468464897225654652856974280439317226409912109375p472 == -1.6814321363085460436792573091224767267704010009765625p730
; [HW: -1.6814321363085460436792573091224767267704010009765625p730] 

; mpf : - 3068897515157449 730
; mpfd: - 3068897515157449 730 (-9.49678e+219) class: Neg. norm. non-zero
; hwf : - 3068897515157449 730 (-9.49678e+219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000001 #b0111010101011000010000000001100101111011100010000010)))
(assert (= y (fp #b0 #b10111010111 #b0010011100100111100001100100011110110011000111101111)))
(assert (= r (fp #b1 #b11011011001 #b1010111001110010010101100010001111100011011111001001)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
