(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.995084621858115969672553546843118965625762939453125p543 {+ 4481462732202322 543 (5.74446e+163)}
; Y = 1.4736227037785216698040358096477575600147247314453125p401 {+ 2133007032251157 401 (7.61052e+120)}
; 1.995084621858115969672553546843118965625762939453125p543 * 1.4736227037785216698040358096477575600147247314453125p401 == 1.470000997364753203555665095336735248565673828125p945
; [HW: 1.470000997364753203555665095336735248565673828125p945] 

; mpf : + 2116696316595664 945
; mpfd: + 2116696316595664 945 (4.37183e+284) class: Pos. norm. non-zero
; hwf : + 2116696316595664 945 (4.37183e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011110 #b1111111010111101110111011010001110100010000101010010)))
(assert (= y (fp #b0 #b10110010000 #b0111100100111111010101100110011101011111001100010101)))
(assert (= r (fp #b0 #b11110110000 #b0111100001010001111111000100000011000100110111010000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
