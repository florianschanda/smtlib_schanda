(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.560842230846699152380097075365483760833740234375p530 {- 2525808861854832 530 (-5.48601e+159)}
; Y = 1.6485099476035838250709275598637759685516357421875p-672 {+ 2920629158373560 -672 (8.41268e-203)}
; -1.560842230846699152380097075365483760833740234375p530 * 1.6485099476035838250709275598637759685516357421875p-672 == -1.28653197209527636601933409110642969608306884765625p-141
; [HW: -1.28653197209527636601933409110642969608306884765625p-141] 

; mpf : - 1290425282758020 -141
; mpfd: - 1290425282758020 -141 (-4.61521e-043) class: Neg. norm. non-zero
; hwf : - 1290425282758020 -141 (-4.61521e-043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000010001 #b1000111110010011010110110011111110110011110001110000)))
(assert (= y (fp #b0 #b00101011111 #b1010011000000100101111110111100000010110100010111000)))
(assert (= r (fp #b1 #b01101110010 #b0100100101011010001010001100100101101000010110000100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
