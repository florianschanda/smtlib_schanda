(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.048288290781647535965248607681132853031158447265625p-45 {+ 217471128370586 -45 (2.97941e-014)}
; Y = 1.7862697538926208817855467714252881705760955810546875p-909 {+ 3541044170643499 -909 (4.12744e-274)}
; 1.048288290781647535965248607681132853031158447265625p-45 * 1.7862697538926208817855467714252881705760955810546875p-909 == 1.8725256671830496912889429950155317783355712890625p-954
; [HW: 1.8725256671830496912889429950155317783355712890625p-954] 

; mpf : + 3929506269596776 -954
; mpfd: + 3929506269596776 -954 (1.22974e-287) class: Pos. norm. non-zero
; hwf : + 3929506269596776 -954 (1.22974e-287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010010 #b0000110001011100100111110001010110101111110110011010)))
(assert (= y (fp #b0 #b00001110010 #b1100100101001000111110010111111011001101100000101011)))
(assert (= r (fp #b0 #b00001000101 #b1101111101011101110101111001010101111000110001101000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
