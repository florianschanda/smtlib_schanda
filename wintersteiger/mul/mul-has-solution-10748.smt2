(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.055761860698435139482853628578595817089080810546875p460 {+ 251129095062958 460 (3.14314e+138)}
; Y = 1.1542940992279777656648320771637372672557830810546875p563 {+ 694878847788587 563 (3.48501e+169)}
; 1.055761860698435139482853628578595817089080810546875p460 * 1.1542940992279777656648320771637372672557830810546875p563 == 1.2186596859941538628646640063379891216754913330078125p1023
; [HW: 1.2186596859941538628646640063379891216754913330078125p1023] 

; mpf : + 984755680364221 1023
; mpfd: + 984755680364221 1023 (1.09539e+308) class: Pos. norm. non-zero
; hwf : + 984755680364221 1023 (1.09539e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111001011 #b0000111001000110011010001100100000010000010110101110)))
(assert (= y (fp #b0 #b11000110010 #b0010011101111111110100010110111000100110011000101011)))
(assert (= r (fp #b0 #b11111111110 #b0011011111111010000101001100100001001100011010111101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
