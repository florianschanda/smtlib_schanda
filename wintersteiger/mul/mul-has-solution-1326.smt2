(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8174358452946126618599009816534817218780517578125p813 {- 3681403768268104 813 (-9.92763e+244)}
; Y = 1.931751548773724014296249151811935007572174072265625p-702 {+ 4196235927859226 -702 (9.18109e-212)}
; -1.8174358452946126618599009816534817218780517578125p813 * 1.931751548773724014296249151811935007572174072265625p-702 == -1.7554172544723751769879527273587882518768310546875p112
; [HW: -1.7554172544723751769879527273587882518768310546875p112] 

; mpf : - 3402096865751032 112
; mpfd: - 3402096865751032 112 (-9.11465e+033) class: Neg. norm. non-zero
; hwf : - 3402096865751032 112 (-9.11465e+033) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101100 #b1101000101000011011110011011111000011110010101001000)))
(assert (= y (fp #b0 #b00101000001 #b1110111010000111010001001111110111111011000000011010)))
(assert (= r (fp #b1 #b10001101111 #b1100000101100011000001100111001011001010111111111000)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
