(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1444985737698603056600177296786569058895111083984375p99 {- 650763722985511 99 (-7.25412e+029)}
; Y = 1.0003851383468342906013504034490324556827545166015625p-1017 {+ 1734508915289 -1017 (7.12298e-307)}
; -1.1444985737698603056600177296786569058895111083984375p99 * 1.0003851383468342906013504034490324556827545166015625p-1017 == -1.144939364058516151345656908233650028705596923828125p-918
; [HW: -1.144939364058516151345656908233650028705596923828125p-918] 

; mpf : - 652748865965250 -918
; mpfd: - 652748865965250 -918 (-5.1671e-277) class: Neg. norm. non-zero
; hwf : - 652748865965250 -918 (-5.1671e-277) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001100010 #b0010010011111101110110111100100010101001000000100111)))
(assert (= y (fp #b0 #b00000000110 #b0000000000011001001111011000110010011010101001011001)))
(assert (= r (fp #b1 #b00001101001 #b0010010100011010101111110000010010001000110011000010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
