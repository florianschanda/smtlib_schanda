(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8840440052675868631837374778115190565586090087890625p505 {- 3981380252702225 505 (-1.97351e+152)}
; Y = 1.208369060993429666694964907946996390819549560546875p-379 {+ 938410825445550 -379 (9.81367e-115)}
; -1.8840440052675868631837374778115190565586090087890625p505 * 1.208369060993429666694964907946996390819549560546875p-379 == -1.13831024275774694842766621150076389312744140625p127
; [HW: -1.13831024275774694842766621150076389312744140625p127] 

; mpf : - 622893957745312 127
; mpfd: - 622893957745312 127 (-1.93673e+038) class: Neg. norm. non-zero
; hwf : - 622893957745312 127 (-1.93673e+038) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111111000 #b1110001001010000101101010011101011011001011000010001)))
(assert (= y (fp #b0 #b01010000100 #b0011010101010111101011001011111001110111000010101110)))
(assert (= r (fp #b1 #b10001111110 #b0010001101101000010011001101000101011000101010100000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
