(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1726365524215565105947689517051912844181060791015625p31 {- 777485913156249 31 (-2.51822e+009)}
; Y = -1.099372070011008784007344729616306722164154052734375p360 {- 447532017472614 360 (-2.58192e+108)}
; -1.1726365524215565105947689517051912844181060791015625p31 * -1.099372070011008784007344729616306722164154052734375p360 == 1.289163874006259202786850437405519187450408935546875p391
; [HW: 1.289163874006259202786850437405519187450408935546875p391] 

; mpf : + 1302278315223598 391
; mpfd: + 1302278315223598 391 (6.50184e+117) class: Pos. norm. non-zero
; hwf : + 1302278315223598 391 (6.50184e+117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011110 #b0010110000110001111010001011101010111110101010011001)))
(assert (= y (fp #b1 #b10101100111 #b0001100101110000011100101010111011010101010001100110)))
(assert (= r (fp #b0 #b10110000110 #b0100101000000110101001001100011000001010101000101110)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
