(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9407641534803230509709237594506703317165374755859375p-854 {- 4236825091057503 -854 (-1.61568e-257)}
; Y = 1.087430954881515976495620634523220360279083251953125p850 {+ 393754015825042 850 (8.16391e+255)}
; -1.9407641534803230509709237594506703317165374755859375p-854 * 1.087430954881515976495620634523220360279083251953125p850 == -1.055223508309462321363980663591064512729644775390625p-3
; [HW: -1.055223508309462321363980663591064512729644775390625p-3] 

; mpf : - 248704571444586 -3
; mpfd: - 248704571444586 -3 (-0.131903) class: Neg. norm. non-zero
; hwf : - 248704571444586 -3 (-0.131903) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010101001 #b1111000011010101111010110110100001110010011101011111)))
(assert (= y (fp #b0 #b11101010001 #b0001011001100001111000000000001111011111110010010010)))
(assert (= r (fp #b1 #b01111111100 #b0000111000100011001000001011101000101000110101101010)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
