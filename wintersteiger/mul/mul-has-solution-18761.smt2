(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.067403674583907946527006060932762920856475830078125p475 {+ 303559163739490 475 (1.0413e+143)}
; Y = -1.9409787552338302329957286929129622876644134521484375p675 {- 4237791571434631 675 (-3.04276e+203)}
; 1.067403674583907946527006060932762920856475830078125p475 * -1.9409787552338302329957286929129622876644134521484375p675 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011010 #b0001000101000001010111100000000111110111110101100010)))
(assert (= y (fp #b1 #b11010100010 #b1111000011100011111110111101001111110101110010000111)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
