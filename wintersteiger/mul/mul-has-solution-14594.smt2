(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.09224804193219870995790188317187130451202392578125p865 {+ 415448247271508 865 (2.687e+260)}
; Y = -1.089328208873166392578468730789609253406524658203125p-549 {- 402298488194866 -549 (-5.91141e-166)}
; 1.09224804193219870995790188317187130451202392578125p865 * -1.089328208873166392578468730789609253406524658203125p-549 == -1.189816603163225128270141794928349554538726806640625p316
; [HW: -1.189816603163225128270141794928349554538726806640625p316] 

; mpf : - 854857983274634 316
; mpfd: - 854857983274634 316 (-1.5884e+095) class: Neg. norm. non-zero
; hwf : - 854857983274634 316 (-1.5884e+095) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100000 #b0001011110011101100100010101001100111000000001010100)))
(assert (= y (fp #b1 #b00111011010 #b0001011011011110001101101010011110111000011100110010)))
(assert (= r (fp #b1 #b10100111011 #b0011000010010111110100100010011011010010111010001010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
