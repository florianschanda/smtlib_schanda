(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2096347717973643387523452474852092564105987548828125p61 {- 944111080150509 61 (-2.78923e+018)}
; Y = 1.0752032944018996563073642391827888786792755126953125p-620 {+ 338685528645429 -620 (2.47112e-187)}
; -1.2096347717973643387523452474852092564105987548828125p61 * 1.0752032944018996563073642391827888786792755126953125p-620 == -1.300603291659616189690495957620441913604736328125p-559
; [HW: -1.300603291659616189690495957620441913604736328125p-559] 

; mpf : - 1353796872304592 -559
; mpfd: - 1353796872304592 -559 (-6.89251e-169) class: Neg. norm. non-zero
; hwf : - 1353796872304592 -559 (-6.89251e-169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111100 #b0011010110101010100111111101100011111001010111101101)))
(assert (= y (fp #b0 #b00110010011 #b0001001101000000100001011110101000000001111100110101)))
(assert (= r (fp #b1 #b00111010000 #b0100110011110100010101100101101010111111011111010000)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
