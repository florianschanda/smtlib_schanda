(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.476606531746923689496497900108806788921356201171875p23 {+ 2146444998777790 23 (1.23867e+007)}
; Y = 1.3963659360723552627092658440233208239078521728515625p867 {+ 1785073481997817 867 (1.37406e+261)}
; 1.476606531746923689496497900108806788921356201171875p23 * 1.3963659360723552627092658440233208239078521728515625p867 == 1.03094153095667362407539258128963410854339599609375p891
; [HW: 1.03094153095667362407539258128963410854339599609375p891] 

; mpf : + 139348267286748 891
; mpfd: + 139348267286748 891 (1.702e+268) class: Pos. norm. non-zero
; hwf : + 139348267286748 891 (1.702e+268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010110 #b0111101000000010111000101011101011101001101110111110)))
(assert (= y (fp #b0 #b11101100010 #b0110010101111000001111001110110010101101110111111001)))
(assert (= r (fp #b0 #b11101111010 #b0000011111101011110010001011111110001100000011011100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
