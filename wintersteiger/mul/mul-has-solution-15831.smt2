(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1596115963301893980741397172096185386180877685546875p446 {+ 718826725756651 446 (2.10713e+134)}
; Y = 1.6783477748812345442530613581766374409198760986328125p-278 {+ 3055006786182733 -278 (3.45576e-084)}
; 1.1596115963301893980741397172096185386180877685546875p446 * 1.6783477748812345442530613581766374409198760986328125p-278 == 1.9462315424272496056090631100232712924480438232421875p168
; [HW: 1.9462315424272496056090631100232712924480438232421875p168] 

; mpf : + 4261448021881571 168
; mpfd: + 4261448021881571 168 (7.28172e+050) class: Pos. norm. non-zero
; hwf : + 4261448021881571 168 (7.28172e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111101 #b0010100011011100010011100011101001001100111011101011)))
(assert (= y (fp #b0 #b01011101001 #b1010110110101000001100110010010001101101111001001101)))
(assert (= r (fp #b0 #b10010100111 #b1111001000111100001110101111100100101011001011100011)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
