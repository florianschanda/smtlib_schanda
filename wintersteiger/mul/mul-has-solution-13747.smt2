(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8282260037799191731977543895482085645198822021484375p950 {- 3729998322001799 950 (-1.73991e+286)}
; Y = -1.5945723327756839982072278871783055365085601806640625p-178 {- 2677715736333377 -178 (-4.16203e-054)}
; -1.8282260037799191731977543895482085645198822021484375p950 * -1.5945723327756839982072278871783055365085601806640625p-178 == 1.457619301844256032296698322170414030551910400390625p773
; [HW: 1.457619301844256032296698322170414030551910400390625p773] 

; mpf : + 2060934117263338 773
; mpfd: + 2060934117263338 773 (7.24154e+232) class: Pos. norm. non-zero
; hwf : + 2060934117263338 773 (7.24154e+232) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110101 #b1101010000000110100111101000111111101110011110000111)))
(assert (= y (fp #b1 #b01101001101 #b1001100000110101111001000111010001100000110001000001)))
(assert (= r (fp #b0 #b11100000100 #b0111010100100110100010011101111101110000011111101010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
