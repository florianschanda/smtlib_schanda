(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.955971222054547098423427087254822254180908203125p649 {- 4305311639421776 649 (-4.56909e+195)}
; Y = -1.1691250468128837614045778536819852888584136962890625p-706 {- 761671497805521 -706 (-3.47283e-213)}
; -1.955971222054547098423427087254822254180908203125p649 * -1.1691250468128837614045778536819852888584136962890625p-706 == 1.1433874732745881175333124701865017414093017578125p-56
; [HW: 1.1433874732745881175333124701865017414093017578125p-56] 

; mpf : + 645759771209032 -56
; mpfd: + 645759771209032 -56 (1.58677e-017) class: Pos. norm. non-zero
; hwf : + 645759771209032 -56 (1.58677e-017) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001000 #b1111010010111010100001111010111010100100001101010000)))
(assert (= y (fp #b1 #b00100111101 #b0010101101001011110001110111000011111110111011010001)))
(assert (= r (fp #b0 #b01111000111 #b0010010010110101000010101001110001011110110101001000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
