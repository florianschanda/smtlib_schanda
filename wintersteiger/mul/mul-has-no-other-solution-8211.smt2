(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1442606185016537256871060890262015163898468017578125p-383 {- 649692067728285 -383 (-5.80813e-116)}
; Y = -1.7844330108197248296875159212504513561725616455078125p510 {- 3532772215224829 510 (-5.98133e+153)}
; -1.1442606185016537256871060890262015163898468017578125p-383 * -1.7844330108197248296875159212504513561725616455078125p510 == 1.0209282103176733347282834074576385319232940673828125p128
; [HW: 1.0209282103176733347282834074576385319232940673828125p128] 

; mpf : + 94252280188205 128
; mpfd: + 94252280188205 128 (3.47404e+038) class: Pos. norm. non-zero
; hwf : + 94252280188205 128 (3.47404e+038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000000 #b0010010011101110010000111000111010010000101110011101)))
(assert (= y (fp #b1 #b10111111101 #b1100100011010000100110100000111101011111100111111101)))
(assert (= r (fp #b0 #b10001111111 #b0000010101011011100011010001101011100000110100101101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
