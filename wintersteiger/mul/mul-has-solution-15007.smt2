(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.298510581638236072166137091699056327342987060546875p-296 {- 1344372144232110 -296 (-1.01992e-089)}
; Y = -1.356932711854376361060303679550997912883758544921875p-471 {- 1607482028103710 -471 (-2.22551e-142)}
; -1.298510581638236072166137091699056327342987060546875p-296 * -1.356932711854376361060303679550997912883758544921875p-471 == 1.761991484913975281045850351802073419094085693359375p-767
; [HW: 1.761991484913975281045850351802073419094085693359375p-767] 

; mpf : + 3431704567518070 -767
; mpfd: + 3431704567518070 -767 (2.26985e-231) class: Pos. norm. non-zero
; hwf : + 3431704567518070 -767 (2.26985e-231) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010111 #b0100110001101011001100001000000110100101011010101110)))
(assert (= y (fp #b1 #b01000101000 #b0101101101011111111100010011010001001001100000011110)))
(assert (= r (fp #b0 #b00100000000 #b1100001100010001110111111011101110001001001101110110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
