(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.196797099879951975509584372048266232013702392578125p-486 {+ 886295345686946 -486 (5.99022e-147)}
; Y = 1.0688619503958405321242253194213844835758209228515625p963 {+ 310126654142713 963 (8.33312e+289)}
; 1.196797099879951975509584372048266232013702392578125p-486 * 1.0688619503958405321242253194213844835758209228515625p963 == 1.2792108824057708549304379630484618246555328369140625p477
; [HW: 1.2792108824057708549304379630484618246555328369140625p477] 

; mpf : + 1257454025960417 477
; mpfd: + 1257454025960417 477 (4.99172e+143) class: Pos. norm. non-zero
; hwf : + 1257454025960417 477 (4.99172e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011001 #b0011001001100001010010110111001111101110100110100010)))
(assert (= y (fp #b0 #b11111000010 #b0001000110100000111011111101000011100011100011111001)))
(assert (= r (fp #b0 #b10111011100 #b0100011101111010010111010100100010011110101111100001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
