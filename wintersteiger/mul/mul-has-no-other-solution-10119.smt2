(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4639120144985737770326750251115299761295318603515625p-592 {+ 2089273975628473 -592 (9.03145e-179)}
; Y = -1.2372069283742976875117847157525829970836639404296875p-503 {- 1068285034236187 -503 (-4.72449e-152)}
; 1.4639120144985737770326750251115299761295318603515625p-592 * -1.2372069283742976875117847157525829970836639404296875p-503 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101111 #b0111011011000010111100000001001001111110001010111001)))
(assert (= y (fp #b1 #b01000001000 #b0011110010111001100101111101111111000000100100011011)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
