(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.155223022478940375634692827588878571987152099609375p84 {- 699062346195478 84 (-2.23453e+025)}
; Y = 1.9676814532495452425564508303068578243255615234375p228 {+ 4358049832267992 228 (8.48777e+068)}
; -1.155223022478940375634692827588878571987152099609375p84 * 1.9676814532495452425564508303068578243255615234375p228 == -1.1365554578493466397759448227589018642902374267578125p313
; [HW: -1.1365554578493466397759448227589018642902374267578125p313] 

; mpf : - 614991109085725 313
; mpfd: - 614991109085725 313 (-1.89662e+094) class: Neg. norm. non-zero
; hwf : - 614991109085725 313 (-1.89662e+094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010011 #b0010011110111100101100100010110100100010001000010110)))
(assert (= y (fp #b0 #b10011100011 #b1111011110111001111110001100001010100111000011011000)))
(assert (= r (fp #b1 #b10100111000 #b0010001011110101010011000110100110001101101000011101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
