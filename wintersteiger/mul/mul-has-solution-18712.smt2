(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.52687334458135381964893895201385021209716796875p-392 {+ 2372826598328032 -392 (1.51372e-118)}
; Y = 1.99677007041748577620410287636332213878631591796875p32 {+ 4489053317706252 32 (8.57606e+009)}
; 1.52687334458135381964893895201385021209716796875p-392 * 1.99677007041748577620410287636332213878631591796875p32 == 1.52440749788914597928624061751179397106170654296875p-359
; [HW: 1.52440749788914597928624061751179397106170654296875p-359] 

; mpf : + 2361721412083852 -359
; mpfd: + 2361721412083852 -359 (1.29817e-108) class: Pos. norm. non-zero
; hwf : + 2361721412083852 -359 (1.29817e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001110111 #b1000011011100001001010111110100000011100011011100000)))
(assert (= y (fp #b0 #b10000011111 #b1111111100101100010100101100011000010011001000001100)))
(assert (= r (fp #b0 #b01010011000 #b1000011000111111100100011101110100110110000010001100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
