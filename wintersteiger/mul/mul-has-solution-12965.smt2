(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5275083974979446477249211966409347951412200927734375p49 {+ 2375686622406551 49 (8.59911e+014)}
; Y = -1.168948755291314256510304403491318225860595703125p464 {- 760877551374672 464 (-5.56818e+139)}
; 1.5275083974979446477249211966409347951412200927734375p49 * -1.168948755291314256510304403491318225860595703125p464 == -1.78557903995225242255173725425265729427337646484375p513
; [HW: -1.78557903995225242255173725425265729427337646484375p513] 

; mpf : - 3537933471599036 513
; mpfd: - 3537933471599036 513 (-4.78814e+154) class: Neg. norm. non-zero
; hwf : - 3537933471599036 513 (-4.78814e+154) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000110000 #b1000011100001010110010100101001110011110011110010111)))
(assert (= y (fp #b1 #b10111001111 #b0010101101000000001110011100001010101101000101010000)))
(assert (= r (fp #b1 #b11000000000 #b1100100100011011101101010011110100000100100110111100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
