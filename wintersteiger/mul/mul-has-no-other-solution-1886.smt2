(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0809723649223947905539944258634932339191436767578125p599 {- 364667112491805 599 (-2.24276e+180)}
; Y = 1.836585890948320365367862905259244143962860107421875p-189 {+ 3767647906738270 -189 (2.34068e-057)}
; -1.0809723649223947905539944258634932339191436767578125p599 * 1.836585890948320365367862905259244143962860107421875p-189 == -1.9852985939215093136311907073832117021083831787109375p410
; [HW: -1.9852985939215093136311907073832117021083831787109375p410] 

; mpf : - 4437390380433583 410
; mpfd: - 4437390380433583 410 (-5.24957e+123) class: Neg. norm. non-zero
; hwf : - 4437390380433583 410 (-5.24957e+123) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010110 #b0001010010111010100110101101101100111000101100011101)))
(assert (= y (fp #b0 #b01101000010 #b1101011000101010011111100011000111101011000001011110)))
(assert (= r (fp #b1 #b10110011001 #b1111110000111100100001110101010110110000000010101111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
