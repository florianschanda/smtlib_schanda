(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1178168146248748104909509493154473602771759033203125p20 {- 530599762442565 20 (-1.17212e+006)}
; Y = -1.37605656494368577824616295401938259601593017578125p-44 {- 1693608205750612 -44 (-7.82198e-014)}
; -1.1178168146248748104909509493154473602771759033203125p20 * -1.37605656494368577824616295401938259601593017578125p-44 == 1.5381791661689978578664295127964578568935394287109375p-24
; [HW: 1.5381791661689978578664295127964578568935394287109375p-24] 

; mpf : + 2423743492217263 -24
; mpfd: + 2423743492217263 -24 (9.16826e-008) class: Pos. norm. non-zero
; hwf : + 2423743492217263 -24 (9.16826e-008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010011 #b0001111000101001001111100010010110111011100101000101)))
(assert (= y (fp #b1 #b01111010011 #b0110000001000101001111100011011111100001000101010100)))
(assert (= r (fp #b0 #b01111100111 #b1000100111000110000111000001111000010101100110101111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
