(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8557435089158662577801806037314236164093017578125p223 {+ 3853926147878216 223 (2.50154e+067)}
; Y = 1.1879922103757898366183098914916627109050750732421875p-1015 {+ 846641648596963 -1015 (3.38351e-306)}
; 1.8557435089158662577801806037314236164093017578125p223 * 1.1879922103757898366183098914916627109050750732421875p-1015 == 1.1023044165237421143643814502866007387638092041015625p-791
; [HW: 1.1023044165237421143643814502866007387638092041015625p-791] 

; mpf : + 460738132134681 -791
; mpfd: + 460738132134681 -791 (8.46399e-239) class: Pos. norm. non-zero
; hwf : + 460738132134681 -791 (8.46399e-239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011110 #b1101101100010010000000011011000010001110110101001000)))
(assert (= y (fp #b0 #b00000001000 #b0011000000100000010000011110101101110111011111100011)))
(assert (= r (fp #b0 #b00011101000 #b0001101000110000100111110100101100110100101100011001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
