(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9130443294212982063839945112704299390316009521484375p-867 {+ 4111986101754503 -867 (1.9441e-261)}
; Y = -1.6882380990573213619398984519648365676403045654296875p21 {- 3099548846456731 21 (-3.54049e+006)}
; 1.9130443294212982063839945112704299390316009521484375p-867 * -1.6882380990573213619398984519648365676403045654296875p21 == -1.6148371610573002410404797046794556081295013427734375p-845
; [HW: -1.6148371610573002410404797046794556081295013427734375p-845] 

; mpf : - 2768980409431191 -845
; mpfd: - 2768980409431191 -845 (-6.88307e-255) class: Neg. norm. non-zero
; hwf : - 2768980409431191 -845 (-6.88307e-255) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011100 #b1110100110111101010001011110111010101001101010000111)))
(assert (= y (fp #b1 #b10000010100 #b1011000000110000010111110011111101001111111110011011)))
(assert (= r (fp #b1 #b00010110010 #b1001110101100101111101111101101100011011010010010111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
