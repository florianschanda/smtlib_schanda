(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.304396507707609398352133212029002606868743896484375p-303 {- 1370879998684870 -303 (-8.00426e-092)}
; Y = -1.2782645436037285424646370302070863544940948486328125p326 {- 1253192094884173 326 (-1.74743e+098)}
; -1.304396507707609398352133212029002606868743896484375p-303 * -1.2782645436037285424646370302070863544940948486328125p326 == 1.6673638066031646332021409762091934680938720703125p23
; [HW: 1.6673638066031646332021409762091934680938720703125p23] 

; mpf : + 3005539390738568 23
; mpfd: + 3005539390738568 23 (1.39869e+007) class: Pos. norm. non-zero
; hwf : + 3005539390738568 23 (1.39869e+007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010000 #b0100110111101100111011011111010110011110111011000110)))
(assert (= y (fp #b1 #b10101000101 #b0100011100111100010110000101101001101010000101001101)))
(assert (= r (fp #b0 #b10000010110 #b1010101011011000010110101011101111100101000010001000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
