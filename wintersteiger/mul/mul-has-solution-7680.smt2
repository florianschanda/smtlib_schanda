(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8506481163037864501319518240052275359630584716796875p-412 {- 3830978539609147 -412 (-1.74971e-124)}
; Y = -1.9936436997130659865007373809930868446826934814453125p978 {- 4474973395766805 978 (-5.09311e+294)}
; -1.8506481163037864501319518240052275359630584716796875p-412 * -1.9936436997130659865007373809930868446826934814453125p978 == 1.8447664787274486997148414957337081432342529296875p567
; [HW: 1.8447664787274486997148414957337081432342529296875p567] 

; mpf : + 3804489998812024 567
; mpfd: + 3804489998812024 567 (8.91146e+170) class: Pos. norm. non-zero
; hwf : + 3804489998812024 567 (8.91146e+170) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100011 #b1101100111000100000100110010111111101101110000111011)))
(assert (= y (fp #b1 #b11111010001 #b1111111001011111011011101111101000100100111000010101)))
(assert (= r (fp #b0 #b11000110110 #b1101100001000010100111011010111011100100001101111000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
