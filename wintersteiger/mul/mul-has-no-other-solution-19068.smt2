(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.37086264067128826837915767100639641284942626953125p150 {- 1670216850332852 150 (-1.95656e+045)}
; Y = -1.652935450852301091373419694718904793262481689453125p676 {- 2940559853155410 676 (-5.18242e+203)}
; -1.37086264067128826837915767100639641284942626953125p150 * -1.652935450852301091373419694718904793262481689453125p676 == 1.1329737285072860597523458636715076863765716552734375p827
; [HW: 1.1329737285072860597523458636715076863765716552734375p827] 

; mpf : + 598860434155479 827
; mpfd: + 598860434155479 827 (1.01397e+249) class: Pos. norm. non-zero
; hwf : + 598860434155479 827 (1.01397e+249) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010101 #b0101111011110000110110101010000011111101110010110100)))
(assert (= y (fp #b1 #b11010100011 #b1010011100100110110001110001011111001111010001010010)))
(assert (= r (fp #b0 #b11100111010 #b0010001000001010100100001111011100101010011111010111)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
