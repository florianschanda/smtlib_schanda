(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.79538568139233678522259651799686253070831298828125p-256 {- 3582098658334356 -256 (-1.55053e-077)}
; Y = 1.4344616156880920510019450375693850219249725341796875p-76 {+ 1956641170519675 -76 (1.89849e-023)}
; -1.79538568139233678522259651799686253070831298828125p-256 * 1.4344616156880920510019450375693850219249725341796875p-76 == -1.2877059226566587302187372188200242817401885986328125p-331
; [HW: -1.2877059226566587302187372188200242817401885986328125p-331] 

; mpf : - 1295712286068813 -331
; mpfd: - 1295712286068813 -331 (-2.94366e-100) class: Neg. norm. non-zero
; hwf : - 1295712286068813 -331 (-2.94366e-100) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111111 #b1100101110011110011001010110000101001001011010010100)))
(assert (= y (fp #b0 #b01110110011 #b0110111100111000111000000101111010111111011001111011)))
(assert (= r (fp #b1 #b01010110100 #b0100100110100111000110000110100010101101000001001101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
