(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6179348078611981431862432145862840116024017333984375p-630 {- 2782930970422951 -630 (-3.63131e-190)}
; Y = -1.3310990260445445532155872570001520216464996337890625p-502 {- 1491137450316945 -502 (-1.01661e-151)}
; -1.6179348078611981431862432145862840116024017333984375p-630 * -1.3310990260445445532155872570001520216464996337890625p-502 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001001 #b1001111000110000111110011011111011010010111010100111)))
(assert (= y (fp #b1 #b01000001001 #b0101010011000010111001111110000010011001010010010001)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
