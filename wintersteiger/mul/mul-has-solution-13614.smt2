(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9285908809119300943990538144134916365146636962890625p-745 {+ 4182001545254609 -745 (1.04206e-224)}
; Y = 1.0387526473988180075735954233095981180667877197265625p-902 {+ 174526408384937 -902 (3.07225e-272)}
; 1.9285908809119300943990538144134916365146636962890625p-745 * 1.0387526473988180075735954233095981180667877197265625p-902 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010110 #b1110110110111000001000011100100011100001011011010001)))
(assert (= y (fp #b0 #b00001111001 #b0000100111101011101100011000100100110110000110101001)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
