(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3374034904300342585514727034023962914943695068359375p65 {- 1519530233774207 65 (-4.93415e+019)}
; Y = -1.3771144078478736449966390864574350416660308837890625p805 {- 1698372306659729 805 (-2.93844e+242)}
; -1.3374034904300342585514727034023962914943695068359375p65 * -1.3771144078478736449966390864574350416660308837890625p805 == 1.841757615777236178900011509540490806102752685546875p870
; [HW: 1.841757615777236178900011509540490806102752685546875p870] 

; mpf : + 3790939284750638 870
; mpfd: + 3790939284750638 870 (1.44987e+262) class: Pos. norm. non-zero
; hwf : + 3790939284750638 870 (1.44987e+262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000000 #b0101011001100000000100110011110011110100000001111111)))
(assert (= y (fp #b1 #b11100100100 #b0110000010001010100100011110000010001110100110010001)))
(assert (= r (fp #b0 #b11101100101 #b1101011101111101011011010101011011101100000100101110)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
