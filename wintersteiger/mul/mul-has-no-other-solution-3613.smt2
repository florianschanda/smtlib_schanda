(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.67112520547924958691510255448520183563232421875p-938 {- 3022479225315296 -938 (-7.19239e-283)}
; Y = -1.2245227661581405964597024649265222251415252685546875p-919 {- 1011160646005995 -919 (-2.76313e-277)}
; -1.67112520547924958691510255448520183563232421875p-938 * -1.2245227661581405964597024649265222251415252685546875p-919 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010101 #b1010101111001110110111001000100100001101111111100000)))
(assert (= y (fp #b1 #b00001101000 #b0011100101111010010100101111000111011011010011101011)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
