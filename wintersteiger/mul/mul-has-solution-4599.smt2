(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.462569061040988049882116683875210583209991455078125p38 {+ 2083225850937314 38 (4.02028e+011)}
; Y = -1.698396642285726176879734339308924973011016845703125p-701 {- 3145298857954802 -701 (-1.6144e-211)}
; 1.462569061040988049882116683875210583209991455078125p38 * -1.698396642285726176879734339308924973011016845703125p-701 == -1.2420111911915008295892448586528189480304718017578125p-662
; [HW: -1.2420111911915008295892448586528189480304718017578125p-662] 

; mpf : - 1089921510469533 -662
; mpfd: - 1089921510469533 -662 (-6.49035e-200) class: Neg. norm. non-zero
; hwf : - 1089921510469533 -662 (-6.49035e-200) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100101 #b0111011001101010111011010000110101001111111111100010)))
(assert (= y (fp #b1 #b00101000010 #b1011001011001010000111110101001001000000110111110010)))
(assert (= r (fp #b1 #b00101101001 #b0011110111110100011100100000011101101110111110011101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
