(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7300524155192313902063006025855429470539093017578125p31 {+ 3287863786493341 31 (3.71526e+009)}
; Y = -1.4213464126338510862268549317377619445323944091796875p-804 {- 1897575546931707 -804 (-1.33224e-242)}
; 1.7300524155192313902063006025855429470539093017578125p31 * -1.4213464126338510862268549317377619445323944091796875p-804 == -1.2295018972333939810681613380438648164272308349609375p-772
; [HW: -1.2295018972333939810681613380438648164272308349609375p-772] 

; mpf : - 1033584658861135 -772
; mpfd: - 1033584658861135 -772 (-4.94963e-233) class: Neg. norm. non-zero
; hwf : - 1033584658861135 -772 (-4.94963e-233) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011110 #b1011101011100100101101110001000100000101010110011101)))
(assert (= y (fp #b1 #b00011011011 #b0110101111011101010110111100011010001100100111111011)))
(assert (= r (fp #b1 #b00011111011 #b0011101011000000101000101110011011111100110001001111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
