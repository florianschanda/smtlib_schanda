(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8921499683628997257045512014883570373058319091796875p642 {- 4017886265077755 642 (-3.45313e+193)}
; Y = -1.9883627928936171702645197001402266323566436767578125p-836 {- 4451190305782557 -836 (-4.3393e-252)}
; -1.8921499683628997257045512014883570373058319091796875p642 * -1.9883627928936171702645197001402266323566436767578125p-836 == 1.8811402978338123137547199803520925343036651611328125p-193
; [HW: 1.8811402978338123137547199803520925343036651611328125p-193] 

; mpf : + 3968303116985485 -193
; mpfd: + 3968303116985485 -193 (1.49841e-058) class: Pos. norm. non-zero
; hwf : + 3968303116985485 -193 (1.49841e-058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010000001 #b1110010001100011111100001011100100111110111111111011)))
(assert (= y (fp #b1 #b00010111011 #b1111110100000101010110000001000000001111101100011101)))
(assert (= r (fp #b0 #b01100111110 #b1110000110010010011010010001101001100010010010001101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
