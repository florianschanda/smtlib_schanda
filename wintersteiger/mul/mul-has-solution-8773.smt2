(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0070447373770001764370363162015564739704132080078125p-190 {+ 31726676625981 -190 (6.41726e-058)}
; Y = 1.769424546979537549162841969518922269344329833984375p-232 {+ 3465180103066758 -232 (2.56373e-070)}
; 1.0070447373770001764370363162015564739704132080078125p-190 * 1.769424546979537549162841969518922269344329833984375p-232 == 1.7818896782214259655319210651214234530925750732421875p-422
; [HW: 1.7818896782214259655319210651214234530925750732421875p-422] 

; mpf : + 3521318063482851 -422
; mpfd: + 3521318063482851 -422 (1.64521e-127) class: Pos. norm. non-zero
; hwf : + 3521318063482851 -422 (1.64521e-127) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000001 #b0000000111001101101011110001010010100100101000111101)))
(assert (= y (fp #b0 #b01100010111 #b1100010011111001000000011101001000000100010010000110)))
(assert (= r (fp #b0 #b01001011001 #b1100100000101001111011000000010100001010011111100011)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
