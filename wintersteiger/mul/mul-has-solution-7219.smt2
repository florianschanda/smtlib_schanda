(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.78286464871694505518462392501533031463623046875p-256 {- 3525708940243168 -256 (-1.53971e-077)}
; Y = -1.52403861959782371826577218598686158657073974609375p855 {- 2360060131948508 855 (-3.66136e+257)}
; -1.78286464871694505518462392501533031463623046875p-256 * -1.52403861959782371826577218598686158657073974609375p855 == 1.358577289080165950707623778725974261760711669921875p600
; [HW: 1.358577289080165950707623778725974261760711669921875p600] 

; mpf : + 1614888545484958 600
; mpfd: + 1614888545484958 600 (5.63744e+180) class: Pos. norm. non-zero
; hwf : + 1614888545484958 600 (5.63744e+180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111111 #b1100100001101001110100010100111101101111000011100000)))
(assert (= y (fp #b1 #b11101010110 #b1000011000100111011001010001110100000011011111011100)))
(assert (= r (fp #b0 #b11001010111 #b0101101111001011101110001010000110110000000010011110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
