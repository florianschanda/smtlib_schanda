(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.87109630481706812332731715287081897258758544921875p-383 {+ 3923068993777964 -383 (9.49747e-116)}
; Y = -1.410392105981718824381232479936443269252777099609375p1022 {- 1848241735575062 1022 (-6.33863e+307)}
; 1.87109630481706812332731715287081897258758544921875p-383 * -1.410392105981718824381232479936443269252777099609375p1022 == -1.3194897289227782710696601498057134449481964111328125p640
; [HW: -1.3194897289227782710696601498057134449481964111328125p640] 

; mpf : - 1438853824125325 640
; mpfd: - 1438853824125325 640 (-6.02009e+192) class: Neg. norm. non-zero
; hwf : - 1438853824125325 640 (-6.02009e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010000000 #b1101111100000000001010101101110011011011000100101100)))
(assert (= y (fp #b1 #b11111111101 #b0110100100001111011101010000000110111010011000010110)))
(assert (= r (fp #b1 #b11001111111 #b0101000111001010000101000011000100100001100110001101)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
