(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4805002476360178409464651849702931940555572509765625p902 {- 2163980736205001 902 (-5.0057e+271)}
; Y = 1.562701336736527668591634210315532982349395751953125p-303 {+ 2534181530447506 -303 (9.58931e-092)}
; -1.4805002476360178409464651849702931940555572509765625p902 * 1.562701336736527668591634210315532982349395751953125p-303 == -1.156789858009782623327055262052454054355621337890625p600
; [HW: -1.156789858009782623327055262052454054355621337890625p600] 

; mpf : - 706118746108330 600
; mpfd: - 706118746108330 600 (-4.80012e+180) class: Neg. norm. non-zero
; hwf : - 706118746108330 600 (-4.80012e+180) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110000101 #b0111101100000010000100000111000101010001000011001001)))
(assert (= y (fp #b0 #b01011010000 #b1001000000001101001100011101111010110010111010010010)))
(assert (= r (fp #b1 #b11001010111 #b0010100000100011011000010101000001111111000110101010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
