(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.01668068249293508387154361116699874401092529296875p181 {+ 75123115459468 181 (3.11612e+054)}
; Y = 1.0302752791162250733947303160675801336765289306640625p682 {+ 136347735746369 682 (2.06733e+205)}
; 1.01668068249293508387154361116699874401092529296875p181 * 1.0302752791162250733947303160675801336765289306640625p682 == 1.0474609739274829411925793465343303978443145751953125p863
; [HW: 1.0474609739274829411925793465343303978443145751953125p863] 

; mpf : + 213745224494453 863
; mpfd: + 213745224494453 863 (6.44205e+259) class: Pos. norm. non-zero
; hwf : + 213745224494453 863 (6.44205e+259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110100 #b0000010001000101001011110110100111001000001110001100)))
(assert (= y (fp #b0 #b11010101001 #b0000011111000000000111101110010110101110011101000001)))
(assert (= r (fp #b0 #b11101011110 #b0000110000100110011001110000001011011010110101110101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
