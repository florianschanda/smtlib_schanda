(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1164963836561685450732284152763895690441131591796875p636 {- 524653070023931 636 (-3.18372e+191)}
; Y = 1.0307241974003265028159148641861975193023681640625p-249 {+ 138369483963368 -249 (1.13939e-075)}
; -1.1164963836561685450732284152763895690441131591796875p636 * 1.0307241974003265028159148641861975193023681640625p-249 == -1.150799838944371433768765200511552393436431884765625p387
; [HW: -1.150799838944371433768765200511552393436431884765625p387] 

; mpf : - 679142098477402 387
; mpfd: - 679142098477402 387 (-3.62751e+116) class: Neg. norm. non-zero
; hwf : - 679142098477402 387 (-3.62751e+116) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111011 #b0001110111010010101101001111110111100111110011111011)))
(assert (= y (fp #b0 #b01100000110 #b0000011111011101100010100111111100000111101111101000)))
(assert (= r (fp #b1 #b10110000010 #b0010011010011010110100010111100010000010000101011010)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
