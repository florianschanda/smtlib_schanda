(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8623153512275434362521764342091046273708343505859375p190 {+ 3883523094464223 190 (2.92249e+057)}
; Y = -1.114669762679325604182167808176018297672271728515625p-127 {- 516426700473274 -127 (-6.55144e-039)}
; 1.8623153512275434362521764342091046273708343505859375p190 * -1.114669762679325604182167808176018297672271728515625p-127 == -1.0379333052934354153507001683465205132961273193359375p64
; [HW: -1.0379333052934354153507001683465205132961273193359375p64] 

; mpf : - 170836419584447 64
; mpfd: - 170836419584447 64 (-1.91465e+019) class: Neg. norm. non-zero
; hwf : - 170836419584447 64 (-1.91465e+019) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111101 #b1101110011000000101100101110100001011100011011011111)))
(assert (= y (fp #b1 #b01110000000 #b0001110101011010111111110110000010001100001110111010)))
(assert (= r (fp #b1 #b10000111111 #b0000100110110101111111110100000110101010000110111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
