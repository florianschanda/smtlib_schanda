(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6697883504277155619632821981213055551052093505859375p-764 {+ 3016458565403359 -764 (1.72086e-230)}
; Y = 1.2094088785419427889422649968764744699001312255859375p-789 {+ 943093747369567 -789 (3.71455e-238)}
; 1.6697883504277155619632821981213055551052093505859375p-764 * 1.2094088785419427889422649968764744699001312255859375p-789 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000011 #b1010101101110111001111111101010001010100001011011111)))
(assert (= y (fp #b0 #b00011101010 #b0011010110011011110100011111110011010100011001011111)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
