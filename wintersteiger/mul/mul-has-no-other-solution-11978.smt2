(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.36757443840856307559761262382380664348602294921875p130 {- 1655408103847724 130 (-1.86145e+039)}
; Y = -1.555539698898339207033814091118983924388885498046875p-579 {- 2501928380948078 -579 (-7.86165e-175)}
; -1.36757443840856307559761262382380664348602294921875p130 * -1.555539698898339207033814091118983924388885498046875p-579 == 1.063658165071560635084324530907906591892242431640625p-448
; [HW: 1.063658165071560635084324530907906591892242431640625p-448] 

; mpf : + 286690888495370 -448
; mpfd: + 286690888495370 -448 (1.4634e-135) class: Pos. norm. non-zero
; hwf : + 286690888495370 -448 (1.4634e-135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000001 #b0101111000011001010110111011111111001111011100101100)))
(assert (= y (fp #b1 #b00110111100 #b1000111000110111110110011000011001100101111001101110)))
(assert (= r (fp #b0 #b01000111111 #b0001000001001011111001101100100100011011000100001010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
