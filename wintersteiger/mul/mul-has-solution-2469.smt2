(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.845790873964500367065966202062554657459259033203125p876 {+ 3809103464819890 876 (9.29948e+263)}
; Y = 1.124690471969148841679952965932898223400115966796875p-1011 {+ 561555963096910 -1011 (5.12516e-305)}
; 1.845790873964500367065966202062554657459259033203125p876 * 1.124690471969148841679952965932898223400115966796875p-1011 == 1.0379717045977410183610345484339632093906402587890625p-134
; [HW: 1.0379717045977410183610345484339632093906402587890625p-134] 

; mpf : + 171009354677009 -134
; mpfd: + 171009354677009 -134 (4.76613e-041) class: Pos. norm. non-zero
; hwf : + 171009354677009 -134 (4.76613e-041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101011 #b1101100010000101110000000010111011101110110010110010)))
(assert (= y (fp #b0 #b00000001100 #b0001111111101011101101101111101100111010111101001110)))
(assert (= r (fp #b0 #b01101111001 #b0000100110111000100000110111110101101011101100010001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
