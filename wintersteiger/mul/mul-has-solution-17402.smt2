(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3337829418898612399146941243088804185390472412109375p275 {+ 1503224732717807 275 (8.09718e+082)}
; Y = 1.0059261225060354139060336819966323673725128173828125p-638 {+ 26688883109933 -638 (8.81919e-193)}
; 1.3337829418898612399146941243088804185390472412109375p275 * 1.0059261225060354139060336819966323673725128173828125p-638 == 1.3416871029999608566640745266340672969818115234375p-363
; [HW: 1.3416871029999608566640745266340672969818115234375p-363] 

; mpf : + 1538821909747928 -363
; mpfd: + 1538821909747928 -363 (7.14106e-110) class: Pos. norm. non-zero
; hwf : + 1538821909747928 -363 (7.14106e-110) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010010 #b0101010101110010110011001000001101100001001011101111)))
(assert (= y (fp #b0 #b00110000001 #b0000000110000100010111111101011001011011000000101101)))
(assert (= r (fp #b0 #b01010010100 #b0101011101111000110011100101010011011001100011011000)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
