(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2692686036047067243970332128810696303844451904296875p762 {- 1212677982856731 762 (-3.079e+229)}
; Y = -1.4994065219531040877853911297279410064220428466796875p-758 {- 2249127026174395 -758 (-9.88969e-229)}
; -1.2692686036047067243970332128810696303844451904296875p762 * -1.4994065219531040877853911297279410064220428466796875p-758 == 1.9031496223552064606110434397123754024505615234375p4
; [HW: 1.9031496223552064606110434397123754024505615234375p4] 

; mpf : + 4067424302698712 4
; mpfd: + 4067424302698712 4 (30.4504) class: Pos. norm. non-zero
; hwf : + 4067424302698712 4 (30.4504) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111001 #b0100010011101110110010011000011001010010011000011011)))
(assert (= y (fp #b1 #b00100001001 #b0111111111011001000110110001011100110010100110111011)))
(assert (= r (fp #b0 #b10000000011 #b1110011100110100110100000100101101101001000011011000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
