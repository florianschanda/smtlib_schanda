(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2568732856646158690949732772423885762691497802734375p407 {- 1156854433600599 407 (-4.15432e+122)}
; Y = 1.962610752178345574492368541541509330272674560546875p-985 {+ 4335213424813230 -985 (6.0019e-297)}
; -1.2568732856646158690949732772423885762691497802734375p407 * 1.962610752178345574492368541541509330272674560546875p-985 == -1.2333765122855500084853019870934076607227325439453125p-577
; [HW: -1.2333765122855500084853019870934076607227325439453125p-577] 

; mpf : - 1051034373766229 -577
; mpfd: - 1051034373766229 -577 (-2.49338e-174) class: Neg. norm. non-zero
; hwf : - 1051034373766229 -577 (-2.49338e-174) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010110 #b0100000111000010011100101001100100100101010001010111)))
(assert (= y (fp #b0 #b00000100110 #b1111011001101101101010001000001101100010010010101110)))
(assert (= r (fp #b1 #b00110111110 #b0011101110111110100100000010011111101011110001010101)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
