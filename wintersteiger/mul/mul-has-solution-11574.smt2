(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.38956394848331132862995218602009117603302001953125p-14 {+ 1754440053226420 -14 (8.48123e-005)}
; Y = 1.256205393947351200978346241754479706287384033203125p-459 {+ 1153846516711602 -459 (8.43903e-139)}
; 1.38956394848331132862995218602009117603302001953125p-14 * 1.256205393947351200978346241754479706287384033203125p-459 == 1.7455777273195149934537084845942445099353790283203125p-473
; [HW: 1.7455777273195149934537084845942445099353790283203125p-473] 

; mpf : + 3357783574931909 -473
; mpfd: + 3357783574931909 -473 (7.15733e-143) class: Pos. norm. non-zero
; hwf : + 3357783574931909 -473 (7.15733e-143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111110001 #b0110001110111010011101101000001001101111101110110100)))
(assert (= y (fp #b0 #b01000110100 #b0100000110010110101011010011110000010000000010110010)))
(assert (= r (fp #b0 #b01000100110 #b1011111011011110001011101001001101110110100111000101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
