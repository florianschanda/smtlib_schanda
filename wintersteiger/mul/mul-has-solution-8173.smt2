(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.579651232850303177457362835411913692951202392578125p-892 {- 2610517076269474 -892 (-4.78415e-269)}
; Y = 1.557545163114665509596079573384486138820648193359375p1 {+ 2510960188845430 1 (3.11509)}
; -1.579651232850303177457362835411913692951202392578125p-892 * 1.557545163114665509596079573384486138820648193359375p1 == -1.230189068567054011538175473106093704700469970703125p-890
; [HW: -1.230189068567054011538175473106093704700469970703125p-890] 

; mpf : - 1036679403423346 -890
; mpfd: - 1036679403423346 -890 (-1.49031e-268) class: Neg. norm. non-zero
; hwf : - 1036679403423346 -890 (-1.49031e-268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010000011 #b1001010001100100000001011111000000101101100110100010)))
(assert (= y (fp #b0 #b10000000000 #b1000111010111011010001111010000110011110110101110110)))
(assert (= r (fp #b1 #b00010000101 #b0011101011101101101010111011100101100100011001110010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
