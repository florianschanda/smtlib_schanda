(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9631177074596373177683972244267351925373077392578125p-545 {- 4337496548429149 -545 (-1.70451e-164)}
; Y = 1.0694112310080978733850542994332499802112579345703125p199 {+ 312600394103397 199 (8.59239e+059)}
; -1.9631177074596373177683972244267351925373077392578125p-545 * 1.0694112310080978733850542994332499802112579345703125p199 == -1.049690062074102758771232402068562805652618408203125p-345
; [HW: -1.049690062074102758771232402068562805652618408203125p-345] 

; mpf : - 223784145040946 -345
; mpfd: - 223784145040946 -345 (-1.46458e-104) class: Neg. norm. non-zero
; hwf : - 223784145040946 -345 (-1.46458e-104) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111011110 #b1111011010001110111000011100111110111100110101011101)))
(assert (= y (fp #b0 #b10011000110 #b0001000111000100111011110011011100100111101001100101)))
(assert (= r (fp #b1 #b01010100110 #b0000110010111000011111001110011110001011011000110010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
