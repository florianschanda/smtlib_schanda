(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.223260720535753076632090596831403672695159912109375p449 {+ 1005476897811286 449 (1.77823e+135)}
; Y = 1.135456490846469268518603712436743080615997314453125p656 {+ 610041801701074 656 (3.39506e+197)}
; 1.223260720535753076632090596831403672695159912109375p449 * 1.135456490846469268518603712436743080615997314453125p656 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000000 #b0011100100100111100111010101010100101110101101010110)))
(assert (= y (fp #b0 #b11010001111 #b0010001010101101010001101100111000110111011011010010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
