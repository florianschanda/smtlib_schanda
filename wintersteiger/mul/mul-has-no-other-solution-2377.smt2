(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3067905578323617543645696059684269130229949951171875p30 {- 1381661841934611 30 (-1.40316e+009)}
; Y = -1.13367349667965555681803380139172077178955078125p392 {- 602011909835808 392 (-1.14353e+118)}
; -1.3067905578323617543645696059684269130229949951171875p30 * -1.13367349667965555681803380139172077178955078125p392 == 1.4814738211257714173285648939781822264194488525390625p422
; [HW: 1.4814738211257714173285648939781822264194488525390625p422] 

; mpf : + 2168365321410673 422
; mpfd: + 2168365321410673 422 (1.60455e+127) class: Pos. norm. non-zero
; hwf : + 2168365321410673 422 (1.60455e+127) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011101 #b0100111010001001110100110111010010011100100100010011)))
(assert (= y (fp #b1 #b10110000111 #b0010001000111000011011010010000010010100110000100000)))
(assert (= r (fp #b0 #b10110100101 #b0111101101000001110111100100101110011101100001110001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
