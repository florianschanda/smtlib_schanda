(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1535028428217259932608840244938619434833526611328125p-42 {- 691315345732237 -42 (-2.62276e-013)}
; Y = -1.6976627351590629633193429981474764645099639892578125p962 {- 3141993634092637 962 (-6.6177e+289)}
; -1.1535028428217259932608840244938619434833526611328125p-42 * -1.6976627351590629633193429981474764645099639892578125p962 == 1.9582587911584858897384719966794364154338836669921875p920
; [HW: 1.9582587911584858897384719966794364154338836669921875p920] 

; mpf : + 4315613934785859 920
; mpfd: + 4315613934785859 920 (1.73567e+277) class: Pos. norm. non-zero
; hwf : + 4315613934785859 920 (1.73567e+277) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111010101 #b0010011101001011111101100101100111000011001010001101)))
(assert (= y (fp #b1 #b11111000001 #b1011001010011010000001100110011100100101011001011101)))
(assert (= r (fp #b0 #b11110010111 #b1111010101010000011100101011100100100001010101000011)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
