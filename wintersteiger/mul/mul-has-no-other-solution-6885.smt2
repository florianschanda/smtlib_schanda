(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9349680194148974887724534710287116467952728271484375p-907 {+ 4210721623840263 -907 (1.78841e-273)}
; Y = -1.9794682735656821126468685179133899509906768798828125p-138 {- 4411132951851629 -138 (-5.6808e-042)}
; 1.9349680194148974887724534710287116467952728271484375p-907 * -1.9794682735656821126468685179133899509906768798828125p-138 == -0.0000004565963511726778278898564167320728302001953125p-1022
; [HW: -0.0000004565963511726778278898564167320728302001953125p-1022] 

; mpf : - 2056327157 -1023
; mpfd: - 2056327157 -1023 (-1.01596e-314) class: Neg. denorm.
; hwf : - 2056327157 -1023 (-1.01596e-314) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110100 #b1110111101011010000100000110101000110001011000000111)))
(assert (= y (fp #b1 #b01101110101 #b1111101010111110011011101100101001101111001001101101)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000001111010100100010000111111110101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
