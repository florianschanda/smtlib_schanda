(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2451645951015033464415182606899179518222808837890625p503 {+ 1104123179143569 503 (3.26073e+151)}
; Y = 1.9851943394474798054716302431188523769378662109375p-456 {+ 4436920860023192 -456 (1.0669e-137)}
; 1.2451645951015033464415182606899179518222808837890625p503 * 1.9851943394474798054716302431188523769378662109375p-456 == 1.2359468529379586954064507153816521167755126953125p48
; [HW: 1.2359468529379586954064507153816521167755126953125p48] 

; mpf : + 1062610158970632 48
; mpfd: + 1062610158970632 48 (3.47888e+014) class: Pos. norm. non-zero
; hwf : + 1062610158970632 48 (3.47888e+014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110110 #b0011111011000011000110110101111000011001000110010001)))
(assert (= y (fp #b0 #b01000110111 #b1111110000110101101100100011110000100001100110011000)))
(assert (= r (fp #b0 #b10000101111 #b0011110001100111000000110101000011110110011100001000)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
