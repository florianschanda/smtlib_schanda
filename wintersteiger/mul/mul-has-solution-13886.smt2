(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.206743049866657369051381465396843850612640380859375p-706 {+ 931087922340918 -706 (3.58458e-213)}
; Y = 1.9301625497502274964034540971624664962291717529296875p502 {+ 4189079712449115 502 (2.52727e+151)}
; 1.206743049866657369051381465396843850612640380859375p-706 * 1.9301625497502274964034540971624664962291717529296875p502 == 1.1646051210119965357847604536800645291805267333984375p-203
; [HW: 1.1646051210119965357847604536800645291805267333984375p-203] 

; mpf : + 741315561652903 -203
; mpfd: + 741315561652903 -203 (9.05919e-062) class: Pos. norm. non-zero
; hwf : + 741315561652903 -203 (9.05919e-062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111101 #b0011010011101101000111001100110111011010010000110110)))
(assert (= y (fp #b0 #b10111110101 #b1110111000011111001000100000001100100100001001011011)))
(assert (= r (fp #b0 #b01100110100 #b0010101000100011100011111010101110000000001010100111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
