(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.612695011229717589884558037738315761089324951171875p108 {- 2759333024265918 108 (-5.23349e+032)}
; Y = -1.6930693375160135172308173423516564071178436279296875p144 {- 3121306810179035 144 (-3.77567e+043)}
; -1.612695011229717589884558037738315761089324951171875p108 * -1.6930693375160135172308173423516564071178436279296875p144 == 1.3652022371390388766343448878615163266658782958984375p253
; [HW: 1.3652022371390388766343448878615163266658782958984375p253] 

; mpf : + 1644724659094247 253
; mpfd: + 1644724659094247 253 (1.976e+076) class: Pos. norm. non-zero
; hwf : + 1644724659094247 253 (1.976e+076) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101011 #b1001110011011001100101001000101110100111011010111110)))
(assert (= y (fp #b1 #b10010001111 #b1011000101101100111111011111101001111101110111011011)))
(assert (= r (fp #b0 #b10011111100 #b0101110101111101111001001101000011110000001011100111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
