(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7892929968969195630990043355268426239490509033203125p727 {- 3554659646711109 727 (-1.26325e+219)}
; Y = -1.168694966358714726339940170873887836933135986328125p-620 {- 759734587632386 -620 (-2.68599e-187)}
; -1.7892929968969195630990043355268426239490509033203125p727 * -1.168694966358714726339940170873887836933135986328125p-620 == 1.0455688594071645969307837731321342289447784423828125p108
; [HW: 1.0455688594071645969307837731321342289447784423828125p108] 

; mpf : + 205223898245805 108
; mpfd: + 205223898245805 108 (3.39306e+032) class: Pos. norm. non-zero
; hwf : + 205223898245805 108 (3.39306e+032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011010110 #b1100101000001111000110110001100010100010010101000101)))
(assert (= y (fp #b1 #b00110010011 #b0010101100101111100101111110001110000010101100000010)))
(assert (= r (fp #b0 #b10001101011 #b0000101110101010011001101001100011011110101010101101)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
