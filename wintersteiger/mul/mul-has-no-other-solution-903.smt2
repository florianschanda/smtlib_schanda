(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.814430456689448245555240646353922784328460693359375p91 {+ 3667868701265782 91 (4.49231e+027)}
; Y = -1.3374917426393231334458278070087544620037078857421875p607 {- 1519927686391075 607 (-7.10393e+182)}
; 1.814430456689448245555240646353922784328460693359375p91 * -1.3374917426393231334458278070087544620037078857421875p607 == -1.213392876707716450113139217137359082698822021484375p699
; [HW: -1.213392876707716450113139217137359082698822021484375p699] 

; mpf : - 961036080024390 699
; mpfd: - 961036080024390 699 (-3.19131e+210) class: Neg. norm. non-zero
; hwf : - 961036080024390 699 (-3.19131e+210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001011010 #b1101000001111110100000111011000001011000111101110110)))
(assert (= y (fp #b1 #b11001011110 #b0101011001100101110110111101110101001110010100100011)))
(assert (= r (fp #b1 #b11010111010 #b0011011010100000111010100110001010101000101101000110)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
