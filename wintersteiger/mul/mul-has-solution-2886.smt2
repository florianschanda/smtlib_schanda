(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.99371343098875986044049568590708076953887939453125p-84 {- 4475287437514036 -84 (-1.03073e-025)}
; Y = 1.9250059386575848474620897832210175693035125732421875p238 {+ 4165856400653795 238 (8.50298e+071)}
; -1.99371343098875986044049568590708076953887939453125p-84 * 1.9250059386575848474620897832210175693035125732421875p238 == -1.9189550973173756798217937102890573441982269287109375p155
; [HW: -1.9189550973173756798217937102890573441982269287109375p155] 

; mpf : - 4138605833848751 155
; mpfd: - 4138605833848751 155 (-8.76424e+046) class: Neg. norm. non-zero
; hwf : - 4138605833848751 155 (-8.76424e+046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101011 #b1111111001100100000000001101111110110001010100110100)))
(assert (= y (fp #b0 #b10011101101 #b1110110011001101001100000110111100100011110111100011)))
(assert (= r (fp #b1 #b10010011010 #b1110101101000000101001000010100101111000011110101111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
