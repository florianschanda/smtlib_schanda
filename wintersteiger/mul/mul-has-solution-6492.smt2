(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4834796294980587827438966996851377189159393310546875p-214 {- 2177398679248683 -214 (-5.63459e-065)}
; Y = 1.5775529105780174976558782873325981199741363525390625p-54 {+ 2601067072865905 -54 (8.75718e-017)}
; -1.4834796294980587827438966996851377189159393310546875p-214 * 1.5775529105780174976558782873325981199741363525390625p-54 == -1.170133803648930825858087700908072292804718017578125p-267
; [HW: -1.170133803648930825858087700908072292804718017578125p-267] 

; mpf : - 766214534716450 -267
; mpfd: - 766214534716450 -267 (-4.93431e-081) class: Neg. norm. non-zero
; hwf : - 766214534716450 -267 (-4.93431e-081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100101001 #b0111101111000101010100100010110011111001111100101011)))
(assert (= y (fp #b0 #b01111001001 #b1001001111011010100000011110111010100100011001110001)))
(assert (= r (fp #b1 #b01011110100 #b0010101110001101111000111001001010011101110000100010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
