(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5800381307376969441946812366950325667858123779296875p-655 {- 2612259509450971 -655 (-1.05687e-197)}
; Y = -1.3138034436949210803646792555809952318668365478515625p255 {- 1413245072092025 255 (-7.6064e+076)}
; -1.5800381307376969441946812366950325667858123779296875p-655 * -1.3138034436949210803646792555809952318668365478515625p255 == 1.0379297686662358746190193414804525673389434814453125p-399
; [HW: 1.0379297686662358746190193414804525673389434814453125p-399] 

; mpf : + 170820492031509 -399
; mpfd: + 170820492031509 -399 (8.03896e-121) class: Pos. norm. non-zero
; hwf : + 170820492031509 -399 (8.03896e-121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101110000 #b1001010001111101011000010000000111110011100011011011)))
(assert (= y (fp #b1 #b10011111110 #b0101000001010101011011000010100000001010101101111001)))
(assert (= r (fp #b0 #b01001110000 #b0000100110110101110000111110101111110111011000010101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
