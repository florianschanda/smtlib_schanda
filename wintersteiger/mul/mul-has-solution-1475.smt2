(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.338977728297666036638702280470170080661773681640625p502 {- 1526619970848266 502 (-1.7532e+151)}
; Y = 1.87616361915966223250507027842104434967041015625p623 {+ 3945890148763040 623 (6.53067e+187)}
; -1.338977728297666036638702280470170080661773681640625p502 * 1.87616361915966223250507027842104434967041015625p623 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110101 #b0101011011000111001111101001000100011100011000001010)))
(assert (= y (fp #b0 #b11001101110 #b1110000001001100010000100100101000111100010110100000)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
