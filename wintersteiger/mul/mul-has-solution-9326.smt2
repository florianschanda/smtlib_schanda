(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.702124956740008965283550423919223248958587646484375p-240 {- 3162089693541830 -240 (-9.63369e-073)}
; Y = -1.339717205010432454770352705963887274265289306640625p-140 {- 1529950277896330 -140 (-9.612e-043)}
; -1.702124956740008965283550423919223248958587646484375p-240 * -1.339717205010432454770352705963887274265289306640625p-140 == 1.140183044811113877159414187190122902393341064453125p-379
; [HW: 1.140183044811113877159414187190122902393341064453125p-379] 

; mpf : + 631328308374994 -379
; mpfd: + 631328308374994 -379 (9.2599e-115) class: Pos. norm. non-zero
; hwf : + 631328308374994 -379 (9.2599e-115) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100001111 #b1011001110111110011101100000111011100111010111000110)))
(assert (= y (fp #b1 #b01101110011 #b0101011011110111101101001110110101101000100010001010)))
(assert (= r (fp #b0 #b01010000100 #b0010001111100011000010010011100011101010110111010010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
