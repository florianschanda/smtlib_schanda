(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.267806078063016261836537523777224123477935791015625p-406 {- 1206091353372154 -406 (-7.6714e-123)}
; Y = -1.6625375644392359486545274194213561713695526123046875p-178 {- 2983803928327499 -178 (-4.33943e-054)}
; -1.267806078063016261836537523777224123477935791015625p-406 * -1.6625375644392359486545274194213561713695526123046875p-178 == 1.0538876146020734747565938960178755223751068115234375p-583
; [HW: 1.0538876146020734747565938960178755223751068115234375p-583] 

; mpf : + 242688241041783 -583
; mpfd: + 242688241041783 -583 (3.32895e-176) class: Pos. norm. non-zero
; hwf : + 242688241041783 -583 (3.32895e-176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101001 #b0100010010001110111100000110101011110011010111111010)))
(assert (= y (fp #b1 #b01101001101 #b1010100110011100000011111101001110100011010101001011)))
(assert (= r (fp #b0 #b00110111000 #b0000110111001011100101000010011001100000000101110111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
