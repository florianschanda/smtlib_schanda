(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2891700708896876026443578666658140718936920166015625p799 {+ 1302306223505497 799 (4.2981e+240)}
; Y = 1.4710507334926783418183049434446729719638824462890625p760 {+ 2121423907830225 760 (8.92122e+228)}
; 1.2891700708896876026443578666658140718936920166015625p799 * 1.4710507334926783418183049434446729719638824462890625p760 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011110 #b0100101000000111000011001011110101110100000001011001)))
(assert (= y (fp #b0 #b11011110111 #b0111100010010110110001111110011100011011100111010001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
