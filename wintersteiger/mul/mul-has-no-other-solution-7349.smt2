(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.91702035615468968643426705966703593730926513671875p256 {+ 4129892534269420 256 (2.21976e+077)}
; Y = -1.5919594277685700234314936096780002117156982421875p893 {- 2665948258316984 893 (-1.05128e+269)}
; 1.91702035615468968643426705966703593730926513671875p256 * -1.5919594277685700234314936096780002117156982421875p893 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111111 #b1110101011000001110110001001011101110011010111101100)))
(assert (= y (fp #b1 #b11101111100 #b1001011110001010101001110010111011010011001010111000)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
