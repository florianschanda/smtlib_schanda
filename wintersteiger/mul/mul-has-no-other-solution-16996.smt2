(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.60079416460196188864983923849649727344512939453125p191 {+ 2705736375827764 191 (5.02417e+057)}
; Y = 1.2792460647781316307458610026515088975429534912109375p-654 {+ 1257612473279471 -654 (1.71134e-197)}
; 1.60079416460196188864983923849649727344512939453125p191 * 1.2792460647781316307458610026515088975429534912109375p-654 == 1.023904817793428012606682386831380426883697509765625p-462
; [HW: 1.023904817793428012606682386831380426883697509765625p-462] 

; mpf : + 107657728506842 -462
; mpfd: + 107657728506842 -462 (8.59808e-140) class: Pos. norm. non-zero
; hwf : + 107657728506842 -462 (8.59808e-140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111110 #b1001100111001101101001010111100010010111110100110100)))
(assert (= y (fp #b0 #b00101110001 #b0100011101111100101010111000101111000010001111101111)))
(assert (= r (fp #b0 #b01000110001 #b0000011000011110101000000100101010100011101111011010)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
