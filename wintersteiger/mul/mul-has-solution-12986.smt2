(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0313607020982562545441396650858223438262939453125p836 {+ 141236046283784 836 (4.72593e+251)}
; Y = -1.3555327640676819722642676424584351480007171630859375p347 {- 1601177223773215 347 (-3.88614e+104)}
; 1.0313607020982562545441396650858223438262939453125p836 * -1.3555327640676819722642676424584351480007171630859375p347 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000011 #b0000100000000111010000010100010111100100010000001000)))
(assert (= y (fp #b1 #b10101011010 #b0101101100000100001100011111101001010011110000011111)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
