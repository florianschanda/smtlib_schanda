(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7064894848543394889617275111959315836429595947265625p-676 {+ 3181745780731177 -676 (5.44285e-204)}
; Y = -1.8388772488529732118678339247708208858966827392578125p93 {- 3777967265343837 93 (-1.82114e+028)}
; 1.7064894848543394889617275111959315836429595947265625p-676 * -1.8388772488529732118678339247708208858966827392578125p93 == -1.569012344552737747704895809874869883060455322265625p-582
; [HW: -1.569012344552737747704895809874869883060455322265625p-582] 

; mpf : - 2562603782896922 -582
; mpfd: - 2562603782896922 -582 (-9.91217e-176) class: Neg. norm. non-zero
; hwf : - 2562603782896922 -582 (-9.91217e-176) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101011011 #b1011010011011100011111101011000001101010110100101001)))
(assert (= y (fp #b1 #b10001011100 #b1101011011000000101010001100110100101110100101011101)))
(assert (= r (fp #b1 #b00110111001 #b1001000110101010110010110000001011011111110100011010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
