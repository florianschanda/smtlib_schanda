(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.007436675084644850386439429712481796741485595703125p496 {+ 33491807140082 496 (2.06108e+149)}
; Y = -1.121223538219632498424971345230005681514739990234375p51 {- 545942281554470 51 (-2.52477e+015)}
; 1.007436675084644850386439429712481796741485595703125p496 * -1.121223538219632498424971345230005681514739990234375p51 == -1.129561713370627717978322834824211895465850830078125p547
; [HW: -1.129561713370627717978322834824211895465850830078125p547] 

; mpf : - 583494084057442 547
; mpfd: - 583494084057442 547 (-5.20376e+164) class: Neg. norm. non-zero
; hwf : - 583494084057442 547 (-5.20376e+164) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101111 #b0000000111100111010111101011010001000111100011110010)))
(assert (= y (fp #b1 #b10000110010 #b0001111100001000100000010111110000101000101000100110)))
(assert (= r (fp #b1 #b11000100010 #b0010000100101010111101001101100110111101100101100010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
