(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3942603858094384516874697510502301156520843505859375p-530 {+ 1775590926618335 -530 (3.96685e-160)}
; Y = 1.11203117316971233918820871622301638126373291015625p389 {+ 504543549740996 389 (1.40212e+117)}
; 1.3942603858094384516874697510502301156520843505859375p-530 * 1.11203117316971233918820871622301638126373291015625p389 == 1.5504610125357256578126907697878777980804443359375p-141
; [HW: 1.5504610125357256578126907697878777980804443359375p-141] 

; mpf : + 2479056010937880 -141
; mpfd: + 2479056010937880 -141 (5.56201e-043) class: Pos. norm. non-zero
; hwf : + 2479056010937880 -141 (5.56201e-043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101101 #b0110010011101110001111111010011100101000111011011111)))
(assert (= y (fp #b0 #b10110000100 #b0001110010101110000100110011000011100101011111000100)))
(assert (= r (fp #b0 #b01101110010 #b1000110011101011000000110100111010010000011000011000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
