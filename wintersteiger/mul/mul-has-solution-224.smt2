(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8058463028454834198299749914440326392650604248046875p473 {+ 3629209109212811 473 (4.40422e+142)}
; Y = -1.6373696375010684533890525926835834980010986328125p-784 {- 2870457661947080 -784 (-1.60927e-236)}
; 1.8058463028454834198299749914440326392650604248046875p473 * -1.6373696375010684533890525926835834980010986328125p-784 == -1.4784189531363767233784756172099150717258453369140625p-310
; [HW: -1.4784189531363767233784756172099150717258453369140625p-310] 

; mpf : - 2154607419071969 -310
; mpfd: - 2154607419071969 -310 (-7.08759e-094) class: Neg. norm. non-zero
; hwf : - 2154607419071969 -310 (-7.08759e-094) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011000 #b1100111001001011111100010111110001010010111010001011)))
(assert (= y (fp #b1 #b00011101111 #b1010001100101010101010000001010010000111110011001000)))
(assert (= r (fp #b1 #b01011001001 #b0111101001111001101010100001110110000001110111100001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
