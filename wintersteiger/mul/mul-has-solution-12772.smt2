(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0385882675618953729923532591783441603183746337890625p-551 {- 173786107412625 -551 (-1.40902e-166)}
; Y = 1.27398498245144953244789576274342834949493408203125p-337 {+ 1233918664873460 -337 (4.55046e-102)}
; -1.0385882675618953729923532591783441603183746337890625p-551 * 1.27398498245144953244789576274342834949493408203125p-337 == -1.323145855824122474331261400948278605937957763671875p-888
; [HW: -1.323145855824122474331261400948278605937957763671875p-888] 

; mpf : - 1455319555875838 -888
; mpfd: - 1455319555875838 -888 (-6.41168e-268) class: Neg. norm. non-zero
; hwf : - 1455319555875838 -888 (-6.41168e-268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111011000 #b0000100111100000111010111011001100110000000010010001)))
(assert (= y (fp #b0 #b01010101110 #b0100011000100011111000010011101100111001010111110100)))
(assert (= r (fp #b1 #b00010000111 #b0101001010111001101011111101001010011010001111111110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
