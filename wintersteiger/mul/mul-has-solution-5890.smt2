(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0277903925004638896467668018885888159275054931640625p133 {- 125156801309569 133 (-1.11916e+040)}
; Y = -0.016051052596659953763946759863756597042083740234375p-1022 {- 72287514493222 -1023 (-3.57148e-310)}
; -1.0277903925004638896467668018885888159275054931640625p133 * -0.016051052596659953763946759863756597042083740234375p-1022 == 1.0558155294954703062870748908608220517635345458984375p-895
; [HW: 1.0558155294954703062870748908608220517635345458984375p-895] 

; mpf : + 251370797837287 -895
; mpfd: + 251370797837287 -895 (3.99707e-270) class: Pos. norm. non-zero
; hwf : + 251370797837287 -895 (3.99707e-270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000100 #b0000011100011101010001010110101011101110101110000001)))
(assert (= y (fp #b1 #b00000000000 #b0000010000011011111010111111100111111000000100100110)))
(assert (= r (fp #b0 #b00010000000 #b0000111001001001111011010011000111001010101111100111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
