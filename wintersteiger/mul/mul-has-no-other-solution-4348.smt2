(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3259527364201184607139794024988077580928802490234375p259 {+ 1467960622282039 259 (1.22828e+078)}
; Y = -1.981486685356775634403447838849388062953948974609375p-943 {- 4420223070441878 -943 (-2.66505e-284)}
; 1.3259527364201184607139794024988077580928802490234375p259 * -1.981486685356775634403447838849388062953948974609375p-943 == -1.31367884631442333187578697106800973415374755859375p-683
; [HW: -1.31367884631442333187578697106800973415374755859375p-683] 

; mpf : - 1412683935375644 -683
; mpfd: - 1412683935375644 -683 (-3.27342e-206) class: Neg. norm. non-zero
; hwf : - 1412683935375644 -683 (-3.27342e-206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100000010 #b0101001101110001101000110111011011110111010100110111)))
(assert (= y (fp #b1 #b00001010000 #b1111101101000010101101100001111100010001000110010110)))
(assert (= r (fp #b1 #b00101010100 #b0101000001001101010000011100001001011110000100011100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
