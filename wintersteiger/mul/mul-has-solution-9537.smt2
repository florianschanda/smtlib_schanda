(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.367251095331232679797039963887073099613189697265625p762 {- 1653951896085146 762 (-3.31669e+229)}
; Y = 1.16428971623703159110618798877112567424774169921875p888 {+ 739895104825900 888 (2.40269e+267)}
; -1.367251095331232679797039963887073099613189697265625p762 * 1.16428971623703159110618798877112567424774169921875p888 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111001 #b0101111000000100001010101111001111011110001010011010)))
(assert (= y (fp #b0 #b11101110111 #b0010101000001110111001000000111001001110101000101100)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
