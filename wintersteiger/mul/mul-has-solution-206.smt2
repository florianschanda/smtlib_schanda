(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1370277723235886480068757009576074779033660888671875p430 {+ 617118224375923 430 (3.1526e+129)}
; Y = 1.1763169394388561794784209268982522189617156982421875p-112 {+ 794060902755939 -112 (2.2655e-034)}
; 1.1370277723235886480068757009576074779033660888671875p430 * 1.1763169394388561794784209268982522189617156982421875p-112 == 1.337505029196664363411173326312564313411712646484375p318
; [HW: 1.337505029196664363411173326312564313411712646484375p318] 

; mpf : + 1519987523725766 318
; mpfd: + 1519987523725766 318 (7.14223e+095) class: Pos. norm. non-zero
; hwf : + 1519987523725766 318 (7.14223e+095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110101101 #b0010001100010100010000001000100011000110000001110011)))
(assert (= y (fp #b0 #b01110001111 #b0010110100100011000110110110000010011110111001100011)))
(assert (= r (fp #b0 #b10100111101 #b0101011001100110101110101100011010100010100111000110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
