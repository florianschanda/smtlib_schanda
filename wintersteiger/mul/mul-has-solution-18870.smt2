(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6135943480620376089262890673126094043254852294921875p-172 {- 2763383277288835 -172 (-2.69547e-052)}
; Y = -1.3604757605267729925202502272441051900386810302734375p677 {- 1623438500784471 677 (-8.53096e+203)}
; -1.6135943480620376089262890673126094043254852294921875p-172 * -1.3604757605267729925202502272441051900386810302734375p677 == 1.0976279989307016204946876314352266490459442138671875p506
; [HW: 1.0976279989307016204946876314352266490459442138671875p506] 

; mpf : + 439677419605235 506
; mpfd: + 439677419605235 506 (2.2995e+152) class: Pos. norm. non-zero
; hwf : + 439677419605235 506 (2.2995e+152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101010011 #b1001110100010100100001001110100111101111110110000011)))
(assert (= y (fp #b1 #b11010100100 #b0101110001001000001000111011001001110110100101010111)))
(assert (= r (fp #b0 #b10111111001 #b0001100011111110001001100000011010010100110011110011)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
