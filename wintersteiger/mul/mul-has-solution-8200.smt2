(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3845423217473682431233328316011466085910797119140625p269 {- 1731824656929633 269 (-1.31333e+081)}
; Y = 1.43154919747954156861169394687749445438385009765625p-39 {+ 1943524804960900 -39 (2.60397e-012)}
; -1.3845423217473682431233328316011466085910797119140625p269 * 1.43154919747954156861169394687749445438385009765625p-39 == -1.9820404495739063488457532002939842641353607177734375p230
; [HW: -1.9820404495739063488457532002939842641353607177734375p230] 

; mpf : - 4422717002763799 230
; mpfd: - 4422717002763799 230 (-3.41989e+069) class: Neg. norm. non-zero
; hwf : - 4422717002763799 230 (-3.41989e+069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001100 #b0110001001110001010111011001011111010101001101100001)))
(assert (= y (fp #b0 #b01111011000 #b0110111001111010000000100001100111001010001010000100)))
(assert (= r (fp #b1 #b10011100101 #b1111101101100111000000001011111001000100111000010111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
