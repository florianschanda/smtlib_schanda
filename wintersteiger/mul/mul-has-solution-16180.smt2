(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8920920332949062725447220145724713802337646484375p-161 {+ 4017625348727128 -161 (6.47311e-049)}
; Y = -1.67279519660710196404806993086822330951690673828125p193 {- 3030000196736404 193 (-2.10006e+058)}
; 1.8920920332949062725447220145724713802337646484375p-161 * -1.67279519660710196404806993086822330951690673828125p193 == -1.582541232417141952026895523886196315288543701171875p33
; [HW: -1.582541232417141952026895523886196315288543701171875p33] 

; mpf : - 2623532477241790 33
; mpfd: - 2623532477241790 33 (-1.35939e+010) class: Neg. norm. non-zero
; hwf : - 2623532477241790 33 (-1.35939e+010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101011110 #b1110010001100000001001001011110000000110000101011000)))
(assert (= y (fp #b1 #b10011000000 #b1010110000111100010011100101011001010101010110010100)))
(assert (= r (fp #b1 #b10000100000 #b1001010100100001011011000001010111001101100110111110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
