(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7389047535548878276046025348477996885776519775390625p-697 {- 3327731172772081 -697 (-2.64465e-210)}
; Y = 1.0347344048231004176585656750830821692943572998046875p869 {+ 156429852618251 869 (4.07282e+261)}
; -1.7389047535548878276046025348477996885776519775390625p-697 * 1.0347344048231004176585656750830821692943572998046875p869 == -1.7993045752136771486817679033265449106693267822265625p172
; [HW: -1.7993045752136771486817679033265449106693267822265625p172] 

; mpf : - 3599747787087849 172
; mpfd: - 3599747787087849 172 (-1.07712e+052) class: Neg. norm. non-zero
; hwf : - 3599747787087849 172 (-1.07712e+052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101000110 #b1011110100101000110111001010011101100000100011110001)))
(assert (= y (fp #b0 #b11101100100 #b0000100011100100010110101001110011000010111000001011)))
(assert (= r (fp #b1 #b10010101011 #b1100110010011111001110011000001000010101111111101001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
