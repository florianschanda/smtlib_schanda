(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5320739153887554806487969472073018550872802734375p-498 {- 2396247887078360 -498 (-1.87216e-150)}
; Y = -1.62935399402580483041447223513387143611907958984375p819 {- 2834358412978748 819 (-5.69616e+246)}
; -1.5320739153887554806487969472073018550872802734375p-498 * -1.62935399402580483041447223513387143611907958984375p819 == 1.2481453765907108977017969664302654564380645751953125p322
; [HW: 1.2481453765907108977017969664302654564380645751953125p322] 

; mpf : + 1117547425547637 322
; mpfd: + 1117547425547637 322 (1.06641e+097) class: Pos. norm. non-zero
; hwf : + 1117547425547637 322 (1.06641e+097) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000001101 #b1000100000110101111111110000000110100110001111011000)))
(assert (= y (fp #b1 #b11100110010 #b1010000100011101010101111110010111110010101000111100)))
(assert (= r (fp #b0 #b10101000001 #b0011111110000110011101001001010100011100010101110101)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
