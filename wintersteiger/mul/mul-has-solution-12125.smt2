(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1811458760861677230735722332610748708248138427734375p709 {- 815808500041367 709 (-3.18105e+213)}
; Y = -1.2131534872868121599509549923823215067386627197265625p-702 {- 959957965917609 -702 (-5.76579e-212)}
; -1.1811458760861677230735722332610748708248138427734375p709 * -1.2131534872868121599509549923823215067386627197265625p-702 == 1.4329112385683711039519039331935346126556396484375p7
; [HW: 1.4329112385683711039519039331935346126556396484375p7] 

; mpf : + 1949658892701016 7
; mpfd: + 1949658892701016 7 (183.413) class: Pos. norm. non-zero
; hwf : + 1949658892701016 7 (183.413) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000100 #b0010111001011111100100110111110110011000011010010111)))
(assert (= y (fp #b1 #b00101000001 #b0011011010010001001110100001100011101100110110101001)))
(assert (= r (fp #b0 #b10000000110 #b0110111011010011010001010101101110111000110101011000)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
