(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4998435390830648916704603834659792482852935791015625p-873 {+ 2251095176358041 -873 (2.38155e-263)}
; Y = 1.57159579009007277505816091434098780155181884765625p808 {+ 2574238587256196 808 (2.68273e+243)}
; 1.4998435390830648916704603834659792482852935791015625p-873 * 1.57159579009007277505816091434098780155181884765625p808 == 1.178573895908370250396046685636974871158599853515625p-64
; [HW: 1.178573895908370250396046685636974871158599853515625p-64] 

; mpf : + 804225331071034 -64
; mpfd: + 804225331071034 -64 (6.38906e-020) class: Pos. norm. non-zero
; hwf : + 804225331071034 -64 (6.38906e-020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010010110 #b0111111111110101101111110000010101111010100010011001)))
(assert (= y (fp #b0 #b11100100111 #b1001001001010100000110100000100011110111110110000100)))
(assert (= r (fp #b0 #b01110111111 #b0010110110110111000001001101001011011000100000111010)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
