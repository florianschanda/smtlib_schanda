(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.985935833550697804383844413678161799907684326171875p10 {+ 4440260252590142 10 (2033.6)}
; Y = -1.325095004907861806486835121177136898040771484375p-221 {- 1464097742963056 -221 (-3.93204e-067)}
; 1.985935833550697804383844413678161799907684326171875p10 * -1.325095004907861806486835121177136898040771484375p-221 == -1.315776826552780054413460675277747213840484619140625p-210
; [HW: -1.315776826552780054413460675277747213840484619140625p-210] 

; mpf : - 1422132398395338 -210
; mpfd: - 1422132398395338 -210 (-7.99619e-064) class: Neg. norm. non-zero
; hwf : - 1422132398395338 -210 (-7.99619e-064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001001 #b1111110001100110010010100111000100001110000000111110)))
(assert (= y (fp #b1 #b01100100010 #b0101001100111001011011010001111000101100000101110000)))
(assert (= r (fp #b1 #b01100101101 #b0101000011010110110000000000011011100000111111001010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
