(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6841763014305772827583496109582483768463134765625p-926 {- 3081256136178472 -926 (-2.96901e-279)}
; Y = 1.823211082528306103966997397947125136852264404296875p974 {+ 3707413124521742 974 (2.91107e+293)}
; -1.6841763014305772827583496109582483768463134765625p-926 * 1.823211082528306103966997397947125136852264404296875p974 == -1.5353044488498805986154138736310414969921112060546875p49
; [HW: -1.5353044488498805986154138736310414969921112060546875p49] 

; mpf : - 2410796916370091 49
; mpfd: - 2410796916370091 49 (-8.643e+014) class: Neg. norm. non-zero
; hwf : - 2410796916370091 49 (-8.643e+014) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100001 #b1010111100100110001011011001011101010111101100101000)))
(assert (= y (fp #b0 #b11111001101 #b1101001010111101111101100010010100101001111100001110)))
(assert (= r (fp #b1 #b10000110000 #b1000100100001001101101100101110100110110101010101011)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
