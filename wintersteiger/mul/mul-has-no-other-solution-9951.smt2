(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.43722367433082354182261042296886444091796875p147 {- 1969080376793856 147 (-2.56409e+044)}
; Y = 1.7599156287363302286763655501999892294406890869140625p-695 {+ 3422355742409953 -695 (1.07064e-209)}
; -1.43722367433082354182261042296886444091796875p147 * 1.7599156287363302286763655501999892294406890869140625p-695 == -1.2646962032223350025361696680192835628986358642578125p-547
; [HW: -1.2646962032223350025361696680192835628986358642578125p-547] 

; mpf : - 1192085722198493 -547
; mpfd: - 1192085722198493 -547 (-2.74523e-165) class: Neg. norm. non-zero
; hwf : - 1192085722198493 -547 (-2.74523e-165) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010010 #b0110111111101101111001000000011001001001101100000000)))
(assert (= y (fp #b0 #b00101001000 #b1100001010001001110101001010010100100100010011100001)))
(assert (= r (fp #b1 #b00111011100 #b0100001111000011001000010110000000110111000111011101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
