(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5590350853808419007151542245992459356784820556640625p-583 {- 2517670202208193 -583 (-4.92457e-176)}
; Y = 1.969597164164018199272732090321369469165802001953125p630 {+ 4366677427228562 630 (8.77556e+189)}
; -1.5590350853808419007151542245992459356784820556640625p-583 * 1.969597164164018199272732090321369469165802001953125p630 == -1.535335541499156963851646651164628565311431884765625p48
; [HW: -1.535335541499156963851646651164628565311431884765625p48] 

; mpf : - 2410936945213786 48
; mpfd: - 2410936945213786 48 (-4.32159e+014) class: Neg. norm. non-zero
; hwf : - 2410936945213786 48 (-4.32159e+014) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110111000 #b1000111100011100111011000110000100000110111111000001)))
(assert (= y (fp #b0 #b11001110101 #b1111100000110111100001010000111001100000111110010010)))
(assert (= r (fp #b1 #b10000101111 #b1000100100001011110000000000001100100000000101011010)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
