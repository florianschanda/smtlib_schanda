(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.914904831890485326084672124125063419342041015625p546 {+ 4120365059981456 546 (4.41088e+164)}
; Y = -1.3226835154604454913851441233418881893157958984375p-358 {- 1453237359986264 -358 (-2.25277e-108)}
; 1.914904831890485326084672124125063419342041015625p546 * -1.3226835154604454913851441233418881893157958984375p-358 == -1.266406527408550086732930139987729489803314208984375p189
; [HW: -1.266406527408550086732930139987729489803314208984375p189] 

; mpf : - 1199788337566214 189
; mpfd: - 1199788337566214 189 (-9.9367e+056) class: Neg. norm. non-zero
; hwf : - 1199788337566214 189 (-9.9367e+056) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100001 #b1110101000110111001100111111101111101100000010010000)))
(assert (= y (fp #b1 #b01010011001 #b0101001010011011011000110000100111011100011001011000)))
(assert (= r (fp #b1 #b10010111100 #b0100010000110011001101111101101010101001001000000110)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
