(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7803251967960915802535737384459935128688812255859375p-706 {+ 3514272265518687 -706 (5.28838e-213)}
; Y = 1.661334330327840280716600318555720150470733642578125p851 {+ 2978385043631778 851 (2.4945e+256)}
; 1.7803251967960915802535737384459935128688812255859375p-706 * 1.661334330327840280716600318555720150470733642578125p851 == 1.47885768429250763489335440681315958499908447265625p146
; [HW: 1.47885768429250763489335440681315958499908447265625p146] 

; mpf : + 2156583288543236 146
; mpfd: + 2156583288543236 146 (1.31919e+044) class: Pos. norm. non-zero
; hwf : + 2156583288543236 146 (1.31919e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111101 #b1100011111000011011001000110000001111011111001011111)))
(assert (= y (fp #b0 #b11101010010 #b1010100101001101001101001110100001111010111010100010)))
(assert (= r (fp #b0 #b10010010001 #b0111101010010110011010101100110101111001100000000100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
