(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.207170918748578625212530823773704469203948974609375p858 {- 933014872478102 858 (-2.32009e+258)}
; Y = 1.856412231648093769109664208372123539447784423828125p56 {+ 3856937807325890 56 (1.33769e+017)}
; -1.207170918748578625212530823773704469203948974609375p858 * 1.856412231648093769109664208372123539447784423828125p56 == -1.1205034296273641558627787162549793720245361328125p915
; [HW: -1.1205034296273641558627787162549793720245361328125p915] 

; mpf : - 542699200766664 915
; mpfd: - 542699200766664 915 (-3.10355e+275) class: Neg. norm. non-zero
; hwf : - 542699200766664 915 (-3.10355e+275) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101011001 #b0011010100001001001001110100000010110101000110010110)))
(assert (= y (fp #b0 #b10000110111 #b1101101100111101110101001111111011010010101011000010)))
(assert (= r (fp #b1 #b11110010010 #b0001111011011001010100000001000101001110001011001000)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
