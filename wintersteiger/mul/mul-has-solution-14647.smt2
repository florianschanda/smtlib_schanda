(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.191532784532631783491751775727607309818267822265625p382 {- 862586977050394 382 (-1.17372e+115)}
; Y = 1.9695971052767455855558864641352556645870208740234375p131 {+ 4366677162023863 131 (5.36175e+039)}
; -1.191532784532631783491751775727607309818267822265625p382 * 1.9695971052767455855558864641352556645870208740234375p131 == -1.1734197616289059329375277229701168835163116455078125p514
; [HW: -1.1734197616289059329375277229701168835163116455078125p514] 

; mpf : - 781013173850621 514
; mpfd: - 781013173850621 514 (-6.29319e+154) class: Neg. norm. non-zero
; hwf : - 781013173850621 514 (-6.29319e+154) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111101 #b0011000100001000010010101110010110101101111100011010)))
(assert (= y (fp #b0 #b10010000010 #b1111100000110111100001000001000101110101101110110111)))
(assert (= r (fp #b1 #b11000000001 #b0010110001100101001111001100110010101101000111111101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
