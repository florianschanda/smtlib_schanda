(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2985254855133605556005704784183762967586517333984375p207 {- 1344439265318567 207 (-2.67091e+062)}
; Y = 1.010034320563095722178559299209155142307281494140625p182 {+ 45190562348874 182 (6.19149e+054)}
; -1.2985254855133605556005704784183762967586517333984375p207 * 1.010034320563095722178559299209155142307281494140625p182 == -1.31155530649435103640598754282109439373016357421875p389
; [HW: -1.31155530649435103640598754282109439373016357421875p389] 

; mpf : - 1403120362233260 389
; mpfd: - 1403120362233260 389 (-1.65369e+117) class: Neg. norm. non-zero
; hwf : - 1403120362233260 389 (-1.65369e+117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001110 #b0100110001101100001010101000110101001101011010100111)))
(assert (= y (fp #b0 #b10010110101 #b0000001010010001100110111111011010100111111101001010)))
(assert (= r (fp #b1 #b10110000100 #b0100111111000010000101101010110001001001110110101100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
