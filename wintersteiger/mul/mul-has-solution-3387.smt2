(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.920466091756023008230158666265197098255157470703125p958 {- 4145410747839602 958 (-4.67889e+288)}
; Y = 1.6590280765095954951249268560786731541156768798828125p-857 {+ 2967998599795309 -857 (1.72642e-258)}
; -1.920466091756023008230158666265197098255157470703125p958 * 1.6590280765095954951249268560786731541156768798828125p-857 == -1.59305358310394762355599596048705279827117919921875p102
; [HW: -1.59305358310394762355599596048705279827117919921875p102] 

; mpf : - 2670875895877676 102
; mpfd: - 2670875895877676 102 (-8.07774e+030) class: Neg. norm. non-zero
; hwf : - 2670875895877676 102 (-8.07774e+030) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111101 #b1110101110100011101010100111000100101011010001110010)))
(assert (= y (fp #b0 #b00010100110 #b1010100010110110000100000110001111000001001001101101)))
(assert (= r (fp #b1 #b10001100101 #b1001011111010010010111000001000000110101000000101100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
