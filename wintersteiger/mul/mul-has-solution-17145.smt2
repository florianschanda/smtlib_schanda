(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2588045954460314046485791550367139279842376708984375p538 {+ 1165552279612519 538 (1.13265e+162)}
; Y = -1.748609769443250083753582657664082944393157958984375p39 {- 3371438678710534 39 (-9.61308e+011)}
; 1.2588045954460314046485791550367139279842376708984375p538 * -1.748609769443250083753582657664082944393157958984375p39 == -1.100579006708494400612607932998798787593841552734375p578
; [HW: -1.100579006708494400612607932998798787593841552734375p578] 

; mpf : - 452967577133670 578
; mpfd: - 452967577133670 578 (-1.08883e+174) class: Neg. norm. non-zero
; hwf : - 452967577133670 578 (-1.08883e+174) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011001 #b0100001001000001000001001001100101111110110001100111)))
(assert (= y (fp #b1 #b10000100110 #b1011111110100100111000111100110100111001100100000110)))
(assert (= r (fp #b1 #b11001000001 #b0001100110111111100010111011100001111010001001100110)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
