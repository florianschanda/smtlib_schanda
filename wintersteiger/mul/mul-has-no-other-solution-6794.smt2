(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3740448569321299654433232717565260827541351318359375p-367 {- 1684548278299391 -367 (-4.5708e-111)}
; Y = -1.275835263461407631524480166262947022914886474609375p132 {- 1242251589740438 132 (-6.94631e+039)}
; -1.3740448569321299654433232717565260827541351318359375p-367 * -1.275835263461407631524480166262947022914886474609375p132 == 1.753054882051796159458945112419314682483673095703125p-235
; [HW: 1.753054882051796159458945112419314682483673095703125p-235] 

; mpf : + 3391457686198002 -235
; mpfd: + 3391457686198002 -235 (3.17502e-071) class: Pos. norm. non-zero
; hwf : + 3391457686198002 -235 (3.17502e-071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010000 #b0101111111000001011001110101101111000010101011111111)))
(assert (= y (fp #b1 #b10010000011 #b0100011010011101001000111100101110100110011110010110)))
(assert (= r (fp #b0 #b01100010100 #b1100000011001000001101000110101010000001011011110010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
