(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.10365137015985670387863137875683605670928955078125p823 {+ 466804272028372 823 (6.17331e+247)}
; Y = 1.9120496951024030796162378464941866695880889892578125p24 {+ 4107506667006557 24 (3.20789e+007)}
; 1.10365137015985670387863137875683605670928955078125p823 * 1.9120496951024030796162378464941866695880889892578125p24 == 1.05511813290675160459386461297981441020965576171875p848
; [HW: 1.05511813290675160459386461297981441020965576171875p848] 

; mpf : + 248230002820204 848
; mpfd: + 248230002820204 848 (1.98033e+255) class: Pos. norm. non-zero
; hwf : + 248230002820204 848 (1.98033e+255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100110110 #b0001101010001000111001010110110100000101101011010100)))
(assert (= y (fp #b0 #b10000010111 #b1110100101111100000101101011110011001010101001011101)))
(assert (= r (fp #b0 #b11101001111 #b0000111000011100001110001101001001000000010001101100)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
