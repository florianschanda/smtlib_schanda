(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.060700100879982787915878361673094332218170166015625p-185 {+ 273368951704442 -185 (2.16293e-056)}
; Y = 1.3657722951975961311887886040494777262210845947265625p39 {+ 1647291972354345 39 (7.50841e+011)}
; 1.060700100879982787915878361673094332218170166015625p-185 * 1.3657722951975961311887886040494777262210845947265625p39 == 1.4486748112951757239130756715894676744937896728515625p-146
; [HW: 1.4486748112951757239130756715894676744937896728515625p-146] 

; mpf : + 2020651712959481 -146
; mpfd: + 2020651712959481 -146 (1.62402e-044) class: Pos. norm. non-zero
; hwf : + 2020651712959481 -146 (1.62402e-044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000110 #b0000111110001010000010101011010000100100101101111010)))
(assert (= y (fp #b0 #b10000100110 #b0101110110100011010000001100110110101000000100101001)))
(assert (= r (fp #b0 #b01101101101 #b0111001011011100010110100011100100001101001111111001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
