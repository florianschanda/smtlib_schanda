(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9140524890439898353378112005884759128093719482421875p-202 {- 4116526449055587 -202 (-2.97779e-061)}
; Y = -1.318827062496624069609651996870525181293487548828125p-68 {- 1435869439855426 -68 (-4.46836e-021)}
; -1.9140524890439898353378112005884759128093719482421875p-202 * -1.318827062496624069609651996870525181293487548828125p-68 == 1.26215211079511835379207695950753986835479736328125p-269
; [HW: 1.26215211079511835379207695950753986835479736328125p-269] 

; mpf : + 1180628148491284 -269
; mpfd: + 1180628148491284 -269 (1.33059e-081) class: Pos. norm. non-zero
; hwf : + 1180628148491284 -269 (1.33059e-081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100110101 #b1110100111111111010110000000101101000101011101100011)))
(assert (= y (fp #b1 #b01110111011 #b0101000110011110101001100111111010000000101101000010)))
(assert (= r (fp #b0 #b01011110010 #b0100001100011100011001101001011001110001010000010100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
