(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.951073206176327179406371215009130537509918212890625p-231 {+ 4283252936937770 -231 (5.65385e-070)}
; Y = 1.8133904106896301389184600338921882212162017822265625p322 {+ 3663184750488553 322 (1.54935e+097)}
; 1.951073206176327179406371215009130537509918212890625p-231 * 1.8133904106896301389184600338921882212162017822265625p322 == 1.769028721316811658681444896501488983631134033203125p92
; [HW: 1.769028721316811658681444896501488983631134033203125p92] 

; mpf : + 3463397462759602 92
; mpfd: + 3463397462759602 92 (8.75981e+027) class: Pos. norm. non-zero
; hwf : + 3463397462759602 92 (8.75981e+027) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011000 #b1111001101111001100010001001110010100001000100101010)))
(assert (= y (fp #b0 #b10101000001 #b1101000000111010010110101001110011001010101111101001)))
(assert (= r (fp #b0 #b10001011011 #b1100010011011111000100001111011110111101100010110010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
