(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.30633510296680466211682869470678269863128662109375p-866 {+ 1379610655571804 -866 (2.65508e-261)}
; Y = -1.8904883276707773465119544198387302458286285400390625p-683 {- 4010402900675889 -683 (-4.71072e-206)}
; 1.30633510296680466211682869470678269863128662109375p-866 * -1.8904883276707773465119544198387302458286285400390625p-683 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011101 #b0100111001101011111110100011000011011011111101011100)))
(assert (= y (fp #b1 #b00101010100 #b1110001111110111000010110000010011010000110100110001)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
