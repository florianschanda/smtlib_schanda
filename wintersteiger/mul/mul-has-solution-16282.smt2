(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.349325904949015608735862770117819309234619140625p-841 {- 1573224015359248 -841 (-9.20218e-254)}
; Y = -1.76178724355643812060634445515461266040802001953125p901 {- 3430784746216372 901 (-2.97838e+271)}
; -1.349325904949015608735862770117819309234619140625p-841 * -1.76178724355643812060634445515461266040802001953125p901 == 1.188612583369711206415786364232189953327178955078125p61
; [HW: 1.188612583369711206415786364232189953327178955078125p61] 

; mpf : + 849435560181218 61
; mpfd: + 849435560181218 61 (2.74075e+018) class: Pos. norm. non-zero
; hwf : + 849435560181218 61 (2.74075e+018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110110 #b0101100101101101011011000010100101100110110100010000)))
(assert (= y (fp #b1 #b11110000100 #b1100001100000100011111010010000110010101101110110100)))
(assert (= r (fp #b0 #b10000111100 #b0011000001001000111010100000110100101111110111100010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
