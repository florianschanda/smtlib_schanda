(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1253641219362846559448598782182671129703521728515625p143 {+ 564589812837881 143 (1.25482e+043)}
; Y = 1.004993220712083967782746185548603534698486328125p635 {+ 22487466938320 635 (1.43288e+191)}
; 1.1253641219362846559448598782182671129703521728515625p143 * 1.004993220712083967782746185548603534698486328125p635 == 1.1309833133785731629217252702801488339900970458984375p778
; [HW: 1.1309833133785731629217252702801488339900970458984375p778] 

; mpf : + 589896401323495 778
; mpfd: + 589896401323495 778 (1.79801e+234) class: Pos. norm. non-zero
; hwf : + 589896401323495 778 (1.79801e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001110 #b0010000000010111110111001111001111001110110111111001)))
(assert (= y (fp #b0 #b11001111010 #b0000000101000111001111000101011110101000111111010000)))
(assert (= r (fp #b0 #b11100001001 #b0010000110001000000111110101011101001000010111100111)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
