(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.422878463196045384364651908981613814830780029296875p-322 {- 1904475289272718 -322 (-1.66536e-097)}
; Y = -1.218748933876376394636054101283662021160125732421875p342 {- 985157617093342 342 (-1.09187e+103)}
; -1.422878463196045384364651908981613814830780029296875p-322 * -1.218748933876376394636054101283662021160125732421875p342 == 1.734131610055837047212889956426806747913360595703125p20
; [HW: 1.734131610055837047212889956426806747913360595703125p20] 

; mpf : + 3306234845488370 20
; mpfd: + 3306234845488370 20 (1.81837e+006) class: Pos. norm. non-zero
; hwf : + 3306234845488370 20 (1.81837e+006) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111101 #b0110110001000001110000110101000110011100000110001110)))
(assert (= y (fp #b1 #b10101010101 #b0011011111111111111011100001110100001000101011011110)))
(assert (= r (fp #b0 #b10000010011 #b1011101111110000000011001001100000100110010011110010)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
