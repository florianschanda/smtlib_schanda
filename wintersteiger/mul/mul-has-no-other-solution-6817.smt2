(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.905486556542777432099455836578272283077239990234375p781 {- 4077948918635046 781 (-2.42344e+235)}
; Y = -1.733362127296017352051649140776135027408599853515625p-654 {- 3302769403217978 -654 (-2.31885e-197)}
; -1.905486556542777432099455836578272283077239990234375p781 * -1.733362127296017352051649140776135027408599853515625p-654 == 1.6514491155914756692624223433085717260837554931640625p128
; [HW: 1.6514491155914756692624223433085717260837554931640625p128] 

; mpf : + 2933865994228609 128
; mpfd: + 2933865994228609 128 (5.61959e+038) class: Pos. norm. non-zero
; hwf : + 2933865994228609 128 (5.61959e+038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001100 #b1110011111001101111101111000101101010001101000100110)))
(assert (= y (fp #b1 #b00101110001 #b1011101110111101100111101101000011011100100000111010)))
(assert (= r (fp #b0 #b10001111111 #b1010011011000101010111101000011001111001001110000001)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
