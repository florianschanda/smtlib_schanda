(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.444082247962686693654177361167967319488525390625p524 {+ 1999968646446608 524 (7.93067e+157)}
; Y = -1.561273590203185346325653881649486720561981201171875p-460 {- 2527751531691966 -460 (-5.24422e-139)}
; 1.444082247962686693654177361167967319488525390625p524 * -1.561273590203185346325653881649486720561981201171875p-460 == -1.127303737912695336120805222890339791774749755859375p65
; [HW: -1.127303737912695336120805222890339791774749755859375p65] 

; mpf : - 573325066626486 65
; mpfd: - 573325066626486 65 (-4.15902e+019) class: Neg. norm. non-zero
; hwf : - 573325066626486 65 (-4.15902e+019) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001011 #b0111000110101111010111111100101110111011111000010000)))
(assert (= y (fp #b1 #b01000110011 #b1000111110101111101000000100001000000111111110111110)))
(assert (= r (fp #b1 #b10001000000 #b0010000010010110111110100100111011111110010110110110)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
