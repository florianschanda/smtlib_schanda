(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3984175992347527284209718345664441585540771484375p624 {- 1794313351451480 624 (-9.73541e+187)}
; Y = -1.194649068714973783045252275769598782062530517578125p609 {- 876621473332770 609 (-2.53809e+183)}
; -1.3984175992347527284209718345664441585540771484375p624 * -1.194649068714973783045252275769598782062530517578125p609 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001101111 #b0110010111111110101100100001111011011101001101011000)))
(assert (= y (fp #b1 #b11001100000 #b0011000111010100100001010111100001010011111000100010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
