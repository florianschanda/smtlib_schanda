(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.05851035292574469082182986312545835971832275390625p-455 {+ 263507203633700 -455 (1.13775e-137)}
; Y = -1.428528313534596083655969778192229568958282470703125p508 {- 1929919953152114 508 (-1.19709e+153)}
; 1.05851035292574469082182986312545835971832275390625p-455 * -1.428528313534596083655969778192229568958282470703125p508 == -1.51211200932392397788817106629721820354461669921875p53
; [HW: -1.51211200932392397788817106629721820354461669921875p53] 

; mpf : - 2306347454363180 53
; mpfd: - 2306347454363180 53 (-1.36199e+016) class: Neg. norm. non-zero
; hwf : - 2306347454363180 53 (-1.36199e+016) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111000 #b0000111011111010100010001101010001001011001000100100)))
(assert (= y (fp #b1 #b10111111011 #b0110110110110100000010000001010000001010100001110010)))
(assert (= r (fp #b1 #b10000110100 #b1000001100011001110001011100101111101111011000101100)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
