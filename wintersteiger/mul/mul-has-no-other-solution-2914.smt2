(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.342457918725426413431023320299573242664337158203125p-272 {- 1542293355161906 -272 (-1.76906e-082)}
; Y = 1.982365181576110746419772112858481705188751220703125p-719 {+ 4424179465687922 -719 (7.18814e-217)}
; -1.342457918725426413431023320299573242664337158203125p-272 * 1.982365181576110746419772112858481705188751220703125p-719 == -1.3306209179062087333278441292350180447101593017578125p-990
; [HW: -1.3306209179062087333278441292350180447101593017578125p-990] 

; mpf : - 1488984242683293 -990
; mpfd: - 1488984242683293 -990 (-1.27162e-298) class: Neg. norm. non-zero
; hwf : - 1488984242683293 -990 (-1.27162e-298) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101111 #b0101011110101011010100100111100100101110100100110010)))
(assert (= y (fp #b0 #b00100110000 #b1111101101111100010010001101011110011001001101110010)))
(assert (= r (fp #b1 #b00000100001 #b0101010010100011100100101000110111000111110110011101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
