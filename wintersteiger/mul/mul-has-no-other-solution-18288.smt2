(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3624710057979234623104503043578006327152252197265625p746 {+ 1632424286644137 746 (5.04317e+224)}
; Y = -1.9263864828147554408843689088826067745685577392578125p36 {- 4172073818805597 36 (-1.3238e+011)}
; 1.3624710057979234623104503043578006327152252197265625p746 * -1.9263864828147554408843689088826067745685577392578125p36 == -1.3123228643980719976269710969063453376293182373046875p783
; [HW: -1.3123228643980719976269710969063453376293182373046875p783] 

; mpf : - 1406577135722443 783
; mpfd: - 1406577135722443 783 (-6.67617e+235) class: Neg. norm. non-zero
; hwf : - 1406577135722443 783 (-6.67617e+235) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101001 #b0101110011001010111001100101101110100110011110101001)))
(assert (= y (fp #b1 #b10000100011 #b1110110100100111101010100001111100100101010101011101)))
(assert (= r (fp #b1 #b11100001110 #b0100111111110100011001000010100001100001111111001011)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
