(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7808229528871188929173285941942594945430755615234375p-8 {- 3516513959664759 -8 (-0.00695634)}
; Y = -1.129864008061951974326575509621761739253997802734375p70 {- 584855498316646 70 (-1.33391e+021)}
; -1.7808229528871188929173285941942594945430755615234375p-8 * -1.129864008061951974326575509621761739253997802734375p70 == 1.006043879598880419479201009380631148815155029296875p63
; [HW: 1.006043879598880419479201009380631148815155029296875p63] 

; mpf : + 27219213909390 63
; mpfd: + 27219213909390 63 (9.27912e+018) class: Pos. norm. non-zero
; hwf : + 27219213909390 63 (9.27912e+018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110111 #b1100011111100100000000110101011010011101110001110111)))
(assert (= y (fp #b1 #b10001000101 #b0010000100111110110001001000001110001101101101100110)))
(assert (= r (fp #b0 #b10000111110 #b0000000110001100000101110111100100110111110110001110)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
