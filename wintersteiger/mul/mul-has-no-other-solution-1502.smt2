(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.621806510678804880143388800206594169139862060546875p-289 {+ 2800367569789614 -289 (1.63054e-087)}
; Y = 1.95744119286233964061239021248184144496917724609375p418 {+ 4311931799403996 418 (1.32503e+126)}
; 1.621806510678804880143388800206594169139862060546875p-289 * 1.95744119286233964061239021248184144496917724609375p418 == 1.5872954354275143895591781983966939151287078857421875p130
; [HW: 1.5872954354275143895591781983966939151287078857421875p130] 

; mpf : + 2644943504147747 130
; mpfd: + 2644943504147747 130 (2.16051e+039) class: Pos. norm. non-zero
; hwf : + 2644943504147747 130 (2.16051e+039) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011110 #b1001111100101110101101100010001111001110001010101110)))
(assert (= y (fp #b0 #b10110100001 #b1111010100011010110111011011001100101111110111011100)))
(assert (= r (fp #b0 #b10010000001 #b1001011001011000111111100110000001000000010100100011)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
