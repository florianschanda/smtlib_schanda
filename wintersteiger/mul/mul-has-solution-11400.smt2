(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.54469872591115464643962695845402777194976806640625p125 {+ 2453104979042660 125 (6.57042e+037)}
; Y = 1.0464467073431809041039741714484989643096923828125p-813 {+ 209177373883336 -813 (1.91571e-245)}
; 1.54469872591115464643962695845402777194976806640625p125 * 1.0464467073431809041039741714484989643096923828125p-813 == 1.616444895566934381037071943865157663822174072265625p-688
; [HW: 1.616444895566934381037071943865157663822174072265625p-688] 

; mpf : + 2776221001969690 -688
; mpfd: + 2776221001969690 -688 (1.2587e-207) class: Pos. norm. non-zero
; hwf : + 2776221001969690 -688 (1.2587e-207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111100 #b1000101101110001011000000010110111110110000101100100)))
(assert (= y (fp #b0 #b00011010010 #b0000101111100011111011100111000100001011101111001000)))
(assert (= r (fp #b0 #b00101001111 #b1001110111001111010101010010101000111111000000011010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
