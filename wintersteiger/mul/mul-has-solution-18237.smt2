(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3868050149523829528419582857168279588222503662109375p-712 {+ 1742014921204591 -712 (6.43663e-215)}
; Y = -1.7576850433815873753218284036847762763500213623046875p-275 {- 3412310079037515 -275 (-2.89529e-083)}
; 1.3868050149523829528419582857168279588222503662109375p-712 * -1.7576850433815873753218284036847762763500213623046875p-275 == -1.2187832164341909635396632438641972839832305908203125p-986
; [HW: -1.2187832164341909635396632438641972839832305908203125p-986] 

; mpf : - 985312012007941 -986
; mpfd: - 985312012007941 -986 (-1.86359e-297) class: Neg. norm. non-zero
; hwf : - 985312012007941 -986 (-1.86359e-297) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110111 #b0110001100000101101001110100100100100110001101101111)))
(assert (= y (fp #b1 #b01011101100 #b1100000111110111101001011010000111111110000001001011)))
(assert (= r (fp #b1 #b00000100101 #b0011100000000010001011010100011101111111101000000101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
