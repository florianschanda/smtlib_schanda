(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4710419322385031026811930132680572569370269775390625p-326 {- 2121384270505201 -326 (-1.07608e-098)}
; Y = 1.498130565304303107865280253463424742221832275390625p-704 {+ 2243380628286314 -704 (1.78005e-212)}
; -1.4710419322385031026811930132680572569370269775390625p-326 * 1.498130565304303107865280253463424742221832275390625p-704 == -0.008608644068479609501309823826886713504791259765625p-1022
; [HW: -0.008608644068479609501309823826886713504791259765625p-1022] 

; mpf : - 38769886218970 -1023
; mpfd: - 38769886218970 -1023 (-1.91549e-310) class: Neg. denorm.
; hwf : - 38769886218970 -1023 (-1.91549e-310) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111001 #b0111100010010110001101000011111000000010010011110001)))
(assert (= y (fp #b0 #b00100111111 #b0111111110000101011111000001011100011110101101101010)))
(assert (= r (fp #b1 #b00000000000 #b0000001000110100001011010001010010111100101011011010)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
