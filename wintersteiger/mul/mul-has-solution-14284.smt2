(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.058137695199328209838540715281851589679718017578125p-166 {+ 261828902435874 -166 (1.13126e-050)}
; Y = -1.329723798223362951631543182884342968463897705078125p548 {- 1484943974813922 548 (-1.22518e+165)}
; 1.058137695199328209838540715281851589679718017578125p-166 * -1.329723798223362951631543182884342968463897705078125p548 == -1.407030875103765676925604566349647939205169677734375p382
; [HW: -1.407030875103765676925604566349647939205169677734375p382] 

; mpf : - 1833104097445606 382
; mpfd: - 1833104097445606 382 (-1.386e+115) class: Neg. norm. non-zero
; hwf : - 1833104097445606 382 (-1.386e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101011001 #b0000111011100010000111001010101110001011110000100010)))
(assert (= y (fp #b1 #b11000100011 #b0101010001101000110001110110001000010101000011100010)))
(assert (= r (fp #b1 #b10101111101 #b0110100000110011001011001110100100001000011011100110)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
