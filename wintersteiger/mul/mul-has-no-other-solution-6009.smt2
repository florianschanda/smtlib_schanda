(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 0.3770709467866790731704895733855664730072021484375p-1022 {+ 1698176575440728 -1023 (8.39011e-309)}
; Y = 1.2506675665447433143384614595561288297176361083984375p-578 {+ 1128906359284775 -578 (1.26417e-174)}
; 0.3770709467866790731704895733855664730072021484375p-1022 * 1.2506675665447433143384614595561288297176361083984375p-578 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0110000010000111101110001011100010111000011101011000)))
(assert (= y (fp #b0 #b00110111101 #b0100000000101011101111111110100001111010010000100111)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
