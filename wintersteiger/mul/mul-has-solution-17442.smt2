(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1664635712190716265723722244729287922382354736328125p672 {- 749685277312973 672 (-2.28575e+202)}
; Y = 1.2469730202943163366313683582120575010776519775390625p815 {+ 1112267602168049 815 (2.7246e+245)}
; -1.1664635712190716265723722244729287922382354736328125p672 * 1.2469730202943163366313683582120575010776519775390625p815 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010011111 #b0010101010011101010110110100101001011100011111001101)))
(assert (= y (fp #b0 #b11100101110 #b0011111100111001100111111011010100101000100011110001)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
