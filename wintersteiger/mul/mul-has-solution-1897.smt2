(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0454047151201153464938897741376422345638275146484375p242 {+ 204484658095815 242 (7.38828e+072)}
; Y = 1.285983205780763416470335869234986603260040283203125p932 {+ 1287953858988466 932 (4.66865e+280)}
; 1.0454047151201153464938897741376422345638275146484375p242 * 1.285983205780763416470335869234986603260040283203125p932 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110001 #b0000101110011111101001001011011010000110011011000111)))
(assert (= y (fp #b0 #b11110100011 #b0100100100110110001100100000010000001000100110110010)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
