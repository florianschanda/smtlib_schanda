(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.76766472712625510865791511605493724346160888671875p85 {+ 3457254579031276 85 (6.83832e+025)}
; Y = -1.9496872116805492591851134420721791684627532958984375p-232 {- 4277010972643047 -232 (-2.82492e-070)}
; 1.76766472712625510865791511605493724346160888671875p85 * -1.9496872116805492591851134420721791684627532958984375p-232 == -1.7231966565084235742943974400986917316913604736328125p-146
; [HW: -1.7231966565084235742943974400986917316913604736328125p-146] 

; mpf : - 3256988192766925 -146
; mpfd: - 3256988192766925 -146 (-1.93177e-044) class: Neg. norm. non-zero
; hwf : - 3256988192766925 -146 (-1.93177e-044) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001010100 #b1100010010000101101011001111000101001100110011101100)))
(assert (= y (fp #b1 #b01100010111 #b1111001100011110101100110111101110011000111011100111)))
(assert (= r (fp #b1 #b01101101101 #b1011100100100011011010101000010001000111101111001101)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
