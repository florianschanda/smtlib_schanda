(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.211131034011625473567619337700307369232177734375p197 {+ 950849646101104 197 (2.43277e+059)}
; Y = -1.1021652084589887987675638214568607509136199951171875p-56 {- 460111194746131 -56 (-1.52956e-017)}
; 1.211131034011625473567619337700307369232177734375p197 * -1.1021652084589887987675638214568607509136199951171875p-56 == -1.334866488572573839377355398028157651424407958984375p141
; [HW: -1.334866488572573839377355398028157651424407958984375p141] 

; mpf : - 1508104593154310 141
; mpfd: - 1508104593154310 141 (-3.72106e+042) class: Neg. norm. non-zero
; hwf : - 1508104593154310 141 (-3.72106e+042) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000100 #b0011011000001100101011101111011001000000001001110000)))
(assert (= y (fp #b1 #b01111000111 #b0001101000100111011111111100010100011110110100010011)))
(assert (= r (fp #b1 #b10010001100 #b0101010110111001110011110110100011110010000100000110)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
