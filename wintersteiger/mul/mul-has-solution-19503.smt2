(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3527814132564504046030151585000567138195037841796875p624 {+ 1588786241284987 624 (9.4177e+187)}
; Y = 1.056176253869885339753409425611607730388641357421875p457 {+ 252995355995486 457 (3.93047e+137)}
; 1.3527814132564504046030151585000567138195037841796875p624 * 1.056176253869885339753409425611607730388641357421875p457 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101111 #b0101101001001111111000011111100010010010101101111011)))
(assert (= y (fp #b0 #b10111001000 #b0000111001100001100100010010010100101110110101011110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
