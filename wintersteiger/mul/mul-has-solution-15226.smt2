(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1724224821264730422853972413577139377593994140625p-773 {- 776521826255080 -773 (-2.35992e-233)}
; Y = -1.8213419639803796190591356207733042538166046142578125p-415 {- 3698995362925789 -415 (-2.1525e-125)}
; -1.1724224821264730422853972413577139377593994140625p-773 * -1.8213419639803796190591356207733042538166046142578125p-415 == 0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: 0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : + 1 -1023
; mpfd: + 1 -1023 (4.94066e-324) class: Pos. denorm.
; hwf : + 1 -1023 (4.94066e-324) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111010 #b0010110000100011111000010011100111010100000011101000)))
(assert (= y (fp #b1 #b01001100000 #b1101001001000011011101111000101000100000110011011101)))
(assert (= r (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
