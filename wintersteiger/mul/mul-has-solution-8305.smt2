(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7757765254263813137214356174808926880359649658203125p699 {+ 3493786870833029 699 (4.67041e+210)}
; Y = 1.9119984616684320144486264325678348541259765625p-679 {+ 4107275932132416 -679 (7.6229e-205)}
; 1.7757765254263813137214356174808926880359649658203125p699 * 1.9119984616684320144486264325678348541259765625p-679 == 1.697640992441077134600391218555159866809844970703125p21
; [HW: 1.697640992441077134600391218555159866809844970703125p21] 

; mpf : + 3141895713596018 21
; mpfd: + 3141895713596018 21 (3.56021e+006) class: Pos. norm. non-zero
; hwf : + 3141895713596018 21 (3.56021e+006) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010111010 #b1100011010011001010010100101010110110101111110000101)))
(assert (= y (fp #b0 #b00101011000 #b1110100101111000101110110010111011011110010001000000)))
(assert (= r (fp #b0 #b10000010100 #b1011001010011000100110011001111011100010001001110010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
