(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.555014181837064857205632506520487368106842041015625p891 {- 2499561662506746 891 (-2.5672e+268)}
; Y = -1.1123299425646744342799365767859853804111480712890625p488 {- 505889087476817 488 (-8.88938e+146)}
; -1.555014181837064857205632506520487368106842041015625p891 * -1.1123299425646744342799365767859853804111480712890625p488 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111010 #b1000111000010101011010001100111111001110011011111010)))
(assert (= y (fp #b1 #b10111100111 #b0001110011000001101001111011010110101101010001010001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
