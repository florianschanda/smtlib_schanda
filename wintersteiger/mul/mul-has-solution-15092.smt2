(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0445992254401463839030839153565466403961181640625p-913 {- 200857055073256 -913 (-1.50856e-275)}
; Y = 1.7659751145079451983832541372976265847682952880859375p-663 {+ 3449645240273055 -663 (4.61421e-200)}
; -1.0445992254401463839030839153565466403961181640625p-913 * 1.7659751145079451983832541372976265847682952880859375p-663 == -0.0000000000000002220446049250313080847263336181640625p-1022
; [HW: -0.0000000000000002220446049250313080847263336181640625p-1022] 

; mpf : - 1 -1023
; mpfd: - 1 -1023 (-4.94066e-324) class: Neg. denorm.
; hwf : - 1 -1023 (-4.94066e-324) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101110 #b0000101101101010110110101101011010110001001111101000)))
(assert (= y (fp #b0 #b00101101000 #b1100010000010110111100011111001001011100100010011111)))
(assert (= r (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
