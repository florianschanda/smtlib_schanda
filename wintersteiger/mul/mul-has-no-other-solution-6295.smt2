(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6664270301337484880832562339492142200469970703125p-645 {- 3001320524579976 -645 (-1.1414e-194)}
; Y = -1.358168147505783185380323629942722618579864501953125p-137 {- 1613045935643026 -137 (-7.7955e-042)}
; -1.6664270301337484880832562339492142200469970703125p-645 * -1.358168147505783185380323629942722618579864501953125p-137 == 1.1316440562351586240907863611937500536441802978515625p-781
; [HW: 1.1316440562351586240907863611937500536441802978515625p-781] 

; mpf : + 592872122606201 -781
; mpfd: + 592872122606201 -781 (8.89781e-236) class: Pos. norm. non-zero
; hwf : + 592872122606201 -781 (8.89781e-236) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111010 #b1010101010011010111101100011101110011000010010001000)))
(assert (= y (fp #b1 #b01101110110 #b0101101110110000111010000110000000000001100110010010)))
(assert (= r (fp #b0 #b00011110010 #b0010000110110011011011001100010000111110001001111001)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
