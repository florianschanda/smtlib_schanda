(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2574541948384390099846541488659568130970001220703125p-735 {+ 1159470615939365 -735 (6.95737e-222)}
; Y = 1.174047882661397590453589145909063518047332763671875p487 {+ 783841979498494 487 (4.69131e+146)}
; 1.2574541948384390099846541488659568130970001220703125p-735 * 1.174047882661397590453589145909063518047332763671875p487 == 1.47631143499376182859350592480041086673736572265625p-248
; [HW: 1.47631143499376182859350592480041086673736572265625p-248] 

; mpf : + 2145116001150212 -248
; mpfd: + 2145116001150212 -248 (3.26392e-075) class: Pos. norm. non-zero
; hwf : + 2145116001150212 -248 (3.26392e-075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100100000 #b0100000111101000100001001010001100001100100100100101)))
(assert (= y (fp #b0 #b10111100110 #b0010110010001110011001101110101111110111111111111110)))
(assert (= r (fp #b0 #b01100000111 #b0111100111101111100010111101010000000010010100000100)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
