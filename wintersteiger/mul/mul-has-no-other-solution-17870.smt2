(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.32381756481934598213001663680188357830047607421875p501 {- 1458344664256428 501 (-8.66674e+150)}
; Y = -1.2015152817133565310570020301383920013904571533203125p262 {- 907544147633733 262 (-8.90406e+078)}
; -1.32381756481934598213001663680188357830047607421875p501 * -1.2015152817133565310570020301383920013904571533203125p262 == 1.590587034331006233145444639376364648342132568359375p763
; [HW: 1.590587034331006233145444639376364648342132568359375p763] 

; mpf : + 2659767547742966 763
; mpfd: + 2659767547742966 763 (7.71692e+229) class: Pos. norm. non-zero
; hwf : + 2659767547742966 763 (7.71692e+229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110100 #b0101001011100101101101010011101011000100111110101100)))
(assert (= y (fp #b1 #b10100000101 #b0011001110010110100000010110100010011010011001000101)))
(assert (= r (fp #b0 #b11011111010 #b1001011100110000101101100011110111100100101011110110)))
(assert  (not (= (fp.mul roundTowardPositive x y) r)))
(check-sat)
(exit)
