(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0298825520280254774974082465632818639278411865234375p-108 {+ 134579050178295 -108 (3.17357e-033)}
; Y = 1.0863885558961354771412288755527697503566741943359375p25 {+ 389059468142911 25 (3.64532e+007)}
; 1.0298825520280254774974082465632818639278411865234375p-108 * 1.0863885558961354771412288755527697503566741943359375p25 == 1.1188526184403533303424183031893335282802581787109375p-83
; [HW: 1.1188526184403533303424183031893335282802581787109375p-83] 

; mpf : + 535264608119983 -83
; mpfd: + 535264608119983 -83 (1.15687e-025) class: Pos. norm. non-zero
; hwf : + 535264608119983 -83 (1.15687e-025) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010011 #b0000011110100110011000100000011110101110011011110111)))
(assert (= y (fp #b0 #b10000011000 #b0001011000011101100011110111011001010010100100111111)))
(assert (= r (fp #b0 #b01110101100 #b0001111001101101001000000000110100111110110010101111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
