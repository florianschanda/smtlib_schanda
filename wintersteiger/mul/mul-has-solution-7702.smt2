(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.591437715245991313395279576070606708526611328125p-364 {+ 2663598673994704 -364 (4.23517e-110)}
; Y = 1.843310981834738182527644312358461320400238037109375p608 {+ 3797935023548374 608 (1.9581e+183)}
; 1.591437715245991313395279576070606708526611328125p-364 * 1.843310981834738182527644312358461320400238037109375p608 == 1.4667573087094603057067843110417015850543975830078125p245
; [HW: 1.4667573087094603057067843110417015850543975830078125p245] 

; mpf : + 2102088041576381 245
; mpfd: + 2102088041576381 245 (8.29291e+073) class: Pos. norm. non-zero
; hwf : + 2102088041576381 245 (8.29291e+073) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010011 #b1001011101101000011101100100110010011010001111010000)))
(assert (= y (fp #b0 #b11001011111 #b1101011111100011001110100111111101010110011111010110)))
(assert (= r (fp #b0 #b10011110100 #b0111011101111101011010000011000000010011011110111101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
