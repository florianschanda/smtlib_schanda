(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.80704147531096293022301324526779353618621826171875p137 {- 3634591687482988 137 (-3.14831e+041)}
; Y = -1.9770947778368832548068212418002076447010040283203125p-552 {- 4400443677371845 -552 (-1.34113e-166)}
; -1.80704147531096293022301324526779353618621826171875p137 * -1.9770947778368832548068212418002076447010040283203125p-552 == 1.7863461320859810310679449685267172753810882568359375p-414
; [HW: 1.7863461320859810310679449685267172753810882568359375p-414] 

; mpf : + 3541388147446655 -414
; mpfd: + 3541388147446655 -414 (4.22228e-125) class: Pos. norm. non-zero
; hwf : + 3541388147446655 -414 (4.22228e-125) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001000 #b1100111010011010010001010010011011111001111001101100)))
(assert (= y (fp #b1 #b00111010111 #b1111101000100010111000100010001111100110110111000101)))
(assert (= r (fp #b0 #b01001100001 #b1100100101001101111110101110100010100101001101111111)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
