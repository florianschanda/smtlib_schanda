(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2359615567393102963933415594510734081268310546875p944 {+ 1062676379004920 944 (1.8379e+284)}
; Y = -1.4556719093663528230564452314865775406360626220703125p-647 {- 2052163841225509 -647 (-2.49262e-195)}
; 1.2359615567393102963933415594510734081268310546875p944 * -1.4556719093663528230564452314865775406360626220703125p-647 == -1.799154519202121438326003044494427740573883056640625p297
; [HW: -1.799154519202121438326003044494427740573883056640625p297] 

; mpf : - 3599071994890122 297
; mpfd: - 3599071994890122 297 (-4.58118e+089) class: Neg. norm. non-zero
; hwf : - 3599071994890122 297 (-4.58118e+089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101111 #b0011110001100111111110100000000101001110111111111000)))
(assert (= y (fp #b1 #b00101111000 #b0111010010100110111010100000110001101111001100100101)))
(assert (= r (fp #b1 #b10100101000 #b1100110010010101011000111111110001101100011110001010)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
