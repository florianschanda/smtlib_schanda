(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.840735224268661429647409022436477243900299072265625p-99 {+ 3786334842733594 -99 (2.90417e-030)}
; Y = 1.814412419166212320220665787928737699985504150390625p-832 {+ 3667787467482858 -832 (6.33548e-251)}
; 1.840735224268661429647409022436477243900299072265625p-99 * 1.814412419166212320220665787928737699985504150390625p-832 == 1.66992642565488136341400604578666388988494873046875p-930
; [HW: 1.66992642565488136341400604578666388988494873046875p-930] 

; mpf : + 3017080400944972 -930
; mpfd: + 3017080400944972 -930 (1.83993e-280) class: Pos. norm. non-zero
; hwf : + 3017080400944972 -930 (1.83993e-280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011100 #b1101011100111010011011000111010011010100010000011010)))
(assert (= y (fp #b0 #b00010111111 #b1101000001111101010101010001000111000110011011101010)))
(assert (= r (fp #b0 #b00001011101 #b1010101110000000010011000101100011101001111101001100)))
(assert (= (fp.mul roundTowardPositive x y) r))
(check-sat)
(exit)
