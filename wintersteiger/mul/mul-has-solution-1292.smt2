(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7441556416161556608557248182478360831737518310546875p619 {+ 3351379070288171 619 (3.79448e+186)}
; Y = 1.7296538519182280690955622048932127654552459716796875p662 {+ 3286068815608379 662 (3.30991e+199)}
; 1.7441556416161556608557248182478360831737518310546875p619 * 1.7296538519182280690955622048932127654552459716796875p662 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101010 #b1011111010000000111110111110111111100000000100101011)))
(assert (= y (fp #b0 #b11010010101 #b1011101011001010100110000100011101100011101000111011)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
