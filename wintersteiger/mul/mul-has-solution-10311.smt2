(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6880353610860863167175693888566456735134124755859375p-652 {+ 3098635795805023 -652 (9.03284e-197)}
; Y = 1.265824612036899221578778451657854020595550537109375p921 {+ 1197167623715286 921 (2.24388e+277)}
; 1.6880353610860863167175693888566456735134124755859375p-652 * 1.265824612036899221578778451657854020595550537109375p921 == 1.0683783530256809601866052616969682276248931884765625p270
; [HW: 1.0683783530256809601866052616969682276248931884765625p270] 

; mpf : + 307948725206665 270
; mpfd: + 307948725206665 270 (2.02686e+081) class: Pos. norm. non-zero
; hwf : + 307948725206665 270 (2.02686e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110011 #b1011000000100011000101011101111001011011001101011111)))
(assert (= y (fp #b0 #b11110011000 #b0100010000001101000101001110111100101011100111010110)))
(assert (= r (fp #b0 #b10100001101 #b0001000110000001001111100110010111111111111010001001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
