(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.698943101513183950856955561903305351734161376953125p-63 {+ 3147759891527954 -63 (1.842e-019)}
; Y = 1.966073654389040026302382102585397660732269287109375p324 {+ 4350808949918934 324 (6.71921e+097)}
; 1.698943101513183950856955561903305351734161376953125p-63 * 1.966073654389040026302382102585397660732269287109375p324 == 1.6701236360955376003545325147570110857486724853515625p262
; [HW: 1.6701236360955376003545325147570110857486724853515625p262] 

; mpf : + 3017968557812025 262
; mpfd: + 3017968557812025 262 (1.23768e+079) class: Pos. norm. non-zero
; hwf : + 3017968557812025 262 (1.23768e+079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000000 #b1011001011101101111011110110001011000011100100010010)))
(assert (= y (fp #b0 #b10101000011 #b1111011101010000100110100101111100100000110011010110)))
(assert (= r (fp #b0 #b10100000101 #b1010101110001101001110001111110101001110100100111001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
