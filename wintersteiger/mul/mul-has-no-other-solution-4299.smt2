(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.706844112078436115353952118312008678913116455078125p-763 {+ 3183342879765474 -763 (3.51809e-230)}
; Y = 1.28179932277972596921244985423982143402099609375p61 {+ 1269111325064032 61 (2.95563e+018)}
; 1.706844112078436115353952118312008678913116455078125p-763 * 1.28179932277972596921244985423982143402099609375p61 == 1.0939158134763509178100093777175061404705047607421875p-701
; [HW: 1.0939158134763509178100093777175061404705047607421875p-701] 

; mpf : + 422959222576291 -701
; mpfd: + 422959222576291 -701 (1.03982e-211) class: Pos. norm. non-zero
; hwf : + 422959222576291 -701 (1.03982e-211) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000100 #b1011010011110011101111000101100010111111001111100010)))
(assert (= y (fp #b0 #b10000111100 #b0100100000100100000000000001101101011111101101100000)))
(assert (= r (fp #b0 #b00101000010 #b0001100000001010110111011110001101110101010010100011)))
(assert  (not (= (fp.mul roundTowardNegative x y) r)))
(check-sat)
(exit)
