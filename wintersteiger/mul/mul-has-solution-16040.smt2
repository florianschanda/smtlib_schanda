(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9479437382346140861244521147455088794231414794921875p-43 {- 4269159066281603 -43 (-2.21456e-013)}
; Y = -1.577473304650826246842143518733792006969451904296875p1009 {- 2600708559641870 1009 (-8.65421e+303)}
; -1.9479437382346140861244521147455088794231414794921875p-43 * -1.577473304650826246842143518733792006969451904296875p1009 == 1.5364146230134203552353255872731097042560577392578125p967
; [HW: 1.5364146230134203552353255872731097042560577392578125p967] 

; mpf : + 2415796696319325 967
; mpfd: + 2415796696319325 967 (1.91652e+291) class: Pos. norm. non-zero
; hwf : + 2415796696319325 967 (1.91652e+291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111010100 #b1111001010101100011100001101101000101010011010000011)))
(assert (= y (fp #b1 #b11111110000 #b1001001111010101010010100101110111001001110100001110)))
(assert (= r (fp #b0 #b11111000110 #b1000100101010010011101111111111011110000010101011101)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
