(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5912706153818432230906410040915943682193756103515625p855 {- 2662846123108793 855 (-3.82288e+257)}
; Y = -1.4137392314839012374960702800308354198932647705078125p-221 {- 1863315848739453 -221 (-4.19508e-067)}
; -1.5912706153818432230906410040915943682193756103515625p855 * -1.4137392314839012374960702800308354198932647705078125p-221 == 1.1248208484364206061201230113510973751544952392578125p635
; [HW: 1.1248208484364206061201230113510973751544952392578125p635] 

; mpf : + 562143126506333 635
; mpfd: + 562143126506333 635 (1.60373e+191) class: Pos. norm. non-zero
; hwf : + 562143126506333 635 (1.60373e+191) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101010110 #b1001011101011101100000101101010000100110100110111001)))
(assert (= y (fp #b1 #b01100100010 #b0110100111101010110100000111010001001011101001111101)))
(assert (= r (fp #b0 #b11001111010 #b0001111111110100010000100101010111100100101101011101)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
