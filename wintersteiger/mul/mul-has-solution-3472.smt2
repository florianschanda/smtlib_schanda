(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1511284368795029475762703441432677209377288818359375p238 {- 680621972015615 238 (-5.08467e+071)}
; Y = 1.49265138343220815642098386888392269611358642578125p565 {+ 2218704586848852 565 (1.80263e+170)}
; -1.1511284368795029475762703441432677209377288818359375p238 * 1.49265138343220815642098386888392269611358642578125p565 == -1.7182334538163452908321460199658758938312530517578125p803
; [HW: -1.7182334538163452908321460199658758938312530517578125p803] 

; mpf : - 3234635914972317 803
; mpfd: - 3234635914972317 803 (-9.16576e+241) class: Neg. norm. non-zero
; hwf : - 3234635914972317 803 (-9.16576e+241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101101 #b0010011010110000010110100110110111100100100111111111)))
(assert (= y (fp #b0 #b11000110100 #b0111111000011110011001101010110000101011101001010100)))
(assert (= r (fp #b1 #b11100100010 #b1011011111011110001001011100101100001000110010011101)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
