(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.269702114178248297804429967072792351245880126953125p-150 {+ 1214630340914194 -150 (8.89616e-046)}
; Y = 1.8619937221245230762889377729152329266071319580078125p665 {+ 3882074605755709 665 (2.85053e+200)}
; 1.269702114178248297804429967072792351245880126953125p-150 * 1.8619937221245230762889377729152329266071319580078125p665 == 1.1820886827840662025579376859241165220737457275390625p516
; [HW: 1.1820886827840662025579376859241165220737457275390625p516] 

; mpf : + 820054523934705 516
; mpfd: + 820054523934705 516 (2.53587e+155) class: Pos. norm. non-zero
; hwf : + 820054523934705 516 (2.53587e+155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101001 #b0100010100001011001100101010000000001110110000010010)))
(assert (= y (fp #b0 #b11010011000 #b1101110010101011100111101101110111100001110100111101)))
(assert (= r (fp #b0 #b11000000011 #b0010111010011101010111010010100110000111011111110001)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
