(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.756894969552906804466374524054117500782012939453125p774 {+ 3408751902837074 774 (1.74567e+233)}
; Y = 1.2599261081988493149452779107377864420413970947265625p-894 {+ 1170603124028201 -894 (9.53957e-270)}
; 1.756894969552906804466374524054117500782012939453125p774 * 1.2599261081988493149452779107377864420413970947265625p-894 == 1.1067789207514646676600023056380450725555419921875p-119
; [HW: 1.1067789207514646676600023056380450725555419921875p-119] 

; mpf : + 480889507707320 -119
; mpfd: + 480889507707320 -119 (1.6653e-036) class: Pos. norm. non-zero
; hwf : + 480889507707320 -119 (1.6653e-036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100000101 #b1100000111000011110111100110010010111100100101010010)))
(assert (= y (fp #b0 #b00010000001 #b0100001010001010100001000111011000010111001100101001)))
(assert (= r (fp #b0 #b01110001000 #b0001101101010101110111010000010010000111100110111000)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
