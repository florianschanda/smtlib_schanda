(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5692524153953348875489837155328132212162017822265625p357 {- 2563684965854185 357 (-4.60682e+107)}
; Y = -1.6230350012442074092433585974504239857196807861328125p330 {- 2805900199442189 330 (-3.54998e+099)}
; -1.5692524153953348875489837155328132212162017822265625p357 * -1.6230350012442074092433585974504239857196807861328125p330 == 1.2734757979868212007801275831297971308231353759765625p688
; [HW: 1.2734757979868212007801275831297971308231353759765625p688] 

; mpf : + 1231625501908297 688
; mpfd: + 1231625501908297 688 (1.63541e+207) class: Pos. norm. non-zero
; hwf : + 1231625501908297 688 (1.63541e+207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100100 #b1001000110111010100001101011101101001010101111101001)))
(assert (= y (fp #b1 #b10101001001 #b1001111101111111001110001100101010011011011100001101)))
(assert (= r (fp #b0 #b11010101111 #b0100011000000010100000101000100010011001110101001001)))
(assert (= (fp.mul roundTowardNegative x y) r))
(check-sat)
(exit)
