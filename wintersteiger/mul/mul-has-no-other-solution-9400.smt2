(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.253593598887942306419063243083655834197998046875p513 {+ 1142084037455280 513 (3.36159e+154)}
; Y = -1.7676702131144879093227473276783712208271026611328125p-204 {- 3457279285725837 -204 (-6.87515e-062)}
; 1.253593598887942306419063243083655834197998046875p513 * -1.7676702131144879093227473276783712208271026611328125p-204 == -1.1079700320526033596735260289278812706470489501953125p310
; [HW: -1.1079700320526033596735260289278812706470489501953125p310] 

; mpf : - 486253796119285 310
; mpfd: - 486253796119285 310 (-2.31114e+093) class: Neg. norm. non-zero
; hwf : - 486253796119285 310 (-2.31114e+093) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000000 #b0100000011101011100000101001010110110010110110110000)))
(assert (= y (fp #b1 #b01100110011 #b1100010010000110000010001111101101110000101010001101)))
(assert (= r (fp #b1 #b10100110101 #b0001101110100011111011001000110010011101001011110101)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
