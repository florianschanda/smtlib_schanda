(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0718320291236749230989744319231249392032623291015625p-281 {- 323502699594649 -281 (-2.75866e-085)}
; Y = -1.868409167301311679665332121658138930797576904296875p1000 {- 3910967202263310 1000 (-2.00202e+301)}
; -1.0718320291236749230989744319231249392032623291015625p-281 * -1.868409167301311679665332121658138930797576904296875p1000 == 1.0013103945109202985719321077340282499790191650390625p720
; [HW: 1.0013103945109202985719321077340282499790191650390625p720] 

; mpf : + 5901492231089 720
; mpfd: + 5901492231089 720 (5.52288e+216) class: Pos. norm. non-zero
; hwf : + 5901492231089 720 (5.52288e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011100110 #b0001001001100011100101010111011111100100001110011001)))
(assert (= y (fp #b1 #b11111100111 #b1101111001010000000100000010110100011011000100001110)))
(assert (= r (fp #b0 #b11011001111 #b0000000001010101111000001100010110010001101110110001)))
(assert (= (fp.mul roundTowardZero x y) r))
(check-sat)
(exit)
