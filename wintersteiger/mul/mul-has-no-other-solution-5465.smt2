(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.460190001281925109566373066627420485019683837890625p-93 {- 2072511518292906 -93 (-1.47442e-028)}
; Y = -1.535285070341398938609245305997319519519805908203125p215 {- 2410709643326514 215 (-8.08422e+064)}
; -1.460190001281925109566373066627420485019683837890625p-93 * -1.535285070341398938609245305997319519519805908203125p215 == 1.1209039544149639322512257422204129397869110107421875p123
; [HW: 1.1209039544149639322512257422204129397869110107421875p123] 

; mpf : + 544503004050851 123
; mpfd: + 544503004050851 123 (1.19195e+037) class: Pos. norm. non-zero
; hwf : + 544503004050851 123 (1.19195e+037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100010 #b0111010111001111000000110000110101110011101110101010)))
(assert (= y (fp #b1 #b10011010110 #b1000100100001000011100010011111100100111010000110010)))
(assert (= r (fp #b0 #b10001111010 #b0001111011110011100011111100001000101011010110100011)))
(assert  (not (= (fp.mul roundNearestTiesToEven x y) r)))
(check-sat)
(exit)
