(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4584473853483590488622212433256208896636962890625p-789 {+ 2064663473823848 -789 (4.47944e-238)}
; Y = -1.041148409440691313676552454126067459583282470703125p223 {- 185315961423986 223 (-1.40347e+067)}
; 1.4584473853483590488622212433256208896636962890625p-789 * -1.041148409440691313676552454126067459583282470703125p223 == -1.518460175508379084163834704668261110782623291015625p-566
; [HW: -1.518460175508379084163834704668261110782623291015625p-566] 

; mpf : - 2334937053225978 -566
; mpfd: - 2334937053225978 -566 (-6.28675e-171) class: Neg. norm. non-zero
; hwf : - 2334937053225978 -566 (-6.28675e-171) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101010 #b0111010101011100110011101100111100000010000001101000)))
(assert (= y (fp #b1 #b10011011110 #b0000101010001000101100111100000011010100100001110010)))
(assert (= r (fp #b1 #b00111001001 #b1000010010111001110011100101101000010110001111111010)))
(assert (= (fp.mul roundNearestTiesToEven x y) r))
(check-sat)
(exit)
