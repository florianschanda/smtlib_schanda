(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6898389286514554630258544420939870178699493408203125p-780 {+ 3106758342020357 -780 (2.65735e-235)}
; Y = -1.365716581718041222615056540234945714473724365234375p525 {- 1647041061148582 525 (-1.50006e+158)}
; 1.6898389286514554630258544420939870178699493408203125p-780 * -1.365716581718041222615056540234945714473724365234375p525 == -1.15392052264597122501754711265675723552703857421875p-254
; [HW: -1.15392052264597122501754711265675723552703857421875p-254] 

; mpf : - 693196408433068 -254
; mpfd: - 693196408433068 -254 (-3.98618e-077) class: Neg. norm. non-zero
; hwf : - 693196408433068 -254 (-3.98618e-077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110011 #b1011000010011001010010001011011000010000110100000101)))
(assert (= y (fp #b1 #b11000001100 #b0101110110011111100110100001011000010101011110100110)))
(assert (= r (fp #b1 #b01100000001 #b0010011101100111010101011101101011110010100110101100)))
(assert  (not (= (fp.mul roundTowardZero x y) r)))
(check-sat)
(exit)
