(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3999937812154559235722217636066488921642303466796875p-811 {+ 1801411844032443 -811 (1.02518e-244)}
; Y = 1.9690049984024635687518411941709928214550018310546875p1009 {+ 4364010549725483 1009 (1.08022e+304)}
; 1.3999937812154559235722217636066488921642303466796875p-811 M 1.9690049984024635687518411941709928214550018310546875p1009 == 1.9690049984024635687518411941709928214550018310546875p1009
; [HW: 1.9690049984024635687518411941709928214550018310546875p1009] 

; mpf : + 4364010549725483 1009
; mpfd: + 4364010549725483 1009 (1.08022e+304) class: Pos. norm. non-zero
; hwf : + 4364010549725483 1009 (1.08022e+304) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010100 #b0110011001100101111111100001000011101100011110111011)))
(assert (= y (fp #b0 #b11111110000 #b1111100000010000101101100010100111001100100100101011)))
(assert (= r (fp #b0 #b11111110000 #b1111100000010000101101100010100111001100100100101011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
