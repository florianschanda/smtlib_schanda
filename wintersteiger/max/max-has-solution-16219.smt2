(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2791219417632573307486154590151272714138031005859375p1008 {- 1257053472915935 1008 (-3.50871e+303)}
; Y = 1.5076134512997609871121085234335623681545257568359375p306 {+ 2286087750121855 306 (1.96548e+092)}
; -1.2791219417632573307486154590151272714138031005859375p1008 M 1.5076134512997609871121085234335623681545257568359375p306 == 1.5076134512997609871121085234335623681545257568359375p306
; [HW: 1.5076134512997609871121085234335623681545257568359375p306] 

; mpf : + 2286087750121855 306
; mpfd: + 2286087750121855 306 (1.96548e+092) class: Pos. norm. non-zero
; hwf : + 2286087750121855 306 (1.96548e+092) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101111 #b0100011101110100100010010001101101111000000111011111)))
(assert (= y (fp #b0 #b10100110001 #b1000000111110010111101001000010001010111100101111111)))
(assert (= r (fp #b0 #b10100110001 #b1000000111110010111101001000010001010111100101111111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
