(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.275212053979483339816169973346404731273651123046875p757 {+ 1239444903749870 757 (9.66694e+227)}
; Y = 1.277934434816098363540959326201118528842926025390625p-1 {+ 1251705417071210 -1 (0.638967)}
; 1.275212053979483339816169973346404731273651123046875p757 M 1.277934434816098363540959326201118528842926025390625p-1 == 1.275212053979483339816169973346404731273651123046875p757
; [HW: 1.275212053979483339816169973346404731273651123046875p757] 

; mpf : + 1239444903749870 757
; mpfd: + 1239444903749870 757 (9.66694e+227) class: Pos. norm. non-zero
; hwf : + 1239444903749870 757 (9.66694e+227) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110100 #b0100011001110100010011000001001101001110100011101110)))
(assert (= y (fp #b0 #b01111111110 #b0100011100100110101101100000101111110111101001101010)))
(assert (= r (fp #b0 #b11011110100 #b0100011001110100010011000001001101001110100011101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
