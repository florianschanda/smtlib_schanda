(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5314441876392967945008649621740914881229400634765625p-961 {- 2393411845420553 -961 (-7.85734e-290)}
; Y = 1.2019986525890613560108022284111939370632171630859375p467 {+ 909721056529439 467 (4.58049e+140)}
; -1.5314441876392967945008649621740914881229400634765625p-961 M 1.2019986525890613560108022284111939370632171630859375p467 == 1.2019986525890613560108022284111939370632171630859375p467
; [HW: 1.2019986525890613560108022284111939370632171630859375p467] 

; mpf : + 909721056529439 467
; mpfd: + 909721056529439 467 (4.58049e+140) class: Pos. norm. non-zero
; hwf : + 909721056529439 467 (4.58049e+140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111110 #b1000100000001100101110011110110110001111011000001001)))
(assert (= y (fp #b0 #b10111010010 #b0011001110110110001011110000011010110100110000011111)))
(assert (= r (fp #b0 #b10111010010 #b0011001110110110001011110000011010110100110000011111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
