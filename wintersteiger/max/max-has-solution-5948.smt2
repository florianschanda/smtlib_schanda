(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1309215844980939902342242930899374186992645263671875p645 {+ 589618399160371 645 (1.65112e+194)}
; Y = -1.6921796408491844854182772905915044248104095458984375p-394 {- 3117299972601831 -394 (-4.194e-119)}
; 1.1309215844980939902342242930899374186992645263671875p645 M -1.6921796408491844854182772905915044248104095458984375p-394 == 1.1309215844980939902342242930899374186992645263671875p645
; [HW: 1.1309215844980939902342242930899374186992645263671875p645] 

; mpf : + 589618399160371 645
; mpfd: + 589618399160371 645 (1.65112e+194) class: Pos. norm. non-zero
; hwf : + 589618399160371 645 (1.65112e+194) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010000100 #b0010000110000100000100111011001111000010100000110011)))
(assert (= y (fp #b1 #b01001110101 #b1011000100110010101011110101100001100111011111100111)))
(assert (= r (fp #b0 #b11010000100 #b0010000110000100000100111011001111000010100000110011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
