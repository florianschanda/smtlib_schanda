(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8139458950417177707237215145141817629337310791015625p155 {- 3665686429609625 155 (-8.28464e+046)}
; Y = 1.186863300602177151432670143549330532550811767578125p372 {+ 841557490961186 372 (1.14172e+112)}
; -1.8139458950417177707237215145141817629337310791015625p155 M 1.186863300602177151432670143549330532550811767578125p372 == 1.186863300602177151432670143549330532550811767578125p372
; [HW: 1.186863300602177151432670143549330532550811767578125p372] 

; mpf : + 841557490961186 372
; mpfd: + 841557490961186 372 (1.14172e+112) class: Pos. norm. non-zero
; hwf : + 841557490961186 372 (1.14172e+112) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011010 #b1101000001011110110000100001011111101010111010011001)))
(assert (= y (fp #b0 #b10101110011 #b0010111111010110010001011111010011101000101100100010)))
(assert (= r (fp #b0 #b10101110011 #b0010111111010110010001011111010011101000101100100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
