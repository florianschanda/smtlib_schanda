(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6381627149648034791340478477650322020053863525390625p-515 {+ 2874029365317233 -515 (1.52725e-155)}
; Y = 1.0148709175186365616383454835158772766590118408203125p-877 {+ 66972658595589 -877 (1.00717e-264)}
; 1.6381627149648034791340478477650322020053863525390625p-515 M 1.0148709175186365616383454835158772766590118408203125p-877 == 1.6381627149648034791340478477650322020053863525390625p-515
; [HW: 1.6381627149648034791340478477650322020053863525390625p-515] 

; mpf : + 2874029365317233 -515
; mpfd: + 2874029365317233 -515 (1.52725e-155) class: Pos. norm. non-zero
; hwf : + 2874029365317233 -515 (1.52725e-155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111100 #b1010001101011110101000011011011001001100111001110001)))
(assert (= y (fp #b0 #b00010010010 #b0000001111001110100101001001100001100111011100000101)))
(assert (= r (fp #b0 #b00111111100 #b1010001101011110101000011011011001001100111001110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
