(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.46177282827450927271684122388251125812530517578125p838 {- 2079639937346900 838 (-2.67927e+252)}
; Y = 1.3873515920649934773933864562422968447208404541015625p-687 {+ 1744476485685273 -687 (2.16063e-207)}
; -1.46177282827450927271684122388251125812530517578125p838 M 1.3873515920649934773933864562422968447208404541015625p-687 == 1.3873515920649934773933864562422968447208404541015625p-687
; [HW: 1.3873515920649934773933864562422968447208404541015625p-687] 

; mpf : + 1744476485685273 -687
; mpfd: + 1744476485685273 -687 (2.16063e-207) class: Pos. norm. non-zero
; hwf : + 1744476485685273 -687 (2.16063e-207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000101 #b0111011000110110101111100111101110011110110101010100)))
(assert (= y (fp #b0 #b00101010000 #b0110001100101001011110010101001111111001000000011001)))
(assert (= r (fp #b0 #b00101010000 #b0110001100101001011110010101001111111001000000011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
