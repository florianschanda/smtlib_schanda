(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6791609491422161415385971849900670349597930908203125p-114 {- 3058668997481477 -114 (-8.08487e-035)}
; Y = 1.7480239240371115982952687772922217845916748046875p-368 {+ 3368800265557752 -368 (2.90743e-111)}
; -1.6791609491422161415385971849900670349597930908203125p-114 M 1.7480239240371115982952687772922217845916748046875p-368 == 1.7480239240371115982952687772922217845916748046875p-368
; [HW: 1.7480239240371115982952687772922217845916748046875p-368] 

; mpf : + 3368800265557752 -368
; mpfd: + 3368800265557752 -368 (2.90743e-111) class: Pos. norm. non-zero
; hwf : + 3368800265557752 -368 (2.90743e-111) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001101 #b1010110111011101011111011111000101001001010000000101)))
(assert (= y (fp #b0 #b01010001111 #b1011111101111110011111101111001001011101011011111000)))
(assert (= r (fp #b0 #b01010001111 #b1011111101111110011111101111001001011101011011111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
