(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.17941621432701371219309294247068464756011962890625p369 {- 808018795987364 369 (-1.41819e+111)}
; Y = -1.8729286055005953670615781447850167751312255859375p47 {- 3931320942453528 47 (-2.63591e+014)}
; -1.17941621432701371219309294247068464756011962890625p369 M -1.8729286055005953670615781447850167751312255859375p47 == -1.8729286055005953670615781447850167751312255859375p47
; [HW: -1.8729286055005953670615781447850167751312255859375p47] 

; mpf : - 3931320942453528 47
; mpfd: - 3931320942453528 47 (-2.63591e+014) class: Neg. norm. non-zero
; hwf : - 3931320942453528 47 (-2.63591e+014) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101110000 #b0010110111101110001110001001010011101000000110100100)))
(assert (= y (fp #b1 #b10000101110 #b1101111101111000001111111100010001011110001100011000)))
(assert (= r (fp #b1 #b10000101110 #b1101111101111000001111111100010001011110001100011000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
