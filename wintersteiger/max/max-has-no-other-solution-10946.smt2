(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1214974162243935840166386697092093527317047119140625p237 {+ 547175718434657 237 (2.47689e+071)}
; Y = 1.060052314441551235546512543805874884128570556640625p-748 {+ 270451580941706 -748 (7.15963e-226)}
; 1.1214974162243935840166386697092093527317047119140625p237 M 1.060052314441551235546512543805874884128570556640625p-748 == 1.1214974162243935840166386697092093527317047119140625p237
; [HW: 1.1214974162243935840166386697092093527317047119140625p237] 

; mpf : + 547175718434657 237
; mpfd: + 547175718434657 237 (2.47689e+071) class: Pos. norm. non-zero
; hwf : + 547175718434657 237 (2.47689e+071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101100 #b0001111100011010011101000110010100111011011101100001)))
(assert (= y (fp #b0 #b00100010011 #b0000111101011111100101101010011010010011010110001010)))
(assert (= r (fp #b0 #b10011101100 #b0001111100011010011101000110010100111011011101100001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
