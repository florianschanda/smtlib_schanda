(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.728836277027699708241925691254436969757080078125p312 {- 3282386785636048 312 (-1.44249e+094)}
; Y = 1.9516295539503272227221941648167558014392852783203125p-542 {+ 4285758504565445 -542 (1.35563e-163)}
; -1.728836277027699708241925691254436969757080078125p312 M 1.9516295539503272227221941648167558014392852783203125p-542 == 1.9516295539503272227221941648167558014392852783203125p-542
; [HW: 1.9516295539503272227221941648167558014392852783203125p-542] 

; mpf : + 4285758504565445 -542
; mpfd: + 4285758504565445 -542 (1.35563e-163) class: Pos. norm. non-zero
; hwf : + 4285758504565445 -542 (1.35563e-163) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100110111 #b1011101010010101000000111010010111111000111011010000)))
(assert (= y (fp #b0 #b00111100001 #b1111001110011101111111101001010000011111101011000101)))
(assert (= r (fp #b0 #b00111100001 #b1111001110011101111111101001010000011111101011000101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
