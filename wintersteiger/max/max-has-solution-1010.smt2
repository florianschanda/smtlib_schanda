(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7708153046379304651480879329028539359569549560546875p718 {+ 3471443518738859 718 (2.4418e+216)}
; Y = -1.992837117115734191230558280949480831623077392578125p-110 {- 4471340870682018 -110 (-1.53523e-033)}
; 1.7708153046379304651480879329028539359569549560546875p718 M -1.992837117115734191230558280949480831623077392578125p-110 == 1.7708153046379304651480879329028539359569549560546875p718
; [HW: 1.7708153046379304651480879329028539359569549560546875p718] 

; mpf : + 3471443518738859 718
; mpfd: + 3471443518738859 718 (2.4418e+216) class: Pos. norm. non-zero
; hwf : + 3471443518738859 718 (2.4418e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001101 #b1100010101010100001001101101110010101101000110101011)))
(assert (= y (fp #b1 #b01110010001 #b1111111000101010100100101100010001000100010110100010)))
(assert (= r (fp #b0 #b11011001101 #b1100010101010100001001101101110010101101000110101011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
