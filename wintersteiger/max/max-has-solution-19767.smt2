(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2646243636668013099466634230338968336582183837890625p-848 {+ 1191762185602961 -848 (6.73791e-256)}
; Y = 1.468687172122342676772177583188749849796295166015625p946 {+ 2110779373723514 946 (8.73585e+284)}
; 1.2646243636668013099466634230338968336582183837890625p-848 M 1.468687172122342676772177583188749849796295166015625p946 == 1.468687172122342676772177583188749849796295166015625p946
; [HW: 1.468687172122342676772177583188749849796295166015625p946] 

; mpf : + 2110779373723514 946
; mpfd: + 2110779373723514 946 (8.73585e+284) class: Pos. norm. non-zero
; hwf : + 2110779373723514 946 (8.73585e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010101111 #b0100001110111110011011000001101110101100011110010001)))
(assert (= y (fp #b0 #b11110110001 #b0111011111111011111000011110110001010001111101111010)))
(assert (= r (fp #b0 #b11110110001 #b0111011111111011111000011110110001010001111101111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
