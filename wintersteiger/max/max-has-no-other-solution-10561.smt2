(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5556403555217757084250251864432357251644134521484375p-606 {+ 2502381698079879 -606 (5.85776e-183)}
; Y = -1.8455308452110854577910004081786610186100006103515625p-412 {- 3807932399422905 -412 (-1.74487e-124)}
; 1.5556403555217757084250251864432357251644134521484375p-606 M -1.8455308452110854577910004081786610186100006103515625p-412 == 1.5556403555217757084250251864432357251644134521484375p-606
; [HW: 1.5556403555217757084250251864432357251644134521484375p-606] 

; mpf : + 2502381698079879 -606
; mpfd: + 2502381698079879 -606 (5.85776e-183) class: Pos. norm. non-zero
; hwf : + 2502381698079879 -606 (5.85776e-183) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100001 #b1000111000111110011100100100001101001101110010000111)))
(assert (= y (fp #b1 #b01001100011 #b1101100001110100101101011001111111110000110110111001)))
(assert (= r (fp #b0 #b00110100001 #b1000111000111110011100100100001101001101110010000111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
