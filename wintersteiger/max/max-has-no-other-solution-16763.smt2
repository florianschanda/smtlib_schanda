(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.990288605670098132094381071510724723339080810546875p255 {+ 4459863395485102 255 (1.1523e+077)}
; Y = -1.274269524946549214661217774846591055393218994140625p619 {- 1235200130348362 619 (-2.77223e+186)}
; 1.990288605670098132094381071510724723339080810546875p255 M -1.274269524946549214661217774846591055393218994140625p619 == 1.990288605670098132094381071510724723339080810546875p255
; [HW: 1.990288605670098132094381071510724723339080810546875p255] 

; mpf : + 4459863395485102 255
; mpfd: + 4459863395485102 255 (1.1523e+077) class: Pos. norm. non-zero
; hwf : + 4459863395485102 255 (1.1523e+077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111110 #b1111110110000011100011011101011011110100010110101110)))
(assert (= y (fp #b1 #b11001101010 #b0100011000110110100001110000111111101111010101001010)))
(assert (= r (fp #b0 #b10011111110 #b1111110110000011100011011101011011110100010110101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
