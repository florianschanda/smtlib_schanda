(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8576777393965338003312126602395437657833099365234375p81 {- 3862637147550199 81 (-4.49159e+024)}
; Y = 1.0690657706224360179447785412776283919811248779296875p-374 {+ 311044578839259 -374 (2.77834e-113)}
; -1.8576777393965338003312126602395437657833099365234375p81 M 1.0690657706224360179447785412776283919811248779296875p-374 == 1.0690657706224360179447785412776283919811248779296875p-374
; [HW: 1.0690657706224360179447785412776283919811248779296875p-374] 

; mpf : + 311044578839259 -374
; mpfd: + 311044578839259 -374 (2.77834e-113) class: Pos. norm. non-zero
; hwf : + 311044578839259 -374 (2.77834e-113) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001010000 #b1101101110010000110001001011000100110111000111110111)))
(assert (= y (fp #b0 #b01010001001 #b0001000110101110010010110101101000011000101011011011)))
(assert (= r (fp #b0 #b01010001001 #b0001000110101110010010110101101000011000101011011011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
