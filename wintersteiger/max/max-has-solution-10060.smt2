(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.161510936925937098607164443819783627986907958984375p-1016 {- 727380595355910 -1016 (-1.65405e-306)}
; Y = -1.750021076931495667139415672863833606243133544921875p-448 {- 3377794642588702 -448 (-2.40772e-135)}
; -1.161510936925937098607164443819783627986907958984375p-1016 M -1.750021076931495667139415672863833606243133544921875p-448 == -1.161510936925937098607164443819783627986907958984375p-1016
; [HW: -1.161510936925937098607164443819783627986907958984375p-1016] 

; mpf : - 727380595355910 -1016
; mpfd: - 727380595355910 -1016 (-1.65405e-306) class: Neg. norm. non-zero
; hwf : - 727380595355910 -1016 (-1.65405e-306) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000111 #b0010100101011000110001111110000000001011000100000110)))
(assert (= y (fp #b1 #b01000111111 #b1100000000000001011000011001110010111011010000011110)))
(assert (= r (fp #b1 #b00000000111 #b0010100101011000110001111110000000001011000100000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
