(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.46027448362857636965372876147739589214324951171875p-645 {+ 2072891992957804 -645 (1.0002e-194)}
; Y = 1.123333497527422952799724953365512192249298095703125p44 {+ 555444693506802 44 (1.97619e+013)}
; 1.46027448362857636965372876147739589214324951171875p-645 M 1.123333497527422952799724953365512192249298095703125p44 == 1.123333497527422952799724953365512192249298095703125p44
; [HW: 1.123333497527422952799724953365512192249298095703125p44] 

; mpf : + 555444693506802 44
; mpfd: + 555444693506802 44 (1.97619e+013) class: Pos. norm. non-zero
; hwf : + 555444693506802 44 (1.97619e+013) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111010 #b0111010111010100100011000110111001011110001101101100)))
(assert (= y (fp #b0 #b10000101011 #b0001111110010010110010001011101001100001101011110010)))
(assert (= r (fp #b0 #b10000101011 #b0001111110010010110010001011101001100001101011110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
