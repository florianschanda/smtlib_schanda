(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.97905350305370664187876172945834696292877197265625p-717 {+ 4409264991528452 -717 (2.87045e-216)}
; Y = 1.182109175609115769844947863020934164524078369140625p181 {+ 820146815413962 181 (3.62315e+054)}
; 1.97905350305370664187876172945834696292877197265625p-717 M 1.182109175609115769844947863020934164524078369140625p181 == 1.182109175609115769844947863020934164524078369140625p181
; [HW: 1.182109175609115769844947863020934164524078369140625p181] 

; mpf : + 820146815413962 181
; mpfd: + 820146815413962 181 (3.62315e+054) class: Pos. norm. non-zero
; hwf : + 820146815413962 181 (3.62315e+054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110010 #b1111101010100011010000000001100010100110011000000100)))
(assert (= y (fp #b0 #b10010110100 #b0010111010011110101101001111100110001010111011001010)))
(assert (= r (fp #b0 #b10010110100 #b0010111010011110101101001111100110001010111011001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
