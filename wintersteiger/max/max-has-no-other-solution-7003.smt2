(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2599143212587786688771984699997119605541229248046875p766 {- 1170550040369291 766 (-4.8901e+230)}
; Y = 1.6954465313930497938343933128635399043560028076171875p-276 {+ 3132012739637843 -276 (1.39639e-083)}
; -1.2599143212587786688771984699997119605541229248046875p766 M 1.6954465313930497938343933128635399043560028076171875p-276 == 1.6954465313930497938343933128635399043560028076171875p-276
; [HW: 1.6954465313930497938343933128635399043560028076171875p-276] 

; mpf : + 3132012739637843 -276
; mpfd: + 3132012739637843 -276 (1.39639e-083) class: Pos. norm. non-zero
; hwf : + 3132012739637843 -276 (1.39639e-083) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111101 #b0100001010001001101111101011010110010001100010001011)))
(assert (= y (fp #b0 #b01011101011 #b1011001000001000110010001010110001110011001001010011)))
(assert (= r (fp #b0 #b01011101011 #b1011001000001000110010001010110001110011001001010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
