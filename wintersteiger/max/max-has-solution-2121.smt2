(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.566506451909293051727445345022715628147125244140625p982 {+ 2551318245721674 982 (6.40307e+295)}
; Y = 1.6582269371694080550838634735555388033390045166015625p-768 {+ 2964390588961369 -768 (1.06809e-231)}
; 1.566506451909293051727445345022715628147125244140625p982 M 1.6582269371694080550838634735555388033390045166015625p-768 == 1.566506451909293051727445345022715628147125244140625p982
; [HW: 1.566506451909293051727445345022715628147125244140625p982] 

; mpf : + 2551318245721674 982
; mpfd: + 2551318245721674 982 (6.40307e+295) class: Pos. norm. non-zero
; hwf : + 2551318245721674 982 (6.40307e+295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010101 #b1001000100000110100100010001101111101100011001001010)))
(assert (= y (fp #b0 #b00011111111 #b1010100010000001100011111000000001111101001001011001)))
(assert (= r (fp #b0 #b11111010101 #b1001000100000110100100010001101111101100011001001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
