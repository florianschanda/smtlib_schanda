(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9934250231518877427561164950020611286163330078125p702 {- 4473988564087368 702 (-4.19427e+211)}
; Y = 1.33434983962966224879664878244511783123016357421875p-932 {+ 1505777813167532 -932 (3.67548e-281)}
; -1.9934250231518877427561164950020611286163330078125p702 M 1.33434983962966224879664878244511783123016357421875p-932 == 1.33434983962966224879664878244511783123016357421875p-932
; [HW: 1.33434983962966224879664878244511783123016357421875p-932] 

; mpf : + 1505777813167532 -932
; mpfd: + 1505777813167532 -932 (3.67548e-281) class: Pos. norm. non-zero
; hwf : + 1505777813167532 -932 (3.67548e-281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010111101 #b1111111001010001000110100011000101110111001001001000)))
(assert (= y (fp #b0 #b00001011011 #b0101010110010111111100110111101010100001110110101100)))
(assert (= r (fp #b0 #b00001011011 #b0101010110010111111100110111101010100001110110101100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
