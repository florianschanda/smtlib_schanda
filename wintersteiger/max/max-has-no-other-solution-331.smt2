(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0258898466934043280929245156585238873958587646484375p-567 {+ 116597503921095 -567 (2.1237e-171)}
; Y = 1.045384140377634718532817714731208980083465576171875p-798 {+ 204391997693246 -798 (6.27104e-241)}
; 1.0258898466934043280929245156585238873958587646484375p-567 M 1.045384140377634718532817714731208980083465576171875p-798 == 1.0258898466934043280929245156585238873958587646484375p-567
; [HW: 1.0258898466934043280929245156585238873958587646484375p-567] 

; mpf : + 116597503921095 -567
; mpfd: + 116597503921095 -567 (2.1237e-171) class: Pos. norm. non-zero
; hwf : + 116597503921095 -567 (2.1237e-171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111001000 #b0000011010100000101101111000110011011000101111000111)))
(assert (= y (fp #b0 #b00011100001 #b0000101110011110010010111000011010101101110100111110)))
(assert (= r (fp #b0 #b00111001000 #b0000011010100000101101111000110011011000101111000111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
