(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4134457555064419143064924355712719261646270751953125p-799 {+ 1861994150436725 -799 (4.23948e-241)}
; Y = -1.296564837814877524380108297918923199176788330078125p753 {- 1335609293074274 753 (-6.14301e+226)}
; 1.4134457555064419143064924355712719261646270751953125p-799 M -1.296564837814877524380108297918923199176788330078125p753 == 1.4134457555064419143064924355712719261646270751953125p-799
; [HW: 1.4134457555064419143064924355712719261646270751953125p-799] 

; mpf : + 1861994150436725 -799
; mpfd: + 1861994150436725 -799 (4.23948e-241) class: Pos. norm. non-zero
; hwf : + 1861994150436725 -799 (4.23948e-241) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100000 #b0110100111010111100101001011111010010001111101110101)))
(assert (= y (fp #b1 #b11011110000 #b0100101111101011101011000101011110001110111101100010)))
(assert (= r (fp #b0 #b00011100000 #b0110100111010111100101001011111010010001111101110101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
