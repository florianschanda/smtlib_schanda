(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.252817991452494172932574656442739069461822509765625p783 {+ 1138591012098010 783 (6.37345e+235)}
; Y = -1.6479690358566998487077626123209483921527862548828125p534 {- 2918193108431853 534 (-9.26759e+160)}
; 1.252817991452494172932574656442739069461822509765625p783 M -1.6479690358566998487077626123209483921527862548828125p534 == 1.252817991452494172932574656442739069461822509765625p783
; [HW: 1.252817991452494172932574656442739069461822509765625p783] 

; mpf : + 1138591012098010 783
; mpfd: + 1138591012098010 783 (6.37345e+235) class: Pos. norm. non-zero
; hwf : + 1138591012098010 783 (6.37345e+235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001110 #b0100000010111000101011100000110100100000111111011010)))
(assert (= y (fp #b1 #b11000010101 #b1010010111100001010011000111100111010011001111101101)))
(assert (= r (fp #b0 #b11100001110 #b0100000010111000101011100000110100100000111111011010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
