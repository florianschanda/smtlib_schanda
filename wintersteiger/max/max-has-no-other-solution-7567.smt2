(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.04185475094516721838999728788621723651885986328125p350 {- 188497040760340 350 (-2.38949e+105)}
; Y = 1.0654948395157479712480608213809318840503692626953125p392 {+ 294962534837813 392 (1.07476e+118)}
; -1.04185475094516721838999728788621723651885986328125p350 M 1.0654948395157479712480608213809318840503692626953125p392 == 1.0654948395157479712480608213809318840503692626953125p392
; [HW: 1.0654948395157479712480608213809318840503692626953125p392] 

; mpf : + 294962534837813 392
; mpfd: + 294962534837813 392 (1.07476e+118) class: Pos. norm. non-zero
; hwf : + 294962534837813 392 (1.07476e+118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101011101 #b0000101010110110111111100011001001111101111000010100)))
(assert (= y (fp #b0 #b10110000111 #b0001000011000100010001010001000111000110111000110101)))
(assert (= r (fp #b0 #b10110000111 #b0001000011000100010001010001000111000110111000110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
