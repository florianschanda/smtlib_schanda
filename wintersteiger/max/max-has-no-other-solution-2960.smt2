(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4423107016828351500947746899328194558620452880859375p443 {- 1991990311280799 443 (-3.27602e+133)}
; Y = -1.456037350148522424575503464438952505588531494140625p-511 {- 2053809640195914 -511 (-2.17192e-154)}
; -1.4423107016828351500947746899328194558620452880859375p443 M -1.456037350148522424575503464438952505588531494140625p-511 == -1.456037350148522424575503464438952505588531494140625p-511
; [HW: -1.456037350148522424575503464438952505588531494140625p-511] 

; mpf : - 2053809640195914 -511
; mpfd: - 2053809640195914 -511 (-2.17192e-154) class: Neg. norm. non-zero
; hwf : - 2053809640195914 -511 (-2.17192e-154) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111010 #b0111000100111011010001100010111001100110000010011111)))
(assert (= y (fp #b1 #b01000000000 #b0111010010111110110111010010000010100100011101001010)))
(assert (= r (fp #b1 #b01000000000 #b0111010010111110110111010010000010100100011101001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
