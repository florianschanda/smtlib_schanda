(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2048405045528725043624262980301864445209503173828125p173 {+ 922519619974701 173 (1.44251e+052)}
; Y = 1.6846420930242669289356172157567925751209259033203125p146 {+ 3083353875026245 146 (1.50275e+044)}
; 1.2048405045528725043624262980301864445209503173828125p173 M 1.6846420930242669289356172157567925751209259033203125p146 == 1.2048405045528725043624262980301864445209503173828125p173
; [HW: 1.2048405045528725043624262980301864445209503173828125p173] 

; mpf : + 922519619974701 173
; mpfd: + 922519619974701 173 (1.44251e+052) class: Pos. norm. non-zero
; hwf : + 922519619974701 173 (1.44251e+052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010101100 #b0011010001110000011011010110001111110011011000101101)))
(assert (= y (fp #b0 #b10010010001 #b1010111101000100101101000100011100000001000101000101)))
(assert (= r (fp #b0 #b10010101100 #b0011010001110000011011010110001111110011011000101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
