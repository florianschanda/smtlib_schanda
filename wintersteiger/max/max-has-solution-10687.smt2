(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9571557903857323967855563751072622835636138916015625p-137 {- 4310646460916697 -137 (-1.12335e-041)}
; Y = -1.3614767120396276123273082703235559165477752685546875p-437 {- 1627946385644779 -437 (-3.83621e-132)}
; -1.9571557903857323967855563751072622835636138916015625p-137 M -1.3614767120396276123273082703235559165477752685546875p-437 == -1.3614767120396276123273082703235559165477752685546875p-437
; [HW: -1.3614767120396276123273082703235559165477752685546875p-437] 

; mpf : - 1627946385644779 -437
; mpfd: - 1627946385644779 -437 (-3.83621e-132) class: Neg. norm. non-zero
; hwf : - 1627946385644779 -437 (-3.83621e-132) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101110110 #b1111010100001000001010010111000011100010001111011001)))
(assert (= y (fp #b1 #b01001001010 #b0101110010001001101111001110000001111001110011101011)))
(assert (= r (fp #b1 #b01001001010 #b0101110010001001101111001110000001111001110011101011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
