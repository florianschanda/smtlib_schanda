(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9420527968672105512126790927140973508358001708984375p-774 {- 4242628624934503 -774 (-1.95454e-233)}
; Y = 1.021847089044155776349498410127125680446624755859375p104 {+ 98390542078390 104 (2.07255e+031)}
; -1.9420527968672105512126790927140973508358001708984375p-774 M 1.021847089044155776349498410127125680446624755859375p104 == 1.021847089044155776349498410127125680446624755859375p104
; [HW: 1.021847089044155776349498410127125680446624755859375p104] 

; mpf : + 98390542078390 104
; mpfd: + 98390542078390 104 (2.07255e+031) class: Pos. norm. non-zero
; hwf : + 98390542078390 104 (2.07255e+031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111001 #b1111000100101010010111110100000110100110011001100111)))
(assert (= y (fp #b0 #b10001100111 #b0000010110010111110001010101010011110101000110110110)))
(assert (= r (fp #b0 #b10001100111 #b0000010110010111110001010101010011110101000110110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
