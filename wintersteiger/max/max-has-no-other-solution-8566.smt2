(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2764425836427850668997052707709372043609619140625p-389 {- 1244986716682984 -389 (-1.01236e-117)}
; Y = 1.8863266206951287973225817040656693279743194580078125p304 {+ 3991660238691133 304 (6.14802e+091)}
; -1.2764425836427850668997052707709372043609619140625p-389 M 1.8863266206951287973225817040656693279743194580078125p304 == 1.8863266206951287973225817040656693279743194580078125p304
; [HW: 1.8863266206951287973225817040656693279743194580078125p304] 

; mpf : + 3991660238691133 304
; mpfd: + 3991660238691133 304 (6.14802e+091) class: Pos. norm. non-zero
; hwf : + 3991660238691133 304 (6.14802e+091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001111010 #b0100011011000100111100001110111111110111101011101000)))
(assert (= y (fp #b0 #b10100101111 #b1110001011100110010011010010100101110101101100111101)))
(assert (= r (fp #b0 #b10100101111 #b1110001011100110010011010010100101110101101100111101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
