(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.939907737587942992973921718657948076725006103515625p469 {+ 4232968136763706 469 (2.95698e+141)}
; Y = -1.0127952942911033762385386580717749893665313720703125p-501 {- 57624882601509 -501 (-1.54701e-151)}
; 1.939907737587942992973921718657948076725006103515625p469 M -1.0127952942911033762385386580717749893665313720703125p-501 == 1.939907737587942992973921718657948076725006103515625p469
; [HW: 1.939907737587942992973921718657948076725006103515625p469] 

; mpf : + 4232968136763706 469
; mpfd: + 4232968136763706 469 (2.95698e+141) class: Pos. norm. non-zero
; hwf : + 4232968136763706 469 (2.95698e+141) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111010100 #b1111000010011101110010110010001000110010100100111010)))
(assert (= y (fp #b1 #b01000001010 #b0000001101000110100011010110101010000101111000100101)))
(assert (= r (fp #b0 #b10111010100 #b1111000010011101110010110010001000110010100100111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
