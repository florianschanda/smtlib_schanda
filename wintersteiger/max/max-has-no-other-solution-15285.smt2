(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.508370475243116626273831570870243012905120849609375p-609 {+ 2289497082871062 -609 (7.09971e-184)}
; Y = 1.8744128644382256343448034385801292955875396728515625p-668 {+ 3938005450451961 -668 (1.53048e-201)}
; 1.508370475243116626273831570870243012905120849609375p-609 M 1.8744128644382256343448034385801292955875396728515625p-668 == 1.508370475243116626273831570870243012905120849609375p-609
; [HW: 1.508370475243116626273831570870243012905120849609375p-609] 

; mpf : + 2289497082871062 -609
; mpfd: + 2289497082871062 -609 (7.09971e-184) class: Pos. norm. non-zero
; hwf : + 2289497082871062 -609 (7.09971e-184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011110 #b1000001000100100100100010100010101101011110100010110)))
(assert (= y (fp #b0 #b00101100011 #b1101111111011001100001010111111111110110101111111001)))
(assert (= r (fp #b0 #b00110011110 #b1000001000100100100100010100010101101011110100010110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
