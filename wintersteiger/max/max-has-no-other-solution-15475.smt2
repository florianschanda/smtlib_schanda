(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6409767778285109240954398046596907079219818115234375p-504 {+ 2886702777781623 -504 (3.13317e-152)}
; Y = -1.7357359055156462712687925886712037026882171630859375p847 {- 3313459949923359 847 (-1.62888e+255)}
; 1.6409767778285109240954398046596907079219818115234375p-504 M -1.7357359055156462712687925886712037026882171630859375p847 == 1.6409767778285109240954398046596907079219818115234375p-504
; [HW: 1.6409767778285109240954398046596907079219818115234375p-504] 

; mpf : + 2886702777781623 -504
; mpfd: + 2886702777781623 -504 (3.13317e-152) class: Pos. norm. non-zero
; hwf : + 2886702777781623 -504 (3.13317e-152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000000111 #b1010010000010111000011011101101001000100110101110111)))
(assert (= y (fp #b1 #b11101001110 #b1011110001011001001100000011010010101110110000011111)))
(assert (= r (fp #b0 #b01000000111 #b1010010000010111000011011101101001000100110101110111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
