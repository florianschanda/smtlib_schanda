(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.017653966560893241677376863663084805011749267578125p12 {+ 79506397225250 12 (4168.31)}
; Y = -1.5112819056800461670064805730362422764301300048828125p90 {- 2302608999901933 90 (-1.87088e+027)}
; 1.017653966560893241677376863663084805011749267578125p12 M -1.5112819056800461670064805730362422764301300048828125p90 == 1.017653966560893241677376863663084805011749267578125p12
; [HW: 1.017653966560893241677376863663084805011749267578125p12] 

; mpf : + 79506397225250 12
; mpfd: + 79506397225250 12 (4168.31) class: Pos. norm. non-zero
; hwf : + 79506397225250 12 (4168.31) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001011 #b0000010010000100111110000110100100000110000100100010)))
(assert (= y (fp #b1 #b10001011001 #b1000001011100011010111101111011111101110101011101101)))
(assert (= r (fp #b0 #b10000001011 #b0000010010000100111110000110100100000110000100100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
