(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.61700982009129301530947486753575503826141357421875p317 {+ 2778765195847084 317 (4.31739e+095)}
; Y = 1.8238312129107299153218946230481378734111785888671875p-57 {+ 3710205943480947 -57 (1.26554e-017)}
; 1.61700982009129301530947486753575503826141357421875p317 M 1.8238312129107299153218946230481378734111785888671875p-57 == 1.61700982009129301530947486753575503826141357421875p317
; [HW: 1.61700982009129301530947486753575503826141357421875p317] 

; mpf : + 2778765195847084 317
; mpfd: + 2778765195847084 317 (4.31739e+095) class: Pos. norm. non-zero
; hwf : + 2778765195847084 317 (4.31739e+095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111100 #b1001110111110100010110110000011010011010010110101100)))
(assert (= y (fp #b0 #b01111000110 #b1101001011100110100110100011010011100000001001110011)))
(assert (= r (fp #b0 #b10100111100 #b1001110111110100010110110000011010011010010110101100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
