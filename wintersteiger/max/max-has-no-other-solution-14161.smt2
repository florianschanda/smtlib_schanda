(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.61875097155050351460658930591307580471038818359375p89 {- 2786606644909980 89 (-1.00196e+027)}
; Y = 1.0149474457710347952144047667388804256916046142578125p-249 {+ 67317311204573 -249 (1.12195e-075)}
; -1.61875097155050351460658930591307580471038818359375p89 M 1.0149474457710347952144047667388804256916046142578125p-249 == 1.0149474457710347952144047667388804256916046142578125p-249
; [HW: 1.0149474457710347952144047667388804256916046142578125p-249] 

; mpf : + 67317311204573 -249
; mpfd: + 67317311204573 -249 (1.12195e-075) class: Pos. norm. non-zero
; hwf : + 67317311204573 -249 (1.12195e-075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001011000 #b1001111001100110011101101011001100101101011110011100)))
(assert (= y (fp #b0 #b01100000110 #b0000001111010011100110001000011010111110110011011101)))
(assert (= r (fp #b0 #b01100000110 #b0000001111010011100110001000011010111110110011011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
