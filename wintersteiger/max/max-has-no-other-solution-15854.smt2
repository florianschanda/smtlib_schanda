(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0163631447524774653601298268768005073070526123046875p-676 {- 73693052609867 -676 (-3.24169e-204)}
; Y = 1.28568594520086154631144381710328161716461181640625p-610 {+ 1286615116351588 -610 (3.02578e-184)}
; -1.0163631447524774653601298268768005073070526123046875p-676 M 1.28568594520086154631144381710328161716461181640625p-610 == 1.28568594520086154631144381710328161716461181640625p-610
; [HW: 1.28568594520086154631144381710328161716461181640625p-610] 

; mpf : + 1286615116351588 -610
; mpfd: + 1286615116351588 -610 (3.02578e-184) class: Pos. norm. non-zero
; hwf : + 1286615116351588 -610 (3.02578e-184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101011011 #b0000010000110000011000000000001110010010010101001011)))
(assert (= y (fp #b0 #b00110011101 #b0100100100100010101101101100111110010000100001100100)))
(assert (= r (fp #b0 #b00110011101 #b0100100100100010101101101100111110010000100001100100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
