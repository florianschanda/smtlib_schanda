(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4200094999060810518898279042332433164119720458984375p-847 {+ 1891554627269095 -847 (1.51316e-255)}
; Y = 1.424661929573570073870314445230178534984588623046875p733 {+ 1912507307785966 733 (6.43722e+220)}
; 1.4200094999060810518898279042332433164119720458984375p-847 M 1.424661929573570073870314445230178534984588623046875p733 == 1.424661929573570073870314445230178534984588623046875p733
; [HW: 1.424661929573570073870314445230178534984588623046875p733] 

; mpf : + 1912507307785966 733
; mpfd: + 1912507307785966 733 (6.43722e+220) class: Pos. norm. non-zero
; hwf : + 1912507307785966 733 (6.43722e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110000 #b0110101110000101101111100001101000011011000111100111)))
(assert (= y (fp #b0 #b11011011100 #b0110110010110110101001001110101101011111111011101110)))
(assert (= r (fp #b0 #b11011011100 #b0110110010110110101001001110101101011111111011101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
