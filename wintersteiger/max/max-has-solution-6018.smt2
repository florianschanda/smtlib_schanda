(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.685589695098948848084319251938723027706146240234375p-860 {- 3087621495376678 -860 (-2.19258e-259)}
; Y = -1.11555865387476416117351618595421314239501953125p-995 {- 520429910529824 -995 (-3.33155e-300)}
; -1.685589695098948848084319251938723027706146240234375p-860 M -1.11555865387476416117351618595421314239501953125p-995 == -1.11555865387476416117351618595421314239501953125p-995
; [HW: -1.11555865387476416117351618595421314239501953125p-995] 

; mpf : - 520429910529824 -995
; mpfd: - 520429910529824 -995 (-3.33155e-300) class: Neg. norm. non-zero
; hwf : - 520429910529824 -995 (-3.33155e-300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010100011 #b1010111110000010110011100110011011101100101100100110)))
(assert (= y (fp #b1 #b00000011100 #b0001110110010101010000000111111100101001011100100000)))
(assert (= r (fp #b1 #b00000011100 #b0001110110010101010000000111111100101001011100100000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
