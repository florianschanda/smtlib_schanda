(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.47413750676630694869118087808601558208465576171875p221 {+ 2135325498795116 221 (4.96783e+066)}
; Y = -1.6280247166381200951690289002726785838603973388671875p565 {- 2828371879830899 565 (-1.96611e+170)}
; 1.47413750676630694869118087808601558208465576171875p221 M -1.6280247166381200951690289002726785838603973388671875p565 == 1.47413750676630694869118087808601558208465576171875p221
; [HW: 1.47413750676630694869118087808601558208465576171875p221] 

; mpf : + 2135325498795116 221
; mpfd: + 2135325498795116 221 (4.96783e+066) class: Pos. norm. non-zero
; hwf : + 2135325498795116 221 (4.96783e+066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011100 #b0111100101100001000100110101110101011110010001101100)))
(assert (= y (fp #b1 #b11000110100 #b1010000011000110001110100101001100001010010101110011)))
(assert (= r (fp #b0 #b10011011100 #b0111100101100001000100110101110101011110010001101100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
