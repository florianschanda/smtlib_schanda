(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.90262863264702186683052786975167691707611083984375p503 {+ 4065077973643068 503 (4.98244e+151)}
; Y = -1.3601422424336770955477504685404710471630096435546875p-416 {- 1621936468824683 -416 (-8.03723e-126)}
; 1.90262863264702186683052786975167691707611083984375p503 M -1.3601422424336770955477504685404710471630096435546875p-416 == 1.90262863264702186683052786975167691707611083984375p503
; [HW: 1.90262863264702186683052786975167691707611083984375p503] 

; mpf : + 4065077973643068 503
; mpfd: + 4065077973643068 503 (4.98244e+151) class: Pos. norm. non-zero
; hwf : + 4065077973643068 503 (4.98244e+151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110110 #b1110011100010010101010111000100110100110111100111100)))
(assert (= y (fp #b1 #b01001011111 #b0101110000110010010010000011000100101001001001101011)))
(assert (= r (fp #b0 #b10111110110 #b1110011100010010101010111000100110100110111100111100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
