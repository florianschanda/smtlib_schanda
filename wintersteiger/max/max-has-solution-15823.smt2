(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.00018062581024747004221353563480079174041748046875p-853 {- 813466331724 -853 (-1.6653e-257)}
; Y = 1.3775411820998240131075363024137914180755615234375p-480 {+ 1700294327021784 -480 (4.41272e-145)}
; -1.00018062581024747004221353563480079174041748046875p-853 M 1.3775411820998240131075363024137914180755615234375p-480 == 1.3775411820998240131075363024137914180755615234375p-480
; [HW: 1.3775411820998240131075363024137914180755615234375p-480] 

; mpf : + 1700294327021784 -480
; mpfd: + 1700294327021784 -480 (4.41272e-145) class: Pos. norm. non-zero
; hwf : + 1700294327021784 -480 (4.41272e-145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010101010 #b0000000000001011110101100110010111110010101001001100)))
(assert (= y (fp #b0 #b01000011111 #b0110000010100110100010011111011000000011000011011000)))
(assert (= r (fp #b0 #b01000011111 #b0110000010100110100010011111011000000011000011011000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
