(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1394862104970495675360098175588063895702362060546875p34 {- 628190045617835 34 (-1.95762e+010)}
; Y = -1.106575171926814871170563492341898381710052490234375p-937 {- 479971904576550 -937 (-9.52522e-283)}
; -1.1394862104970495675360098175588063895702362060546875p34 M -1.106575171926814871170563492341898381710052490234375p-937 == -1.106575171926814871170563492341898381710052490234375p-937
; [HW: -1.106575171926814871170563492341898381710052490234375p-937] 

; mpf : - 479971904576550 -937
; mpfd: - 479971904576550 -937 (-9.52522e-283) class: Neg. norm. non-zero
; hwf : - 479971904576550 -937 (-9.52522e-283) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100001 #b0010001110110101010111100100100001010011111010101011)))
(assert (= y (fp #b1 #b00001010110 #b0001101101001000100000101010110111111101110000100110)))
(assert (= r (fp #b1 #b00001010110 #b0001101101001000100000101010110111111101110000100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
