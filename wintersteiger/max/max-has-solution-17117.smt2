(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.609440884556002426819532047375105321407318115234375p-637 {+ 2744677740590758 -637 (2.82207e-192)}
; Y = 1.5789033800219340886172858517966233193874359130859375p-102 {+ 2607149046550303 -102 (3.11384e-031)}
; 1.609440884556002426819532047375105321407318115234375p-637 M 1.5789033800219340886172858517966233193874359130859375p-102 == 1.5789033800219340886172858517966233193874359130859375p-102
; [HW: 1.5789033800219340886172858517966233193874359130859375p-102] 

; mpf : + 2607149046550303 -102
; mpfd: + 2607149046550303 -102 (3.11384e-031) class: Pos. norm. non-zero
; hwf : + 2607149046550303 -102 (3.11384e-031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110000010 #b1001110000000100010100010101110000000011011010100110)))
(assert (= y (fp #b0 #b01110011001 #b1001010000110011000000110000110010111100111100011111)))
(assert (= r (fp #b0 #b01110011001 #b1001010000110011000000110000110010111100111100011111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
