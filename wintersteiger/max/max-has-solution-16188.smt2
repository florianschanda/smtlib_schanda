(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5694147151912443138854769131285138428211212158203125p526 {- 2564415899154565 526 (-3.44759e+158)}
; Y = -1.837781267126473494499805383384227752685546875p-393 {- 3773031402448768 -393 (-9.10973e-119)}
; -1.5694147151912443138854769131285138428211212158203125p526 M -1.837781267126473494499805383384227752685546875p-393 == -1.837781267126473494499805383384227752685546875p-393
; [HW: -1.837781267126473494499805383384227752685546875p-393] 

; mpf : - 3773031402448768 -393
; mpfd: - 3773031402448768 -393 (-9.10973e-119) class: Neg. norm. non-zero
; hwf : - 3773031402448768 -393 (-9.10973e-119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001101 #b1001000111000101001010011010101110011011100010000101)))
(assert (= y (fp #b1 #b01001110110 #b1101011001111000110101010100011110000010011110000000)))
(assert (= r (fp #b1 #b01001110110 #b1101011001111000110101010100011110000010011110000000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
