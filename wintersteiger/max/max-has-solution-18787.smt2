(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.308878834263545787308657963876612484455108642578125p-152 {- 1391066602891938 -152 (-2.29266e-046)}
; Y = -1.8021881372259482834152777286362834274768829345703125p-171 {- 3612734195891813 -171 (-6.02103e-052)}
; -1.308878834263545787308657963876612484455108642578125p-152 M -1.8021881372259482834152777286362834274768829345703125p-171 == -1.8021881372259482834152777286362834274768829345703125p-171
; [HW: -1.8021881372259482834152777286362834274768829345703125p-171] 

; mpf : - 3612734195891813 -171
; mpfd: - 3612734195891813 -171 (-6.02103e-052) class: Neg. norm. non-zero
; hwf : - 3612734195891813 -171 (-6.02103e-052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100111 #b0100111100010010101011101110101110010110101010100010)))
(assert (= y (fp #b1 #b01101010100 #b1100110101011100001100111010011010011111111001100101)))
(assert (= r (fp #b1 #b01101010100 #b1100110101011100001100111010011010011111111001100101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
