(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6975886936574597907423367360024712979793548583984375p413 {- 3141660180813607 413 (-3.59104e+124)}
; Y = 1.476871005748770837584515902562998235225677490234375p-49 {+ 2147636083793958 -49 (2.62345e-015)}
; -1.6975886936574597907423367360024712979793548583984375p413 M 1.476871005748770837584515902562998235225677490234375p-49 == 1.476871005748770837584515902562998235225677490234375p-49
; [HW: 1.476871005748770837584515902562998235225677490234375p-49] 

; mpf : + 2147636083793958 -49
; mpfd: + 2147636083793958 -49 (2.62345e-015) class: Pos. norm. non-zero
; hwf : + 2147636083793958 -49 (2.62345e-015) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011100 #b1011001010010101001011000011000101010001011100100111)))
(assert (= y (fp #b0 #b01111001110 #b0111101000010100001101111101111000011010000000100110)))
(assert (= r (fp #b0 #b01111001110 #b0111101000010100001101111101111000011010000000100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
