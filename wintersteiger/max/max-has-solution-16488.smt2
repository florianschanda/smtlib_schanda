(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9276415669797646312844108251738362014293670654296875p-583 {+ 4177726215383451 -583 (6.0889e-176)}
; Y = 1.318138048857069311026180002954788506031036376953125p-469 {+ 1432766398285074 -469 (8.64755e-142)}
; 1.9276415669797646312844108251738362014293670654296875p-583 M 1.318138048857069311026180002954788506031036376953125p-469 == 1.318138048857069311026180002954788506031036376953125p-469
; [HW: 1.318138048857069311026180002954788506031036376953125p-469] 

; mpf : + 1432766398285074 -469
; mpfd: + 1432766398285074 -469 (8.64755e-142) class: Pos. norm. non-zero
; hwf : + 1432766398285074 -469 (8.64755e-142) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111000 #b1110110101111001111010101111000010010110100110011011)))
(assert (= y (fp #b0 #b01000101010 #b0101000101110001011111101100001101110100010100010010)))
(assert (= r (fp #b0 #b01000101010 #b0101000101110001011111101100001101110100010100010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
