(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.853070899262037496413313419907353818416595458984375p196 {+ 3841889784037126 196 (1.86111e+059)}
; Y = 1.42042280570637213799045639461837708950042724609375p523 {+ 1893415991117276 523 (3.90037e+157)}
; 1.853070899262037496413313419907353818416595458984375p196 M 1.42042280570637213799045639461837708950042724609375p523 == 1.42042280570637213799045639461837708950042724609375p523
; [HW: 1.42042280570637213799045639461837708950042724609375p523] 

; mpf : + 1893415991117276 523
; mpfd: + 1893415991117276 523 (3.90037e+157) class: Pos. norm. non-zero
; hwf : + 1893415991117276 523 (3.90037e+157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000011 #b1101101001100010110110101011110101111111111100000110)))
(assert (= y (fp #b0 #b11000001010 #b0110101110100000110101000011100100000000010111011100)))
(assert (= r (fp #b0 #b11000001010 #b0110101110100000110101000011100100000000010111011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
