(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.38978166598958008393083218834362924098968505859375p581 {+ 1755420565706524 581 (1.09995e+175)}
; Y = 1.990051571840215416386854485608637332916259765625p77 {+ 4458795890017168 77 (3.00728e+023)}
; 1.38978166598958008393083218834362924098968505859375p581 M 1.990051571840215416386854485608637332916259765625p77 == 1.38978166598958008393083218834362924098968505859375p581
; [HW: 1.38978166598958008393083218834362924098968505859375p581] 

; mpf : + 1755420565706524 581
; mpfd: + 1755420565706524 581 (1.09995e+175) class: Pos. norm. non-zero
; hwf : + 1755420565706524 581 (1.09995e+175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000100 #b0110001111001000101110110011010000000001011100011100)))
(assert (= y (fp #b0 #b10001001100 #b1111110101110100000001010001001001101000001110010000)))
(assert (= r (fp #b0 #b11001000100 #b0110001111001000101110110011010000000001011100011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
