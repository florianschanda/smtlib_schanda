(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.03195840930523008438512988504953682422637939453125p949 {+ 143927880238388 949 (4.91053e+285)}
; Y = -1.5727940162085858322171816325862891972064971923828125p-884 {- 2579634917957037 -884 (-1.21943e-266)}
; 1.03195840930523008438512988504953682422637939453125p949 M -1.5727940162085858322171816325862891972064971923828125p-884 == 1.03195840930523008438512988504953682422637939453125p949
; [HW: 1.03195840930523008438512988504953682422637939453125p949] 

; mpf : + 143927880238388 949
; mpfd: + 143927880238388 949 (4.91053e+285) class: Pos. norm. non-zero
; hwf : + 143927880238388 949 (4.91053e+285) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110100 #b0000100000101110011011010010001011001100010100110100)))
(assert (= y (fp #b1 #b00010001011 #b1001001010100010101000001110111011110101110110101101)))
(assert (= r (fp #b0 #b11110110100 #b0000100000101110011011010010001011001100010100110100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
