(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6129118648533149471546721542836166918277740478515625p179 {+ 2760309646164345 179 (1.23589e+054)}
; Y = -1.2506097562902860342859412412508390843868255615234375p-591 {- 1128646005044343 -591 (-1.5431e-178)}
; 1.6129118648533149471546721542836166918277740478515625p179 M -1.2506097562902860342859412412508390843868255615234375p-591 == 1.6129118648533149471546721542836166918277740478515625p179
; [HW: 1.6129118648533149471546721542836166918277740478515625p179] 

; mpf : + 2760309646164345 179
; mpfd: + 2760309646164345 179 (1.23589e+054) class: Pos. norm. non-zero
; hwf : + 2760309646164345 179 (1.23589e+054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110010 #b1001110011100111110010101011111011100000000101111001)))
(assert (= y (fp #b1 #b00110110000 #b0100000000100111111101100000001101010011010001110111)))
(assert (= r (fp #b0 #b10010110010 #b1001110011100111110010101011111011100000000101111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
