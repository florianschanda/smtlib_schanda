(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3982671830617408037511495422222651541233062744140625p-230 {- 1793635937230753 -230 (-8.10385e-070)}
; Y = -1.5530593495855422592200056897127069532871246337890625p562 {- 2490757880707217 562 (-2.34448e+169)}
; -1.3982671830617408037511495422222651541233062744140625p-230 M -1.5530593495855422592200056897127069532871246337890625p562 == -1.3982671830617408037511495422222651541233062744140625p-230
; [HW: -1.3982671830617408037511495422222651541233062744140625p-230] 

; mpf : - 1793635937230753 -230
; mpfd: - 1793635937230753 -230 (-8.10385e-070) class: Neg. norm. non-zero
; hwf : - 1793635937230753 -230 (-8.10385e-070) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011001 #b0110010111110100110101101000111001010001111110100001)))
(assert (= y (fp #b1 #b11000110001 #b1000110110010101010011000010101100110111100010010001)))
(assert (= r (fp #b1 #b01100011001 #b0110010111110100110101101000111001010001111110100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
