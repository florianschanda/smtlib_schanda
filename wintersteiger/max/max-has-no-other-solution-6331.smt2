(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2446334969341374954154844090226106345653533935546875p1006 {+ 1101731325634923 1006 (8.53527e+302)}
; Y = -1.042936453484657022272585891187191009521484375p-986 {- 193368595914112 -986 (-1.59471e-297)}
; 1.2446334969341374954154844090226106345653533935546875p1006 M -1.042936453484657022272585891187191009521484375p-986 == 1.2446334969341374954154844090226106345653533935546875p1006
; [HW: 1.2446334969341374954154844090226106345653533935546875p1006] 

; mpf : + 1101731325634923 1006
; mpfd: + 1101731325634923 1006 (8.53527e+302) class: Pos. norm. non-zero
; hwf : + 1101731325634923 1006 (8.53527e+302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101101 #b0011111010100000010011010000010011010110100101101011)))
(assert (= y (fp #b1 #b00000100101 #b0000101011111101111000100010011110000101110110000000)))
(assert (= r (fp #b0 #b11111101101 #b0011111010100000010011010000010011010110100101101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
