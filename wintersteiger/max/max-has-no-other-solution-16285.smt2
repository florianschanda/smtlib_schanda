(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.659489829726468190784771650214679539203643798828125p-204 {- 2970078151410754 -204 (-6.45439e-062)}
; Y = 1.607842409704754782495683684828691184520721435546875p-10 {+ 2737478849846318 -10 (0.00157016)}
; -1.659489829726468190784771650214679539203643798828125p-204 M 1.607842409704754782495683684828691184520721435546875p-10 == 1.607842409704754782495683684828691184520721435546875p-10
; [HW: 1.607842409704754782495683684828691184520721435546875p-10] 

; mpf : + 2737478849846318 -10
; mpfd: + 2737478849846318 -10 (0.00157016) class: Pos. norm. non-zero
; hwf : + 2737478849846318 -10 (0.00157016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100110011 #b1010100011010100010100110101001010111000010001000010)))
(assert (= y (fp #b0 #b01111110101 #b1001101110011011100011110110011011001101110000101110)))
(assert (= r (fp #b0 #b01111110101 #b1001101110011011100011110110011011001101110000101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
