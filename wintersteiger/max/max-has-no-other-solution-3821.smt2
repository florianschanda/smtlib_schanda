(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0101317225359018880936901041422970592975616455078125p862 {- 45629221837309 862 (-3.10623e+259)}
; Y = -1.6867082417603305177777883727685548365116119384765625p-87 {- 3092658981704073 -87 (-1.09001e-026)}
; -1.0101317225359018880936901041422970592975616455078125p862 M -1.6867082417603305177777883727685548365116119384765625p-87 == -1.6867082417603305177777883727685548365116119384765625p-87
; [HW: -1.6867082417603305177777883727685548365116119384765625p-87] 

; mpf : - 3092658981704073 -87
; mpfd: - 3092658981704073 -87 (-1.09001e-026) class: Neg. norm. non-zero
; hwf : - 3092658981704073 -87 (-1.09001e-026) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101011101 #b0000001010010111111111100001100011110001100111111101)))
(assert (= y (fp #b1 #b01110101000 #b1010111111001100000111001000000001000001000110001001)))
(assert (= r (fp #b1 #b01110101000 #b1010111111001100000111001000000001000001000110001001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
