(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.96772711769336350329240303835831582546234130859375p-320 {+ 4358255486640156 -320 (9.21226e-097)}
; Y = -1.72498557941156160921991613577120006084442138671875p454 {- 3265044785286892 454 (-8.02423e+136)}
; 1.96772711769336350329240303835831582546234130859375p-320 M -1.72498557941156160921991613577120006084442138671875p454 == 1.96772711769336350329240303835831582546234130859375p-320
; [HW: 1.96772711769336350329240303835831582546234130859375p-320] 

; mpf : + 4358255486640156 -320
; mpfd: + 4358255486640156 -320 (9.21226e-097) class: Pos. norm. non-zero
; hwf : + 4358255486640156 -320 (9.21226e-097) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010111111 #b1111011110111100111101101110000111110010000000011100)))
(assert (= y (fp #b1 #b10111000101 #b1011100110011000101001111010100110100100111011101100)))
(assert (= r (fp #b0 #b01010111111 #b1111011110111100111101101110000111110010000000011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
