(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0473542164663161013749004268902353942394256591796875p239 {- 213264431632123 239 (-9.25257e+071)}
; Y = -1.2175615029496535957065361799323000013828277587890625p-477 {- 979809903614225 -477 (-3.1202e-144)}
; -1.0473542164663161013749004268902353942394256591796875p239 M -1.2175615029496535957065361799323000013828277587890625p-477 == -1.2175615029496535957065361799323000013828277587890625p-477
; [HW: -1.2175615029496535957065361799323000013828277587890625p-477] 

; mpf : - 979809903614225 -477
; mpfd: - 979809903614225 -477 (-3.1202e-144) class: Neg. norm. non-zero
; hwf : - 979809903614225 -477 (-3.1202e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101110 #b0000110000011111011001111110101100001100111011111011)))
(assert (= y (fp #b1 #b01000100010 #b0011011110110010000111000101010000001001100100010001)))
(assert (= r (fp #b1 #b01000100010 #b0011011110110010000111000101010000001001100100010001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
