(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.639862376088962125919579193578101694583892822265625p1015 {- 2881683958522650 1015 (-5.75775e+305)}
; Y = 1.086861036890397702592281348188407719135284423828125p869 {+ 391187333372610 869 (4.27799e+261)}
; -1.639862376088962125919579193578101694583892822265625p1015 M 1.086861036890397702592281348188407719135284423828125p869 == 1.086861036890397702592281348188407719135284423828125p869
; [HW: 1.086861036890397702592281348188407719135284423828125p869] 

; mpf : + 391187333372610 869
; mpfd: + 391187333372610 869 (4.27799e+261) class: Pos. norm. non-zero
; hwf : + 391187333372610 869 (4.27799e+261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110110 #b1010001111001110000001010100101100111110001100011010)))
(assert (= y (fp #b0 #b11101100100 #b0001011000111100100001100110000010111101101011000010)))
(assert (= r (fp #b0 #b11101100100 #b0001011000111100100001100110000010111101101011000010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
