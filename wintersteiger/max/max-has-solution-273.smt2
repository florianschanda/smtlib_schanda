(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8301846684067510917515164692304097115993499755859375p133 {- 3738819363285343 133 (-1.99289e+040)}
; Y = -1.6881168501293537520524523642961867153644561767578125p471 {- 3099002789829917 471 (-1.02927e+142)}
; -1.8301846684067510917515164692304097115993499755859375p133 M -1.6881168501293537520524523642961867153644561767578125p471 == -1.8301846684067510917515164692304097115993499755859375p133
; [HW: -1.8301846684067510917515164692304097115993499755859375p133] 

; mpf : - 3738819363285343 133
; mpfd: - 3738819363285343 133 (-1.99289e+040) class: Neg. norm. non-zero
; hwf : - 3738819363285343 133 (-1.99289e+040) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000100 #b1101010010000110111110111000000001110010100101011111)))
(assert (= y (fp #b1 #b10111010110 #b1011000000101000011011010000011100100001110100011101)))
(assert (= r (fp #b1 #b10010000100 #b1101010010000110111110111000000001110010100101011111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
