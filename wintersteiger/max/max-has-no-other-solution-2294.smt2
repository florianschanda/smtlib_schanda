(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.82883670741795167913323894026689231395721435546875p765 {- 3732748686678476 765 (-3.54913e+230)}
; Y = 1.4530384652403947054466470945044420659542083740234375p371 {+ 2040303863241143 371 (6.98885e+111)}
; -1.82883670741795167913323894026689231395721435546875p765 M 1.4530384652403947054466470945044420659542083740234375p371 == 1.4530384652403947054466470945044420659542083740234375p371
; [HW: 1.4530384652403947054466470945044420659542083740234375p371] 

; mpf : + 2040303863241143 371
; mpfd: + 2040303863241143 371 (6.98885e+111) class: Pos. norm. non-zero
; hwf : + 2040303863241143 371 (6.98885e+111) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111100 #b1101010000101110101001000111100000010101100111001100)))
(assert (= y (fp #b0 #b10101110010 #b0111001111111010010101000011000000001001100110110111)))
(assert (= r (fp #b0 #b10101110010 #b0111001111111010010101000011000000001001100110110111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
