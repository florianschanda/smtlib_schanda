(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.992787056192996342218748395680449903011322021484375p177 {- 4471115416329030 177 (-3.81742e+053)}
; Y = 1.501805045213956191219040192663669586181640625p-256 {+ 2259929014638208 -256 (1.29698e-077)}
; -1.992787056192996342218748395680449903011322021484375p177 M 1.501805045213956191219040192663669586181640625p-256 == 1.501805045213956191219040192663669586181640625p-256
; [HW: 1.501805045213956191219040192663669586181640625p-256] 

; mpf : + 2259929014638208 -256
; mpfd: + 2259929014638208 -256 (1.29698e-077) class: Pos. norm. non-zero
; hwf : + 2259929014638208 -256 (1.29698e-077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110000 #b1111111000100111010010101110001000111101101101000110)))
(assert (= y (fp #b0 #b01011111111 #b1000000001110110010010111010001000101001011010000000)))
(assert (= r (fp #b0 #b01011111111 #b1000000001110110010010111010001000101001011010000000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
