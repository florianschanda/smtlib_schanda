(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.285979056066784753653564621345140039920806884765625p-1001 {+ 1287935170338138 -1001 (6.00079e-302)}
; Y = -1.0130778087467657844200630279374308884143829345703125p-549 {- 58897214598757 -549 (-5.49763e-166)}
; 1.285979056066784753653564621345140039920806884765625p-1001 M -1.0130778087467657844200630279374308884143829345703125p-549 == 1.285979056066784753653564621345140039920806884765625p-1001
; [HW: 1.285979056066784753653564621345140039920806884765625p-1001] 

; mpf : + 1287935170338138 -1001
; mpfd: + 1287935170338138 -1001 (6.00079e-302) class: Pos. norm. non-zero
; hwf : + 1287935170338138 -1001 (6.00079e-302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000010110 #b0100100100110101111011000110010100100101110101011010)))
(assert (= y (fp #b1 #b00111011010 #b0000001101011001000100010011100011011110111001100101)))
(assert (= r (fp #b0 #b00000010110 #b0100100100110101111011000110010100100101110101011010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
