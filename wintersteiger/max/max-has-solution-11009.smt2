(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.961091253724196459273798609501682221889495849609375p308 {+ 4328370212141334 308 (1.02267e+093)}
; Y = -1.5470950364833850887436028642696328461170196533203125p-870 {- 2463897002442821 -870 (-1.96526e-262)}
; 1.961091253724196459273798609501682221889495849609375p308 M -1.5470950364833850887436028642696328461170196533203125p-870 == 1.961091253724196459273798609501682221889495849609375p308
; [HW: 1.961091253724196459273798609501682221889495849609375p308] 

; mpf : + 4328370212141334 308
; mpfd: + 4328370212141334 308 (1.02267e+093) class: Pos. norm. non-zero
; hwf : + 4328370212141334 308 (1.02267e+093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110011 #b1111011000001010000100111000111100110111100100010110)))
(assert (= y (fp #b1 #b00010011001 #b1000110000001110011010111001100110000000000001000101)))
(assert (= r (fp #b0 #b10100110011 #b1111011000001010000100111000111100110111100100010110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
