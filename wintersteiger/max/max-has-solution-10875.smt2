(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.430122749494341594100887959939427673816680908203125p-1022 {+ 1937100654346290 -1023 (9.57055e-309)}
; Y = -1.327777572646679171697314814082346856594085693359375p-751 {- 1476178954031990 -751 (-1.12098e-226)}
; 0.430122749494341594100887959939427673816680908203125p-1022 M -1.327777572646679171697314814082346856594085693359375p-751 == 0.430122749494341594100887959939427673816680908203125p-1022
; [HW: 0.430122749494341594100887959939427673816680908203125p-1022] 

; mpf : + 1937100654346290 -1023
; mpfd: + 1937100654346290 -1023 (9.57055e-309) class: Pos. denorm.
; hwf : + 1937100654346290 -1023 (9.57055e-309) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0110111000011100100001100100011001011000000000110010)))
(assert (= y (fp #b1 #b00100010000 #b0101001111101001001110110010001011100001001101110110)))
(assert (= r (fp #b0 #b00000000000 #b0110111000011100100001100100011001011000000000110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
