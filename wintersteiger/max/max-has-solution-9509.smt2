(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.512421158032039247842703844071365892887115478515625p1004 {+ 2307739736369850 1004 (2.59292e+302)}
; Y = -1.782887550231219364604839938692748546600341796875p465 {- 3525812079494320 465 (-1.69852e+140)}
; 1.512421158032039247842703844071365892887115478515625p1004 M -1.782887550231219364604839938692748546600341796875p465 == 1.512421158032039247842703844071365892887115478515625p1004
; [HW: 1.512421158032039247842703844071365892887115478515625p1004] 

; mpf : + 2307739736369850 1004
; mpfd: + 2307739736369850 1004 (2.59292e+302) class: Pos. norm. non-zero
; hwf : + 2307739736369850 1004 (2.59292e+302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101011 #b1000001100101110000010000111001110000110101010111010)))
(assert (= y (fp #b1 #b10111010000 #b1100100001101011010100011000100010110000010010110000)))
(assert (= r (fp #b0 #b11111101011 #b1000001100101110000010000111001110000110101010111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
