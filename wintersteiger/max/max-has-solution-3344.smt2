(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.80563046867820986562946927733719348907470703125p350 {+ 3628237078537504 350 (4.14121e+105)}
; Y = -1.1708080799135058835958034251234494149684906005859375p-84 {- 769251205050335 -84 (-6.05294e-026)}
; 1.80563046867820986562946927733719348907470703125p350 M -1.1708080799135058835958034251234494149684906005859375p-84 == 1.80563046867820986562946927733719348907470703125p350
; [HW: 1.80563046867820986562946927733719348907470703125p350] 

; mpf : + 3628237078537504 350
; mpfd: + 3628237078537504 350 (4.14121e+105) class: Pos. norm. non-zero
; hwf : + 3628237078537504 350 (4.14121e+105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101011101 #b1100111000111101110011000110001110100010010100100000)))
(assert (= y (fp #b1 #b01110101011 #b0010101110111010000101000000110100011110111111011111)))
(assert (= r (fp #b0 #b10101011101 #b1100111000111101110011000110001110100010010100100000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
