(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9109814937759352915236377157270908355712890625p540 {- 4102695915910720 540 (-6.87787e+162)}
; Y = 1.9447212135852309788930369904846884310245513916015625p786 {+ 4254646105471449 786 (7.91469e+236)}
; -1.9109814937759352915236377157270908355712890625p540 M 1.9447212135852309788930369904846884310245513916015625p786 == 1.9447212135852309788930369904846884310245513916015625p786
; [HW: 1.9447212135852309788930369904846884310245513916015625p786] 

; mpf : + 4254646105471449 786
; mpfd: + 4254646105471449 786 (7.91469e+236) class: Pos. norm. non-zero
; hwf : + 4254646105471449 786 (7.91469e+236) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000011011 #b1110100100110110000101010100101100000111011001000000)))
(assert (= y (fp #b0 #b11100010001 #b1111000111011001001111111101110000101111100111011001)))
(assert (= r (fp #b0 #b11100010001 #b1111000111011001001111111101110000101111100111011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
