(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.561198692522254294345884773065336048603057861328125p593 {- 2527414222524034 593 (-5.06111e+178)}
; Y = 1.582991890851189964450895786285400390625p-138 {+ 2625562062397440 -138 (4.54296e-042)}
; -1.561198692522254294345884773065336048603057861328125p593 M 1.582991890851189964450895786285400390625p-138 == 1.582991890851189964450895786285400390625p-138
; [HW: 1.582991890851189964450895786285400390625p-138] 

; mpf : + 2625562062397440 -138
; mpfd: + 2625562062397440 -138 (4.54296e-042) class: Pos. norm. non-zero
; hwf : + 2625562062397440 -138 (4.54296e-042) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010000 #b1000111110101010101101111010111011110000111010000010)))
(assert (= y (fp #b0 #b01101110101 #b1001010100111110111101001110000100001010000000000000)))
(assert (= r (fp #b0 #b01101110101 #b1001010100111110111101001110000100001010000000000000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
