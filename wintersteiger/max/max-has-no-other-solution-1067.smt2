(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.788819759225051431172914817580021917819976806640625p950 {+ 3552528373708426 950 (1.7024e+286)}
; Y = -1.945318382431117765207773118163459002971649169921875p-516 {- 4257335514863262 -516 (-9.06803e-156)}
; 1.788819759225051431172914817580021917819976806640625p950 M -1.945318382431117765207773118163459002971649169921875p-516 == 1.788819759225051431172914817580021917819976806640625p950
; [HW: 1.788819759225051431172914817580021917819976806640625p950] 

; mpf : + 3552528373708426 950
; mpfd: + 3552528373708426 950 (1.7024e+286) class: Pos. norm. non-zero
; hwf : + 3552528373708426 950 (1.7024e+286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110101 #b1100100111110000000101110111110001001111011010001010)))
(assert (= y (fp #b1 #b00111111011 #b1111001000000000011000101011000011011001011010011110)))
(assert (= r (fp #b0 #b11110110101 #b1100100111110000000101110111110001001111011010001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
