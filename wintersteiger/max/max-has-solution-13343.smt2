(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2906238611385203451931147355935536324977874755859375p406 {- 1308853512728415 406 (-2.13294e+122)}
; Y = -1.2647866132198799515862219777773134410381317138671875p-386 {- 1192492892629747 -386 (-8.02489e-117)}
; -1.2906238611385203451931147355935536324977874755859375p406 M -1.2647866132198799515862219777773134410381317138671875p-386 == -1.2647866132198799515862219777773134410381317138671875p-386
; [HW: -1.2647866132198799515862219777773134410381317138671875p-386] 

; mpf : - 1192492892629747 -386
; mpfd: - 1192492892629747 -386 (-8.02489e-117) class: Neg. norm. non-zero
; hwf : - 1192492892629747 -386 (-8.02489e-117) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010101 #b0100101001100110010100110100101100000110111101011111)))
(assert (= y (fp #b1 #b01001111101 #b0100001111001001000011100011010000110010101011110011)))
(assert (= r (fp #b1 #b01001111101 #b0100001111001001000011100011010000110010101011110011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
