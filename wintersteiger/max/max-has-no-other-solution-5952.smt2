(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.22189248225507096634601111873053014278411865234375p-717 {- 999314900400252 -717 (-1.77225e-216)}
; Y = -1.5106158243341802904780024618958123028278350830078125p-954 {- 2299609236200893 -954 (-9.92061e-288)}
; -1.22189248225507096634601111873053014278411865234375p-717 M -1.5106158243341802904780024618958123028278350830078125p-954 == -1.5106158243341802904780024618958123028278350830078125p-954
; [HW: -1.5106158243341802904780024618958123028278350830078125p-954] 

; mpf : - 2299609236200893 -954
; mpfd: - 2299609236200893 -954 (-9.92061e-288) class: Neg. norm. non-zero
; hwf : - 2299609236200893 -954 (-9.92061e-288) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110010 #b0011100011001101111100100001101010000011100001111100)))
(assert (= y (fp #b1 #b00001000101 #b1000001010110111101101111111101001010101110110111101)))
(assert (= r (fp #b1 #b00001000101 #b1000001010110111101101111111101001010101110110111101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
