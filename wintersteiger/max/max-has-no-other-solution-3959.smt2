(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2776069328392611890166108423727564513683319091796875p673 {+ 1250230479290363 673 (5.00708e+202)}
; Y = -1.7661912273629598590929390411474741995334625244140625p-655 {- 3450618526046369 -655 (-1.18138e-197)}
; 1.2776069328392611890166108423727564513683319091796875p673 M -1.7661912273629598590929390411474741995334625244140625p-655 == 1.2776069328392611890166108423727564513683319091796875p673
; [HW: 1.2776069328392611890166108423727564513683319091796875p673] 

; mpf : + 1250230479290363 673
; mpfd: + 1250230479290363 673 (5.00708e+202) class: Pos. norm. non-zero
; hwf : + 1250230479290363 673 (5.00708e+202) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010100000 #b0100011100010001001111110111100110101111111111111011)))
(assert (= y (fp #b1 #b00101110000 #b1100010000100101000110111011100000000001100010100001)))
(assert (= r (fp #b0 #b11010100000 #b0100011100010001001111110111100110101111111111111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
