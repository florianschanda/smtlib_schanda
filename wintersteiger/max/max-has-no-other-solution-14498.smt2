(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3019160040479409445879355189390480518341064453125p362 {+ 1359708803327496 362 (1.22304e+109)}
; Y = -1.31172306852953024502994594513438642024993896484375p678 {- 1403875895272380 678 (-1.64505e+204)}
; 1.3019160040479409445879355189390480518341064453125p362 M -1.31172306852953024502994594513438642024993896484375p678 == 1.3019160040479409445879355189390480518341064453125p362
; [HW: 1.3019160040479409445879355189390480518341064453125p362] 

; mpf : + 1359708803327496 362
; mpfd: + 1359708803327496 362 (1.22304e+109) class: Pos. norm. non-zero
; hwf : + 1359708803327496 362 (1.22304e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101001 #b0100110101001010010111100000001110000110011000001000)))
(assert (= y (fp #b1 #b11010100101 #b0100111111001101000101010100000010111110001110111100)))
(assert (= r (fp #b0 #b10101101001 #b0100110101001010010111100000001110000110011000001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
