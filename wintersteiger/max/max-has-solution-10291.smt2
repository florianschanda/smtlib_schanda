(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.453287711548677751949298908584751188755035400390625p841 {- 2041426368822250 841 (-2.13097e+253)}
; Y = -1.267817972736617893048105543130077421665191650390625p-479 {- 1206144922219754 -479 (-8.12249e-145)}
; -1.453287711548677751949298908584751188755035400390625p841 M -1.267817972736617893048105543130077421665191650390625p-479 == -1.267817972736617893048105543130077421665191650390625p-479
; [HW: -1.267817972736617893048105543130077421665191650390625p-479] 

; mpf : - 1206144922219754 -479
; mpfd: - 1206144922219754 -479 (-8.12249e-145) class: Neg. norm. non-zero
; hwf : - 1206144922219754 -479 (-8.12249e-145) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001000 #b0111010000001010101010011101100011000111101111101010)))
(assert (= y (fp #b1 #b01000100000 #b0100010010001111101101111111101000101111010011101010)))
(assert (= r (fp #b1 #b01000100000 #b0100010010001111101101111111101000101111010011101010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
