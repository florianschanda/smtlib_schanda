(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5812031000042801043292683971230871975421905517578125p-170 {+ 2617506064605853 -170 (1.05655e-051)}
; Y = 1.9872969489358915939902772151981480419635772705078125p-339 {+ 4446390171331709 -339 (1.77457e-102)}
; 1.5812031000042801043292683971230871975421905517578125p-170 M 1.9872969489358915939902772151981480419635772705078125p-339 == 1.5812031000042801043292683971230871975421905517578125p-170
; [HW: 1.5812031000042801043292683971230871975421905517578125p-170] 

; mpf : + 2617506064605853 -170
; mpfd: + 2617506064605853 -170 (1.05655e-051) class: Pos. norm. non-zero
; hwf : + 2617506064605853 -170 (1.05655e-051) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010101 #b1001010011001001101110011111001011011010001010011101)))
(assert (= y (fp #b0 #b01010101100 #b1111110010111111011111100010101100011110110001111101)))
(assert (= r (fp #b0 #b01101010101 #b1001010011001001101110011111001011011010001010011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
