(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5825970413237613332313458158751018345355987548828125p575 {- 2623783818212845 575 (-1.95712e+173)}
; Y = -1.7323290209056685373667505700723268091678619384765625p698 {- 3298116705663369 698 (-2.27807e+210)}
; -1.5825970413237613332313458158751018345355987548828125p575 M -1.7323290209056685373667505700723268091678619384765625p698 == -1.5825970413237613332313458158751018345355987548828125p575
; [HW: -1.5825970413237613332313458158751018345355987548828125p575] 

; mpf : - 2623783818212845 575
; mpfd: - 2623783818212845 575 (-1.95712e+173) class: Neg. norm. non-zero
; hwf : - 2623783818212845 575 (-1.95712e+173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000111110 #b1001010100100101000101000110011100111011010111101101)))
(assert (= y (fp #b1 #b11010111001 #b1011101101111001111010100010101010110011100110001001)))
(assert (= r (fp #b1 #b11000111110 #b1001010100100101000101000110011100111011010111101101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
