(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.592915412868707303317705736844800412654876708984375p-905 {- 2670253632457734 -905 (-5.88907e-273)}
; Y = -1.3887120495490739013888514818972907960414886474609375p-171 {- 1750603441503631 -171 (-4.63963e-052)}
; -1.592915412868707303317705736844800412654876708984375p-905 M -1.3887120495490739013888514818972907960414886474609375p-171 == -1.592915412868707303317705736844800412654876708984375p-905
; [HW: -1.592915412868707303317705736844800412654876708984375p-905] 

; mpf : - 2670253632457734 -905
; mpfd: - 2670253632457734 -905 (-5.88907e-273) class: Neg. norm. non-zero
; hwf : - 2670253632457734 -905 (-5.88907e-273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110110 #b1001011111001001010011011111001110010000110000000110)))
(assert (= y (fp #b1 #b01101010100 #b0110001110000010101000100000010001011111110110001111)))
(assert (= r (fp #b1 #b00001110110 #b1001011111001001010011011111001110010000110000000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
