(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.930986224795919081742567868786863982677459716796875p499 {- 4192789215077966 499 (-3.16044e+150)}
; Y = -1.3354857329230565010647069357219152152538299560546875p971 {- 1510893421780395 971 (-2.66542e+292)}
; -1.930986224795919081742567868786863982677459716796875p499 M -1.3354857329230565010647069357219152152538299560546875p971 == -1.930986224795919081742567868786863982677459716796875p499
; [HW: -1.930986224795919081742567868786863982677459716796875p499] 

; mpf : - 4192789215077966 499
; mpfd: - 4192789215077966 499 (-3.16044e+150) class: Neg. norm. non-zero
; hwf : - 4192789215077966 499 (-3.16044e+150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110010 #b1110111001010101000111001111110010000110011001001110)))
(assert (= y (fp #b1 #b11111001010 #b0101010111100010011001001001101100101101110110101011)))
(assert (= r (fp #b1 #b10111110010 #b1110111001010101000111001111110010000110011001001110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
