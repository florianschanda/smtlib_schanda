(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4757569979126807790947850662632845342159271240234375p638 {- 2142619038518455 638 (-1.68326e+192)}
; Y = -1.3467655896678734084304096541018225252628326416015625p318 {- 1561693380413145 318 (-7.19168e+095)}
; -1.4757569979126807790947850662632845342159271240234375p638 M -1.3467655896678734084304096541018225252628326416015625p318 == -1.3467655896678734084304096541018225252628326416015625p318
; [HW: -1.3467655896678734084304096541018225252628326416015625p318] 

; mpf : - 1561693380413145 318
; mpfd: - 1561693380413145 318 (-7.19168e+095) class: Neg. norm. non-zero
; hwf : - 1561693380413145 318 (-7.19168e+095) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111101 #b0111100111001011001101011110101011100000110010110111)))
(assert (= y (fp #b1 #b10100111101 #b0101100011000101101000010011001100000000011011011001)))
(assert (= r (fp #b1 #b10100111101 #b0101100011000101101000010011001100000000011011011001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
