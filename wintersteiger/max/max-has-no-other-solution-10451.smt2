(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.25406649168041628428227340918965637683868408203125p-169 {+ 1144213757259252 -169 (1.67591e-051)}
; Y = -1.191426840050770152856784989126026630401611328125p860 {- 862109845521360 860 (-9.15933e+258)}
; 1.25406649168041628428227340918965637683868408203125p-169 M -1.191426840050770152856784989126026630401611328125p860 == 1.25406649168041628428227340918965637683868408203125p-169
; [HW: 1.25406649168041628428227340918965637683868408203125p-169] 

; mpf : + 1144213757259252 -169
; mpfd: + 1144213757259252 -169 (1.67591e-051) class: Pos. norm. non-zero
; hwf : + 1144213757259252 -169 (1.67591e-051) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101010110 #b0100000100001010100000000110100011000110110111110100)))
(assert (= y (fp #b1 #b11101011011 #b0011000100000001010110010111000110011000001111010000)))
(assert (= r (fp #b0 #b01101010110 #b0100000100001010100000000110100011000110110111110100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
