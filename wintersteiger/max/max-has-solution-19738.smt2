(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5420404394749731569191908420179970562458038330078125p605 {+ 2441133121239229 605 (2.04759e+182)}
; Y = -1.045271087096723672260623061447404325008392333984375p362 {- 203882850979462 362 (-9.81945e+108)}
; 1.5420404394749731569191908420179970562458038330078125p605 M -1.045271087096723672260623061447404325008392333984375p362 == 1.5420404394749731569191908420179970562458038330078125p605
; [HW: 1.5420404394749731569191908420179970562458038330078125p605] 

; mpf : + 2441133121239229 605
; mpfd: + 2441133121239229 605 (2.04759e+182) class: Pos. norm. non-zero
; hwf : + 2441133121239229 605 (2.04759e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011100 #b1000101011000011001010011000100010100111100010111101)))
(assert (= y (fp #b1 #b10101101001 #b0000101110010110111000101100111010001000111010000110)))
(assert (= r (fp #b0 #b11001011100 #b1000101011000011001010011000100010100111100010111101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
