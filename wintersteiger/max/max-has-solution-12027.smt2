(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3281565066137106523314059813856147229671478271484375p873 {- 1477885520904711 873 (-8.36441e+262)}
; Y = -1.8695102579050317803677216943469829857349395751953125p949 {- 3915926073495925 949 (-8.89598e+285)}
; -1.3281565066137106523314059813856147229671478271484375p873 M -1.8695102579050317803677216943469829857349395751953125p949 == -1.3281565066137106523314059813856147229671478271484375p873
; [HW: -1.3281565066137106523314059813856147229671478271484375p873] 

; mpf : - 1477885520904711 873
; mpfd: - 1477885520904711 873 (-8.36441e+262) class: Neg. norm. non-zero
; hwf : - 1477885520904711 873 (-8.36441e+262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101000 #b0101010000000010000100001001011111100000001000000111)))
(assert (= y (fp #b1 #b11110110100 #b1101111010011000001110010110100100111101000101110101)))
(assert (= r (fp #b1 #b11101101000 #b0101010000000010000100001001011111100000001000000111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
