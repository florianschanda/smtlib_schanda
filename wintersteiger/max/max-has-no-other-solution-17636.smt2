(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7025978987137160292064663735800422728061676025390625p397 {+ 3164219634838385 397 (5.49567e+119)}
; Y = -1.7552196105665223146985454150126315653324127197265625p-348 {- 3401206756730281 -348 (-3.06121e-105)}
; 1.7025978987137160292064663735800422728061676025390625p397 M -1.7552196105665223146985454150126315653324127197265625p-348 == 1.7025978987137160292064663735800422728061676025390625p397
; [HW: 1.7025978987137160292064663735800422728061676025390625p397] 

; mpf : + 3164219634838385 397
; mpfd: + 3164219634838385 397 (5.49567e+119) class: Pos. norm. non-zero
; hwf : + 3164219634838385 397 (5.49567e+119) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110001100 #b1011001111011101011101001011010100110110101101110001)))
(assert (= y (fp #b1 #b01010100011 #b1100000101010110000100101000100010101110010110101001)))
(assert (= r (fp #b0 #b10110001100 #b1011001111011101011101001011010100110110101101110001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
