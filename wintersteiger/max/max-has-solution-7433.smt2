(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.424100552572731270828398919547908008098602294921875p539 {- 1909979090534174 539 (-2.56276e+162)}
; Y = 1.3052901383353283648602882749401032924652099609375p936 {+ 1374904553246872 936 (7.58199e+281)}
; -1.424100552572731270828398919547908008098602294921875p539 M 1.3052901383353283648602882749401032924652099609375p936 == 1.3052901383353283648602882749401032924652099609375p936
; [HW: 1.3052901383353283648602882749401032924652099609375p936] 

; mpf : + 1374904553246872 936
; mpfd: + 1374904553246872 936 (7.58199e+281) class: Pos. norm. non-zero
; hwf : + 1374904553246872 936 (7.58199e+281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000011010 #b0110110010010001110110101001001110000011111100011110)))
(assert (= y (fp #b0 #b11110100111 #b0100111000100111011111101001011111110001000010011000)))
(assert (= r (fp #b0 #b11110100111 #b0100111000100111011111101001011111110001000010011000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
