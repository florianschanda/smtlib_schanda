(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4927118209047030017444512850488536059856414794921875p601 {+ 2218976773027459 601 (1.23881e+181)}
; Y = -1.8594354545350373353329587189364247024059295654296875p901 {- 3870553192792987 901 (-3.14345e+271)}
; 1.4927118209047030017444512850488536059856414794921875p601 M -1.8594354545350373353329587189364247024059295654296875p901 == 1.4927118209047030017444512850488536059856414794921875p601
; [HW: 1.4927118209047030017444512850488536059856414794921875p601] 

; mpf : + 2218976773027459 601
; mpfd: + 2218976773027459 601 (1.23881e+181) class: Pos. norm. non-zero
; hwf : + 2218976773027459 601 (1.23881e+181) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011000 #b0111111000100010010111001010010100100011011010000011)))
(assert (= y (fp #b1 #b11110000100 #b1101110000000011111101100100001001000000001110011011)))
(assert (= r (fp #b0 #b11001011000 #b0111111000100010010111001010010100100011011010000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
