(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.778382126091785142563139743288047611713409423828125p-411 {+ 3505521453018818 -411 (3.36277e-124)}
; Y = 1.031630879490130769937650256906636059284210205078125p40 {+ 142452817085154 40 (1.13429e+012)}
; 1.778382126091785142563139743288047611713409423828125p-411 M 1.031630879490130769937650256906636059284210205078125p40 == 1.031630879490130769937650256906636059284210205078125p40
; [HW: 1.031630879490130769937650256906636059284210205078125p40] 

; mpf : + 142452817085154 40
; mpfd: + 142452817085154 40 (1.13429e+012) class: Pos. norm. non-zero
; hwf : + 142452817085154 40 (1.13429e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100100 #b1100011101000100000011010000111101011010111011000010)))
(assert (= y (fp #b0 #b10000100111 #b0000100000011000111101100001100011110100001011100010)))
(assert (= r (fp #b0 #b10000100111 #b0000100000011000111101100001100011110100001011100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
