(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6557354447817365095119157558656297624111175537109375p789 {- 2953169904772655 789 (-5.39085e+237)}
; Y = -1.03397750141138633495074827806092798709869384765625p-10 {- 153021062695300 -10 (-0.00100974)}
; -1.6557354447817365095119157558656297624111175537109375p789 M -1.03397750141138633495074827806092798709869384765625p-10 == -1.03397750141138633495074827806092798709869384765625p-10
; [HW: -1.03397750141138633495074827806092798709869384765625p-10] 

; mpf : - 153021062695300 -10
; mpfd: - 153021062695300 -10 (-0.00100974) class: Neg. norm. non-zero
; hwf : - 153021062695300 -10 (-0.00100974) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010100 #b1010011111011110010001110011001000101010011000101111)))
(assert (= y (fp #b1 #b01111110101 #b0000100010110010101111111110000101011100100110000100)))
(assert (= r (fp #b1 #b01111110101 #b0000100010110010101111111110000101011100100110000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
