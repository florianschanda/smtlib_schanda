(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1435252522187753232429940908332355320453643798828125p-720 {+ 646380272410733 -720 (2.07324e-217)}
; Y = -1.256642747125053194423571767401881515979766845703125p41 {- 1155816180319730 41 (-2.76339e+012)}
; 1.1435252522187753232429940908332355320453643798828125p-720 M -1.256642747125053194423571767401881515979766845703125p41 == 1.1435252522187753232429940908332355320453643798828125p-720
; [HW: 1.1435252522187753232429940908332355320453643798828125p-720] 

; mpf : + 646380272410733 -720
; mpfd: + 646380272410733 -720 (2.07324e-217) class: Pos. norm. non-zero
; hwf : + 646380272410733 -720 (2.07324e-217) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101111 #b0010010010111110000100100010100001101110000001101101)))
(assert (= y (fp #b1 #b10000101000 #b0100000110110011010101101100110110101000010111110010)))
(assert (= r (fp #b0 #b00100101111 #b0010010010111110000100100010100001101110000001101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
