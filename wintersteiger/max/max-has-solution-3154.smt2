(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2849210416682399493737420925754122436046600341796875p-144 {+ 1283170297087099 -144 (5.76179e-044)}
; Y = 1.052310699041084429694592472515068948268890380859375p983 {+ 235586444708918 983 (8.6026e+295)}
; 1.2849210416682399493737420925754122436046600341796875p-144 M 1.052310699041084429694592472515068948268890380859375p983 == 1.052310699041084429694592472515068948268890380859375p983
; [HW: 1.052310699041084429694592472515068948268890380859375p983] 

; mpf : + 235586444708918 983
; mpfd: + 235586444708918 983 (8.6026e+295) class: Pos. norm. non-zero
; hwf : + 235586444708918 983 (8.6026e+295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101111 #b0100100011110000100101011101101111101000010001111011)))
(assert (= y (fp #b0 #b11111010110 #b0000110101100100001110111110010110011100110000110110)))
(assert (= r (fp #b0 #b11111010110 #b0000110101100100001110111110010110011100110000110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
