(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6131322163774941547131902552791871130466461181640625p-459 {- 2761302021206529 -459 (-1.08368e-138)}
; Y = -1.713491555354112794162801947095431387424468994140625p-726 {- 3213280302824778 -726 (-4.85406e-219)}
; -1.6131322163774941547131902552791871130466461181640625p-459 M -1.713491555354112794162801947095431387424468994140625p-726 == -1.713491555354112794162801947095431387424468994140625p-726
; [HW: -1.713491555354112794162801947095431387424468994140625p-726] 

; mpf : - 3213280302824778 -726
; mpfd: - 3213280302824778 -726 (-4.85406e-219) class: Neg. norm. non-zero
; hwf : - 3213280302824778 -726 (-4.85406e-219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110100 #b1001110011110110001110111010000101110111001000000001)))
(assert (= y (fp #b1 #b00100101001 #b1011011010100111011000011111000000110111110101001010)))
(assert (= r (fp #b1 #b00100101001 #b1011011010100111011000011111000000110111110101001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
