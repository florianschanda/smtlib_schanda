(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2374105326952109518146016853279434144496917724609375p-871 {- 1069201986579983 -871 (-7.85937e-263)}
; Y = -1.229161824976411576670898284646682441234588623046875p-521 {- 1032053109571310 -521 (-1.79053e-157)}
; -1.2374105326952109518146016853279434144496917724609375p-871 M -1.229161824976411576670898284646682441234588623046875p-521 == -1.2374105326952109518146016853279434144496917724609375p-871
; [HW: -1.2374105326952109518146016853279434144496917724609375p-871] 

; mpf : - 1069201986579983 -871
; mpfd: - 1069201986579983 -871 (-7.85937e-263) class: Neg. norm. non-zero
; hwf : - 1069201986579983 -871 (-7.85937e-263) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011000 #b0011110011000110111011111100100110100110111000001111)))
(assert (= y (fp #b1 #b00111110110 #b0011101010101010010110010110111111000011111011101110)))
(assert (= r (fp #b1 #b00010011000 #b0011110011000110111011111100100110100110111000001111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
