(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8397156473331628401268744710250757634639739990234375p685 {- 3781743076426807 685 (-2.95323e+206)}
; Y = 1.2795021252273006684418987788376398384571075439453125p429 {+ 1258765667022933 429 (1.77382e+129)}
; -1.8397156473331628401268744710250757634639739990234375p685 M 1.2795021252273006684418987788376398384571075439453125p429 == 1.2795021252273006684418987788376398384571075439453125p429
; [HW: 1.2795021252273006684418987788376398384571075439453125p429] 

; mpf : + 1258765667022933 429
; mpfd: + 1258765667022933 429 (1.77382e+129) class: Pos. norm. non-zero
; hwf : + 1258765667022933 429 (1.77382e+129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010101100 #b1101011011110111100110101100101100111100010000110111)))
(assert (= y (fp #b0 #b10110101100 #b0100011110001101011100111000011100000011100001010101)))
(assert (= r (fp #b0 #b10110101100 #b0100011110001101011100111000011100000011100001010101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
