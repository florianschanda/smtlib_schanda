(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4658065557129444922423999742022715508937835693359375p336 {- 2097806230735551 336 (-2.0519e+101)}
; Y = -1.2344005637415500498121900818659923970699310302734375p28 {- 1055646291521879 28 (-3.31357e+008)}
; -1.4658065557129444922423999742022715508937835693359375p336 M -1.2344005637415500498121900818659923970699310302734375p28 == -1.2344005637415500498121900818659923970699310302734375p28
; [HW: -1.2344005637415500498121900818659923970699310302734375p28] 

; mpf : - 1055646291521879 28
; mpfd: - 1055646291521879 28 (-3.31357e+008) class: Neg. norm. non-zero
; hwf : - 1055646291521879 28 (-3.31357e+008) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101001111 #b0111011100111111000110010011001100001100101010111111)))
(assert (= y (fp #b1 #b10000011011 #b0011110000000001101011001110001101101111000101010111)))
(assert (= r (fp #b1 #b10000011011 #b0011110000000001101011001110001101101111000101010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
