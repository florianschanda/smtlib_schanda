(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8164715659519983237402129816473461687564849853515625p-894 {- 3677061040180025 -894 (-1.37535e-269)}
; Y = -1.9070543142086802124168798400205560028553009033203125p171 {- 4085009471475013 171 (-5.70811e+051)}
; -1.8164715659519983237402129816473461687564849853515625p-894 M -1.9070543142086802124168798400205560028553009033203125p171 == -1.8164715659519983237402129816473461687564849853515625p-894
; [HW: -1.8164715659519983237402129816473461687564849853515625p-894] 

; mpf : - 3677061040180025 -894
; mpfd: - 3677061040180025 -894 (-1.37535e-269) class: Neg. norm. non-zero
; hwf : - 3677061040180025 -894 (-1.37535e-269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010000001 #b1101000100000100010001111101000111100000101100111001)))
(assert (= y (fp #b1 #b10010101010 #b1110100000110100101101100010011100111000110101000101)))
(assert (= r (fp #b1 #b00010000001 #b1101000100000100010001111101000111100000101100111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
