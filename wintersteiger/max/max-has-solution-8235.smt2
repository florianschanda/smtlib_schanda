(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.022478391972479361271552988910116255283355712890625p-94 {- 101233677711146 -94 (-5.1622e-029)}
; Y = -1.9391484113574708469940333088743500411510467529296875p701 {- 4229548435435099 701 (-2.04004e+211)}
; -1.022478391972479361271552988910116255283355712890625p-94 M -1.9391484113574708469940333088743500411510467529296875p701 == -1.022478391972479361271552988910116255283355712890625p-94
; [HW: -1.022478391972479361271552988910116255283355712890625p-94] 

; mpf : - 101233677711146 -94
; mpfd: - 101233677711146 -94 (-5.1622e-029) class: Neg. norm. non-zero
; hwf : - 101233677711146 -94 (-5.1622e-029) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100001 #b0000010111000001001001001101011001100011011100101010)))
(assert (= y (fp #b1 #b11010111100 #b1111000001101100000001111100000011011110111001011011)))
(assert (= r (fp #b1 #b01110100001 #b0000010111000001001001001101011001100011011100101010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
