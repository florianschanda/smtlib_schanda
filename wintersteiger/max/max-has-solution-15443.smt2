(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9795660095456384386380932483007200062274932861328125p58 {- 4411573115574541 58 (-5.70571e+017)}
; Y = -1.2487825754861869853584721568040549755096435546875p-894 {- 1120417114255864 -894 (-9.4552e-270)}
; -1.9795660095456384386380932483007200062274932861328125p58 M -1.2487825754861869853584721568040549755096435546875p-894 == -1.2487825754861869853584721568040549755096435546875p-894
; [HW: -1.2487825754861869853584721568040549755096435546875p-894] 

; mpf : - 1120417114255864 -894
; mpfd: - 1120417114255864 -894 (-9.4552e-270) class: Neg. norm. non-zero
; hwf : - 1120417114255864 -894 (-9.4552e-270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111001 #b1111101011000100110101101000011101000101100100001101)))
(assert (= y (fp #b1 #b00010000001 #b0011111110110000001101110000000110000111000111111000)))
(assert (= r (fp #b1 #b00010000001 #b0011111110110000001101110000000110000111000111111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
