(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0938542150076131509450760859181173145771026611328125p779 {+ 422681807735437 779 (3.47797e+234)}
; Y = -1.7605631460718516034802405556547455489635467529296875p775 {- 3425271901240923 775 (-3.49863e+233)}
; 1.0938542150076131509450760859181173145771026611328125p779 M -1.7605631460718516034802405556547455489635467529296875p775 == 1.0938542150076131509450760859181173145771026611328125p779
; [HW: 1.0938542150076131509450760859181173145771026611328125p779] 

; mpf : + 422681807735437 779
; mpfd: + 422681807735437 779 (3.47797e+234) class: Pos. norm. non-zero
; hwf : + 422681807735437 779 (3.47797e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001010 #b0001100000000110110101000111000000001100101010001101)))
(assert (= y (fp #b1 #b11100000110 #b1100001010110100010001000010111011101011111001011011)))
(assert (= r (fp #b0 #b11100001010 #b0001100000000110110101000111000000001100101010001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
