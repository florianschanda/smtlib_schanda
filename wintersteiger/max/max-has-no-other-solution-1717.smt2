(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3498200566938560740481989341787993907928466796875p464 {+ 1575449476973176 464 (6.42975e+139)}
; Y = 1.045772921153325540899459156207740306854248046875p-757 {+ 206142910649776 -757 (1.37953e-228)}
; 1.3498200566938560740481989341787993907928466796875p464 M 1.045772921153325540899459156207740306854248046875p-757 == 1.3498200566938560740481989341787993907928466796875p464
; [HW: 1.3498200566938560740481989341787993907928466796875p464] 

; mpf : + 1575449476973176 464
; mpfd: + 1575449476973176 464 (6.42975e+139) class: Pos. norm. non-zero
; hwf : + 1575449476973176 464 (6.42975e+139) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111001111 #b0101100110001101110011101010011011111100001001111000)))
(assert (= y (fp #b0 #b00100001010 #b0000101110110111110001100010111101100101010110110000)))
(assert (= r (fp #b0 #b10111001111 #b0101100110001101110011101010011011111100001001111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
