(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4711090343759505305598622726392932236194610595703125p151 {+ 2121686471666405 151 (4.19927e+045)}
; Y = -1.6199412404183657354650449633481912314891815185546875p140 {- 2791967139339755 140 (-2.25787e+042)}
; 1.4711090343759505305598622726392932236194610595703125p151 M -1.6199412404183657354650449633481912314891815185546875p140 == 1.4711090343759505305598622726392932236194610595703125p151
; [HW: 1.4711090343759505305598622726392932236194610595703125p151] 

; mpf : + 2121686471666405 151
; mpfd: + 2121686471666405 151 (4.19927e+045) class: Pos. norm. non-zero
; hwf : + 2121686471666405 151 (4.19927e+045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010110 #b0111100010011010100110100000011101111110101011100101)))
(assert (= y (fp #b1 #b10010001011 #b1001111010110100011110000001100100001001110111101011)))
(assert (= r (fp #b0 #b10010010110 #b0111100010011010100110100000011101111110101011100101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
