(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3319456845549806356387989580980502068996429443359375p607 {+ 1494950461269055 607 (7.07447e+182)}
; Y = 1.3448980428019814414852817208156920969486236572265625p110 {+ 1553282697043817 110 (1.74578e+033)}
; 1.3319456845549806356387989580980502068996429443359375p607 M 1.3448980428019814414852817208156920969486236572265625p110 == 1.3319456845549806356387989580980502068996429443359375p607
; [HW: 1.3319456845549806356387989580980502068996429443359375p607] 

; mpf : + 1494950461269055 607
; mpfd: + 1494950461269055 607 (7.07447e+182) class: Pos. norm. non-zero
; hwf : + 1494950461269055 607 (7.07447e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011110 #b0101010011111010011001000111001100110110010000111111)))
(assert (= y (fp #b0 #b10001101101 #b0101100001001011001111001111011001001001111101101001)))
(assert (= r (fp #b0 #b11001011110 #b0101010011111010011001000111001100110110010000111111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
