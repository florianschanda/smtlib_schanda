(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8402206119459194599841111994464881718158721923828125p499 {- 3784017234868653 499 (-3.01188e+150)}
; Y = -1.90638603094660386005898544681258499622344970703125p9 {- 4081999791224948 9 (-976.07)}
; -1.8402206119459194599841111994464881718158721923828125p499 M -1.90638603094660386005898544681258499622344970703125p9 == -1.90638603094660386005898544681258499622344970703125p9
; [HW: -1.90638603094660386005898544681258499622344970703125p9] 

; mpf : - 4081999791224948 9
; mpfd: - 4081999791224948 9 (-976.07) class: Neg. norm. non-zero
; hwf : - 4081999791224948 9 (-976.07) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110010 #b1101011100011000101100101011000110111011100110101101)))
(assert (= y (fp #b1 #b10000001000 #b1110100000001000111010100011100001110111100001110100)))
(assert (= r (fp #b1 #b10000001000 #b1110100000001000111010100011100001110111100001110100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
