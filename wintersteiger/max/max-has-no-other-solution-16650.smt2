(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5087363150525974209159585370798595249652862548828125p617 {+ 2291144678900717 617 (8.2058e+185)}
; Y = 1.3838162915548706255464139758259989321231842041015625p-535 {+ 1728554907625241 -535 (1.23036e-161)}
; 1.5087363150525974209159585370798595249652862548828125p617 M 1.3838162915548706255464139758259989321231842041015625p-535 == 1.5087363150525974209159585370798595249652862548828125p617
; [HW: 1.5087363150525974209159585370798595249652862548828125p617] 

; mpf : + 2291144678900717 617
; mpfd: + 2291144678900717 617 (8.2058e+185) class: Pos. norm. non-zero
; hwf : + 2291144678900717 617 (8.2058e+185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001101000 #b1000001000111100100010110000101101110000001111101101)))
(assert (= y (fp #b0 #b00111101000 #b0110001001000001110010001101001111100110011100011001)))
(assert (= r (fp #b0 #b11001101000 #b1000001000111100100010110000101101110000001111101101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
