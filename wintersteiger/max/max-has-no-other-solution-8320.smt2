(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0537266811531138532842533095390535891056060791015625p-687 {+ 241963461221017 -687 (1.64105e-207)}
; Y = 1.6037727012663058889785361316171474754810333251953125p-707 {+ 2719150512439413 -707 (2.38197e-213)}
; 1.0537266811531138532842533095390535891056060791015625p-687 M 1.6037727012663058889785361316171474754810333251953125p-707 == 1.0537266811531138532842533095390535891056060791015625p-687
; [HW: 1.0537266811531138532842533095390535891056060791015625p-687] 

; mpf : + 241963461221017 -687
; mpfd: + 241963461221017 -687 (1.64105e-207) class: Pos. norm. non-zero
; hwf : + 241963461221017 -687 (1.64105e-207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010000 #b0000110111000001000010000010001001111001101010011001)))
(assert (= y (fp #b0 #b00100111100 #b1001101010010000110110010000011000101000000001110101)))
(assert (= r (fp #b0 #b00101010000 #b0000110111000001000010000010001001111001101010011001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
