(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7236641502588387897532129500177688896656036376953125p196 {- 3259093597447093 196 (-1.73114e+059)}
; Y = -1.3769957732967086361242081693490035831928253173828125p613 {- 1697838024139309 613 (-4.6808e+184)}
; -1.7236641502588387897532129500177688896656036376953125p196 M -1.3769957732967086361242081693490035831928253173828125p613 == -1.7236641502588387897532129500177688896656036376953125p196
; [HW: -1.7236641502588387897532129500177688896656036376953125p196] 

; mpf : - 3259093597447093 196
; mpfd: - 3259093597447093 196 (-1.73114e+059) class: Neg. norm. non-zero
; hwf : - 3259093597447093 196 (-1.73114e+059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000011 #b1011100101000010000011011100001010100110001110110101)))
(assert (= y (fp #b1 #b11001100100 #b0110000010000010110010111000010100001010001000101101)))
(assert (= r (fp #b1 #b10011000011 #b1011100101000010000011011100001010100110001110110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
