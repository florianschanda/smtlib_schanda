(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.227489122578798941276545519940555095672607421875p443 {+ 1024519927676720 443 (2.78808e+133)}
; Y = -1.4269100719325076287447018330567516386508941650390625p-116 {- 1922632040875953 -116 (-1.71758e-035)}
; 1.227489122578798941276545519940555095672607421875p443 M -1.4269100719325076287447018330567516386508941650390625p-116 == 1.227489122578798941276545519940555095672607421875p443
; [HW: 1.227489122578798941276545519940555095672607421875p443] 

; mpf : + 1024519927676720 443
; mpfd: + 1024519927676720 443 (2.78808e+133) class: Pos. norm. non-zero
; hwf : + 1024519927676720 443 (2.78808e+133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111010 #b0011101000111100101110100010010110101011111100110000)))
(assert (= y (fp #b1 #b01110001011 #b0110110101001001111110100111110101001000011110110001)))
(assert (= r (fp #b0 #b10110111010 #b0011101000111100101110100010010110101011111100110000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
