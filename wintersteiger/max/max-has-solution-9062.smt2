(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0941602561306587038103543818579055368900299072265625p800 {+ 424060094423145 800 (7.29588e+240)}
; Y = 1.2137438017524699862548231976688839495182037353515625p-100 {+ 962616505925177 -100 (9.57475e-031)}
; 1.0941602561306587038103543818579055368900299072265625p800 M 1.2137438017524699862548231976688839495182037353515625p-100 == 1.0941602561306587038103543818579055368900299072265625p800
; [HW: 1.0941602561306587038103543818579055368900299072265625p800] 

; mpf : + 424060094423145 800
; mpfd: + 424060094423145 800 (7.29588e+240) class: Pos. norm. non-zero
; hwf : + 424060094423145 800 (7.29588e+240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011111 #b0001100000011010111000101111010010101010000001101001)))
(assert (= y (fp #b0 #b01110011011 #b0011011010110111111010011110111000111111111000111001)))
(assert (= r (fp #b0 #b11100011111 #b0001100000011010111000101111010010101010000001101001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
