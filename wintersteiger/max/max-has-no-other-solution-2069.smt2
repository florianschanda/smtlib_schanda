(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.181902070172354601851338884443975985050201416015625p-888 {- 819214095446138 -888 (-5.72724e-268)}
; Y = 1.4758260216585110669029745622538030147552490234375p681 {+ 2142929893834456 681 (1.48068e+205)}
; -1.181902070172354601851338884443975985050201416015625p-888 M 1.4758260216585110669029745622538030147552490234375p681 == 1.4758260216585110669029745622538030147552490234375p681
; [HW: 1.4758260216585110669029745622538030147552490234375p681] 

; mpf : + 2142929893834456 681
; mpfd: + 2142929893834456 681 (1.48068e+205) class: Pos. norm. non-zero
; hwf : + 2142929893834456 681 (1.48068e+205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010000111 #b0010111010010001001000100101001001110111000001111010)))
(assert (= y (fp #b0 #b11010101000 #b0111100111001111101110111111000110011011111011011000)))
(assert (= r (fp #b0 #b11010101000 #b0111100111001111101110111111000110011011111011011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
