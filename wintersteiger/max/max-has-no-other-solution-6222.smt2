(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9730277534773346115315462157013826072216033935546875p935 {+ 4382127427981675 935 (5.73032e+281)}
; Y = -1.75092848628970809699012534110806882381439208984375p856 {- 3381881251036220 856 (-8.41288e+257)}
; 1.9730277534773346115315462157013826072216033935546875p935 M -1.75092848628970809699012534110806882381439208984375p856 == 1.9730277534773346115315462157013826072216033935546875p935
; [HW: 1.9730277534773346115315462157013826072216033935546875p935] 

; mpf : + 4382127427981675 935
; mpfd: + 4382127427981675 935 (5.73032e+281) class: Pos. norm. non-zero
; hwf : + 4382127427981675 935 (5.73032e+281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110100110 #b1111100100011000010110001100101101001001000101101011)))
(assert (= y (fp #b1 #b11101010111 #b1100000000111100110110010110101000111111110000111100)))
(assert (= r (fp #b0 #b11110100110 #b1111100100011000010110001100101101001001000101101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
