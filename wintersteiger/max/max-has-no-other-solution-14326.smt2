(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.68903934226638074989068627473898231983184814453125p368 {- 3103157325074484 368 (-1.0155e+111)}
; Y = -1.5470449391352787404940727356006391346454620361328125p-960 {- 2463671384044557 -960 (-1.58748e-289)}
; -1.68903934226638074989068627473898231983184814453125p368 M -1.5470449391352787404940727356006391346454620361328125p-960 == -1.5470449391352787404940727356006391346454620361328125p-960
; [HW: -1.5470449391352787404940727356006391346454620361328125p-960] 

; mpf : - 2463671384044557 -960
; mpfd: - 2463671384044557 -960 (-1.58748e-289) class: Neg. norm. non-zero
; hwf : - 2463671384044557 -960 (-1.58748e-289) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101101111 #b1011000001100100111000011110000010110001000000110100)))
(assert (= y (fp #b1 #b00000111111 #b1000110000001011001000110001101100000111010000001101)))
(assert (= r (fp #b1 #b00000111111 #b1000110000001011001000110001101100000111010000001101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
