(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4578663749367481994312356619047932326793670654296875p785 {+ 2062046835550619 785 (2.96664e+236)}
; Y = -1.91400233320313883922381137381307780742645263671875p-73 {- 4116300567229420 -73 (-2.02653e-022)}
; 1.4578663749367481994312356619047932326793670654296875p785 M -1.91400233320313883922381137381307780742645263671875p-73 == 1.4578663749367481994312356619047932326793670654296875p785
; [HW: 1.4578663749367481994312356619047932326793670654296875p785] 

; mpf : + 2062046835550619 785
; mpfd: + 2062046835550619 785 (2.96664e+236) class: Pos. norm. non-zero
; hwf : + 2062046835550619 785 (2.96664e+236) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010000 #b0111010100110110101110110001001001001010100110011011)))
(assert (= y (fp #b1 #b01110110110 #b1110100111111100000011101001000110010011001111101100)))
(assert (= r (fp #b0 #b11100010000 #b0111010100110110101110110001001001001010100110011011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
