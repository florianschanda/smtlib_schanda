(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6734898771516213411558737789164297282695770263671875p-454 {+ 3033128759777843 -454 (3.59754e-137)}
; Y = 1.752890049928778726240352625609375536441802978515625p-742 {+ 3390715348310202 -742 (7.57701e-224)}
; 1.6734898771516213411558737789164297282695770263671875p-454 M 1.752890049928778726240352625609375536441802978515625p-742 == 1.6734898771516213411558737789164297282695770263671875p-454
; [HW: 1.6734898771516213411558737789164297282695770263671875p-454] 

; mpf : + 3033128759777843 -454
; mpfd: + 3033128759777843 -454 (3.59754e-137) class: Pos. norm. non-zero
; hwf : + 3033128759777843 -454 (3.59754e-137) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111001 #b1010110001101001110101010010010010001101101000110011)))
(assert (= y (fp #b0 #b00100011001 #b1100000010111101011001101111110111101101100010111010)))
(assert (= r (fp #b0 #b01000111001 #b1010110001101001110101010010010010001101101000110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
