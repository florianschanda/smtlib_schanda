(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.109206323530707027913422280107624828815460205078125p-747 {- 491821557959394 -747 (-1.49832e-225)}
; Y = 1.4593373051951434860029621631838381290435791015625p954 {+ 2068671316514216 954 (2.22214e+287)}
; -1.109206323530707027913422280107624828815460205078125p-747 M 1.4593373051951434860029621631838381290435791015625p954 == 1.4593373051951434860029621631838381290435791015625p954
; [HW: 1.4593373051951434860029621631838381290435791015625p954] 

; mpf : + 2068671316514216 954
; mpfd: + 2068671316514216 954 (2.22214e+287) class: Pos. norm. non-zero
; hwf : + 2068671316514216 954 (2.22214e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010100 #b0001101111110100111100100001010000010100101011100010)))
(assert (= y (fp #b0 #b11110111001 #b0111010110010111001000010010111110100101010110101000)))
(assert (= r (fp #b0 #b11110111001 #b0111010110010111001000010010111110100101010110101000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
