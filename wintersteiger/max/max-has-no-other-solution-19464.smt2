(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.677424621396152559782422031275928020477294921875p435 {- 3050849272491312 435 (-1.4883e+131)}
; Y = -1.0894379005820493677703098001074977219104766845703125p-439 {- 402792495734117 -439 (-7.67422e-133)}
; -1.677424621396152559782422031275928020477294921875p435 M -1.0894379005820493677703098001074977219104766845703125p-439 == -1.0894379005820493677703098001074977219104766845703125p-439
; [HW: -1.0894379005820493677703098001074977219104766845703125p-439] 

; mpf : - 402792495734117 -439
; mpfd: - 402792495734117 -439 (-7.67422e-133) class: Neg. norm. non-zero
; hwf : - 402792495734117 -439 (-7.67422e-133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110110010 #b1010110101101011101100110011001001100110110100110000)))
(assert (= y (fp #b1 #b01001001000 #b0001011011100101011001101111101000000101110101100101)))
(assert (= r (fp #b1 #b01001001000 #b0001011011100101011001101111101000000101110101100101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
