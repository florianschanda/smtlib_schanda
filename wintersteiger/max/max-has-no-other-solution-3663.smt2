(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4751661697087872227029947680421173572540283203125p280 {- 2139958184839560 280 (-2.86576e+084)}
; Y = -1.0070059719384918395235217758454382419586181640625p1004 {- 31552092611560 1004 (-1.72642e+302)}
; -1.4751661697087872227029947680421173572540283203125p280 M -1.0070059719384918395235217758454382419586181640625p1004 == -1.4751661697087872227029947680421173572540283203125p280
; [HW: -1.4751661697087872227029947680421173572540283203125p280] 

; mpf : - 2139958184839560 280
; mpfd: - 2139958184839560 280 (-2.86576e+084) class: Neg. norm. non-zero
; hwf : - 2139958184839560 280 (-2.86576e+084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010111 #b0111100110100100011111010111011100010000100110001000)))
(assert (= y (fp #b1 #b11111101011 #b0000000111001011001001001011010001011010001111101000)))
(assert (= r (fp #b1 #b10100010111 #b0111100110100100011111010111011100010000100110001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
