(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.536751667935284171306875578011386096477508544921875p873 {- 2417314611703838 873 (-9.6781e+262)}
; Y = -1.4921494775576753522017270370270125567913055419921875p-680 {- 2216444203739331 -680 (-2.97451e-205)}
; -1.536751667935284171306875578011386096477508544921875p873 M -1.4921494775576753522017270370270125567913055419921875p-680 == -1.4921494775576753522017270370270125567913055419921875p-680
; [HW: -1.4921494775576753522017270370270125567913055419921875p-680] 

; mpf : - 2216444203739331 -680
; mpfd: - 2216444203739331 -680 (-2.97451e-205) class: Neg. norm. non-zero
; hwf : - 2216444203739331 -680 (-2.97451e-205) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101000 #b1000100101101000100011101010101111011011000000011110)))
(assert (= y (fp #b1 #b00101010111 #b0111110111111101100000100001011011011010100011000011)))
(assert (= r (fp #b1 #b00101010111 #b0111110111111101100000100001011011011010100011000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
