(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.65707480664425599314881765167228877544403076171875p-515 {- 2959201854357612 -515 (-1.54488e-155)}
; Y = 1.117866989661222998364564773510210216045379638671875p680 {+ 530825730717566 680 (5.60773e+204)}
; -1.65707480664425599314881765167228877544403076171875p-515 M 1.117866989661222998364564773510210216045379638671875p680 == 1.117866989661222998364564773510210216045379638671875p680
; [HW: 1.117866989661222998364564773510210216045379638671875p680] 

; mpf : + 530825730717566 680
; mpfd: + 530825730717566 680 (5.60773e+204) class: Pos. norm. non-zero
; hwf : + 530825730717566 680 (5.60773e+204) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111100 #b1010100000110110000011011111010110010000000001101100)))
(assert (= y (fp #b0 #b11010100111 #b0001111000101100100001111111000111011111011101111110)))
(assert (= r (fp #b0 #b11010100111 #b0001111000101100100001111111000111011111011101111110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
