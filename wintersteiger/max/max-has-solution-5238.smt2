(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0322908661815535236172536315280012786388397216796875p745 {+ 145425132902715 745 (1.91051e+224)}
; Y = -1.63033339771876573109921082505024969577789306640625p-680 {- 2838769255085412 -680 (-3.24997e-205)}
; 1.0322908661815535236172536315280012786388397216796875p745 M -1.63033339771876573109921082505024969577789306640625p-680 == 1.0322908661815535236172536315280012786388397216796875p745
; [HW: 1.0322908661815535236172536315280012786388397216796875p745] 

; mpf : + 145425132902715 745
; mpfd: + 145425132902715 745 (1.91051e+224) class: Pos. norm. non-zero
; hwf : + 145425132902715 745 (1.91051e+224) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101000 #b0000100001000100001101101101011000110101100100111011)))
(assert (= y (fp #b1 #b00101010111 #b1010000101011101100001111001000011000111010101100100)))
(assert (= r (fp #b0 #b11011101000 #b0000100001000100001101101101011000110101100100111011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
