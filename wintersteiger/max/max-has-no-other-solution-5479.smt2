(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0087295821733655021290587683324702084064483642578125p971 {+ 39314543023069 971 (2.01326e+292)}
; Y = 1.22812202024573213776648117345757782459259033203125p-729 {+ 1027370245373684 -729 (4.34885e-220)}
; 1.0087295821733655021290587683324702084064483642578125p971 M 1.22812202024573213776648117345757782459259033203125p-729 == 1.0087295821733655021290587683324702084064483642578125p971
; [HW: 1.0087295821733655021290587683324702084064483642578125p971] 

; mpf : + 39314543023069 971
; mpfd: + 39314543023069 971 (2.01326e+292) class: Pos. norm. non-zero
; hwf : + 39314543023069 971 (2.01326e+292) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111001010 #b0000001000111100000110100001010111110001001111011101)))
(assert (= y (fp #b0 #b00100100110 #b0011101001100110001101000110100001110011111011110100)))
(assert (= r (fp #b0 #b11111001010 #b0000001000111100000110100001010111110001001111011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
