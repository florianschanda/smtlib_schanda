(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4030432778524666304065249278210103511810302734375p-619 {- 1815145555950552 -619 (-6.44917e-187)}
; Y = -1.604779682882273572630538183148019015789031982421875p-340 {- 2723685554469854 -340 (-7.16501e-103)}
; -1.4030432778524666304065249278210103511810302734375p-619 M -1.604779682882273572630538183148019015789031982421875p-340 == -1.4030432778524666304065249278210103511810302734375p-619
; [HW: -1.4030432778524666304065249278210103511810302734375p-619] 

; mpf : - 1815145555950552 -619
; mpfd: - 1815145555950552 -619 (-6.44917e-187) class: Neg. norm. non-zero
; hwf : - 1815145555950552 -619 (-6.44917e-187) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110010100 #b0110011100101101110110000010000100111111101111011000)))
(assert (= y (fp #b1 #b01010101011 #b1001101011010010110101110101111101000011101111011110)))
(assert (= r (fp #b1 #b00110010100 #b0110011100101101110110000010000100111111101111011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
