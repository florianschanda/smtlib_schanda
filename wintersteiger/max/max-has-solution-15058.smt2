(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0217217688325741509203226087265647947788238525390625p679 {- 97826150020209 679 (-2.56271e+204)}
; Y = -1.410752762592254239137901095091365277767181396484375p702 {- 1849865988551878 702 (-2.9683e+211)}
; -1.0217217688325741509203226087265647947788238525390625p679 M -1.410752762592254239137901095091365277767181396484375p702 == -1.0217217688325741509203226087265647947788238525390625p679
; [HW: -1.0217217688325741509203226087265647947788238525390625p679] 

; mpf : - 97826150020209 679
; mpfd: - 97826150020209 679 (-2.56271e+204) class: Neg. norm. non-zero
; hwf : - 97826150020209 679 (-2.56271e+204) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100110 #b0000010110001111100011101100111010111111010001110001)))
(assert (= y (fp #b1 #b11010111101 #b0110100100100111000101111101001000010011010011000110)))
(assert (= r (fp #b1 #b11010100110 #b0000010110001111100011101100111010111111010001110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
