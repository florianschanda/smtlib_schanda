(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4247662709047907991788406434352509677410125732421875p-562 {- 1912977219366371 -562 (-9.43813e-170)}
; Y = 1.9522072679323867472334086414775811135768890380859375p625 {+ 4288360297039775 625 (2.71815e+188)}
; -1.4247662709047907991788406434352509677410125732421875p-562 M 1.9522072679323867472334086414775811135768890380859375p625 == 1.9522072679323867472334086414775811135768890380859375p625
; [HW: 1.9522072679323867472334086414775811135768890380859375p625] 

; mpf : + 4288360297039775 625
; mpfd: + 4288360297039775 625 (2.71815e+188) class: Pos. norm. non-zero
; hwf : + 4288360297039775 625 (2.71815e+188) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001101 #b0110110010111101011110110111100111111010110111100011)))
(assert (= y (fp #b0 #b11001110000 #b1111001111000011110110110000001011001000011110011111)))
(assert (= r (fp #b0 #b11001110000 #b1111001111000011110110110000001011001000011110011111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
