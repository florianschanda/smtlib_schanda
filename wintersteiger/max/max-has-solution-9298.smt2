(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9164165956188927708581104525364935398101806640625p-280 {+ 4127173438545384 -280 (9.86486e-085)}
; Y = -1.8363865060750870217276542462059296667575836181640625p-492 {- 3766749957097473 -492 (-1.43617e-148)}
; 1.9164165956188927708581104525364935398101806640625p-280 M -1.8363865060750870217276542462059296667575836181640625p-492 == 1.9164165956188927708581104525364935398101806640625p-280
; [HW: 1.9164165956188927708581104525364935398101806640625p-280] 

; mpf : + 4127173438545384 -280
; mpfd: + 4127173438545384 -280 (9.86486e-085) class: Pos. norm. non-zero
; hwf : + 4127173438545384 -280 (9.86486e-085) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100111 #b1110101010011010010001110010101110110001110111101000)))
(assert (= y (fp #b1 #b01000010011 #b1101011000011101011011010001001001101000100000000001)))
(assert (= r (fp #b0 #b01011100111 #b1110101010011010010001110010101110110001110111101000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
