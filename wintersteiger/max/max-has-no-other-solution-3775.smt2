(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.52763784917959366538298127125017344951629638671875p-716 {- 2376269620951788 -716 (-4.43143e-216)}
; Y = -1.400437791270632725826317255268804728984832763671875p723 {- 1803411487551486 723 (-6.17946e+217)}
; -1.52763784917959366538298127125017344951629638671875p-716 M -1.400437791270632725826317255268804728984832763671875p723 == -1.52763784917959366538298127125017344951629638671875p-716
; [HW: -1.52763784917959366538298127125017344951629638671875p-716] 

; mpf : - 2376269620951788 -716
; mpfd: - 2376269620951788 -716 (-4.43143e-216) class: Neg. norm. non-zero
; hwf : - 2376269620951788 -716 (-4.43143e-216) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110011 #b1000011100010011010001100010101001011011101011101100)))
(assert (= y (fp #b1 #b11011010010 #b0110011010000011000101110101000110010110111111111110)))
(assert (= r (fp #b1 #b00100110011 #b1000011100010011010001100010101001011011101011101100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
