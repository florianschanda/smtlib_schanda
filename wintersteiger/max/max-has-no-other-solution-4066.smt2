(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.952659536678004403853492476628161966800689697265625p-90 {+ 4290397134394010 -90 (1.57735e-027)}
; Y = -1.1510482702539388544238363465410657227039337158203125p-339 {- 680260933630597 -339 (-1.02784e-102)}
; 1.952659536678004403853492476628161966800689697265625p-90 M -1.1510482702539388544238363465410657227039337158203125p-339 == 1.952659536678004403853492476628161966800689697265625p-90
; [HW: 1.952659536678004403853492476628161966800689697265625p-90] 

; mpf : + 4290397134394010 -90
; mpfd: + 4290397134394010 -90 (1.57735e-027) class: Pos. norm. non-zero
; hwf : + 4290397134394010 -90 (1.57735e-027) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110100101 #b1111001111100001011111101101001001000001001010011010)))
(assert (= y (fp #b1 #b01010101100 #b0010011010101011000110010111010011011011101010000101)))
(assert (= r (fp #b0 #b01110100101 #b1111001111100001011111101101001001000001001010011010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
