(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6348333832784447405828132104943506419658660888671875p272 {- 2859035388375155 272 (-1.2406e+082)}
; Y = -1.1885948386804618959189383531338535249233245849609375p59 {- 849355645205327 59 (-6.85178e+017)}
; -1.6348333832784447405828132104943506419658660888671875p272 M -1.1885948386804618959189383531338535249233245849609375p59 == -1.1885948386804618959189383531338535249233245849609375p59
; [HW: -1.1885948386804618959189383531338535249233245849609375p59] 

; mpf : - 849355645205327 59
; mpfd: - 849355645205327 59 (-6.85178e+017) class: Neg. norm. non-zero
; hwf : - 849355645205327 59 (-6.85178e+017) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001111 #b1010001010000100011100001100101110010111000001110011)))
(assert (= y (fp #b1 #b10000111010 #b0011000001000111110000000101100001010011101101001111)))
(assert (= r (fp #b1 #b10000111010 #b0011000001000111110000000101100001010011101101001111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
