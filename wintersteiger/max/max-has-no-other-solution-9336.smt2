(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4315628435572254062435604282654821872711181640625p57 {+ 1943586261431272 57 (2.0631e+017)}
; Y = 1.37498895635996820629998182994313538074493408203125p-531 {+ 1688800124130804 -531 (1.95601e-160)}
; 1.4315628435572254062435604282654821872711181640625p57 M 1.37498895635996820629998182994313538074493408203125p-531 == 1.4315628435572254062435604282654821872711181640625p57
; [HW: 1.4315628435572254062435604282654821872711181640625p57] 

; mpf : + 1943586261431272 57
; mpfd: + 1943586261431272 57 (2.0631e+017) class: Pos. norm. non-zero
; hwf : + 1943586261431272 57 (2.0631e+017) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111000 #b0110111001111010111001110000101100111111001111101000)))
(assert (= y (fp #b0 #b00111101100 #b0101111111111111010001101011011111101101010111110100)))
(assert (= r (fp #b0 #b10000111000 #b0110111001111010111001110000101100111111001111101000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
