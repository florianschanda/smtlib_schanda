(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9728364623015839374176039200392551720142364501953125p60 {- 4381265929113845 60 (-2.27453e+018)}
; Y = 1.9934404940940673167659724640543572604656219482421875p156 {+ 4474058239016803 156 (1.82089e+047)}
; -1.9728364623015839374176039200392551720142364501953125p60 M 1.9934404940940673167659724640543572604656219482421875p156 == 1.9934404940940673167659724640543572604656219482421875p156
; [HW: 1.9934404940940673167659724640543572604656219482421875p156] 

; mpf : + 4474058239016803 156
; mpfd: + 4474058239016803 156 (1.82089e+047) class: Pos. norm. non-zero
; hwf : + 4474058239016803 156 (1.82089e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111011 #b1111100100001011110011110111010111110001000011110101)))
(assert (= y (fp #b0 #b10010011011 #b1111111001010010000111011100000010100111111101100011)))
(assert (= r (fp #b0 #b10010011011 #b1111111001010010000111011100000010100111111101100011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
