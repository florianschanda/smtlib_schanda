(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9553894348307230277583812494412995874881744384765625p453 {+ 4302691502697353 453 (4.54801e+136)}
; Y = 1.3323895581178122338172897798358462750911712646484375p-313 {+ 1496949490081223 -313 (7.98441e-095)}
; 1.9553894348307230277583812494412995874881744384765625p453 M 1.3323895581178122338172897798358462750911712646484375p-313 == 1.9553894348307230277583812494412995874881744384765625p453
; [HW: 1.9553894348307230277583812494412995874881744384765625p453] 

; mpf : + 4302691502697353 453
; mpfd: + 4302691502697353 453 (4.54801e+136) class: Pos. norm. non-zero
; hwf : + 4302691502697353 453 (4.54801e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000100 #b1111010010010100011001101110100110001010101110001001)))
(assert (= y (fp #b0 #b01011000110 #b0101010100010111011110110110100110100101110111000111)))
(assert (= r (fp #b0 #b10111000100 #b1111010010010100011001101110100110001010101110001001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
