(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.993178769895933566402845826814882457256317138671875p-444 {+ 4472879538015614 -444 (4.38761e-134)}
; Y = -1.85201509604158065513956898939795792102813720703125p-601 {- 3837134869046900 -601 (-2.2316e-181)}
; 1.993178769895933566402845826814882457256317138671875p-444 M -1.85201509604158065513956898939795792102813720703125p-601 == 1.993178769895933566402845826814882457256317138671875p-444
; [HW: 1.993178769895933566402845826814882457256317138671875p-444] 

; mpf : + 4472879538015614 -444
; mpfd: + 4472879538015614 -444 (4.38761e-134) class: Pos. norm. non-zero
; hwf : + 4472879538015614 -444 (4.38761e-134) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001000011 #b1111111001000000111101101011111111001000110101111110)))
(assert (= y (fp #b1 #b00110100110 #b1101101000011101101010010100110100110010011001110100)))
(assert (= r (fp #b0 #b01001000011 #b1111111001000000111101101011111111001000110101111110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
