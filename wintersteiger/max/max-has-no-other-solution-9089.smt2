(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4865404629683371950932269101031124591827392578125p-533 {- 2191183447724872 -533 (-5.28675e-161)}
; Y = -1.729243647497160640824631627765484154224395751953125p-27 {- 3284221419130514 -27 (-1.28839e-008)}
; -1.4865404629683371950932269101031124591827392578125p-533 M -1.729243647497160640824631627765484154224395751953125p-27 == -1.4865404629683371950932269101031124591827392578125p-533
; [HW: -1.4865404629683371950932269101031124591827392578125p-533] 

; mpf : - 2191183447724872 -533
; mpfd: - 2191183447724872 -533 (-5.28675e-161) class: Neg. norm. non-zero
; hwf : - 2191183447724872 -533 (-5.28675e-161) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101010 #b0111110010001101111010100111000010100001001101001000)))
(assert (= y (fp #b1 #b01111100100 #b1011101010101111101101100011000011010000111010010010)))
(assert (= r (fp #b1 #b00111101010 #b0111110010001101111010100111000010100001001101001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
