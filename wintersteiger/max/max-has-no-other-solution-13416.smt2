(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.070482239340199814847665038541890680789947509765625p-105 {- 317423786828762 -105 (-2.63894e-032)}
; Y = 1.22008198169485382322818622924387454986572265625p745 {+ 991161130751904 745 (2.25806e+224)}
; -1.070482239340199814847665038541890680789947509765625p-105 M 1.22008198169485382322818622924387454986572265625p745 == 1.22008198169485382322818622924387454986572265625p745
; [HW: 1.22008198169485382322818622924387454986572265625p745] 

; mpf : + 991161130751904 745
; mpfd: + 991161130751904 745 (2.25806e+224) class: Pos. norm. non-zero
; hwf : + 991161130751904 745 (2.25806e+224) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010110 #b0001001000001011000111111100000011101010001111011010)))
(assert (= y (fp #b0 #b11011101000 #b0011100001010111010010101111000111010001011110100000)))
(assert (= r (fp #b0 #b11011101000 #b0011100001010111010010101111000111010001011110100000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
