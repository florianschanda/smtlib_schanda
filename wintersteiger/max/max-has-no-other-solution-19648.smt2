(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7098093066096768932737859358894638717174530029296875p838 {- 3196696928751451 838 (-3.13389e+252)}
; Y = 1.416331364461963726597559798392467200756072998046875p939 {+ 1874989777853550 939 (6.58159e+282)}
; -1.7098093066096768932737859358894638717174530029296875p838 M 1.416331364461963726597559798392467200756072998046875p939 == 1.416331364461963726597559798392467200756072998046875p939
; [HW: 1.416331364461963726597559798392467200756072998046875p939] 

; mpf : + 1874989777853550 939
; mpfd: + 1874989777853550 939 (6.58159e+282) class: Pos. norm. non-zero
; hwf : + 1874989777853550 939 (6.58159e+282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000101 #b1011010110110110000100000000111001001000111101011011)))
(assert (= y (fp #b0 #b11110101010 #b0110101010010100101100010011101010101001110001101110)))
(assert (= r (fp #b0 #b11110101010 #b0110101010010100101100010011101010101001110001101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
