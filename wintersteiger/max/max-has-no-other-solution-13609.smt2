(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1982154348605142946126989045296795666217803955078125p-996 {- 892682958576893 -996 (-1.7892e-300)}
; Y = -1.9725234165433089827956791850738227367401123046875p-608 {- 4379856096353528 -608 (-1.85688e-183)}
; -1.1982154348605142946126989045296795666217803955078125p-996 M -1.9725234165433089827956791850738227367401123046875p-608 == -1.1982154348605142946126989045296795666217803955078125p-996
; [HW: -1.1982154348605142946126989045296795666217803955078125p-996] 

; mpf : - 892682958576893 -996
; mpfd: - 892682958576893 -996 (-1.7892e-300) class: Neg. norm. non-zero
; hwf : - 892682958576893 -996 (-1.7892e-300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011011 #b0011001010111110001111110010101001001001110011111101)))
(assert (= y (fp #b1 #b00110011111 #b1111100011110111010010110110110010100101110011111000)))
(assert (= r (fp #b1 #b00000011011 #b0011001010111110001111110010101001001001110011111101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
