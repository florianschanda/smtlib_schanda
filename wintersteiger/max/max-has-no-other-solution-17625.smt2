(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6957460116114535519926675988244824111461639404296875p-695 {+ 3133361478637851 -695 (1.03161e-209)}
; Y = 1.086088027551003865056600261596031486988067626953125p859 {+ 387706008799762 859 (4.17476e+258)}
; 1.6957460116114535519926675988244824111461639404296875p-695 M 1.086088027551003865056600261596031486988067626953125p859 == 1.086088027551003865056600261596031486988067626953125p859
; [HW: 1.086088027551003865056600261596031486988067626953125p859] 

; mpf : + 387706008799762 859
; mpfd: + 387706008799762 859 (4.17476e+258) class: Pos. norm. non-zero
; hwf : + 387706008799762 859 (4.17476e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101001000 #b1011001000011100011010010001111000110001100100011011)))
(assert (= y (fp #b0 #b11101011010 #b0001011000001001110111010110111011101000101000010010)))
(assert (= r (fp #b0 #b11101011010 #b0001011000001001110111010110111011101000101000010010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
