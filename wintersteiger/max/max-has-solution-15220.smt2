(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5478530630566738057751763335545547306537628173828125p-705 {- 2467310850635821 -705 (-9.19566e-213)}
; Y = -1.118916883144795093585344147868454456329345703125p-134 {- 535554030618960 -134 (-5.13781e-041)}
; -1.5478530630566738057751763335545547306537628173828125p-705 M -1.118916883144795093585344147868454456329345703125p-134 == -1.5478530630566738057751763335545547306537628173828125p-705
; [HW: -1.5478530630566738057751763335545547306537628173828125p-705] 

; mpf : - 2467310850635821 -705
; mpfd: - 2467310850635821 -705 (-9.19566e-213) class: Neg. norm. non-zero
; hwf : - 2467310850635821 -705 (-9.19566e-213) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100111110 #b1000110001000000000110010010110011010111100000101101)))
(assert (= y (fp #b1 #b01101111001 #b0001111001110001010101100011110000001100100101010000)))
(assert (= r (fp #b1 #b00100111110 #b1000110001000000000110010010110011010111100000101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
