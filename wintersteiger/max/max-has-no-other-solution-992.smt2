(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5392432253594876545577108117868192493915557861328125p889 {+ 2428535588791053 889 (6.35292e+267)}
; Y = -1.895803874878488226585204756702296435832977294921875p-567 {- 4034341997099806 -567 (-3.92451e-171)}
; 1.5392432253594876545577108117868192493915557861328125p889 M -1.895803874878488226585204756702296435832977294921875p-567 == 1.5392432253594876545577108117868192493915557861328125p889
; [HW: 1.5392432253594876545577108117868192493915557861328125p889] 

; mpf : + 2428535588791053 889
; mpfd: + 2428535588791053 889 (6.35292e+267) class: Pos. norm. non-zero
; hwf : + 2428535588791053 889 (6.35292e+267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111000 #b1000101000001011110110000001000110000010001100001101)))
(assert (= y (fp #b1 #b00111001000 #b1110010101010011011001110001101000111011101100011110)))
(assert (= r (fp #b0 #b11101111000 #b1000101000001011110110000001000110000010001100001101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
