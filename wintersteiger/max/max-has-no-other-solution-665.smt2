(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8933970529903323409826043643988668918609619140625p-911 {+ 4023502634941160 -911 (1.09374e-274)}
; Y = 1.0045249200267309941381199678289704024791717529296875p-25 {+ 20378428146267 -25 (2.99372e-008)}
; 1.8933970529903323409826043643988668918609619140625p-911 M 1.0045249200267309941381199678289704024791717529296875p-25 == 1.0045249200267309941381199678289704024791717529296875p-25
; [HW: 1.0045249200267309941381199678289704024791717529296875p-25] 

; mpf : + 20378428146267 -25
; mpfd: + 20378428146267 -25 (2.99372e-008) class: Pos. norm. non-zero
; hwf : + 20378428146267 -25 (2.99372e-008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110000 #b1110010010110101101010110101010011101111101011101000)))
(assert (= y (fp #b0 #b01111100110 #b0000000100101000100010111000111110001000001001011011)))
(assert (= r (fp #b0 #b01111100110 #b0000000100101000100010111000111110001000001001011011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
