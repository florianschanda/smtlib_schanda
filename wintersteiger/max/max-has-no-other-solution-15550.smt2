(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2714779845662074198031632477068342268466949462890625p595 {+ 1222628150131665 595 (1.64876e+179)}
; Y = 1.2874365180994240542844408992095850408077239990234375p107 {+ 1294498995805239 107 (2.08899e+032)}
; 1.2714779845662074198031632477068342268466949462890625p595 M 1.2874365180994240542844408992095850408077239990234375p107 == 1.2714779845662074198031632477068342268466949462890625p595
; [HW: 1.2714779845662074198031632477068342268466949462890625p595] 

; mpf : + 1222628150131665 595
; mpfd: + 1222628150131665 595 (1.64876e+179) class: Pos. norm. non-zero
; hwf : + 1222628150131665 595 (1.64876e+179) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010010 #b0100010101111111100101001100100101001011101111010001)))
(assert (= y (fp #b0 #b10001101010 #b0100100110010101011100001000110011101001110000110111)))
(assert (= r (fp #b0 #b11001010010 #b0100010101111111100101001100100101001011101111010001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
