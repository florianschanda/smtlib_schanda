(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5718436815183576271692800219170749187469482421875p-106 {- 2575354991000248 -106 (-1.93745e-032)}
; Y = -1.1074699588722836107734792676637880504131317138671875p92 {- 484001666730739 92 (-5.48393e+027)}
; -1.5718436815183576271692800219170749187469482421875p-106 M -1.1074699588722836107734792676637880504131317138671875p92 == -1.5718436815183576271692800219170749187469482421875p-106
; [HW: -1.5718436815183576271692800219170749187469482421875p-106] 

; mpf : - 2575354991000248 -106
; mpfd: - 2575354991000248 -106 (-1.93745e-032) class: Neg. norm. non-zero
; hwf : - 2575354991000248 -106 (-1.93745e-032) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010101 #b1001001001100100010110001111011010001011101010111000)))
(assert (= y (fp #b1 #b10001011011 #b0001101110000011001001101011011010101000101011110011)))
(assert (= r (fp #b1 #b01110010101 #b1001001001100100010110001111011010001011101010111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
