(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.347846020322580162797976299771107733249664306640625p1011 {- 1566559207507082 1011 (-2.95778e+304)}
; Y = -1.8463126092457502469557084623374976217746734619140625p-305 {- 3811453151638113 -305 (-2.83241e-092)}
; -1.347846020322580162797976299771107733249664306640625p1011 M -1.8463126092457502469557084623374976217746734619140625p-305 == -1.8463126092457502469557084623374976217746734619140625p-305
; [HW: -1.8463126092457502469557084623374976217746734619140625p-305] 

; mpf : - 3811453151638113 -305
; mpfd: - 3811453151638113 -305 (-2.83241e-092) class: Neg. norm. non-zero
; hwf : - 3811453151638113 -305 (-2.83241e-092) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110010 #b0101100100001100011011111101000101010100010010001010)))
(assert (= y (fp #b1 #b01011001110 #b1101100010100111111100010111001011100111001001100001)))
(assert (= r (fp #b1 #b01011001110 #b1101100010100111111100010111001011100111001001100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
