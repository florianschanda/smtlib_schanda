(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8449311250473263701366022360161878168582916259765625p621 {- 3805231499916873 621 (-1.60549e+187)}
; Y = 1.712629781773067794148346365545876324176788330078125p-881 {+ 3209399219646306 -881 (1.06228e-265)}
; -1.8449311250473263701366022360161878168582916259765625p621 M 1.712629781773067794148346365545876324176788330078125p-881 == 1.712629781773067794148346365545876324176788330078125p-881
; [HW: 1.712629781773067794148346365545876324176788330078125p-881] 

; mpf : + 3209399219646306 -881
; mpfd: + 3209399219646306 -881 (1.06228e-265) class: Pos. norm. non-zero
; hwf : + 3209399219646306 -881 (1.06228e-265) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001101100 #b1101100001001101011001111111110101110011011001001001)))
(assert (= y (fp #b0 #b00010001110 #b1011011001101110111001111100011011011110111101100010)))
(assert (= r (fp #b0 #b00010001110 #b1011011001101110111001111100011011011110111101100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
