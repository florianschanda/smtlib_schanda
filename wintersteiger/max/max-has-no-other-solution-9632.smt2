(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4868257437829173195353860137402079999446868896484375p717 {+ 2192468238295111 717 (1.0251e+216)}
; Y = 1.2466088908780375010820762327057309448719024658203125p613 {+ 1110627709064581 613 (4.23758e+184)}
; 1.4868257437829173195353860137402079999446868896484375p717 M 1.2466088908780375010820762327057309448719024658203125p613 == 1.4868257437829173195353860137402079999446868896484375p717
; [HW: 1.4868257437829173195353860137402079999446868896484375p717] 

; mpf : + 2192468238295111 717
; mpfd: + 2192468238295111 717 (1.0251e+216) class: Pos. norm. non-zero
; hwf : + 2192468238295111 717 (1.0251e+216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001100 #b0111110010100000100111001010100001100110000001000111)))
(assert (= y (fp #b0 #b11001100100 #b0011111100100001110000101010000100111001010110000101)))
(assert (= r (fp #b0 #b11011001100 #b0111110010100000100111001010100001100110000001000111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
