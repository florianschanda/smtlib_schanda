(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.48113750903258534208362107165157794952392578125p920 {+ 2166850706393120 920 (1.31278e+277)}
; Y = -1.0649430179973904397883188721607439219951629638671875p-267 {- 292477351653363 -267 (-4.49074e-081)}
; 1.48113750903258534208362107165157794952392578125p920 M -1.0649430179973904397883188721607439219951629638671875p-267 == 1.48113750903258534208362107165157794952392578125p920
; [HW: 1.48113750903258534208362107165157794952392578125p920] 

; mpf : + 2166850706393120 920
; mpfd: + 2166850706393120 920 (1.31278e+277) class: Pos. norm. non-zero
; hwf : + 2166850706393120 920 (1.31278e+277) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110010111 #b0111101100101011110100111110101000101100100000100000)))
(assert (= y (fp #b1 #b01011110100 #b0001000010100000000110110000101001100110111111110011)))
(assert (= r (fp #b0 #b11110010111 #b0111101100101011110100111110101000101100100000100000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
