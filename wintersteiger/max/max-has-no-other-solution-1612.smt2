(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4043211508337531956414068190497346222400665283203125p-81 {- 1820900584232901 -81 (-5.80814e-025)}
; Y = 1.2507828559004270374543921207077801227569580078125p420 {+ 1129425576384072 420 (3.38673e+126)}
; -1.4043211508337531956414068190497346222400665283203125p-81 M 1.2507828559004270374543921207077801227569580078125p420 == 1.2507828559004270374543921207077801227569580078125p420
; [HW: 1.2507828559004270374543921207077801227569580078125p420] 

; mpf : + 1129425576384072 420
; mpfd: + 1129425576384072 420 (3.38673e+126) class: Pos. norm. non-zero
; hwf : + 1129425576384072 420 (3.38673e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101110 #b0110011110000001100101110100011111101001011111000101)))
(assert (= y (fp #b0 #b10110100011 #b0100000000110011010011100010010001111101011001001000)))
(assert (= r (fp #b0 #b10110100011 #b0100000000110011010011100010010001111101011001001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
