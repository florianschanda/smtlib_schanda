(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0760836581206481010752895599580369889736175537109375p-178 {- 342650334361135 -178 (-2.80871e-054)}
; Y = -1.3265111575578034663891457967110909521579742431640625p-929 {- 1470475527509633 -929 (-2.92311e-280)}
; -1.0760836581206481010752895599580369889736175537109375p-178 M -1.3265111575578034663891457967110909521579742431640625p-929 == -1.3265111575578034663891457967110909521579742431640625p-929
; [HW: -1.3265111575578034663891457967110909521579742431640625p-929] 

; mpf : - 1470475527509633 -929
; mpfd: - 1470475527509633 -929 (-2.92311e-280) class: Neg. norm. non-zero
; hwf : - 1470475527509633 -929 (-2.92311e-280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001101 #b0001001101111010001101111111011101100011011000101111)))
(assert (= y (fp #b1 #b00001011110 #b0101001110010110001111000011011101111101011010000001)))
(assert (= r (fp #b1 #b00001011110 #b0101001110010110001111000011011101111101011010000001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
