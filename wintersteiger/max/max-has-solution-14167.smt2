(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.007105673614974161722557255416177213191986083984375p-601 {- 32001109044614 -601 (-1.21352e-181)}
; Y = 1.568502481885599042499279676121659576892852783203125p-98 {+ 2560307565579186 -98 (4.94932e-030)}
; -1.007105673614974161722557255416177213191986083984375p-601 M 1.568502481885599042499279676121659576892852783203125p-98 == 1.568502481885599042499279676121659576892852783203125p-98
; [HW: 1.568502481885599042499279676121659576892852783203125p-98] 

; mpf : + 2560307565579186 -98
; mpfd: + 2560307565579186 -98 (4.94932e-030) class: Pos. norm. non-zero
; hwf : + 2560307565579186 -98 (4.94932e-030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110100110 #b0000000111010001101011010110101111001010110110000110)))
(assert (= y (fp #b0 #b01110011101 #b1001000110001001011000001110111101100100101110110010)))
(assert (= r (fp #b0 #b01110011101 #b1001000110001001011000001110111101100100101110110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
