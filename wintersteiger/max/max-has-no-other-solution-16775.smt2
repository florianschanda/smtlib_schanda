(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.662313005810696520114788654609583318233489990234375p-868 {- 2982792606171686 -868 (-8.4465e-262)}
; Y = 1.5674151871389419010682786392862908542156219482421875p-291 {+ 2555410825363299 -291 (3.93963e-088)}
; -1.662313005810696520114788654609583318233489990234375p-868 M 1.5674151871389419010682786392862908542156219482421875p-291 == 1.5674151871389419010682786392862908542156219482421875p-291
; [HW: 1.5674151871389419010682786392862908542156219482421875p-291] 

; mpf : + 2555410825363299 -291
; mpfd: + 2555410825363299 -291 (3.93963e-088) class: Pos. norm. non-zero
; hwf : + 2555410825363299 -291 (3.93963e-088) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011011 #b1010100110001101010110000101101110101100001000100110)))
(assert (= y (fp #b0 #b01011011100 #b1001000101000010000111110010100000000011111101100011)))
(assert (= r (fp #b0 #b01011011100 #b1001000101000010000111110010100000000011111101100011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
