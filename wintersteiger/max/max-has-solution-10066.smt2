(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0066369166237567611688064062036573886871337890625p199 {- 29890015233640 199 (-8.08802e+059)}
; Y = 1.2241908655954751861116847067023627460002899169921875p-47 {+ 1009665898755651 -47 (8.6984e-015)}
; -1.0066369166237567611688064062036573886871337890625p199 M 1.2241908655954751861116847067023627460002899169921875p-47 == 1.2241908655954751861116847067023627460002899169921875p-47
; [HW: 1.2241908655954751861116847067023627460002899169921875p-47] 

; mpf : + 1009665898755651 -47
; mpfd: + 1009665898755651 -47 (8.6984e-015) class: Pos. norm. non-zero
; hwf : + 1009665898755651 -47 (8.6984e-015) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000110 #b0000000110110010111101001111101111011000011001101000)))
(assert (= y (fp #b0 #b01111010000 #b0011100101100100100100101001001111001011011001000011)))
(assert (= r (fp #b0 #b01111010000 #b0011100101100100100100101001001111001011011001000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
