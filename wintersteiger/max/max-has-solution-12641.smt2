(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9500550451736795576351823910954408347606658935546875p-123 {- 4278667547425643 -123 (-1.83382e-037)}
; Y = 1.5198884528650682401718086111941374838352203369140625p-71 {+ 2341369442597345 -71 (6.43698e-022)}
; -1.9500550451736795576351823910954408347606658935546875p-123 M 1.5198884528650682401718086111941374838352203369140625p-71 == 1.5198884528650682401718086111941374838352203369140625p-71
; [HW: 1.5198884528650682401718086111941374838352203369140625p-71] 

; mpf : + 2341369442597345 -71
; mpfd: + 2341369442597345 -71 (6.43698e-022) class: Pos. norm. non-zero
; hwf : + 2341369442597345 -71 (6.43698e-022) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000100 #b1111001100110110110011101011010001101011101101101011)))
(assert (= y (fp #b0 #b01110111000 #b1000010100010111011010001101111010011111100111100001)))
(assert (= r (fp #b0 #b01110111000 #b1000010100010111011010001101111010011111100111100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
