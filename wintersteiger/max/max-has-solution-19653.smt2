(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5332136426427493969271154128364287316799163818359375p-24 {- 2401380762314751 -24 (-9.13867e-008)}
; Y = 1.985384525421787227372760753496550023555755615234375p387 {+ 4437777381506214 387 (6.25825e+116)}
; -1.5332136426427493969271154128364287316799163818359375p-24 M 1.985384525421787227372760753496550023555755615234375p387 == 1.985384525421787227372760753496550023555755615234375p387
; [HW: 1.985384525421787227372760753496550023555755615234375p387] 

; mpf : + 4437777381506214 387
; mpfd: + 4437777381506214 387 (6.25825e+116) class: Pos. norm. non-zero
; hwf : + 4437777381506214 387 (6.25825e+116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100111 #b1000100010000000101100000111010011101110011111111111)))
(assert (= y (fp #b0 #b10110000010 #b1111110001000010001010010000011010101011110010100110)))
(assert (= r (fp #b0 #b10110000010 #b1111110001000010001010010000011010101011110010100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
