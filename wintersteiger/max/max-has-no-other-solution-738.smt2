(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6782761512286101801549875744967721402645111083984375p-631 {+ 3054684221927463 -631 (1.88337e-190)}
; Y = -1.6933875688980826179630412298138253390789031982421875p844 {- 3122739996912739 844 (-1.98643e+254)}
; 1.6782761512286101801549875744967721402645111083984375p-631 M -1.6933875688980826179630412298138253390789031982421875p844 == 1.6782761512286101801549875744967721402645111083984375p-631
; [HW: 1.6782761512286101801549875744967721402645111083984375p-631] 

; mpf : + 3054684221927463 -631
; mpfd: + 3054684221927463 -631 (1.88337e-190) class: Pos. norm. non-zero
; hwf : + 3054684221927463 -631 (1.88337e-190) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001000 #b1010110110100011100000010111111100101111000000100111)))
(assert (= y (fp #b1 #b11101001011 #b1011000110000001110110010000001111011110110001100011)))
(assert (= r (fp #b0 #b00110001000 #b1010110110100011100000010111111100101111000000100111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
