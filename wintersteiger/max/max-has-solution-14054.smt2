(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.538307135564308314457093729288317263126373291015625p-163 {- 2424319815138298 -163 (-1.31569e-049)}
; Y = -1.9596468442528223175003176947939209640026092529296875p684 {- 4321865170184283 684 (-1.57288e+206)}
; -1.538307135564308314457093729288317263126373291015625p-163 M -1.9596468442528223175003176947939209640026092529296875p684 == -1.538307135564308314457093729288317263126373291015625p-163
; [HW: -1.538307135564308314457093729288317263126373291015625p-163] 

; mpf : - 2424319815138298 -163
; mpfd: - 2424319815138298 -163 (-1.31569e-049) class: Neg. norm. non-zero
; hwf : - 2424319815138298 -163 (-1.31569e-049) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101011100 #b1000100111001110011111110001011001110011101111111010)))
(assert (= y (fp #b1 #b11010101011 #b1111010110101011011010100110001111000110100001011011)))
(assert (= r (fp #b1 #b01101011100 #b1000100111001110011111110001011001110011101111111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
