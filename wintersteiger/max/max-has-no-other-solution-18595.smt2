(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0295459073009698425238411800819449126720428466796875p-495 {+ 133062937110971 -495 (1.00646e-149)}
; Y = 1.16716577703556989575872648856602609157562255859375p-931 {+ 752847731166492 -931 (6.42993e-281)}
; 1.0295459073009698425238411800819449126720428466796875p-495 M 1.16716577703556989575872648856602609157562255859375p-931 == 1.0295459073009698425238411800819449126720428466796875p-495
; [HW: 1.0295459073009698425238411800819449126720428466796875p-495] 

; mpf : + 133062937110971 -495
; mpfd: + 133062937110971 -495 (1.00646e-149) class: Pos. norm. non-zero
; hwf : + 133062937110971 -495 (1.00646e-149) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000010000 #b0000011110010000010100100001000110010110100110111011)))
(assert (= y (fp #b0 #b00001011100 #b0010101011001011011000000101100101100000110100011100)))
(assert (= r (fp #b0 #b01000010000 #b0000011110010000010100100001000110010110100110111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
