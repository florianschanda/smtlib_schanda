(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.396378295060826335571846357197500765323638916015625p408 {+ 1785129141933690 408 (9.23084e+122)}
; Y = 1.36420269330196841650604255846701562404632568359375p656 {+ 1640223113842076 656 (4.07902e+197)}
; 1.396378295060826335571846357197500765323638916015625p408 M 1.36420269330196841650604255846701562404632568359375p656 == 1.36420269330196841650604255846701562404632568359375p656
; [HW: 1.36420269330196841650604255846701562404632568359375p656] 

; mpf : + 1640223113842076 656
; mpfd: + 1640223113842076 656 (4.07902e+197) class: Pos. norm. non-zero
; hwf : + 1640223113842076 656 (4.07902e+197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010111 #b0110010101111001000011000100011000100001011001111010)))
(assert (= y (fp #b0 #b11010001111 #b0101110100111100011000110100000011011000110110011100)))
(assert (= r (fp #b0 #b11010001111 #b0101110100111100011000110100000011011000110110011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
