(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8334675395382229456942013712250627577304840087890625p-514 {+ 3753604100489745 -514 (3.41866e-155)}
; Y = 1.746357161480315500767801495385356247425079345703125p-922 {+ 3361293834328050 -922 (4.9258e-278)}
; 1.8334675395382229456942013712250627577304840087890625p-514 M 1.746357161480315500767801495385356247425079345703125p-922 == 1.8334675395382229456942013712250627577304840087890625p-514
; [HW: 1.8334675395382229456942013712250627577304840087890625p-514] 

; mpf : + 3753604100489745 -514
; mpfd: + 3753604100489745 -514 (3.41866e-155) class: Pos. norm. non-zero
; hwf : + 3753604100489745 -514 (3.41866e-155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111101 #b1101010101011110001000001111000010011000001000010001)))
(assert (= y (fp #b0 #b00001100101 #b1011111100010001010000110100111110110001011111110010)))
(assert (= r (fp #b0 #b00111111101 #b1101010101011110001000001111000010011000001000010001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
