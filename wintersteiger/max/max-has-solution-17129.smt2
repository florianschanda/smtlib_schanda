(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.296713723597557876843211488449014723300933837890625p-940 {- 1336279815029674 -940 (-1.39524e-283)}
; Y = 1.7767771228067739119893531096749939024448394775390625p614 {+ 3498293160822513 614 (1.20795e+185)}
; -1.296713723597557876843211488449014723300933837890625p-940 M 1.7767771228067739119893531096749939024448394775390625p614 == 1.7767771228067739119893531096749939024448394775390625p614
; [HW: 1.7767771228067739119893531096749939024448394775390625p614] 

; mpf : + 3498293160822513 614
; mpfd: + 3498293160822513 614 (1.20795e+185) class: Pos. norm. non-zero
; hwf : + 3498293160822513 614 (1.20795e+185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010011 #b0100101111110101011011100011101100100000001110101010)))
(assert (= y (fp #b0 #b11001100101 #b1100011011011010110111011001001010111100011011110001)))
(assert (= r (fp #b0 #b11001100101 #b1100011011011010110111011001001010111100011011110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
