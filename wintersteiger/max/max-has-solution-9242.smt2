(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9069430947489920402659890896757133305072784423828125p-284 {- 4084508583557805 -284 (-6.13506e-086)}
; Y = -1.4034351846199448754504146563704125583171844482421875p-1001 {- 1816910547122531 -1001 (-6.54887e-302)}
; -1.9069430947489920402659890896757133305072784423828125p-284 M -1.4034351846199448754504146563704125583171844482421875p-1001 == -1.4034351846199448754504146563704125583171844482421875p-1001
; [HW: -1.4034351846199448754504146563704125583171844482421875p-1001] 

; mpf : - 1816910547122531 -1001
; mpfd: - 1816910547122531 -1001 (-6.54887e-302) class: Neg. norm. non-zero
; hwf : - 1816910547122531 -1001 (-6.54887e-302) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011100011 #b1110100000101101011011000011001101000111101010101101)))
(assert (= y (fp #b1 #b00000010110 #b0110011101000111100001110011101111111111100101100011)))
(assert (= r (fp #b1 #b00000010110 #b0110011101000111100001110011101111111111100101100011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
