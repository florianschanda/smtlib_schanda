(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.289168460485464517972786779864691197872161865234375p-143 {+ 1302298970889638 -143 (1.15617e-043)}
; Y = 1.33753820271662693386360842850990593433380126953125p-915 {+ 1520136923977908 -915 (4.82903e-276)}
; 1.289168460485464517972786779864691197872161865234375p-143 M 1.33753820271662693386360842850990593433380126953125p-915 == 1.289168460485464517972786779864691197872161865234375p-143
; [HW: 1.289168460485464517972786779864691197872161865234375p-143] 

; mpf : + 1302298970889638 -143
; mpfd: + 1302298970889638 -143 (1.15617e-043) class: Pos. norm. non-zero
; hwf : + 1302298970889638 -143 (1.15617e-043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110000 #b0100101000000110111100011011100011010001110110100110)))
(assert (= y (fp #b0 #b00001101100 #b0101011001101000111001110101010111010001100010110100)))
(assert (= r (fp #b0 #b01101110000 #b0100101000000110111100011011100011010001110110100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
