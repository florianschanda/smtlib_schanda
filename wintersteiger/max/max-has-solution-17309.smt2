(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1022022099607522438446949308854527771472930908203125p-519 {+ 460277834695685 -519 (6.42234e-157)}
; Y = -1.7580656047673832720334985424415208399295806884765625p-503 {- 3414023975152777 -503 (-6.71347e-152)}
; 1.1022022099607522438446949308854527771472930908203125p-519 M -1.7580656047673832720334985424415208399295806884765625p-503 == 1.1022022099607522438446949308854527771472930908203125p-519
; [HW: 1.1022022099607522438446949308854527771472930908203125p-519] 

; mpf : + 460277834695685 -519
; mpfd: + 460277834695685 -519 (6.42234e-157) class: Pos. norm. non-zero
; hwf : + 460277834695685 -519 (6.42234e-157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111000 #b0001101000101001111011001000110101011100010000000101)))
(assert (= y (fp #b1 #b01000001000 #b1100001000010000100101100110010010110010110010001001)))
(assert (= r (fp #b0 #b00111111000 #b0001101000101001111011001000110101011100010000000101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
