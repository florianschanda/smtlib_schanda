(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7826740491252188736126527146552689373493194580078125p-339 {+ 3524850555992893 -339 (1.59185e-102)}
; Y = -1.151087442214164813236720874556340277194976806640625p14 {- 680437348456074 14 (-18859.4)}
; 1.7826740491252188736126527146552689373493194580078125p-339 M -1.151087442214164813236720874556340277194976806640625p14 == 1.7826740491252188736126527146552689373493194580078125p-339
; [HW: 1.7826740491252188736126527146552689373493194580078125p-339] 

; mpf : + 3524850555992893 -339
; mpfd: + 3524850555992893 -339 (1.59185e-102) class: Pos. norm. non-zero
; hwf : + 3524850555992893 -339 (1.59185e-102) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101100 #b1100100001011101010100111001010001101011101100111101)))
(assert (= y (fp #b1 #b10000001101 #b0010011010101101101010101010011100100101011010001010)))
(assert (= r (fp #b0 #b01010101100 #b1100100001011101010100111001010001101011101100111101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
