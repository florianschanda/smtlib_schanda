(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3232972813886221263857123631169088184833526611328125p227 {+ 1456001515991693 227 (2.85408e+068)}
; Y = 1.7484018890224921616294295745319686830043792724609375p15 {+ 3370502468525071 15 (57291.6)}
; 1.3232972813886221263857123631169088184833526611328125p227 M 1.7484018890224921616294295745319686830043792724609375p15 == 1.3232972813886221263857123631169088184833526611328125p227
; [HW: 1.3232972813886221263857123631169088184833526611328125p227] 

; mpf : + 1456001515991693 227
; mpfd: + 1456001515991693 227 (2.85408e+068) class: Pos. norm. non-zero
; hwf : + 1456001515991693 227 (2.85408e+068) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011100010 #b0101001011000011100111000101001001110011001010001101)))
(assert (= y (fp #b0 #b10000001110 #b1011111110010111010001000010010110011101110000001111)))
(assert (= r (fp #b0 #b10011100010 #b0101001011000011100111000101001001110011001010001101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
