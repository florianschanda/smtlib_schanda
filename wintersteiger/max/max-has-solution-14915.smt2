(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6624003607905184498605422049877233803272247314453125p134 {+ 2983186018026261 134 (3.62039e+040)}
; Y = -1.76198816280447712045997832319699227809906005859375p-91 {- 3431689606066972 -91 (-7.11661e-028)}
; 1.6624003607905184498605422049877233803272247314453125p134 M -1.76198816280447712045997832319699227809906005859375p-91 == 1.6624003607905184498605422049877233803272247314453125p134
; [HW: 1.6624003607905184498605422049877233803272247314453125p134] 

; mpf : + 2983186018026261 134
; mpfd: + 2983186018026261 134 (3.62039e+040) class: Pos. norm. non-zero
; hwf : + 2983186018026261 134 (3.62039e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000101 #b1010100110010011000100011110111001110100001100010101)))
(assert (= y (fp #b1 #b01110100100 #b1100001100010001101001111111111100101111001100011100)))
(assert (= r (fp #b0 #b10010000101 #b1010100110010011000100011110111001110100001100010101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
