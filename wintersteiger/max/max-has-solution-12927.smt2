(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.42176662732764302887744634062983095645904541015625p952 {+ 1899468025670084 952 (5.41233e+286)}
; Y = 1.5696175914093635217483324595377780497074127197265625p374 {+ 2565329572414889 374 (6.03966e+112)}
; 1.42176662732764302887744634062983095645904541015625p952 M 1.5696175914093635217483324595377780497074127197265625p374 == 1.42176662732764302887744634062983095645904541015625p952
; [HW: 1.42176662732764302887744634062983095645904541015625p952] 

; mpf : + 1899468025670084 952
; mpfd: + 1899468025670084 952 (5.41233e+286) class: Pos. norm. non-zero
; hwf : + 1899468025670084 952 (5.41233e+286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110111 #b0110101111111000111001011100111011101010100111000100)))
(assert (= y (fp #b0 #b10101110101 #b1001000111010010011101010101111001010100010110101001)))
(assert (= r (fp #b0 #b11110110111 #b0110101111111000111001011100111011101010100111000100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
