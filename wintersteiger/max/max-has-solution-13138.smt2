(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9532006702530739783441049439716152846813201904296875p524 {+ 4292834183361051 524 (1.07267e+158)}
; Y = 1.7964507722889013763278853730298578739166259765625p-915 {+ 3586895401299240 -915 (6.48589e-276)}
; 1.9532006702530739783441049439716152846813201904296875p524 M 1.7964507722889013763278853730298578739166259765625p-915 == 1.9532006702530739783441049439716152846813201904296875p524
; [HW: 1.9532006702530739783441049439716152846813201904296875p524] 

; mpf : + 4292834183361051 524
; mpfd: + 4292834183361051 524 (1.07267e+158) class: Pos. norm. non-zero
; hwf : + 4292834183361051 524 (1.07267e+158) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001011 #b1111010000000100111101011000100101000011001000011011)))
(assert (= y (fp #b0 #b00001101100 #b1100101111100100001100101010001111011010110100101000)))
(assert (= r (fp #b0 #b11000001011 #b1111010000000100111101011000100101000011001000011011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
