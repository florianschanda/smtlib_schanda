(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.4581802332916549147512341733090579509735107421875p-1022 {+ 2063460327920824 -1023 (1.01948e-308)}
; Y = 1.09876416742383842262142934487201273441314697265625p782 {+ 444794267607556 782 (2.79487e+235)}
; 0.4581802332916549147512341733090579509735107421875p-1022 M 1.09876416742383842262142934487201273441314697265625p782 == 1.09876416742383842262142934487201273441314697265625p782
; [HW: 1.09876416742383842262142934487201273441314697265625p782] 

; mpf : + 444794267607556 782
; mpfd: + 444794267607556 782 (2.79487e+235) class: Pos. norm. non-zero
; hwf : + 444794267607556 782 (2.79487e+235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0111010101001011010011001011110110101001010010111000)))
(assert (= y (fp #b0 #b11100001101 #b0001100101001000100110111100010100011010001000000100)))
(assert (= r (fp #b0 #b11100001101 #b0001100101001000100110111100010100011010001000000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
