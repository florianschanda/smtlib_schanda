(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.562210312270604806172968892497010529041290283203125p-547 {- 2531970152845746 -547 (-3.39103e-165)}
; Y = 1.6446258909402018399958933514426462352275848388671875p-683 {+ 2903136922231667 -683 (4.09808e-206)}
; -1.562210312270604806172968892497010529041290283203125p-547 M 1.6446258909402018399958933514426462352275848388671875p-683 == 1.6446258909402018399958933514426462352275848388671875p-683
; [HW: 1.6446258909402018399958933514426462352275848388671875p-683] 

; mpf : + 2903136922231667 -683
; mpfd: + 2903136922231667 -683 (4.09808e-206) class: Pos. norm. non-zero
; hwf : + 2903136922231667 -683 (4.09808e-206) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111011100 #b1000111111101101000000111101100010101101000110110010)))
(assert (= y (fp #b0 #b00101010100 #b1010010100000110001100111100111110111110001101110011)))
(assert (= r (fp #b0 #b00101010100 #b1010010100000110001100111100111110111110001101110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
