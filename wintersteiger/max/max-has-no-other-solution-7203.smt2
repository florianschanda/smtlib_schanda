(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6610464130489204226392985219717957079410552978515625p351 {- 2977088379481721 351 (-7.61922e+105)}
; Y = -1.933819681979686233574966536252759397029876708984375p717 {- 4205549971794950 717 (-1.33328e+216)}
; -1.6610464130489204226392985219717957079410552978515625p351 M -1.933819681979686233574966536252759397029876708984375p717 == -1.6610464130489204226392985219717957079410552978515625p351
; [HW: -1.6610464130489204226392985219717957079410552978515625p351] 

; mpf : - 2977088379481721 351
; mpfd: - 2977088379481721 351 (-7.61922e+105) class: Neg. norm. non-zero
; hwf : - 2977088379481721 351 (-7.61922e+105) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101011110 #b1010100100111010010101100111010100101110111001111001)))
(assert (= y (fp #b1 #b11011001100 #b1110111100001110110011101000001001110110110000000110)))
(assert (= r (fp #b1 #b10101011110 #b1010100100111010010101100111010100101110111001111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
