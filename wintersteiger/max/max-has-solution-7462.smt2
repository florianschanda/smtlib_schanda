(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5251015626138657577115509411669336259365081787109375p-62 {+ 2364847201719471 -62 (3.30704e-019)}
; Y = 1.1609653954162582056852670575608499348163604736328125p159 {+ 724923694816205 159 (8.48376e+047)}
; 1.5251015626138657577115509411669336259365081787109375p-62 M 1.1609653954162582056852670575608499348163604736328125p159 == 1.1609653954162582056852670575608499348163604736328125p159
; [HW: 1.1609653954162582056852670575608499348163604736328125p159] 

; mpf : + 724923694816205 159
; mpfd: + 724923694816205 159 (8.48376e+047) class: Pos. norm. non-zero
; hwf : + 724923694816205 159 (8.48376e+047) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000001 #b1000011001101101000011100101011010000001010010101111)))
(assert (= y (fp #b0 #b10010011110 #b0010100100110101000001110011010100011001101111001101)))
(assert (= r (fp #b0 #b10010011110 #b0010100100110101000001110011010100011001101111001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
