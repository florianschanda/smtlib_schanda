(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.192242844949903624041098737507127225399017333984375p182 {+ 865784804881030 182 (7.30843e+054)}
; Y = -1.814217521352401885081917498609982430934906005859375p849 {- 3666909725761206 849 (-6.81013e+255)}
; 1.192242844949903624041098737507127225399017333984375p182 M -1.814217521352401885081917498609982430934906005859375p849 == 1.192242844949903624041098737507127225399017333984375p182
; [HW: 1.192242844949903624041098737507127225399017333984375p182] 

; mpf : + 865784804881030 182
; mpfd: + 865784804881030 182 (7.30843e+054) class: Pos. norm. non-zero
; hwf : + 865784804881030 182 (7.30843e+054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110101 #b0011000100110110110100111011101111110011001010000110)))
(assert (= y (fp #b1 #b11101010000 #b1101000001110000100011110011101000001001111010110110)))
(assert (= r (fp #b0 #b10010110101 #b0011000100110110110100111011101111110011001010000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
