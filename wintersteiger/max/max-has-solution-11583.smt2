(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9153221912583233699223228541086427867412567138671875p822 {- 4122244679474931 822 (-5.35671e+247)}
; Y = -1.792772370334068110508951576775871217250823974609375p649 {- 3570329351626134 649 (-4.18786e+195)}
; -1.9153221912583233699223228541086427867412567138671875p822 M -1.792772370334068110508951576775871217250823974609375p649 == -1.792772370334068110508951576775871217250823974609375p649
; [HW: -1.792772370334068110508951576775871217250823974609375p649] 

; mpf : - 3570329351626134 649
; mpfd: - 3570329351626134 649 (-4.18786e+195) class: Neg. norm. non-zero
; hwf : - 3570329351626134 649 (-4.18786e+195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110101 #b1110101001010010100011100001110011000001111011110011)))
(assert (= y (fp #b1 #b11010001000 #b1100101011110011001000010100101111000001110110010110)))
(assert (= r (fp #b1 #b11010001000 #b1100101011110011001000010100101111000001110110010110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
