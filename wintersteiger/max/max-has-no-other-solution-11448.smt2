(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5567855166183266479862368214526213705539703369140625p99 {- 2507539045167585 99 (-9.8673e+029)}
; Y = -1.2321620089000051567751370384939946234226226806640625p530 {- 1045564736771649 530 (-4.33077e+159)}
; -1.5567855166183266479862368214526213705539703369140625p99 M -1.2321620089000051567751370384939946234226226806640625p530 == -1.5567855166183266479862368214526213705539703369140625p99
; [HW: -1.5567855166183266479862368214526213705539703369140625p99] 

; mpf : - 2507539045167585 99
; mpfd: - 2507539045167585 99 (-9.8673e+029) class: Neg. norm. non-zero
; hwf : - 2507539045167585 99 (-9.8673e+029) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001100010 #b1000111010001001011111101110000011000011000111100001)))
(assert (= y (fp #b1 #b11000010001 #b0011101101101110111110000010101110011001011001000001)))
(assert (= r (fp #b1 #b10001100010 #b1000111010001001011111101110000011000011000111100001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
