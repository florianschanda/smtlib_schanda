(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.41171795452232640144529796089045703411102294921875p822 {- 1854212826568492 822 (-3.94825e+247)}
; Y = 1.0527793048955549348733029546565376222133636474609375p-371 {+ 237696857860495 -371 (2.18881e-112)}
; -1.41171795452232640144529796089045703411102294921875p822 M 1.0527793048955549348733029546565376222133636474609375p-371 == 1.0527793048955549348733029546565376222133636474609375p-371
; [HW: 1.0527793048955549348733029546565376222133636474609375p-371] 

; mpf : + 237696857860495 -371
; mpfd: + 237696857860495 -371 (2.18881e-112) class: Pos. norm. non-zero
; hwf : + 237696857860495 -371 (2.18881e-112) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110101 #b0110100101100110010110010000110111011001011100101100)))
(assert (= y (fp #b0 #b01010001100 #b0000110110000010111100011100110001101110100110001111)))
(assert (= r (fp #b0 #b01010001100 #b0000110110000010111100011100110001101110100110001111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
