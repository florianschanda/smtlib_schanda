(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.84701964829618336949579315842129290103912353515625p-744 {- 3814637372442180 -744 (-1.99597e-224)}
; Y = 1.4132938497041738212800510154920630156993865966796875p40 {+ 1861310027522235 40 (1.55393e+012)}
; -1.84701964829618336949579315842129290103912353515625p-744 M 1.4132938497041738212800510154920630156993865966796875p40 == 1.4132938497041738212800510154920630156993865966796875p40
; [HW: 1.4132938497041738212800510154920630156993865966796875p40] 

; mpf : + 1861310027522235 40
; mpfd: + 1861310027522235 40 (1.55393e+012) class: Pos. norm. non-zero
; hwf : + 1861310027522235 40 (1.55393e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010111 #b1101100011010110010001111001100010000000011001000100)))
(assert (= y (fp #b0 #b10000100111 #b0110100111001101101000000011000000011110000010111011)))
(assert (= r (fp #b0 #b10000100111 #b0110100111001101101000000011000000011110000010111011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
