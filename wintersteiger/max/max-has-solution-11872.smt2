(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.371355697107112359134362122858874499797821044921875p-346 {+ 1672437379113502 -346 (9.56691e-105)}
; Y = -1.5351738343236072115161050533060915768146514892578125p-162 {- 2410208680838237 -162 (-2.62602e-049)}
; 1.371355697107112359134362122858874499797821044921875p-346 M -1.5351738343236072115161050533060915768146514892578125p-162 == 1.371355697107112359134362122858874499797821044921875p-346
; [HW: 1.371355697107112359134362122858874499797821044921875p-346] 

; mpf : + 1672437379113502 -346
; mpfd: + 1672437379113502 -346 (9.56691e-105) class: Pos. norm. non-zero
; hwf : + 1672437379113502 -346 (9.56691e-105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100101 #b0101111100010001001010101011111001000010001000011110)))
(assert (= y (fp #b1 #b01101011101 #b1000100100000001001001110000010000011000010001011101)))
(assert (= r (fp #b0 #b01010100101 #b0101111100010001001010101011111001000010001000011110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
