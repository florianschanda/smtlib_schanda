(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.65356481048059578142783720977604389190673828125p405 {+ 2943394236942880 405 (1.36637e+122)}
; Y = 1.852291147598239096083716503926552832126617431640625p-111 {+ 3838378094734602 -111 (7.13477e-034)}
; 1.65356481048059578142783720977604389190673828125p405 M 1.852291147598239096083716503926552832126617431640625p-111 == 1.65356481048059578142783720977604389190673828125p405
; [HW: 1.65356481048059578142783720977604389190673828125p405] 

; mpf : + 2943394236942880 405
; mpfd: + 2943394236942880 405 (1.36637e+122) class: Pos. norm. non-zero
; hwf : + 2943394236942880 405 (1.36637e+122) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010100 #b1010011101010000000001011111111011010100101000100000)))
(assert (= y (fp #b0 #b01110010000 #b1101101000101111110000001010110110011010110100001010)))
(assert (= r (fp #b0 #b10110010100 #b1010011101010000000001011111111011010100101000100000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
