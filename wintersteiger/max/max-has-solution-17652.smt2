(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8721468090176462961693459874368272721767425537109375p-183 {+ 3927800044104239 -183 (1.52704e-055)}
; Y = -1.110629229742371659739319511572830379009246826171875p554 {- 498229757844030 554 (-6.54918e+166)}
; 1.8721468090176462961693459874368272721767425537109375p-183 M -1.110629229742371659739319511572830379009246826171875p554 == 1.8721468090176462961693459874368272721767425537109375p-183
; [HW: 1.8721468090176462961693459874368272721767425537109375p-183] 

; mpf : + 3927800044104239 -183
; mpfd: + 3927800044104239 -183 (1.52704e-055) class: Pos. norm. non-zero
; hwf : + 3927800044104239 -183 (1.52704e-055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001000 #b1101111101000101000000110110011000001010101000101111)))
(assert (= y (fp #b1 #b11000101001 #b0001110001010010001100100111101110111001101000111110)))
(assert (= r (fp #b0 #b01101001000 #b1101111101000101000000110110011000001010101000101111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
