(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5514494542005927701922018968616612255573272705078125p-842 {+ 2483507556451453 -842 (5.29031e-254)}
; Y = 1.347962070574405313294619190855883061885833740234375p813 {+ 1567081851377958 813 (7.36316e+244)}
; 1.5514494542005927701922018968616612255573272705078125p-842 M 1.347962070574405313294619190855883061885833740234375p813 == 1.347962070574405313294619190855883061885833740234375p813
; [HW: 1.347962070574405313294619190855883061885833740234375p813] 

; mpf : + 1567081851377958 813
; mpfd: + 1567081851377958 813 (7.36316e+244) class: Pos. norm. non-zero
; hwf : + 1567081851377958 813 (7.36316e+244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110101 #b1000110100101011110010101001101100110000010001111101)))
(assert (= y (fp #b0 #b11100101100 #b0101100100010100000010101101000101011101100100100110)))
(assert (= r (fp #b0 #b11100101100 #b0101100100010100000010101101000101011101100100100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
