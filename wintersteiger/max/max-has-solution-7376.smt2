(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7215854788900750715896492692991159856319427490234375p-99 {+ 3249732093845303 -99 (2.71618e-030)}
; Y = 1.4318204938801180059471107597346417605876922607421875p575 {+ 1944746615329443 575 (1.77066e+173)}
; 1.7215854788900750715896492692991159856319427490234375p-99 M 1.4318204938801180059471107597346417605876922607421875p575 == 1.4318204938801180059471107597346417605876922607421875p575
; [HW: 1.4318204938801180059471107597346417605876922607421875p575] 

; mpf : + 1944746615329443 575
; mpfd: + 1944746615329443 575 (1.77066e+173) class: Pos. norm. non-zero
; hwf : + 1944746615329443 575 (1.77066e+173) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011100 #b1011100010111001110100110111000100011001111100110111)))
(assert (= y (fp #b0 #b11000111110 #b0110111010001011110010011011001011110101001010100011)))
(assert (= r (fp #b0 #b11000111110 #b0110111010001011110010011011001011110101001010100011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
