(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.581224066002025807620157138444483280181884765625p-828 {- 2617600487065488 -828 (-8.83399e-250)}
; Y = -1.9711339529886782173662140849046409130096435546875p122 {- 4373598508806648 122 (-1.04803e+037)}
; -1.581224066002025807620157138444483280181884765625p-828 M -1.9711339529886782173662140849046409130096435546875p122 == -1.581224066002025807620157138444483280181884765625p-828
; [HW: -1.581224066002025807620157138444483280181884765625p-828] 

; mpf : - 2617600487065488 -828
; mpfd: - 2617600487065488 -828 (-8.83399e-250) class: Neg. norm. non-zero
; hwf : - 2617600487065488 -828 (-8.83399e-250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000011 #b1001010011001011000110011011001100100000011110010000)))
(assert (= y (fp #b1 #b10001111001 #b1111100010011100001111000001100000011111000111111000)))
(assert (= r (fp #b1 #b00011000011 #b1001010011001011000110011011001100100000011110010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
