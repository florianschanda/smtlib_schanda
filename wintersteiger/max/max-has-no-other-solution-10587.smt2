(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.708150001911481918881463570869527757167816162109375p-18 {- 3189224084730966 -18 (-6.51608e-006)}
; Y = 1.15409425097446582952898097573779523372650146484375p646 {+ 693978811268540 646 (3.36991e+194)}
; -1.708150001911481918881463570869527757167816162109375p-18 M 1.15409425097446582952898097573779523372650146484375p646 == 1.15409425097446582952898097573779523372650146484375p646
; [HW: 1.15409425097446582952898097573779523372650146484375p646] 

; mpf : + 693978811268540 646
; mpfd: + 693978811268540 646 (3.36991e+194) class: Pos. norm. non-zero
; hwf : + 693978811268540 646 (3.36991e+194) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111101101 #b1011010101001001010100011000101011011111010001010110)))
(assert (= y (fp #b0 #b11010000101 #b0010011101110010101110001000100001101111110110111100)))
(assert (= r (fp #b0 #b11010000101 #b0010011101110010101110001000100001101111110110111100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
