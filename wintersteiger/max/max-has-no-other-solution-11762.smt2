(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0042160552827275044052157682017423212528228759765625p-843 {+ 18987425000265 -843 (1.71215e-254)}
; Y = -1.2582400528516031190662260996759869158267974853515625p242 {- 1163009805794617 242 (-8.89247e+072)}
; 1.0042160552827275044052157682017423212528228759765625p-843 M -1.2582400528516031190662260996759869158267974853515625p242 == 1.0042160552827275044052157682017423212528228759765625p-843
; [HW: 1.0042160552827275044052157682017423212528228759765625p-843] 

; mpf : + 18987425000265 -843
; mpfd: + 18987425000265 -843 (1.71215e-254) class: Pos. norm. non-zero
; hwf : + 18987425000265 -843 (1.71215e-254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110100 #b0000000100010100010011011010101110001110101101001001)))
(assert (= y (fp #b1 #b10011110001 #b0100001000011100000001010010010110000011110100111001)))
(assert (= r (fp #b0 #b00010110100 #b0000000100010100010011011010101110001110101101001001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
