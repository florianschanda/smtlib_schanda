(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.71533331711381986650621911394409835338592529296875p411 {- 3221574860399500 411 (-9.07145e+123)}
; Y = 1.278145817711124454518767379340715706348419189453125p845 {+ 1252657400998482 845 (2.99866e+254)}
; -1.71533331711381986650621911394409835338592529296875p411 M 1.278145817711124454518767379340715706348419189453125p845 == 1.278145817711124454518767379340715706348419189453125p845
; [HW: 1.278145817711124454518767379340715706348419189453125p845] 

; mpf : + 1252657400998482 845
; mpfd: + 1252657400998482 845 (2.99866e+254) class: Pos. norm. non-zero
; hwf : + 1252657400998482 845 (2.99866e+254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011010 #b1011011100100000000101011001001010111110001110001100)))
(assert (= y (fp #b0 #b11101001100 #b0100011100110100100100000111011010010110101001010010)))
(assert (= r (fp #b0 #b11101001100 #b0100011100110100100100000111011010010110101001010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
