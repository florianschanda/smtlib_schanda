(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 0.7129799822799736119804947520606219768524169921875p-1022 {+ 3210976382518712 -1023 (1.58643e-308)}
; Y = -1.6408467313963281952737816027365624904632568359375p113 {- 2886117100718104 113 (-1.70395e+034)}
; 0.7129799822799736119804947520606219768524169921875p-1022 M -1.6408467313963281952737816027365624904632568359375p113 == 0.7129799822799736119804947520606219768524169921875p-1022
; [HW: 0.7129799822799736119804947520606219768524169921875p-1022] 

; mpf : + 3210976382518712 -1023
; mpfd: + 3210976382518712 -1023 (1.58643e-308) class: Pos. denorm.
; hwf : + 3210976382518712 -1023 (1.58643e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1011011010000101110110110010101010011000010110111000)))
(assert (= y (fp #b1 #b10001110000 #b1010010000001110100010000000100100011000100000011000)))
(assert (= r (fp #b0 #b00000000000 #b1011011010000101110110110010101010011000010110111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
