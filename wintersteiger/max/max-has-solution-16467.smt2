(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0597593371025102459981326319393701851367950439453125p-337 {+ 269132128306773 -337 (3.78529e-102)}
; Y = 1.5180087308282035341022719876491464674472808837890625p-143 {+ 2332903927132561 -143 (1.3614e-043)}
; 1.0597593371025102459981326319393701851367950439453125p-337 M 1.5180087308282035341022719876491464674472808837890625p-143 == 1.5180087308282035341022719876491464674472808837890625p-143
; [HW: 1.5180087308282035341022719876491464674472808837890625p-143] 

; mpf : + 2332903927132561 -143
; mpfd: + 2332903927132561 -143 (1.3614e-043) class: Pos. norm. non-zero
; hwf : + 2332903927132561 -143 (1.3614e-043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101110 #b0000111101001100011000110100111001111100011001010101)))
(assert (= y (fp #b0 #b01101110000 #b1000010010011100001110000101110111110011000110010001)))
(assert (= r (fp #b0 #b01101110000 #b1000010010011100001110000101110111110011000110010001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
