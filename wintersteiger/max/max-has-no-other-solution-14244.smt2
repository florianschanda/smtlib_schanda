(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3239812967504007712449265454779379069805145263671875p-856 {+ 1459082047320115 -856 (2.75553e-258)}
; Y = 1.463703551677707270783912463230080902576446533203125p-715 {+ 2088335142546098 -715 (8.49193e-216)}
; 1.3239812967504007712449265454779379069805145263671875p-856 M 1.463703551677707270783912463230080902576446533203125p-715 == 1.463703551677707270783912463230080902576446533203125p-715
; [HW: 1.463703551677707270783912463230080902576446533203125p-715] 

; mpf : + 2088335142546098 -715
; mpfd: + 2088335142546098 -715 (8.49193e-216) class: Pos. norm. non-zero
; hwf : + 2088335142546098 -715 (8.49193e-216) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100111 #b0101001011110000011100000011001000001111000000110011)))
(assert (= y (fp #b0 #b00100110100 #b0111011010110101010001101010010101111110101010110010)))
(assert (= r (fp #b0 #b00100110100 #b0111011010110101010001101010010101111110101010110010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
