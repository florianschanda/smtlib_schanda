(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0576168961745444629940493541653268039226531982421875p-196 {- 259483432141923 -196 (-1.05305e-059)}
; Y = 1.36150990239759384081708049052394926548004150390625p87 {+ 1628095861728548 87 (2.10683e+026)}
; -1.0576168961745444629940493541653268039226531982421875p-196 M 1.36150990239759384081708049052394926548004150390625p87 == 1.36150990239759384081708049052394926548004150390625p87
; [HW: 1.36150990239759384081708049052394926548004150390625p87] 

; mpf : + 1628095861728548 87
; mpfd: + 1628095861728548 87 (2.10683e+026) class: Pos. norm. non-zero
; hwf : + 1628095861728548 87 (2.10683e+026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111011 #b0000111010111111111110110001110011000100010001100011)))
(assert (= y (fp #b0 #b10001010110 #b0101110010001011111010011011011111111010010100100100)))
(assert (= r (fp #b0 #b10001010110 #b0101110010001011111010011011011111111010010100100100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
