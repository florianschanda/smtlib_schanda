(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8934430722626542920039582895697094500064849853515625p560 {+ 4023709887318841 560 (7.14578e+168)}
; Y = 1.8483680996898554926843871726305224001407623291015625p-285 {+ 3820710257636249 -285 (2.97331e-086)}
; 1.8934430722626542920039582895697094500064849853515625p560 M 1.8483680996898554926843871726305224001407623291015625p-285 == 1.8934430722626542920039582895697094500064849853515625p560
; [HW: 1.8934430722626542920039582895697094500064849853515625p560] 

; mpf : + 4023709887318841 560
; mpfd: + 4023709887318841 560 (7.14578e+168) class: Pos. norm. non-zero
; hwf : + 4023709887318841 560 (7.14578e+168) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101111 #b1110010010111000101011110110100000110100101100111001)))
(assert (= y (fp #b0 #b01011100010 #b1101100100101110101001101101101100100011001110011001)))
(assert (= r (fp #b0 #b11000101111 #b1110010010111000101011110110100000110100101100111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
