(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.97683467861074202431836965843103826045989990234375p-725 {+ 4399272294593916 -725 (1.12001e-218)}
; Y = -1.0898961153766413278987101875827647745609283447265625p398 {- 404856111712297 398 (-7.03596e+119)}
; 1.97683467861074202431836965843103826045989990234375p-725 M -1.0898961153766413278987101875827647745609283447265625p398 == 1.97683467861074202431836965843103826045989990234375p-725
; [HW: 1.97683467861074202431836965843103826045989990234375p-725] 

; mpf : + 4399272294593916 -725
; mpfd: + 4399272294593916 -725 (1.12001e-218) class: Pos. norm. non-zero
; hwf : + 4399272294593916 -725 (1.12001e-218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101010 #b1111101000010001110101100110011000111011010101111100)))
(assert (= y (fp #b1 #b10110001101 #b0001011100000011011011101000101110010100100000101001)))
(assert (= r (fp #b0 #b00100101010 #b1111101000010001110101100110011000111011010101111100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
