(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9161877103671114408456332967034541070461273193359375p696 {+ 4126142631010751 696 (6.29963e+209)}
; Y = -1.3079442359835151687974530432256869971752166748046875p-135 {- 1386857546426251 -135 (-3.00289e-041)}
; 1.9161877103671114408456332967034541070461273193359375p696 M -1.3079442359835151687974530432256869971752166748046875p-135 == 1.9161877103671114408456332967034541070461273193359375p696
; [HW: 1.9161877103671114408456332967034541070461273193359375p696] 

; mpf : + 4126142631010751 696
; mpfd: + 4126142631010751 696 (6.29963e+209) class: Pos. norm. non-zero
; hwf : + 4126142631010751 696 (6.29963e+209) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110111 #b1110101010001011010001110001110100000110000110111111)))
(assert (= y (fp #b1 #b01101111000 #b0100111011010101011011101111011010001010011110001011)))
(assert (= r (fp #b0 #b11010110111 #b1110101010001011010001110001110100000110000110111111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
