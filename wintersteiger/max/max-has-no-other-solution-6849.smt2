(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3689813916392392645349218582850880920886993408203125p-653 {+ 1661744457893125 -653 (3.66278e-197)}
; Y = -1.315033005300846991048047129879705607891082763671875p-800 {- 1418782525282302 -800 (-1.97215e-241)}
; 1.3689813916392392645349218582850880920886993408203125p-653 M -1.315033005300846991048047129879705607891082763671875p-800 == 1.3689813916392392645349218582850880920886993408203125p-653
; [HW: 1.3689813916392392645349218582850880920886993408203125p-653] 

; mpf : + 1661744457893125 -653
; mpfd: + 1661744457893125 -653 (3.66278e-197) class: Pos. norm. non-zero
; hwf : + 1661744457893125 -653 (3.66278e-197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110010 #b0101111001110101100100001000000111101100010100000101)))
(assert (= y (fp #b1 #b00011011111 #b0101000010100110000000001100011011101101011111111110)))
(assert (= r (fp #b0 #b00101110010 #b0101111001110101100100001000000111101100010100000101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
