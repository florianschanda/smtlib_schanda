(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.449861323537318558152264813543297350406646728515625p-487 {- 2025995289051066 -487 (-3.62843e-147)}
; Y = -1.399670114590902070261790868244133889675140380859375p-899 {- 1799954179142710 -899 (-3.31177e-271)}
; -1.449861323537318558152264813543297350406646728515625p-487 M -1.399670114590902070261790868244133889675140380859375p-899 == -1.399670114590902070261790868244133889675140380859375p-899
; [HW: -1.399670114590902070261790868244133889675140380859375p-899] 

; mpf : - 1799954179142710 -899
; mpfd: - 1799954179142710 -899 (-3.31177e-271) class: Neg. norm. non-zero
; hwf : - 1799954179142710 -899 (-3.31177e-271) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011000 #b0111001100101010000111001001100001010011111110111010)))
(assert (= y (fp #b1 #b00001111100 #b0110011001010000110001111101011101011011010000110110)))
(assert (= r (fp #b1 #b00001111100 #b0110011001010000110001111101011101011011010000110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
