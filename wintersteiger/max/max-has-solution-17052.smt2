(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3437624429748817878049749197089113295078277587890625p-756 {- 1548168410085649 -756 (-3.54524e-228)}
; Y = 1.606376516811454546740378646063618361949920654296875p503 {+ 2730877055158286 503 (4.20664e+151)}
; -1.3437624429748817878049749197089113295078277587890625p-756 M 1.606376516811454546740378646063618361949920654296875p503 == 1.606376516811454546740378646063618361949920654296875p503
; [HW: 1.606376516811454546740378646063618361949920654296875p503] 

; mpf : + 2730877055158286 503
; mpfd: + 2730877055158286 503 (4.20664e+151) class: Pos. norm. non-zero
; hwf : + 2730877055158286 503 (4.20664e+151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001011 #b0101100000000000110100001100001000101011100100010001)))
(assert (= y (fp #b0 #b10111110110 #b1001101100111011011111011100110011000100100000001110)))
(assert (= r (fp #b0 #b10111110110 #b1001101100111011011111011100110011000100100000001110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
