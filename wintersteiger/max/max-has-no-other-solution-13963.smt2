(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.440481048989918466673998409532941877841949462890625p543 {- 1983750288094762 543 (-4.14758e+163)}
; Y = 1.3896192819180626099040409826557151973247528076171875p149 {+ 1754689252862547 149 (9.91665e+044)}
; -1.440481048989918466673998409532941877841949462890625p543 M 1.3896192819180626099040409826557151973247528076171875p149 == 1.3896192819180626099040409826557151973247528076171875p149
; [HW: 1.3896192819180626099040409826557151973247528076171875p149] 

; mpf : + 1754689252862547 149
; mpfd: + 1754689252862547 149 (9.91665e+044) class: Pos. norm. non-zero
; hwf : + 1754689252862547 149 (9.91665e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000011110 #b0111000011000011010111011011001111101011011000101010)))
(assert (= y (fp #b0 #b10010010100 #b0110001110111110000101101101100110111010101001010011)))
(assert (= r (fp #b0 #b10010010100 #b0110001110111110000101101101100110111010101001010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
