(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9594554921872167074781145856832154095172882080078125p208 {- 4321003397092925 208 (-8.06073e+062)}
; Y = 1.9269994803013867912255818737321533262729644775390625p-639 {+ 4174834514057969 -639 (8.44723e-193)}
; -1.9594554921872167074781145856832154095172882080078125p208 M 1.9269994803013867912255818737321533262729644775390625p-639 == 1.9269994803013867912255818737321533262729644775390625p-639
; [HW: 1.9269994803013867912255818737321533262729644775390625p-639] 

; mpf : + 4174834514057969 -639
; mpfd: + 4174834514057969 -639 (8.44723e-193) class: Pos. norm. non-zero
; hwf : + 4174834514057969 -639 (8.44723e-193) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001111 #b1111010110011110111000000000100011101001011000111101)))
(assert (= y (fp #b0 #b00110000000 #b1110110101001111110101101000001101001101101011110001)))
(assert (= r (fp #b0 #b00110000000 #b1110110101001111110101101000001101001101101011110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
