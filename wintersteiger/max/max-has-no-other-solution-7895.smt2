(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6240833891438735125944958781474269926548004150390625p-990 {- 2810621718796465 -990 (-1.55207e-298)}
; Y = -1.6607007877413053620330174453556537628173828125p69 {- 2975531821475136 69 (-9.80305e+020)}
; -1.6240833891438735125944958781474269926548004150390625p-990 M -1.6607007877413053620330174453556537628173828125p69 == -1.6240833891438735125944958781474269926548004150390625p-990
; [HW: -1.6240833891438735125944958781474269926548004150390625p-990] 

; mpf : - 2810621718796465 -990
; mpfd: - 2810621718796465 -990 (-1.55207e-298) class: Neg. norm. non-zero
; hwf : - 2810621718796465 -990 (-1.55207e-298) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000100001 #b1001111111000011111011011101001001011001100010110001)))
(assert (= y (fp #b1 #b10001000100 #b1010100100100011101011111101001111001010010101000000)))
(assert (= r (fp #b1 #b00000100001 #b1001111111000011111011011101001001011001100010110001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
