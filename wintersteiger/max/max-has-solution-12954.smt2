(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.812840426505411439705994780524633824825286865234375p1015 {+ 3660707841921446 1015 (6.3651e+305)}
; Y = -1.691299920999381978248266023001633584499359130859375p682 {- 3113338066614070 682 (-3.39373e+205)}
; 1.812840426505411439705994780524633824825286865234375p1015 M -1.691299920999381978248266023001633584499359130859375p682 == 1.812840426505411439705994780524633824825286865234375p1015
; [HW: 1.812840426505411439705994780524633824825286865234375p1015] 

; mpf : + 3660707841921446 1015
; mpfd: + 3660707841921446 1015 (6.3651e+305) class: Pos. norm. non-zero
; hwf : + 3660707841921446 1015 (6.3651e+305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111110110 #b1101000000010110010011110110100010110101000110100110)))
(assert (= y (fp #b1 #b11010101001 #b1011000011111001000010000001100001101011011100110110)))
(assert (= r (fp #b0 #b11111110110 #b1101000000010110010011110110100010110101000110100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
