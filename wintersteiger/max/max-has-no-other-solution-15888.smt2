(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.80578571038132995596470209420658648014068603515625p243 {- 3628936225013828 243 (-2.55244e+073)}
; Y = 1.134715876407570878114938750513829290866851806640625p479 {+ 606706370790026 479 (1.77115e+144)}
; -1.80578571038132995596470209420658648014068603515625p243 M 1.134715876407570878114938750513829290866851806640625p479 == 1.134715876407570878114938750513829290866851806640625p479
; [HW: 1.134715876407570878114938750513829290866851806640625p479] 

; mpf : + 606706370790026 479
; mpfd: + 606706370790026 479 (1.77115e+144) class: Pos. norm. non-zero
; hwf : + 606706370790026 479 (1.77115e+144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110010 #b1100111001000111111110001110100110101100000001000100)))
(assert (= y (fp #b0 #b10111011110 #b0010001001111100101111010101101101101100001010001010)))
(assert (= r (fp #b0 #b10111011110 #b0010001001111100101111010101101101101100001010001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
