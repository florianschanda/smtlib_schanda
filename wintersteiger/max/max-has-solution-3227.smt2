(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.40128291319275444237746341968886554241180419921875p310 {+ 1807217578325036 310 (2.92297e+093)}
; Y = -1.673265820794287872530503591406159102916717529296875p663 {- 3032119699650446 663 (-6.40401e+199)}
; 1.40128291319275444237746341968886554241180419921875p310 M -1.673265820794287872530503591406159102916717529296875p663 == 1.40128291319275444237746341968886554241180419921875p310
; [HW: 1.40128291319275444237746341968886554241180419921875p310] 

; mpf : + 1807217578325036 310
; mpfd: + 1807217578325036 310 (2.92297e+093) class: Pos. norm. non-zero
; hwf : + 1807217578325036 310 (2.92297e+093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110101 #b0110011010111010011110100001110010011011010000101100)))
(assert (= y (fp #b1 #b11010010110 #b1010110001011011001001100001100111010011011110001110)))
(assert (= r (fp #b0 #b10100110101 #b0110011010111010011110100001110010011011010000101100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
