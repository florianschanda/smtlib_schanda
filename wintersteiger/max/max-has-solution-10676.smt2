(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.681109678019442554841589299030601978302001953125p-865 {+ 3067445292126800 -865 (6.8336e-261)}
; Y = -1.9777833396214343775199040464940480887889862060546875p181 {- 4403544683968171 181 (-6.06189e+054)}
; 1.681109678019442554841589299030601978302001953125p-865 M -1.9777833396214343775199040464940480887889862060546875p181 == 1.681109678019442554841589299030601978302001953125p-865
; [HW: 1.681109678019442554841589299030601978302001953125p-865] 

; mpf : + 3067445292126800 -865
; mpfd: + 3067445292126800 -865 (6.8336e-261) class: Pos. norm. non-zero
; hwf : + 3067445292126800 -865 (6.8336e-261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011110 #b1010111001011101001101000011000000010101001001010000)))
(assert (= y (fp #b1 #b10010110100 #b1111101001010000000000100100101000111111011010101011)))
(assert (= r (fp #b0 #b00010011110 #b1010111001011101001101000011000000010101001001010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
