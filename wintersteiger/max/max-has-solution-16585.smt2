(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.76302130311276084029259436647407710552215576171875p724 {- 3436342456374380 724 (-1.55587e+218)}
; Y = 1.319579389422427251332692321739159524440765380859375p26 {+ 1439257619118134 26 (8.85555e+007)}
; -1.76302130311276084029259436647407710552215576171875p724 M 1.319579389422427251332692321739159524440765380859375p26 == 1.319579389422427251332692321739159524440765380859375p26
; [HW: 1.319579389422427251332692321739159524440765380859375p26] 

; mpf : + 1439257619118134 26
; mpfd: + 1439257619118134 26 (8.85555e+007) class: Pos. norm. non-zero
; hwf : + 1439257619118134 26 (8.85555e+007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011010011 #b1100001101010101010111010011011100000101010001101100)))
(assert (= y (fp #b0 #b10000011001 #b0101000111001111111101000111001000001011100000110110)))
(assert (= r (fp #b0 #b10000011001 #b0101000111001111111101000111001000001011100000110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
