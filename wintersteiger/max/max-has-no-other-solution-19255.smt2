(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.025517076793025506020740067469887435436248779296875p-22 {- 114918697536654 -22 (-2.44502e-007)}
; Y = 1.2326380560466188018864386322093196213245391845703125p289 {+ 1047708662523749 289 (1.22604e+087)}
; -1.025517076793025506020740067469887435436248779296875p-22 M 1.2326380560466188018864386322093196213245391845703125p289 == 1.2326380560466188018864386322093196213245391845703125p289
; [HW: 1.2326380560466188018864386322093196213245391845703125p289] 

; mpf : + 1047708662523749 289
; mpfd: + 1047708662523749 289 (1.22604e+087) class: Pos. norm. non-zero
; hwf : + 1047708662523749 289 (1.22604e+087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111101001 #b0000011010001000010010011000001001010000110010001110)))
(assert (= y (fp #b0 #b10100100000 #b0011101110001110001010101110101010000110011101100101)))
(assert (= r (fp #b0 #b10100100000 #b0011101110001110001010101110101010000110011101100101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
