(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.46496607502272269130116910673677921295166015625p777 {+ 2094021042212256 777 (1.16449e+234)}
; Y = 1.989896454031785832938794555957429111003875732421875p974 {+ 4458097301512926 974 (3.17721e+293)}
; 1.46496607502272269130116910673677921295166015625p777 M 1.989896454031785832938794555957429111003875732421875p974 == 1.989896454031785832938794555957429111003875732421875p974
; [HW: 1.989896454031785832938794555957429111003875732421875p974] 

; mpf : + 4458097301512926 974
; mpfd: + 4458097301512926 974 (3.17721e+293) class: Pos. norm. non-zero
; hwf : + 4458097301512926 974 (3.17721e+293) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001000 #b0111011100001000000001000100010111111000110110100000)))
(assert (= y (fp #b0 #b11111001101 #b1111110101101001110110101010000001111110001011011110)))
(assert (= r (fp #b0 #b11111001101 #b1111110101101001110110101010000001111110001011011110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
