(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1304675411939728579824304688372649252414703369140625p864 {+ 587573569905121 864 (1.39051e+260)}
; Y = -1.472389625609789920446246469509787857532501220703125p483 {- 2127453741869938 483 (-3.67714e+145)}
; 1.1304675411939728579824304688372649252414703369140625p864 M -1.472389625609789920446246469509787857532501220703125p483 == 1.1304675411939728579824304688372649252414703369140625p864
; [HW: 1.1304675411939728579824304688372649252414703369140625p864] 

; mpf : + 587573569905121 864
; mpfd: + 587573569905121 864 (1.39051e+260) class: Pos. norm. non-zero
; hwf : + 587573569905121 864 (1.39051e+260) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011111 #b0010000101100110010100100001111010011110000111100001)))
(assert (= y (fp #b1 #b10111100010 #b0111100011101110100001101100100011110110101101110010)))
(assert (= r (fp #b0 #b11101011111 #b0010000101100110010100100001111010011110000111100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
