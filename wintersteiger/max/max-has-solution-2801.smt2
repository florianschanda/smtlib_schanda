(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.51373813351091346390830949530936777591705322265625p117 {+ 2313670866645764 117 (2.51513e+035)}
; Y = 1.920935922993994626750691168126650154590606689453125p455 {+ 4147526679627858 455 (1.78715e+137)}
; 1.51373813351091346390830949530936777591705322265625p117 M 1.920935922993994626750691168126650154590606689453125p455 == 1.920935922993994626750691168126650154590606689453125p455
; [HW: 1.920935922993994626750691168126650154590606689453125p455] 

; mpf : + 4147526679627858 455
; mpfd: + 4147526679627858 455 (1.78715e+137) class: Pos. norm. non-zero
; hwf : + 4147526679627858 455 (1.78715e+137) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001110100 #b1000001110000100010101111010001000100011001100000100)))
(assert (= y (fp #b0 #b10111000110 #b1110101111000010011101001110011011111000100001010010)))
(assert (= r (fp #b0 #b10111000110 #b1110101111000010011101001110011011111000100001010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
