(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1104143122841545476831015548668801784515380859375p-467 {+ 497261855659288 -467 (2.91392e-141)}
; Y = 1.207950533072628562791805961751379072666168212890625p-58 {+ 936525943257386 -58 (4.19092e-018)}
; 1.1104143122841545476831015548668801784515380859375p-467 M 1.207950533072628562791805961751379072666168212890625p-58 == 1.207950533072628562791805961751379072666168212890625p-58
; [HW: 1.207950533072628562791805961751379072666168212890625p-58] 

; mpf : + 936525943257386 -58
; mpfd: + 936525943257386 -58 (4.19092e-018) class: Pos. norm. non-zero
; hwf : + 936525943257386 -58 (4.19092e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101100 #b0001110001000100000111001100010001000101010100011000)))
(assert (= y (fp #b0 #b01111000101 #b0011010100111100001111110000001010111011100100101010)))
(assert (= r (fp #b0 #b01111000101 #b0011010100111100001111110000001010111011100100101010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
