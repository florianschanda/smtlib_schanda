(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1758218384129108802227392516215331852436065673828125p793 {+ 791831165959981 793 (6.12531e+238)}
; Y = -1.151708534046732790301348359207622706890106201171875p533 {- 683234497401790 533 (-3.2384e+160)}
; 1.1758218384129108802227392516215331852436065673828125p793 M -1.151708534046732790301348359207622706890106201171875p533 == 1.1758218384129108802227392516215331852436065673828125p793
; [HW: 1.1758218384129108802227392516215331852436065673828125p793] 

; mpf : + 791831165959981 793
; mpfd: + 791831165959981 793 (6.12531e+238) class: Pos. norm. non-zero
; hwf : + 791831165959981 793 (6.12531e+238) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011000 #b0010110100000010101010001111010111100111111100101101)))
(assert (= y (fp #b1 #b11000010100 #b0010011011010110010111101101100001000001001110111110)))
(assert (= r (fp #b0 #b11100011000 #b0010110100000010101010001111010111100111111100101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
