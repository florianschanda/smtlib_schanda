(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3026335901626124869068235057056881487369537353515625p638 {- 1362940523886137 638 (-1.4858e+192)}
; Y = 1.936315057447167031767776279593817889690399169921875p435 {+ 4216788143820446 435 (1.718e+131)}
; -1.3026335901626124869068235057056881487369537353515625p638 M 1.936315057447167031767776279593817889690399169921875p435 == 1.936315057447167031767776279593817889690399169921875p435
; [HW: 1.936315057447167031767776279593817889690399169921875p435] 

; mpf : + 4216788143820446 435
; mpfd: + 4216788143820446 435 (1.718e+131) class: Pos. norm. non-zero
; hwf : + 4216788143820446 435 (1.718e+131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111101 #b0100110101111001011001010001110001101011011000111001)))
(assert (= y (fp #b0 #b10110110010 #b1110111110110010010101111111011001111100111010011110)))
(assert (= r (fp #b0 #b10110110010 #b1110111110110010010101111111011001111100111010011110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
