(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.884302866774012930051185321644879877567291259765625p-222 {- 3982546061286106 -222 (-2.79571e-067)}
; Y = 1.1905676702484828677341965885716490447521209716796875p117 {+ 858240488719931 117 (1.97817e+035)}
; -1.884302866774012930051185321644879877567291259765625p-222 M 1.1905676702484828677341965885716490447521209716796875p117 == 1.1905676702484828677341965885716490447521209716796875p117
; [HW: 1.1905676702484828677341965885716490447521209716796875p117] 

; mpf : + 858240488719931 117
; mpfd: + 858240488719931 117 (1.97817e+035) class: Pos. norm. non-zero
; hwf : + 858240488719931 117 (1.97817e+035) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100100001 #b1110001001100001101011000011010010001101101011011010)))
(assert (= y (fp #b0 #b10001110100 #b0011000011001001000010101111011101100100011000111011)))
(assert (= r (fp #b0 #b10001110100 #b0011000011001001000010101111011101100100011000111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
