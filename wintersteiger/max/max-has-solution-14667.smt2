(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -0.090323203471537549802405919763259589672088623046875p-1022 {- 406779545497326 -1023 (-2.00976e-309)}
; Y = -1.2914478241670368507953980952152051031589508056640625p798 {- 1312564312316609 798 (-2.15285e+240)}
; -0.090323203471537549802405919763259589672088623046875p-1022 M -1.2914478241670368507953980952152051031589508056640625p798 == -0.090323203471537549802405919763259589672088623046875p-1022
; [HW: -0.090323203471537549802405919763259589672088623046875p-1022] 

; mpf : - 406779545497326 -1023
; mpfd: - 406779545497326 -1023 (-2.00976e-309) class: Neg. denorm.
; hwf : - 406779545497326 -1023 (-2.00976e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0001011100011111011010111110010011111010111011101110)))
(assert (= y (fp #b1 #b11100011101 #b0100101010011100010100110001100101001001101011000001)))
(assert (= r (fp #b1 #b00000000000 #b0001011100011111011010111110010011111010111011101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
