(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.838483627289644317670536111108958721160888671875p529 {+ 3776194551417904 529 (3.23093e+159)}
; Y = 1.979874765280063453332104472792707383632659912109375p567 {+ 4412963627785046 567 (9.56413e+170)}
; 1.838483627289644317670536111108958721160888671875p529 M 1.979874765280063453332104472792707383632659912109375p567 == 1.979874765280063453332104472792707383632659912109375p567
; [HW: 1.979874765280063453332104472792707383632659912109375p567] 

; mpf : + 4412963627785046 567
; mpfd: + 4412963627785046 567 (9.56413e+170) class: Pos. norm. non-zero
; hwf : + 4412963627785046 567 (9.56413e+170) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010000 #b1101011010100110110111001110110101110000110000110000)))
(assert (= y (fp #b0 #b11000110110 #b1111101011011001000100101001011100001101101101010110)))
(assert (= r (fp #b0 #b11000110110 #b1111101011011001000100101001011100001101101101010110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
