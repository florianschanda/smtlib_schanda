(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.63928639044920831935314708971418440341949462890625p125 {- 2879089949810084 125 (-6.97275e+037)}
; Y = 1.4626909518313120361909795974497683346271514892578125p-45 {+ 2083774798255197 -45 (4.15722e-014)}
; -1.63928639044920831935314708971418440341949462890625p125 M 1.4626909518313120361909795974497683346271514892578125p-45 == 1.4626909518313120361909795974497683346271514892578125p-45
; [HW: 1.4626909518313120361909795974497683346271514892578125p-45] 

; mpf : + 2083774798255197 -45
; mpfd: + 2083774798255197 -45 (4.15722e-014) class: Pos. norm. non-zero
; hwf : + 2083774798255197 -45 (4.15722e-014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001111100 #b1010001110101000010001011101101111000001110110100100)))
(assert (= y (fp #b0 #b01111010010 #b0111011001110010111010100000101001000101010001011101)))
(assert (= r (fp #b0 #b01111010010 #b0111011001110010111010100000101001000101010001011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
