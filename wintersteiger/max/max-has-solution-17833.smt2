(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1131027697117155117467746094916947185993194580078125p488 {+ 509369591528253 488 (8.89556e+146)}
; Y = 1.4786677723303254250453164786449633538722991943359375p870 {+ 2155728001101119 870 (1.16404e+262)}
; 1.1131027697117155117467746094916947185993194580078125p488 M 1.4786677723303254250453164786449633538722991943359375p870 == 1.4786677723303254250453164786449633538722991943359375p870
; [HW: 1.4786677723303254250453164786449633538722991943359375p870] 

; mpf : + 2155728001101119 870
; mpfd: + 2155728001101119 870 (1.16404e+262) class: Pos. norm. non-zero
; hwf : + 2155728001101119 870 (1.16404e+262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100111 #b0001110011110100010011011001100011111111101100111101)))
(assert (= y (fp #b0 #b11101100101 #b0111101010001001111110001001101111001110110100111111)))
(assert (= r (fp #b0 #b11101100101 #b0111101010001001111110001001101111001110110100111111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
