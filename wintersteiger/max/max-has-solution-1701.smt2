(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3265163824854686591692143338150344789028167724609375p682 {+ 1470499058491919 682 (2.66176e+205)}
; Y = 1.022195518777202938309756063972599804401397705078125p392 {+ 99959730094306 392 (1.03108e+118)}
; 1.3265163824854686591692143338150344789028167724609375p682 M 1.022195518777202938309756063972599804401397705078125p392 == 1.3265163824854686591692143338150344789028167724609375p682
; [HW: 1.3265163824854686591692143338150344789028167724609375p682] 

; mpf : + 1470499058491919 682
; mpfd: + 1470499058491919 682 (2.66176e+205) class: Pos. norm. non-zero
; hwf : + 1470499058491919 682 (2.66176e+205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101001 #b0101001110010110100100111110000001100010001000001111)))
(assert (= y (fp #b0 #b10110000111 #b0000010110101110100110110000001101000100000011100010)))
(assert (= r (fp #b0 #b11010101001 #b0101001110010110100100111110000001100010001000001111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
