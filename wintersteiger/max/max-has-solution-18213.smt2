(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1277065380425554952381617113132961094379425048828125p247 {- 575139117141229 247 (-2.55038e+074)}
; Y = 1.969049408336166262500910306698642671108245849609375p641 {+ 4364210554286358 641 (1.79673e+193)}
; -1.1277065380425554952381617113132961094379425048828125p247 M 1.969049408336166262500910306698642671108245849609375p641 == 1.969049408336166262500910306698642671108245849609375p641
; [HW: 1.969049408336166262500910306698642671108245849609375p641] 

; mpf : + 4364210554286358 641
; mpfd: + 4364210554286358 641 (1.79673e+193) class: Pos. norm. non-zero
; hwf : + 4364210554286358 641 (1.79673e+193) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110110 #b0010000010110001011000000010110001100000110011101101)))
(assert (= y (fp #b0 #b11010000000 #b1111100000010011100111110011110100000011000100010110)))
(assert (= r (fp #b0 #b11010000000 #b1111100000010011100111110011110100000011000100010110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
