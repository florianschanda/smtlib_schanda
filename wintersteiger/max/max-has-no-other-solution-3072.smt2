(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.91169638766645899607965475297532975673675537109375p503 {+ 4105915511769692 503 (5.00618e+151)}
; Y = -1.406666026736264729635195180890150368213653564453125p620 {- 1831460966473682 620 (-6.12052e+186)}
; 1.91169638766645899607965475297532975673675537109375p503 M -1.406666026736264729635195180890150368213653564453125p620 == 1.91169638766645899607965475297532975673675537109375p503
; [HW: 1.91169638766645899607965475297532975673675537109375p503] 

; mpf : + 4105915511769692 503
; mpfd: + 4105915511769692 503 (5.00618e+151) class: Pos. norm. non-zero
; hwf : + 4105915511769692 503 (5.00618e+151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110110 #b1110100101100100111011110011100011101000101001011100)))
(assert (= y (fp #b1 #b11001101011 #b0110100000011011010000111100010100111001111111010010)))
(assert (= r (fp #b0 #b10111110110 #b1110100101100100111011110011100011101000101001011100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
