(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7630011701751759911616090903407894074916839599609375p-774 {+ 3436251785684175 -774 (1.77434e-233)}
; Y = -1.830145007201663620577392066479660570621490478515625p-979 {- 3738640745096890 -979 (-3.58195e-295)}
; 1.7630011701751759911616090903407894074916839599609375p-774 M -1.830145007201663620577392066479660570621490478515625p-979 == 1.7630011701751759911616090903407894074916839599609375p-774
; [HW: 1.7630011701751759911616090903407894074916839599609375p-774] 

; mpf : + 3436251785684175 -774
; mpfd: + 3436251785684175 -774 (1.77434e-233) class: Pos. norm. non-zero
; hwf : + 3436251785684175 -774 (1.77434e-233) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111001 #b1100001101010100000010110111000010110110010011001111)))
(assert (= y (fp #b1 #b00000101100 #b1101010010000100011000100001100011011110011010111010)))
(assert (= r (fp #b0 #b00011111001 #b1100001101010100000010110111000010110110010011001111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
