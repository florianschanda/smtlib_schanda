(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1682135066677137302804112550802528858184814453125p-820 {- 757566285947400 -820 (-1.67081e-247)}
; Y = 1.7537512968978117289253759736311621963977813720703125p326 {+ 3394594059839013 326 (2.39743e+098)}
; -1.1682135066677137302804112550802528858184814453125p-820 M 1.7537512968978117289253759736311621963977813720703125p326 == 1.7537512968978117289253759736311621963977813720703125p326
; [HW: 1.7537512968978117289253759736311621963977813720703125p326] 

; mpf : + 3394594059839013 326
; mpfd: + 3394594059839013 326 (2.39743e+098) class: Pos. norm. non-zero
; hwf : + 3394594059839013 326 (2.39743e+098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001011 #b0010101100010000000010100101010111100010001000001000)))
(assert (= y (fp #b0 #b10101000101 #b1100000011110101110110000101000101111110011000100101)))
(assert (= r (fp #b0 #b10101000101 #b1100000011110101110110000101000101111110011000100101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
