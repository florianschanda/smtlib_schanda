(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7916287584023005141631301739835180342197418212890625p515 {- 3565178981356369 515 (-1.92175e+155)}
; Y = -1.039468984482012192671618322492577135562896728515625p196 {- 177752503805882 196 (-1.04398e+059)}
; -1.7916287584023005141631301739835180342197418212890625p515 M -1.039468984482012192671618322492577135562896728515625p196 == -1.039468984482012192671618322492577135562896728515625p196
; [HW: -1.039468984482012192671618322492577135562896728515625p196] 

; mpf : - 177752503805882 196
; mpfd: - 177752503805882 196 (-1.04398e+059) class: Neg. norm. non-zero
; hwf : - 177752503805882 196 (-1.04398e+059) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000000010 #b1100101010101000001011101010101111101001001101010001)))
(assert (= y (fp #b1 #b10011000011 #b0000101000011010101000111010110110001110011110111010)))
(assert (= r (fp #b1 #b10011000011 #b0000101000011010101000111010110110001110011110111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
