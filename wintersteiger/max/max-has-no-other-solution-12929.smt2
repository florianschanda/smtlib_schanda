(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9566337147371768434567229633103124797344207763671875p121 {+ 4308295241220403 121 (5.20162e+036)}
; Y = -1.757850283285729009463693728321231901645660400390625p743 {- 3413054253408234 743 (-8.13334e+223)}
; 1.9566337147371768434567229633103124797344207763671875p121 M -1.757850283285729009463693728321231901645660400390625p743 == 1.9566337147371768434567229633103124797344207763671875p121
; [HW: 1.9566337147371768434567229633103124797344207763671875p121] 

; mpf : + 4308295241220403 121
; mpfd: + 4308295241220403 121 (5.20162e+036) class: Pos. norm. non-zero
; hwf : + 4308295241220403 121 (5.20162e+036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111000 #b1111010011100101111100100111011100001100000100110011)))
(assert (= y (fp #b1 #b11011100110 #b1100001000000010011110011110010111111001111111101010)))
(assert (= r (fp #b0 #b10001111000 #b1111010011100101111100100111011100001100000100110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
