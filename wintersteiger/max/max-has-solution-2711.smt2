(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.332504161441899537265953767928294837474822998046875p-851 {- 1497465617568878 -851 (-8.87447e-257)}
; Y = 1.6258445865693940124430127980303950607776641845703125p-800 {+ 2818553446865765 -800 (2.43827e-241)}
; -1.332504161441899537265953767928294837474822998046875p-851 M 1.6258445865693940124430127980303950607776641845703125p-800 == 1.6258445865693940124430127980303950607776641845703125p-800
; [HW: 1.6258445865693940124430127980303950607776641845703125p-800] 

; mpf : + 2818553446865765 -800
; mpfd: + 2818553446865765 -800 (2.43827e-241) class: Pos. norm. non-zero
; hwf : + 2818553446865765 -800 (2.43827e-241) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010101100 #b0101010100011110111111100010001100101101010001101110)))
(assert (= y (fp #b0 #b00011011111 #b1010000000110111010110011100111110110001101101100101)))
(assert (= r (fp #b0 #b00011011111 #b1010000000110111010110011100111110110001101101100101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
