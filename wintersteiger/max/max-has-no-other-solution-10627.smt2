(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1696281145515972088588796395924873650074005126953125p-413 {+ 763937113486133 -413 (5.52917e-125)}
; Y = 1.386897218315391366871835998608730733394622802734375p169 {+ 1742430168235878 169 (1.0378e+051)}
; 1.1696281145515972088588796395924873650074005126953125p-413 M 1.386897218315391366871835998608730733394622802734375p169 == 1.386897218315391366871835998608730733394622802734375p169
; [HW: 1.386897218315391366871835998608730733394622802734375p169] 

; mpf : + 1742430168235878 169
; mpfd: + 1742430168235878 169 (1.0378e+051) class: Pos. norm. non-zero
; hwf : + 1742430168235878 169 (1.0378e+051) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100010 #b0010101101101100101111111000010001111011001100110101)))
(assert (= y (fp #b0 #b10010101000 #b0110001100001011101100100011001110010011111101100110)))
(assert (= r (fp #b0 #b10010101000 #b0110001100001011101100100011001110010011111101100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
