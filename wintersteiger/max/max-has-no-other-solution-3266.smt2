(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.905846258325805120392715252819471061229705810546875p-681 {- 4079568871451054 -681 (-1.89959e-205)}
; Y = 1.2448338446596280970624093242804519832134246826171875p143 {+ 1102633611576787 143 (1.38804e+043)}
; -1.905846258325805120392715252819471061229705810546875p-681 M 1.2448338446596280970624093242804519832134246826171875p143 == 1.2448338446596280970624093242804519832134246826171875p143
; [HW: 1.2448338446596280970624093242804519832134246826171875p143] 

; mpf : + 1102633611576787 143
; mpfd: + 1102633611576787 143 (1.38804e+043) class: Pos. norm. non-zero
; hwf : + 1102633611576787 143 (1.38804e+043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101010110 #b1110011111100101100010100101011010110110100110101110)))
(assert (= y (fp #b0 #b10010001110 #b0011111010101101011011100100101111000100010111010011)))
(assert (= r (fp #b0 #b10010001110 #b0011111010101101011011100100101111000100010111010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
