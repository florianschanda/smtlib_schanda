(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2826869439099291003714142789249308407306671142578125p-60 {- 1273108815255261 -60 (-1.11255e-018)}
; Y = -1.3358565809834652693410816937102936208248138427734375p527 {- 1512563572967063 527 (-5.86905e+158)}
; -1.2826869439099291003714142789249308407306671142578125p-60 M -1.3358565809834652693410816937102936208248138427734375p527 == -1.2826869439099291003714142789249308407306671142578125p-60
; [HW: -1.2826869439099291003714142789249308407306671142578125p-60] 

; mpf : - 1273108815255261 -60
; mpfd: - 1273108815255261 -60 (-1.11255e-018) class: Neg. norm. non-zero
; hwf : - 1273108815255261 -60 (-1.11255e-018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111000011 #b0100100001011110001010111110101100011001011011011101)))
(assert (= y (fp #b1 #b11000001110 #b0101010111111010101100100110011101111000011010010111)))
(assert (= r (fp #b1 #b01111000011 #b0100100001011110001010111110101100011001011011011101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
