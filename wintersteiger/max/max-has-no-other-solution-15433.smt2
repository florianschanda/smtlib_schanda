(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1318497628325747683675217558629810810089111328125p180 {- 593798542761672 180 (-1.73455e+054)}
; Y = -1.0705482737801086390305727036320604383945465087890625p-182 {- 317721179507729 -182 (-1.74641e-055)}
; -1.1318497628325747683675217558629810810089111328125p180 M -1.0705482737801086390305727036320604383945465087890625p-182 == -1.0705482737801086390305727036320604383945465087890625p-182
; [HW: -1.0705482737801086390305727036320604383945465087890625p-182] 

; mpf : - 317721179507729 -182
; mpfd: - 317721179507729 -182 (-1.74641e-055) class: Neg. norm. non-zero
; hwf : - 317721179507729 -182 (-1.74641e-055) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110011 #b0010000111000000111001111111001101011001111011001000)))
(assert (= y (fp #b1 #b01101001001 #b0001001000001111011100111010000010101100110000010001)))
(assert (= r (fp #b1 #b01101001001 #b0001001000001111011100111010000010101100110000010001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
