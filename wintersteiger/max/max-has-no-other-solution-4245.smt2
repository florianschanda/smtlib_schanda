(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3023067759127846532152261715964414179325103759765625p414 {+ 1361468683352393 414 (5.50975e+124)}
; Y = -1.315143712722318003471855263342149555683135986328125p53 {- 1419281107184386 53 (-1.18458e+016)}
; 1.3023067759127846532152261715964414179325103759765625p414 M -1.315143712722318003471855263342149555683135986328125p53 == 1.3023067759127846532152261715964414179325103759765625p414
; [HW: 1.3023067759127846532152261715964414179325103759765625p414] 

; mpf : + 1361468683352393 414
; mpfd: + 1361468683352393 414 (5.50975e+124) class: Pos. norm. non-zero
; hwf : + 1361468683352393 414 (5.50975e+124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011101 #b0100110101100011111110100001001111100111100101001001)))
(assert (= y (fp #b1 #b10000110100 #b0101000010101101010000100010001110101110101100000010)))
(assert (= r (fp #b0 #b10110011101 #b0100110101100011111110100001001111100111100101001001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
