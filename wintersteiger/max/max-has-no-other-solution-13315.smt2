(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.425159052683669269612209973274730145931243896484375p855 {+ 1914746151239366 855 (3.42381e+257)}
; Y = 1.0992546148245050385838794682058505713939666748046875p-149 {+ 447003046338443 -149 (1.54038e-045)}
; 1.425159052683669269612209973274730145931243896484375p855 M 1.0992546148245050385838794682058505713939666748046875p-149 == 1.425159052683669269612209973274730145931243896484375p855
; [HW: 1.425159052683669269612209973274730145931243896484375p855] 

; mpf : + 1914746151239366 855
; mpfd: + 1914746151239366 855 (3.42381e+257) class: Pos. norm. non-zero
; hwf : + 1914746151239366 855 (3.42381e+257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101010110 #b0110110011010111001110010100001011011111111011000110)))
(assert (= y (fp #b0 #b01101101010 #b0001100101101000110000000001110010100101111110001011)))
(assert (= r (fp #b0 #b11101010110 #b0110110011010111001110010100001011011111111011000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
