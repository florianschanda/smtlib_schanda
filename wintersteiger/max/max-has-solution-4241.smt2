(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.815058016606385660196565368096344172954559326171875p-108 {+ 3670694979873854 -108 (5.59308e-033)}
; Y = -1.8456056834074292538616646197624504566192626953125p315 {- 3808269440696072 315 (-1.23193e+095)}
; 1.815058016606385660196565368096344172954559326171875p-108 M -1.8456056834074292538616646197624504566192626953125p315 == 1.815058016606385660196565368096344172954559326171875p-108
; [HW: 1.815058016606385660196565368096344172954559326171875p-108] 

; mpf : + 3670694979873854 -108
; mpfd: + 3670694979873854 -108 (5.59308e-033) class: Pos. norm. non-zero
; hwf : + 3670694979873854 -108 (5.59308e-033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010011 #b1101000010100111101001000110010110101010110000111110)))
(assert (= y (fp #b1 #b10100111010 #b1101100001111001100111010011001110001011111100001000)))
(assert (= r (fp #b0 #b01110010011 #b1101000010100111101001000110010110101010110000111110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
