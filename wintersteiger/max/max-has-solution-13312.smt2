(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2293141746879248099588721743202768266201019287109375p-770 {+ 1032739231675311 -770 (1.97955e-232)}
; Y = 1.318753717504562050777394688338972628116607666015625p428 {+ 1435539123376506 428 (9.14117e+128)}
; 1.2293141746879248099588721743202768266201019287109375p-770 M 1.318753717504562050777394688338972628116607666015625p428 == 1.318753717504562050777394688338972628116607666015625p428
; [HW: 1.318753717504562050777394688338972628116607666015625p428] 

; mpf : + 1435539123376506 428
; mpfd: + 1435539123376506 428 (9.14117e+128) class: Pos. norm. non-zero
; hwf : + 1435539123376506 428 (9.14117e+128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011111101 #b0011101010110100010101010111000011001011001110101111)))
(assert (= y (fp #b0 #b10110101011 #b0101000110011001110101111111100000101001000101111010)))
(assert (= r (fp #b0 #b10110101011 #b0101000110011001110101111111100000101001000101111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
