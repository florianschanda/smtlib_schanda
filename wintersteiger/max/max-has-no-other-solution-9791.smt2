(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1488568851071321308410233541508205235004425048828125p-649 {+ 670391812300013 -649 (4.91812e-196)}
; Y = 1.254197719920820741634770456585101783275604248046875p714 {+ 1144804756713838 714 (1.08089e+215)}
; 1.1488568851071321308410233541508205235004425048828125p-649 M 1.254197719920820741634770456585101783275604248046875p714 == 1.254197719920820741634770456585101783275604248046875p714
; [HW: 1.254197719920820741634770456585101783275604248046875p714] 

; mpf : + 1144804756713838 714
; mpfd: + 1144804756713838 714 (1.08089e+215) class: Pos. norm. non-zero
; hwf : + 1144804756713838 714 (1.08089e+215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110110 #b0010011000011011011111000001110101010001110011101101)))
(assert (= y (fp #b0 #b11011001001 #b0100000100010011000110100000110111000111000101101110)))
(assert (= r (fp #b0 #b11011001001 #b0100000100010011000110100000110111000111000101101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
