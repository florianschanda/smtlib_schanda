(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -0.5681406686729670862945340559235773980617523193359375p-1022 {- 2558678103729599 -1023 (-1.26415e-308)}
; Y = 1.281283266982581547921427045366726815700531005859375p-758 {+ 1266787216368310 -758 (8.45101e-229)}
; -0.5681406686729670862945340559235773980617523193359375p-1022 M 1.281283266982581547921427045366726815700531005859375p-758 == 1.281283266982581547921427045366726815700531005859375p-758
; [HW: 1.281283266982581547921427045366726815700531005859375p-758] 

; mpf : + 1266787216368310 -758
; mpfd: + 1266787216368310 -758 (8.45101e-229) class: Pos. norm. non-zero
; hwf : + 1266787216368310 -758 (8.45101e-229) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1001000101110001101010101011011101111010010110111111)))
(assert (= y (fp #b0 #b00100001001 #b0100100000000010001011100010000010011010001010110110)))
(assert (= r (fp #b0 #b00100001001 #b0100100000000010001011100010000010011010001010110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
