(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2451317259411798232804358121939003467559814453125p828 {+ 1103975149605384 828 (2.2287e+249)}
; Y = -1.4047976451614203607931585793267004191875457763671875p140 {- 1823046523909427 140 (-1.958e+042)}
; 1.2451317259411798232804358121939003467559814453125p828 M -1.4047976451614203607931585793267004191875457763671875p140 == 1.2451317259411798232804358121939003467559814453125p828
; [HW: 1.2451317259411798232804358121939003467559814453125p828] 

; mpf : + 1103975149605384 828
; mpfd: + 1103975149605384 828 (2.2287e+249) class: Pos. norm. non-zero
; hwf : + 1103975149605384 828 (2.2287e+249) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111011 #b0011111011000000111100111110101000100001001000001000)))
(assert (= y (fp #b1 #b10010001011 #b0110011110100000110100011000011101110111010100110011)))
(assert (= r (fp #b0 #b11100111011 #b0011111011000000111100111110101000100001001000001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
