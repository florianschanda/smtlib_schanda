(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8009731869448850627435376736684702336788177490234375p-365 {- 3607262546258743 -365 (-2.3964e-110)}
; Y = -1.443724361169321124265252365148626267910003662109375p-984 {- 1998356867617366 -984 (-8.83016e-297)}
; -1.8009731869448850627435376736684702336788177490234375p-365 M -1.443724361169321124265252365148626267910003662109375p-984 == -1.443724361169321124265252365148626267910003662109375p-984
; [HW: -1.443724361169321124265252365148626267910003662109375p-984] 

; mpf : - 1998356867617366 -984
; mpfd: - 1998356867617366 -984 (-8.83016e-297) class: Neg. norm. non-zero
; hwf : - 1998356867617366 -984 (-8.83016e-297) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010010 #b1100110100001100100101000010101011100110101100110111)))
(assert (= y (fp #b1 #b00000100111 #b0111000110010111111010110111001110101001001001010110)))
(assert (= r (fp #b1 #b00000100111 #b0111000110010111111010110111001110101001001001010110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
