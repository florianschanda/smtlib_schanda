(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.02325531123281532330793197616003453731536865234375p237 {+ 104732611002492 237 (2.25992e+071)}
; Y = 1.5941174032327065646086339256726205348968505859375p625 {+ 2675666915813144 625 (2.21956e+188)}
; 1.02325531123281532330793197616003453731536865234375p237 M 1.5941174032327065646086339256726205348968505859375p625 == 1.5941174032327065646086339256726205348968505859375p625
; [HW: 1.5941174032327065646086339256726205348968505859375p625] 

; mpf : + 2675666915813144 625
; mpfd: + 2675666915813144 625 (2.21956e+188) class: Pos. norm. non-zero
; hwf : + 2675666915813144 625 (2.21956e+188) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101100 #b0000010111110100000011110110000100110100000001111100)))
(assert (= y (fp #b0 #b11001110000 #b1001100000011000000101000000000011011110011100011000)))
(assert (= r (fp #b0 #b11001110000 #b1001100000011000000101000000000011011110011100011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
