(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.828886558904234238553954128292389214038848876953125p705 {- 3732973197813522 705 (-3.07846e+212)}
; Y = -1.77608978839747777556112851016223430633544921875p-166 {- 3495197681832928 -166 (-1.89883e-050)}
; -1.828886558904234238553954128292389214038848876953125p705 M -1.77608978839747777556112851016223430633544921875p-166 == -1.77608978839747777556112851016223430633544921875p-166
; [HW: -1.77608978839747777556112851016223430633544921875p-166] 

; mpf : - 3495197681832928 -166
; mpfd: - 3495197681832928 -166 (-1.89883e-050) class: Neg. norm. non-zero
; hwf : - 3495197681832928 -166 (-1.89883e-050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000000 #b1101010000110001111010001101011010010110011100010010)))
(assert (= y (fp #b1 #b01101011001 #b1100011010101101110100100000001111101101001111100000)))
(assert (= r (fp #b1 #b01101011001 #b1100011010101101110100100000001111101101001111100000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
