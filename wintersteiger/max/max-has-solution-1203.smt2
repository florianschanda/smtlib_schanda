(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7000090529631057822967932224855758249759674072265625p-20 {- 3152560510080617 -20 (-1.62125e-006)}
; Y = 1.6567618441174136734161947970278561115264892578125p692 {+ 2957792396438344 692 (3.40422e+208)}
; -1.7000090529631057822967932224855758249759674072265625p-20 M 1.6567618441174136734161947970278561115264892578125p692 == 1.6567618441174136734161947970278561115264892578125p692
; [HW: 1.6567618441174136734161947970278561115264892578125p692] 

; mpf : + 2957792396438344 692
; mpfd: + 2957792396438344 692 (3.40422e+208) class: Pos. norm. non-zero
; hwf : + 2957792396438344 692 (3.40422e+208) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111101011 #b1011001100110011110010110001010101100001011001101001)))
(assert (= y (fp #b0 #b11010110011 #b1010100000100001100010110101000110111110101101001000)))
(assert (= r (fp #b0 #b11010110011 #b1010100000100001100010110101000110111110101101001000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
