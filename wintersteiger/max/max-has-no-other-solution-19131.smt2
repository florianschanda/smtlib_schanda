(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3206253763707402892890740986331366002559661865234375p708 {- 1443968325548791 708 (-1.77835e+213)}
; Y = -1.31104404479048231024762571905739605426788330078125p841 {- 1400817844214228 841 (-1.9224e+253)}
; -1.3206253763707402892890740986331366002559661865234375p708 M -1.31104404479048231024762571905739605426788330078125p841 == -1.3206253763707402892890740986331366002559661865234375p708
; [HW: -1.3206253763707402892890740986331366002559661865234375p708] 

; mpf : - 1443968325548791 708
; mpfd: - 1443968325548791 708 (-1.77835e+213) class: Neg. norm. non-zero
; hwf : - 1443968325548791 708 (-1.77835e+213) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000011 #b0101001000010100100000010011000111000111101011110111)))
(assert (= y (fp #b1 #b11101001000 #b0100111110100000100101010001111111111101100111010100)))
(assert (= r (fp #b1 #b11011000011 #b0101001000010100100000010011000111000111101011110111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
