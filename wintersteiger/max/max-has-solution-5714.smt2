(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.94355512543450714701975812204182147979736328125p835 {- 4249394511310368 835 (-4.4529e+251)}
; Y = -1.3866407076944116116834493368514813482761383056640625p-428 {- 1741274947098817 -428 (-2.00044e-129)}
; -1.94355512543450714701975812204182147979736328125p835 M -1.3866407076944116116834493368514813482761383056640625p-428 == -1.3866407076944116116834493368514813482761383056640625p-428
; [HW: -1.3866407076944116116834493368514813482761383056640625p-428] 

; mpf : - 1741274947098817 -428
; mpfd: - 1741274947098817 -428 (-2.00044e-129) class: Neg. norm. non-zero
; hwf : - 1741274947098817 -428 (-2.00044e-129) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000010 #b1111000110001100110101000010010110110110111000100000)))
(assert (= y (fp #b1 #b01001010011 #b0110001011111010111000101010101011011001100011000001)))
(assert (= r (fp #b1 #b01001010011 #b0110001011111010111000101010101011011001100011000001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
