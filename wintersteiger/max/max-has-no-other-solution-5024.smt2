(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.028578004555785962992331405985169112682342529296875p99 {- 128703890668430 99 (-6.51939e+029)}
; Y = 1.3613982644142106348539300597622059285640716552734375p853 {+ 1627593088948183 853 (8.17658e+256)}
; -1.028578004555785962992331405985169112682342529296875p99 M 1.3613982644142106348539300597622059285640716552734375p853 == 1.3613982644142106348539300597622059285640716552734375p853
; [HW: 1.3613982644142106348539300597622059285640716552734375p853] 

; mpf : + 1627593088948183 853
; mpfd: + 1627593088948183 853 (8.17658e+256) class: Pos. norm. non-zero
; hwf : + 1627593088948183 853 (8.17658e+256) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001100010 #b0000011101010000111000110101101011110011101110001110)))
(assert (= y (fp #b0 #b11101010100 #b0101110010000100100110001011111001111101011111010111)))
(assert (= r (fp #b0 #b11101010100 #b0101110010000100100110001011111001111101011111010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
