(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.79134046864285156885898686596192419528961181640625p-262 {+ 3563880639703140 -262 (2.41724e-079)}
; Y = -1.1006891867948933594334448571316897869110107421875p234 {- 453463784129720 234 (-3.03867e+070)}
; 1.79134046864285156885898686596192419528961181640625p-262 M -1.1006891867948933594334448571316897869110107421875p234 == 1.79134046864285156885898686596192419528961181640625p-262
; [HW: 1.79134046864285156885898686596192419528961181640625p-262] 

; mpf : + 3563880639703140 -262
; mpfd: + 3563880639703140 -262 (2.41724e-079) class: Pos. norm. non-zero
; hwf : + 3563880639703140 -262 (2.41724e-079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111001 #b1100101010010101010010011111100011010010100001100100)))
(assert (= y (fp #b1 #b10011101001 #b0001100111000110110001000011110001011000010010111000)))
(assert (= r (fp #b0 #b01011111001 #b1100101010010101010010011111100011010010100001100100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
