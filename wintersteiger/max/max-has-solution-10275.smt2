(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1951611264407608903326263316557742655277252197265625p-844 {- 878927576315817 -844 (-1.01885e-254)}
; Y = -1.2466974869817304405472668804577551782131195068359375p950 {- 1111026710444159 950 (-1.18647e+286)}
; -1.1951611264407608903326263316557742655277252197265625p-844 M -1.2466974869817304405472668804577551782131195068359375p950 == -1.1951611264407608903326263316557742655277252197265625p-844
; [HW: -1.1951611264407608903326263316557742655277252197265625p-844] 

; mpf : - 878927576315817 -844
; mpfd: - 878927576315817 -844 (-1.01885e-254) class: Neg. norm. non-zero
; hwf : - 878927576315817 -844 (-1.01885e-254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110011 #b0011000111110110000101000101111110000011011110101001)))
(assert (= y (fp #b1 #b11110110101 #b0011111100100111100100010000011010010111100001111111)))
(assert (= r (fp #b1 #b00010110011 #b0011000111110110000101000101111110000011011110101001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
