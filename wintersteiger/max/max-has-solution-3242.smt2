(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.106971122493151771237762659438885748386383056640625p-207 {+ 481755107399562 -207 (5.3818e-063)}
; Y = 1.8999443423722635060357788461260497570037841796875p-421 {+ 4052989004961912 -421 (3.50843e-127)}
; 1.106971122493151771237762659438885748386383056640625p-207 M 1.8999443423722635060357788461260497570037841796875p-421 == 1.106971122493151771237762659438885748386383056640625p-207
; [HW: 1.106971122493151771237762659438885748386383056640625p-207] 

; mpf : + 481755107399562 -207
; mpfd: + 481755107399562 -207 (5.3818e-063) class: Pos. norm. non-zero
; hwf : + 481755107399562 -207 (5.3818e-063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100110000 #b0001101101100010011101011010000010111001011110001010)))
(assert (= y (fp #b0 #b01001011010 #b1110011001100010110000001001111010110101100001111000)))
(assert (= r (fp #b0 #b01100110000 #b0001101101100010011101011010000010111001011110001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
