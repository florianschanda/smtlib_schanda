(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8189542101826077225013023053179495036602020263671875p673 {- 3688241875811891 673 (-7.12868e+202)}
; Y = -1.0417419600314781202854419461800716817378997802734375p-239 {- 187989075643479 -239 (-1.17921e-072)}
; -1.8189542101826077225013023053179495036602020263671875p673 M -1.0417419600314781202854419461800716817378997802734375p-239 == -1.0417419600314781202854419461800716817378997802734375p-239
; [HW: -1.0417419600314781202854419461800716817378997802734375p-239] 

; mpf : - 187989075643479 -239
; mpfd: - 187989075643479 -239 (-1.17921e-072) class: Neg. norm. non-zero
; hwf : - 187989075643479 -239 (-1.17921e-072) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100000 #b1101000110100110111110111010110110100111111000110011)))
(assert (= y (fp #b1 #b01100010000 #b0000101010101111100110011110000100110100110001010111)))
(assert (= r (fp #b1 #b01100010000 #b0000101010101111100110011110000100110100110001010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
