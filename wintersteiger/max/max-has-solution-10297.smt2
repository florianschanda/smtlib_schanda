(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4478149570516993804858429939486086368560791015625p482 {- 2016779273708968 482 (-1.80789e+145)}
; Y = 1.3112584438962944233253438142128288745880126953125p-709 {+ 1401783411947272 -709 (4.86879e-214)}
; -1.4478149570516993804858429939486086368560791015625p482 M 1.3112584438962944233253438142128288745880126953125p-709 == 1.3112584438962944233253438142128288745880126953125p-709
; [HW: 1.3112584438962944233253438142128288745880126953125p-709] 

; mpf : + 1401783411947272 -709
; mpfd: + 1401783411947272 -709 (4.86879e-214) class: Pos. norm. non-zero
; hwf : + 1401783411947272 -709 (4.86879e-214) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100001 #b0111001010100100000000000100001100110010010110101000)))
(assert (= y (fp #b0 #b00100111010 #b0100111110101110101000100010010100100011011100001000)))
(assert (= r (fp #b0 #b00100111010 #b0100111110101110101000100010010100100011011100001000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
