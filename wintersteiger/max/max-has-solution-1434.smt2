(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.641697243286547092111504753120243549346923828125p917 {- 2889947465749968 917 (-1.81886e+276)}
; Y = 1.757927719883052741778328709187917411327362060546875p-37 {+ 3413402996839086 -37 (1.27906e-011)}
; -1.641697243286547092111504753120243549346923828125p917 M 1.757927719883052741778328709187917411327362060546875p-37 == 1.757927719883052741778328709187917411327362060546875p-37
; [HW: 1.757927719883052741778328709187917411327362060546875p-37] 

; mpf : + 3413402996839086 -37
; mpfd: + 3413402996839086 -37 (1.27906e-011) class: Pos. norm. non-zero
; hwf : + 3413402996839086 -37 (1.27906e-011) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110010100 #b1010010001000110010001010100000111011001010111010000)))
(assert (= y (fp #b0 #b01111011010 #b1100001000000111100011010001000110100001001010101110)))
(assert (= r (fp #b0 #b01111011010 #b1100001000000111100011010001000110100001001010101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
