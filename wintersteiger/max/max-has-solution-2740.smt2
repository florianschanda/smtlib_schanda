(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.54727236336729045973470419994555413722991943359375p160 {- 2464695611731100 160 (-2.26134e+048)}
; Y = 1.7460244719558939419101761814090423285961151123046875p-769 {+ 3359795533909835 -769 (5.6232e-232)}
; -1.54727236336729045973470419994555413722991943359375p160 M 1.7460244719558939419101761814090423285961151123046875p-769 == 1.7460244719558939419101761814090423285961151123046875p-769
; [HW: 1.7460244719558939419101761814090423285961151123046875p-769] 

; mpf : + 3359795533909835 -769
; mpfd: + 3359795533909835 -769 (5.6232e-232) class: Pos. norm. non-zero
; hwf : + 3359795533909835 -769 (5.6232e-232) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011111 #b1000110000011010000010101010011010101010110010011100)))
(assert (= y (fp #b0 #b00011111110 #b1011111011111011011101011011010100010000111101001011)))
(assert (= r (fp #b0 #b00011111110 #b1011111011111011011101011011010100010000111101001011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
