(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0344320328986302826024257228709757328033447265625p-620 {- 155068090531880 -620 (-2.37741e-187)}
; Y = 1.5150354348201580112487363294349052011966705322265625p136 {+ 2319513392338665 136 (1.31978e+041)}
; -1.0344320328986302826024257228709757328033447265625p-620 M 1.5150354348201580112487363294349052011966705322265625p136 == 1.5150354348201580112487363294349052011966705322265625p136
; [HW: 1.5150354348201580112487363294349052011966705322265625p136] 

; mpf : + 2319513392338665 136
; mpfd: + 2319513392338665 136 (1.31978e+041) class: Pos. norm. non-zero
; hwf : + 2319513392338665 136 (1.31978e+041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110010011 #b0000100011010000100010011010011100111100000000101000)))
(assert (= y (fp #b0 #b10010000111 #b1000001111011001010111001011110011010101011011101001)))
(assert (= r (fp #b0 #b10010000111 #b1000001111011001010111001011110011010101011011101001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
