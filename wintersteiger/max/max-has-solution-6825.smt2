(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.37267011787507176023837018874473869800567626953125p61 {- 1678357003994292 61 (-3.16516e+018)}
; Y = 1.4729681984015521312159080480341799557209014892578125p202 {+ 2130059402079325 202 (9.46787e+060)}
; -1.37267011787507176023837018874473869800567626953125p61 M 1.4729681984015521312159080480341799557209014892578125p202 == 1.4729681984015521312159080480341799557209014892578125p202
; [HW: 1.4729681984015521312159080480341799557209014892578125p202] 

; mpf : + 2130059402079325 202
; mpfd: + 2130059402079325 202 (9.46787e+060) class: Pos. norm. non-zero
; hwf : + 2130059402079325 202 (9.46787e+060) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111100 #b0101111101100111010011110001000001111000010010110100)))
(assert (= y (fp #b0 #b10011001001 #b0111100100010100011100011010000000101110110001011101)))
(assert (= r (fp #b0 #b10011001001 #b0111100100010100011100011010000000101110110001011101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
