(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8929822004090952614063780856668017804622650146484375p-983 {- 4021634305010887 -983 (-2.31559e-296)}
; Y = 1.45696540155045095588093317928723990917205810546875p744 {+ 2057989212143820 744 (1.34824e+224)}
; -1.8929822004090952614063780856668017804622650146484375p-983 M 1.45696540155045095588093317928723990917205810546875p744 == 1.45696540155045095588093317928723990917205810546875p744
; [HW: 1.45696540155045095588093317928723990917205810546875p744] 

; mpf : + 2057989212143820 744
; mpfd: + 2057989212143820 744 (1.34824e+224) class: Pos. norm. non-zero
; hwf : + 2057989212143820 744 (1.34824e+224) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101000 #b1110010010011010011110110100001010101010110011000111)))
(assert (= y (fp #b0 #b11011100111 #b0111010011111011101011110011111100010000000011001100)))
(assert (= r (fp #b0 #b11011100111 #b0111010011111011101011110011111100010000000011001100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
