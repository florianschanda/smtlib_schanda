(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6152336126494544199516667504212819039821624755859375p518 {+ 2770765868673887 518 (1.38603e+156)}
; Y = -1.039285788986461511740344576537609100341796875p-815 {- 176927464640384 -815 (-4.75651e-246)}
; 1.6152336126494544199516667504212819039821624755859375p518 M -1.039285788986461511740344576537609100341796875p-815 == 1.6152336126494544199516667504212819039821624755859375p518
; [HW: 1.6152336126494544199516667504212819039821624755859375p518] 

; mpf : + 2770765868673887 518
; mpfd: + 2770765868673887 518 (1.38603e+156) class: Pos. norm. non-zero
; hwf : + 2770765868673887 518 (1.38603e+156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000101 #b1001110101111111111100110011010110111010101101011111)))
(assert (= y (fp #b1 #b00011010000 #b0000101000001110101000100010101011100100111110000000)))
(assert (= r (fp #b0 #b11000000101 #b1001110101111111111100110011010110111010101101011111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
