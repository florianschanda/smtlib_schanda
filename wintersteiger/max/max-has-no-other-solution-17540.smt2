(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8787581225079603708394415662041865289211273193359375p-519 {+ 3957574753075647 -519 (1.09472e-156)}
; Y = -1.71134727070030567830372092430479824542999267578125p37 {- 3203623303256916 37 (-2.35206e+011)}
; 1.8787581225079603708394415662041865289211273193359375p-519 M -1.71134727070030567830372092430479824542999267578125p37 == 1.8787581225079603708394415662041865289211273193359375p-519
; [HW: 1.8787581225079603708394415662041865289211273193359375p-519] 

; mpf : + 3957574753075647 -519
; mpfd: + 3957574753075647 -519 (1.09472e-156) class: Pos. norm. non-zero
; hwf : + 3957574753075647 -519 (1.09472e-156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111000 #b1110000011110110010010101101010101000100000110111111)))
(assert (= y (fp #b1 #b10000100100 #b1011011000011010110110101100111111000001101101010100)))
(assert (= r (fp #b0 #b00111111000 #b1110000011110110010010101101010101000100000110111111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
