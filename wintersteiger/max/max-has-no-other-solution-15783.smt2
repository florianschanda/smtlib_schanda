(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9645504296530453824942696883226744830608367919921875p588 {+ 4343948955565507 588 (1.99022e+177)}
; Y = -1.9642143473777375906053066501044668257236480712890625p-105 {- 4342435375555665 -105 (-4.84216e-032)}
; 1.9645504296530453824942696883226744830608367919921875p588 M -1.9642143473777375906053066501044668257236480712890625p-105 == 1.9645504296530453824942696883226744830608367919921875p588
; [HW: 1.9645504296530453824942696883226744830608367919921875p588] 

; mpf : + 4343948955565507 588
; mpfd: + 4343948955565507 588 (1.99022e+177) class: Pos. norm. non-zero
; hwf : + 4343948955565507 588 (1.99022e+177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001011 #b1111011011101100110001101110011010110011110111000011)))
(assert (= y (fp #b1 #b01110010110 #b1111011011010110110000000110000001010010010001010001)))
(assert (= r (fp #b0 #b11001001011 #b1111011011101100110001101110011010110011110111000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
