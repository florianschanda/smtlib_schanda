(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8412364010134198988311027278541587293148040771484375p927 {- 3788591942134535 927 (-2.08889e+279)}
; Y = 1.1627891987347866997737355632125400006771087646484375p815 {+ 733137374761927 815 (2.54067e+245)}
; -1.8412364010134198988311027278541587293148040771484375p927 M 1.1627891987347866997737355632125400006771087646484375p815 == 1.1627891987347866997737355632125400006771087646484375p815
; [HW: 1.1627891987347866997737355632125400006771087646484375p815] 

; mpf : + 733137374761927 815
; mpfd: + 733137374761927 815 (2.54067e+245) class: Pos. norm. non-zero
; hwf : + 733137374761927 815 (2.54067e+245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011110 #b1101011101011011010001001100111010001110101100000111)))
(assert (= y (fp #b0 #b11100101110 #b0010100110101100100011011000110010110101001111000111)))
(assert (= r (fp #b0 #b11100101110 #b0010100110101100100011011000110010110101001111000111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
