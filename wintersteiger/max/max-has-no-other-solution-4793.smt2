(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0545601669233246600043685248238034546375274658203125p168 {- 245717147425157 168 (-3.94558e+050)}
; Y = -1.822799396650240932871156473993323743343353271484375p-658 {- 3705559056154694 -658 (-1.52406e-198)}
; -1.0545601669233246600043685248238034546375274658203125p168 M -1.822799396650240932871156473993323743343353271484375p-658 == -1.822799396650240932871156473993323743343353271484375p-658
; [HW: -1.822799396650240932871156473993323743343353271484375p-658] 

; mpf : - 3705559056154694 -658
; mpfd: - 3705559056154694 -658 (-1.52406e-198) class: Neg. norm. non-zero
; hwf : - 3705559056154694 -658 (-1.52406e-198) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100111 #b0000110111110111101001111011010010011001100110000101)))
(assert (= y (fp #b1 #b00101101101 #b1101001010100010111110110011001111001000000001000110)))
(assert (= r (fp #b1 #b00101101101 #b1101001010100010111110110011001111001000000001000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
