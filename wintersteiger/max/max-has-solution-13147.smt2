(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.357119269268043826315306432661600410938262939453125p39 {- 1608322208002386 39 (-7.46084e+011)}
; Y = -1.5475334256830743928645688356482423841953277587890625p-500 {- 2465871331879185 -500 (-4.72762e-151)}
; -1.357119269268043826315306432661600410938262939453125p39 M -1.5475334256830743928645688356482423841953277587890625p-500 == -1.5475334256830743928645688356482423841953277587890625p-500
; [HW: -1.5475334256830743928645688356482423841953277587890625p-500] 

; mpf : - 2465871331879185 -500
; mpfd: - 2465871331879185 -500 (-4.72762e-151) class: Neg. norm. non-zero
; hwf : - 2465871331879185 -500 (-4.72762e-151) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100110 #b0101101101101100001010110001111001000111000101010010)))
(assert (= y (fp #b1 #b01000001011 #b1000110000101011001001101000110011000110100100010001)))
(assert (= r (fp #b1 #b01000001011 #b1000110000101011001001101000110011000110100100010001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
