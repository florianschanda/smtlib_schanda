(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.057182440296017045255894117872230708599090576171875p416 {- 257526816809278 416 (-1.78907e+125)}
; Y = 1.28793488138507683515854296274483203887939453125p898 {+ 1296743424512800 898 (2.72164e+270)}
; -1.057182440296017045255894117872230708599090576171875p416 M 1.28793488138507683515854296274483203887939453125p898 == 1.28793488138507683515854296274483203887939453125p898
; [HW: 1.28793488138507683515854296274483203887939453125p898] 

; mpf : + 1296743424512800 898
; mpfd: + 1296743424512800 898 (2.72164e+270) class: Pos. norm. non-zero
; hwf : + 1296743424512800 898 (2.72164e+270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011111 #b0000111010100011100000100010011011111010000100111110)))
(assert (= y (fp #b0 #b11110000001 #b0100100110110110000110011011001011101101001100100000)))
(assert (= r (fp #b0 #b11110000001 #b0100100110110110000110011011001011101101001100100000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
