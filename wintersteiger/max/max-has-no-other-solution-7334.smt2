(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8735882363118359084097619415842927992343902587890625p344 {- 3934291655529233 344 (-6.71418e+103)}
; Y = 1.8628227975549138673017068867920897901058197021484375p-608 {+ 3885808429555079 -608 (1.75361e-183)}
; -1.8735882363118359084097619415842927992343902587890625p344 M 1.8628227975549138673017068867920897901058197021484375p-608 == 1.8628227975549138673017068867920897901058197021484375p-608
; [HW: 1.8628227975549138673017068867920897901058197021484375p-608] 

; mpf : + 3885808429555079 -608
; mpfd: + 3885808429555079 -608 (1.75361e-183) class: Pos. norm. non-zero
; hwf : + 3885808429555079 -608 (1.75361e-183) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101010111 #b1101111110100011011110101000100100100001001100010001)))
(assert (= y (fp #b0 #b00110011111 #b1101110011100001111101000111000110111101110110000111)))
(assert (= r (fp #b0 #b00110011111 #b1101110011100001111101000111000110111101110110000111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
