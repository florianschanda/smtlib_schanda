(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7756454184143974917020614157081581652164459228515625p-262 {+ 3493196417342713 -262 (2.39606e-079)}
; Y = -1.9187142700193333677560758587787859141826629638671875p113 {- 4137521244119027 113 (-1.99251e+034)}
; 1.7756454184143974917020614157081581652164459228515625p-262 M -1.9187142700193333677560758587787859141826629638671875p113 == 1.7756454184143974917020614157081581652164459228515625p-262
; [HW: 1.7756454184143974917020614157081581652164459228515625p-262] 

; mpf : + 3493196417342713 -262
; mpfd: + 3493196417342713 -262 (2.39606e-079) class: Pos. norm. non-zero
; hwf : + 3493196417342713 -262 (2.39606e-079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111001 #b1100011010010000101100101011100101100001110011111001)))
(assert (= y (fp #b1 #b10001110000 #b1110101100110000110110111100000000011001111111110011)))
(assert (= r (fp #b0 #b01011111001 #b1100011010010000101100101011100101100001110011111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
