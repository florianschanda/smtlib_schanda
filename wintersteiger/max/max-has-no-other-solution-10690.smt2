(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.64302741977291066888255954836495220661163330078125p-799 {- 2895938048078292 -799 (-4.92809e-241)}
; Y = -1.082037299133507435300316501525230705738067626953125p129 {- 369463149808146 129 (-7.36396e+038)}
; -1.64302741977291066888255954836495220661163330078125p-799 M -1.082037299133507435300316501525230705738067626953125p129 == -1.64302741977291066888255954836495220661163330078125p-799
; [HW: -1.64302741977291066888255954836495220661163330078125p-799] 

; mpf : - 2895938048078292 -799
; mpfd: - 2895938048078292 -799 (-4.92809e-241) class: Neg. norm. non-zero
; hwf : - 2895938048078292 -799 (-4.92809e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011100000 #b1010010010011101011100011110101001011011000111010100)))
(assert (= y (fp #b1 #b10010000000 #b0001010100000000011001010111110011010100101000010010)))
(assert (= r (fp #b1 #b00011100000 #b1010010010011101011100011110101001011011000111010100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
