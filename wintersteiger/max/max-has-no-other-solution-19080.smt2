(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5959242117666889715366096424986608326435089111328125p-976 {- 2683804058053517 -976 (-2.49883e-294)}
; Y = 1.492106912255757311669412956689484417438507080078125p399 {+ 2216252506661474 399 (1.9265e+120)}
; -1.5959242117666889715366096424986608326435089111328125p-976 M 1.492106912255757311669412956689484417438507080078125p399 == 1.492106912255757311669412956689484417438507080078125p399
; [HW: 1.492106912255757311669412956689484417438507080078125p399] 

; mpf : + 2216252506661474 399
; mpfd: + 2216252506661474 399 (1.9265e+120) class: Pos. norm. non-zero
; hwf : + 2216252506661474 399 (1.9265e+120) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101111 #b1001100010001110011111010011100001101110101110001101)))
(assert (= y (fp #b0 #b10110001110 #b0111110111111010101101111111011001000110001001100010)))
(assert (= r (fp #b0 #b10110001110 #b0111110111111010101101111111011001000110001001100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
