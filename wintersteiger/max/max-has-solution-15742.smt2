(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.549300828081773051536629282054491341114044189453125p-227 {- 2473831004663378 -227 (-7.18335e-069)}
; Y = -1.558765790288435315602555419900454580783843994140625p-677 {- 2516457404930378 -677 (-2.48584e-204)}
; -1.549300828081773051536629282054491341114044189453125p-227 M -1.558765790288435315602555419900454580783843994140625p-677 == -1.558765790288435315602555419900454580783843994140625p-677
; [HW: -1.558765790288435315602555419900454580783843994140625p-677] 

; mpf : - 2516457404930378 -677
; mpfd: - 2516457404930378 -677 (-2.48584e-204) class: Neg. norm. non-zero
; hwf : - 2516457404930378 -677 (-2.48584e-204) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011100 #b1000110010011110111110101010010001000110111001010010)))
(assert (= y (fp #b1 #b00101011010 #b1000111100001011010001100101101101101001100101001010)))
(assert (= r (fp #b1 #b00101011010 #b1000111100001011010001100101101101101001100101001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
