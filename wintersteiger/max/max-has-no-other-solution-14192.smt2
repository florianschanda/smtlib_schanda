(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7135065764698300672108643993851728737354278564453125p-555 {+ 3213347951915925 -555 (1.45291e-167)}
; Y = -1.7252649212485973162500840771826915442943572998046875p-822 {- 3266302829080075 -822 (-6.16878e-248)}
; 1.7135065764698300672108643993851728737354278564453125p-555 M -1.7252649212485973162500840771826915442943572998046875p-822 == 1.7135065764698300672108643993851728737354278564453125p-555
; [HW: 1.7135065764698300672108643993851728737354278564453125p-555] 

; mpf : + 3213347951915925 -555
; mpfd: + 3213347951915925 -555 (1.45291e-167) class: Pos. norm. non-zero
; hwf : + 3213347951915925 -555 (1.45291e-167) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111010100 #b1011011010101000010111011111001101101011001110010101)))
(assert (= y (fp #b1 #b00011001001 #b1011100110101010111101100011110110110010111000001011)))
(assert (= r (fp #b0 #b00111010100 #b1011011010101000010111011111001101101011001110010101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
