(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.807991853171568852332029564422555267810821533203125p40 {+ 3638871808861874 40 (1.98791e+012)}
; Y = -1.9900024423131521533747445573681034147739410400390625p895 {- 4458574630297393 895 (-5.25654e+269)}
; 1.807991853171568852332029564422555267810821533203125p40 M -1.9900024423131521533747445573681034147739410400390625p895 == 1.807991853171568852332029564422555267810821533203125p40
; [HW: 1.807991853171568852332029564422555267810821533203125p40] 

; mpf : + 3638871808861874 40
; mpfd: + 3638871808861874 40 (1.98791e+012) class: Pos. norm. non-zero
; hwf : + 3638871808861874 40 (1.98791e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100111 #b1100111011011000100011011101100011001110011010110010)))
(assert (= y (fp #b1 #b11101111110 #b1111110101110000110011001101000010110001111100110001)))
(assert (= r (fp #b0 #b10000100111 #b1100111011011000100011011101100011001110011010110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
