(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5020628041521277840075754284043796360492706298828125p-861 {+ 2261089857696109 -861 (9.76926e-260)}
; Y = -1.51174355849013597463681435328908264636993408203125p-770 {- 2304688099325428 -770 (-2.43434e-232)}
; 1.5020628041521277840075754284043796360492706298828125p-861 M -1.51174355849013597463681435328908264636993408203125p-770 == 1.5020628041521277840075754284043796360492706298828125p-861
; [HW: 1.5020628041521277840075754284043796360492706298828125p-861] 

; mpf : + 2261089857696109 -861
; mpfd: + 2261089857696109 -861 (9.76926e-260) class: Pos. norm. non-zero
; hwf : + 2261089857696109 -861 (9.76926e-260) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100010 #b1000000010000111001100000001110001011111000101101101)))
(assert (= y (fp #b1 #b00011111101 #b1000001100000001101000000011011110100111010111110100)))
(assert (= r (fp #b0 #b00010100010 #b1000000010000111001100000001110001011111000101101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
