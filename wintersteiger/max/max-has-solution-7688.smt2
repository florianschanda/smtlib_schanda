(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.927047916199685406724029235192574560642242431640625p747 {+ 4175052649951498 747 (1.42659e+225)}
; Y = -1.148927081540437544759925003745593130588531494140625p769 {- 670707948930890 769 (-3.56746e+231)}
; 1.927047916199685406724029235192574560642242431640625p747 M -1.148927081540437544759925003745593130588531494140625p769 == 1.927047916199685406724029235192574560642242431640625p747
; [HW: 1.927047916199685406724029235192574560642242431640625p747] 

; mpf : + 4175052649951498 747
; mpfd: + 4175052649951498 747 (1.42659e+225) class: Pos. norm. non-zero
; hwf : + 4175052649951498 747 (1.42659e+225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101010 #b1110110101010011000000110010000111100111000100001010)))
(assert (= y (fp #b1 #b11100000000 #b0010011000100000000101011101000010110100011101001010)))
(assert (= r (fp #b0 #b11011101010 #b1110110101010011000000110010000111100111000100001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
