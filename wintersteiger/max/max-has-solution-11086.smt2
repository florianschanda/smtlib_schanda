(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.61816189026014445317969148163683712482452392578125p-255 {- 2783953658630228 -255 (-2.79494e-077)}
; Y = -1.126908219047937809165205180761404335498809814453125p546 {- 571543808014546 546 (-2.59577e+164)}
; -1.61816189026014445317969148163683712482452392578125p-255 M -1.126908219047937809165205180761404335498809814453125p546 == -1.61816189026014445317969148163683712482452392578125p-255
; [HW: -1.61816189026014445317969148163683712482452392578125p-255] 

; mpf : - 2783953658630228 -255
; mpfd: - 2783953658630228 -255 (-2.79494e-077) class: Neg. norm. non-zero
; hwf : - 2783953658630228 -255 (-2.79494e-077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000000 #b1001111000111111110110111000111001001101000001010100)))
(assert (= y (fp #b1 #b11000100001 #b0010000001111101000011101001101001100111100011010010)))
(assert (= r (fp #b1 #b01100000000 #b1001111000111111110110111000111001001101000001010100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
