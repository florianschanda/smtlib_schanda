(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0156178231145351897879436364746652543544769287109375p-405 {- 70336422358959 -405 (-1.22909e-122)}
; Y = -1.22643057668890786970905537600629031658172607421875p-708 {- 1019752660801452 -708 (-9.10764e-214)}
; -1.0156178231145351897879436364746652543544769287109375p-405 M -1.22643057668890786970905537600629031658172607421875p-708 == -1.22643057668890786970905537600629031658172607421875p-708
; [HW: -1.22643057668890786970905537600629031658172607421875p-708] 

; mpf : - 1019752660801452 -708
; mpfd: - 1019752660801452 -708 (-9.10764e-214) class: Neg. norm. non-zero
; hwf : - 1019752660801452 -708 (-9.10764e-214) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101010 #b0000001111111111100001111001011110000010111110101111)))
(assert (= y (fp #b1 #b00100111011 #b0011100111110111010110101011000110110001011110101100)))
(assert (= r (fp #b1 #b00100111011 #b0011100111110111010110101011000110110001011110101100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
