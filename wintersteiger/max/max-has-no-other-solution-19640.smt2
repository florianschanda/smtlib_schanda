(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9925027565368083060093340463936328887939453125p-167 {- 4469835044503360 -167 (-1.0651e-050)}
; Y = -1.52541659103456961332767605199478566646575927734375p159 {- 2366265963597564 159 (-1.1147e+048)}
; -1.9925027565368083060093340463936328887939453125p-167 M -1.52541659103456961332767605199478566646575927734375p159 == -1.9925027565368083060093340463936328887939453125p-167
; [HW: -1.9925027565368083060093340463936328887939453125p-167] 

; mpf : - 4469835044503360 -167
; mpfd: - 4469835044503360 -167 (-1.0651e-050) class: Neg. norm. non-zero
; hwf : - 4469835044503360 -167 (-1.0651e-050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101011000 #b1111111000010100101010010010000010000011111101000000)))
(assert (= y (fp #b1 #b10010011110 #b1000011010000001101100111010001101000100111011111100)))
(assert (= r (fp #b1 #b01101011000 #b1111111000010100101010010010000010000011111101000000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
