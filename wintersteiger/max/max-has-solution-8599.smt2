(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.649762728832823821534248054376803338527679443359375p356 {- 2926271183450742 356 (-2.42159e+107)}
; Y = -1.92885001846944259540350685711018741130828857421875p-407 {- 4183168597062060 -407 (-5.83566e-123)}
; -1.649762728832823821534248054376803338527679443359375p356 M -1.92885001846944259540350685711018741130828857421875p-407 == -1.92885001846944259540350685711018741130828857421875p-407
; [HW: -1.92885001846944259540350685711018741130828857421875p-407] 

; mpf : - 4183168597062060 -407
; mpfd: - 4183168597062060 -407 (-5.83566e-123) class: Neg. norm. non-zero
; hwf : - 4183168597062060 -407 (-5.83566e-123) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100011 #b1010011001010110110110011010011001111111001001110110)))
(assert (= y (fp #b1 #b01001101000 #b1110110111001001000111010110010000110111000110101100)))
(assert (= r (fp #b1 #b01001101000 #b1110110111001001000111010110010000110111000110101100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
