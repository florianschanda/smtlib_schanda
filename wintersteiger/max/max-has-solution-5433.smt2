(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.323096582165306234202262203325517475605010986328125p939 {- 1455097647044354 939 (-6.14833e+282)}
; Y = -1.5879040475389192277333449965226463973522186279296875p904 {- 2647684449425883 904 (-2.14754e+272)}
; -1.323096582165306234202262203325517475605010986328125p939 M -1.5879040475389192277333449965226463973522186279296875p904 == -1.5879040475389192277333449965226463973522186279296875p904
; [HW: -1.5879040475389192277333449965226463973522186279296875p904] 

; mpf : - 2647684449425883 904
; mpfd: - 2647684449425883 904 (-2.14754e+272) class: Neg. norm. non-zero
; hwf : - 2647684449425883 904 (-2.14754e+272) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110101010 #b0101001010110110011101010010010111011001011100000010)))
(assert (= y (fp #b1 #b11110000111 #b1001011010000000111000010011000101011101100111011011)))
(assert (= r (fp #b1 #b11110000111 #b1001011010000000111000010011000101011101100111011011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
