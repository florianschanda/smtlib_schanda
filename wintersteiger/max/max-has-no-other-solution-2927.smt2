(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7612965265478408571908630619873292744159698486328125p76 {+ 3428574753279309 76 (1.3308e+023)}
; Y = 1.8064683813860293870590112419449724256992340087890625p-893 {+ 3632010701896209 -893 (2.73555e-269)}
; 1.7612965265478408571908630619873292744159698486328125p76 M 1.8064683813860293870590112419449724256992340087890625p-893 == 1.7612965265478408571908630619873292744159698486328125p76
; [HW: 1.7612965265478408571908630619873292744159698486328125p76] 

; mpf : + 3428574753279309 76
; mpfd: + 3428574753279309 76 (1.3308e+023) class: Pos. norm. non-zero
; hwf : + 3428574753279309 76 (1.3308e+023) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001011 #b1100001011100100010101000100010000010100110101001101)))
(assert (= y (fp #b0 #b00010000010 #b1100111001110100101101100011101101001111101000010001)))
(assert (= r (fp #b0 #b10001001011 #b1100001011100100010101000100010000010100110101001101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
