(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -0.4015066791625923059427805128507316112518310546875p-1022 {- 1808225330663416 -1023 (-8.93382e-309)}
; Y = 1.0081936760427441246434909771778620779514312744140625p-362 {+ 36901036372897 -362 (1.07321e-109)}
; -0.4015066791625923059427805128507316112518310546875p-1022 M 1.0081936760427441246434909771778620779514312744140625p-362 == 1.0081936760427441246434909771778620779514312744140625p-362
; [HW: 1.0081936760427441246434909771778620779514312744140625p-362] 

; mpf : + 36901036372897 -362
; mpfd: + 36901036372897 -362 (1.07321e-109) class: Pos. norm. non-zero
; hwf : + 36901036372897 -362 (1.07321e-109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0110011011001001001001000100100000100000111111111000)))
(assert (= y (fp #b0 #b01010010101 #b0000001000011000111110110001001010100011001110100001)))
(assert (= r (fp #b0 #b01010010101 #b0000001000011000111110110001001010100011001110100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
