(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.327488562920675629897004910162650048732757568359375p198 {+ 1474877369937654 198 (5.33298e+059)}
; Y = -1.94612012581061311067287533660419285297393798828125p52 {- 4260946246048404 52 (-8.76455e+015)}
; 1.327488562920675629897004910162650048732757568359375p198 M -1.94612012581061311067287533660419285297393798828125p52 == 1.327488562920675629897004910162650048732757568359375p198
; [HW: 1.327488562920675629897004910162650048732757568359375p198] 

; mpf : + 1474877369937654 198
; mpfd: + 1474877369937654 198 (5.33298e+059) class: Pos. norm. non-zero
; hwf : + 1474877369937654 198 (5.33298e+059) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000101 #b0101001111010110010010100101101110001110111011110110)))
(assert (= y (fp #b1 #b10000110011 #b1111001000110100111011011011011001110001101010010100)))
(assert (= r (fp #b0 #b10011000101 #b0101001111010110010010100101101110001110111011110110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
