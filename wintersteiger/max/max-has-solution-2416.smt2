(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.43955531185812812822177875204943120479583740234375p585 {+ 1979581138692988 585 (1.82295e+176)}
; Y = -1.280898355139661770607517610187642276287078857421875p375 {- 1265053727535966 375 (-9.85742e+112)}
; 1.43955531185812812822177875204943120479583740234375p585 M -1.280898355139661770607517610187642276287078857421875p375 == 1.43955531185812812822177875204943120479583740234375p585
; [HW: 1.43955531185812812822177875204943120479583740234375p585] 

; mpf : + 1979581138692988 585
; mpfd: + 1979581138692988 585 (1.82295e+176) class: Pos. norm. non-zero
; hwf : + 1979581138692988 585 (1.82295e+176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001000 #b0111000010000110101100100110100100110110101101111100)))
(assert (= y (fp #b1 #b10101110110 #b0100011111101000111101000110000011010011001101011110)))
(assert (= r (fp #b0 #b11001001000 #b0111000010000110101100100110100100110110101101111100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
