(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.600607590095387333661847151233814656734466552734375p-236 {+ 2704896118949478 -236 (1.44946e-071)}
; Y = -1.20131882644356924316753065795637667179107666015625p-523 {- 906659391753924 -523 (-4.37492e-158)}
; 1.600607590095387333661847151233814656734466552734375p-236 M -1.20131882644356924316753065795637667179107666015625p-523 == 1.600607590095387333661847151233814656734466552734375p-236
; [HW: 1.600607590095387333661847151233814656734466552734375p-236] 

; mpf : + 2704896118949478 -236
; mpfd: + 2704896118949478 -236 (1.44946e-071) class: Pos. norm. non-zero
; hwf : + 2704896118949478 -236 (1.44946e-071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100010011 #b1001100111000001011010110100010100110000011001100110)))
(assert (= y (fp #b1 #b00111110100 #b0011001110001001101000010110111110100100111011000100)))
(assert (= r (fp #b0 #b01100010011 #b1001100111000001011010110100010100110000011001100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
