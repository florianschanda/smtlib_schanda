(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9133520130626984201427376319770701229572296142578125p166 {- 4113371785687261 166 (-1.78967e+050)}
; Y = -1.817132309977893545038796219159848988056182861328125p508 {- 3680036766728834 508 (-1.52274e+153)}
; -1.9133520130626984201427376319770701229572296142578125p166 M -1.817132309977893545038796219159848988056182861328125p508 == -1.9133520130626984201427376319770701229572296142578125p166
; [HW: -1.9133520130626984201427376319770701229572296142578125p166] 

; mpf : - 4113371785687261 166
; mpfd: - 4113371785687261 166 (-1.78967e+050) class: Neg. norm. non-zero
; hwf : - 4113371785687261 166 (-1.78967e+050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100101 #b1110100111010001011100000000000111010111000011011101)))
(assert (= y (fp #b1 #b10111111011 #b1101000100101111100101010100001111011100001010000010)))
(assert (= r (fp #b1 #b10010100101 #b1110100111010001011100000000000111010111000011011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
