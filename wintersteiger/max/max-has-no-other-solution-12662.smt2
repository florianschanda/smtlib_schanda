(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5660851452340638356730551095097325742244720458984375p9 {+ 2549420849136103 9 (801.836)}
; Y = 1.994344666683072642143770281109027564525604248046875p-576 {+ 4478130270351726 -576 (8.06348e-174)}
; 1.5660851452340638356730551095097325742244720458984375p9 M 1.994344666683072642143770281109027564525604248046875p-576 == 1.5660851452340638356730551095097325742244720458984375p9
; [HW: 1.5660851452340638356730551095097325742244720458984375p9] 

; mpf : + 2549420849136103 9
; mpfd: + 2549420849136103 9 (801.836) class: Pos. norm. non-zero
; hwf : + 2549420849136103 9 (801.836) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001000 #b1001000011101010111101001100000110001000000111100111)))
(assert (= y (fp #b0 #b00110111111 #b1111111010001101010111110100000001011011000101101110)))
(assert (= r (fp #b0 #b10000001000 #b1001000011101010111101001100000110001000000111100111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
