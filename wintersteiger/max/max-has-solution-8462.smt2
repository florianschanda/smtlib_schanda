(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5852416358792911221797794496524147689342498779296875p497 {- 2635694013267675 497 (-6.48639e+149)}
; Y = 1.560872977745995537901535499258898198604583740234375p760 {+ 2525947333579046 760 (9.46595e+228)}
; -1.5852416358792911221797794496524147689342498779296875p497 M 1.560872977745995537901535499258898198604583740234375p760 == 1.560872977745995537901535499258898198604583740234375p760
; [HW: 1.560872977745995537901535499258898198604583740234375p760] 

; mpf : + 2525947333579046 760
; mpfd: + 2525947333579046 760 (9.46595e+228) class: Pos. norm. non-zero
; hwf : + 2525947333579046 760 (9.46595e+228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110000 #b1001010111010010011001010101011001011011111011011011)))
(assert (= y (fp #b0 #b11011110111 #b1000111110010101010111110001100010100001000100100110)))
(assert (= r (fp #b0 #b11011110111 #b1000111110010101010111110001100010100001000100100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
