(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.293145185645707240240653845830820500850677490234375p465 {- 1320208548839462 465 (-1.23196e+140)}
; Y = -1.5637005609969072406073564707185141742229461669921875p25 {- 2538681636454211 25 (-5.24691e+007)}
; -1.293145185645707240240653845830820500850677490234375p465 M -1.5637005609969072406073564707185141742229461669921875p25 == -1.5637005609969072406073564707185141742229461669921875p25
; [HW: -1.5637005609969072406073564707185141742229461669921875p25] 

; mpf : - 2538681636454211 25
; mpfd: - 2538681636454211 25 (-5.24691e+007) class: Neg. norm. non-zero
; hwf : - 2538681636454211 25 (-5.24691e+007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010000 #b0100101100001011100100000001100101010100000000100110)))
(assert (= y (fp #b1 #b10000011000 #b1001000001001110101011100001001000110111111101000011)))
(assert (= r (fp #b1 #b10000011000 #b1001000001001110101011100001001000110111111101000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
