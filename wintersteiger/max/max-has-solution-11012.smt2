(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.58848807311316164714298793114721775054931640625p595 {- 2650314666784416 595 (-2.05983e+179)}
; Y = -1.11816525448082781934999729855917394161224365234375p921 {- 532168996047996 921 (-1.98213e+277)}
; -1.58848807311316164714298793114721775054931640625p595 M -1.11816525448082781934999729855917394161224365234375p921 == -1.58848807311316164714298793114721775054931640625p595
; [HW: -1.58848807311316164714298793114721775054931640625p595] 

; mpf : - 2650314666784416 595
; mpfd: - 2650314666784416 595 (-2.05983e+179) class: Neg. norm. non-zero
; hwf : - 2650314666784416 595 (-2.05983e+179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010010 #b1001011010100111001001111000010000011011011010100000)))
(assert (= y (fp #b1 #b11110011000 #b0001111001000000000100111111111110000100110001111100)))
(assert (= r (fp #b1 #b11001010010 #b1001011010100111001001111000010000011011011010100000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
