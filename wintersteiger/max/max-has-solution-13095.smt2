(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9898941237272380622158607366145588457584381103515625p373 {- 4458086806754233 373 (-3.82841e+112)}
; Y = -1.0935722789729840354056022988515906035900115966796875p-662 {- 421412080714939 -662 (-5.71466e-200)}
; -1.9898941237272380622158607366145588457584381103515625p373 M -1.0935722789729840354056022988515906035900115966796875p-662 == -1.0935722789729840354056022988515906035900115966796875p-662
; [HW: -1.0935722789729840354056022988515906035900115966796875p-662] 

; mpf : - 421412080714939 -662
; mpfd: - 421412080714939 -662 (-5.71466e-200) class: Neg. norm. non-zero
; hwf : - 421412080714939 -662 (-5.71466e-200) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101110100 #b1111110101101001101100111000011111101001001110111001)))
(assert (= y (fp #b1 #b00101101001 #b0001011111110100010110100101011000000000010010111011)))
(assert (= r (fp #b1 #b00101101001 #b0001011111110100010110100101011000000000010010111011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
