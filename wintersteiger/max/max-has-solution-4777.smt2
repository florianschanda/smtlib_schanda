(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.69591082253782676758646630332805216312408447265625p162 {- 3134103721064452 162 (-9.91431e+048)}
; Y = 1.94331569739321974310541918384842574596405029296875p-418 {+ 4248316223272844 -418 (2.87081e-126)}
; -1.69591082253782676758646630332805216312408447265625p162 M 1.94331569739321974310541918384842574596405029296875p-418 == 1.94331569739321974310541918384842574596405029296875p-418
; [HW: 1.94331569739321974310541918384842574596405029296875p-418] 

; mpf : + 4248316223272844 -418
; mpfd: + 4248316223272844 -418 (2.87081e-126) class: Pos. norm. non-zero
; hwf : + 4248316223272844 -418 (2.87081e-126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100001 #b1011001000100111001101100010111110111011100000000100)))
(assert (= y (fp #b0 #b01001011101 #b1111000101111101001000110011011000011011011110001100)))
(assert (= r (fp #b0 #b01001011101 #b1111000101111101001000110011011000011011011110001100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
