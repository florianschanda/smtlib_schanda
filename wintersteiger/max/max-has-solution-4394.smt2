(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.85832399936668490880720128188841044902801513671875p-805 {+ 3865547643710956 -805 (8.70913e-243)}
; Y = 1.376274193560062197860816013417206704616546630859375p-1016 {+ 1694588317906230 -1016 (1.95988e-306)}
; 1.85832399936668490880720128188841044902801513671875p-805 M 1.376274193560062197860816013417206704616546630859375p-1016 == 1.85832399936668490880720128188841044902801513671875p-805
; [HW: 1.85832399936668490880720128188841044902801513671875p-805] 

; mpf : + 3865547643710956 -805
; mpfd: + 3865547643710956 -805 (8.70913e-243) class: Pos. norm. non-zero
; hwf : + 3865547643710956 -805 (8.70913e-243) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011011010 #b1101101110111011000111110010001010100110110111101100)))
(assert (= y (fp #b0 #b00000000111 #b0110000001010011100000010110101110101011010100110110)))
(assert (= r (fp #b0 #b00011011010 #b1101101110111011000111110010001010100110110111101100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
