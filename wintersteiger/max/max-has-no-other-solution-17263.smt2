(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2731371032345901728177750555914826691150665283203125p290 {- 1230100156348357 290 (-2.53264e+087)}
; Y = 1.5256073364913247392138373470515944063663482666015625p311 {+ 2367125004765529 311 (6.3646e+093)}
; -1.2731371032345901728177750555914826691150665283203125p290 M 1.5256073364913247392138373470515944063663482666015625p311 == 1.5256073364913247392138373470515944063663482666015625p311
; [HW: 1.5256073364913247392138373470515944063663482666015625p311] 

; mpf : + 2367125004765529 311
; mpfd: + 2367125004765529 311 (6.3646e+093) class: Pos. norm. non-zero
; hwf : + 2367125004765529 311 (6.3646e+093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100100001 #b0100010111101100010100000010110110110111011111000101)))
(assert (= y (fp #b0 #b10100110110 #b1000011010001110001100111101000011000100100101011001)))
(assert (= r (fp #b0 #b10100110110 #b1000011010001110001100111101000011000100100101011001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
