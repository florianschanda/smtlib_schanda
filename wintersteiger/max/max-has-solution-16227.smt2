(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8772883938955129412562428115052171051502227783203125p-728 {- 3950955683844293 -728 (-1.32952e-219)}
; Y = 1.2271819501064034074744313329574652016162872314453125p1010 {+ 1023136545844501 1010 (1.34649e+304)}
; -1.8772883938955129412562428115052171051502227783203125p-728 M 1.2271819501064034074744313329574652016162872314453125p1010 == 1.2271819501064034074744313329574652016162872314453125p1010
; [HW: 1.2271819501064034074744313329574652016162872314453125p1010] 

; mpf : + 1023136545844501 1010
; mpfd: + 1023136545844501 1010 (1.34649e+304) class: Pos. norm. non-zero
; hwf : + 1023136545844501 1010 (1.34649e+304) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100111 #b1110000010010101111110001110000011110001000011000101)))
(assert (= y (fp #b0 #b11111110001 #b0011101000101000100110001010010111110010110100010101)))
(assert (= r (fp #b0 #b11111110001 #b0011101000101000100110001010010111110010110100010101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
