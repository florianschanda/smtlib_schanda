(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.466471838322169762847124729887582361698150634765625p817 {+ 2100802397246554 817 (1.28168e+246)}
; Y = -1.180886146420433657766579926828853785991668701171875p378 {- 814638781615550 378 (-7.2702e+113)}
; 1.466471838322169762847124729887582361698150634765625p817 M -1.180886146420433657766579926828853785991668701171875p378 == 1.466471838322169762847124729887582361698150634765625p817
; [HW: 1.466471838322169762847124729887582361698150634765625p817] 

; mpf : + 2100802397246554 817
; mpfd: + 2100802397246554 817 (1.28168e+246) class: Pos. norm. non-zero
; hwf : + 2100802397246554 817 (1.28168e+246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100110000 #b0111011101101010101100101100101000011001010001011010)))
(assert (= y (fp #b1 #b10101111001 #b0010111001001110100011011111001100101100110110111110)))
(assert (= r (fp #b0 #b11100110000 #b0111011101101010101100101100101000011001010001011010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
