(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3111387928623674525852038641460239887237548828125p251 {+ 1401244551595464 251 (4.74436e+075)}
; Y = -1.4137436157851415163833053156849928200244903564453125p378 {- 1863335593876885 378 (-8.7038e+113)}
; 1.3111387928623674525852038641460239887237548828125p251 M -1.4137436157851415163833053156849928200244903564453125p378 == 1.3111387928623674525852038641460239887237548828125p251
; [HW: 1.3111387928623674525852038641460239887237548828125p251] 

; mpf : + 1401244551595464 251
; mpfd: + 1401244551595464 251 (4.74436e+075) class: Pos. norm. non-zero
; hwf : + 1401244551595464 251 (4.74436e+075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011111010 #b0100111110100110110010101011101111011100010111001000)))
(assert (= y (fp #b1 #b10101111001 #b0110100111101011000110100000001010111001110110010101)))
(assert (= r (fp #b0 #b10011111010 #b0100111110100110110010101011101111011100010111001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
