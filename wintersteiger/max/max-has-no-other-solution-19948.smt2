(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.80603381621187164540742742246948182582855224609375p-871 {- 3630053594339804 -871 (-1.1471e-262)}
; Y = -1.5588599835760381662197460173047147691249847412109375p-118 {- 2516881613785327 -118 (-4.69102e-036)}
; -1.80603381621187164540742742246948182582855224609375p-871 M -1.5588599835760381662197460173047147691249847412109375p-118 == -1.80603381621187164540742742246948182582855224609375p-871
; [HW: -1.80603381621187164540742742246948182582855224609375p-871] 

; mpf : - 3630053594339804 -871
; mpfd: - 3630053594339804 -871 (-1.1471e-262) class: Neg. norm. non-zero
; hwf : - 3630053594339804 -871 (-1.1471e-262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011000 #b1100111001011000001110110111000000011001100111011100)))
(assert (= y (fp #b1 #b01110001001 #b1000111100010001011100101010100010000000100011101111)))
(assert (= r (fp #b1 #b00010011000 #b1100111001011000001110110111000000011001100111011100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
