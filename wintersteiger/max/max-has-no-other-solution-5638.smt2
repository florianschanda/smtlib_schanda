(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.501389021531329692749068271950818598270416259765625p63 {+ 2258055410536154 63 (1.38479e+019)}
; Y = 1.182213830375681506978935431106947362422943115234375p-1006 {+ 820618138581670 -1006 (1.72393e-303)}
; 1.501389021531329692749068271950818598270416259765625p63 M 1.182213830375681506978935431106947362422943115234375p-1006 == 1.501389021531329692749068271950818598270416259765625p63
; [HW: 1.501389021531329692749068271950818598270416259765625p63] 

; mpf : + 2258055410536154 63
; mpfd: + 2258055410536154 63 (1.38479e+019) class: Pos. norm. non-zero
; hwf : + 2258055410536154 63 (1.38479e+019) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111110 #b1000000001011011000001111110101000001100111011011010)))
(assert (= y (fp #b0 #b00000010001 #b0010111010100101100100001100101001010111101010100110)))
(assert (= r (fp #b0 #b10000111110 #b1000000001011011000001111110101000001100111011011010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
