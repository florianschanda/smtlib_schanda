(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0584772022736512742113745844108052551746368408203125p779 {- 263357906369285 779 (-3.36549e+234)}
; Y = 1.6995232090235667943289854520116932690143585205078125p-869 {+ 3150372463495549 -869 (4.31778e-262)}
; -1.0584772022736512742113745844108052551746368408203125p779 M 1.6995232090235667943289854520116932690143585205078125p-869 == 1.6995232090235667943289854520116932690143585205078125p-869
; [HW: 1.6995232090235667943289854520116932690143585205078125p-869] 

; mpf : + 3150372463495549 -869
; mpfd: + 3150372463495549 -869 (4.31778e-262) class: Pos. norm. non-zero
; hwf : + 3150372463495549 -869 (4.31778e-262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001010 #b0000111011111000010111001010011101010011101100000101)))
(assert (= y (fp #b0 #b00010011010 #b1011001100010011111100111111100110001100100101111101)))
(assert (= r (fp #b0 #b00010011010 #b1011001100010011111100111111100110001100100101111101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
