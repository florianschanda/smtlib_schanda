(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2292042244144256724069919073372147977352142333984375p24 {+ 1032244059664551 24 (2.06226e+007)}
; Y = -1.767407034986374636531536452821455895900726318359375p318 {- 3456094036806134 318 (-9.4379e+095)}
; 1.2292042244144256724069919073372147977352142333984375p24 M -1.767407034986374636531536452821455895900726318359375p318 == 1.2292042244144256724069919073372147977352142333984375p24
; [HW: 1.2292042244144256724069919073372147977352142333984375p24] 

; mpf : + 1032244059664551 24
; mpfd: + 1032244059664551 24 (2.06226e+007) class: Pos. norm. non-zero
; hwf : + 1032244059664551 24 (2.06226e+007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010111 #b0011101010101101001000001100011111110111000010100111)))
(assert (= y (fp #b1 #b10100111101 #b1100010001110100110010011001010111111100100111110110)))
(assert (= r (fp #b0 #b10000010111 #b0011101010101101001000001100011111110111000010100111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
