(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.62926625140750669373801429173909127712249755859375p110 {+ 2833963255355676 110 (2.11491e+033)}
; Y = -1.6936670084564948712824161702883429825305938720703125p264 {- 3123998480803877 264 (-5.0205e+079)}
; 1.62926625140750669373801429173909127712249755859375p110 M -1.6936670084564948712824161702883429825305938720703125p264 == 1.62926625140750669373801429173909127712249755859375p110
; [HW: 1.62926625140750669373801429173909127712249755859375p110] 

; mpf : + 2833963255355676 110
; mpfd: + 2833963255355676 110 (2.11491e+033) class: Pos. norm. non-zero
; hwf : + 2833963255355676 110 (2.11491e+033) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101101 #b1010000100010111100101111101001001000101100100011100)))
(assert (= y (fp #b1 #b10100000111 #b1011000110010100001010010011101110100010100000100101)))
(assert (= r (fp #b0 #b10001101101 #b1010000100010111100101111101001001000101100100011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
