(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8140654671189160307420706885750405490398406982421875p-96 {- 3666224934371939 -96 (-2.28967e-029)}
; Y = 1.4849524896103167836969305426464416086673736572265625p-406 {+ 2184031851501417 -406 (8.98534e-123)}
; -1.8140654671189160307420706885750405490398406982421875p-96 M 1.4849524896103167836969305426464416086673736572265625p-406 == 1.4849524896103167836969305426464416086673736572265625p-406
; [HW: 1.4849524896103167836969305426464416086673736572265625p-406] 

; mpf : + 2184031851501417 -406
; mpfd: + 2184031851501417 -406 (8.98534e-123) class: Pos. norm. non-zero
; hwf : + 2184031851501417 -406 (8.98534e-123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110011111 #b1101000001100110100110000010111000010100001001100011)))
(assert (= y (fp #b0 #b01001101001 #b0111110000100101110110001010101011111101011101101001)))
(assert (= r (fp #b0 #b01001101001 #b0111110000100101110110001010101011111101011101101001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
