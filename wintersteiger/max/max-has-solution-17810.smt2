(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9494841996051246457710703907650895416736602783203125p566 {+ 4276096687535813 566 (4.70866e+170)}
; Y = -1.7627216813032091646817889341036789119243621826171875p99 {- 3434993079704531 99 (-1.11726e+030)}
; 1.9494841996051246457710703907650895416736602783203125p566 M -1.7627216813032091646817889341036789119243621826171875p99 == 1.9494841996051246457710703907650895416736602783203125p566
; [HW: 1.9494841996051246457710703907650895416736602783203125p566] 

; mpf : + 4276096687535813 566
; mpfd: + 4276096687535813 566 (4.70866e+170) class: Pos. norm. non-zero
; hwf : + 4276096687535813 566 (4.70866e+170) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110101 #b1111001100010001011001011000000101011111011011000101)))
(assert (= y (fp #b1 #b10001100010 #b1100001101000001101110100110010100100101101111010011)))
(assert (= r (fp #b0 #b11000110101 #b1111001100010001011001011000000101011111011011000101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
