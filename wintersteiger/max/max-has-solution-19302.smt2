(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9322743858006656836323600145988166332244873046875p-773 {- 4198590576498936 -773 (-3.8894e-233)}
; Y = -1.6540739758258753422381914788275025784969329833984375p139 {- 2945687313802151 139 (-1.15272e+042)}
; -1.9322743858006656836323600145988166332244873046875p-773 M -1.6540739758258753422381914788275025784969329833984375p139 == -1.9322743858006656836323600145988166332244873046875p-773
; [HW: -1.9322743858006656836323600145988166332244873046875p-773] 

; mpf : - 4198590576498936 -773
; mpfd: - 4198590576498936 -773 (-3.8894e-233) class: Neg. norm. non-zero
; hwf : - 4198590576498936 -773 (-3.8894e-233) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111010 #b1110111010101001100010001011110111101001100011111000)))
(assert (= y (fp #b1 #b10010001010 #b1010011101110001011001000101111101010110001110100111)))
(assert (= r (fp #b1 #b00011111010 #b1110111010101001100010001011110111101001100011111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
