(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0744533133531282143025009645498357713222503662109375p35 {- 335307914273647 35 (-3.69179e+010)}
; Y = 1.14119469586464727939301155856810510158538818359375p544 {+ 635884379682716 544 (6.57169e+163)}
; -1.0744533133531282143025009645498357713222503662109375p35 M 1.14119469586464727939301155856810510158538818359375p544 == 1.14119469586464727939301155856810510158538818359375p544
; [HW: 1.14119469586464727939301155856810510158538818359375p544] 

; mpf : + 635884379682716 544
; mpfd: + 635884379682716 544 (6.57169e+163) class: Pos. norm. non-zero
; hwf : + 635884379682716 544 (6.57169e+163) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100010 #b0001001100001111010111110101000111101110001101101111)))
(assert (= y (fp #b0 #b11000011111 #b0010010000100101010101011110100100011011011110011100)))
(assert (= r (fp #b0 #b11000011111 #b0010010000100101010101011110100100011011011110011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
