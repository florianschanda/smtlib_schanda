(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8679076398309752971016450828756205737590789794921875p-562 {+ 3908708523334787 -562 (1.23737e-169)}
; Y = -1.2455495681755637260579305802821181714534759521484375p-259 {- 1105856943736455 -259 (-1.3446e-078)}
; 1.8679076398309752971016450828756205737590789794921875p-562 M -1.2455495681755637260579305802821181714534759521484375p-259 == 1.8679076398309752971016450828756205737590789794921875p-562
; [HW: 1.8679076398309752971016450828756205737590789794921875p-562] 

; mpf : + 3908708523334787 -562
; mpfd: + 3908708523334787 -562 (1.23737e-169) class: Pos. norm. non-zero
; hwf : + 3908708523334787 -562 (1.23737e-169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111001101 #b1101111000101111001100011111000100000101110010000011)))
(assert (= y (fp #b1 #b01011111100 #b0011111011011100010101100010010011011100011010000111)))
(assert (= r (fp #b0 #b00111001101 #b1101111000101111001100011111000100000101110010000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
