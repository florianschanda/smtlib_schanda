(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9879014366699150340167534523061476647853851318359375p-785 {+ 4449112542065407 -785 (9.76896e-237)}
; Y = 1.443895885120200173190596615313552320003509521484375p-693 {+ 1999129342818630 -693 (3.51357e-209)}
; 1.9879014366699150340167534523061476647853851318359375p-785 M 1.443895885120200173190596615313552320003509521484375p-693 == 1.443895885120200173190596615313552320003509521484375p-693
; [HW: 1.443895885120200173190596615313552320003509521484375p-693] 

; mpf : + 1999129342818630 -693
; mpfd: + 1999129342818630 -693 (3.51357e-209) class: Pos. norm. non-zero
; hwf : + 1999129342818630 -693 (3.51357e-209) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101110 #b1111110011100111000110111100101000101011001011111111)))
(assert (= y (fp #b0 #b00101001010 #b0111000110100011001010010010010101101011100101000110)))
(assert (= r (fp #b0 #b00101001010 #b0111000110100011001010010010010101101011100101000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
