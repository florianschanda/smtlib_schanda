(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.90600907763671845174258123734034597873687744140625p883 {- 4080302144439012 883 (-1.22917e+266)}
; Y = -1.7657558925107259550912885970319621264934539794921875p669 {- 3448657952168067 669 (-4.32512e+201)}
; -1.90600907763671845174258123734034597873687744140625p883 M -1.7657558925107259550912885970319621264934539794921875p669 == -1.7657558925107259550912885970319621264934539794921875p669
; [HW: -1.7657558925107259550912885970319621264934539794921875p669] 

; mpf : - 3448657952168067 669
; mpfd: - 3448657952168067 669 (-4.32512e+201) class: Neg. norm. non-zero
; hwf : - 3448657952168067 669 (-4.32512e+201) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110010 #b1110011111110000001101011111111001010100001011100100)))
(assert (= y (fp #b1 #b11010011100 #b1100010000001000100101000000001100001101100010000011)))
(assert (= r (fp #b1 #b11010011100 #b1100010000001000100101000000001100001101100010000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
