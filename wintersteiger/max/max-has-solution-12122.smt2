(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.401550995336317217976329629891552031040191650390625p832 {+ 1808424912966890 832 (4.01389e+250)}
; Y = -1.6715275022068578625322743391734547913074493408203125p201 {- 3024291008707845 201 (-5.37208e+060)}
; 1.401550995336317217976329629891552031040191650390625p832 M -1.6715275022068578625322743391734547913074493408203125p201 == 1.401550995336317217976329629891552031040191650390625p832
; [HW: 1.401550995336317217976329629891552031040191650390625p832] 

; mpf : + 1808424912966890 832
; mpfd: + 1808424912966890 832 (4.01389e+250) class: Pos. norm. non-zero
; hwf : + 1808424912966890 832 (4.01389e+250) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111111 #b0110011011001100000010111100100010100101010011101010)))
(assert (= y (fp #b1 #b10011001000 #b1010101111101001001110011111010001010111110100000101)))
(assert (= r (fp #b0 #b11100111111 #b0110011011001100000010111100100010100101010011101010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
