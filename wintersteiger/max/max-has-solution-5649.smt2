(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2524325023048294980299033340997993946075439453125p407 {- 1136854923316232 407 (-4.13964e+122)}
; Y = 1.48107170000469867687797886901535093784332275390625p-411 {+ 2166554328879652 -411 (2.80058e-124)}
; -1.2524325023048294980299033340997993946075439453125p407 M 1.48107170000469867687797886901535093784332275390625p-411 == 1.48107170000469867687797886901535093784332275390625p-411
; [HW: 1.48107170000469867687797886901535093784332275390625p-411] 

; mpf : + 2166554328879652 -411
; mpfd: + 2166554328879652 -411 (2.80058e-124) class: Pos. norm. non-zero
; hwf : + 2166554328879652 -411 (2.80058e-124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010110 #b0100000010011111011010101001110111011000110000001000)))
(assert (= y (fp #b0 #b01001100100 #b0111101100100111100000111101001010001101001000100100)))
(assert (= r (fp #b0 #b01001100100 #b0111101100100111100000111101001010001101001000100100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
