(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7581303037402531419530760103953070938587188720703125p-841 {+ 3414315353422885 -841 (1.19902e-253)}
; Y = -1.803770073306946830626884548109956085681915283203125p807 {- 3619858602636722 807 (-1.53953e+243)}
; 1.7581303037402531419530760103953070938587188720703125p-841 M -1.803770073306946830626884548109956085681915283203125p807 == 1.7581303037402531419530760103953070938587188720703125p-841
; [HW: 1.7581303037402531419530760103953070938587188720703125p-841] 

; mpf : + 3414315353422885 -841
; mpfd: + 3414315353422885 -841 (1.19902e-253) class: Pos. norm. non-zero
; hwf : + 3414315353422885 -841 (1.19902e-253) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110110 #b1100001000010100110100111101110010101011110000100101)))
(assert (= y (fp #b1 #b11100100110 #b1100110111000011111000000010001001011011010110110010)))
(assert (= r (fp #b0 #b00010110110 #b1100001000010100110100111101110010101011110000100101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
