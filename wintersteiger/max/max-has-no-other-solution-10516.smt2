(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.648108924460123692057322841719724237918853759765625p410 {- 2918823110694106 410 (-4.35797e+123)}
; Y = 1.9936978036087731336323258801712654531002044677734375p-348 {+ 4475217058051351 -348 (3.47713e-105)}
; -1.648108924460123692057322841719724237918853759765625p410 M 1.9936978036087731336323258801712654531002044677734375p-348 == 1.9936978036087731336323258801712654531002044677734375p-348
; [HW: 1.9936978036087731336323258801712654531002044677734375p-348] 

; mpf : + 4475217058051351 -348
; mpfd: + 4475217058051351 -348 (3.47713e-105) class: Pos. norm. non-zero
; hwf : + 4475217058051351 -348 (3.47713e-105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011001 #b1010010111101010011101110110101011001101010011011010)))
(assert (= y (fp #b0 #b01010100011 #b1111111001100010111110101011000010011011010100010111)))
(assert (= r (fp #b0 #b01010100011 #b1111111001100010111110101011000010011011010100010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
