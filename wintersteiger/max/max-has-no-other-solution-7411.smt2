(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.798605357644149638218777909060008823871612548828125p887 {- 3596598791102274 887 (-1.85585e+267)}
; Y = -1.873662553343418135654019351932220160961151123046875p-705 {- 3934626349684974 -705 (-1.11313e-212)}
; -1.798605357644149638218777909060008823871612548828125p887 M -1.873662553343418135654019351932220160961151123046875p-705 == -1.873662553343418135654019351932220160961151123046875p-705
; [HW: -1.873662553343418135654019351932220160961151123046875p-705] 

; mpf : - 3934626349684974 -705
; mpfd: - 3934626349684974 -705 (-1.11313e-212) class: Neg. norm. non-zero
; hwf : - 3934626349684974 -705 (-1.11313e-212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110110 #b1100110001110001011001101001010101111101111101000010)))
(assert (= y (fp #b1 #b00100111110 #b1101111110101000010110010101111001011001100011101110)))
(assert (= r (fp #b1 #b00100111110 #b1101111110101000010110010101111001011001100011101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
