(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.58324200220644595304975155158899724483489990234375p-145 {- 2626688463803772 -145 (-3.54975e-044)}
; Y = 1.2338928296581672672260765466489829123020172119140625p764 {+ 1053359660493153 764 (1.19728e+230)}
; -1.58324200220644595304975155158899724483489990234375p-145 M 1.2338928296581672672260765466489829123020172119140625p764 == 1.2338928296581672672260765466489829123020172119140625p764
; [HW: 1.2338928296581672672260765466489829123020172119140625p764] 

; mpf : + 1053359660493153 764
; mpfd: + 1053359660493153 764 (1.19728e+230) class: Pos. norm. non-zero
; hwf : + 1053359660493153 764 (1.19728e+230) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101101110 #b1001010101001111010110010000110100100001010101111100)))
(assert (= y (fp #b0 #b11011111011 #b0011101111100000011001101000011000100110100101100001)))
(assert (= r (fp #b0 #b11011111011 #b0011101111100000011001101000011000100110100101100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
