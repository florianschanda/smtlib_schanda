(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.821629489346089147971952115767635405063629150390625p-696 {- 3700290262055658 -696 (-5.54094e-210)}
; Y = -1.654284332176719995999292223132215440273284912109375p-37 {- 2946634674585430 -37 (-1.20365e-011)}
; -1.821629489346089147971952115767635405063629150390625p-696 M -1.654284332176719995999292223132215440273284912109375p-37 == -1.821629489346089147971952115767635405063629150390625p-696
; [HW: -1.821629489346089147971952115767635405063629150390625p-696] 

; mpf : - 3700290262055658 -696
; mpfd: - 3700290262055658 -696 (-5.54094e-210) class: Neg. norm. non-zero
; hwf : - 3700290262055658 -696 (-5.54094e-210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101000111 #b1101001001010110010011110110101000101011101011101010)))
(assert (= y (fp #b1 #b01111011010 #b1010011101111111001011011001000011111011111101010110)))
(assert (= r (fp #b1 #b00101000111 #b1101001001010110010011110110101000101011101011101010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
