(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9756933490253185681240211124531924724578857421875p-579 {+ 4394132203098296 -579 (9.98509e-175)}
; Y = -1.895942044594305375682097292155958712100982666015625p-72 {- 4034964258180474 -72 (-4.01481e-022)}
; 1.9756933490253185681240211124531924724578857421875p-579 M -1.895942044594305375682097292155958712100982666015625p-72 == 1.9756933490253185681240211124531924724578857421875p-579
; [HW: 1.9756933490253185681240211124531924724578857421875p-579] 

; mpf : + 4394132203098296 -579
; mpfd: + 4394132203098296 -579 (9.98509e-175) class: Pos. norm. non-zero
; hwf : + 4394132203098296 -579 (9.98509e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111100 #b1111100111000111000010100001000011111101000010111000)))
(assert (= y (fp #b1 #b01110110111 #b1110010101011100011101010011010010100100110101111010)))
(assert (= r (fp #b0 #b00110111100 #b1111100111000111000010100001000011111101000010111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
