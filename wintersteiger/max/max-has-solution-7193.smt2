(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9149131164761008516705942383850924670696258544921875p724 {+ 4120402370438147 724 (1.68992e+218)}
; Y = 1.9292482083329518527392565374611876904964447021484375p532 {+ 4184961884782983 532 (2.71235e+160)}
; 1.9149131164761008516705942383850924670696258544921875p724 M 1.9292482083329518527392565374611876904964447021484375p532 == 1.9149131164761008516705942383850924670696258544921875p724
; [HW: 1.9149131164761008516705942383850924670696258544921875p724] 

; mpf : + 4120402370438147 724
; mpfd: + 4120402370438147 724 (1.68992e+218) class: Pos. norm. non-zero
; hwf : + 4120402370438147 724 (1.68992e+218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010011 #b1110101000110111101111101111100111110010010000000011)))
(assert (= y (fp #b0 #b11000010011 #b1110110111100011001101011110100010101000000110000111)))
(assert (= r (fp #b0 #b11011010011 #b1110101000110111101111101111100111110010010000000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
