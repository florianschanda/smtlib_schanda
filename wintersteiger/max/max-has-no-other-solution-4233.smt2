(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4338330739731481866527929014409892261028289794921875p-501 {- 1953810470286467 -501 (-2.19013e-151)}
; Y = 1.853065316462350953230497907497920095920562744140625p-925 {+ 3841864641342538 -925 (6.53348e-279)}
; -1.4338330739731481866527929014409892261028289794921875p-501 M 1.853065316462350953230497907497920095920562744140625p-925 == 1.853065316462350953230497907497920095920562744140625p-925
; [HW: 1.853065316462350953230497907497920095920562744140625p-925] 

; mpf : + 3841864641342538 -925
; mpfd: + 3841864641342538 -925 (6.53348e-279) class: Pos. norm. non-zero
; hwf : + 3841864641342538 -925 (6.53348e-279) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000001010 #b0110111100001111101011110011000010100011010010000011)))
(assert (= y (fp #b0 #b00001100010 #b1101101001100010011111010001001110001110110001001010)))
(assert (= r (fp #b0 #b00001100010 #b1101101001100010011111010001001110001110110001001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
