(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.080632915107441416324718375108204782009124755859375p487 {+ 363138366431670 487 (4.31803e+146)}
; Y = -1.7542128019547913453379806014709174633026123046875p730 {- 3396672493841656 730 (-9.90784e+219)}
; 1.080632915107441416324718375108204782009124755859375p487 M -1.7542128019547913453379806014709174633026123046875p730 == 1.080632915107441416324718375108204782009124755859375p487
; [HW: 1.080632915107441416324718375108204782009124755859375p487] 

; mpf : + 363138366431670 487
; mpfd: + 363138366431670 487 (4.31803e+146) class: Pos. norm. non-zero
; hwf : + 363138366431670 487 (4.31803e+146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111100110 #b0001010010100100010110111101010101011110000110110110)))
(assert (= y (fp #b1 #b11011011001 #b1100000100010100000101110001011010011110110011111000)))
(assert (= r (fp #b0 #b10111100110 #b0001010010100100010110111101010101011110000110110110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
