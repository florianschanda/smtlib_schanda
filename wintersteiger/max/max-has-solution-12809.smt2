(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5820903317969545742727177639608271420001983642578125p-151 {+ 2621501801376733 -151 (5.54245e-046)}
; Y = -1.80055366102497682589955729781650006771087646484375p181 {- 3605373169482172 181 (-5.51868e+054)}
; 1.5820903317969545742727177639608271420001983642578125p-151 M -1.80055366102497682589955729781650006771087646484375p181 == 1.5820903317969545742727177639608271420001983642578125p-151
; [HW: 1.5820903317969545742727177639608271420001983642578125p-151] 

; mpf : + 2621501801376733 -151
; mpfd: + 2621501801376733 -151 (5.54245e-046) class: Pos. norm. non-zero
; hwf : + 2621501801376733 -151 (5.54245e-046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101000 #b1001010100000011110111110011101001100010101111011101)))
(assert (= y (fp #b1 #b10010110100 #b1100110011110001000101011011000011001011100110111100)))
(assert (= r (fp #b0 #b01101101000 #b1001010100000011110111110011101001100010101111011101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
