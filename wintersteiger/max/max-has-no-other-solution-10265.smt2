(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.093116465308630491648500537849031388759613037109375p980 {- 419359278466006 980 (-1.11702e+295)}
; Y = -1.1800719963879895413327858477714471518993377685546875p228 {- 810972175832811 228 (-5.09035e+068)}
; -1.093116465308630491648500537849031388759613037109375p980 M -1.1800719963879895413327858477714471518993377685546875p228 == -1.1800719963879895413327858477714471518993377685546875p228
; [HW: -1.1800719963879895413327858477714471518993377685546875p228] 

; mpf : - 810972175832811 228
; mpfd: - 810972175832811 228 (-5.09035e+068) class: Neg. norm. non-zero
; hwf : - 810972175832811 228 (-5.09035e+068) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010011 #b0001011111010110011110110000110100111000001111010110)))
(assert (= y (fp #b1 #b10011100011 #b0010111000011001001100101100011101101001011011101011)))
(assert (= r (fp #b1 #b10011100011 #b0010111000011001001100101100011101101001011011101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
