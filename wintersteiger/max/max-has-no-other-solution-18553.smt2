(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8464144350515321324479600662016309797763824462890625p837 {- 3811911734299089 837 (-1.69214e+252)}
; Y = -1.5862625883998211495651275981799699366092681884765625p-931 {- 2640291974658697 -931 (-8.73875e-281)}
; -1.8464144350515321324479600662016309797763824462890625p837 M -1.5862625883998211495651275981799699366092681884765625p-931 == -1.5862625883998211495651275981799699366092681884765625p-931
; [HW: -1.5862625883998211495651275981799699366092681884765625p-931] 

; mpf : - 2640291974658697 -931
; mpfd: - 2640291974658697 -931 (-8.73875e-281) class: Neg. norm. non-zero
; hwf : - 2640291974658697 -931 (-8.73875e-281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000100 #b1101100010101110100111011100110101101000100111010001)))
(assert (= y (fp #b1 #b00001011100 #b1001011000010101010011100001010000001011101010001001)))
(assert (= r (fp #b1 #b00001011100 #b1001011000010101010011100001010000001011101010001001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
