(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.249189926705487341251910038408823311328887939453125p77 {- 1122251661055314 77 (-1.88772e+023)}
; Y = -1.5117370510992806931227505629067309200763702392578125p417 {- 2304658792642397 417 (-5.11664e+125)}
; -1.249189926705487341251910038408823311328887939453125p77 M -1.5117370510992806931227505629067309200763702392578125p417 == -1.249189926705487341251910038408823311328887939453125p77
; [HW: -1.249189926705487341251910038408823311328887939453125p77] 

; mpf : - 1122251661055314 77
; mpfd: - 1122251661055314 77 (-1.88772e+023) class: Neg. norm. non-zero
; hwf : - 1122251661055314 77 (-1.88772e+023) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001100 #b0011111111001010111010010011100110110001010101010010)))
(assert (= y (fp #b1 #b10110100000 #b1000001100000001001100110000101010011111011101011101)))
(assert (= r (fp #b1 #b10001001100 #b0011111111001010111010010011100110110001010101010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
