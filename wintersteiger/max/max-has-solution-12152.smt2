(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.743567065809883853688688759575597941875457763671875p-42 {+ 3348728360506366 -42 (3.96441e-013)}
; Y = 1.8456877800696631641841349846799857914447784423828125p916 {+ 3808639171193517 916 (1.02243e+276)}
; 1.743567065809883853688688759575597941875457763671875p-42 M 1.8456877800696631641841349846799857914447784423828125p916 == 1.8456877800696631641841349846799857914447784423828125p916
; [HW: 1.8456877800696631641841349846799857914447784423828125p916] 

; mpf : + 3808639171193517 916
; mpfd: + 3808639171193517 916 (1.02243e+276) class: Pos. norm. non-zero
; hwf : + 3808639171193517 916 (1.02243e+276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111010101 #b1011111001011010011010010100011000001001001111111110)))
(assert (= y (fp #b0 #b11110010011 #b1101100001111110111111101000111000000110101010101101)))
(assert (= r (fp #b0 #b11110010011 #b1101100001111110111111101000111000000110101010101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
