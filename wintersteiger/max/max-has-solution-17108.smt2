(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.603285628262236972574328319751657545566558837890625p384 {- 2716956930639786 384 (-6.31727e+115)}
; Y = 1.4891052191761009471093757383641786873340606689453125p736 {+ 2202734082826453 736 (5.38273e+221)}
; -1.603285628262236972574328319751657545566558837890625p384 M 1.4891052191761009471093757383641786873340606689453125p736 == 1.4891052191761009471093757383641786873340606689453125p736
; [HW: 1.4891052191761009471093757383641786873340606689453125p736] 

; mpf : + 2202734082826453 736
; mpfd: + 2202734082826453 736 (5.38273e+221) class: Pos. norm. non-zero
; hwf : + 2202734082826453 736 (5.38273e+221) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111111 #b1001101001110000111011010100101110001000011110101010)))
(assert (= y (fp #b0 #b11011011111 #b0111110100110101111111111110100010101010000011010101)))
(assert (= r (fp #b0 #b11011011111 #b0111110100110101111111111110100010101010000011010101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
