(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.66395301656053362648890470154583454132080078125p-704 {+ 2990178557973536 -704 (1.97708e-212)}
; Y = -1.6309830790826964630468864925205707550048828125p250 {- 2841695159833920 250 (-2.95086e+075)}
; 1.66395301656053362648890470154583454132080078125p-704 M -1.6309830790826964630468864925205707550048828125p250 == 1.66395301656053362648890470154583454132080078125p-704
; [HW: 1.66395301656053362648890470154583454132080078125p-704] 

; mpf : + 2990178557973536 -704
; mpfd: + 2990178557973536 -704 (1.97708e-212) class: Pos. norm. non-zero
; hwf : + 2990178557973536 -704 (1.97708e-212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111111 #b1010100111111000110100110010110000110101010000100000)))
(assert (= y (fp #b1 #b10011111001 #b1010000110001000000110110110100011111101010101000000)))
(assert (= r (fp #b0 #b00100111111 #b1010100111111000110100110010110000110101010000100000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
