(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.7013730819213443989923462140723131597042083740234375p-1022 {+ 3158703550388663 -1023 (1.56061e-308)}
; Y = -1.207263370211502984119533721241168677806854248046875p-722 {- 933431236852078 -722 (-5.47199e-218)}
; 0.7013730819213443989923462140723131597042083740234375p-1022 M -1.207263370211502984119533721241168677806854248046875p-722 == 0.7013730819213443989923462140723131597042083740234375p-1022
; [HW: 0.7013730819213443989923462140723131597042083740234375p-1022] 

; mpf : + 3158703550388663 -1023
; mpfd: + 3158703550388663 -1023 (1.56061e-308) class: Pos. denorm.
; hwf : + 3158703550388663 -1023 (1.56061e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1011001110001101001011111011000100100101100110110111)))
(assert (= y (fp #b1 #b00100101101 #b0011010100001111001101100101010010110111100101101110)))
(assert (= r (fp #b0 #b00000000000 #b1011001110001101001011111011000100100101100110110111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
