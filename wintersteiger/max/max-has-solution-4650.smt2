(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9818425509463128975085055571980774402618408203125p-412 {+ 4421825746578312 -412 (1.87375e-124)}
; Y = -1.44672379483356738916199901723302900791168212890625p444 {- 2011865115949988 444 (-6.57209e+133)}
; 1.9818425509463128975085055571980774402618408203125p-412 M -1.44672379483356738916199901723302900791168212890625p444 == 1.9818425509463128975085055571980774402618408203125p-412
; [HW: 1.9818425509463128975085055571980774402618408203125p-412] 

; mpf : + 4421825746578312 -412
; mpfd: + 4421825746578312 -412 (1.87375e-124) class: Pos. norm. non-zero
; hwf : + 4421825746578312 -412 (1.87375e-124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100011 #b1111101101011010000010001000111000100010101110001000)))
(assert (= y (fp #b1 #b10110111011 #b0111001001011100011111011001100100100111101110100100)))
(assert (= r (fp #b0 #b01001100011 #b1111101101011010000010001000111000100010101110001000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
