(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.673601892424106285517382275429554283618927001953125p-587 {+ 3033633231717266 -587 (3.30404e-177)}
; Y = 1.231358718862050505293836977216415107250213623046875p-891 {+ 1041947040056046 -891 (7.45862e-269)}
; 1.673601892424106285517382275429554283618927001953125p-587 M 1.231358718862050505293836977216415107250213623046875p-891 == 1.673601892424106285517382275429554283618927001953125p-587
; [HW: 1.673601892424106285517382275429554283618927001953125p-587] 

; mpf : + 3033633231717266 -587
; mpfd: + 3033633231717266 -587 (3.30404e-177) class: Pos. norm. non-zero
; hwf : + 3033633231717266 -587 (3.30404e-177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110110100 #b1010110001110001001011000111001001111100001110010010)))
(assert (= y (fp #b0 #b00010000100 #b0011101100111010010100110011001100101000001011101110)))
(assert (= r (fp #b0 #b00110110100 #b1010110001110001001011000111001001111100001110010010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
