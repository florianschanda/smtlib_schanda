(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6626337764597096668950371167738921940326690673828125p874 {- 2984237228747053 874 (-2.09417e+263)}
; Y = -1.3786411703731571432030023061088286340236663818359375p639 {- 1705248233799679 639 (-3.14498e+192)}
; -1.6626337764597096668950371167738921940326690673828125p874 M -1.3786411703731571432030023061088286340236663818359375p639 == -1.3786411703731571432030023061088286340236663818359375p639
; [HW: -1.3786411703731571432030023061088286340236663818359375p639] 

; mpf : - 1705248233799679 639
; mpfd: - 1705248233799679 639 (-3.14498e+192) class: Neg. norm. non-zero
; hwf : - 1705248233799679 639 (-3.14498e+192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101001 #b1010100110100010010111011111111100011110100100101101)))
(assert (= y (fp #b1 #b11001111110 #b0110000011101110101000001011001110101011111111111111)))
(assert (= r (fp #b1 #b11001111110 #b0110000011101110101000001011001110101011111111111111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
