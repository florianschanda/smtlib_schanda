(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.307822507954110591299468069337308406829833984375p883 {- 1386309332118384 883 (-8.43403e+265)}
; Y = 1.2217971576360511232195449338178150355815887451171875p28 {+ 998885596481555 28 (3.27974e+008)}
; -1.307822507954110591299468069337308406829833984375p883 M 1.2217971576360511232195449338178150355815887451171875p28 == 1.2217971576360511232195449338178150355815887451171875p28
; [HW: 1.2217971576360511232195449338178150355815887451171875p28] 

; mpf : + 998885596481555 28
; mpfd: + 998885596481555 28 (3.27974e+008) class: Pos. norm. non-zero
; hwf : + 998885596481555 28 (3.27974e+008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110010 #b0100111011001101011101001011010010100010101101110000)))
(assert (= y (fp #b0 #b10000011011 #b0011100011000111101100101101001001100100100000010011)))
(assert (= r (fp #b0 #b10000011011 #b0011100011000111101100101101001001100100100000010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
