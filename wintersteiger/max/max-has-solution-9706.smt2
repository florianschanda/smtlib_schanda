(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9140184666693844661722323508001863956451416015625p-181 {+ 4116373225901992 -181 (6.24478e-055)}
; Y = 1.1191230656156470057993601585621945559978485107421875p861 {+ 536482593917859 861 (1.7207e+259)}
; 1.9140184666693844661722323508001863956451416015625p-181 M 1.1191230656156470057993601585621945559978485107421875p861 == 1.1191230656156470057993601585621945559978485107421875p861
; [HW: 1.1191230656156470057993601585621945559978485107421875p861] 

; mpf : + 536482593917859 861
; mpfd: + 536482593917859 861 (1.7207e+259) class: Pos. norm. non-zero
; hwf : + 536482593917859 861 (1.7207e+259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001010 #b1110100111111101000111010011111001001000111110101000)))
(assert (= y (fp #b0 #b11101011100 #b0001111001111110110110010110011100000100101110100011)))
(assert (= r (fp #b0 #b11101011100 #b0001111001111110110110010110011100000100101110100011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
