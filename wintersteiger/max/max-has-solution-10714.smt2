(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8134796451542174455795475296326912939548492431640625p107 {+ 3663586626790017 107 (2.94254e+032)}
; Y = 1.981193601061764564263967258739285171031951904296875p259 {+ 4418903136120078 259 (1.83525e+078)}
; 1.8134796451542174455795475296326912939548492431640625p107 M 1.981193601061764564263967258739285171031951904296875p259 == 1.981193601061764564263967258739285171031951904296875p259
; [HW: 1.981193601061764564263967258739285171031951904296875p259] 

; mpf : + 4418903136120078 259
; mpfd: + 4418903136120078 259 (1.83525e+078) class: Pos. norm. non-zero
; hwf : + 4418903136120078 259 (1.83525e+078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101010 #b1101000001000000001100111011011111100110001010000001)))
(assert (= y (fp #b0 #b10100000010 #b1111101100101111100000001111101110011010110100001110)))
(assert (= r (fp #b0 #b10100000010 #b1111101100101111100000001111101110011010110100001110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
