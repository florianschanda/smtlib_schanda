(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.713435299171937487017203238792717456817626953125p-629 {- 3213026947503696 -629 (-7.69131e-190)}
; Y = 1.9733634557170474099763168851495720446109771728515625p229 {+ 4383639296463353 229 (1.70246e+069)}
; -1.713435299171937487017203238792717456817626953125p-629 M 1.9733634557170474099763168851495720446109771728515625p229 == 1.9733634557170474099763168851495720446109771728515625p229
; [HW: 1.9733634557170474099763168851495720446109771728515625p229] 

; mpf : + 4383639296463353 229
; mpfd: + 4383639296463353 229 (1.70246e+069) class: Pos. norm. non-zero
; hwf : + 4383639296463353 229 (1.70246e+069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001010 #b1011011010100011101100100001110111000001011001010000)))
(assert (= y (fp #b0 #b10011100100 #b1111100100101110010110001111000101101101000111111001)))
(assert (= r (fp #b0 #b10011100100 #b1111100100101110010110001111000101101101000111111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
