(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2594215596586106897802892490290105342864990234375p350 {- 1168330839410392 350 (-2.88848e+105)}
; Y = 1.9774796883293974669726367210387252271175384521484375p978 {+ 4402177160122503 978 (5.05182e+294)}
; -1.2594215596586106897802892490290105342864990234375p350 M 1.9774796883293974669726367210387252271175384521484375p978 == 1.9774796883293974669726367210387252271175384521484375p978
; [HW: 1.9774796883293974669726367210387252271175384521484375p978] 

; mpf : + 4402177160122503 978
; mpfd: + 4402177160122503 978 (5.05182e+294) class: Pos. norm. non-zero
; hwf : + 4402177160122503 978 (5.05182e+294) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101011101 #b0100001001101001011100111000101010011100011011011000)))
(assert (= y (fp #b0 #b11111010001 #b1111101000111100000110111101110111100001000010000111)))
(assert (= r (fp #b0 #b11111010001 #b1111101000111100000110111101110111100001000010000111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
