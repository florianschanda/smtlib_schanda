(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.42260804377361349537522983155213296413421630859375p-749 {+ 1903257428462620 -749 (4.80417e-226)}
; Y = 1.153723247631088355547035462222993373870849609375p614 {+ 692307960749552 614 (7.84366e+184)}
; 1.42260804377361349537522983155213296413421630859375p-749 M 1.153723247631088355547035462222993373870849609375p614 == 1.153723247631088355547035462222993373870849609375p614
; [HW: 1.153723247631088355547035462222993373870849609375p614] 

; mpf : + 692307960749552 614
; mpfd: + 692307960749552 614 (7.84366e+184) class: Pos. norm. non-zero
; hwf : + 692307960749552 614 (7.84366e+184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010010 #b0110110000110000000010100110111100001000110000011100)))
(assert (= y (fp #b0 #b11001100101 #b0010011101011010011010000010000100110101110111110000)))
(assert (= r (fp #b0 #b11001100101 #b0010011101011010011010000010000100110101110111110000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
