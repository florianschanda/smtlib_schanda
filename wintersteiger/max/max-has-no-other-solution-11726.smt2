(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3730579318818529888091006796457804739475250244140625p-370 {- 1680103563010721 -370 (-5.7094e-112)}
; Y = -1.5448422121911378201986053682048805058002471923828125p-247 {- 2453751183799725 -247 (-6.83086e-075)}
; -1.3730579318818529888091006796457804739475250244140625p-370 M -1.5448422121911378201986053682048805058002471923828125p-247 == -1.3730579318818529888091006796457804739475250244140625p-370
; [HW: -1.3730579318818529888091006796457804739475250244140625p-370] 

; mpf : - 1680103563010721 -370
; mpfd: - 1680103563010721 -370 (-5.7094e-112) class: Neg. norm. non-zero
; hwf : - 1680103563010721 -370 (-5.7094e-112) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010001101 #b0101111110000000101110011000000011110010001010100001)))
(assert (= y (fp #b1 #b01100001000 #b1000101101111010110001110111101011010111010110101101)))
(assert (= r (fp #b1 #b01010001101 #b0101111110000000101110011000000011110010001010100001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
