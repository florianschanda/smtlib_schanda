(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0545768818446017434098394005559384822845458984375p-555 {+ 245792424738392 -555 (8.94192e-168)}
; Y = -1.3631640668104816338512819129391573369503021240234375p-969 {- 1635545555962039 -969 (-2.73201e-292)}
; 1.0545768818446017434098394005559384822845458984375p-555 M -1.3631640668104816338512819129391573369503021240234375p-969 == 1.0545768818446017434098394005559384822845458984375p-555
; [HW: 1.0545768818446017434098394005559384822845458984375p-555] 

; mpf : + 245792424738392 -555
; mpfd: + 245792424738392 -555 (8.94192e-168) class: Pos. norm. non-zero
; hwf : + 245792424738392 -555 (8.94192e-168) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111010100 #b0000110111111000110000000010001010100011111001011000)))
(assert (= y (fp #b1 #b00000110110 #b0101110011111000010100011111111000001000100010110111)))
(assert (= r (fp #b0 #b00111010100 #b0000110111111000110000000010001010100011111001011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
