(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3717350884838210856031537332455627620220184326171875p203 {- 1674146005976275 203 (-1.76343e+061)}
; Y = -1.1085694926033575757884364065830595791339874267578125p-608 {- 488953526432285 -608 (-1.04358e-183)}
; -1.3717350884838210856031537332455627620220184326171875p203 M -1.1085694926033575757884364065830595791339874267578125p-608 == -1.1085694926033575757884364065830595791339874267578125p-608
; [HW: -1.1085694926033575757884364065830595791339874267578125p-608] 

; mpf : - 488953526432285 -608
; mpfd: - 488953526432285 -608 (-1.04358e-183) class: Neg. norm. non-zero
; hwf : - 488953526432285 -608 (-1.04358e-183) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001010 #b0101111100101010000001111101111111010000010011010011)))
(assert (= y (fp #b1 #b00110011111 #b0001101111001011001101011101010000010011001000011101)))
(assert (= r (fp #b1 #b00110011111 #b0001101111001011001101011101010000010011001000011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
