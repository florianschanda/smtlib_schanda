(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.307542966153991681466095542418770492076873779296875p-816 {- 1385050387771534 -816 (-2.99212e-246)}
; Y = -1.26534206522070657996437148540280759334564208984375p-955 {- 1194994426053692 -955 (-4.15491e-288)}
; -1.307542966153991681466095542418770492076873779296875p-816 M -1.26534206522070657996437148540280759334564208984375p-955 == -1.26534206522070657996437148540280759334564208984375p-955
; [HW: -1.26534206522070657996437148540280759334564208984375p-955] 

; mpf : - 1194994426053692 -955
; mpfd: - 1194994426053692 -955 (-4.15491e-288) class: Neg. norm. non-zero
; hwf : - 1194994426053692 -955 (-4.15491e-288) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001111 #b0100111010111011001000101100010110111111000010001110)))
(assert (= y (fp #b1 #b00001000100 #b0100001111101101011101010010010001100000010000111100)))
(assert (= r (fp #b1 #b00001000100 #b0100001111101101011101010010010001100000010000111100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
