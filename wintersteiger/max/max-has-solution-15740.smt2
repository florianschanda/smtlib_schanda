(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.13426488166023897719014712492935359477996826171875p752 {- 604675271013996 752 (-2.68702e+226)}
; Y = -1.7549626417220556273690590387559495866298675537109375p27 {- 3400049471938095 27 (-2.35547e+008)}
; -1.13426488166023897719014712492935359477996826171875p752 M -1.7549626417220556273690590387559495866298675537109375p27 == -1.7549626417220556273690590387559495866298675537109375p27
; [HW: -1.7549626417220556273690590387559495866298675537109375p27] 

; mpf : - 3400049471938095 27
; mpfd: - 3400049471938095 27 (-2.35547e+008) class: Neg. norm. non-zero
; hwf : - 3400049471938095 27 (-2.35547e+008) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101111 #b0010001001011111001011101110101110111011011001101100)))
(assert (= y (fp #b1 #b10000011010 #b1100000101000101001110110100111111100101111000101111)))
(assert (= r (fp #b1 #b10000011010 #b1100000101000101001110110100111111100101111000101111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
