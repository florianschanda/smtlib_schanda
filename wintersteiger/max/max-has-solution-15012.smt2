(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.215745571550538528526885784231126308441162109375p520 {+ 971631675641840 520 (4.17292e+156)}
; Y = -1.7488123705532583329613771638832986354827880859375p871 {- 3372351112994072 871 (-2.7534e+262)}
; 1.215745571550538528526885784231126308441162109375p520 M -1.7488123705532583329613771638832986354827880859375p871 == 1.215745571550538528526885784231126308441162109375p520
; [HW: 1.215745571550538528526885784231126308441162109375p520] 

; mpf : + 971631675641840 520
; mpfd: + 971631675641840 520 (4.17292e+156) class: Pos. norm. non-zero
; hwf : + 971631675641840 520 (4.17292e+156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000111 #b0011011100111011000110100000111000010000111111110000)))
(assert (= y (fp #b1 #b11101100110 #b1011111110110010001010101110001001011101110100011000)))
(assert (= r (fp #b0 #b11000000111 #b0011011100111011000110100000111000010000111111110000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
