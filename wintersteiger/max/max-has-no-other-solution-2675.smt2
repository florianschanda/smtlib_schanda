(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.273211475591008667862524816882796585559844970703125p-414 {- 1230435099665010 -414 (-3.00942e-125)}
; Y = -1.8137943404469030195258483217912726104259490966796875p863 {- 3665003888392891 863 (-1.11551e+260)}
; -1.273211475591008667862524816882796585559844970703125p-414 M -1.8137943404469030195258483217912726104259490966796875p863 == -1.273211475591008667862524816882796585559844970703125p-414
; [HW: -1.273211475591008667862524816882796585559844970703125p-414] 

; mpf : - 1230435099665010 -414
; mpfd: - 1230435099665010 -414 (-3.00942e-125) class: Neg. norm. non-zero
; hwf : - 1230435099665010 -414 (-3.00942e-125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100001 #b0100010111110001001011111111000010001110001001110010)))
(assert (= y (fp #b1 #b11101011110 #b1101000001010100110100110110110111100011101010111011)))
(assert (= r (fp #b1 #b01001100001 #b0100010111110001001011111111000010001110001001110010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
