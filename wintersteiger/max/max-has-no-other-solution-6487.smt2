(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0542464100846127283972464283579029142856597900390625p1018 {- 244304112243249 1018 (-2.96127e+306)}
; Y = -1.418108231225646331807865863083861768245697021484375p-256 {- 1882992074348358 -256 (-1.2247e-077)}
; -1.0542464100846127283972464283579029142856597900390625p1018 M -1.418108231225646331807865863083861768245697021484375p-256 == -1.418108231225646331807865863083861768245697021484375p-256
; [HW: -1.418108231225646331807865863083861768245697021484375p-256] 

; mpf : - 1882992074348358 -256
; mpfd: - 1882992074348358 -256 (-1.2247e-077) class: Neg. norm. non-zero
; hwf : - 1882992074348358 -256 (-1.2247e-077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111001 #b0000110111100011000101111011110100111101001000110001)))
(assert (= y (fp #b1 #b01011111111 #b0110101100001001001001000001101101001101011101000110)))
(assert (= r (fp #b1 #b01011111111 #b0110101100001001001001000001101101001101011101000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
