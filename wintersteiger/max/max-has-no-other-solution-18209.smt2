(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.809280930994443092885148871573619544506072998046875p-184 {+ 3644677299264622 -184 (7.37882e-056)}
; Y = 1.9107069486212846509687324214610271155834197998046875p658 {+ 4101459474454539 658 (2.28524e+198)}
; 1.809280930994443092885148871573619544506072998046875p-184 M 1.9107069486212846509687324214610271155834197998046875p658 == 1.9107069486212846509687324214610271155834197998046875p658
; [HW: 1.9107069486212846509687324214610271155834197998046875p658] 

; mpf : + 4101459474454539 658
; mpfd: + 4101459474454539 658 (2.28524e+198) class: Pos. norm. non-zero
; hwf : + 4101459474454539 658 (2.28524e+198) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000111 #b1100111100101101000010001111101111100101110001101110)))
(assert (= y (fp #b0 #b11010010001 #b1110100100100100000101110011000010010001100000001011)))
(assert (= r (fp #b0 #b11010010001 #b1110100100100100000101110011000010010001100000001011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
