(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.008832815854864950466662776307202875614166259765625p-125 {- 39779466192602 -125 (-2.37175e-038)}
; Y = -1.6083286375951200142253583180718123912811279296875p-219 {- 2739668625592184 -219 (-1.909e-066)}
; -1.008832815854864950466662776307202875614166259765625p-125 M -1.6083286375951200142253583180718123912811279296875p-219 == -1.6083286375951200142253583180718123912811279296875p-219
; [HW: -1.6083286375951200142253583180718123912811279296875p-219] 

; mpf : - 2739668625592184 -219
; mpfd: - 2739668625592184 -219 (-1.909e-066) class: Neg. norm. non-zero
; hwf : - 2739668625592184 -219 (-1.909e-066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000010 #b0000001001000010110111100000111100111010011011011010)))
(assert (= y (fp #b1 #b01100100100 #b1001101110111011011011001111001110110000111101111000)))
(assert (= r (fp #b1 #b01100100100 #b1001101110111011011011001111001110110000111101111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
