(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4490059266391688286290673204348422586917877197265625p-597 {+ 2022142923899305 -597 (2.79359e-180)}
; Y = -1.84292069833849492255239965743385255336761474609375p-785 {- 3796177342940124 -785 (-9.05649e-237)}
; 1.4490059266391688286290673204348422586917877197265625p-597 M -1.84292069833849492255239965743385255336761474609375p-785 == 1.4490059266391688286290673204348422586917877197265625p-597
; [HW: 1.4490059266391688286290673204348422586917877197265625p-597] 

; mpf : + 2022142923899305 -597
; mpfd: + 2022142923899305 -597 (2.79359e-180) class: Pos. norm. non-zero
; hwf : + 2022142923899305 -597 (2.79359e-180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110101010 #b0111001011110010000011010110101010100000000110101001)))
(assert (= y (fp #b1 #b00011101110 #b1101011111001001101001101010000001111100001111011100)))
(assert (= r (fp #b0 #b00110101010 #b0111001011110010000011010110101010100000000110101001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
