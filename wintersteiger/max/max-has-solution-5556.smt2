(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9247306390906284701003414738806895911693572998046875p808 {- 4164616561626635 808 (-3.28554e+243)}
; Y = -1.441083394172416820566695605521090328693389892578125p811 {- 1986463009634210 811 (-1.96796e+244)}
; -1.9247306390906284701003414738806895911693572998046875p808 M -1.441083394172416820566695605521090328693389892578125p811 == -1.9247306390906284701003414738806895911693572998046875p808
; [HW: -1.9247306390906284701003414738806895911693572998046875p808] 

; mpf : - 4164616561626635 808
; mpfd: - 4164616561626635 808 (-3.28554e+243) class: Neg. norm. non-zero
; hwf : - 4164616561626635 808 (-3.28554e+243) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100100111 #b1110110010111011001001011010110010000000111000001011)))
(assert (= y (fp #b1 #b11100101010 #b0111000011101010110101110110000011000111011110100010)))
(assert (= r (fp #b1 #b11100100111 #b1110110010111011001001011010110010000000111000001011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
