(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.347356195561990599429691428667865693569183349609375p-476 {- 1564353232897814 -476 (-6.90565e-144)}
; Y = -1.6729955799459703680298616745858453214168548583984375p-396 {- 3030902643066663 -396 (-1.03661e-119)}
; -1.347356195561990599429691428667865693569183349609375p-476 M -1.6729955799459703680298616745858453214168548583984375p-396 == -1.347356195561990599429691428667865693569183349609375p-476
; [HW: -1.347356195561990599429691428667865693569183349609375p-476] 

; mpf : - 1564353232897814 -476
; mpfd: - 1564353232897814 -476 (-6.90565e-144) class: Neg. norm. non-zero
; hwf : - 1564353232897814 -476 (-6.90565e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100011 #b0101100011101100010101011110110000000000011100010110)))
(assert (= y (fp #b1 #b01001110011 #b1010110001001001011100000011011000111000011100100111)))
(assert (= r (fp #b1 #b01000100011 #b0101100011101100010101011110110000000000011100010110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
