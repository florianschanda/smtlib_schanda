(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.478192947185366978857246067491360008716583251953125p145 {+ 2153589578755218 145 (6.59296e+043)}
; Y = -1.8430248490111240666777803198783658444881439208984375p-449 {- 3796646395870567 -449 (-1.26784e-135)}
; 1.478192947185366978857246067491360008716583251953125p145 M -1.8430248490111240666777803198783658444881439208984375p-449 == 1.478192947185366978857246067491360008716583251953125p145
; [HW: 1.478192947185366978857246067491360008716583251953125p145] 

; mpf : + 2153589578755218 145
; mpfd: + 2153589578755218 145 (6.59296e+043) class: Pos. norm. non-zero
; hwf : + 2153589578755218 145 (6.59296e+043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010000 #b0111101001101010110110100101110101010110110010010010)))
(assert (= y (fp #b1 #b01000111110 #b1101011111010000011110011111110000110111110101100111)))
(assert (= r (fp #b0 #b10010010000 #b0111101001101010110110100101110101010110110010010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
