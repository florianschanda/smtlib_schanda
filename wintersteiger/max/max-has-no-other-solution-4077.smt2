(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2014390149591387402239206494414247572422027587890625p-119 {- 907200672707857 -119 (-1.80772e-036)}
; Y = -1.1946046213598549012857574780355207622051239013671875p653 {- 876421300240819 653 (-4.4649e+196)}
; -1.2014390149591387402239206494414247572422027587890625p-119 M -1.1946046213598549012857574780355207622051239013671875p653 == -1.2014390149591387402239206494414247572422027587890625p-119
; [HW: -1.2014390149591387402239206494414247572422027587890625p-119] 

; mpf : - 907200672707857 -119
; mpfd: - 907200672707857 -119 (-1.80772e-036) class: Neg. norm. non-zero
; hwf : - 907200672707857 -119 (-1.80772e-036) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001000 #b0011001110010001100000011101110101100011010100010001)))
(assert (= y (fp #b1 #b11010001100 #b0011000111010001100110111100010001100100000110110011)))
(assert (= r (fp #b1 #b01110001000 #b0011001110010001100000011101110101100011010100010001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
