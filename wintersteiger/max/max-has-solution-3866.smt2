(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1233918346726117221123786293901503086090087890625p-574 {+ 555707420652136 -574 (1.81683e-173)}
; Y = -1.971335438494623559790852596051990985870361328125p26 {- 4374505918856144 26 (-1.32294e+008)}
; 1.1233918346726117221123786293901503086090087890625p-574 M -1.971335438494623559790852596051990985870361328125p26 == 1.1233918346726117221123786293901503086090087890625p-574
; [HW: 1.1233918346726117221123786293901503086090087890625p-574] 

; mpf : + 555707420652136 -574
; mpfd: + 555707420652136 -574 (1.81683e-173) class: Pos. norm. non-zero
; hwf : + 555707420652136 -574 (1.81683e-173) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000001 #b0001111110010110100110110111011010000011001001101000)))
(assert (= y (fp #b1 #b10000011001 #b1111100010101001011100000111010111000111101111010000)))
(assert (= r (fp #b0 #b00111000001 #b0001111110010110100110110111011010000011001001101000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
