(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3098274353883587739488802981213666498661041259765625p-233 {- 1395338722564169 -233 (-9.4891e-071)}
; Y = 1.1841159043354922975055387723841704428195953369140625p758 {+ 829184318158305 758 (1.79527e+228)}
; -1.3098274353883587739488802981213666498661041259765625p-233 M 1.1841159043354922975055387723841704428195953369140625p758 == 1.1841159043354922975055387723841704428195953369140625p758
; [HW: 1.1841159043354922975055387723841704428195953369140625p758] 

; mpf : + 829184318158305 758
; mpfd: + 829184318158305 758 (1.79527e+228) class: Pos. norm. non-zero
; hwf : + 829184318158305 758 (1.79527e+228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010110 #b0100111101010000110110011100111001100101100001001001)))
(assert (= y (fp #b0 #b11011110101 #b0010111100100010001110000100101111001011010111100001)))
(assert (= r (fp #b0 #b11011110101 #b0010111100100010001110000100101111001011010111100001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
