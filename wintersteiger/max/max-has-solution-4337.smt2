(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2980741950535714668291120688081718981266021728515625p-708 {+ 1342406833772025 -708 (9.63968e-214)}
; Y = 1.8140846423024779010546581048402003943920135498046875p-890 {+ 3666311291721483 -890 (2.19766e-268)}
; 1.2980741950535714668291120688081718981266021728515625p-708 M 1.8140846423024779010546581048402003943920135498046875p-890 == 1.2980741950535714668291120688081718981266021728515625p-708
; [HW: 1.2980741950535714668291120688081718981266021728515625p-708] 

; mpf : + 1342406833772025 -708
; mpfd: + 1342406833772025 -708 (9.63968e-214) class: Pos. norm. non-zero
; hwf : + 1342406833772025 -708 (9.63968e-214) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111011 #b0100110001001110100101110010011110001001010111111001)))
(assert (= y (fp #b0 #b00010000101 #b1101000001100111110110011110001011011101011100001011)))
(assert (= r (fp #b0 #b00100111011 #b0100110001001110100101110010011110001001010111111001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
