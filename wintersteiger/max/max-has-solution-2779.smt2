(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.01743158165924274527469606255181133747100830078125p9 {- 78504864665044 9 (-520.925)}
; Y = 1.9441097460102392258107784073217771947383880615234375p580 {+ 4251892300328567 580 (7.6934e+174)}
; -1.01743158165924274527469606255181133747100830078125p9 M 1.9441097460102392258107784073217771947383880615234375p580 == 1.9441097460102392258107784073217771947383880615234375p580
; [HW: 1.9441097460102392258107784073217771947383880615234375p580] 

; mpf : + 4251892300328567 580
; mpfd: + 4251892300328567 580 (7.6934e+174) class: Pos. norm. non-zero
; hwf : + 4251892300328567 580 (7.6934e+174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001000 #b0000010001110110011001010110100100100100110111010100)))
(assert (= y (fp #b0 #b11001000011 #b1111000110110001001011010010001011110010111001110111)))
(assert (= r (fp #b0 #b11001000011 #b1111000110110001001011010010001011110010111001110111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
