(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1909520780013880258962899461039341986179351806640625p506 {- 859971707332673 506 (-2.49501e+152)}
; Y = -1.658739443260701218463282202719710767269134521484375p-711 {- 2966698711203142 -711 (-1.53975e-214)}
; -1.1909520780013880258962899461039341986179351806640625p506 M -1.658739443260701218463282202719710767269134521484375p-711 == -1.658739443260701218463282202719710767269134521484375p-711
; [HW: -1.658739443260701218463282202719710767269134521484375p-711] 

; mpf : - 2966698711203142 -711
; mpfd: - 2966698711203142 -711 (-1.53975e-214) class: Neg. norm. non-zero
; hwf : - 2966698711203142 -711 (-1.53975e-214) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111111001 #b0011000011100010001111000100001000011110100001000001)))
(assert (= y (fp #b1 #b00100111000 #b1010100010100011001001011110110101100011110101000110)))
(assert (= r (fp #b1 #b00100111000 #b1010100010100011001001011110110101100011110101000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
