(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2457619021569195094656379296793602406978607177734375p475 {- 1106813210975767 475 (-1.2153e+143)}
; Y = 1.2621772163529119126224031788296997547149658203125p-848 {+ 1180741213872008 -848 (6.72487e-256)}
; -1.2457619021569195094656379296793602406978607177734375p475 M 1.2621772163529119126224031788296997547149658203125p-848 == 1.2621772163529119126224031788296997547149658203125p-848
; [HW: 1.2621772163529119126224031788296997547149658203125p-848] 

; mpf : + 1180741213872008 -848
; mpfd: + 1180741213872008 -848 (6.72487e-256) class: Pos. norm. non-zero
; hwf : + 1180741213872008 -848 (6.72487e-256) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011010 #b0011111011101010010000001000010001011101111000010111)))
(assert (= y (fp #b0 #b00010101111 #b0100001100011110000010111100100111111101111110001000)))
(assert (= r (fp #b0 #b00010101111 #b0100001100011110000010111100100111111101111110001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
