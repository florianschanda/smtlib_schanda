(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.625368100780365754332024152972735464572906494140625p-126 {+ 2816407545643850 -126 (1.91061e-038)}
; Y = -1.277162454307759986704695620574057102203369140625p935 {- 1248228725941520 935 (-3.7093e+281)}
; 1.625368100780365754332024152972735464572906494140625p-126 M -1.277162454307759986704695620574057102203369140625p935 == 1.625368100780365754332024152972735464572906494140625p-126
; [HW: 1.625368100780365754332024152972735464572906494140625p-126] 

; mpf : + 2816407545643850 -126
; mpfd: + 2816407545643850 -126 (1.91061e-038) class: Pos. norm. non-zero
; hwf : + 2816407545643850 -126 (1.91061e-038) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110000001 #b1010000000011000000111111011010011010000001101001010)))
(assert (= y (fp #b1 #b11110100110 #b0100011011110100000111100101110011101110010100010000)))
(assert (= r (fp #b0 #b01110000001 #b1010000000011000000111111011010011010000001101001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
