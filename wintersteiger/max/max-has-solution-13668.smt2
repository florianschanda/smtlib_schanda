(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6443155830051197074936908393283374607563018798828125p-587 {+ 2901739419530861 -587 (3.24622e-177)}
; Y = 1.260923430160074243389090042910538613796234130859375p-780 {+ 1175094662841142 -780 (1.98286e-235)}
; 1.6443155830051197074936908393283374607563018798828125p-587 M 1.260923430160074243389090042910538613796234130859375p-780 == 1.6443155830051197074936908393283374607563018798828125p-587
; [HW: 1.6443155830051197074936908393283374607563018798828125p-587] 

; mpf : + 2901739419530861 -587
; mpfd: + 2901739419530861 -587 (3.24622e-177) class: Pos. norm. non-zero
; hwf : + 2901739419530861 -587 (3.24622e-177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110110100 #b1010010011110001110111011011010101001111011001101101)))
(assert (= y (fp #b0 #b00011110011 #b0100001011001011111000001011111101001100001100110110)))
(assert (= r (fp #b0 #b00110110100 #b1010010011110001110111011011010101001111011001101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
