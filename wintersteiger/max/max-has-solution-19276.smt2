(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.692365566618630356998664865386672317981719970703125p973 {+ 3118137307827826 973 (1.35108e+293)}
; Y = 1.6804743774738415407199454421061091125011444091796875p-225 {+ 3064584152826363 -225 (3.11661e-068)}
; 1.692365566618630356998664865386672317981719970703125p973 M 1.6804743774738415407199454421061091125011444091796875p-225 == 1.692365566618630356998664865386672317981719970703125p973
; [HW: 1.692365566618630356998664865386672317981719970703125p973] 

; mpf : + 3118137307827826 973
; mpfd: + 3118137307827826 973 (1.35108e+293) class: Pos. norm. non-zero
; hwf : + 3118137307827826 973 (1.35108e+293) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111001100 #b1011000100111110110111101010100110000000111001110010)))
(assert (= y (fp #b0 #b01100011110 #b1010111000110011100100011001110100000100000111111011)))
(assert (= r (fp #b0 #b11111001100 #b1011000100111110110111101010100110000000111001110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
