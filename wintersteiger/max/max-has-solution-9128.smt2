(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.994388362907641987220586088369600474834442138671875p-295 {- 4478327060652414 -295 (-3.133e-089)}
; Y = -1.0827371710819428951566578689380548894405364990234375p-895 {- 372615092854327 -895 (-4.09899e-270)}
; -1.994388362907641987220586088369600474834442138671875p-295 M -1.0827371710819428951566578689380548894405364990234375p-895 == -1.0827371710819428951566578689380548894405364990234375p-895
; [HW: -1.0827371710819428951566578689380548894405364990234375p-895] 

; mpf : - 372615092854327 -895
; mpfd: - 372615092854327 -895 (-4.09899e-270) class: Neg. norm. non-zero
; hwf : - 372615092854327 -895 (-4.09899e-270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011000 #b1111111010010000001111000101101000110110000101111110)))
(assert (= y (fp #b1 #b00010000000 #b0001010100101110010000110110001111110101111000110111)))
(assert (= r (fp #b1 #b00010000000 #b0001010100101110010000110110001111110101111000110111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
