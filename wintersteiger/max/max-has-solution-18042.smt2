(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.820606206250363623411203661817125976085662841796875p-152 {- 3695681804687054 -152 (-3.18902e-046)}
; Y = -1.73320323195222680823235350544564425945281982421875p353 {- 3302053802206892 353 (-3.18008e+106)}
; -1.820606206250363623411203661817125976085662841796875p-152 M -1.73320323195222680823235350544564425945281982421875p353 == -1.820606206250363623411203661817125976085662841796875p-152
; [HW: -1.820606206250363623411203661817125976085662841796875p-152] 

; mpf : - 3695681804687054 -152
; mpfd: - 3695681804687054 -152 (-3.18902e-046) class: Neg. norm. non-zero
; hwf : - 3695681804687054 -152 (-3.18902e-046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100111 #b1101001000010011001111111001001010111101011011001110)))
(assert (= y (fp #b1 #b10101100000 #b1011101110110011001101001111111010001110011010101100)))
(assert (= r (fp #b1 #b01101100111 #b1101001000010011001111111001001010111101011011001110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
