(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.533517886040848043904816222493536770343780517578125p-827 {+ 2402750952769058 -827 (1.71349e-249)}
; Y = -1.566812662877307360531631275080144405364990234375p966 {- 2552697297323120 966 (-9.77221e+290)}
; 1.533517886040848043904816222493536770343780517578125p-827 M -1.566812662877307360531631275080144405364990234375p966 == 1.533517886040848043904816222493536770343780517578125p-827
; [HW: 1.533517886040848043904816222493536770343780517578125p-827] 

; mpf : + 2402750952769058 -827
; mpfd: + 2402750952769058 -827 (1.71349e-249) class: Pos. norm. non-zero
; hwf : + 2402750952769058 -827 (1.71349e-249) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000100 #b1000100010010100101000001101000001100000011000100010)))
(assert (= y (fp #b1 #b11111000101 #b1001000100011010101000100111101000000100010001110000)))
(assert (= r (fp #b0 #b00011000100 #b1000100010010100101000001101000001100000011000100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
