(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4447917430022922946619701178860850632190704345703125p-521 {- 2003163928042597 -521 (-2.10464e-157)}
; Y = -1.3252808860551823499918100424110889434814453125p644 {- 1464934877228864 644 (-9.67442e+193)}
; -1.4447917430022922946619701178860850632190704345703125p-521 M -1.3252808860551823499918100424110889434814453125p644 == -1.4447917430022922946619701178860850632190704345703125p-521
; [HW: -1.4447917430022922946619701178860850632190704345703125p-521] 

; mpf : - 2003163928042597 -521
; mpfd: - 2003163928042597 -521 (-2.10464e-157) class: Neg. norm. non-zero
; hwf : - 2003163928042597 -521 (-2.10464e-157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110110 #b0111000111011101110111110010010110111001110001100101)))
(assert (= y (fp #b1 #b11010000011 #b0101001101000101100110111010111110011110111101000000)))
(assert (= r (fp #b1 #b00111110110 #b0111000111011101110111110010010110111001110001100101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
