(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.60312429611348772340306823025457561016082763671875p738 {- 2716230355234796 738 (-2.31795e+222)}
; Y = -1.4426925767242366749343318588216789066791534423828125p-465 {- 1993710123574957 -465 (-1.51435e-140)}
; -1.60312429611348772340306823025457561016082763671875p738 M -1.4426925767242366749343318588216789066791534423828125p-465 == -1.4426925767242366749343318588216789066791534423828125p-465
; [HW: -1.4426925767242366749343318588216789066791534423828125p-465] 

; mpf : - 1993710123574957 -465
; mpfd: - 1993710123574957 -465 (-1.51435e-140) class: Neg. norm. non-zero
; hwf : - 1993710123574957 -465 (-1.51435e-140) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100001 #b1001101001100110010110101001011100111010111111101100)))
(assert (= y (fp #b1 #b01000101110 #b0111000101010100010011001111101100110110011010101101)))
(assert (= r (fp #b1 #b01000101110 #b0111000101010100010011001111101100110110011010101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
