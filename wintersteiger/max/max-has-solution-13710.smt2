(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0879894556097460256438580472604371607303619384765625p720 {- 396269279496585 720 (-6.00097e+216)}
; Y = 1.7229735633467868627377583834459073841571807861328125p943 {+ 3255983470487309 943 (1.28105e+284)}
; -1.0879894556097460256438580472604371607303619384765625p720 M 1.7229735633467868627377583834459073841571807861328125p943 == 1.7229735633467868627377583834459073841571807861328125p943
; [HW: 1.7229735633467868627377583834459073841571807861328125p943] 

; mpf : + 3255983470487309 943
; mpfd: + 3255983470487309 943 (1.28105e+284) class: Pos. norm. non-zero
; hwf : + 3255983470487309 943 (1.28105e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001111 #b0001011010000110011110100001101000111100100110001001)))
(assert (= y (fp #b0 #b11110101110 #b1011100100010100110010111010001001110010011100001101)))
(assert (= r (fp #b0 #b11110101110 #b1011100100010100110010111010001001110010011100001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
