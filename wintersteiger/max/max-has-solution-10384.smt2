(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2762920031255815533910435988218523561954498291015625p150 {- 1244308562321817 150 (-1.82158e+045)}
; Y = 1.747974276026742490586229905602522194385528564453125p-508 {+ 3368576670796754 -508 (2.08592e-153)}
; -1.2762920031255815533910435988218523561954498291015625p150 M 1.747974276026742490586229905602522194385528564453125p-508 == 1.747974276026742490586229905602522194385528564453125p-508
; [HW: 1.747974276026742490586229905602522194385528564453125p-508] 

; mpf : + 3368576670796754 -508
; mpfd: + 3368576670796754 -508 (2.08592e-153) class: Pos. norm. non-zero
; hwf : + 3368576670796754 -508 (2.08592e-153) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010101 #b0100011010111011000100101001110110010010000110011001)))
(assert (= y (fp #b0 #b01000000011 #b1011111101111011001111011111110111001000101111010010)))
(assert (= r (fp #b0 #b01000000011 #b1011111101111011001111011111110111001000101111010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
