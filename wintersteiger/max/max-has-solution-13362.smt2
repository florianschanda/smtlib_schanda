(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9320960357125793738219954320811666548252105712890625p-957 {- 4197787359108689 -957 (-1.58607e-288)}
; Y = -1.748425652286939691038014643709175288677215576171875p439 {- 3370609488753982 439 (-2.48208e+132)}
; -1.9320960357125793738219954320811666548252105712890625p-957 M -1.748425652286939691038014643709175288677215576171875p439 == -1.9320960357125793738219954320811666548252105712890625p-957
; [HW: -1.9320960357125793738219954320811666548252105712890625p-957] 

; mpf : - 4197787359108689 -957
; mpfd: - 4197787359108689 -957 (-1.58607e-288) class: Neg. norm. non-zero
; hwf : - 4197787359108689 -957 (-1.58607e-288) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001000010 #b1110111010011101110110001000011000011101111001010001)))
(assert (= y (fp #b1 #b10110110110 #b1011111110011000110100101101010000001111010100111110)))
(assert (= r (fp #b1 #b00001000010 #b1110111010011101110110001000011000011101111001010001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
