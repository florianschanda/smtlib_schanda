(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6491388522748569034348520290222950279712677001953125p-98 {+ 2923461493216757 -98 (5.20376e-030)}
; Y = -1.9226231816234189420100619827280752360820770263671875p993 {- 4155125416962611 993 (-1.60946e+299)}
; 1.6491388522748569034348520290222950279712677001953125p-98 M -1.9226231816234189420100619827280752360820770263671875p993 == 1.6491388522748569034348520290222950279712677001953125p-98
; [HW: 1.6491388522748569034348520290222950279712677001953125p-98] 

; mpf : + 2923461493216757 -98
; mpfd: + 2923461493216757 -98 (5.20376e-030) class: Pos. norm. non-zero
; hwf : + 2923461493216757 -98 (5.20376e-030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011101 #b1010011000101101111101101011110100010101010111110101)))
(assert (= y (fp #b1 #b11111100000 #b1110110000110001000010000110011110011010101000110011)))
(assert (= r (fp #b0 #b01110011101 #b1010011000101101111101101011110100010101010111110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
