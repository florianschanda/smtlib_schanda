(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.988004365819211471944072400219738483428955078125p-149 {+ 4449576093743824 -149 (2.78579e-045)}
; Y = -1.0776498849338127516972463126876391470432281494140625p-621 {- 349703992853281 -621 (-1.23837e-187)}
; 1.988004365819211471944072400219738483428955078125p-149 M -1.0776498849338127516972463126876391470432281494140625p-621 == 1.988004365819211471944072400219738483428955078125p-149
; [HW: 1.988004365819211471944072400219738483428955078125p-149] 

; mpf : + 4449576093743824 -149
; mpfd: + 4449576093743824 -149 (2.78579e-045) class: Pos. norm. non-zero
; hwf : + 4449576093743824 -149 (2.78579e-045) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101010 #b1111110011101101110110101010011101111111101011010000)))
(assert (= y (fp #b1 #b00110010010 #b0001001111100000110111001110010001010100001100100001)))
(assert (= r (fp #b0 #b01101101010 #b1111110011101101110110101010011101111111101011010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
