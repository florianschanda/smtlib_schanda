(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.805294576196885270036318615893833339214324951171875p23 {+ 3626724353283774 23 (1.51439e+007)}
; Y = 1.643469988566312878219832782633602619171142578125p88 {+ 2897931200731344 88 (5.08629e+026)}
; 1.805294576196885270036318615893833339214324951171875p23 M 1.643469988566312878219832782633602619171142578125p88 == 1.643469988566312878219832782633602619171142578125p88
; [HW: 1.643469988566312878219832782633602619171142578125p88] 

; mpf : + 2897931200731344 88
; mpfd: + 2897931200731344 88 (5.08629e+026) class: Pos. norm. non-zero
; hwf : + 2897931200731344 88 (5.08629e+026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010110 #b1100111000100111110010010000110001101001011010111110)))
(assert (= y (fp #b0 #b10001010111 #b1010010010111010011100101111110011011001100011010000)))
(assert (= r (fp #b0 #b10001010111 #b1010010010111010011100101111110011011001100011010000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
