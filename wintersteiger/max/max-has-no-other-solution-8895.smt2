(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2542123282576833620538536706590093672275543212890625p414 {- 1144870546814289 414 (-5.30627e+124)}
; Y = -1.8991537231632003024373034349991939961910247802734375p137 {- 4049428372586583 137 (-3.30879e+041)}
; -1.2542123282576833620538536706590093672275543212890625p414 M -1.8991537231632003024373034349991939961910247802734375p137 == -1.8991537231632003024373034349991939961910247802734375p137
; [HW: -1.8991537231632003024373034349991939961910247802734375p137] 

; mpf : - 4049428372586583 137
; mpfd: - 4049428372586583 137 (-3.30879e+041) class: Neg. norm. non-zero
; hwf : - 4049428372586583 137 (-3.30879e+041) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011101 #b0100000100010100000011110010010000011011010101010001)))
(assert (= y (fp #b1 #b10010001000 #b1110011000101110111100000011101100010000000001010111)))
(assert (= r (fp #b1 #b10010001000 #b1110011000101110111100000011101100010000000001010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
