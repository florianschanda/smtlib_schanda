(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3545489627944331534337152334046550095081329345703125p-850 {- 1596746576725605 -850 (-1.80426e-256)}
; Y = -1.8282785857105976479175524218589998781681060791015625p-417 {- 3730235129965209 -417 (-5.40175e-126)}
; -1.3545489627944331534337152334046550095081329345703125p-850 M -1.8282785857105976479175524218589998781681060791015625p-417 == -1.3545489627944331534337152334046550095081329345703125p-850
; [HW: -1.3545489627944331534337152334046550095081329345703125p-850] 

; mpf : - 1596746576725605 -850
; mpfd: - 1596746576725605 -850 (-1.80426e-256) class: Neg. norm. non-zero
; hwf : - 1596746576725605 -850 (-1.80426e-256) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010101101 #b0101101011000011101110001000100000001000011001100101)))
(assert (= y (fp #b1 #b01001011110 #b1101010000001010000100001011110110011010101010011001)))
(assert (= r (fp #b1 #b00010101101 #b0101101011000011101110001000100000001000011001100101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
