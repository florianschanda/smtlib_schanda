(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8615440515397996268376346051809377968311309814453125p-461 {- 3880049469477909 -461 (-3.12641e-139)}
; Y = -1.1521004054290955309625132940709590911865234375p211 {- 684999329213376 211 (-3.79157e+063)}
; -1.8615440515397996268376346051809377968311309814453125p-461 M -1.1521004054290955309625132940709590911865234375p211 == -1.8615440515397996268376346051809377968311309814453125p-461
; [HW: -1.8615440515397996268376346051809377968311309814453125p-461] 

; mpf : - 3880049469477909 -461
; mpfd: - 3880049469477909 -461 (-3.12641e-139) class: Neg. norm. non-zero
; hwf : - 3880049469477909 -461 (-3.12641e-139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110010 #b1101110010001110001001101010010101101101010000010101)))
(assert (= y (fp #b1 #b10011010010 #b0010011011110000000011010101101100000110101111000000)))
(assert (= r (fp #b1 #b01000110010 #b1101110010001110001001101010010101101101010000010101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
