(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.841726725810476583689023755141533911228179931640625p690 {+ 3790800168707850 690 (9.46068e+207)}
; Y = 1.9753372655797074575190208634012378752231597900390625p705 {+ 4392528545825329 705 (3.32497e+212)}
; 1.841726725810476583689023755141533911228179931640625p690 M 1.9753372655797074575190208634012378752231597900390625p705 == 1.9753372655797074575190208634012378752231597900390625p705
; [HW: 1.9753372655797074575190208634012378752231597900390625p705] 

; mpf : + 4392528545825329 705
; mpfd: + 4392528545825329 705 (3.32497e+212) class: Pos. norm. non-zero
; hwf : + 4392528545825329 705 (3.32497e+212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110001 #b1101011101111011011001110001011110000110011100001010)))
(assert (= y (fp #b0 #b11011000000 #b1111100110101111101100111111101000111100001000110001)))
(assert (= r (fp #b0 #b11011000000 #b1111100110101111101100111111101000111100001000110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
