(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.297218712301628773531092519988305866718292236328125p-799 {- 1338554081969154 -799 (-3.89087e-241)}
; Y = -1.14827313751853665735325193963944911956787109375p-121 {- 667762846877536 -121 (-4.31932e-037)}
; -1.297218712301628773531092519988305866718292236328125p-799 M -1.14827313751853665735325193963944911956787109375p-121 == -1.297218712301628773531092519988305866718292236328125p-799
; [HW: -1.297218712301628773531092519988305866718292236328125p-799] 

; mpf : - 1338554081969154 -799
; mpfd: - 1338554081969154 -799 (-3.89087e-241) class: Neg. norm. non-zero
; hwf : - 1338554081969154 -799 (-3.89087e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011100000 #b0100110000010110100001101000100100011000010000000010)))
(assert (= y (fp #b1 #b01110000110 #b0010010111110101001110100111010010000100011101100000)))
(assert (= r (fp #b1 #b00011100000 #b0100110000010110100001101000100100011000010000000010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
