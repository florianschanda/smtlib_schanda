(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9169150991046632892533807535073719918727874755859375p888 {+ 4129418498658143 888 (3.95584e+267)}
; Y = 1.90575610820480623175399159663356840610504150390625p868 {+ 4079162871399716 868 (3.75062e+261)}
; 1.9169150991046632892533807535073719918727874755859375p888 M 1.90575610820480623175399159663356840610504150390625p868 == 1.9169150991046632892533807535073719918727874755859375p888
; [HW: 1.9169150991046632892533807535073719918727874755859375p888] 

; mpf : + 4129418498658143 888
; mpfd: + 4129418498658143 888 (3.95584e+267) class: Pos. norm. non-zero
; hwf : + 4129418498658143 888 (3.95584e+267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110111 #b1110101010111010111100101010101111011100111101011111)))
(assert (= y (fp #b0 #b11101100011 #b1110011111011111101000011101111011100100010100100100)))
(assert (= r (fp #b0 #b11101110111 #b1110101010111010111100101010101111011100111101011111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
