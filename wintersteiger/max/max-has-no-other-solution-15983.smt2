(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.90111998957824912537262207479216158390045166015625p-66 {- 4058283649280708 -66 (-2.5765e-020)}
; Y = 1.5548879910693205186333898382144980132579803466796875p587 {+ 2498993349812155 587 (7.87602e+176)}
; -1.90111998957824912537262207479216158390045166015625p-66 M 1.5548879910693205186333898382144980132579803466796875p587 == 1.5548879910693205186333898382144980132579803466796875p587
; [HW: 1.5548879910693205186333898382144980132579803466796875p587] 

; mpf : + 2498993349812155 587
; mpfd: + 2498993349812155 587 (7.87602e+176) class: Pos. norm. non-zero
; hwf : + 2498993349812155 587 (7.87602e+176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111101 #b1110011010101111110011001011010100000010101011000100)))
(assert (= y (fp #b0 #b11001001010 #b1000111000001101001000111010111010010101111110111011)))
(assert (= r (fp #b0 #b11001001010 #b1000111000001101001000111010111010010101111110111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
