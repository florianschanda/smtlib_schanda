(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4187644863002859541012412591953761875629425048828125p496 {- 1885947584457965 496 (-2.90261e+149)}
; Y = 1.2742612631689251845301669163745827972888946533203125p-1 {+ 1235162922609733 -1 (0.637131)}
; -1.4187644863002859541012412591953761875629425048828125p496 M 1.2742612631689251845301669163745827972888946533203125p-1 == 1.2742612631689251845301669163745827972888946533203125p-1
; [HW: 1.2742612631689251845301669163745827972888946533203125p-1] 

; mpf : + 1235162922609733 -1
; mpfd: + 1235162922609733 -1 (0.637131) class: Pos. norm. non-zero
; hwf : + 1235162922609733 -1 (0.637131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111101111 #b0110101100110100001001100011110101100010110011101101)))
(assert (= y (fp #b0 #b01111111110 #b0100011000110101111111000111001111011110110001000101)))
(assert (= r (fp #b0 #b01111111110 #b0100011000110101111111000111001111011110110001000101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
