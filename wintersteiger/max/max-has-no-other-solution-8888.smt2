(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.019658644317381845922909633372910320758819580078125p-409 {- 88534663222370 -409 (-7.71235e-124)}
; Y = -1.7972964338670276429610339619102887809276580810546875p-478 {- 3590703922467371 -478 (-2.30294e-144)}
; -1.019658644317381845922909633372910320758819580078125p-409 M -1.7972964338670276429610339619102887809276580810546875p-478 == -1.7972964338670276429610339619102887809276580810546875p-478
; [HW: -1.7972964338670276429610339619102887809276580810546875p-478] 

; mpf : - 3590703922467371 -478
; mpfd: - 3590703922467371 -478 (-2.30294e-144) class: Neg. norm. non-zero
; hwf : - 3590703922467371 -478 (-2.30294e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100110 #b0000010100001000010110010101001001101101010001100010)))
(assert (= y (fp #b1 #b01000100001 #b1100110000011011100111100111110010101101001000101011)))
(assert (= r (fp #b1 #b01000100001 #b1100110000011011100111100111110010101101001000101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
