(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.23632253495139554644310919684357941150665283203125p143 {+ 1064302080346356 143 (1.37855e+043)}
; Y = -1.099268823766596181457089187460951507091522216796875p-974 {- 447067037724750 -974 (-6.88475e-294)}
; 1.23632253495139554644310919684357941150665283203125p143 M -1.099268823766596181457089187460951507091522216796875p-974 == 1.23632253495139554644310919684357941150665283203125p143
; [HW: 1.23632253495139554644310919684357941150665283203125p143] 

; mpf : + 1064302080346356 143
; mpfd: + 1064302080346356 143 (1.37855e+043) class: Pos. norm. non-zero
; hwf : + 1064302080346356 143 (1.37855e+043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001110 #b0011110001111111101000100011011011101100100011110100)))
(assert (= y (fp #b1 #b00000110001 #b0001100101101001101011100111111110010111000001001110)))
(assert (= r (fp #b0 #b10010001110 #b0011110001111111101000100011011011101100100011110100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
