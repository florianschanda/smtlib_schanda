(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2052605621763479160080123619991354644298553466796875p-648 {- 924411391331259 -648 (-1.03191e-195)}
; Y = -1.968168618950688397717385669238865375518798828125p-141 {- 4360243831538128 -141 (-7.06046e-043)}
; -1.2052605621763479160080123619991354644298553466796875p-648 M -1.968168618950688397717385669238865375518798828125p-141 == -1.2052605621763479160080123619991354644298553466796875p-648
; [HW: -1.2052605621763479160080123619991354644298553466796875p-648] 

; mpf : - 924411391331259 -648
; mpfd: - 924411391331259 -648 (-1.03191e-195) class: Neg. norm. non-zero
; hwf : - 924411391331259 -648 (-1.03191e-195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101110111 #b0011010010001011111101001100100110110100101110111011)))
(assert (= y (fp #b1 #b01101110010 #b1111011111011001111001100000101101101000000111010000)))
(assert (= r (fp #b1 #b00101110111 #b0011010010001011111101001100100110110100101110111011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
