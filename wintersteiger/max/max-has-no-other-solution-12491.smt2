(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7336487962537108220573145445086993277072906494140625p334 {+ 3304060445429025 334 (6.06708e+100)}
; Y = -1.6354942451527050284454389839083887636661529541015625p-221 {- 2862011645665817 -221 (-4.85311e-067)}
; 1.7336487962537108220573145445086993277072906494140625p334 M -1.6354942451527050284454389839083887636661529541015625p-221 == 1.7336487962537108220573145445086993277072906494140625p334
; [HW: 1.7336487962537108220573145445086993277072906494140625p334] 

; mpf : + 3304060445429025 334
; mpfd: + 3304060445429025 334 (6.06708e+100) class: Pos. norm. non-zero
; hwf : + 3304060445429025 334 (6.06708e+100) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001101 #b1011101111010000011010000101001010101000110100100001)))
(assert (= y (fp #b1 #b01100100010 #b1010001010101111110000000011011110111010001000011001)))
(assert (= r (fp #b0 #b10101001101 #b1011101111010000011010000101001010101000110100100001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
