(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.072331650383806067594605337944813072681427001953125p-747 {+ 325752793715602 -747 (1.44851e-225)}
; Y = -1.7976071238324997647595182570512406527996063232421875p-73 {- 3592103145680099 -73 (-1.90329e-022)}
; 1.072331650383806067594605337944813072681427001953125p-747 M -1.7976071238324997647595182570512406527996063232421875p-73 == 1.072331650383806067594605337944813072681427001953125p-747
; [HW: 1.072331650383806067594605337944813072681427001953125p-747] 

; mpf : + 325752793715602 -747
; mpfd: + 325752793715602 -747 (1.44851e-225) class: Pos. norm. non-zero
; hwf : + 325752793715602 -747 (1.44851e-225) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010100 #b0001001010000100010100111011100011011101001110010010)))
(assert (= y (fp #b1 #b01110110110 #b1100110000101111111110101111111111101010110011100011)))
(assert (= r (fp #b0 #b00100010100 #b0001001010000100010100111011100011011101001110010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
