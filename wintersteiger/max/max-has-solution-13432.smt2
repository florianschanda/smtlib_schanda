(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7744916078433579098572181464987806975841522216796875p267 {- 3488000116484923 267 (-4.20807e+080)}
; Y = 1.3877694674540743680068999310606159269809722900390625p778 {+ 1746358429131825 778 (2.20625e+234)}
; -1.7744916078433579098572181464987806975841522216796875p267 M 1.3877694674540743680068999310606159269809722900390625p778 == 1.3877694674540743680068999310606159269809722900390625p778
; [HW: 1.3877694674540743680068999310606159269809722900390625p778] 

; mpf : + 1746358429131825 778
; mpfd: + 1746358429131825 778 (2.20625e+234) class: Pos. norm. non-zero
; hwf : + 1746358429131825 778 (2.20625e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001010 #b1100011001000101000101001111111010110110101100111011)))
(assert (= y (fp #b0 #b11100001001 #b0110001101000100110111000001110100011010010000110001)))
(assert (= r (fp #b0 #b11100001001 #b0110001101000100110111000001110100011010010000110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
