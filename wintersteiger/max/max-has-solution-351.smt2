(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.717826677179790095806311001069843769073486328125p-543 {+ 3232803955863504 -543 (5.96612e-164)}
; Y = -1.8471800884224018890478191678994335234165191650390625p-104 {- 3815359930534833 -104 (-9.1073e-032)}
; 1.717826677179790095806311001069843769073486328125p-543 M -1.8471800884224018890478191678994335234165191650390625p-104 == 1.717826677179790095806311001069843769073486328125p-543
; [HW: 1.717826677179790095806311001069843769073486328125p-543] 

; mpf : + 3232803955863504 -543
; mpfd: + 3232803955863504 -543 (5.96612e-164) class: Pos. norm. non-zero
; hwf : + 3232803955863504 -543 (5.96612e-164) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100000 #b1011011111000011011111010011011010101110111111010000)))
(assert (= y (fp #b1 #b01110010111 #b1101100011100000110010110101010110011000101110110001)))
(assert (= r (fp #b0 #b00111100000 #b1011011111000011011111010011011010101110111111010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
