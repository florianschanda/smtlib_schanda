(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9554004691791442294146463609649799764156341552734375p11 {+ 4302741196984791 11 (4004.66)}
; Y = 1.4588940637510177111835218966007232666015625p-984 {+ 2066675134511616 -984 (8.92294e-297)}
; 1.9554004691791442294146463609649799764156341552734375p11 M 1.4588940637510177111835218966007232666015625p-984 == 1.9554004691791442294146463609649799764156341552734375p11
; [HW: 1.9554004691791442294146463609649799764156341552734375p11] 

; mpf : + 4302741196984791 11
; mpfd: + 4302741196984791 11 (4004.66) class: Pos. norm. non-zero
; hwf : + 4302741196984791 11 (4004.66) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001010 #b1111010010010101001000000000100110110101000111010111)))
(assert (= y (fp #b0 #b00000100111 #b0111010101111010000101001101010000100011101000000000)))
(assert (= r (fp #b0 #b10000001010 #b1111010010010101001000000000100110110101000111010111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
