(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9046484655221302961791707275551743805408477783203125p-393 {+ 4074174492226757 -393 (9.44119e-119)}
; Y = -1.905787836309853933158819927484728395938873291015625p-96 {- 4079305762081786 -96 (-2.40544e-029)}
; 1.9046484655221302961791707275551743805408477783203125p-393 M -1.905787836309853933158819927484728395938873291015625p-96 == 1.9046484655221302961791707275551743805408477783203125p-393
; [HW: 1.9046484655221302961791707275551743805408477783203125p-393] 

; mpf : + 4074174492226757 -393
; mpfd: + 4074174492226757 -393 (9.44119e-119) class: Pos. norm. non-zero
; hwf : + 4074174492226757 -393 (9.44119e-119) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001110110 #b1110011110010111000010101011010111001011010011000101)))
(assert (= y (fp #b1 #b01110011111 #b1110011111100001101101100010111000010000101111111010)))
(assert (= r (fp #b0 #b01001110110 #b1110011110010111000010101011010111001011010011000101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
