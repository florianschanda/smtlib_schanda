(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0888300117508278308520175414741970598697662353515625p-635 {+ 400054807820345 -635 (7.63682e-192)}
; Y = 1.207736083026240248017302292282693088054656982421875p70 {+ 935560146108382 70 (1.42584e+021)}
; 1.0888300117508278308520175414741970598697662353515625p-635 M 1.207736083026240248017302292282693088054656982421875p70 == 1.207736083026240248017302292282693088054656982421875p70
; [HW: 1.207736083026240248017302292282693088054656982421875p70] 

; mpf : + 935560146108382 70
; mpfd: + 935560146108382 70 (1.42584e+021) class: Pos. norm. non-zero
; hwf : + 935560146108382 70 (1.42584e+021) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110000100 #b0001011010111101100100000100101101011111100000111001)))
(assert (= y (fp #b0 #b10001000101 #b0011010100101110001100010010001011001011111111011110)))
(assert (= r (fp #b0 #b10001000101 #b0011010100101110001100010010001011001011111111011110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
