(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0432323715237876715633547064498998224735260009765625p-780 {+ 194701292284873 -780 (1.64053e-235)}
; Y = -1.9160169685375494363910320316790603101253509521484375p383 {- 4125373678170759 383 (-3.77475e+115)}
; 1.0432323715237876715633547064498998224735260009765625p-780 M -1.9160169685375494363910320316790603101253509521484375p383 == 1.0432323715237876715633547064498998224735260009765625p-780
; [HW: 1.0432323715237876715633547064498998224735260009765625p-780] 

; mpf : + 194701292284873 -780
; mpfd: + 194701292284873 -780 (1.64053e-235) class: Pos. norm. non-zero
; hwf : + 194701292284873 -780 (1.64053e-235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110011 #b0000101100010001010001101101010111010010101111001001)))
(assert (= y (fp #b1 #b10101111110 #b1110101010000000000101101000101001110011001010000111)))
(assert (= r (fp #b0 #b00011110011 #b0000101100010001010001101101010111010010101111001001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
