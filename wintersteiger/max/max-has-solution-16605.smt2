(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7651109267152278459178660341422073543071746826171875p-198 {- 3445753284451795 -198 (-4.39372e-060)}
; Y = 1.7162923301226502559302389272488653659820556640625p644 {+ 3225893871028712 644 (1.25288e+194)}
; -1.7651109267152278459178660341422073543071746826171875p-198 M 1.7162923301226502559302389272488653659820556640625p644 == 1.7162923301226502559302389272488653659820556640625p644
; [HW: 1.7162923301226502559302389272488653659820556640625p644] 

; mpf : + 3225893871028712 644
; mpfd: + 3225893871028712 644 (1.25288e+194) class: Pos. norm. non-zero
; hwf : + 3225893871028712 644 (1.25288e+194) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111001 #b1100001111011110010011110100100000001101110111010011)))
(assert (= y (fp #b0 #b11010000011 #b1011011101011110111011110010010001000000100111101000)))
(assert (= r (fp #b0 #b11010000011 #b1011011101011110111011110010010001000000100111101000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
