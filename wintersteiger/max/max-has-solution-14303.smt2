(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4605600902066726565209364707698114216327667236328125p760 {+ 2074178250636493 760 (8.8576e+228)}
; Y = -1.487517125451170318939375647460110485553741455078125p993 {- 2195581944518626 993 (-1.24522e+299)}
; 1.4605600902066726565209364707698114216327667236328125p760 M -1.487517125451170318939375647460110485553741455078125p993 == 1.4605600902066726565209364707698114216327667236328125p760
; [HW: 1.4605600902066726565209364707698114216327667236328125p760] 

; mpf : + 2074178250636493 760
; mpfd: + 2074178250636493 760 (8.8576e+228) class: Pos. norm. non-zero
; hwf : + 2074178250636493 760 (8.8576e+228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110111 #b0111010111100111010001000001110101000111110011001101)))
(assert (= y (fp #b1 #b11111100000 #b0111110011001101111011000001111000001101011111100010)))
(assert (= r (fp #b0 #b11011110111 #b0111010111100111010001000001110101000111110011001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
