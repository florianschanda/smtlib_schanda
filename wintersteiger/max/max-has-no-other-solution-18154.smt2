(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0605780439802405812343977231648750603199005126953125p-858 {+ 272819256296245 -858 (5.51831e-259)}
; Y = -1.0301422160156519236551275753299705684185028076171875p980 {- 135748472816211 980 (-1.05267e+295)}
; 1.0605780439802405812343977231648750603199005126953125p-858 M -1.0301422160156519236551275753299705684185028076171875p980 == 1.0605780439802405812343977231648750603199005126953125p-858
; [HW: 1.0605780439802405812343977231648750603199005126953125p-858] 

; mpf : + 272819256296245 -858
; mpfd: + 272819256296245 -858 (5.51831e-259) class: Pos. norm. non-zero
; hwf : + 272819256296245 -858 (5.51831e-259) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100101 #b0000111110000010000010101110110111000000001100110101)))
(assert (= y (fp #b1 #b11111010011 #b0000011110110111011001100111100000000100001001010011)))
(assert (= r (fp #b0 #b00010100101 #b0000111110000010000010101110110111000000001100110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
