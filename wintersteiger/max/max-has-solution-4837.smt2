(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8828860607079913602746046308311633765697479248046875p-542 {+ 3976165334015115 -542 (1.30788e-163)}
; Y = 1.5294308619731744602887602013652212917804718017578125p411 {+ 2384344632700829 411 (8.08832e+123)}
; 1.8828860607079913602746046308311633765697479248046875p-542 M 1.5294308619731744602887602013652212917804718017578125p411 == 1.5294308619731744602887602013652212917804718017578125p411
; [HW: 1.5294308619731744602887602013652212917804718017578125p411] 

; mpf : + 2384344632700829 411
; mpfd: + 2384344632700829 411 (8.08832e+123) class: Pos. norm. non-zero
; hwf : + 2384344632700829 411 (8.08832e+123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100001 #b1110001000000100110100100010010011010101110010001011)))
(assert (= y (fp #b0 #b10110011010 #b1000011110001000110001111110110110101010111110011101)))
(assert (= r (fp #b0 #b10110011010 #b1000011110001000110001111110110110101010111110011101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
