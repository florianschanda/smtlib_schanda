(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7513585963792068778133170781075023114681243896484375p355 {+ 3383818294675015 355 (1.28536e+107)}
; Y = -1.426435658224808999960941946483217179775238037109375p246 {- 1920495471478742 246 (-1.61299e+074)}
; 1.7513585963792068778133170781075023114681243896484375p355 M -1.426435658224808999960941946483217179775238037109375p246 == 1.7513585963792068778133170781075023114681243896484375p355
; [HW: 1.7513585963792068778133170781075023114681243896484375p355] 

; mpf : + 3383818294675015 355
; mpfd: + 3383818294675015 355 (1.28536e+107) class: Pos. norm. non-zero
; hwf : + 3383818294675015 355 (1.28536e+107) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100010 #b1100000001011001000010010111011100000100011001000111)))
(assert (= y (fp #b1 #b10011110101 #b0110110100101010111000110010010111101100011111010110)))
(assert (= r (fp #b0 #b10101100010 #b1100000001011001000010010111011100000100011001000111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
