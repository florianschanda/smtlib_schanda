(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9176309953863419632824616201105527579784393310546875p-451 {+ 4132642608885547 -451 (3.2979e-136)}
; Y = -1.0090434756880244382415412474074400961399078369140625p-422 {- 40728193738721 -422 (-9.31648e-128)}
; 1.9176309953863419632824616201105527579784393310546875p-451 M -1.0090434756880244382415412474074400961399078369140625p-422 == 1.9176309953863419632824616201105527579784393310546875p-451
; [HW: 1.9176309953863419632824616201105527579784393310546875p-451] 

; mpf : + 4132642608885547 -451
; mpfd: + 4132642608885547 -451 (3.2979e-136) class: Pos. norm. non-zero
; hwf : + 4132642608885547 -451 (3.2979e-136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111100 #b1110101011101001110111010110101011111010111100101011)))
(assert (= y (fp #b1 #b01001011001 #b0000001001010000101011000101100001010010011111100001)))
(assert (= r (fp #b0 #b01000111100 #b1110101011101001110111010110101011111010111100101011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
