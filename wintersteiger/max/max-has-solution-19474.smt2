(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.984292889639980739246993834967724978923797607421875p174 {+ 4432861091006046 174 (4.75144e+052)}
; Y = -1.794483628613436021481675197719596326351165771484375p867 {- 3578036173775430 867 (-1.76582e+261)}
; 1.984292889639980739246993834967724978923797607421875p174 M -1.794483628613436021481675197719596326351165771484375p867 == 1.984292889639980739246993834967724978923797607421875p174
; [HW: 1.984292889639980739246993834967724978923797607421875p174] 

; mpf : + 4432861091006046 174
; mpfd: + 4432861091006046 174 (4.75144e+052) class: Pos. norm. non-zero
; hwf : + 4432861091006046 174 (4.75144e+052) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010101101 #b1111101111111010100111100110101010110000011001011110)))
(assert (= y (fp #b1 #b11101100010 #b1100101101100011010001110111001000011010001001000110)))
(assert (= r (fp #b0 #b10010101101 #b1111101111111010100111100110101010110000011001011110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
