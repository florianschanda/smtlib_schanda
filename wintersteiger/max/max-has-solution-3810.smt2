(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2262350384085731747063618968240916728973388671875p-60 {+ 1018872034675000 -60 (1.06359e-018)}
; Y = -1.3076031686933067277323061716742813587188720703125p-215 {- 1385321515905160 -215 (-2.48329e-065)}
; 1.2262350384085731747063618968240916728973388671875p-60 M -1.3076031686933067277323061716742813587188720703125p-215 == 1.2262350384085731747063618968240916728973388671875p-60
; [HW: 1.2262350384085731747063618968240916728973388671875p-60] 

; mpf : + 1018872034675000 -60
; mpfd: + 1018872034675000 -60 (1.06359e-018) class: Pos. norm. non-zero
; hwf : + 1018872034675000 -60 (1.06359e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000011 #b0011100111101010100010100001101100101100100100111000)))
(assert (= y (fp #b1 #b01100101000 #b0100111010111111000101001100110110101111000010001000)))
(assert (= r (fp #b0 #b01111000011 #b0011100111101010100010100001101100101100100100111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
