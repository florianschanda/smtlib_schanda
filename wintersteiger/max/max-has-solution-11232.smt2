(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9707694197234417732289557534386403858661651611328125p523 {- 4371956796929165 523 (-5.41157e+157)}
; Y = -1.79174445278079286225647592800669372081756591796875p-91 {- 3565700022516236 -91 (-7.2368e-028)}
; -1.9707694197234417732289557534386403858661651611328125p523 M -1.79174445278079286225647592800669372081756591796875p-91 == -1.79174445278079286225647592800669372081756591796875p-91
; [HW: -1.79174445278079286225647592800669372081756591796875p-91] 

; mpf : - 3565700022516236 -91
; mpfd: - 3565700022516236 -91 (-7.2368e-028) class: Neg. norm. non-zero
; hwf : - 3565700022516236 -91 (-7.2368e-028) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001010 #b1111100010000100010110000011110110101011010010001101)))
(assert (= y (fp #b1 #b01110100100 #b1100101010101111110000111011001101111011101000001100)))
(assert (= r (fp #b1 #b01110100100 #b1100101010101111110000111011001101111011101000001100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
