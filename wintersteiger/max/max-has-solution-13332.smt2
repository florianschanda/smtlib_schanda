(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.853505682109888308417566804564557969570159912109375p22 {- 3843847871908694 22 (-7.77417e+006)}
; Y = -1.410621490363484387131620678701438009738922119140625p-964 {- 1849274790991306 -964 (-9.04679e-291)}
; -1.853505682109888308417566804564557969570159912109375p22 M -1.410621490363484387131620678701438009738922119140625p-964 == -1.410621490363484387131620678701438009738922119140625p-964
; [HW: -1.410621490363484387131620678701438009738922119140625p-964] 

; mpf : - 1849274790991306 -964
; mpfd: - 1849274790991306 -964 (-9.04679e-291) class: Neg. norm. non-zero
; hwf : - 1849274790991306 -964 (-9.04679e-291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010101 #b1101101001111111010110010010111110011100101101010110)))
(assert (= y (fp #b1 #b00000111011 #b0110100100011110011111010111000000100101010111001010)))
(assert (= r (fp #b1 #b00000111011 #b0110100100011110011111010111000000100101010111001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
