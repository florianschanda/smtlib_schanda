(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.792076940833274623088300359086133539676666259765625p-226 {+ 3567197415585498 -226 (1.6618e-068)}
; Y = 1.40219568596204879895594785921275615692138671875p685 {+ 1811328341428704 685 (2.2509e+206)}
; 1.792076940833274623088300359086133539676666259765625p-226 M 1.40219568596204879895594785921275615692138671875p685 == 1.40219568596204879895594785921275615692138671875p685
; [HW: 1.40219568596204879895594785921275615692138671875p685] 

; mpf : + 1811328341428704 685
; mpfd: + 1811328341428704 685 (2.2509e+206) class: Pos. norm. non-zero
; hwf : + 1811328341428704 685 (2.2509e+206) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011101 #b1100101011000101100011011110110011001011011011011010)))
(assert (= y (fp #b0 #b11010101100 #b0110011011110110010010111110010111001100100111100000)))
(assert (= r (fp #b0 #b11010101100 #b0110011011110110010010111110010111001100100111100000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
