(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.140844259767695323404268492595292627811431884765625p-954 {- 634306155807066 -954 (-7.49222e-288)}
; Y = 1.1142723465706987351353518533869646489620208740234375p-883 {+ 514636897434551 -883 (1.72785e-266)}
; -1.140844259767695323404268492595292627811431884765625p-954 M 1.1142723465706987351353518533869646489620208740234375p-883 == 1.1142723465706987351353518533869646489620208740234375p-883
; [HW: 1.1142723465706987351353518533869646489620208740234375p-883] 

; mpf : + 514636897434551 -883
; mpfd: + 514636897434551 -883 (1.72785e-266) class: Pos. norm. non-zero
; hwf : + 514636897434551 -883 (1.72785e-266) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001000101 #b0010010000001110010111101001000110001000000101011010)))
(assert (= y (fp #b0 #b00010001100 #b0001110101000000111100111101011101011011101110110111)))
(assert (= r (fp #b0 #b00010001100 #b0001110101000000111100111101011101011011101110110111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
