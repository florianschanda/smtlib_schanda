(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2159304462262314761034076582291163504123687744140625p-845 {+ 972464277162401 -845 (5.18278e-255)}
; Y = -1.5072023679384207728304545526043511927127838134765625p-438 {- 2284236395248905 -438 (-2.12341e-132)}
; 1.2159304462262314761034076582291163504123687744140625p-845 M -1.5072023679384207728304545526043511927127838134765625p-438 == 1.2159304462262314761034076582291163504123687744140625p-845
; [HW: 1.2159304462262314761034076582291163504123687744140625p-845] 

; mpf : + 972464277162401 -845
; mpfd: + 972464277162401 -845 (5.18278e-255) class: Pos. norm. non-zero
; hwf : + 972464277162401 -845 (5.18278e-255) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010110010 #b0011011101000111001101111011110011000000100110100001)))
(assert (= y (fp #b1 #b01001001001 #b1000000111011000000000111010111010111111110100001001)))
(assert (= r (fp #b0 #b00010110010 #b0011011101000111001101111011110011000000100110100001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
