(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3514281655774504908862354568555019795894622802734375p-7 {- 1582691755542103 -7 (-0.010558)}
; Y = 1.83701036796005023887801144155673682689666748046875p581 {+ 3769559581250124 581 (1.45392e+175)}
; -1.3514281655774504908862354568555019795894622802734375p-7 M 1.83701036796005023887801144155673682689666748046875p581 == 1.83701036796005023887801144155673682689666748046875p581
; [HW: 1.83701036796005023887801144155673682689666748046875p581] 

; mpf : + 3769559581250124 581
; mpfd: + 3769559581250124 581 (1.45392e+175) class: Pos. norm. non-zero
; hwf : + 3769559581250124 581 (1.45392e+175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111111000 #b0101100111110111001100100011111000001100011001010111)))
(assert (= y (fp #b0 #b11001000100 #b1101011001000110010011111011110011001101001001001100)))
(assert (= r (fp #b0 #b11001000100 #b1101011001000110010011111011110011001101001001001100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
