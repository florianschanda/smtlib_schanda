(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.752749161626685037163042579777538776397705078125p786 {- 3390080843805392 786 (-7.1334e+236)}
; Y = 1.205790594202448051674991802428849041461944580078125p-653 {+ 926798443366498 -653 (3.22615e-197)}
; -1.752749161626685037163042579777538776397705078125p786 M 1.205790594202448051674991802428849041461944580078125p-653 == 1.205790594202448051674991802428849041461944580078125p-653
; [HW: 1.205790594202448051674991802428849041461944580078125p-653] 

; mpf : + 926798443366498 -653
; mpfd: + 926798443366498 -653 (3.22615e-197) class: Pos. norm. non-zero
; hwf : + 926798443366498 -653 (3.22615e-197) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010001 #b1100000010110100001010110100011101000111001011010000)))
(assert (= y (fp #b0 #b00101110010 #b0011010010101110101100010011111111101100100001100010)))
(assert (= r (fp #b0 #b00101110010 #b0011010010101110101100010011111111101100100001100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
