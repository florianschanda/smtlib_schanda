(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.34648693789097162465395740582607686519622802734375p569 {- 1560438444374524 569 (-2.60177e+171)}
; Y = -1.87173658931261943649815293611027300357818603515625p-737 {- 3925952578793540 -737 (-2.58904e-222)}
; -1.34648693789097162465395740582607686519622802734375p569 M -1.87173658931261943649815293611027300357818603515625p-737 == -1.87173658931261943649815293611027300357818603515625p-737
; [HW: -1.87173658931261943649815293611027300357818603515625p-737] 

; mpf : - 3925952578793540 -737
; mpfd: - 3925952578793540 -737 (-2.58904e-222) class: Neg. norm. non-zero
; hwf : - 3925952578793540 -737 (-2.58904e-222) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000111000 #b0101100010110011010111100011001010111011100111111100)))
(assert (= y (fp #b1 #b00100011110 #b1101111100101010001000010000110111010011000001000100)))
(assert (= r (fp #b1 #b00100011110 #b1101111100101010001000010000110111010011000001000100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
