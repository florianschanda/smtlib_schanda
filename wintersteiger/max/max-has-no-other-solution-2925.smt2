(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.702934214282335378953803228796459734439849853515625p858 {+ 3165734265507898 858 (3.27291e+258)}
; Y = 1.2539182015664900315954355392022989690303802490234375p-376 {+ 1143545917957431 -376 (8.14687e-114)}
; 1.702934214282335378953803228796459734439849853515625p858 M 1.2539182015664900315954355392022989690303802490234375p-376 == 1.702934214282335378953803228796459734439849853515625p858
; [HW: 1.702934214282335378953803228796459734439849853515625p858] 

; mpf : + 3165734265507898 858
; mpfd: + 3165734265507898 858 (3.27291e+258) class: Pos. norm. non-zero
; hwf : + 3165734265507898 858 (3.27291e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011001 #b1011001111110011011111110010010110010101000000111010)))
(assert (= y (fp #b0 #b01010000111 #b0100000100000000110010001000001110010110010100110111)))
(assert (= r (fp #b0 #b11101011001 #b1011001111110011011111110010010110010101000000111010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
