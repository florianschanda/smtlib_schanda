(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0666038809922564478682716071489267051219940185546875p-763 {- 299957213618155 -763 (-2.19845e-230)}
; Y = 1.5004881629576674040293937650858424603939056396484375p635 {+ 2253998304199495 635 (2.13934e+191)}
; -1.0666038809922564478682716071489267051219940185546875p-763 M 1.5004881629576674040293937650858424603939056396484375p635 == 1.5004881629576674040293937650858424603939056396484375p635
; [HW: 1.5004881629576674040293937650858424603939056396484375p635] 

; mpf : + 2253998304199495 635
; mpfd: + 2253998304199495 635 (2.13934e+191) class: Pos. norm. non-zero
; hwf : + 2253998304199495 635 (2.13934e+191) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000100 #b0001000100001100111100111011001010100101111111101011)))
(assert (= y (fp #b0 #b11001111010 #b1000000000011111111111100000001111110000001101000111)))
(assert (= r (fp #b0 #b11001111010 #b1000000000011111111111100000001111110000001101000111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
