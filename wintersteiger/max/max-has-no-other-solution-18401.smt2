(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.453941921858460606387097868719138205051422119140625p-429 {- 2044372670129610 -429 (-1.04877e-129)}
; Y = 1.1103069220440875408684178182738833129405975341796875p4 {+ 496778213014139 4 (17.7649)}
; -1.453941921858460606387097868719138205051422119140625p-429 M 1.1103069220440875408684178182738833129405975341796875p4 == 1.1103069220440875408684178182738833129405975341796875p4
; [HW: 1.1103069220440875408684178182738833129405975341796875p4] 

; mpf : + 496778213014139 4
; mpfd: + 496778213014139 4 (17.7649) class: Pos. norm. non-zero
; hwf : + 496778213014139 4 (17.7649) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001010010 #b0111010000110101100010011010110010101010010111001010)))
(assert (= y (fp #b0 #b10000000011 #b0001110000111101000100110000111010110011101001111011)))
(assert (= r (fp #b0 #b10000000011 #b0001110000111101000100110000111010110011101001111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
