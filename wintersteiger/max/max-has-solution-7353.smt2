(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.464149212597976923433407137054018676280975341796875p-423 {- 2090342220900558 -423 (-6.75923e-128)}
; Y = -1.76755546048283651572319286060519516468048095703125p546 {- 3456762485816692 546 (-4.07146e+164)}
; -1.464149212597976923433407137054018676280975341796875p-423 M -1.76755546048283651572319286060519516468048095703125p546 == -1.464149212597976923433407137054018676280975341796875p-423
; [HW: -1.464149212597976923433407137054018676280975341796875p-423] 

; mpf : - 2090342220900558 -423
; mpfd: - 2090342220900558 -423 (-6.75923e-128) class: Neg. norm. non-zero
; hwf : - 2090342220900558 -423 (-6.75923e-128) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001011000 #b0111011011010010011110111001100010010010100011001110)))
(assert (= y (fp #b1 #b11000100001 #b1100010001111110100000111100000010100011110101110100)))
(assert (= r (fp #b1 #b01001011000 #b0111011011010010011110111001100010010010100011001110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
