(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5641976639862404940828355393023230135440826416015625p-642 {+ 2540920389291737 -642 (8.57106e-194)}
; Y = -1.2479589840677067780205788949388079345226287841796875p-346 {- 1116707988250491 -346 (-8.70606e-105)}
; 1.5641976639862404940828355393023230135440826416015625p-642 M -1.2479589840677067780205788949388079345226287841796875p-346 == 1.5641976639862404940828355393023230135440826416015625p-642
; [HW: 1.5641976639862404940828355393023230135440826416015625p-642] 

; mpf : + 2540920389291737 -642
; mpfd: + 2540920389291737 -642 (8.57106e-194) class: Pos. norm. non-zero
; hwf : + 2540920389291737 -642 (8.57106e-194) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111101 #b1001000001101111010000100001001101001100111011011001)))
(assert (= y (fp #b1 #b01010100101 #b0011111101111010001111010110111101010001111101111011)))
(assert (= r (fp #b0 #b00101111101 #b1001000001101111010000100001001101001100111011011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
