(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8133916110514605168901880460907705128192901611328125p845 {+ 3663190156437645 845 (4.2544e+254)}
; Y = -1.061962769857358157565840883762575685977935791015625p505 {- 279055507240442 505 (-1.11239e+152)}
; 1.8133916110514605168901880460907705128192901611328125p845 M -1.061962769857358157565840883762575685977935791015625p505 == 1.8133916110514605168901880460907705128192901611328125p845
; [HW: 1.8133916110514605168901880460907705128192901611328125p845] 

; mpf : + 3663190156437645 845
; mpfd: + 3663190156437645 845 (4.2544e+254) class: Pos. norm. non-zero
; hwf : + 3663190156437645 845 (4.2544e+254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001100 #b1101000000111010011011101100000001001110100010001101)))
(assert (= y (fp #b1 #b10111111000 #b0000111111011100110010101100011000011011010111111010)))
(assert (= r (fp #b0 #b11101001100 #b1101000000111010011011101100000001001110100010001101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
