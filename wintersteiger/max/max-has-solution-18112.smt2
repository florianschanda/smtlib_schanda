(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8647337574609761379207384379697032272815704345703125p-159 {+ 3894414627875941 -159 (2.55181e-048)}
; Y = -1.2216954856935318129984580082236789166927337646484375p29 {- 998427706759111 29 (-6.55893e+008)}
; 1.8647337574609761379207384379697032272815704345703125p-159 M -1.2216954856935318129984580082236789166927337646484375p29 == 1.8647337574609761379207384379697032272815704345703125p-159
; [HW: 1.8647337574609761379207384379697032272815704345703125p-159] 

; mpf : + 3894414627875941 -159
; mpfd: + 3894414627875941 -159 (2.55181e-048) class: Pos. norm. non-zero
; hwf : + 3894414627875941 -159 (2.55181e-048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100000 #b1101110101011111001100010000100000001010110001100101)))
(assert (= y (fp #b1 #b10000011100 #b0011100011000001000010010000110010111001011111000111)))
(assert (= r (fp #b0 #b01101100000 #b1101110101011111001100010000100000001010110001100101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
