(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.83166641532665863678630557842552661895751953125p11 {+ 3745492558161696 11 (3751.25)}
; Y = 1.2738281903114778703667298032087273895740509033203125p478 {+ 1233212535850309 478 (9.94143e+143)}
; 1.83166641532665863678630557842552661895751953125p11 M 1.2738281903114778703667298032087273895740509033203125p478 == 1.2738281903114778703667298032087273895740509033203125p478
; [HW: 1.2738281903114778703667298032087273895740509033203125p478] 

; mpf : + 1233212535850309 478
; mpfd: + 1233212535850309 478 (9.94143e+143) class: Pos. norm. non-zero
; hwf : + 1233212535850309 478 (9.94143e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001010 #b1101010011101000000101110001011100000010011100100000)))
(assert (= y (fp #b0 #b10111011101 #b0100011000011001100110101011001000011100010101000101)))
(assert (= r (fp #b0 #b10111011101 #b0100011000011001100110101011001000011100010101000101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
