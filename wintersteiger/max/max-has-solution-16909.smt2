(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.88729181205573848245649060118012130260467529296875p-679 {+ 3996007074143116 -679 (7.5244e-205)}
; Y = -1.1614786085847559338191103961435146629810333251953125p493 {- 727235001450613 493 (-2.97029e+148)}
; 1.88729181205573848245649060118012130260467529296875p-679 M -1.1614786085847559338191103961435146629810333251953125p493 == 1.88729181205573848245649060118012130260467529296875p-679
; [HW: 1.88729181205573848245649060118012130260467529296875p-679] 

; mpf : + 3996007074143116 -679
; mpfd: + 3996007074143116 -679 (7.5244e-205) class: Pos. norm. non-zero
; hwf : + 3996007074143116 -679 (7.5244e-205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101011000 #b1110001100100101100011100110001011001001101110001100)))
(assert (= y (fp #b1 #b10111101100 #b0010100101010110101010010111111011100000000001110101)))
(assert (= r (fp #b0 #b00101011000 #b1110001100100101100011100110001011001001101110001100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
