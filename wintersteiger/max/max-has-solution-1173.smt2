(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2809925201214518164505307140643708407878875732421875p19 {+ 1265477808912867 19 (671609)}
; Y = -1.8990755624207460439123451578780077397823333740234375p-610 {- 4049076367895991 -610 (-4.46936e-184)}
; 1.2809925201214518164505307140643708407878875732421875p19 M -1.8990755624207460439123451578780077397823333740234375p-610 == 1.2809925201214518164505307140643708407878875732421875p19
; [HW: 1.2809925201214518164505307140643708407878875732421875p19] 

; mpf : + 1265477808912867 19
; mpfd: + 1265477808912867 19 (671609) class: Pos. norm. non-zero
; hwf : + 1265477808912867 19 (671609) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010010 #b0100011111101111001000000011010001010111100111100011)))
(assert (= y (fp #b1 #b00110011101 #b1110011000101001110100001110100100111010110110110111)))
(assert (= r (fp #b0 #b10000010010 #b0100011111101111001000000011010001010111100111100011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
