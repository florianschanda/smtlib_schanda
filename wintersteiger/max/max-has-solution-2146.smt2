(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.98861776738104456541122999624349176883697509765625p954 {+ 4452338608789124 954 (3.02808e+287)}
; Y = 0.649578469428698124232823829515837132930755615234375p-1022 {+ 2925441352866982 -1023 (1.44536e-308)}
; 1.98861776738104456541122999624349176883697509765625p954 M 0.649578469428698124232823829515837132930755615234375p-1022 == 1.98861776738104456541122999624349176883697509765625p954
; [HW: 1.98861776738104456541122999624349176883697509765625p954] 

; mpf : + 4452338608789124 954
; mpfd: + 4452338608789124 954 (3.02808e+287) class: Pos. norm. non-zero
; hwf : + 4452338608789124 954 (3.02808e+287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110111001 #b1111110100010110000011011101001100100101011010000100)))
(assert (= y (fp #b0 #b00000000000 #b1010011001001010110001100100101001100001110010100110)))
(assert (= r (fp #b0 #b11110111001 #b1111110100010110000011011101001100100101011010000100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
