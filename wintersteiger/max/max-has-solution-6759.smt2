(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.032129044805477402491078464663587510585784912109375p-993 {- 144696354213718 -993 (-1.23296e-299)}
; Y = -1.0301581298038886558288140804506838321685791015625p-126 {- 135820142146984 -126 (-1.21095e-038)}
; -1.032129044805477402491078464663587510585784912109375p-993 M -1.0301581298038886558288140804506838321685791015625p-126 == -1.032129044805477402491078464663587510585784912109375p-993
; [HW: -1.032129044805477402491078464663587510585784912109375p-993] 

; mpf : - 144696354213718 -993
; mpfd: - 144696354213718 -993 (-1.23296e-299) class: Neg. norm. non-zero
; hwf : - 144696354213718 -993 (-1.23296e-299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011110 #b0000100000111001100110111110110010110000111101010110)))
(assert (= y (fp #b1 #b01110000001 #b0000011110111000011100010111010100110111010110101000)))
(assert (= r (fp #b1 #b00000011110 #b0000100000111001100110111110110010110000111101010110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
