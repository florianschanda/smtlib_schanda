(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.545156084240366656246123966411687433719635009765625p235 {- 2455164737843674 235 (-8.53142e+070)}
; Y = -1.15396441110597702817130993935279548168182373046875p-164 {- 693394064485196 -164 (-4.93484e-050)}
; -1.545156084240366656246123966411687433719635009765625p235 M -1.15396441110597702817130993935279548168182373046875p-164 == -1.15396441110597702817130993935279548168182373046875p-164
; [HW: -1.15396441110597702817130993935279548168182373046875p-164] 

; mpf : - 693394064485196 -164
; mpfd: - 693394064485196 -164 (-4.93484e-050) class: Neg. norm. non-zero
; hwf : - 693394064485196 -164 (-4.93484e-050) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101010 #b1000101110001111010110010110000100000111000111011010)))
(assert (= y (fp #b1 #b01101011011 #b0010011101101010001101100010111001110010101101001100)))
(assert (= r (fp #b1 #b01101011011 #b0010011101101010001101100010111001110010101101001100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
