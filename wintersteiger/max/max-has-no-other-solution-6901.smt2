(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0303614776030787236749119983869604766368865966796875p-539 {- 136735939219643 -539 (-5.72561e-163)}
; Y = 1.234652652602699074435577131225727498531341552734375p-1013 {+ 1056781598823014 -1013 (1.40656e-305)}
; -1.0303614776030787236749119983869604766368865966796875p-539 M 1.234652652602699074435577131225727498531341552734375p-1013 == 1.234652652602699074435577131225727498531341552734375p-1013
; [HW: 1.234652652602699074435577131225727498531341552734375p-1013] 

; mpf : + 1056781598823014 -1013
; mpfd: + 1056781598823014 -1013 (1.40656e-305) class: Pos. norm. non-zero
; hwf : + 1056781598823014 -1013 (1.40656e-305) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111100100 #b0000011111000101110001010001000101011101000010111011)))
(assert (= y (fp #b0 #b00000001010 #b0011110000010010001100100011110011011001001001100110)))
(assert (= r (fp #b0 #b00000001010 #b0011110000010010001100100011110011011001001001100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
