(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.225856673788050965612228537793271243572235107421875p747 {- 1017168031911006 747 (-9.075e+224)}
; Y = -1.1900284907983849080892468919046223163604736328125p-144 {- 855812240349384 -144 (-5.33627e-044)}
; -1.225856673788050965612228537793271243572235107421875p747 M -1.1900284907983849080892468919046223163604736328125p-144 == -1.1900284907983849080892468919046223163604736328125p-144
; [HW: -1.1900284907983849080892468919046223163604736328125p-144] 

; mpf : - 855812240349384 -144
; mpfd: - 855812240349384 -144 (-5.33627e-044) class: Neg. norm. non-zero
; hwf : - 855812240349384 -144 (-5.33627e-044) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101010 #b0011100111010001101111100011001110000000110001011110)))
(assert (= y (fp #b1 #b01101101111 #b0011000010100101101101010000100101001001100011001000)))
(assert (= r (fp #b1 #b01101101111 #b0011000010100101101101010000100101001001100011001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
