(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.320214036851073302614167914725840091705322265625p-645 {- 1442115817041296 -645 (-9.04268e-195)}
; Y = 1.620401101457399573035900175455026328563690185546875p479 {+ 2794038169343790 479 (2.52924e+144)}
; -1.320214036851073302614167914725840091705322265625p-645 M 1.620401101457399573035900175455026328563690185546875p479 == 1.620401101457399573035900175455026328563690185546875p479
; [HW: 1.620401101457399573035900175455026328563690185546875p479] 

; mpf : + 2794038169343790 479
; mpfd: + 2794038169343790 479 (2.52924e+144) class: Pos. norm. non-zero
; hwf : + 2794038169343790 479 (2.52924e+144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111010 #b0101000111111001100011000000111111111110110110010000)))
(assert (= y (fp #b0 #b10111011110 #b1001111011010010100110110100100100101001011100101110)))
(assert (= r (fp #b0 #b10111011110 #b1001111011010010100110110100100100101001011100101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
