(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9753539539562192661747985766851343214511871337890625p-116 {- 4392603703591569 -116 (-2.37775e-035)}
; Y = -1.8830126144904515417266566146281547844409942626953125p-141 {- 3976735281582645 -141 (-6.75498e-043)}
; -1.9753539539562192661747985766851343214511871337890625p-116 M -1.8830126144904515417266566146281547844409942626953125p-141 == -1.8830126144904515417266566146281547844409942626953125p-141
; [HW: -1.8830126144904515417266566146281547844409942626953125p-141] 

; mpf : - 3976735281582645 -141
; mpfd: - 3976735281582645 -141 (-6.75498e-043) class: Neg. norm. non-zero
; hwf : - 3976735281582645 -141 (-6.75498e-043) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001011 #b1111100110110000110010111111011001000100001010010001)))
(assert (= y (fp #b1 #b01101110010 #b1110001000001101000111010101110100110001001000110101)))
(assert (= r (fp #b1 #b01101110010 #b1110001000001101000111010101110100110001001000110101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
