(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9541135710550958659581510801217518746852874755859375p-435 {- 4296945523072863 -435 (-2.20243e-131)}
; Y = 1.54345152336781854529590418678708374500274658203125p-470 {+ 2447488078133236 -470 (5.06285e-142)}
; -1.9541135710550958659581510801217518746852874755859375p-435 M 1.54345152336781854529590418678708374500274658203125p-470 == 1.54345152336781854529590418678708374500274658203125p-470
; [HW: 1.54345152336781854529590418678708374500274658203125p-470] 

; mpf : + 2447488078133236 -470
; mpfd: + 2447488078133236 -470 (5.06285e-142) class: Pos. norm. non-zero
; hwf : + 2447488078133236 -470 (5.06285e-142) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001001100 #b1111010001000000110010010111100001011001111101011111)))
(assert (= y (fp #b0 #b01000101001 #b1000101100011111101000111001011111010011011111110100)))
(assert (= r (fp #b0 #b01000101001 #b1000101100011111101000111001011111010011011111110100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
