(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.88374499147582152858149129315279424190521240234375p76 {- 3980033614301052 76 (-1.42332e+023)}
; Y = -1.680551619831209819722062093205749988555908203125p-243 {- 3064932021478224 -243 (-1.18895e-073)}
; -1.88374499147582152858149129315279424190521240234375p76 M -1.680551619831209819722062093205749988555908203125p-243 == -1.680551619831209819722062093205749988555908203125p-243
; [HW: -1.680551619831209819722062093205749988555908203125p-243] 

; mpf : - 3064932021478224 -243
; mpfd: - 3064932021478224 -243 (-1.18895e-073) class: Neg. norm. non-zero
; hwf : - 3064932021478224 -243 (-1.18895e-073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001011 #b1110001000111101000111001001110001100100011101111100)))
(assert (= y (fp #b1 #b01100001100 #b1010111000111000101000011000011001101010001101010000)))
(assert (= r (fp #b1 #b01100001100 #b1010111000111000101000011000011001101010001101010000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
