(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9527123429608990168304671897203661501407623291015625p80 {- 4290634952749977 80 (-2.36068e+024)}
; Y = -1.11195783068837972251685641822405159473419189453125p603 {- 504213244569396 603 (-3.69127e+181)}
; -1.9527123429608990168304671897203661501407623291015625p80 M -1.11195783068837972251685641822405159473419189453125p603 == -1.9527123429608990168304671897203661501407623291015625p80
; [HW: -1.9527123429608990168304671897203661501407623291015625p80] 

; mpf : - 4290634952749977 80
; mpfd: - 4290634952749977 80 (-2.36068e+024) class: Neg. norm. non-zero
; hwf : - 4290634952749977 80 (-2.36068e+024) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001111 #b1111001111100100111101001100001110000011001110011001)))
(assert (= y (fp #b1 #b11001011010 #b0001110010101001010001001011010101010110011100110100)))
(assert (= r (fp #b1 #b10001001111 #b1111001111100100111101001100001110000011001110011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
