(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -0.3626446753537357903240945233847014605998992919921875p-1022 {- 1633206424790979 -1023 (-8.06911e-309)}
; Y = 1.4238690249314067681751794225419871509075164794921875p-524 {+ 1908936382734979 -524 (2.5927e-158)}
; -0.3626446753537357903240945233847014605998992919921875p-1022 M 1.4238690249314067681751794225419871509075164794921875p-524 == 1.4238690249314067681751794225419871509075164794921875p-524
; [HW: 1.4238690249314067681751794225419871509075164794921875p-524] 

; mpf : + 1908936382734979 -524
; mpfd: + 1908936382734979 -524 (2.5927e-158) class: Pos. norm. non-zero
; hwf : + 1908936382734979 -524 (2.5927e-158) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0101110011010110010010000000110010110110011111000011)))
(assert (= y (fp #b0 #b00111110011 #b0110110010000010101011100010111111011110001010000011)))
(assert (= r (fp #b0 #b00111110011 #b0110110010000010101011100010111111011110001010000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
