(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.197724866932128318097738883807323873043060302734375p-319 {- 890473637037414 -319 (-1.12147e-096)}
; Y = -1.205523803538184335337746233562938868999481201171875p351 {- 925596925030334 351 (-5.52973e+105)}
; -1.197724866932128318097738883807323873043060302734375p-319 M -1.205523803538184335337746233562938868999481201171875p351 == -1.197724866932128318097738883807323873043060302734375p-319
; [HW: -1.197724866932128318097738883807323873043060302734375p-319] 

; mpf : - 890473637037414 -319
; mpfd: - 890473637037414 -319 (-1.12147e-096) class: Neg. norm. non-zero
; hwf : - 890473637037414 -319 (-1.12147e-096) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000000 #b0011001010011110000110001100110100010100010101100110)))
(assert (= y (fp #b1 #b10101011110 #b0011010010011101001101010011111010111110111110111110)))
(assert (= r (fp #b1 #b01011000000 #b0011001010011110000110001100110100010100010101100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
