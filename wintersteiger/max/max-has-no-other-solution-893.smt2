(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6146138724199037284279256709851324558258056640625p-536 {- 2767974806807016 -536 (-7.17779e-162)}
; Y = 0.059083312806896604030271191732026636600494384765625p-1022 {+ 266087585540954 -1023 (1.31465e-309)}
; -1.6146138724199037284279256709851324558258056640625p-536 M 0.059083312806896604030271191732026636600494384765625p-1022 == 0.059083312806896604030271191732026636600494384765625p-1022
; [HW: 0.059083312806896604030271191732026636600494384765625p-1022] 

; mpf : + 266087585540954 -1023
; mpfd: + 266087585540954 -1023 (1.31465e-309) class: Pos. denorm.
; hwf : + 266087585540954 -1023 (1.31465e-309) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111100111 #b1001110101010111010101011011000110110110000111101000)))
(assert (= y (fp #b0 #b00000000000 #b0000111100100000000101011000000000111110101101011010)))
(assert (= r (fp #b0 #b00000000000 #b0000111100100000000101011000000000111110101101011010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
