(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -0.682568459483005707255642846575938165187835693359375p-1022 {- 3074015059782518 -1023 (-1.51877e-308)}
; Y = -1.73204532289307078229967373772524297237396240234375p-857 {- 3296839043399548 -857 (-1.80241e-258)}
; -0.682568459483005707255642846575938165187835693359375p-1022 M -1.73204532289307078229967373772524297237396240234375p-857 == -0.682568459483005707255642846575938165187835693359375p-1022
; [HW: -0.682568459483005707255642846575938165187835693359375p-1022] 

; mpf : - 3074015059782518 -1023
; mpfd: - 3074015059782518 -1023 (-1.51877e-308) class: Neg. denorm.
; hwf : - 3074015059782518 -1023 (-1.51877e-308) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1010111010111100110011100111101011000010101101110110)))
(assert (= y (fp #b1 #b00010100110 #b1011101101100111010100101000000100000011111101111100)))
(assert (= r (fp #b1 #b00000000000 #b1010111010111100110011100111101011000010101101110110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
