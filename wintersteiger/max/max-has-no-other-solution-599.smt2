(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.920067139528793820346663778764195740222930908203125p-654 {- 4143614026737714 -654 (-2.56862e-197)}
; Y = -1.4679779878109899815541439238586463034152984619140625p-766 {- 2107585491523169 -766 (-3.78219e-231)}
; -1.920067139528793820346663778764195740222930908203125p-654 M -1.4679779878109899815541439238586463034152984619140625p-766 == -1.4679779878109899815541439238586463034152984619140625p-766
; [HW: -1.4679779878109899815541439238586463034152984619140625p-766] 

; mpf : - 2107585491523169 -766
; mpfd: - 2107585491523169 -766 (-3.78219e-231) class: Neg. norm. non-zero
; hwf : - 2107585491523169 -766 (-3.78219e-231) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101110001 #b1110101110001001100001010010001001100110100000110010)))
(assert (= y (fp #b1 #b00100000001 #b0111011111001101011001111100100011100101011001100001)))
(assert (= r (fp #b1 #b00100000001 #b0111011111001101011001111100100011100101011001100001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
