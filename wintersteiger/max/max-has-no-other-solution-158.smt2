(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3919222192013094296925146409193985164165496826171875p-288 {+ 1765060760353235 -288 (2.79883e-087)}
; Y = 1.6613441512774584918332720917533151805400848388671875p171 {+ 2978429273256819 171 (4.97266e+051)}
; 1.3919222192013094296925146409193985164165496826171875p-288 M 1.6613441512774584918332720917533151805400848388671875p171 == 1.6613441512774584918332720917533151805400848388671875p171
; [HW: 1.6613441512774584918332720917533151805400848388671875p171] 

; mpf : + 2978429273256819 171
; mpfd: + 2978429273256819 171 (4.97266e+051) class: Pos. norm. non-zero
; hwf : + 2978429273256819 171 (4.97266e+051) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011111 #b0110010001010101000000111011101000001011100111010011)))
(assert (= y (fp #b0 #b10010101010 #b1010100101001101110110011010110100100011001101110011)))
(assert (= r (fp #b0 #b10010101010 #b1010100101001101110110011010110100100011001101110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
