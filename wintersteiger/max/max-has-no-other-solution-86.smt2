(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.453641454521636067198642194853164255619049072265625p442 {- 2043019485543450 442 (-1.65088e+133)}
; Y = -1.0776711566418188947835687940823845565319061279296875p84 {- 349799792109531 84 (-2.08452e+025)}
; -1.453641454521636067198642194853164255619049072265625p442 M -1.0776711566418188947835687940823845565319061279296875p84 == -1.0776711566418188947835687940823845565319061279296875p84
; [HW: -1.0776711566418188947835687940823845565319061279296875p84] 

; mpf : - 349799792109531 84
; mpfd: - 349799792109531 84 (-2.08452e+025) class: Neg. norm. non-zero
; hwf : - 349799792109531 84 (-2.08452e+025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111001 #b0111010000100001110110001010101101000111110000011010)))
(assert (= y (fp #b1 #b10001010011 #b0001001111100010010000011100010110011110011111011011)))
(assert (= r (fp #b1 #b10001010011 #b0001001111100010010000011100010110011110011111011011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
