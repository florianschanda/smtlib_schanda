(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6377927458781298408752036266378127038478851318359375p-780 {+ 2872363172676351 -780 (2.5755e-235)}
; Y = -1.0017204378043274015652741582016460597515106201171875p977 {- 7748163054483 977 (-1.27954e+294)}
; 1.6377927458781298408752036266378127038478851318359375p-780 M -1.0017204378043274015652741582016460597515106201171875p977 == 1.6377927458781298408752036266378127038478851318359375p-780
; [HW: 1.6377927458781298408752036266378127038478851318359375p-780] 

; mpf : + 2872363172676351 -780
; mpfd: + 2872363172676351 -780 (2.5755e-235) class: Pos. norm. non-zero
; hwf : + 2872363172676351 -780 (2.5755e-235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110011 #b1010001101000110011000101010100100101100001011111111)))
(assert (= y (fp #b1 #b11111010000 #b0000000001110000110000000010100000011010101110010011)))
(assert (= r (fp #b0 #b00011110011 #b1010001101000110011000101010100100101100001011111111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
