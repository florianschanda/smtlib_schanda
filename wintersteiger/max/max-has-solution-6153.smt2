(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.396556414651815458682904136367142200469970703125p-686 {+ 1785931321257296 -686 (4.34992e-207)}
; Y = -1.0444399984891299393297003916813991963863372802734375p399 {- 200139960635991 399 (-1.3485e+120)}
; 1.396556414651815458682904136367142200469970703125p-686 M -1.0444399984891299393297003916813991963863372802734375p399 == 1.396556414651815458682904136367142200469970703125p-686
; [HW: 1.396556414651815458682904136367142200469970703125p-686] 

; mpf : + 1785931321257296 -686
; mpfd: + 1785931321257296 -686 (4.34992e-207) class: Pos. norm. non-zero
; hwf : + 1785931321257296 -686 (4.34992e-207) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010001 #b0110010110000100101110001001111111110010110101010000)))
(assert (= y (fp #b1 #b10110001110 #b0000101101100000011010110111010000100101001001010111)))
(assert (= r (fp #b0 #b00101010001 #b0110010110000100101110001001111111110010110101010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
