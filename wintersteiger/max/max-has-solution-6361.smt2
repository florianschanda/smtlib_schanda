(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8795885674887955474332557059824466705322265625p1022 {+ 3961314744781888 1022 (8.44731e+307)}
; Y = -1.0365941849222275461528397499932907521724700927734375p91 {- 164805557579671 91 (-2.56648e+027)}
; 1.8795885674887955474332557059824466705322265625p1022 M -1.0365941849222275461528397499932907521724700927734375p91 == 1.8795885674887955474332557059824466705322265625p1022
; [HW: 1.8795885674887955474332557059824466705322265625p1022] 

; mpf : + 3961314744781888 1022
; mpfd: + 3961314744781888 1022 (8.44731e+307) class: Pos. norm. non-zero
; hwf : + 3961314744781888 1022 (8.44731e+307) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111101 #b1110000100101100101101110110001101001100110001000000)))
(assert (= y (fp #b1 #b10001011010 #b0000100101011110001111001000101101110110111110010111)))
(assert (= r (fp #b0 #b11111111101 #b1110000100101100101101110110001101001100110001000000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
