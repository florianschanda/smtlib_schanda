(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2616638733999605559432666268548928201198577880859375p50 {+ 1178429322740383 50 (1.42051e+015)}
; Y = 1.9981443049831517644321365878568030893802642822265625p409 {+ 4495242319984105 409 (2.64177e+123)}
; 1.2616638733999605559432666268548928201198577880859375p50 M 1.9981443049831517644321365878568030893802642822265625p409 == 1.9981443049831517644321365878568030893802642822265625p409
; [HW: 1.9981443049831517644321365878568030893802642822265625p409] 

; mpf : + 4495242319984105 409
; mpfd: + 4495242319984105 409 (2.64177e+123) class: Pos. norm. non-zero
; hwf : + 4495242319984105 409 (2.64177e+123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000110001 #b0100001011111100011001110101001011001100001010011111)))
(assert (= y (fp #b0 #b10110011000 #b1111111110000110011000101001101010010111010111101001)))
(assert (= r (fp #b0 #b10110011000 #b1111111110000110011000101001101010010111010111101001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
