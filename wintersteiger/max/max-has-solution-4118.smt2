(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1205741305163570142866547030280344188213348388671875p365 {+ 543017609263987 365 (8.42149e+109)}
; Y = -1.732619630392679521690979527193121612071990966796875p797 {- 3299425494440782 797 (-1.44414e+240)}
; 1.1205741305163570142866547030280344188213348388671875p365 M -1.732619630392679521690979527193121612071990966796875p797 == 1.1205741305163570142866547030280344188213348388671875p365
; [HW: 1.1205741305163570142866547030280344188213348388671875p365] 

; mpf : + 543017609263987 365
; mpfd: + 543017609263987 365 (8.42149e+109) class: Pos. norm. non-zero
; hwf : + 543017609263987 365 (8.42149e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101100 #b0001111011011101111100100011101101001111101101110011)))
(assert (= y (fp #b1 #b11100011100 #b1011101110001100111101011100100011110001101101001110)))
(assert (= r (fp #b0 #b10101101100 #b0001111011011101111100100011101101001111101101110011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
