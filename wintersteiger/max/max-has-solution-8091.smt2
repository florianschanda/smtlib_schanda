(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4085443966396271608942925013252533972263336181640625p-103 {- 1839920392470529 -103 (-1.38893e-031)}
; Y = -1.01538468366695955324985334300436079502105712890625p304 {- 69286455629732 304 (-3.3094e+091)}
; -1.4085443966396271608942925013252533972263336181640625p-103 M -1.01538468366695955324985334300436079502105712890625p304 == -1.4085443966396271608942925013252533972263336181640625p-103
; [HW: -1.4085443966396271608942925013252533972263336181640625p-103] 

; mpf : - 1839920392470529 -103
; mpfd: - 1839920392470529 -103 (-1.38893e-031) class: Neg. norm. non-zero
; hwf : - 1839920392470529 -103 (-1.38893e-031) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110011000 #b0110100010010110010111011001011010001000000000000001)))
(assert (= y (fp #b1 #b10100101111 #b0000001111110000010000000010100100110101011110100100)))
(assert (= r (fp #b1 #b01110011000 #b0110100010010110010111011001011010001000000000000001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
