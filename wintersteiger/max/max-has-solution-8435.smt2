(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.486477567119933507200357780675403773784637451171875p217 {+ 2190900190005438 217 (3.13089e+065)}
; Y = -1.135386892537443515038830810226500034332275390625p-845 {- 609728358782480 -845 (-4.83947e-255)}
; 1.486477567119933507200357780675403773784637451171875p217 M -1.135386892537443515038830810226500034332275390625p-845 == 1.486477567119933507200357780675403773784637451171875p217
; [HW: 1.486477567119933507200357780675403773784637451171875p217] 

; mpf : + 2190900190005438 217
; mpfd: + 2190900190005438 217 (3.13089e+065) class: Pos. norm. non-zero
; hwf : + 2190900190005438 217 (3.13089e+065) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011000 #b0111110010001001110010110011100100000100100010111110)))
(assert (= y (fp #b1 #b00010110010 #b0010001010101000101101110010001111000001011000010000)))
(assert (= r (fp #b0 #b10011011000 #b0111110010001001110010110011100100000100100010111110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
