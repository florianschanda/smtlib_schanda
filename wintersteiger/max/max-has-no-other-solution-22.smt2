(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7681870662519563186521054376498796045780181884765625p511 {- 3459606985323145 511 (-1.18538e+154)}
; Y = -1.8183125689919439338382289861328899860382080078125p925 {- 3685352180784712 925 (-5.15721e+278)}
; -1.7681870662519563186521054376498796045780181884765625p511 M -1.8183125689919439338382289861328899860382080078125p925 == -1.7681870662519563186521054376498796045780181884765625p511
; [HW: -1.7681870662519563186521054376498796045780181884765625p511] 

; mpf : - 3459606985323145 511
; mpfd: - 3459606985323145 511 (-1.18538e+154) class: Neg. norm. non-zero
; hwf : - 3459606985323145 511 (-1.18538e+154) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111111110 #b1100010010100111111010000101011011000011001010001001)))
(assert (= y (fp #b1 #b11110011100 #b1101000101111100111011101011100110111001111001001000)))
(assert (= r (fp #b1 #b10111111110 #b1100010010100111111010000101011011000011001010001001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
