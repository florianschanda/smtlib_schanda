(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7344016935947539348461532426881603896617889404296875p-87 {- 3307451193613595 -87 (-1.12083e-026)}
; Y = -1.7536722363825616444188426612527109682559967041015625p-933 {- 3394238002931993 -933 (-2.41525e-281)}
; -1.7344016935947539348461532426881603896617889404296875p-87 M -1.7536722363825616444188426612527109682559967041015625p-933 == -1.7536722363825616444188426612527109682559967041015625p-933
; [HW: -1.7536722363825616444188426612527109682559967041015625p-933] 

; mpf : - 3394238002931993 -933
; mpfd: - 3394238002931993 -933 (-2.41525e-281) class: Neg. norm. non-zero
; hwf : - 3394238002931993 -933 (-2.41525e-281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101000 #b1011110000000001101111111101100000011101110100011011)))
(assert (= y (fp #b1 #b00001011010 #b1100000011110000101010011110011100101010100100011001)))
(assert (= r (fp #b1 #b00001011010 #b1100000011110000101010011110011100101010100100011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
