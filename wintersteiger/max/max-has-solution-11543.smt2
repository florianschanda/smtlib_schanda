(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7271822304626101018953931998112238943576812744140625p806 {+ 3274937622141857 806 (7.3708e+242)}
; Y = -1.0619952744093483776310904431738890707492828369140625p366 {- 279201894728673 366 (-1.59625e+110)}
; 1.7271822304626101018953931998112238943576812744140625p806 M -1.0619952744093483776310904431738890707492828369140625p366 == 1.7271822304626101018953931998112238943576812744140625p806
; [HW: 1.7271822304626101018953931998112238943576812744140625p806] 

; mpf : + 3274937622141857 806
; mpfd: + 3274937622141857 806 (7.3708e+242) class: Pos. norm. non-zero
; hwf : + 3274937622141857 806 (7.3708e+242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100101 #b1011101000101000100111010101101000010001101110100001)))
(assert (= y (fp #b1 #b10101101101 #b0000111111011110111011000001110000011000001111100001)))
(assert (= r (fp #b0 #b11100100101 #b1011101000101000100111010101101000010001101110100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
