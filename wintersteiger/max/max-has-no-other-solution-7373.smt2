(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -0.044629110384853287740725136245600879192352294921875p-1022 {- 200991644899102 -1023 (-9.93031e-310)}
; Y = 1.5940734763286876773946687535499222576618194580078125p730 {+ 2675469086624573 730 (9.00337e+219)}
; -0.044629110384853287740725136245600879192352294921875p-1022 M 1.5940734763286876773946687535499222576618194580078125p730 == 1.5940734763286876773946687535499222576618194580078125p730
; [HW: 1.5940734763286876773946687535499222576618194580078125p730] 

; mpf : + 2675469086624573 730
; mpfd: + 2675469086624573 730 (9.00337e+219) class: Pos. norm. non-zero
; hwf : + 2675469086624573 730 (9.00337e+219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0000101101101100110100000011100110001101011100011110)))
(assert (= y (fp #b0 #b11011011001 #b1001100000010101001100110000100001000000101100111101)))
(assert (= r (fp #b0 #b11011011001 #b1001100000010101001100110000100001000000101100111101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
