(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5856436493029983925140413703047670423984527587890625p446 {- 2637504520772881 446 (-2.88127e+134)}
; Y = -1.31261707539606486960792608442716300487518310546875p66 {- 1407902144263372 66 (-9.6854e+019)}
; -1.5856436493029983925140413703047670423984527587890625p446 M -1.31261707539606486960792608442716300487518310546875p66 == -1.31261707539606486960792608442716300487518310546875p66
; [HW: -1.31261707539606486960792608442716300487518310546875p66] 

; mpf : - 1407902144263372 66
; mpfd: - 1407902144263372 66 (-9.6854e+019) class: Neg. norm. non-zero
; hwf : - 1407902144263372 66 (-9.6854e+019) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111101 #b1001010111101100101111100000000011011101110100010001)))
(assert (= y (fp #b1 #b10001000001 #b0101000000000111101011000011001011111111010011001100)))
(assert (= r (fp #b1 #b10001000001 #b0101000000000111101011000011001011111111010011001100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
