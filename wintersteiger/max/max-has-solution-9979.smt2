(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9833125391845467522244916835916228592395782470703125p44 {- 4428445985060261 44 (-3.48908e+013)}
; Y = 1.195244338076678847215816858806647360324859619140625p-368 {+ 879302328208330 -368 (1.98801e-111)}
; -1.9833125391845467522244916835916228592395782470703125p44 M 1.195244338076678847215816858806647360324859619140625p-368 == 1.195244338076678847215816858806647360324859619140625p-368
; [HW: 1.195244338076678847215816858806647360324859619140625p-368] 

; mpf : + 879302328208330 -368
; mpfd: + 879302328208330 -368 (1.98801e-111) class: Pos. norm. non-zero
; hwf : + 879302328208330 -368 (1.98801e-111) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000101011 #b1111101110111010010111101101110110001011010110100101)))
(assert (= y (fp #b0 #b01010001111 #b0011000111111011100010000110111011000100101111001010)))
(assert (= r (fp #b0 #b01010001111 #b0011000111111011100010000110111011000100101111001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
