(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0609536717806644645634150947444140911102294921875p282 {+ 274510933518264 282 (8.24433e+084)}
; Y = -1.5728386403117060599043952606734819710254669189453125p-277 {- 2579835887051221 -277 (-6.47702e-084)}
; 1.0609536717806644645634150947444140911102294921875p282 M -1.5728386403117060599043952606734819710254669189453125p-277 == 1.0609536717806644645634150947444140911102294921875p282
; [HW: 1.0609536717806644645634150947444140911102294921875p282] 

; mpf : + 274510933518264 282
; mpfd: + 274510933518264 282 (8.24433e+084) class: Pos. norm. non-zero
; hwf : + 274510933518264 282 (8.24433e+084) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100011001 #b0000111110011010101010001110101011011110011110111000)))
(assert (= y (fp #b1 #b01011101010 #b1001001010100101100011011001101000000110000111010101)))
(assert (= r (fp #b0 #b10100011001 #b0000111110011010101010001110101011011110011110111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
