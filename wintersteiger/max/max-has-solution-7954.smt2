(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2406630188451106544533786291140131652355194091796875p13 {- 1083849881992699 13 (-10163.5)}
; Y = 1.8145041982852971873541036984534002840518951416015625p-419 {+ 3668200803889369 -419 (1.34026e-126)}
; -1.2406630188451106544533786291140131652355194091796875p13 M 1.8145041982852971873541036984534002840518951416015625p-419 == 1.8145041982852971873541036984534002840518951416015625p-419
; [HW: 1.8145041982852971873541036984534002840518951416015625p-419] 

; mpf : + 3668200803889369 -419
; mpfd: + 3668200803889369 -419 (1.34026e-126) class: Pos. norm. non-zero
; hwf : + 3668200803889369 -419 (1.34026e-126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001100 #b0011110110011100000101110111001101001011110111111011)))
(assert (= y (fp #b0 #b01001011100 #b1101000010000011010110001101111000010111000011011001)))
(assert (= r (fp #b0 #b01001011100 #b1101000010000011010110001101111000010111000011011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
