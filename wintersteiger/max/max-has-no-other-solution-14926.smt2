(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8774893297504642308837219388806261122226715087890625p197 {- 3951860618485777 197 (-3.77126e+059)}
; Y = -1.1183092617035630400579293564078398048877716064453125p-57 {- 532817546922645 -57 (-7.75983e-018)}
; -1.8774893297504642308837219388806261122226715087890625p197 M -1.1183092617035630400579293564078398048877716064453125p-57 == -1.1183092617035630400579293564078398048877716064453125p-57
; [HW: -1.1183092617035630400579293564078398048877716064453125p-57] 

; mpf : - 532817546922645 -57
; mpfd: - 532817546922645 -57 (-7.75983e-018) class: Neg. norm. non-zero
; hwf : - 532817546922645 -57 (-7.75983e-018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000100 #b1110000010100011001001000000010111011110000000010001)))
(assert (= y (fp #b1 #b01111000110 #b0001111001001001100001000000100111010100101010010101)))
(assert (= r (fp #b1 #b01111000110 #b0001111001001001100001000000100111010100101010010101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
