(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0316571642812386588872186621301807463169097900390625p-1 {+ 142571193260593 -1 (0.515829)}
; Y = -1.186996719831598934291605473845265805721282958984375p196 {- 842158357753094 196 (-1.19214e+059)}
; 1.0316571642812386588872186621301807463169097900390625p-1 M -1.186996719831598934291605473845265805721282958984375p196 == 1.0316571642812386588872186621301807463169097900390625p-1
; [HW: 1.0316571642812386588872186621301807463169097900390625p-1] 

; mpf : + 142571193260593 -1
; mpfd: + 142571193260593 -1 (0.515829) class: Pos. norm. non-zero
; hwf : + 142571193260593 -1 (0.515829) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111110 #b0000100000011010101011110001010101000101101000110001)))
(assert (= y (fp #b1 #b10011000011 #b0010111111011111000001000101110000100010110100000110)))
(assert (= r (fp #b0 #b01111111110 #b0000100000011010101011110001010101000101101000110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
