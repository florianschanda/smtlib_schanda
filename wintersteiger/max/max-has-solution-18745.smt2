(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.61214437345959904490655389963649213314056396484375p102 {- 2756853172209596 102 (-8.17454e+030)}
; Y = 1.3796775005396877400443145234021358191967010498046875p222 {+ 1709915449951499 222 (9.29901e+066)}
; -1.61214437345959904490655389963649213314056396484375p102 M 1.3796775005396877400443145234021358191967010498046875p222 == 1.3796775005396877400443145234021358191967010498046875p222
; [HW: 1.3796775005396877400443145234021358191967010498046875p222] 

; mpf : + 1709915449951499 222
; mpfd: + 1709915449951499 222 (9.29901e+066) class: Pos. norm. non-zero
; hwf : + 1709915449951499 222 (9.29901e+066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001100101 #b1001110010110101011111100110000001110000011110111100)))
(assert (= y (fp #b0 #b10011011101 #b0110000100110010100010110110111111011000010100001011)))
(assert (= r (fp #b0 #b10011011101 #b0110000100110010100010110110111111011000010100001011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
