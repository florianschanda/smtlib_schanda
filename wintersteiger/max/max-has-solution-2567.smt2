(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4487764083950633864361634550732560455799102783203125p-911 {- 2021109265620677 -911 (-8.36903e-275)}
; Y = -1.2878779600533489801961195553303696215152740478515625p403 {- 1296487073624441 403 (-2.6605e+121)}
; -1.4487764083950633864361634550732560455799102783203125p-911 M -1.2878779600533489801961195553303696215152740478515625p403 == -1.4487764083950633864361634550732560455799102783203125p-911
; [HW: -1.4487764083950633864361634550732560455799102783203125p-911] 

; mpf : - 2021109265620677 -911
; mpfd: - 2021109265620677 -911 (-8.36903e-275) class: Neg. norm. non-zero
; hwf : - 2021109265620677 -911 (-8.36903e-275) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001110000 #b0111001011100011000000101011110101000101111011000101)))
(assert (= y (fp #b1 #b10110010010 #b0100100110110010010111101011011110101011000101111001)))
(assert (= r (fp #b1 #b00001110000 #b0111001011100011000000101011110101000101111011000101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
