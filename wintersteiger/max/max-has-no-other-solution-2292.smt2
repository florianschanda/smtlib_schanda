(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4904466095585402474199554490041919052600860595703125p-232 {- 2208775168052965 -232 (-2.15952e-070)}
; Y = -1.595842400691334983520164314541034400463104248046875p-1003 {- 2683435613725038 -1003 (-1.86168e-302)}
; -1.4904466095585402474199554490041919052600860595703125p-232 M -1.595842400691334983520164314541034400463104248046875p-1003 == -1.595842400691334983520164314541034400463104248046875p-1003
; [HW: -1.595842400691334983520164314541034400463104248046875p-1003] 

; mpf : - 2683435613725038 -1003
; mpfd: - 2683435613725038 -1003 (-1.86168e-302) class: Neg. norm. non-zero
; hwf : - 2683435613725038 -1003 (-1.86168e-302) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010111 #b0111110110001101111010001011010001111100111011100101)))
(assert (= y (fp #b1 #b00000010100 #b1001100010001001001000001010100010001010000101101110)))
(assert (= r (fp #b1 #b00000010100 #b1001100010001001001000001010100010001010000101101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
