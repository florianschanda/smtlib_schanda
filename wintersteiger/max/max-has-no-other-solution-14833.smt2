(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.173757812997310967517705648788250982761383056640625p-425 {+ 782535621867402 -425 (1.35466e-128)}
; Y = -1.6722422623331152369274832381051965057849884033203125p-905 {- 3027510002146117 -905 (-6.18234e-273)}
; 1.173757812997310967517705648788250982761383056640625p-425 M -1.6722422623331152369274832381051965057849884033203125p-905 == 1.173757812997310967517705648788250982761383056640625p-425
; [HW: 1.173757812997310967517705648788250982761383056640625p-425] 

; mpf : + 782535621867402 -425
; mpfd: + 782535621867402 -425 (1.35466e-128) class: Pos. norm. non-zero
; hwf : + 782535621867402 -425 (1.35466e-128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010110 #b0010110001111011011001000101110000111111011110001010)))
(assert (= y (fp #b1 #b00001110110 #b1010110000011000000100011010001110110101101101000101)))
(assert (= r (fp #b0 #b01001010110 #b0010110001111011011001000101110000111111011110001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
