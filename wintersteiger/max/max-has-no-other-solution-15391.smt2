(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.396061023660555289183093918836675584316253662109375p-612 {- 1783700278573654 -612 (-8.21386e-185)}
; Y = 1.6750743793909552703524923344957642257213592529296875p560 {+ 3040264723472475 560 (6.32167e+168)}
; -1.396061023660555289183093918836675584316253662109375p-612 M 1.6750743793909552703524923344957642257213592529296875p560 == 1.6750743793909552703524923344957642257213592529296875p560
; [HW: 1.6750743793909552703524923344957642257213592529296875p560] 

; mpf : + 3040264723472475 560
; mpfd: + 3040264723472475 560 (6.32167e+168) class: Pos. norm. non-zero
; hwf : + 3040264723472475 560 (6.32167e+168) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110011011 #b0110010101100100010000010101011111010111101001010110)))
(assert (= y (fp #b0 #b11000101111 #b1010110011010001101011001010110111011010000001011011)))
(assert (= r (fp #b0 #b11000101111 #b1010110011010001101011001010110111011010000001011011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
