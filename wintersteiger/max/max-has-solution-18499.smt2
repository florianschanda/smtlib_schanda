(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.19216010331198329907920197001658380031585693359375p-274 {+ 865412169671324 -274 (3.9275e-083)}
; Y = -1.67008843579051902139553931192494928836822509765625p-141 {- 3017810029731460 -141 (-5.99115e-043)}
; 1.19216010331198329907920197001658380031585693359375p-274 M -1.67008843579051902139553931192494928836822509765625p-141 == 1.19216010331198329907920197001658380031585693359375p-274
; [HW: 1.19216010331198329907920197001658380031585693359375p-274] 

; mpf : + 865412169671324 -274
; mpfd: + 865412169671324 -274 (3.9275e-083) class: Pos. norm. non-zero
; hwf : + 865412169671324 -274 (3.9275e-083) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101101 #b0011000100110001011001111000111101010010001010011100)))
(assert (= y (fp #b1 #b01101110010 #b1010101110001010111010100110110100100101111010000100)))
(assert (= r (fp #b0 #b01011101101 #b0011000100110001011001111000111101010010001010011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
