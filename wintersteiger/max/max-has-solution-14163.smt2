(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1646152786597927519807171847787685692310333251953125p-654 {+ 741361307631733 -654 (1.55799e-197)}
; Y = 1.8158072812745975621595562188304029405117034912109375p498 {+ 3674069367954415 498 (1.48596e+150)}
; 1.1646152786597927519807171847787685692310333251953125p-654 M 1.8158072812745975621595562188304029405117034912109375p498 == 1.8158072812745975621595562188304029405117034912109375p498
; [HW: 1.8158072812745975621595562188304029405117034912109375p498] 

; mpf : + 3674069367954415 498
; mpfd: + 3674069367954415 498 (1.48596e+150) class: Pos. norm. non-zero
; hwf : + 3674069367954415 498 (1.48596e+150) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110001 #b0010101000100100001110100001011001000100000001110101)))
(assert (= y (fp #b0 #b10111110001 #b1101000011011000101111101111100011101001101111101111)))
(assert (= r (fp #b0 #b10111110001 #b1101000011011000101111101111100011101001101111101111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
