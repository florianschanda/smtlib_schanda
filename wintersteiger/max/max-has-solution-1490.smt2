(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1227056795215488715911078543285839259624481201171875p479 {- 552617252569491 479 (-1.7524e+144)}
; Y = -1.0187260291022948166528294677846133708953857421875p-121 {- 84334537687224 -121 (-3.83202e-037)}
; -1.1227056795215488715911078543285839259624481201171875p479 M -1.0187260291022948166528294677846133708953857421875p-121 == -1.0187260291022948166528294677846133708953857421875p-121
; [HW: -1.0187260291022948166528294677846133708953857421875p-121] 

; mpf : - 84334537687224 -121
; mpfd: - 84334537687224 -121 (-3.83202e-037) class: Neg. norm. non-zero
; hwf : - 84334537687224 -121 (-3.83202e-037) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011110 #b0001111101101001101000111011000010010100000110010011)))
(assert (= y (fp #b1 #b01110000110 #b0000010011001011001110101010001010010100000010111000)))
(assert (= r (fp #b1 #b01110000110 #b0000010011001011001110101010001010010100000010111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
