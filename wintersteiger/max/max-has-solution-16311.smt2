(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6180227917220337818804409835138358175754547119140625p972 {- 2783327214505825 972 (-6.45863e+292)}
; Y = -1.257909855163109824616185505874454975128173828125p396 {- 1161522727607760 396 (-2.03015e+119)}
; -1.6180227917220337818804409835138358175754547119140625p972 M -1.257909855163109824616185505874454975128173828125p396 == -1.257909855163109824616185505874454975128173828125p396
; [HW: -1.257909855163109824616185505874454975128173828125p396] 

; mpf : - 1161522727607760 396
; mpfd: - 1161522727607760 396 (-2.03015e+119) class: Neg. norm. non-zero
; hwf : - 1161522727607760 396 (-2.03015e+119) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001011 #b1001111000110110101111011101111010100000111101100001)))
(assert (= y (fp #b1 #b10110001011 #b0100001000000110011000010101100100111101110111010000)))
(assert (= r (fp #b1 #b10110001011 #b0100001000000110011000010101100100111101110111010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
