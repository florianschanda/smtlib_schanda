(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.18427434542162668407172532170079648494720458984375p262 {+ 829897873374780 262 (8.77629e+078)}
; Y = 1.45197438006876122784660765319131314754486083984375p-451 {+ 2035511649658684 -451 (2.49707e-136)}
; 1.18427434542162668407172532170079648494720458984375p262 M 1.45197438006876122784660765319131314754486083984375p-451 == 1.18427434542162668407172532170079648494720458984375p262
; [HW: 1.18427434542162668407172532170079648494720458984375p262] 

; mpf : + 829897873374780 262
; mpfd: + 829897873374780 262 (8.77629e+078) class: Pos. norm. non-zero
; hwf : + 829897873374780 262 (8.77629e+078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100000101 #b0010111100101100100110100111111100010011111000111100)))
(assert (= y (fp #b0 #b01000111100 #b0111001110110100100101111100110100000110011100111100)))
(assert (= r (fp #b0 #b10100000101 #b0010111100101100100110100111111100010011111000111100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
