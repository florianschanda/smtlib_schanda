(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1604294445956602199743201708770357072353363037109375p424 {+ 722509986900271 424 (5.02732e+127)}
; Y = 1.021884996657641320183529387577436864376068115234375p845 {+ 98561262792358 845 (2.39744e+254)}
; 1.1604294445956602199743201708770357072353363037109375p424 M 1.021884996657641320183529387577436864376068115234375p845 == 1.021884996657641320183529387577436864376068115234375p845
; [HW: 1.021884996657641320183529387577436864376068115234375p845] 

; mpf : + 98561262792358 845
; mpfd: + 98561262792358 845 (2.39744e+254) class: Pos. norm. non-zero
; hwf : + 98561262792358 845 (2.39744e+254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100111 #b0010100100010001111001110111000111011010100100101111)))
(assert (= y (fp #b0 #b11101001100 #b0000010110011010010000010101000011101010111010100110)))
(assert (= r (fp #b0 #b11101001100 #b0000010110011010010000010101000011101010111010100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
