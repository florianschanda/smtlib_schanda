(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.794998263338927646515230662771500647068023681640625p443 {+ 3580353882533386 443 (4.07711e+133)}
; Y = 1.4418938664626441692462321952916681766510009765625p-515 {+ 1990113052338472 -515 (1.34427e-155)}
; 1.794998263338927646515230662771500647068023681640625p443 M 1.4418938664626441692462321952916681766510009765625p-515 == 1.794998263338927646515230662771500647068023681640625p443
; [HW: 1.794998263338927646515230662771500647068023681640625p443] 

; mpf : + 3580353882533386 443
; mpfd: + 3580353882533386 443 (4.07711e+133) class: Pos. norm. non-zero
; hwf : + 3580353882533386 443 (4.07711e+133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111010 #b1100101110000101000000011001010101101010111000001010)))
(assert (= y (fp #b0 #b00111111100 #b0111000100011111111101001101100011000010100100101000)))
(assert (= r (fp #b0 #b10110111010 #b1100101110000101000000011001010101101010111000001010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
