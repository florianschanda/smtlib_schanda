(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.64886107597721842665805525030009448528289794921875p-763 {- 2922210499986220 -763 (-3.39858e-230)}
; Y = 1.44123058947879467694974664482288062572479248046875p-167 {+ 1987125918361164 -167 (7.70414e-051)}
; -1.64886107597721842665805525030009448528289794921875p-763 M 1.44123058947879467694974664482288062572479248046875p-167 == 1.44123058947879467694974664482288062572479248046875p-167
; [HW: 1.44123058947879467694974664482288062572479248046875p-167] 

; mpf : + 1987125918361164 -167
; mpfd: + 1987125918361164 -167 (7.70414e-051) class: Pos. norm. non-zero
; hwf : + 1987125918361164 -167 (7.70414e-051) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000100 #b1010011000011011110000100110110011111000001100101100)))
(assert (= y (fp #b0 #b01101011000 #b0111000011110100011111001110011111001110011001001100)))
(assert (= r (fp #b0 #b01101011000 #b0111000011110100011111001110011111001110011001001100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
