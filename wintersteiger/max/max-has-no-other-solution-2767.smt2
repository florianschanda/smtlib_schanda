(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1965383207814299648674705167650245130062103271484375p504 {- 885129908235271 504 (-6.26678e+151)}
; Y = 0.1433186502259911065948472241871058940887451171875p-1022 {+ 645449819753016 -1023 (3.18895e-309)}
; -1.1965383207814299648674705167650245130062103271484375p504 M 0.1433186502259911065948472241871058940887451171875p-1022 == 0.1433186502259911065948472241871058940887451171875p-1022
; [HW: 0.1433186502259911065948472241871058940887451171875p-1022] 

; mpf : + 645449819753016 -1023
; mpfd: + 645449819753016 -1023 (3.18895e-309) class: Pos. denorm.
; hwf : + 645449819753016 -1023 (3.18895e-309) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110111 #b0011001001010000010101011101110000101010110000000111)))
(assert (= y (fp #b0 #b00000000000 #b0010010010110000100001111111001110100000101000111000)))
(assert (= r (fp #b0 #b00000000000 #b0010010010110000100001111111001110100000101000111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
