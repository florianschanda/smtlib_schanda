(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9080603566060438947005195586825720965862274169921875p-683 {+ 4089540283640899 -683 (4.7545e-206)}
; Y = 1.642558279477530192025369615294039249420166015625p778 {+ 2893825228018832 778 (2.6113e+234)}
; 1.9080603566060438947005195586825720965862274169921875p-683 M 1.642558279477530192025369615294039249420166015625p778 == 1.642558279477530192025369615294039249420166015625p778
; [HW: 1.642558279477530192025369615294039249420166015625p778] 

; mpf : + 2893825228018832 778
; mpfd: + 2893825228018832 778 (2.6113e+234) class: Pos. norm. non-zero
; hwf : + 2893825228018832 778 (2.6113e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101010100 #b1110100001110110101001001011111001101010110001000011)))
(assert (= y (fp #b0 #b11100001001 #b1010010001111110101100110000110000100001010010010000)))
(assert (= r (fp #b0 #b11100001001 #b1010010001111110101100110000110000100001010010010000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
