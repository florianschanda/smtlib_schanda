(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9073943960796906349486334875109605491161346435546875p858 {+ 4086541064062571 858 (3.66587e+258)}
; Y = 1.041220120363631540527649121941067278385162353515625p-111 {+ 185638918709818 -111 (4.01063e-034)}
; 1.9073943960796906349486334875109605491161346435546875p858 M 1.041220120363631540527649121941067278385162353515625p-111 == 1.9073943960796906349486334875109605491161346435546875p858
; [HW: 1.9073943960796906349486334875109605491161346435546875p858] 

; mpf : + 4086541064062571 858
; mpfd: + 4086541064062571 858 (3.66587e+258) class: Pos. norm. non-zero
; hwf : + 4086541064062571 858 (3.66587e+258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011001 #b1110100001001010111111111100011110111100011001101011)))
(assert (= y (fp #b0 #b01110010000 #b0000101010001101011001101101110011100110001000111010)))
(assert (= r (fp #b0 #b11101011001 #b1110100001001010111111111100011110111100011001101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
