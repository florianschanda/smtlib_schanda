(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.804138581420472231542362351319752633571624755859375p354 {- 3621518215639478 354 (-6.62046e+106)}
; Y = 1.03030059937526363711413068813271820545196533203125p319 {+ 136461768055540 319 (1.10035e+096)}
; -1.804138581420472231542362351319752633571624755859375p354 M 1.03030059937526363711413068813271820545196533203125p319 == 1.03030059937526363711413068813271820545196533203125p319
; [HW: 1.03030059937526363711413068813271820545196533203125p319] 

; mpf : + 136461768055540 319
; mpfd: + 136461768055540 319 (1.10035e+096) class: Pos. norm. non-zero
; hwf : + 136461768055540 319 (1.10035e+096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100001 #b1100110111011100000001101010110010100111000110110110)))
(assert (= y (fp #b0 #b10100111110 #b0000011111000001110001111011001101011101101011110100)))
(assert (= r (fp #b0 #b10100111110 #b0000011111000001110001111011001101011101101011110100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
