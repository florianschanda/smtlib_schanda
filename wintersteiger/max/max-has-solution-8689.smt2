(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6718064331234778752133252055500634014606475830078125p502 {- 3025547201879997 502 (-2.18899e+151)}
; Y = -1.4423619697996572508458257289021275937557220458984375p-628 {- 1992221202352615 -628 (-1.2949e-189)}
; -1.6718064331234778752133252055500634014606475830078125p502 M -1.4423619697996572508458257289021275937557220458984375p-628 == -1.4423619697996572508458257289021275937557220458984375p-628
; [HW: -1.4423619697996572508458257289021275937557220458984375p-628] 

; mpf : - 1992221202352615 -628
; mpfd: - 1992221202352615 -628 (-1.2949e-189) class: Neg. norm. non-zero
; hwf : - 1992221202352615 -628 (-1.2949e-189) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110101 #b1010101111111011100000011010001110000001111110111101)))
(assert (= y (fp #b1 #b00110001011 #b0111000100111110101000100101000101001000100111100111)))
(assert (= r (fp #b1 #b00110001011 #b0111000100111110101000100101000101001000100111100111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
