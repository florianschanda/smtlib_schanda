(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.366525835923210419053930309019051492214202880859375p-959 {+ 1650685618085430 -959 (2.80448e-289)}
; Y = 1.43246035435369822863549416069872677326202392578125p86 {+ 1947628290719828 86 (1.10831e+026)}
; 1.366525835923210419053930309019051492214202880859375p-959 M 1.43246035435369822863549416069872677326202392578125p86 == 1.43246035435369822863549416069872677326202392578125p86
; [HW: 1.43246035435369822863549416069872677326202392578125p86] 

; mpf : + 1947628290719828 86
; mpfd: + 1947628290719828 86 (1.10831e+026) class: Pos. norm. non-zero
; hwf : + 1947628290719828 86 (1.10831e+026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001000000 #b0101110111010100101000110001111001101101111000110110)))
(assert (= y (fp #b0 #b10001010101 #b0110111010110101101110001100011011000100000001010100)))
(assert (= r (fp #b0 #b10001010101 #b0110111010110101101110001100011011000100000001010100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
