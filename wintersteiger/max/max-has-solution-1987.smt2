(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3456112490978029416766048598219640552997589111328125p-58 {+ 1556494692651917 -58 (4.66853e-018)}
; Y = -1.1955711725092406094717034648056142032146453857421875p594 {- 880774259637027 594 (-7.75163e+178)}
; 1.3456112490978029416766048598219640552997589111328125p-58 M -1.1955711725092406094717034648056142032146453857421875p594 == 1.3456112490978029416766048598219640552997589111328125p-58
; [HW: 1.3456112490978029416766048598219640552997589111328125p-58] 

; mpf : + 1556494692651917 -58
; mpfd: + 1556494692651917 -58 (4.66853e-018) class: Pos. norm. non-zero
; hwf : + 1556494692651917 -58 (4.66853e-018) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000101 #b0101100001111001111110101001010000000001001110001101)))
(assert (= y (fp #b1 #b11001010001 #b0011001000010000111100111100110111110111101100100011)))
(assert (= r (fp #b0 #b01111000101 #b0101100001111001111110101001010000000001001110001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
