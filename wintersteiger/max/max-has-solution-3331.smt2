(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3301984709647360904938295789179392158985137939453125p-51 {- 1487081710795093 -51 (-5.90727e-016)}
; Y = 1.823046413666088216842808833462186157703399658203125p494 {+ 3706671521895218 494 (9.32429e+148)}
; -1.3301984709647360904938295789179392158985137939453125p-51 M 1.823046413666088216842808833462186157703399658203125p494 == 1.823046413666088216842808833462186157703399658203125p494
; [HW: 1.823046413666088216842808833462186157703399658203125p494] 

; mpf : + 3706671521895218 494
; mpfd: + 3706671521895218 494 (9.32429e+148) class: Pos. norm. non-zero
; hwf : + 3706671521895218 494 (9.32429e+148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001100 #b0101010010000111111000110001000111111011100101010101)))
(assert (= y (fp #b0 #b10111101101 #b1101001010110011001010110111010111001001001100110010)))
(assert (= r (fp #b0 #b10111101101 #b1101001010110011001010110111010111001001001100110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
