(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.166842353011206423474277471541427075862884521484375p-741 {- 751391158850886 -741 (-1.00875e-223)}
; Y = 1.3980344997468854284505823670770041644573211669921875p682 {+ 1792588024740675 682 (2.80527e+205)}
; -1.166842353011206423474277471541427075862884521484375p-741 M 1.3980344997468854284505823670770041644573211669921875p682 == 1.3980344997468854284505823670770041644573211669921875p682
; [HW: 1.3980344997468854284505823670770041644573211669921875p682] 

; mpf : + 1792588024740675 682
; mpfd: + 1792588024740675 682 (2.80527e+205) class: Pos. norm. non-zero
; hwf : + 1792588024740675 682 (2.80527e+205) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011010 #b0010101010110110001011100011000111000101010101000110)))
(assert (= y (fp #b0 #b11010101001 #b0110010111100101100101101100011100010111101101000011)))
(assert (= r (fp #b0 #b11010101001 #b0110010111100101100101101100011100010111101101000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
