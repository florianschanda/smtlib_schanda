(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4207274912520719833963767086970619857311248779296875p-507 {+ 1894788172827355 -507 (3.39081e-153)}
; Y = 1.4940765238629338806930491045932285487651824951171875p-610 {+ 2225122848761619 -610 (3.51622e-184)}
; 1.4207274912520719833963767086970619857311248779296875p-507 M 1.4940765238629338806930491045932285487651824951171875p-610 == 1.4207274912520719833963767086970619857311248779296875p-507
; [HW: 1.4207274912520719833963767086970619857311248779296875p-507] 

; mpf : + 1894788172827355 -507
; mpfd: + 1894788172827355 -507 (3.39081e-153) class: Pos. norm. non-zero
; hwf : + 1894788172827355 -507 (3.39081e-153) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000000100 #b0110101110110100110010111111111101110100101011011011)))
(assert (= y (fp #b0 #b00110011101 #b0111111001111011110011001000111110110110011100010011)))
(assert (= r (fp #b0 #b01000000100 #b0110101110110100110010111111111101110100101011011011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
