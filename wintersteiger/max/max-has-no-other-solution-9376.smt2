(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1689015412170646879275182072888128459453582763671875p-225 {- 760664918087475 -225 (-2.16785e-068)}
; Y = -1.9722968787086332387303855284699238836765289306640625p-594 {- 4378835860645697 -594 (-3.04197e-179)}
; -1.1689015412170646879275182072888128459453582763671875p-225 M -1.9722968787086332387303855284699238836765289306640625p-594 == -1.9722968787086332387303855284699238836765289306640625p-594
; [HW: -1.9722968787086332387303855284699238836765289306640625p-594] 

; mpf : - 4378835860645697 -594
; mpfd: - 4378835860645697 -594 (-3.04197e-179) class: Neg. norm. non-zero
; hwf : - 4378835860645697 -594 (-3.04197e-179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011110 #b0010101100111101001000011010001111000101011100110011)))
(assert (= y (fp #b1 #b00110101101 #b1111100011101000011100101100000000001110011101000001)))
(assert (= r (fp #b1 #b00110101101 #b1111100011101000011100101100000000001110011101000001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
