(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2831257322727172009990681544877588748931884765625p501 {- 1275084942362408 501 (-8.40034e+150)}
; Y = -1.241309213947354717078042085631750524044036865234375p-13 {- 1086760086014374 -13 (-0.000151527)}
; -1.2831257322727172009990681544877588748931884765625p501 M -1.241309213947354717078042085631750524044036865234375p-13 == -1.241309213947354717078042085631750524044036865234375p-13
; [HW: -1.241309213947354717078042085631750524044036865234375p-13] 

; mpf : - 1086760086014374 -13
; mpfd: - 1086760086014374 -13 (-0.000151527) class: Neg. norm. non-zero
; hwf : - 1086760086014374 -13 (-0.000151527) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110100 #b0100100001111010111011011001000011000100011100101000)))
(assert (= y (fp #b1 #b01111110010 #b0011110111000110011100001100111000100000100110100110)))
(assert (= r (fp #b1 #b01111110010 #b0011110111000110011100001100111000100000100110100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
