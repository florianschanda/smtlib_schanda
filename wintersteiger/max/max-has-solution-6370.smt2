(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.024151804150722711028720368631184101104736328125p36 {- 108770056173520 36 (-7.03792e+010)}
; Y = -1.4772787503973001665968922679894603788852691650390625p757 {- 2149472402441137 757 (-1.11987e+228)}
; -1.024151804150722711028720368631184101104736328125p36 M -1.4772787503973001665968922679894603788852691650390625p757 == -1.024151804150722711028720368631184101104736328125p36
; [HW: -1.024151804150722711028720368631184101104736328125p36] 

; mpf : - 108770056173520 36
; mpfd: - 108770056173520 36 (-7.03792e+010) class: Neg. norm. non-zero
; hwf : - 108770056173520 36 (-7.03792e+010) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000100011 #b0000011000101110110100000000100011110111011111010000)))
(assert (= y (fp #b1 #b11011110100 #b0111101000101110111100001011000000001000001110110001)))
(assert (= r (fp #b1 #b10000100011 #b0000011000101110110100000000100011110111011111010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
