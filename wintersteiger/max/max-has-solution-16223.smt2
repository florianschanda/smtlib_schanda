(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.365835557766613472807648577145300805568695068359375p691 {+ 1647576881636598 691 (1.40322e+208)}
; Y = 1.48648753379893516779475248767994344234466552734375p504 {+ 2190945075937276 504 (7.78537e+151)}
; 1.365835557766613472807648577145300805568695068359375p691 M 1.48648753379893516779475248767994344234466552734375p504 == 1.365835557766613472807648577145300805568695068359375p691
; [HW: 1.365835557766613472807648577145300805568695068359375p691] 

; mpf : + 1647576881636598 691
; mpfd: + 1647576881636598 691 (1.40322e+208) class: Pos. norm. non-zero
; hwf : + 1647576881636598 691 (1.40322e+208) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010110010 #b0101110110100111011001100010110001010010010011110110)))
(assert (= y (fp #b0 #b10111110111 #b0111110010001010011100100110111110010011111111111100)))
(assert (= r (fp #b0 #b11010110010 #b0101110110100111011001100010110001010010010011110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
