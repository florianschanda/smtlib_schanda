(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.359509407400111502539630237151868641376495361328125p461 {- 1619086433203330 461 (-8.09488e+138)}
; Y = -1.8218294911322931994845930603332817554473876953125p-406 {- 3701190990025480 -406 (-1.10238e-122)}
; -1.359509407400111502539630237151868641376495361328125p461 M -1.8218294911322931994845930603332817554473876953125p-406 == -1.8218294911322931994845930603332817554473876953125p-406
; [HW: -1.8218294911322931994845930603332817554473876953125p-406] 

; mpf : - 3701190990025480 -406
; mpfd: - 3701190990025480 -406 (-1.10238e-122) class: Neg. norm. non-zero
; hwf : - 3701190990025480 -406 (-1.10238e-122) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111001100 #b0101110000001000110011101111101101100011010010000010)))
(assert (= y (fp #b1 #b01001101001 #b1101001001100011011010101110001101001101001100001000)))
(assert (= r (fp #b1 #b01001101001 #b1101001001100011011010101110001101001101001100001000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
