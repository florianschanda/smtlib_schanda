(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2515633684483444820756403714767657220363616943359375p-469 {- 1132940692404031 -469 (-8.21079e-142)}
; Y = -1.7663974441530390091514846062636934220790863037109375p-869 {- 3451547243905327 -869 (-4.48768e-262)}
; -1.2515633684483444820756403714767657220363616943359375p-469 M -1.7663974441530390091514846062636934220790863037109375p-869 == -1.7663974441530390091514846062636934220790863037109375p-869
; [HW: -1.7663974441530390091514846062636934220790863037109375p-869] 

; mpf : - 3451547243905327 -869
; mpfd: - 3451547243905327 -869 (-4.48768e-262) class: Neg. norm. non-zero
; hwf : - 3451547243905327 -869 (-4.48768e-262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101010 #b0100000001100110011101001111100001011011011100111111)))
(assert (= y (fp #b1 #b00010011010 #b1100010000110010100111110111011001100000000100101111)))
(assert (= r (fp #b1 #b00010011010 #b1100010000110010100111110111011001100000000100101111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
