(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7006409499953567543428789576864801347255706787109375p212 {+ 3155406321319599 212 (1.11936e+064)}
; Y = -1.0744207604765836361337960624950937926769256591796875p955 {- 335161309150971 955 (-3.27205e+287)}
; 1.7006409499953567543428789576864801347255706787109375p212 M -1.0744207604765836361337960624950937926769256591796875p955 == 1.7006409499953567543428789576864801347255706787109375p212
; [HW: 1.7006409499953567543428789576864801347255706787109375p212] 

; mpf : + 3155406321319599 212
; mpfd: + 3155406321319599 212 (1.11936e+064) class: Pos. norm. non-zero
; hwf : + 3155406321319599 212 (1.11936e+064) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011010011 #b1011001101011101001101001000111001110111111010101111)))
(assert (= y (fp #b1 #b11110111010 #b0001001100001101001111010010110001100011111011111011)))
(assert (= r (fp #b0 #b10011010011 #b1011001101011101001101001000111001110111111010101111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
