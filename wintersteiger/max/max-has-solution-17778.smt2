(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.4384883453840415779012573693762533366680145263671875p-1022 {+ 1974775948877875 -1023 (9.75669e-309)}
; Y = 1.624548944919398163477808338939212262630462646484375p-119 {+ 2812718395613638 -119 (2.44435e-036)}
; 0.4384883453840415779012573693762533366680145263671875p-1022 M 1.624548944919398163477808338939212262630462646484375p-119 == 1.624548944919398163477808338939212262630462646484375p-119
; [HW: 1.624548944919398163477808338939212262630462646484375p-119] 

; mpf : + 2812718395613638 -119
; mpfd: + 2812718395613638 -119 (2.44435e-036) class: Pos. norm. non-zero
; hwf : + 2812718395613638 -119 (2.44435e-036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0111000001000000110001011010111100011010000000110011)))
(assert (= y (fp #b0 #b01110001000 #b1001111111100010011100001000110100101110000111000110)))
(assert (= r (fp #b0 #b01110001000 #b1001111111100010011100001000110100101110000111000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
