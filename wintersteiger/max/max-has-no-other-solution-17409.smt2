(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3221073575842117175938028594828210771083831787109375p1018 {- 1450642575589551 1018 (-3.71366e+306)}
; Y = -1.9125979743864378601614362196414731442928314208984375p-336 {- 4109975897385831 -336 (-1.3663e-101)}
; -1.3221073575842117175938028594828210771083831787109375p1018 M -1.9125979743864378601614362196414731442928314208984375p-336 == -1.9125979743864378601614362196414731442928314208984375p-336
; [HW: -1.9125979743864378601614362196414731442928314208984375p-336] 

; mpf : - 4109975897385831 -336
; mpfd: - 4109975897385831 -336 (-1.3663e-101) class: Neg. norm. non-zero
; hwf : - 4109975897385831 -336 (-1.3663e-101) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111001 #b0101001001110101101000001011011010100000000010101111)))
(assert (= y (fp #b1 #b01010101111 #b1110100110100000000001010101011001100010101101100111)))
(assert (= r (fp #b1 #b01010101111 #b1110100110100000000001010101011001100010101101100111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
