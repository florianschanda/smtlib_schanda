(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.939507471960796092247392152785323560237884521484375p586 {+ 4231165500634438 586 (4.91212e+176)}
; Y = -1.3563437052414377692599600777612067759037017822265625p-10 {- 1604829378141161 -10 (-0.00132455)}
; 1.939507471960796092247392152785323560237884521484375p586 M -1.3563437052414377692599600777612067759037017822265625p-10 == 1.939507471960796092247392152785323560237884521484375p586
; [HW: 1.939507471960796092247392152785323560237884521484375p586] 

; mpf : + 4231165500634438 586
; mpfd: + 4231165500634438 586 (4.91212e+176) class: Pos. norm. non-zero
; hwf : + 4231165500634438 586 (4.91212e+176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001001 #b1111000010000011100011111100101001101011010101000110)))
(assert (= y (fp #b1 #b01111110101 #b0101101100111001010101110101000000100101101111101001)))
(assert (= r (fp #b0 #b11001001001 #b1111000010000011100011111100101001101011010101000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
