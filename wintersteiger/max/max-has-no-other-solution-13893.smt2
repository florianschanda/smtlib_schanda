(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1644334710818216027661264888592995703220367431640625p-211 {- 740542519091329 -211 (-3.53823e-064)}
; Y = -1.55607654461471245355141945765353739261627197265625p-637 {- 2504346119116292 -637 (-2.7285e-192)}
; -1.1644334710818216027661264888592995703220367431640625p-211 M -1.55607654461471245355141945765353739261627197265625p-637 == -1.55607654461471245355141945765353739261627197265625p-637
; [HW: -1.55607654461471245355141945765353739261627197265625p-637] 

; mpf : - 2504346119116292 -637
; mpfd: - 2504346119116292 -637 (-2.7285e-192) class: Neg. norm. non-zero
; hwf : - 2504346119116292 -637 (-2.7285e-192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100101100 #b0010101000011000010011111101110010101010000010000001)))
(assert (= y (fp #b1 #b00110000010 #b1000111001011011000010000100110100110001011000000100)))
(assert (= r (fp #b1 #b00110000010 #b1000111001011011000010000100110100110001011000000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
