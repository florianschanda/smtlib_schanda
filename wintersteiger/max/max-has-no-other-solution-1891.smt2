(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2694516162083118171466367130051366984844207763671875p48 {+ 1213502198350131 48 (3.57319e+014)}
; Y = -1.3010287628960828243407377158291637897491455078125p-116 {- 1355713024406600 -116 (-1.56606e-035)}
; 1.2694516162083118171466367130051366984844207763671875p48 M -1.3010287628960828243407377158291637897491455078125p-116 == 1.2694516162083118171466367130051366984844207763671875p48
; [HW: 1.2694516162083118171466367130051366984844207763671875p48] 

; mpf : + 1213502198350131 48
; mpfd: + 1213502198350131 48 (3.57319e+014) class: Pos. norm. non-zero
; hwf : + 1213502198350131 48 (3.57319e+014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101111 #b0100010011111010110001111111011101111000000100110011)))
(assert (= y (fp #b1 #b01110001011 #b0100110100010000001110001001001111001011010001001000)))
(assert (= r (fp #b0 #b10000101111 #b0100010011111010110001111111011101111000000100110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
