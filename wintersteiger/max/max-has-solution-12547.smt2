(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5560206553127662321145407986477948725223541259765625p-802 {+ 2504094416076873 -802 (5.8339e-242)}
; Y = -1.2992206139913993201417952150222845375537872314453125p-363 {- 1347569845673237 -363 (-6.91504e-110)}
; 1.5560206553127662321145407986477948725223541259765625p-802 M -1.2992206139913993201417952150222845375537872314453125p-363 == 1.5560206553127662321145407986477948725223541259765625p-802
; [HW: 1.5560206553127662321145407986477948725223541259765625p-802] 

; mpf : + 2504094416076873 -802
; mpfd: + 2504094416076873 -802 (5.8339e-242) class: Pos. norm. non-zero
; hwf : + 2504094416076873 -802 (5.8339e-242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011011101 #b1000111001010111010111101010001001111000000001001001)))
(assert (= y (fp #b1 #b01010010100 #b0100110010011001101110001101111101100001110100010101)))
(assert (= r (fp #b0 #b00011011101 #b1000111001010111010111101010001001111000000001001001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
