(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5676729983527761813633105703047476708889007568359375p-90 {- 2556571903849855 -90 (-1.26636e-027)}
; Y = 1.5660213964788798346461362598347477614879608154296875p185 {+ 2549133750266011 185 (7.67975e+055)}
; -1.5676729983527761813633105703047476708889007568359375p-90 M 1.5660213964788798346461362598347477614879608154296875p185 == 1.5660213964788798346461362598347477614879608154296875p185
; [HW: 1.5660213964788798346461362598347477614879608154296875p185] 

; mpf : + 2549133750266011 185
; mpfd: + 2549133750266011 185 (7.67975e+055) class: Pos. norm. non-zero
; hwf : + 2549133750266011 185 (7.67975e+055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110100101 #b1001000101010011000001001000001010111111010101111111)))
(assert (= y (fp #b0 #b10010111000 #b1001000011100110110001110011101010110110100010011011)))
(assert (= r (fp #b0 #b10010111000 #b1001000011100110110001110011101010110110100010011011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
