(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.815523119175534549896156022441573441028594970703125p-337 {- 3672789615630962 -337 (-6.48475e-102)}
; Y = -1.2237175854722612822200744631118141114711761474609375p-123 {- 1007534434569103 -123 (-1.15078e-037)}
; -1.815523119175534549896156022441573441028594970703125p-337 M -1.2237175854722612822200744631118141114711761474609375p-123 == -1.815523119175534549896156022441573441028594970703125p-337
; [HW: -1.815523119175534549896156022441573441028594970703125p-337] 

; mpf : - 3672789615630962 -337
; mpfd: - 3672789615630962 -337 (-6.48475e-102) class: Neg. norm. non-zero
; hwf : - 3672789615630962 -337 (-6.48475e-102) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101110 #b1101000011000110000111111000010111111101101001110010)))
(assert (= y (fp #b1 #b01110000100 #b0011100101000101100011100100000100100100101110001111)))
(assert (= r (fp #b1 #b01010101110 #b1101000011000110000111111000010111111101101001110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
