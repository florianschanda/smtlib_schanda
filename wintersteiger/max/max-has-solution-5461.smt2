(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.70853410618212908644864000962115824222564697265625p491 {+ 3190953936581124 491 (1.09232e+148)}
; Y = 1.76277380074263145814938980038277804851531982421875p-830 {+ 3435227804792492 -830 (2.46207e-250)}
; 1.70853410618212908644864000962115824222564697265625p491 M 1.76277380074263145814938980038277804851531982421875p-830 == 1.70853410618212908644864000962115824222564697265625p491
; [HW: 1.70853410618212908644864000962115824222564697265625p491] 

; mpf : + 3190953936581124 491
; mpfd: + 3190953936581124 491 (1.09232e+148) class: Pos. norm. non-zero
; hwf : + 3190953936581124 491 (1.09232e+148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101010 #b1011010101100010011111011011111000100111001000000100)))
(assert (= y (fp #b0 #b00011000001 #b1100001101000101001001001101000001101111011010101100)))
(assert (= r (fp #b0 #b10111101010 #b1011010101100010011111011011111000100111001000000100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
