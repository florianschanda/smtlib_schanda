(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2484030253075115712846354654175229370594024658203125p-791 {- 1118707772212613 -791 (-9.5858e-239)}
; Y = 1.1473308589088933029387362694251351058483123779296875p709 {+ 663519201282267 709 (3.08998e+213)}
; -1.2484030253075115712846354654175229370594024658203125p-791 M 1.1473308589088933029387362694251351058483123779296875p709 == 1.1473308589088933029387362694251351058483123779296875p709
; [HW: 1.1473308589088933029387362694251351058483123779296875p709] 

; mpf : + 663519201282267 709
; mpfd: + 663519201282267 709 (3.08998e+213) class: Pos. norm. non-zero
; hwf : + 663519201282267 709 (3.08998e+213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101000 #b0011111110010111010101110011010111101100010110000101)))
(assert (= y (fp #b0 #b11011000100 #b0010010110110111011110011010010010110100100011011011)))
(assert (= r (fp #b0 #b11011000100 #b0010010110110111011110011010010010110100100011011011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
