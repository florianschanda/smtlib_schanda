(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.457792555965510050697275801212526857852935791015625p-327 {- 2061714384459258 -327 (-5.33196e-099)}
; Y = 1.9076131573345651570861036816495470702648162841796875p781 {+ 4087526277168507 781 (2.42615e+235)}
; -1.457792555965510050697275801212526857852935791015625p-327 M 1.9076131573345651570861036816495470702648162841796875p781 == 1.9076131573345651570861036816495470702648162841796875p781
; [HW: 1.9076131573345651570861036816495470702648162841796875p781] 

; mpf : + 4087526277168507 781
; mpfd: + 4087526277168507 781 (2.42615e+235) class: Pos. norm. non-zero
; hwf : + 4087526277168507 781 (2.42615e+235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111000 #b0111010100110001111001001001100000111001010111111010)))
(assert (= y (fp #b0 #b11100001100 #b1110100001011001010101011111110000101011110101111011)))
(assert (= r (fp #b0 #b11100001100 #b1110100001011001010101011111110000101011110101111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
