(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1638852974851279231671696834382601082324981689453125p636 {- 738073764685525 636 (-3.31885e+191)}
; Y = -1.7536877054052995017485727657913230359554290771484375p81 {- 3394307669217031 81 (-4.24016e+024)}
; -1.1638852974851279231671696834382601082324981689453125p636 M -1.7536877054052995017485727657913230359554290771484375p81 == -1.7536877054052995017485727657913230359554290771484375p81
; [HW: -1.7536877054052995017485727657913230359554290771484375p81] 

; mpf : - 3394307669217031 81
; mpfd: - 3394307669217031 81 (-4.24016e+024) class: Neg. norm. non-zero
; hwf : - 3394307669217031 81 (-4.24016e+024) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111011 #b0010100111110100011000110000100011111110011011010101)))
(assert (= y (fp #b1 #b10001010000 #b1100000011110001101011010110111000011100111100000111)))
(assert (= r (fp #b1 #b10001010000 #b1100000011110001101011010110111000011100111100000111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
