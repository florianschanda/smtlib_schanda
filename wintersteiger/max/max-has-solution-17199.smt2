(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7183370698214470717601898286375217139720916748046875p531 {+ 3235102559974283 531 (1.20791e+160)}
; Y = 1.4211578514910587767161587180453352630138397216796875p-322 {+ 1896726343039291 -322 (1.66335e-097)}
; 1.7183370698214470717601898286375217139720916748046875p531 M 1.4211578514910587767161587180453352630138397216796875p-322 == 1.7183370698214470717601898286375217139720916748046875p531
; [HW: 1.7183370698214470717601898286375217139720916748046875p531] 

; mpf : + 3235102559974283 531
; mpfd: + 3235102559974283 531 (1.20791e+160) class: Pos. norm. non-zero
; hwf : + 3235102559974283 531 (1.20791e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010010 #b1011011111100100111100000010111001100011001110001011)))
(assert (= y (fp #b0 #b01010111101 #b0110101111010001000000000011111010011011100100111011)))
(assert (= r (fp #b0 #b11000010010 #b1011011111100100111100000010111001100011001110001011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
