(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.315114883219747010656419661245308816432952880859375p-483 {+ 1419151270647350 -483 (5.26594e-146)}
; Y = 1.9697333845549962472176730443607084453105926513671875p413 {+ 4367290909330611 413 (4.16673e+124)}
; 1.315114883219747010656419661245308816432952880859375p-483 M 1.9697333845549962472176730443607084453105926513671875p413 == 1.9697333845549962472176730443607084453105926513671875p413
; [HW: 1.9697333845549962472176730443607084453105926513671875p413] 

; mpf : + 4367290909330611 413
; mpfd: + 4367290909330611 413 (4.16673e+124) class: Pos. norm. non-zero
; hwf : + 4367290909330611 413 (4.16673e+124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011100 #b0101000010101011010111100111010111101001011000110110)))
(assert (= y (fp #b0 #b10110011100 #b1111100001000000011100100111010010000000110010110011)))
(assert (= r (fp #b0 #b10110011100 #b1111100001000000011100100111010010000000110010110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
