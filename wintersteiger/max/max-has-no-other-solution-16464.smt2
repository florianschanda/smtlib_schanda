(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5410184905987283077166694056359119713306427001953125p-123 {- 2436530672660981 -123 (-1.44917e-037)}
; Y = 1.47326200312643518230970585136674344539642333984375p-11 {+ 2131382580928828 -11 (0.000719366)}
; -1.5410184905987283077166694056359119713306427001953125p-123 M 1.47326200312643518230970585136674344539642333984375p-11 == 1.47326200312643518230970585136674344539642333984375p-11
; [HW: 1.47326200312643518230970585136674344539642333984375p-11] 

; mpf : + 2131382580928828 -11
; mpfd: + 2131382580928828 -11 (0.000719366) class: Pos. norm. non-zero
; hwf : + 2131382580928828 -11 (0.000719366) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110000100 #b1000101010000000001100000001001110100111000111110101)))
(assert (= y (fp #b0 #b01111110100 #b0111100100100111101100101101100111011110000100111100)))
(assert (= r (fp #b0 #b01111110100 #b0111100100100111101100101101100111011110000100111100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
