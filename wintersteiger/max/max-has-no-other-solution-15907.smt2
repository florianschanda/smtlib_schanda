(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2043314445075399277129690744914114475250244140625p208 {- 920227017344232 208 (-4.95433e+062)}
; Y = 1.1731747789852444707747736174496822059154510498046875p352 {+ 779909870107915 352 (1.07627e+106)}
; -1.2043314445075399277129690744914114475250244140625p208 M 1.1731747789852444707747736174496822059154510498046875p352 == 1.1731747789852444707747736174496822059154510498046875p352
; [HW: 1.1731747789852444707747736174496822059154510498046875p352] 

; mpf : + 779909870107915 352
; mpfd: + 779909870107915 352 (1.07627e+106) class: Pos. norm. non-zero
; hwf : + 779909870107915 352 (1.07627e+106) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001111 #b0011010001001111000100001100011110110100010011101000)))
(assert (= y (fp #b0 #b10101011111 #b0010110001010101001011101010110000111011110100001011)))
(assert (= r (fp #b0 #b10101011111 #b0010110001010101001011101010110000111011110100001011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
