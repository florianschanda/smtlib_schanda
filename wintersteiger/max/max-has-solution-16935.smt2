(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5344378124664006524113801788189448416233062744140625p-299 {- 2406893933076385 -299 (-1.50654e-090)}
; Y = -1.308368718312646450385727803222835063934326171875p-442 {- 1388769244885552 -442 (-1.15205e-133)}
; -1.5344378124664006524113801788189448416233062744140625p-299 M -1.308368718312646450385727803222835063934326171875p-442 == -1.308368718312646450385727803222835063934326171875p-442
; [HW: -1.308368718312646450385727803222835063934326171875p-442] 

; mpf : - 1388769244885552 -442
; mpfd: - 1388769244885552 -442 (-1.15205e-133) class: Neg. norm. non-zero
; hwf : - 1388769244885552 -442 (-1.15205e-133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010100 #b1000100011010000111010101001111001001001111110100001)))
(assert (= y (fp #b1 #b01001000101 #b0100111011110001010000001001100001000011001000110000)))
(assert (= r (fp #b1 #b01001000101 #b0100111011110001010000001001100001000011001000110000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
