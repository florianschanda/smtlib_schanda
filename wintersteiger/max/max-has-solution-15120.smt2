(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7703633723059513105368978358455933630466461181640625p-564 {+ 3469408196456961 -564 (2.93187e-170)}
; Y = -1.4753416833217489756435725212213583290576934814453125p-996 {- 2140748627881493 -996 (-2.20301e-300)}
; 1.7703633723059513105368978358455933630466461181640625p-564 M -1.4753416833217489756435725212213583290576934814453125p-996 == 1.7703633723059513105368978358455933630466461181640625p-564
; [HW: 1.7703633723059513105368978358455933630466461181640625p-564] 

; mpf : + 3469408196456961 -564
; mpfd: + 3469408196456961 -564 (2.93187e-170) class: Pos. norm. non-zero
; hwf : + 3469408196456961 -564 (2.93187e-170) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111001011 #b1100010100110110100010001011001000010111001000000001)))
(assert (= y (fp #b1 #b00000011011 #b0111100110101111111111100001100001001010111000010101)))
(assert (= r (fp #b0 #b00111001011 #b1100010100110110100010001011001000010111001000000001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
