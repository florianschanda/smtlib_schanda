(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6382616813597523641732323085307143628597259521484375p-827 {- 2874475070336647 -827 (-1.83053e-249)}
; Y = -1.1456020487155502696197117984411306679248809814453125p-490 {- 655733332339733 -490 (-3.58374e-148)}
; -1.6382616813597523641732323085307143628597259521484375p-827 M -1.1456020487155502696197117984411306679248809814453125p-490 == -1.6382616813597523641732323085307143628597259521484375p-827
; [HW: -1.6382616813597523641732323085307143628597259521484375p-827] 

; mpf : - 2874475070336647 -827
; mpfd: - 2874475070336647 -827 (-1.83053e-249) class: Neg. norm. non-zero
; hwf : - 2874475070336647 -827 (-1.83053e-249) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000100 #b1010001101100101000111100001011110111010111010000111)))
(assert (= y (fp #b1 #b01000010101 #b0010010101000110001011010000010101110110110000010101)))
(assert (= r (fp #b1 #b00011000100 #b1010001101100101000111100001011110111010111010000111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
