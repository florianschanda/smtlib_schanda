(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.988834465250456151608204891090281307697296142578125p-833 {- 4453314529233058 -833 (-3.47226e-251)}
; Y = -1.6731431582821405523731073117232881486415863037109375p-386 {- 3031567276806447 -386 (-1.06159e-116)}
; -1.988834465250456151608204891090281307697296142578125p-833 M -1.6731431582821405523731073117232881486415863037109375p-386 == -1.988834465250456151608204891090281307697296142578125p-833
; [HW: -1.988834465250456151608204891090281307697296142578125p-833] 

; mpf : - 4453314529233058 -833
; mpfd: - 4453314529233058 -833 (-3.47226e-251) class: Neg. norm. non-zero
; hwf : - 4453314529233058 -833 (-3.47226e-251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010111110 #b1111110100100100010000010110100101101000100010100010)))
(assert (= y (fp #b1 #b01001111101 #b1010110001010011000111000010101001011001000100101111)))
(assert (= r (fp #b1 #b00010111110 #b1111110100100100010000010110100101101000100010100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
