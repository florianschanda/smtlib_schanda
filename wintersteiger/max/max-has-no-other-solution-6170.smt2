(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9869102635843283177763396452064625918865203857421875p734 {- 4444648695326499 734 (-1.79554e+221)}
; Y = -1.41693366120307562283642255351878702640533447265625p-496 {- 1877702281232388 -496 (-6.92583e-150)}
; -1.9869102635843283177763396452064625918865203857421875p734 M -1.41693366120307562283642255351878702640533447265625p-496 == -1.41693366120307562283642255351878702640533447265625p-496
; [HW: -1.41693366120307562283642255351878702640533447265625p-496] 

; mpf : - 1877702281232388 -496
; mpfd: - 1877702281232388 -496 (-6.92583e-150) class: Neg. norm. non-zero
; hwf : - 1877702281232388 -496 (-6.92583e-150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011101 #b1111110010100110001001101010101000101110011100100011)))
(assert (= y (fp #b1 #b01000001111 #b0110101010111100001010100001011101111000000000000100)))
(assert (= r (fp #b1 #b01000001111 #b0110101010111100001010100001011101111000000000000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
