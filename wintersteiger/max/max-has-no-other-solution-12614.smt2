(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8109687535374809908006454861606471240520477294921875p-131 {+ 3652278576240515 -131 (6.65245e-040)}
; Y = 1.1846520839048431117390691724722273647785186767578125p-380 {+ 831599056267037 -380 (4.81052e-115)}
; 1.8109687535374809908006454861606471240520477294921875p-131 M 1.1846520839048431117390691724722273647785186767578125p-380 == 1.8109687535374809908006454861606471240520477294921875p-131
; [HW: 1.8109687535374809908006454861606471240520477294921875p-131] 

; mpf : + 3652278576240515 -131
; mpfd: + 3652278576240515 -131 (6.65245e-040) class: Pos. norm. non-zero
; hwf : + 3652278576240515 -131 (6.65245e-040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111100 #b1100111110011011101001011111001010000101011110000011)))
(assert (= y (fp #b0 #b01010000011 #b0010111101000101010110111110010110000010011100011101)))
(assert (= r (fp #b0 #b01101111100 #b1100111110011011101001011111001010000101011110000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
