(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7389466754087334887657334547839127480983734130859375p186 {+ 3327919972017439 186 (1.70555e+056)}
; Y = 1.993319954537708493802483644685707986354827880859375p267 {+ 4473515377115702 267 (4.727e+080)}
; 1.7389466754087334887657334547839127480983734130859375p186 M 1.993319954537708493802483644685707986354827880859375p267 == 1.993319954537708493802483644685707986354827880859375p267
; [HW: 1.993319954537708493802483644685707986354827880859375p267] 

; mpf : + 4473515377115702 267
; mpfd: + 4473515377115702 267 (4.727e+080) class: Pos. norm. non-zero
; hwf : + 4473515377115702 267 (4.727e+080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111001 #b1011110100101011100110111111110001011110010100011111)))
(assert (= y (fp #b0 #b10100001010 #b1111111001001010001101110110111100110100001000110110)))
(assert (= r (fp #b0 #b10100001010 #b1111111001001010001101110110111100110100001000110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
