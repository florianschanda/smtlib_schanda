(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4568934148791317095827935190754942595958709716796875p294 {- 2057665012997691 294 (-4.6371e+088)}
; Y = 1.846423587109595754185420446447096765041351318359375p360 {+ 3811952951504374 360 (4.3364e+108)}
; -1.4568934148791317095827935190754942595958709716796875p294 M 1.846423587109595754185420446447096765041351318359375p360 == 1.846423587109595754185420446447096765041351318359375p360
; [HW: 1.846423587109595754185420446447096765041351318359375p360] 

; mpf : + 3811952951504374 360
; mpfd: + 3811952951504374 360 (4.3364e+108) class: Pos. norm. non-zero
; hwf : + 3811952951504374 360 (4.3364e+108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100100101 #b0111010011110110111101111000001010101001111000111011)))
(assert (= y (fp #b0 #b10101100111 #b1101100010101111001101110101100100110010110111110110)))
(assert (= r (fp #b0 #b10101100111 #b1101100010101111001101110101100100110010110111110110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
