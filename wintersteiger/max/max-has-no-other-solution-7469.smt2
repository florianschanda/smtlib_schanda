(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.821241398878205242084504789090715348720550537109375p-715 {+ 3698542457969110 -715 (1.05662e-215)}
; Y = 1.7280729720367766777400220234994776546955108642578125p1005 {+ 3278949165563357 1005 (5.92526e+302)}
; 1.821241398878205242084504789090715348720550537109375p-715 M 1.7280729720367766777400220234994776546955108642578125p1005 == 1.7280729720367766777400220234994776546955108642578125p1005
; [HW: 1.7280729720367766777400220234994776546955108642578125p1005] 

; mpf : + 3278949165563357 1005
; mpfd: + 3278949165563357 1005 (5.92526e+302) class: Pos. norm. non-zero
; hwf : + 3278949165563357 1005 (5.92526e+302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110100 #b1101001000111100111000000101011001001101100111010110)))
(assert (= y (fp #b0 #b11111101100 #b1011101001100010111111011000001111111111110111011101)))
(assert (= r (fp #b0 #b11111101100 #b1011101001100010111111011000001111111111110111011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
