(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2623519408688983478583622854785062372684478759765625p102 {- 1181528103137097 102 (-6.40088e+030)}
; Y = -1.899910953449348571808741326094605028629302978515625p-491 {- 4052838634621114 -491 (-2.9717e-148)}
; -1.2623519408688983478583622854785062372684478759765625p102 M -1.899910953449348571808741326094605028629302978515625p-491 == -1.899910953449348571808741326094605028629302978515625p-491
; [HW: -1.899910953449348571808741326094605028629302978515625p-491] 

; mpf : - 4052838634621114 -491
; mpfd: - 4052838634621114 -491 (-2.9717e-148) class: Neg. norm. non-zero
; hwf : - 4052838634621114 -491 (-2.9717e-148) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001100101 #b0100001100101001011111110010111000010010111101001001)))
(assert (= y (fp #b1 #b01000010100 #b1110011001100000100100000111001001100000100010111010)))
(assert (= r (fp #b1 #b01000010100 #b1110011001100000100100000111001001100000100010111010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
