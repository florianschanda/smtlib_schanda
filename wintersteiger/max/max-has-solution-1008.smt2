(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8820478118361674280123452263069339096546173095703125p-350 {- 3972390196708325 -350 (-8.20601e-106)}
; Y = -1.428854985442684633056842358200810849666595458984375p-466 {- 1931391152635654 -466 (-7.49912e-141)}
; -1.8820478118361674280123452263069339096546173095703125p-350 M -1.428854985442684633056842358200810849666595458984375p-466 == -1.428854985442684633056842358200810849666595458984375p-466
; [HW: -1.428854985442684633056842358200810849666595458984375p-466] 

; mpf : - 1931391152635654 -466
; mpfd: - 1931391152635654 -466 (-7.49912e-141) class: Neg. norm. non-zero
; hwf : - 1931391152635654 -466 (-7.49912e-141) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100001 #b1110000111001101111000101010100101011000001111100101)))
(assert (= y (fp #b1 #b01000101101 #b0110110111001001011100001011100100110011111100000110)))
(assert (= r (fp #b1 #b01000101101 #b0110110111001001011100001011100100110011111100000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
