(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0161501436865252312458096639602445065975189208984375p891 {+ 72733781088615 891 (1.67758e+268)}
; Y = 1.5179315689482144602351354478741995990276336669921875p984 {+ 2332556420918595 984 (2.48181e+296)}
; 1.0161501436865252312458096639602445065975189208984375p891 M 1.5179315689482144602351354478741995990276336669921875p984 == 1.5179315689482144602351354478741995990276336669921875p984
; [HW: 1.5179315689482144602351354478741995990276336669921875p984] 

; mpf : + 2332556420918595 984
; mpfd: + 2332556420918595 984 (2.48181e+296) class: Pos. norm. non-zero
; hwf : + 2332556420918595 984 (2.48181e+296) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111010 #b0000010000100010011010100111001011110101100101100111)))
(assert (= y (fp #b0 #b11111010111 #b1000010010010111001010011100111000110010110101000011)))
(assert (= r (fp #b0 #b11111010111 #b1000010010010111001010011100111000110010110101000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
