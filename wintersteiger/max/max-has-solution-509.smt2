(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.340148194083187416225655397283844649791717529296875p696 {- 1531891280123790 696 (-4.40585e+209)}
; Y = 1.086310448241250892209563971846364438533782958984375p-528 {+ 388707702537478 -528 (1.23628e-159)}
; -1.340148194083187416225655397283844649791717529296875p696 M 1.086310448241250892209563971846364438533782958984375p-528 == 1.086310448241250892209563971846364438533782958984375p-528
; [HW: 1.086310448241250892209563971846364438533782958984375p-528] 

; mpf : + 388707702537478 -528
; mpfd: + 388707702537478 -528 (1.23628e-159) class: Pos. norm. non-zero
; hwf : + 388707702537478 -528 (1.23628e-159) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110111 #b0101011100010011111100111011100101100001011110001110)))
(assert (= y (fp #b0 #b00111101111 #b0001011000011000011100010000100001111111110100000110)))
(assert (= r (fp #b0 #b00111101111 #b0001011000011000011100010000100001111111110100000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
