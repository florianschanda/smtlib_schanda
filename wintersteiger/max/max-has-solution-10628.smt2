(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.680807533252269170276349541381932795047760009765625p437 {- 3066084553065946 437 (-5.96521e+131)}
; Y = -1.439445050615324017684315549558959901332855224609375p-293 {- 1979084566200982 -293 (-9.04495e-089)}
; -1.680807533252269170276349541381932795047760009765625p437 M -1.439445050615324017684315549558959901332855224609375p-293 == -1.439445050615324017684315549558959901332855224609375p-293
; [HW: -1.439445050615324017684315549558959901332855224609375p-293] 

; mpf : - 1979084566200982 -293
; mpfd: - 1979084566200982 -293 (-9.04495e-089) class: Neg. norm. non-zero
; hwf : - 1979084566200982 -293 (-9.04495e-089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110110100 #b1010111001001001011001110000101000110000010111011010)))
(assert (= y (fp #b1 #b01011011010 #b0111000001111111011110001000100011001000001010010110)))
(assert (= r (fp #b1 #b01011011010 #b0111000001111111011110001000100011001000001010010110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
