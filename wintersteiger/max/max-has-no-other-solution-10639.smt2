(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8299730506393194762182474732981063425540924072265625p-200 {+ 3737866321586793 -200 (1.1388e-060)}
; Y = 1.5484465751536193867110569044598378241062164306640625p-595 {+ 2469983791494465 -595 (1.19412e-179)}
; 1.8299730506393194762182474732981063425540924072265625p-200 M 1.5484465751536193867110569044598378241062164306640625p-595 == 1.8299730506393194762182474732981063425540924072265625p-200
; [HW: 1.8299730506393194762182474732981063425540924072265625p-200] 

; mpf : + 3737866321586793 -200
; mpfd: + 3737866321586793 -200 (1.1388e-060) class: Pos. norm. non-zero
; hwf : + 3737866321586793 -200 (1.1388e-060) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100110111 #b1101010001111001000111010010010100001110101001101001)))
(assert (= y (fp #b0 #b00110101100 #b1000110001100110111111101010011111100011010101000001)))
(assert (= r (fp #b0 #b01100110111 #b1101010001111001000111010010010100001110101001101001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
