(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1276680329844610550793504444300197064876556396484375p589 {+ 574965705775943 589 (2.2848e+177)}
; Y = -1.7434209912546687615275686766835860908031463623046875p402 {- 3348070499193931 402 (-1.80078e+121)}
; 1.1276680329844610550793504444300197064876556396484375p589 M -1.7434209912546687615275686766835860908031463623046875p402 == 1.1276680329844610550793504444300197064876556396484375p589
; [HW: 1.1276680329844610550793504444300197064876556396484375p589] 

; mpf : + 574965705775943 589
; mpfd: + 574965705775943 589 (2.2848e+177) class: Pos. norm. non-zero
; hwf : + 574965705775943 589 (2.2848e+177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001001100 #b0010000010101110110110100010101001101001101101000111)))
(assert (= y (fp #b1 #b10110010001 #b1011111001010000110101101000110010011001010001001011)))
(assert (= r (fp #b0 #b11001001100 #b0010000010101110110110100010101001101001101101000111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
