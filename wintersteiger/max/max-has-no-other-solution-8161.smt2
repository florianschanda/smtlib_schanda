(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.952673086251545786495853462838567793369293212890625p131 {- 4290458156248362 131 (-5.31568e+039)}
; Y = -1.068181047927619697901491235825233161449432373046875p-90 {- 307060142040558 -90 (-8.6287e-028)}
; -1.952673086251545786495853462838567793369293212890625p131 M -1.068181047927619697901491235825233161449432373046875p-90 == -1.068181047927619697901491235825233161449432373046875p-90
; [HW: -1.068181047927619697901491235825233161449432373046875p-90] 

; mpf : - 307060142040558 -90
; mpfd: - 307060142040558 -90 (-8.6287e-028) class: Neg. norm. non-zero
; hwf : - 307060142040558 -90 (-8.6287e-028) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000010 #b1111001111100010011000100010010100111010110100101010)))
(assert (= y (fp #b1 #b01110100101 #b0001000101110100010100000010101100001110010111101110)))
(assert (= r (fp #b1 #b01110100101 #b0001000101110100010100000010101100001110010111101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
