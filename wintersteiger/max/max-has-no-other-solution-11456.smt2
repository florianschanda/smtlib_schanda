(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 0.67221677557513270784284031833522021770477294921875p-1022 {+ 3027395219992364 -1023 (1.49573e-308)}
; Y = -1.1509050259828288442776056399452500045299530029296875p542 {- 679615818784603 542 (-1.6569e+163)}
; 0.67221677557513270784284031833522021770477294921875p-1022 M -1.1509050259828288442776056399452500045299530029296875p542 == 0.67221677557513270784284031833522021770477294921875p-1022
; [HW: 0.67221677557513270784284031833522021770477294921875p-1022] 

; mpf : + 3027395219992364 -1023
; mpfd: + 3027395219992364 -1023 (1.49573e-308) class: Pos. denorm.
; hwf : + 3027395219992364 -1023 (1.49573e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1010110000010110011001100000101011101010111100101100)))
(assert (= y (fp #b1 #b11000011101 #b0010011010100001101101100011011101100101111101011011)))
(assert (= r (fp #b0 #b00000000000 #b1010110000010110011001100000101011101010111100101100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
