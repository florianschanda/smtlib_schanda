(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7351878301681136207434974494390189647674560546875p-375 {+ 3310991637992440 -375 (2.25475e-113)}
; Y = 1.2073653434036166753884344871039502322673797607421875p-280 {+ 933890483282083 -280 (6.21498e-085)}
; 1.7351878301681136207434974494390189647674560546875p-375 M 1.2073653434036166753884344871039502322673797607421875p-280 == 1.2073653434036166753884344871039502322673797607421875p-280
; [HW: 1.2073653434036166753884344871039502322673797607421875p-280] 

; mpf : + 933890483282083 -280
; mpfd: + 933890483282083 -280 (6.21498e-085) class: Pos. norm. non-zero
; hwf : + 933890483282083 -280 (6.21498e-085) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010001000 #b1011110000110101010001010000011011111101001111111000)))
(assert (= y (fp #b0 #b01011100111 #b0011010100010101111001010010100000111110000010100011)))
(assert (= r (fp #b0 #b01011100111 #b0011010100010101111001010010100000111110000010100011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
