(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2969427313304342508359923158423043787479400634765625p-459 {- 1337311174170121 -459 (-8.7127e-139)}
; Y = -1.321263588080849871175814769230782985687255859375p999 {- 1446842575568624 999 (-7.07873e+300)}
; -1.2969427313304342508359923158423043787479400634765625p-459 M -1.321263588080849871175814769230782985687255859375p999 == -1.2969427313304342508359923158423043787479400634765625p-459
; [HW: -1.2969427313304342508359923158423043787479400634765625p-459] 

; mpf : - 1337311174170121 -459
; mpfd: - 1337311174170121 -459 (-8.7127e-139) class: Neg. norm. non-zero
; hwf : - 1337311174170121 -459 (-8.7127e-139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110100 #b0100110000000100011100000101011111011001011000001001)))
(assert (= y (fp #b1 #b11111100110 #b0101001000111110010101001001110000110011111011110000)))
(assert (= r (fp #b1 #b01000110100 #b0100110000000100011100000101011111011001011000001001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
