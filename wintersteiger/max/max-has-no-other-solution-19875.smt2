(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.26851819279111310834196046926081180572509765625p926 {+ 1209298432996256 926 (7.19569e+278)}
; Y = 1.4957625601349537891593399763223715126514434814453125p-51 {+ 2232716081088021 -51 (6.64252e-016)}
; 1.26851819279111310834196046926081180572509765625p926 M 1.4957625601349537891593399763223715126514434814453125p-51 == 1.26851819279111310834196046926081180572509765625p926
; [HW: 1.26851819279111310834196046926081180572509765625p926] 

; mpf : + 1209298432996256 926
; mpfd: + 1209298432996256 926 (7.19569e+278) class: Pos. norm. non-zero
; hwf : + 1209298432996256 926 (7.19569e+278) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110011101 #b0100010010111101100110111011100001101011001110100000)))
(assert (= y (fp #b0 #b01111001100 #b0111111011101010010010111000111001011100011000010101)))
(assert (= r (fp #b0 #b11110011101 #b0100010010111101100110111011100001101011001110100000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
