(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6157706919994285765795893894392065703868865966796875p460 {- 2773184659034299 460 (-4.81036e+138)}
; Y = -1.35075066153065481699968586326576769351959228515625p-521 {- 1579640548569412 -521 (-1.96765e-157)}
; -1.6157706919994285765795893894392065703868865966796875p460 M -1.35075066153065481699968586326576769351959228515625p-521 == -1.35075066153065481699968586326576769351959228515625p-521
; [HW: -1.35075066153065481699968586326576769351959228515625p-521] 

; mpf : - 1579640548569412 -521
; mpfd: - 1579640548569412 -521 (-1.96765e-157) class: Neg. norm. non-zero
; hwf : - 1579640548569412 -521 (-1.96765e-157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111001011 #b1001110110100011001001011110011111111001000010111011)))
(assert (= y (fp #b1 #b00111110110 #b0101100111001010110010111001110001010011000101000100)))
(assert (= r (fp #b1 #b00111110110 #b0101100111001010110010111001110001010011000101000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
