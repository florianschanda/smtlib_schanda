(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1173824407630486010845061173313297331333160400390625p177 {+ 528643516480305 177 (2.14048e+053)}
; Y = 1.4108388914031968486284540631459094583988189697265625p-16 {+ 1850253878232745 -16 (2.15277e-005)}
; 1.1173824407630486010845061173313297331333160400390625p177 M 1.4108388914031968486284540631459094583988189697265625p-16 == 1.1173824407630486010845061173313297331333160400390625p177
; [HW: 1.1173824407630486010845061173313297331333160400390625p177] 

; mpf : + 528643516480305 177
; mpfd: + 528643516480305 177 (2.14048e+053) class: Pos. norm. non-zero
; hwf : + 528643516480305 177 (2.14048e+053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110000 #b0001111000001100110001101001000000110011101100110001)))
(assert (= y (fp #b0 #b01111101111 #b0110100100101100101111001101001010000000011010101001)))
(assert (= r (fp #b0 #b10010110000 #b0001111000001100110001101001000000110011101100110001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
