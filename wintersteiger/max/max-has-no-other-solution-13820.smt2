(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7654814956198048303548375770333223044872283935546875p138 {+ 3447422178432363 138 (6.15181e+041)}
; Y = 1.06701331949899103079815176897682249546051025390625p-902 {+ 301801160724516 -902 (3.15583e-272)}
; 1.7654814956198048303548375770333223044872283935546875p138 M 1.06701331949899103079815176897682249546051025390625p-902 == 1.7654814956198048303548375770333223044872283935546875p138
; [HW: 1.7654814956198048303548375770333223044872283935546875p138] 

; mpf : + 3447422178432363 138
; mpfd: + 3447422178432363 138 (6.15181e+041) class: Pos. norm. non-zero
; hwf : + 3447422178432363 138 (6.15181e+041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001001 #b1100001111110110100110000110010101100001010101101011)))
(assert (= y (fp #b0 #b00001111001 #b0001000100100111110010001110111110100101000000100100)))
(assert (= r (fp #b0 #b10010001001 #b1100001111110110100110000110010101100001010101101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
