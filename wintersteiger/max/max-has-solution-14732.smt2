(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3330767368825056085057667587534524500370025634765625p554 {+ 1500044268109833 554 (7.86091e+166)}
; Y = -1.595307574301935371607896740897558629512786865234375p-682 {- 2681026969797030 -682 (-7.95037e-206)}
; 1.3330767368825056085057667587534524500370025634765625p554 M -1.595307574301935371607896740897558629512786865234375p-682 == 1.3330767368825056085057667587534524500370025634765625p554
; [HW: 1.3330767368825056085057667587534524500370025634765625p554] 

; mpf : + 1500044268109833 554
; mpfd: + 1500044268109833 554 (7.86091e+166) class: Pos. norm. non-zero
; hwf : + 1500044268109833 554 (7.86091e+166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101001 #b0101010101000100100001000101101111111000000000001001)))
(assert (= y (fp #b1 #b00101010101 #b1001100001100110000100111100001010110000000110100110)))
(assert (= r (fp #b0 #b11000101001 #b0101010101000100100001000101101111111000000000001001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
