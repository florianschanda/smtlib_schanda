(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8410300015469527323830334353260695934295654296875p-250 {- 3787662401574264 -250 (-1.01756e-075)}
; Y = 1.4181991114676353316070844812202267348766326904296875p411 {+ 1883401362572315 411 (7.50007e+123)}
; -1.8410300015469527323830334353260695934295654296875p-250 M 1.4181991114676353316070844812202267348766326904296875p411 == 1.4181991114676353316070844812202267348766326904296875p411
; [HW: 1.4181991114676353316070844812202267348766326904296875p411] 

; mpf : + 1883401362572315 411
; mpfd: + 1883401362572315 411 (7.50007e+123) class: Pos. norm. non-zero
; hwf : + 1883401362572315 411 (7.50007e+123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000101 #b1101011101001101101111011111111110011001010101111000)))
(assert (= y (fp #b0 #b10110011010 #b0110101100001111000110001101001011111000010000011011)))
(assert (= r (fp #b0 #b10110011010 #b0110101100001111000110001101001011111000010000011011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
