(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.797743135719624074653211209806613624095916748046875p-64 {+ 3592715688764270 -64 (9.74559e-020)}
; Y = -1.86589623137175220080052895355038344860076904296875p-594 {- 3899649944947340 -594 (-2.87786e-179)}
; 1.797743135719624074653211209806613624095916748046875p-64 M -1.86589623137175220080052895355038344860076904296875p-594 == 1.797743135719624074653211209806613624095916748046875p-64
; [HW: 1.797743135719624074653211209806613624095916748046875p-64] 

; mpf : + 3592715688764270 -64
; mpfd: + 3592715688764270 -64 (9.74559e-020) class: Pos. norm. non-zero
; hwf : + 3592715688764270 -64 (9.74559e-020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111111 #b1100110000111000111001001110011010000110001101101110)))
(assert (= y (fp #b1 #b00110101101 #b1101110110101011011000000001101101111000101010001100)))
(assert (= r (fp #b0 #b01110111111 #b1100110000111000111001001110011010000110001101101110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
