(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.239019793970665528348717998596839606761932373046875p906 {+ 1076449455060462 906 (6.70277e+272)}
; Y = 1.3525928521144254812469398530083708465099334716796875p-942 {+ 1587937037396027 -942 (3.63841e-284)}
; 1.239019793970665528348717998596839606761932373046875p906 M 1.3525928521144254812469398530083708465099334716796875p-942 == 1.239019793970665528348717998596839606761932373046875p906
; [HW: 1.239019793970665528348717998596839606761932373046875p906] 

; mpf : + 1076449455060462 906
; mpfd: + 1076449455060462 906 (6.70277e+272) class: Pos. norm. non-zero
; hwf : + 1076449455060462 906 (6.70277e+272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001001 #b0011110100110000011001101011011000110011010111101110)))
(assert (= y (fp #b0 #b00001010001 #b0101101001000011100001100111000010100010100000111011)))
(assert (= r (fp #b0 #b11110001001 #b0011110100110000011001101011011000110011010111101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
