(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.88027106714362002293228215421549975872039794921875p870 {- 3964388449973036 870 (-1.48019e+262)}
; Y = -1.812178556929016526311215784517116844654083251953125p505 {- 3657727046343826 505 (-1.89823e+152)}
; -1.88027106714362002293228215421549975872039794921875p870 M -1.812178556929016526311215784517116844654083251953125p505 == -1.812178556929016526311215784517116844654083251953125p505
; [HW: -1.812178556929016526311215784517116844654083251953125p505] 

; mpf : - 3657727046343826 505
; mpfd: - 3657727046343826 505 (-1.89823e+152) class: Neg. norm. non-zero
; hwf : - 3657727046343826 505 (-1.89823e+152) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101100101 #b1110000101011001011100011101010011111111001100101100)))
(assert (= y (fp #b1 #b10111111000 #b1100111111101010111011110001010010000101110010010010)))
(assert (= r (fp #b1 #b10111111000 #b1100111111101010111011110001010010000101110010010010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
