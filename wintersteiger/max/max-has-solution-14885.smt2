(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6894429763193816729227592077222652733325958251953125p-279 {+ 3104975131245173 -279 (1.7393e-084)}
; Y = -1.94400313928965307042062704567797482013702392578125p901 {- 4251412186341460 901 (-3.28642e+271)}
; 1.6894429763193816729227592077222652733325958251953125p-279 M -1.94400313928965307042062704567797482013702392578125p901 == 1.6894429763193816729227592077222652733325958251953125p-279
; [HW: 1.6894429763193816729227592077222652733325958251953125p-279] 

; mpf : + 3104975131245173 -279
; mpfd: + 3104975131245173 -279 (1.7393e-084) class: Pos. norm. non-zero
; hwf : + 3104975131245173 -279 (1.7393e-084) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101000 #b1011000001111111010101011011101110111111101001110101)))
(assert (= y (fp #b1 #b11110000100 #b1111000110101010001100001001001010010010000001010100)))
(assert (= r (fp #b0 #b01011101000 #b1011000001111111010101011011101110111111101001110101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
