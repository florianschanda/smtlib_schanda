(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.151684981569316423843929442227818071842193603515625p-733 {- 683128426473274 -733 (-2.54887e-221)}
; Y = -1.940770173151059818650310262455604970455169677734375p-982 {- 4236852201244390 -982 (-4.74808e-296)}
; -1.151684981569316423843929442227818071842193603515625p-733 M -1.940770173151059818650310262455604970455169677734375p-982 == -1.940770173151059818650310262455604970455169677734375p-982
; [HW: -1.940770173151059818650310262455604970455169677734375p-982] 

; mpf : - 4236852201244390 -982
; mpfd: - 4236852201244390 -982 (-4.74808e-296) class: Neg. norm. non-zero
; hwf : - 4236852201244390 -982 (-4.74808e-296) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100010 #b0010011011010100110100111011001100100010011100111010)))
(assert (= y (fp #b1 #b00000101001 #b1111000011010110010100000110011010111100011011100110)))
(assert (= r (fp #b1 #b00000101001 #b1111000011010110010100000110011010111100011011100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
