(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8554779668466896414003031168249435722827911376953125p307 {- 3852730252714421 307 (-4.83798e+092)}
; Y = -1.3679603568398570612174580674036405980587005615234375p-385 {- 1657146125951095 -385 (-1.7359e-116)}
; -1.8554779668466896414003031168249435722827911376953125p307 M -1.3679603568398570612174580674036405980587005615234375p-385 == -1.3679603568398570612174580674036405980587005615234375p-385
; [HW: -1.3679603568398570612174580674036405980587005615234375p-385] 

; mpf : - 1657146125951095 -385
; mpfd: - 1657146125951095 -385 (-1.7359e-116) class: Neg. norm. non-zero
; hwf : - 1657146125951095 -385 (-1.7359e-116) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100110010 #b1101101100000000100110101010001000001110000110110101)))
(assert (= y (fp #b1 #b01001111110 #b0101111000110010101001100110001011011010000001110111)))
(assert (= r (fp #b1 #b01001111110 #b0101111000110010101001100110001011011010000001110111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
