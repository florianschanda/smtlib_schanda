(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4201160811259352367841302111628465354442596435546875p-829 {+ 1892034626411115 -829 (3.96696e-250)}
; Y = 1.305307280092439459195929885026998817920684814453125p-448 {+ 1374981752857810 -448 (1.79587e-135)}
; 1.4201160811259352367841302111628465354442596435546875p-829 M 1.305307280092439459195929885026998817920684814453125p-448 == 1.305307280092439459195929885026998817920684814453125p-448
; [HW: 1.305307280092439459195929885026998817920684814453125p-448] 

; mpf : + 1374981752857810 -448
; mpfd: + 1374981752857810 -448 (1.79587e-135) class: Pos. norm. non-zero
; hwf : + 1374981752857810 -448 (1.79587e-135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000010 #b0110101110001100101110100011110011110101101001101011)))
(assert (= y (fp #b0 #b01000111111 #b0100111000101000100111100010111100111010010011010010)))
(assert (= r (fp #b0 #b01000111111 #b0100111000101000100111100010111100111010010011010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
