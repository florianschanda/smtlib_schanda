(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.933069487921565521304501089616678655147552490234375p729 {+ 4202171398114342 729 (5.45902e+219)}
; Y = 1.516656994899648225327837280929088592529296875p-529 {+ 2326816249708416 -529 (8.63018e-160)}
; 1.933069487921565521304501089616678655147552490234375p729 M 1.516656994899648225327837280929088592529296875p-529 == 1.933069487921565521304501089616678655147552490234375p729
; [HW: 1.933069487921565521304501089616678655147552490234375p729] 

; mpf : + 4202171398114342 729
; mpfd: + 4202171398114342 729 (5.45902e+219) class: Pos. norm. non-zero
; hwf : + 4202171398114342 729 (5.45902e+219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011000 #b1110111011011101101001000101011110000100110000100110)))
(assert (= y (fp #b0 #b00111101110 #b1000010001000011101000100000000001010111111110000000)))
(assert (= r (fp #b0 #b11011011000 #b1110111011011101101001000101011110000100110000100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
