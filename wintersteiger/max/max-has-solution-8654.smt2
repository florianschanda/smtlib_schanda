(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0921998316184124977468172801309265196323394775390625p503 {- 415231127320305 503 (-2.86016e+151)}
; Y = 1.225295188945632940402674648794345557689666748046875p-931 {+ 1014639328983918 -931 (6.75017e-281)}
; -1.0921998316184124977468172801309265196323394775390625p503 M 1.225295188945632940402674648794345557689666748046875p-931 == 1.225295188945632940402674648794345557689666748046875p-931
; [HW: 1.225295188945632940402674648794345557689666748046875p-931] 

; mpf : + 1014639328983918 -931
; mpfd: + 1014639328983918 -931 (6.75017e-281) class: Pos. norm. non-zero
; hwf : + 1014639328983918 -931 (6.75017e-281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111110110 #b0001011110011010011010000111110101111111011011110001)))
(assert (= y (fp #b0 #b00001011100 #b0011100110101100111100100000110001110111101101101110)))
(assert (= r (fp #b0 #b00001011100 #b0011100110101100111100100000110001110111101101101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
