(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0935253630637049582219333387911319732666015625p-394 {+ 421200790243392 -394 (2.71026e-119)}
; Y = 1.1735466593142411806383051953162066638469696044921875p571 {+ 781584670219011 571 (9.07043e+171)}
; 1.0935253630637049582219333387911319732666015625p-394 M 1.1735466593142411806383051953162066638469696044921875p571 == 1.1735466593142411806383051953162066638469696044921875p571
; [HW: 1.1735466593142411806383051953162066638469696044921875p571] 

; mpf : + 781584670219011 571
; mpfd: + 781584670219011 571 (9.07043e+171) class: Pos. norm. non-zero
; hwf : + 781584670219011 571 (9.07043e+171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001110101 #b0001011111110001010001110011011110110100100001000000)))
(assert (= y (fp #b0 #b11000111010 #b0010110001101101100011011100101000010101101100000011)))
(assert (= r (fp #b0 #b11000111010 #b0010110001101101100011011100101000010101101100000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
