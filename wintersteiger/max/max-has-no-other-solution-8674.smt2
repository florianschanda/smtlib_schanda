(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.557800917682220731563802473829127848148345947265625p-664 {+ 2512112005020570 -664 (2.03514e-200)}
; Y = 1.7042652327872340745074097867473028600215911865234375p822 {+ 3171728639950583 822 (4.76643e+247)}
; 1.557800917682220731563802473829127848148345947265625p-664 M 1.7042652327872340745074097867473028600215911865234375p822 == 1.7042652327872340745074097867473028600215911865234375p822
; [HW: 1.7042652327872340745074097867473028600215911865234375p822] 

; mpf : + 3171728639950583 822
; mpfd: + 3171728639950583 822 (4.76643e+247) class: Pos. norm. non-zero
; hwf : + 3171728639950583 822 (4.76643e+247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101100111 #b1000111011001100000010100111101100011111101110011010)))
(assert (= y (fp #b0 #b11100110101 #b1011010001001010101110011110111010000111111011110111)))
(assert (= r (fp #b0 #b11100110101 #b1011010001001010101110011110111010000111111011110111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
