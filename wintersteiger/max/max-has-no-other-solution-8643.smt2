(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1347536918685927620487063904874958097934722900390625p-219 {+ 606876676486193 -219 (1.34689e-066)}
; Y = -1.984803970146026497189950532629154622554779052734375p-548 {- 4435162792982630 -548 (-2.15417e-165)}
; 1.1347536918685927620487063904874958097934722900390625p-219 M -1.984803970146026497189950532629154622554779052734375p-548 == 1.1347536918685927620487063904874958097934722900390625p-219
; [HW: 1.1347536918685927620487063904874958097934722900390625p-219] 

; mpf : + 606876676486193 -219
; mpfd: + 606876676486193 -219 (1.34689e-066) class: Pos. norm. non-zero
; hwf : + 606876676486193 -219 (1.34689e-066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100100100 #b0010001001111111001101111100101110010111010000110001)))
(assert (= y (fp #b1 #b00111011011 #b1111110000011100000111001110110010111111100001100110)))
(assert (= r (fp #b0 #b01100100100 #b0010001001111111001101111100101110010111010000110001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
