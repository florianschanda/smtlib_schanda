(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.511062125150175905474725368549115955829620361328125p-731 {- 2301619196389506 -731 (-1.33769e-220)}
; Y = 1.6604467488493863669418715289793908596038818359375p732 {+ 2974387732016152 732 (3.7513e+220)}
; -1.511062125150175905474725368549115955829620361328125p-731 M 1.6604467488493863669418715289793908596038818359375p732 == 1.6604467488493863669418715289793908596038818359375p732
; [HW: 1.6604467488493863669418715289793908596038818359375p732] 

; mpf : + 2974387732016152 732
; mpfd: + 2974387732016152 732 (3.7513e+220) class: Pos. norm. non-zero
; hwf : + 2974387732016152 732 (3.7513e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100100 #b1000001011010100111101111010100110111110100010000010)))
(assert (= y (fp #b0 #b11011011011 #b1010100100010011000010011100001100001110110000011000)))
(assert (= r (fp #b0 #b11011011011 #b1010100100010011000010011100001100001110110000011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
