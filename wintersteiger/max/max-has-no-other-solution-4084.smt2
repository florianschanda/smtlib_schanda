(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.40918251729832899599159645731560885906219482421875p-866 {- 1842794232431276 -866 (-2.86412e-261)}
; Y = 1.616356314058152054968786615063436329364776611328125p-722 {+ 2775822066319746 -722 (7.32622e-218)}
; -1.40918251729832899599159645731560885906219482421875p-866 M 1.616356314058152054968786615063436329364776611328125p-722 == 1.616356314058152054968786615063436329364776611328125p-722
; [HW: 1.616356314058152054968786615063436329364776611328125p-722] 

; mpf : + 2775822066319746 -722
; mpfd: + 2775822066319746 -722 (7.32622e-218) class: Pos. norm. non-zero
; hwf : + 2775822066319746 -722 (7.32622e-218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011101 #b0110100011000000001011110111100111100100001010101100)))
(assert (= y (fp #b0 #b00100101101 #b1001110111001001100001110000001110010000000110000010)))
(assert (= r (fp #b0 #b00100101101 #b1001110111001001100001110000001110010000000110000010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
