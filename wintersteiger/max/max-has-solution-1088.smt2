(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6745802568354644090931060418370179831981658935546875p221 {+ 3038039393315691 221 (5.64332e+066)}
; Y = 1.718144980141780298055209641461260616779327392578125p-573 {+ 3234237464964514 -573 (5.55741e-173)}
; 1.6745802568354644090931060418370179831981658935546875p221 M 1.718144980141780298055209641461260616779327392578125p-573 == 1.6745802568354644090931060418370179831981658935546875p221
; [HW: 1.6745802568354644090931060418370179831981658935546875p221] 

; mpf : + 3038039393315691 221
; mpfd: + 3038039393315691 221 (5.64332e+066) class: Pos. norm. non-zero
; hwf : + 3038039393315691 221 (5.64332e+066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011100 #b1010110010110001010010101010110110100010101101101011)))
(assert (= y (fp #b0 #b00111000010 #b1011011111011000010110010111001101111110110110100010)))
(assert (= r (fp #b0 #b10011011100 #b1010110010110001010010101010110110100010101101101011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
