(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4371546070259710869976288449834100902080535888671875p753 {+ 1968769325305459 753 (6.80911e+226)}
; Y = 1.7656282514193304411520557550829835236072540283203125p-459 {+ 3448083107796421 -459 (1.18613e-138)}
; 1.4371546070259710869976288449834100902080535888671875p753 M 1.7656282514193304411520557550829835236072540283203125p-459 == 1.4371546070259710869976288449834100902080535888671875p753
; [HW: 1.4371546070259710869976288449834100902080535888671875p753] 

; mpf : + 1968769325305459 753
; mpfd: + 1968769325305459 753 (6.80911e+226) class: Pos. norm. non-zero
; hwf : + 1968769325305459 753 (6.80911e+226) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110000 #b0110111111101001010111010100010001111000111001110011)))
(assert (= y (fp #b0 #b01000110100 #b1100010000000000001101101000110010111101010111000101)))
(assert (= r (fp #b0 #b11011110000 #b0110111111101001010111010100010001111000111001110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
