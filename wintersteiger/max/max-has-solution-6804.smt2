(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8943696441179771472462789461133070290088653564453125p791 {+ 4027882795981205 791 (2.46713e+238)}
; Y = 1.8842994806974420196610253697144798934459686279296875p-712 {+ 3982530811752923 -712 (8.74567e-215)}
; 1.8943696441179771472462789461133070290088653564453125p791 M 1.8842994806974420196610253697144798934459686279296875p-712 == 1.8943696441179771472462789461133070290088653564453125p791
; [HW: 1.8943696441179771472462789461133070290088653564453125p791] 

; mpf : + 4027882795981205 791
; mpfd: + 4027882795981205 791 (2.46713e+238) class: Pos. norm. non-zero
; hwf : + 4027882795981205 791 (2.46713e+238) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010110 #b1110010011110101011010001011010000000101100110010101)))
(assert (= y (fp #b0 #b00100110111 #b1110001001100001011100110110010101110111000111011011)))
(assert (= r (fp #b0 #b11100010110 #b1110010011110101011010001011010000000101100110010101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
