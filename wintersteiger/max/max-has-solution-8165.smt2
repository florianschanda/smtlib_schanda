(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1122137044991671217530893045477569103240966796875p756 {- 505365597768312 756 (-4.21565e+227)}
; Y = -1.1745254125293176361566338528064079582691192626953125p-90 {- 785992582833717 -90 (-9.48774e-028)}
; -1.1122137044991671217530893045477569103240966796875p756 M -1.1745254125293176361566338528064079582691192626953125p-90 == -1.1745254125293176361566338528064079582691192626953125p-90
; [HW: -1.1745254125293176361566338528064079582691192626953125p-90] 

; mpf : - 785992582833717 -90
; mpfd: - 785992582833717 -90 (-9.48774e-028) class: Neg. norm. non-zero
; hwf : - 785992582833717 -90 (-9.48774e-028) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011110011 #b0001110010111010000010011000111011111100101001111000)))
(assert (= y (fp #b1 #b01110100101 #b0010110010101101101100101000101100100010011000110101)))
(assert (= r (fp #b1 #b01110100101 #b0010110010101101101100101000101100100010011000110101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
