(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.8487523473231572967989677636069245636463165283203125p-1022 {+ 3822440755134405 -1023 (1.88854e-308)}
; Y = 1.3715187564412258947044165324768982827663421630859375p-757 {+ 1673171733069855 -757 (1.80924e-228)}
; 0.8487523473231572967989677636069245636463165283203125p-1022 M 1.3715187564412258947044165324768982827663421630859375p-757 == 1.3715187564412258947044165324768982827663421630859375p-757
; [HW: 1.3715187564412258947044165324768982827663421630859375p-757] 

; mpf : + 1673171733069855 -757
; mpfd: + 1673171733069855 -757 (1.80924e-228) class: Pos. norm. non-zero
; hwf : + 1673171733069855 -757 (1.80924e-228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1101100101000111110101010111011000100111111111000101)))
(assert (= y (fp #b0 #b00100001010 #b0101111100011011110110100110110011000100000000011111)))
(assert (= r (fp #b0 #b00100001010 #b0101111100011011110110100110110011000100000000011111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
