(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.79006774635031629117065676837228238582611083984375p-40 {- 3558148808060732 -40 (-1.62806e-012)}
; Y = -1.9038093692373110332738406214048154652118682861328125p582 {- 4070395538511117 582 (-3.01357e+175)}
; -1.79006774635031629117065676837228238582611083984375p-40 M -1.9038093692373110332738406214048154652118682861328125p582 == -1.79006774635031629117065676837228238582611083984375p-40
; [HW: -1.79006774635031629117065676837228238582611083984375p-40] 

; mpf : - 3558148808060732 -40
; mpfd: - 3558148808060732 -40 (-1.62806e-012) class: Neg. norm. non-zero
; hwf : - 3558148808060732 -40 (-1.62806e-012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111010111 #b1100101001000001111000010011110000110010111100111100)))
(assert (= y (fp #b1 #b11001000101 #b1110011101100000000011010000001010110001010100001101)))
(assert (= r (fp #b1 #b01111010111 #b1100101001000001111000010011110000110010111100111100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
