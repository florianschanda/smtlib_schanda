(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6322476001805219514295686167315579950809478759765625p61 {- 2847390056578889 61 (-3.76371e+018)}
; Y = 0.842708379214115677058316578040830790996551513671875p-1022 {+ 3795221142610686 -1023 (1.87509e-308)}
; -1.6322476001805219514295686167315579950809478759765625p61 M 0.842708379214115677058316578040830790996551513671875p-1022 == 0.842708379214115677058316578040830790996551513671875p-1022
; [HW: 0.842708379214115677058316578040830790996551513671875p-1022] 

; mpf : + 3795221142610686 -1023
; mpfd: + 3795221142610686 -1023 (1.87509e-308) class: Pos. denorm.
; hwf : + 3795221142610686 -1023 (1.87509e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000111100 #b1010000111011010111110101000110110111111111101001001)))
(assert (= y (fp #b0 #b00000000000 #b1101011110111011101111001000000011001010001011111110)))
(assert (= r (fp #b0 #b00000000000 #b1101011110111011101111001000000011001010001011111110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
