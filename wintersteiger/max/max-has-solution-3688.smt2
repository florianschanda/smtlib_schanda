(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5199640985014795102614471034030430018901824951171875p450 {+ 2341710120257299 450 (4.41908e+135)}
; Y = -1.1774781990198193160068740326096303761005401611328125p-786 {- 799290750972045 -786 (-2.89319e-237)}
; 1.5199640985014795102614471034030430018901824951171875p450 M -1.1774781990198193160068740326096303761005401611328125p-786 == 1.5199640985014795102614471034030430018901824951171875p450
; [HW: 1.5199640985014795102614471034030430018901824951171875p450] 

; mpf : + 2341710120257299 450
; mpfd: + 2341710120257299 450 (4.41908e+135) class: Pos. norm. non-zero
; hwf : + 2341710120257299 450 (4.41908e+135) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000001 #b1000010100011100010111011111111000101000011100010011)))
(assert (= y (fp #b1 #b00011101101 #b0010110101101111001101100001010010001011000010001101)))
(assert (= r (fp #b0 #b10111000001 #b1000010100011100010111011111111000101000011100010011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
