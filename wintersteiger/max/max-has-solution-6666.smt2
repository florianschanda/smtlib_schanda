(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4291833084419394150899051965097896754741668701171875p-301 {+ 1932869787972755 -301 (3.508e-091)}
; Y = -1.89099477863097842345041499356739223003387451171875p946 {- 4012683753031532 946 (-1.12478e+285)}
; 1.4291833084419394150899051965097896754741668701171875p-301 M -1.89099477863097842345041499356739223003387451171875p946 == 1.4291833084419394150899051965097896754741668701171875p-301
; [HW: 1.4291833084419394150899051965097896754741668701171875p-301] 

; mpf : + 1932869787972755 -301
; mpfd: + 1932869787972755 -301 (3.508e-091) class: Pos. norm. non-zero
; hwf : + 1932869787972755 -301 (3.508e-091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011010010 #b0110110111011110111101010001000110111111010010010011)))
(assert (= y (fp #b1 #b11110110001 #b1110010000011000001110111101101100100000011101101100)))
(assert (= r (fp #b0 #b01011010010 #b0110110111011110111101010001000110111111010010010011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
