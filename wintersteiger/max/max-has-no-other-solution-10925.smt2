(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.840844844861110995992703465162776410579681396484375p-640 {+ 3786828529992902 -640 (4.03478e-193)}
; Y = -1.7278654383160152452347801954601891338825225830078125p-19 {- 3278014516775869 -19 (-3.29564e-006)}
; 1.840844844861110995992703465162776410579681396484375p-640 M -1.7278654383160152452347801954601891338825225830078125p-19 == 1.840844844861110995992703465162776410579681396484375p-640
; [HW: 1.840844844861110995992703465162776410579681396484375p-640] 

; mpf : + 3786828529992902 -640
; mpfd: + 3786828529992902 -640 (4.03478e-193) class: Pos. norm. non-zero
; hwf : + 3786828529992902 -640 (4.03478e-193) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111111 #b1101011101000001100110111001010110110000010011000110)))
(assert (= y (fp #b1 #b01111101100 #b1011101001010101011000111010110101110100101110111101)))
(assert (= r (fp #b0 #b00101111111 #b1101011101000001100110111001010110110000010011000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
