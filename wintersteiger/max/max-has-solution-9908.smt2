(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.621135395472091289548188797198235988616943359375p955 {- 2797345135594736 955 (-4.93702e+287)}
; Y = -1.7594154828031827175749413072480820119380950927734375p-877 {- 3420103285371799 -877 (-1.74607e-264)}
; -1.621135395472091289548188797198235988616943359375p955 M -1.7594154828031827175749413072480820119380950927734375p-877 == -1.7594154828031827175749413072480820119380950927734375p-877
; [HW: -1.7594154828031827175749413072480820119380950927734375p-877] 

; mpf : - 3420103285371799 -877
; mpfd: - 3420103285371799 -877 (-1.74607e-264) class: Neg. norm. non-zero
; hwf : - 3420103285371799 -877 (-1.74607e-264) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111010 #b1001111100000010101110101011000111110000110011110000)))
(assert (= y (fp #b1 #b00010010010 #b1100001001101001000011011001011010110111001110010111)))
(assert (= r (fp #b1 #b00010010010 #b1100001001101001000011011001011010110111001110010111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
