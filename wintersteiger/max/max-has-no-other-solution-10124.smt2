(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3788800264902911774100857655867002904415130615234375p-745 {- 1706323946119799 -745 (-7.4504e-225)}
; Y = -1.7436020961280151997385701179155148565769195556640625p-60 {- 3348886123034049 -60 (-1.51233e-018)}
; -1.3788800264902911774100857655867002904415130615234375p-745 M -1.7436020961280151997385701179155148565769195556640625p-60 == -1.3788800264902911774100857655867002904415130615234375p-745
; [HW: -1.3788800264902911774100857655867002904415130615234375p-745] 

; mpf : - 1706323946119799 -745
; mpfd: - 1706323946119799 -745 (-7.4504e-225) class: Neg. norm. non-zero
; hwf : - 1706323946119799 -745 (-7.4504e-225) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010110 #b0110000011111110010010000000101011100010001001110111)))
(assert (= y (fp #b1 #b01111000011 #b1011111001011100101101001111110000011011010111000001)))
(assert (= r (fp #b1 #b00100010110 #b0110000011111110010010000000101011100010001001110111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
