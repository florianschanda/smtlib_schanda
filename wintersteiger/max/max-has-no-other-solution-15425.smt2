(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1960552836776783269812085563899017870426177978515625p-519 {- 882954502514809 -519 (-6.96921e-157)}
; Y = -1.1394442645023985516417042163084261119365692138671875p922 {- 628001137651955 922 (-4.0397e+277)}
; -1.1960552836776783269812085563899017870426177978515625p-519 M -1.1394442645023985516417042163084261119365692138671875p922 == -1.1960552836776783269812085563899017870426177978515625p-519
; [HW: -1.1960552836776783269812085563899017870426177978515625p-519] 

; mpf : - 882954502514809 -519
; mpfd: - 882954502514809 -519 (-6.96921e-157) class: Neg. norm. non-zero
; hwf : - 882954502514809 -519 (-6.96921e-157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111111000 #b0011001000110000101011011101011110011010100001111001)))
(assert (= y (fp #b1 #b11110011001 #b0010001110110010100111101000101110100111000011110011)))
(assert (= r (fp #b1 #b00111111000 #b0011001000110000101011011101011110011010100001111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
