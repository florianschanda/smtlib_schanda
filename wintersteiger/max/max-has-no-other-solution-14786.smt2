(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5255843911581339344962771065183915197849273681640625p-810 {- 2367021668171521 -810 (-2.23429e-244)}
; Y = -1.4485376417005237925650362740270793437957763671875p-725 {- 2020033956024120 -725 (-8.20697e-219)}
; -1.5255843911581339344962771065183915197849273681640625p-810 M -1.4485376417005237925650362740270793437957763671875p-725 == -1.5255843911581339344962771065183915197849273681640625p-810
; [HW: -1.5255843911581339344962771065183915197849273681640625p-810] 

; mpf : - 2367021668171521 -810
; mpfd: - 2367021668171521 -810 (-2.23429e-244) class: Neg. norm. non-zero
; hwf : - 2367021668171521 -810 (-2.23429e-244) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011010101 #b1000011010001100101100101101101101001111111100000001)))
(assert (= y (fp #b1 #b00100101010 #b0111001011010011010111001110011000100000111100111000)))
(assert (= r (fp #b1 #b00011010101 #b1000011010001100101100101101101101001111111100000001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
