(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3625561069718141737894256948493421077728271484375p669 {+ 1632807548259160 669 (3.3375e+201)}
; Y = -1.09201226244690463573761007864959537982940673828125p122 {- 414386390869396 122 (-5.80613e+036)}
; 1.3625561069718141737894256948493421077728271484375p669 M -1.09201226244690463573761007864959537982940673828125p122 == 1.3625561069718141737894256948493421077728271484375p669
; [HW: 1.3625561069718141737894256948493421077728271484375p669] 

; mpf : + 1632807548259160 669
; mpfd: + 1632807548259160 669 (3.3375e+201) class: Pos. norm. non-zero
; hwf : + 1632807548259160 669 (3.3375e+201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011100 #b0101110011010000011110100001111001101000101101011000)))
(assert (= y (fp #b1 #b10001111001 #b0001011110001110000111011001101000001010010110010100)))
(assert (= r (fp #b0 #b11010011100 #b0101110011010000011110100001111001101000101101011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
