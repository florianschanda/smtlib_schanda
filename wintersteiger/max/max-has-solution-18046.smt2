(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7037794067930758235007715484243817627429962158203125p-773 {- 3169540674184325 -773 (-3.42947e-233)}
; Y = 1.3868772659184944728849586681462824344635009765625p524 {+ 1742340310628648 524 (7.61651e+157)}
; -1.7037794067930758235007715484243817627429962158203125p-773 M 1.3868772659184944728849586681462824344635009765625p524 == 1.3868772659184944728849586681462824344635009765625p524
; [HW: 1.3868772659184944728849586681462824344635009765625p524] 

; mpf : + 1742340310628648 524
; mpfd: + 1742340310628648 524 (7.61651e+157) class: Pos. norm. non-zero
; hwf : + 1742340310628648 524 (7.61651e+157) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111010 #b1011010000101010111000110001111111000110010010000101)))
(assert (= y (fp #b0 #b11000001011 #b0110001100001010011000110111010010101111100100101000)))
(assert (= r (fp #b0 #b11000001011 #b0110001100001010011000110111010010101111100100101000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
