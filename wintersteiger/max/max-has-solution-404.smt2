(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1001102151795272288126170678879134356975555419921875p-954 {- 450856327778499 -954 (-7.22471e-288)}
; Y = 1.2550617823263896521979177123284898698329925537109375p404 {+ 1148696147841583 404 (5.18541e+121)}
; -1.1001102151795272288126170678879134356975555419921875p-954 M 1.2550617823263896521979177123284898698329925537109375p404 == 1.2550617823263896521979177123284898698329925537109375p404
; [HW: 1.2550617823263896521979177123284898698329925537109375p404] 

; mpf : + 1148696147841583 404
; mpfd: + 1148696147841583 404 (5.18541e+121) class: Pos. norm. non-zero
; hwf : + 1148696147841583 404 (5.18541e+121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001000101 #b0001100110100000110100101011010000110001000011000011)))
(assert (= y (fp #b0 #b10110010011 #b0100000101001011101110101001110110001101001000101111)))
(assert (= r (fp #b0 #b10110010011 #b0100000101001011101110101001110110001101001000101111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
