(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.72447006576699823909848419134505093097686767578125p-511 {+ 3262723118229332 -511 (2.57234e-154)}
; Y = -1.5119975188344347838409476025844924151897430419921875p-6 {- 2305831835037379 -6 (-0.023625)}
; 1.72447006576699823909848419134505093097686767578125p-511 M -1.5119975188344347838409476025844924151897430419921875p-6 == 1.72447006576699823909848419134505093097686767578125p-511
; [HW: 1.72447006576699823909848419134505093097686767578125p-511] 

; mpf : + 3262723118229332 -511
; mpfd: + 3262723118229332 -511 (2.57234e-154) class: Pos. norm. non-zero
; hwf : + 3262723118229332 -511 (2.57234e-154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000000000 #b1011100101110110110111101100011101100110011101010100)))
(assert (= y (fp #b1 #b01111111001 #b1000001100010010010001001111011100000110111011000011)))
(assert (= r (fp #b0 #b01000000000 #b1011100101110110110111101100011101100110011101010100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
