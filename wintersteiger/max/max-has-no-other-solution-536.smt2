(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.78507593482949999952325015328824520111083984375p992 {- 3535667687555680 992 (-7.47158e+298)}
; Y = -1.107239577311672551473975545377470552921295166015625p358 {- 482964120420218 358 (-6.501e+107)}
; -1.78507593482949999952325015328824520111083984375p992 M -1.107239577311672551473975545377470552921295166015625p358 == -1.107239577311672551473975545377470552921295166015625p358
; [HW: -1.107239577311672551473975545377470552921295166015625p358] 

; mpf : - 482964120420218 358
; mpfd: - 482964120420218 358 (-6.501e+107) class: Neg. norm. non-zero
; hwf : - 482964120420218 358 (-6.501e+107) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111011111 #b1100100011111010101111001000100011111000001001100000)))
(assert (= y (fp #b1 #b10101100101 #b0001101101110100000011011000110101100011111101111010)))
(assert (= r (fp #b1 #b10101100101 #b0001101101110100000011011000110101100011111101111010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
