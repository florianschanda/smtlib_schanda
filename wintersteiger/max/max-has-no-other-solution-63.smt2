(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2384915568671306385084562862175516784191131591796875p-851 {+ 1074070486637819 -851 (8.24834e-257)}
; Y = 0.2965437856614008271805005279020406305789947509765625p-1022 {+ 1335514482603721 -1023 (6.59832e-309)}
; 1.2384915568671306385084562862175516784191131591796875p-851 M 0.2965437856614008271805005279020406305789947509765625p-1022 == 1.2384915568671306385084562862175516784191131591796875p-851
; [HW: 1.2384915568671306385084562862175516784191131591796875p-851] 

; mpf : + 1074070486637819 -851
; mpfd: + 1074070486637819 -851 (8.24834e-257) class: Pos. norm. non-zero
; hwf : + 1074070486637819 -851 (8.24834e-257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010101100 #b0011110100001101110010000101110100011101110011111011)))
(assert (= y (fp #b0 #b00000000000 #b0100101111101010010010110010010100111111011011001001)))
(assert (= r (fp #b0 #b00010101100 #b0011110100001101110010000101110100011101110011111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
