(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.182957459784571785377238484215922653675079345703125p-664 {+ 823967147710450 -664 (1.54544e-200)}
; Y = 1.7166154528790034117236018573748879134654998779296875p-704 {+ 3227349086553819 -704 (2.03965e-212)}
; 1.182957459784571785377238484215922653675079345703125p-664 M 1.7166154528790034117236018573748879134654998779296875p-704 == 1.182957459784571785377238484215922653675079345703125p-664
; [HW: 1.182957459784571785377238484215922653675079345703125p-664] 

; mpf : + 823967147710450 -664
; mpfd: + 823967147710450 -664 (1.54544e-200) class: Pos. norm. non-zero
; hwf : + 823967147710450 -664 (1.54544e-200) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101100111 #b0010111011010110010011001101001001010101011111110010)))
(assert (= y (fp #b0 #b00100111111 #b1011011101110100000111000011110111101100011011011011)))
(assert (= r (fp #b0 #b00101100111 #b0010111011010110010011001101001001010101011111110010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
