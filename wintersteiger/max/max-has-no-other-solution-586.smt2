(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4246578003197953865566205422510392963886260986328125p359 {- 1912488711280205 359 (-1.67293e+108)}
; Y = -1.153517318458817886295264543150551617145538330078125p-260 {- 691380538206050 -260 (-6.22623e-079)}
; -1.4246578003197953865566205422510392963886260986328125p359 M -1.153517318458817886295264543150551617145538330078125p-260 == -1.153517318458817886295264543150551617145538330078125p-260
; [HW: -1.153517318458817886295264543150551617145538330078125p-260] 

; mpf : - 691380538206050 -260
; mpfd: - 691380538206050 -260 (-6.22623e-079) class: Neg. norm. non-zero
; hwf : - 691380538206050 -260 (-6.22623e-079) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101100110 #b0110110010110110010111111010010001011101011001001101)))
(assert (= y (fp #b1 #b01011111011 #b0010011101001100111010010011011000100110011101100010)))
(assert (= r (fp #b1 #b01011111011 #b0010011101001100111010010011011000100110011101100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
