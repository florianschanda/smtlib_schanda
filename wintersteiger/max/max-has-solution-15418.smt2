(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.631600626984901936111782561056315898895263671875p-404 {- 2844476348336176 -404 (-3.94908e-122)}
; Y = 1.0056405688098688511189493510755710303783416748046875p579 {+ 25402863590283 579 (1.9898e+174)}
; -1.631600626984901936111782561056315898895263671875p-404 M 1.0056405688098688511189493510755710303783416748046875p579 == 1.0056405688098688511189493510755710303783416748046875p579
; [HW: 1.0056405688098688511189493510755710303783416748046875p579] 

; mpf : + 25402863590283 579
; mpfd: + 25402863590283 579 (1.9898e+174) class: Pos. norm. non-zero
; hwf : + 25402863590283 579 (1.9898e+174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101011 #b1010000110110000100101000010010100001000100000110000)))
(assert (= y (fp #b0 #b11001000010 #b0000000101110001101010010000101010010001101110001011)))
(assert (= r (fp #b0 #b11001000010 #b0000000101110001101010010000101010010001101110001011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
