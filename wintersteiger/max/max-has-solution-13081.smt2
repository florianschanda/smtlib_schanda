(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2744473762065628985595822086906991899013519287109375p-749 {- 1236001101216687 -749 (-4.30383e-226)}
; Y = 1.4388951307624451292355161058367229998111724853515625p258 {+ 1976607947356473 258 (6.66451e+077)}
; -1.2744473762065628985595822086906991899013519287109375p-749 M 1.4388951307624451292355161058367229998111724853515625p258 == 1.4388951307624451292355161058367229998111724853515625p258
; [HW: 1.4388951307624451292355161058367229998111724853515625p258] 

; mpf : + 1976607947356473 258
; mpfd: + 1976607947356473 258 (6.66451e+077) class: Pos. norm. non-zero
; hwf : + 1976607947356473 258 (6.66451e+077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010010 #b0100011001000010001011101110100101000111101110101111)))
(assert (= y (fp #b0 #b10100000001 #b0111000001011011011011100110100011111111100100111001)))
(assert (= r (fp #b0 #b10100000001 #b0111000001011011011011100110100011111111100100111001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
