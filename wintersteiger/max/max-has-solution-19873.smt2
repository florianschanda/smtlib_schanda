(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1935789977107515991150421541533432900905609130859375p-628 {+ 871802301956895 -628 (1.07155e-189)}
; Y = 1.3600614425758743575300968586816452443599700927734375p-568 {+ 1621572578615191 -568 (1.40774e-171)}
; 1.1935789977107515991150421541533432900905609130859375p-628 M 1.3600614425758743575300968586816452443599700927734375p-568 == 1.3600614425758743575300968586816452443599700927734375p-568
; [HW: 1.3600614425758743575300968586816452443599700927734375p-568] 

; mpf : + 1621572578615191 -568
; mpfd: + 1621572578615191 -568 (1.40774e-171) class: Pos. norm. non-zero
; hwf : + 1621572578615191 -568 (1.40774e-171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001011 #b0011000110001110011001001010100001011100001100011111)))
(assert (= y (fp #b0 #b00111000111 #b0101110000101100111111001001100001101001111110010111)))
(assert (= r (fp #b0 #b00111000111 #b0101110000101100111111001001100001101001111110010111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
