(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6264347744216627322799695321009494364261627197265625p1008 {+ 2821211416657321 1008 (4.46141e+303)}
; Y = 1.32085216054806320329362279153428971767425537109375p178 {+ 1444989670685276 178 (5.0605e+053)}
; 1.6264347744216627322799695321009494364261627197265625p1008 M 1.32085216054806320329362279153428971767425537109375p178 == 1.6264347744216627322799695321009494364261627197265625p1008
; [HW: 1.6264347744216627322799695321009494364261627197265625p1008] 

; mpf : + 2821211416657321 1008
; mpfd: + 2821211416657321 1008 (4.46141e+303) class: Pos. norm. non-zero
; hwf : + 2821211416657321 1008 (4.46141e+303) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101111 #b1010000001011110000001111000010100110111110110101001)))
(assert (= y (fp #b0 #b10010110001 #b0101001000100011010111100000000001100111101001011100)))
(assert (= r (fp #b0 #b11111101111 #b1010000001011110000001111000010100110111110110101001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
