(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.74303528115627326400272067985497415065765380859375p307 {- 3346333415338524 307 (-4.5448e+092)}
; Y = 1.169622541285744166117410713923163712024688720703125p-691 {+ 763912013728114 -691 (1.13846e-208)}
; -1.74303528115627326400272067985497415065765380859375p307 M 1.169622541285744166117410713923163712024688720703125p-691 == 1.169622541285744166117410713923163712024688720703125p-691
; [HW: 1.169622541285744166117410713923163712024688720703125p-691] 

; mpf : + 763912013728114 -691
; mpfd: + 763912013728114 -691 (1.13846e-208) class: Pos. norm. non-zero
; hwf : + 763912013728114 -691 (1.13846e-208) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100110010 #b1011111000110111100011110110100001010111001000011100)))
(assert (= y (fp #b0 #b00101001100 #b0010101101101100011000100000001101111100100101110010)))
(assert (= r (fp #b0 #b00101001100 #b0010101101101100011000100000001101111100100101110010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
