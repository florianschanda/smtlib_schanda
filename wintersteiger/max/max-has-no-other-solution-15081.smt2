(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.711881343447119174783210837631486356258392333984375p323 {- 3206028553080454 323 (-2.92525e+097)}
; Y = -1.6551518067284292090590724910725839436054229736328125p907 {- 2950541432653261 907 (-1.79079e+273)}
; -1.711881343447119174783210837631486356258392333984375p323 M -1.6551518067284292090590724910725839436054229736328125p907 == -1.711881343447119174783210837631486356258392333984375p323
; [HW: -1.711881343447119174783210837631486356258392333984375p323] 

; mpf : - 3206028553080454 323
; mpfd: - 3206028553080454 323 (-2.92525e+097) class: Neg. norm. non-zero
; hwf : - 3206028553080454 323 (-2.92525e+097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101000010 #b1011011000111101110110110001000010111100111010000110)))
(assert (= y (fp #b1 #b11110001010 #b1010011110111000000001110101111111010000010111001101)))
(assert (= r (fp #b1 #b10101000010 #b1011011000111101110110110001000010111100111010000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
