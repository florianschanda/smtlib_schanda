(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.346717161890495173537374284933321177959442138671875p442 {- 1561475281092990 442 (-1.52945e+133)}
; Y = 1.260308741499792883899999651475809514522552490234375p943 {+ 1172326351219750 943 (9.3705e+283)}
; -1.346717161890495173537374284933321177959442138671875p442 M 1.260308741499792883899999651475809514522552490234375p943 == 1.260308741499792883899999651475809514522552490234375p943
; [HW: 1.260308741499792883899999651475809514522552490234375p943] 

; mpf : + 1172326351219750 943
; mpfd: + 1172326351219750 943 (9.3705e+283) class: Pos. norm. non-zero
; hwf : + 1172326351219750 943 (9.3705e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111001 #b0101100011000010011101001011011101001000000101111110)))
(assert (= y (fp #b0 #b11110101110 #b0100001010100011100101111111101110011010110000100110)))
(assert (= r (fp #b0 #b11110101110 #b0100001010100011100101111111101110011010110000100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
