(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6284844462620691185605892314924858510494232177734375p421 {+ 2830442317994007 421 (8.81885e+126)}
; Y = -1.9250530941268622076023575573344714939594268798828125p710 {- 4166068770007661 710 (-1.03691e+214)}
; 1.6284844462620691185605892314924858510494232177734375p421 M -1.9250530941268622076023575573344714939594268798828125p710 == 1.6284844462620691185605892314924858510494232177734375p421
; [HW: 1.6284844462620691185605892314924858510494232177734375p421] 

; mpf : + 2830442317994007 421
; mpfd: + 2830442317994007 421 (8.81885e+126) class: Pos. norm. non-zero
; hwf : + 2830442317994007 421 (8.81885e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100100 #b1010000011100100010110110100111010111101100000010111)))
(assert (= y (fp #b1 #b11011000101 #b1110110011010000010001111001001001010110101001101101)))
(assert (= r (fp #b0 #b10110100100 #b1010000011100100010110110100111010111101100000010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
