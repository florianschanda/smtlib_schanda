(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6209655653298700173081670072861015796661376953125p-230 {- 2796580288629512 -230 (-9.39452e-070)}
; Y = 1.4768486659753392586935660801827907562255859375p-744 {+ 2147535474398656 -744 (1.59595e-224)}
; -1.6209655653298700173081670072861015796661376953125p-230 M 1.4768486659753392586935660801827907562255859375p-744 == 1.4768486659753392586935660801827907562255859375p-744
; [HW: 1.4768486659753392586935660801827907562255859375p-744] 

; mpf : + 2147535474398656 -744
; mpfd: + 2147535474398656 -744 (1.59595e-224) class: Pos. norm. non-zero
; hwf : + 2147535474398656 -744 (1.59595e-224) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011001 #b1001111011110111100110010110101100001000101100001000)))
(assert (= y (fp #b0 #b00100010111 #b0111101000010010110000010001000110000001010111000000)))
(assert (= r (fp #b0 #b00100010111 #b0111101000010010110000010001000110000001010111000000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
