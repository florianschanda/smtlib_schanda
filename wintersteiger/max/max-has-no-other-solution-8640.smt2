(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3693084569120024251986933450098149478435516357421875p308 {- 1663217428933667 308 (-7.14069e+092)}
; Y = -1.829264854790369820847217852133326232433319091796875p-932 {- 3734676891025358 -932 (-5.03872e-281)}
; -1.3693084569120024251986933450098149478435516357421875p308 M -1.829264854790369820847217852133326232433319091796875p-932 == -1.829264854790369820847217852133326232433319091796875p-932
; [HW: -1.829264854790369820847217852133326232433319091796875p-932] 

; mpf : - 3734676891025358 -932
; mpfd: - 3734676891025358 -932 (-5.03872e-281) class: Neg. norm. non-zero
; hwf : - 3734676891025358 -932 (-5.03872e-281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100110011 #b0101111010001010111111111100000010010010110000100011)))
(assert (= y (fp #b1 #b00001011011 #b1101010001001010101100111001011100001011111111001110)))
(assert (= r (fp #b1 #b00001011011 #b1101010001001010101100111001011100001011111111001110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
