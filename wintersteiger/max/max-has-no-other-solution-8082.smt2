(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5305418562293364725945821191999129951000213623046875p224 {+ 2389348106018891 224 (4.12633e+067)}
; Y = 1.12942347900864970000611720024608075618743896484375p-817 {+ 582871531836348 -817 (1.29226e-246)}
; 1.5305418562293364725945821191999129951000213623046875p224 M 1.12942347900864970000611720024608075618743896484375p-817 == 1.5305418562293364725945821191999129951000213623046875p224
; [HW: 1.5305418562293364725945821191999129951000213623046875p224] 

; mpf : + 2389348106018891 224
; mpfd: + 2389348106018891 224 (4.12633e+067) class: Pos. norm. non-zero
; hwf : + 2389348106018891 224 (4.12633e+067) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011111 #b1000011111010001100101110101000110101010000001001011)))
(assert (= y (fp #b0 #b00011001110 #b0010000100100001111001011010100110101101001110111100)))
(assert (= r (fp #b0 #b10011011111 #b1000011111010001100101110101000110101010000001001011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
