(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.16228769273286491880980975111015141010284423828125p-572 {+ 730878792518548 -572 (7.51893e-173)}
; Y = 1.69795427514354546616459629149176180362701416015625p-507 {+ 3143306613458116 -507 (4.05245e-153)}
; 1.16228769273286491880980975111015141010284423828125p-572 M 1.69795427514354546616459629149176180362701416015625p-507 == 1.69795427514354546616459629149176180362701416015625p-507
; [HW: 1.69795427514354546616459629149176180362701416015625p-507] 

; mpf : + 3143306613458116 -507
; mpfd: + 3143306613458116 -507 (4.05245e-153) class: Pos. norm. non-zero
; hwf : + 3143306613458116 -507 (4.05245e-153) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111000011 #b0010100110001011101011111010110011010100101110010100)))
(assert (= y (fp #b0 #b01000000100 #b1011001010101101001000011010000111011000010011000100)))
(assert (= r (fp #b0 #b01000000100 #b1011001010101101001000011010000111011000010011000100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
