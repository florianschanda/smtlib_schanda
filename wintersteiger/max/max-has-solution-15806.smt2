(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0361353255720271437922974655521102249622344970703125p832 {- 162739038781093 832 (-2.96738e+250)}
; Y = -1.1662674175519873731587949805543757975101470947265625p-947 {- 748801879730985 -947 (-9.80375e-286)}
; -1.0361353255720271437922974655521102249622344970703125p832 M -1.1662674175519873731587949805543757975101470947265625p-947 == -1.1662674175519873731587949805543757975101470947265625p-947
; [HW: -1.1662674175519873731587949805543757975101470947265625p-947] 

; mpf : - 748801879730985 -947
; mpfd: - 748801879730985 -947 (-9.80375e-286) class: Neg. norm. non-zero
; hwf : - 748801879730985 -947 (-9.80375e-286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100111111 #b0000100101000000001010100010100110001111111010100101)))
(assert (= y (fp #b1 #b00001001100 #b0010101010010000100000000110000011000110101100101001)))
(assert (= r (fp #b1 #b00001001100 #b0010101010010000100000000110000011000110101100101001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
