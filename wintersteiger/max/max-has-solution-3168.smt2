(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0979498844536126345161619610735215246677398681640625p381 {+ 441127063126273 381 (5.40768e+114)}
; Y = -1.62173841124329243257307098247110843658447265625p-874 {- 2800060877197216 -874 (-1.28755e-263)}
; 1.0979498844536126345161619610735215246677398681640625p381 M -1.62173841124329243257307098247110843658447265625p-874 == 1.0979498844536126345161619610735215246677398681640625p381
; [HW: 1.0979498844536126345161619610735215246677398681640625p381] 

; mpf : + 441127063126273 381
; mpfd: + 441127063126273 381 (5.40768e+114) class: Pos. norm. non-zero
; hwf : + 441127063126273 381 (5.40768e+114) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101111100 #b0001100100010011001111100101111001100000000100000001)))
(assert (= y (fp #b1 #b00010010101 #b1001111100101010001111111001111011110100111110100000)))
(assert (= r (fp #b0 #b10101111100 #b0001100100010011001111100101111001100000000100000001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
