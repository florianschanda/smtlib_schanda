(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4282268003010643031558402071823365986347198486328125p-817 {+ 1928562058265933 -817 (1.63415e-246)}
; Y = -1.6719049067244584616531710707931779325008392333984375p-723 {- 3025990687552679 -723 (-3.789e-218)}
; 1.4282268003010643031558402071823365986347198486328125p-817 M -1.6719049067244584616531710707931779325008392333984375p-723 == 1.4282268003010643031558402071823365986347198486328125p-817
; [HW: 1.4282268003010643031558402071823365986347198486328125p-817] 

; mpf : + 1928562058265933 -817
; mpfd: + 1928562058265933 -817 (1.63415e-246) class: Pos. norm. non-zero
; hwf : + 1928562058265933 -817 (1.63415e-246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001110 #b0110110110100000010001011000011010010000010101001101)))
(assert (= y (fp #b1 #b00100101100 #b1010110000000001111101011100000001100111010010100111)))
(assert (= r (fp #b0 #b00011001110 #b0110110110100000010001011000011010010000010101001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
