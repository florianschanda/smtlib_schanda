(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5053886648941661174916362142539583146572113037109375p-122 {+ 2276068202894639 -122 (2.83132e-037)}
; Y = -1.8215061904510465584650091841467656195163726806640625p-756 {- 3699734973197889 -756 (-4.80567e-228)}
; 1.5053886648941661174916362142539583146572113037109375p-122 M -1.8215061904510465584650091841467656195163726806640625p-756 == 1.5053886648941661174916362142539583146572113037109375p-122
; [HW: 1.5053886648941661174916362142539583146572113037109375p-122] 

; mpf : + 2276068202894639 -122
; mpfd: + 2276068202894639 -122 (2.83132e-037) class: Pos. norm. non-zero
; hwf : + 2276068202894639 -122 (2.83132e-037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110000101 #b1000000101100001001001101100101101111101010100101111)))
(assert (= y (fp #b1 #b00100001011 #b1101001001001110001110101100110101110010111001000001)))
(assert (= r (fp #b0 #b01110000101 #b1000000101100001001001101100101101111101010100101111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
