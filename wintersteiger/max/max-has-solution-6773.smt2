(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.12497692873488386311464637401513755321502685546875p-563 {- 562846049680332 -563 (-3.72611e-170)}
; Y = 1.511401299490980232320680443081073462963104248046875p-581 {+ 2303146701824366 -581 (1.90964e-175)}
; -1.12497692873488386311464637401513755321502685546875p-563 M 1.511401299490980232320680443081073462963104248046875p-581 == 1.511401299490980232320680443081073462963104248046875p-581
; [HW: 1.511401299490980232320680443081073462963104248046875p-581] 

; mpf : + 2303146701824366 -581
; mpfd: + 2303146701824366 -581 (1.90964e-175) class: Pos. norm. non-zero
; hwf : + 2303146701824366 -581 (1.90964e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001100 #b0001111111111110011111001110110110101011101111001100)))
(assert (= y (fp #b0 #b00110111010 #b1000001011101011001100100001000001110010000101101110)))
(assert (= r (fp #b0 #b00110111010 #b1000001011101011001100100001000001110010000101101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
