(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.86600142577911842778348727733828127384185791015625p403 {+ 3900123698441156 403 (3.85479e+121)}
; Y = -1.3740419944207566960159283553366549313068389892578125p740 {- 1684535386694237 740 (-7.94688e+222)}
; 1.86600142577911842778348727733828127384185791015625p403 M -1.3740419944207566960159283553366549313068389892578125p740 == 1.86600142577911842778348727733828127384185791015625p403
; [HW: 1.86600142577911842778348727733828127384185791015625p403] 

; mpf : + 3900123698441156 403
; mpfd: + 3900123698441156 403 (3.85479e+121) class: Pos. norm. non-zero
; hwf : + 3900123698441156 403 (3.85479e+121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110010010 #b1101110110110010010001001111101000000010101111000100)))
(assert (= y (fp #b1 #b11011100011 #b0101111111000001001101110101010101011110001001011101)))
(assert (= r (fp #b0 #b10110010010 #b1101110110110010010001001111101000000010101111000100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
