(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6363232806884202563679764352855272591114044189453125p-256 {- 2865745289795541 -256 (-1.41316e-077)}
; Y = 1.4261872013004630588284271652810275554656982421875p-121 {+ 1919376520966840 -121 (5.36472e-037)}
; -1.6363232806884202563679764352855272591114044189453125p-256 M 1.4261872013004630588284271652810275554656982421875p-121 == 1.4261872013004630588284271652810275554656982421875p-121
; [HW: 1.4261872013004630588284271652810275554656982421875p-121] 

; mpf : + 1919376520966840 -121
; mpfd: + 1919376520966840 -121 (5.36472e-037) class: Pos. norm. non-zero
; hwf : + 1919376520966840 -121 (5.36472e-037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111111 #b1010001011100110000101010010000000111101011111010101)))
(assert (= y (fp #b0 #b01110000110 #b0110110100011010100110101011101110001111001010111000)))
(assert (= r (fp #b0 #b01110000110 #b0110110100011010100110101011101110001111001010111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
