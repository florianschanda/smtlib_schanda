(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.193356138161025814525828536716289818286895751953125p858 {- 870798631771794 858 (-2.29354e+258)}
; Y = 1.758568244349272280402374235563911497592926025390625p-268 {+ 3416287662586474 -268 (3.70783e-081)}
; -1.193356138161025814525828536716289818286895751953125p858 M 1.758568244349272280402374235563911497592926025390625p-268 == 1.758568244349272280402374235563911497592926025390625p-268
; [HW: 1.758568244349272280402374235563911497592926025390625p-268] 

; mpf : + 3416287662586474 -268
; mpfd: + 3416287662586474 -268 (3.70783e-081) class: Pos. norm. non-zero
; hwf : + 3416287662586474 -268 (3.70783e-081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101011001 #b0011000101111111110010011011000111100001111010010010)))
(assert (= y (fp #b0 #b01011110011 #b1100001000110001100001110100100101000011101001101010)))
(assert (= r (fp #b0 #b01011110011 #b1100001000110001100001110100100101000011101001101010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
