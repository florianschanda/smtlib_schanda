(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5845151135367883110660613965592347085475921630859375p546 {+ 2632422047516703 546 (3.64984e+164)}
; Y = -1.069500549449934556633934334968216717243194580078125p-36 {- 313002648604770 -36 (-1.55633e-011)}
; 1.5845151135367883110660613965592347085475921630859375p546 M -1.069500549449934556633934334968216717243194580078125p-36 == 1.5845151135367883110660613965592347085475921630859375p546
; [HW: 1.5845151135367883110660613965592347085475921630859375p546] 

; mpf : + 2632422047516703 546
; mpfd: + 2632422047516703 546 (3.64984e+164) class: Pos. norm. non-zero
; hwf : + 2632422047516703 546 (3.64984e+164) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100001 #b1001010110100010110010000101000010101000100000011111)))
(assert (= y (fp #b1 #b01111011011 #b0001000111001010110010011011101011110001000001100010)))
(assert (= r (fp #b0 #b11000100001 #b1001010110100010110010000101000010101000100000011111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
