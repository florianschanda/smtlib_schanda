(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8999580834950944296934949306887574493885040283203125p984 {- 4053050889477573 984 (-3.10642e+296)}
; Y = 1.5889174325430721612661955077783204615116119384765625p-249 {+ 2652248329752969 -249 (1.75644e-075)}
; -1.8999580834950944296934949306887574493885040283203125p984 M 1.5889174325430721612661955077783204615116119384765625p-249 == 1.5889174325430721612661955077783204615116119384765625p-249
; [HW: 1.5889174325430721612661955077783204615116119384765625p-249] 

; mpf : + 2652248329752969 -249
; mpfd: + 2652248329752969 -249 (1.75644e-075) class: Pos. norm. non-zero
; hwf : + 2652248329752969 -249 (1.75644e-075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010111 #b1110011001100011101001110010100001100001110111000101)))
(assert (= y (fp #b0 #b01100000110 #b1001011011000011010010101111100011010001000110001001)))
(assert (= r (fp #b0 #b01100000110 #b1001011011000011010010101111100011010001000110001001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
