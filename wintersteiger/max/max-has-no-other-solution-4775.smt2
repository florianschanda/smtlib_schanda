(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8571818796966230724621027547982521355152130126953125p-430 {- 3860403993990453 -430 (-6.69817e-130)}
; Y = 1.813525978264994620303696137852966785430908203125p-978 {+ 3663795292570448 -978 (7.09885e-295)}
; -1.8571818796966230724621027547982521355152130126953125p-430 M 1.813525978264994620303696137852966785430908203125p-978 == 1.813525978264994620303696137852966785430908203125p-978
; [HW: 1.813525978264994620303696137852966785430908203125p-978] 

; mpf : + 3663795292570448 -978
; mpfd: + 3663795292570448 -978 (7.09885e-295) class: Pos. norm. non-zero
; hwf : + 3663795292570448 -978 (7.09885e-295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001010001 #b1101101101110000010001011000110000000101010100110101)))
(assert (= y (fp #b0 #b00000101101 #b1101000001000011001111010000111100011000001101010000)))
(assert (= r (fp #b0 #b00000101101 #b1101000001000011001111010000111100011000001101010000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
