(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9807485577971000179076099811936728656291961669921875p-605 {+ 4416898839439171 -605 (1.4917e-182)}
; Y = -1.14226436255187824286849718191660940647125244140625p1003 {- 640701730176740 1003 (-9.79157e+301)}
; 1.9807485577971000179076099811936728656291961669921875p-605 M -1.14226436255187824286849718191660940647125244140625p1003 == 1.9807485577971000179076099811936728656291961669921875p-605
; [HW: 1.9807485577971000179076099811936728656291961669921875p-605] 

; mpf : + 4416898839439171 -605
; mpfd: + 4416898839439171 -605 (1.4917e-182) class: Pos. norm. non-zero
; hwf : + 4416898839439171 -605 (1.4917e-182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100010 #b1111101100010010010101100110010101010110011101000011)))
(assert (= y (fp #b1 #b11111101010 #b0010010001101011011011111111000010001011111011100100)))
(assert (= r (fp #b0 #b00110100010 #b1111101100010010010101100110010101010110011101000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
