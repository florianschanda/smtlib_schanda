(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 0.9048255884656679626232289592735469341278076171875p-1022 {+ 4074972183049272 -1023 (2.0133e-308)}
; Y = 1.73613053940377692896390726673416793346405029296875p-662 {+ 3315237222954892 -662 (9.07246e-200)}
; 0.9048255884656679626232289592735469341278076171875p-1022 M 1.73613053940377692896390726673416793346405029296875p-662 == 1.73613053940377692896390726673416793346405029296875p-662
; [HW: 1.73613053940377692896390726673416793346405029296875p-662] 

; mpf : + 3315237222954892 -662
; mpfd: + 3315237222954892 -662 (9.07246e-200) class: Pos. norm. non-zero
; hwf : + 3315237222954892 -662 (9.07246e-200) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1110011110100010101001100101011100001011010000111000)))
(assert (= y (fp #b0 #b00101101001 #b1011110001110011000011010001000001010011011110001100)))
(assert (= r (fp #b0 #b00101101001 #b1011110001110011000011010001000001010011011110001100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
