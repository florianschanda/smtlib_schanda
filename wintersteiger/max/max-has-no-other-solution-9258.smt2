(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.18471403733537528069064137525856494903564453125p-226 {- 831878069713696 -226 (-1.09859e-068)}
; Y = -1.3004300971079179038980555560556240379810333251953125p-575 {- 1353016873386101 -575 (-1.05157e-173)}
; -1.18471403733537528069064137525856494903564453125p-226 M -1.3004300971079179038980555560556240379810333251953125p-575 == -1.3004300971079179038980555560556240379810333251953125p-575
; [HW: -1.3004300971079179038980555560556240379810333251953125p-575] 

; mpf : - 1353016873386101 -575
; mpfd: - 1353016873386101 -575 (-1.05157e-173) class: Neg. norm. non-zero
; hwf : - 1353016873386101 -575 (-1.05157e-173) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011101 #b0010111101001001011010110100110101110111101100100000)))
(assert (= y (fp #b1 #b00111000000 #b0100110011101000111111001010000111010000000001110101)))
(assert (= r (fp #b1 #b00111000000 #b0100110011101000111111001010000111010000000001110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
