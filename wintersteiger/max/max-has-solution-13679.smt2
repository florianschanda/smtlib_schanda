(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.054847782705488956622730256640352308750152587890625p-824 {- 247012453754538 -824 (-9.42917e-249)}
; Y = 1.0440176443294604258227309401263482868671417236328125p893 {+ 198237846599885 893 (6.89436e+268)}
; -1.054847782705488956622730256640352308750152587890625p-824 M 1.0440176443294604258227309401263482868671417236328125p893 == 1.0440176443294604258227309401263482868671417236328125p893
; [HW: 1.0440176443294604258227309401263482868671417236328125p893] 

; mpf : + 198237846599885 893
; mpfd: + 198237846599885 893 (6.89436e+268) class: Pos. norm. non-zero
; hwf : + 198237846599885 893 (6.89436e+268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000111 #b0000111000001010100000010001100011111010011010101010)))
(assert (= y (fp #b0 #b11101111100 #b0000101101000100101111011000011011010111100011001101)))
(assert (= r (fp #b0 #b11101111100 #b0000101101000100101111011000011011010111100011001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
