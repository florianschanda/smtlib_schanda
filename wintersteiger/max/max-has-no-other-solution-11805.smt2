(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0934235871249102789448670591809786856174468994140625p-727 {+ 420742432163361 -727 (1.54875e-219)}
; Y = 1.159099960227586212369033091817982494831085205078125p165 {+ 716522521595618 165 (5.42088e+049)}
; 1.0934235871249102789448670591809786856174468994140625p-727 M 1.159099960227586212369033091817982494831085205078125p165 == 1.159099960227586212369033091817982494831085205078125p165
; [HW: 1.159099960227586212369033091817982494831085205078125p165] 

; mpf : + 716522521595618 165
; mpfd: + 716522521595618 165 (5.42088e+049) class: Pos. norm. non-zero
; hwf : + 716522521595618 165 (5.42088e+049) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101000 #b0001011111101010100110111011001101100000011000100001)))
(assert (= y (fp #b0 #b10010100100 #b0010100010111010110001100110010111111000111011100010)))
(assert (= r (fp #b0 #b10010100100 #b0010100010111010110001100110010111111000111011100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
