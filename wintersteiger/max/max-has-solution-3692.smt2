(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9687205762042641055131753091700375080108642578125p-739 {- 4362729626019656 -739 (-6.80796e-223)}
; Y = 1.6036961085191727693910479501937516033649444580078125p470 {+ 2718805569371965 470 (4.889e+141)}
; -1.9687205762042641055131753091700375080108642578125p-739 M 1.6036961085191727693910479501937516033649444580078125p470 == 1.6036961085191727693910479501937516033649444580078125p470
; [HW: 1.6036961085191727693910479501937516033649444580078125p470] 

; mpf : + 2718805569371965 470
; mpfd: + 2718805569371965 470 (4.889e+141) class: Pos. norm. non-zero
; hwf : + 2718805569371965 470 (4.889e+141) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011100 #b1111011111111110000100100101100111000010011101001000)))
(assert (= y (fp #b0 #b10111010101 #b1001101010001011110101000000001011001111111100111101)))
(assert (= r (fp #b0 #b10111010101 #b1001101010001011110101000000001011001111111100111101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
