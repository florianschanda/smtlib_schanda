(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6237420770905097722192067521973513066768646240234375p-836 {+ 2809084585960119 -836 (3.54357e-252)}
; Y = 1.2645799085931062055720985881634987890720367431640625p452 {+ 1191561977749633 452 (1.47063e+136)}
; 1.6237420770905097722192067521973513066768646240234375p-836 M 1.2645799085931062055720985881634987890720367431640625p452 == 1.2645799085931062055720985881634987890720367431640625p452
; [HW: 1.2645799085931062055720985881634987890720367431640625p452] 

; mpf : + 1191561977749633 452
; mpfd: + 1191561977749633 452 (1.47063e+136) class: Pos. norm. non-zero
; hwf : + 1191561977749633 452 (1.47063e+136) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111011 #b1001111110101101100011111000111000111110001010110111)))
(assert (= y (fp #b0 #b10111000011 #b0100001110111011100000100100011010010110000010000001)))
(assert (= r (fp #b0 #b10111000011 #b0100001110111011100000100100011010010110000010000001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
