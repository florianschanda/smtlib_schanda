(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.899951581659793387046875068335793912410736083984375p-621 {+ 4053021607814534 -621 (2.18331e-187)}
; Y = 1.2640926156692089410427115581114776432514190673828125p211 {+ 1189367405519149 211 (4.16014e+063)}
; 1.899951581659793387046875068335793912410736083984375p-621 M 1.2640926156692089410427115581114776432514190673828125p211 == 1.2640926156692089410427115581114776432514190673828125p211
; [HW: 1.2640926156692089410427115581114776432514190673828125p211] 

; mpf : + 1189367405519149 211
; mpfd: + 1189367405519149 211 (4.16014e+063) class: Pos. norm. non-zero
; hwf : + 1189367405519149 211 (4.16014e+063) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110010010 #b1110011001100011001110100001001100110110010110000110)))
(assert (= y (fp #b0 #b10011010010 #b0100001110011011100100101101101101101010000100101101)))
(assert (= r (fp #b0 #b10011010010 #b0100001110011011100100101101101101101010000100101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
