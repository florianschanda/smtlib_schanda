(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.692297136750056996135072040488012135028839111328125p-1022 {+ 3117829127097218 -1022 (3.76549e-308)}
; Y = -1.2872285312370117527080992658738978207111358642578125p-21 {- 1293562306249181 -21 (-6.13798e-007)}
; 1.692297136750056996135072040488012135028839111328125p-1022 M -1.2872285312370117527080992658738978207111358642578125p-21 == 1.692297136750056996135072040488012135028839111328125p-1022
; [HW: 1.692297136750056996135072040488012135028839111328125p-1022] 

; mpf : + 3117829127097218 -1022
; mpfd: + 3117829127097218 -1022 (3.76549e-308) class: Pos. norm. non-zero
; hwf : + 3117829127097218 -1022 (3.76549e-308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000001 #b1011000100111010011000101001100101110100101110000010)))
(assert (= y (fp #b1 #b01111101010 #b0100100110000111110011110001110000100100000111011101)))
(assert (= r (fp #b0 #b00000000001 #b1011000100111010011000101001100101110100101110000010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
