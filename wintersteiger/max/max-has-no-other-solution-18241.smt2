(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4916849301291008611514143922249786555767059326171875p-831 {+ 2214352068113107 -831 (1.04172e-250)}
; Y = 1.3902251310895679115020584504236467182636260986328125p1008 {+ 1757417754965581 1008 (3.81347e+303)}
; 1.4916849301291008611514143922249786555767059326171875p-831 M 1.3902251310895679115020584504236467182636260986328125p1008 == 1.3902251310895679115020584504236467182636260986328125p1008
; [HW: 1.3902251310895679115020584504236467182636260986328125p1008] 

; mpf : + 1757417754965581 1008
; mpfd: + 1757417754965581 1008 (3.81347e+303) class: Pos. norm. non-zero
; hwf : + 1757417754965581 1008 (3.81347e+303) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000000 #b0111110111011111000100000100011011010111001011010011)))
(assert (= y (fp #b0 #b11111101111 #b0110001111100101110010110101000000011011011001001101)))
(assert (= r (fp #b0 #b11111101111 #b0110001111100101110010110101000000011011011001001101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
