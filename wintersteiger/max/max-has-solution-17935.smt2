(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3419778465515650456296725678839720785617828369140625p263 {- 1540131302298593 263 (-1.989e+079)}
; Y = 1.4392595661081799551794802027870900928974151611328125p109 {+ 1978249218243725 109 (9.34133e+032)}
; -1.3419778465515650456296725678839720785617828369140625p263 M 1.4392595661081799551794802027870900928974151611328125p109 == 1.4392595661081799551794802027870900928974151611328125p109
; [HW: 1.4392595661081799551794802027870900928974151611328125p109] 

; mpf : + 1978249218243725 109
; mpfd: + 1978249218243725 109 (9.34133e+032) class: Pos. norm. non-zero
; hwf : + 1978249218243725 109 (9.34133e+032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000110 #b0101011110001011110111000011001011100101001111100001)))
(assert (= y (fp #b0 #b10001101100 #b0111000001110011010100001001111011100011110010001101)))
(assert (= r (fp #b0 #b10001101100 #b0111000001110011010100001001111011100011110010001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
