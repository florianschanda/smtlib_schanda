(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6663140480879772287181594947469420731067657470703125p-985 {+ 3000811698680741 -985 (5.09579e-297)}
; Y = 1.3549379764522251345937320365919731557369232177734375p-424 {+ 1598498538489879 -424 (3.12753e-128)}
; 1.6663140480879772287181594947469420731067657470703125p-985 M 1.3549379764522251345937320365919731557369232177734375p-424 == 1.3549379764522251345937320365919731557369232177734375p-424
; [HW: 1.3549379764522251345937320365919731557369232177734375p-424] 

; mpf : + 1598498538489879 -424
; mpfd: + 1598498538489879 -424 (3.12753e-128) class: Pos. norm. non-zero
; hwf : + 1598498538489879 -424 (3.12753e-128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100110 #b1010101010010011100011101011010101100111001110100101)))
(assert (= y (fp #b0 #b01001010111 #b0101101011011101001101110001100011111000100000010111)))
(assert (= r (fp #b0 #b01001010111 #b0101101011011101001101110001100011111000100000010111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
