(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.96019905809909733562790279393084347248077392578125p-1022 {+ 4324352120256596 -1023 (2.13651e-308)}
; Y = -1.2829161363537020523750697975629009306430816650390625p864 {- 1274141006259633 864 (-1.57803e+260)}
; 0.96019905809909733562790279393084347248077392578125p-1022 M -1.2829161363537020523750697975629009306430816650390625p864 == 0.96019905809909733562790279393084347248077392578125p-1022
; [HW: 0.96019905809909733562790279393084347248077392578125p-1022] 

; mpf : + 4324352120256596 -1023
; mpfd: + 4324352120256596 -1023 (2.13651e-308) class: Pos. denorm.
; hwf : + 4324352120256596 -1023 (2.13651e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1111010111001111100110110000000000101111100001010100)))
(assert (= y (fp #b1 #b11101011111 #b0100100001101101001100010010000100100110010110110001)))
(assert (= r (fp #b0 #b00000000000 #b1111010111001111100110110000000000101111100001010100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
