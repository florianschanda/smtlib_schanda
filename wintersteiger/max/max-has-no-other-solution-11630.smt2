(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8467155922892164454651720006950199604034423828125p604 {+ 3813268025922504 604 (1.22608e+182)}
; Y = 1.07259674087595957558960435562767088413238525390625p-216 {+ 326946655157284 -216 (1.01849e-065)}
; 1.8467155922892164454651720006950199604034423828125p604 M 1.07259674087595957558960435562767088413238525390625p-216 == 1.8467155922892164454651720006950199604034423828125p604
; [HW: 1.8467155922892164454651720006950199604034423828125p604] 

; mpf : + 3813268025922504 604
; mpfd: + 3813268025922504 604 (1.22608e+182) class: Pos. norm. non-zero
; hwf : + 3813268025922504 604 (1.22608e+182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011011 #b1101100011000010010110100110000111100101001111001000)))
(assert (= y (fp #b0 #b01100100111 #b0001001010010101101100110011001111011011110000100100)))
(assert (= r (fp #b0 #b11001011011 #b1101100011000010010110100110000111100101001111001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
