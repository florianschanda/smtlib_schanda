(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7589284608441015933522066916339099407196044921875p24 {+ 3417909933458360 24 (2.95099e+007)}
; Y = -1.2192765713858648712886179055203683674335479736328125p314 {- 987533885184461 314 (-4.06931e+094)}
; 1.7589284608441015933522066916339099407196044921875p24 M -1.2192765713858648712886179055203683674335479736328125p314 == 1.7589284608441015933522066916339099407196044921875p24
; [HW: 1.7589284608441015933522066916339099407196044921875p24] 

; mpf : + 3417909933458360 24
; mpfd: + 3417909933458360 24 (2.95099e+007) class: Pos. norm. non-zero
; hwf : + 3417909933458360 24 (2.95099e+007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010111 #b1100001001001001001000101011011101010100001110111000)))
(assert (= y (fp #b1 #b10100111001 #b0011100000100010100000100110011011100001100111001101)))
(assert (= r (fp #b0 #b10000010111 #b1100001001001001001000101011011101010100001110111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
