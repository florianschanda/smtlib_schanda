(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9070545744772939844580150747788138687610626220703125p-578 {- 4085010643620645 -578 (-1.92764e-174)}
; Y = -1.126765987278269154359122694586403667926788330078125p738 {- 570903253069666 738 (-1.62919e+222)}
; -1.9070545744772939844580150747788138687610626220703125p-578 M -1.126765987278269154359122694586403667926788330078125p738 == -1.9070545744772939844580150747788138687610626220703125p-578
; [HW: -1.9070545744772939844580150747788138687610626220703125p-578] 

; mpf : - 4085010643620645 -578
; mpfd: - 4085010643620645 -578 (-1.92764e-174) class: Neg. norm. non-zero
; hwf : - 4085010643620645 -578 (-1.92764e-174) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110111101 #b1110100000110100101110101000010100010001001100100101)))
(assert (= y (fp #b1 #b11011100001 #b0010000001110011101111000101100110011010111101100010)))
(assert (= r (fp #b1 #b00110111101 #b1110100000110100101110101000010100010001001100100101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
