(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.82836453318142222457254320033825933933258056640625p-327 {- 3730622202962788 -327 (-6.68735e-099)}
; Y = -1.9488623322494633693935384144424460828304290771484375p-239 {- 4273296045944583 -239 (-2.20603e-072)}
; -1.82836453318142222457254320033825933933258056640625p-327 M -1.9488623322494633693935384144424460828304290771484375p-239 == -1.82836453318142222457254320033825933933258056640625p-327
; [HW: -1.82836453318142222457254320033825933933258056640625p-327] 

; mpf : - 3730622202962788 -327
; mpfd: - 3730622202962788 -327 (-6.68735e-099) class: Neg. norm. non-zero
; hwf : - 3730622202962788 -327 (-6.68735e-099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010111000 #b1101010000001111101100101011001100101110001101100100)))
(assert (= y (fp #b1 #b01100010000 #b1111001011101000101001000100110101101010111100000111)))
(assert (= r (fp #b1 #b01010111000 #b1101010000001111101100101011001100101110001101100100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
