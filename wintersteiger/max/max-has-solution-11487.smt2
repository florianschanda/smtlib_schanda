(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8855494781322643671472860660287551581859588623046875p380 {+ 3988160299734603 380 (4.6434e+114)}
; Y = 1.599316141041420724633326244656927883625030517578125p191 {+ 2699079949471266 191 (5.01954e+057)}
; 1.8855494781322643671472860660287551581859588623046875p380 M 1.599316141041420724633326244656927883625030517578125p191 == 1.8855494781322643671472860660287551581859588623046875p380
; [HW: 1.8855494781322643671472860660287551581859588623046875p380] 

; mpf : + 3988160299734603 380
; mpfd: + 3988160299734603 380 (4.6434e+114) class: Pos. norm. non-zero
; hwf : + 3988160299734603 380 (4.6434e+114) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101111011 #b1110001010110011010111101101111110010001011001001011)))
(assert (= y (fp #b0 #b10010111110 #b1001100101101100110010000101100110111100111000100010)))
(assert (= r (fp #b0 #b10101111011 #b1110001010110011010111101101111110010001011001001011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
