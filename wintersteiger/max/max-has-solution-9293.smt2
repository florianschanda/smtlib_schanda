(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.84276784571155705094724908121861517429351806640625p-14 {+ 3795488955906404 -14 (0.000112474)}
; Y = -1.3030945085015102069547765495372004806995391845703125p635 {- 1365016315545445 635 (-1.8579e+191)}
; 1.84276784571155705094724908121861517429351806640625p-14 M -1.3030945085015102069547765495372004806995391845703125p635 == 1.84276784571155705094724908121861517429351806640625p-14
; [HW: 1.84276784571155705094724908121861517429351806640625p-14] 

; mpf : + 3795488955906404 -14
; mpfd: + 3795488955906404 -14 (0.000112474) class: Pos. norm. non-zero
; hwf : + 3795488955906404 -14 (0.000112474) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111110001 #b1101011110111111101000100010111101110011100101100100)))
(assert (= y (fp #b1 #b11001111010 #b0100110110010111100110100000100110011100011101100101)))
(assert (= r (fp #b0 #b01111110001 #b1101011110111111101000100010111101110011100101100100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
