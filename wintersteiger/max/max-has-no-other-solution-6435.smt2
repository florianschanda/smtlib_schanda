(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.774285339574655839811612167977727949619293212890625p-761 {- 3487071166786858 -761 (-1.46284e-229)}
; Y = -1.5971888271416492255383445808547548949718475341796875p-725 {- 2689499379384955 -725 (-9.04918e-219)}
; -1.774285339574655839811612167977727949619293212890625p-761 M -1.5971888271416492255383445808547548949718475341796875p-725 == -1.774285339574655839811612167977727949619293212890625p-761
; [HW: -1.774285339574655839811612167977727949619293212890625p-761] 

; mpf : - 3487071166786858 -761
; mpfd: - 3487071166786858 -761 (-1.46284e-229) class: Neg. norm. non-zero
; hwf : - 3487071166786858 -761 (-1.46284e-229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000110 #b1100011000110111100100000110001100111110110100101010)))
(assert (= y (fp #b1 #b00100101010 #b1001100011100001010111011111001000011100001001111011)))
(assert (= r (fp #b1 #b00100000110 #b1100011000110111100100000110001100111110110100101010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
