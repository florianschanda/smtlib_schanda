(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7431205802936202697850376353017054498195648193359375p7 {- 3346717568501695 7 (-223.119)}
; Y = -1.8018546136315070071987065603025257587432861328125p-572 {- 3611232139156168 -572 (-1.16563e-172)}
; -1.7431205802936202697850376353017054498195648193359375p7 M -1.8018546136315070071987065603025257587432861328125p-572 == -1.8018546136315070071987065603025257587432861328125p-572
; [HW: -1.8018546136315070071987065603025257587432861328125p-572] 

; mpf : - 3611232139156168 -572
; mpfd: - 3611232139156168 -572 (-1.16563e-172) class: Neg. norm. non-zero
; hwf : - 3611232139156168 -572 (-1.16563e-172) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000000110 #b1011111000111101001001100111110101011000011110111111)))
(assert (= y (fp #b1 #b00111000011 #b1100110101000110010110000000110110110001101011001000)))
(assert (= r (fp #b1 #b00111000011 #b1100110101000110010110000000110110110001101011001000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
