(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3754566251020599043641823300276882946491241455078125p-9 {- 1690906316903421 -9 (-0.00268644)}
; Y = -1.9856777030597398958633448273758403956890106201171875p-376 {- 4439097736207251 -376 (-1.29012e-113)}
; -1.3754566251020599043641823300276882946491241455078125p-9 M -1.9856777030597398958633448273758403956890106201171875p-376 == -1.9856777030597398958633448273758403956890106201171875p-376
; [HW: -1.9856777030597398958633448273758403956890106201171875p-376] 

; mpf : - 4439097736207251 -376
; mpfd: - 4439097736207251 -376 (-1.29012e-113) class: Neg. norm. non-zero
; hwf : - 4439097736207251 -376 (-1.29012e-113) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110110 #b0110000000011101111011001110010111100001001111111101)))
(assert (= y (fp #b1 #b01010000111 #b1111110001010101010111111011101100001001101110010011)))
(assert (= r (fp #b1 #b01010000111 #b1111110001010101010111111011101100001001101110010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
