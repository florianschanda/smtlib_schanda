(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6478209943142190230247479121317155659198760986328125p-754 {- 2917526388596301 -754 (-1.73897e-227)}
; Y = -1.5848659043934547607790364054380916059017181396484375p19 {- 2634001869088071 19 (-830926)}
; -1.6478209943142190230247479121317155659198760986328125p-754 M -1.5848659043934547607790364054380916059017181396484375p19 == -1.6478209943142190230247479121317155659198760986328125p-754
; [HW: -1.6478209943142190230247479121317155659198760986328125p-754] 

; mpf : - 2917526388596301 -754
; mpfd: - 2917526388596301 -754 (-1.73897e-227) class: Neg. norm. non-zero
; hwf : - 2917526388596301 -754 (-1.73897e-227) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100001101 #b1010010111010111100110001100000000111101111001001101)))
(assert (= y (fp #b1 #b10000010010 #b1001010110111001110001011001101111101010010101000111)))
(assert (= r (fp #b1 #b00100001101 #b1010010111010111100110001100000000111101111001001101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
