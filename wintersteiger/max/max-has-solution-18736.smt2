(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8550972101099063582552162188221700489521026611328125p911 {- 3851015476816525 911 (-3.21139e+274)}
; Y = -1.259719540247880242844757958664558827877044677734375p-600 {- 1169672824681190 -600 (-3.03582e-181)}
; -1.8550972101099063582552162188221700489521026611328125p911 M -1.259719540247880242844757958664558827877044677734375p-600 == -1.259719540247880242844757958664558827877044677734375p-600
; [HW: -1.259719540247880242844757958664558827877044677734375p-600] 

; mpf : - 1169672824681190 -600
; mpfd: - 1169672824681190 -600 (-3.03582e-181) class: Neg. norm. non-zero
; hwf : - 1169672824681190 -600 (-3.03582e-181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001110 #b1101101011100111101001101001100001010010101010001101)))
(assert (= y (fp #b1 #b00110100111 #b0100001001111100111110101101001101111111001011100110)))
(assert (= r (fp #b1 #b00110100111 #b0100001001111100111110101101001101111111001011100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
