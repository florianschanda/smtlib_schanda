(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.796563469868429852027702509076334536075592041015625p-51 {+ 3587402946076410 -51 (7.97834e-016)}
; Y = 1.6637026619558945572663333223317749798297882080078125p-693 {+ 2989051061069373 -693 (4.04845e-209)}
; 1.796563469868429852027702509076334536075592041015625p-51 M 1.6637026619558945572663333223317749798297882080078125p-693 == 1.796563469868429852027702509076334536075592041015625p-51
; [HW: 1.796563469868429852027702509076334536075592041015625p-51] 

; mpf : + 3587402946076410 -51
; mpfd: + 3587402946076410 -51 (7.97834e-016) class: Pos. norm. non-zero
; hwf : + 3587402946076410 -51 (7.97834e-016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111001100 #b1100101111101011100101010110010001000101111011111010)))
(assert (= y (fp #b0 #b00101001010 #b1010100111101000011010101110101101011110011000111101)))
(assert (= r (fp #b0 #b01111001100 #b1100101111101011100101010110010001000101111011111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
