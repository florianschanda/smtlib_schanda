(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6563307006968208678898690777714364230632781982421875p-622 {+ 2955850699090019 -622 (9.51677e-188)}
; Y = -1.328930468626797534170691506005823612213134765625p-843 {- 1481371135938448 -843 (-2.26577e-254)}
; 1.6563307006968208678898690777714364230632781982421875p-622 M -1.328930468626797534170691506005823612213134765625p-843 == 1.6563307006968208678898690777714364230632781982421875p-622
; [HW: 1.6563307006968208678898690777714364230632781982421875p-622] 

; mpf : + 2955850699090019 -622
; mpfd: + 2955850699090019 -622 (9.51677e-188) class: Pos. norm. non-zero
; hwf : + 2955850699090019 -622 (9.51677e-188) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110010001 #b1010100000000101010010011110111011011010100001100011)))
(assert (= y (fp #b1 #b00010110100 #b0101010000110100110010011000010101101000111110010000)))
(assert (= r (fp #b0 #b00110010001 #b1010100000000101010010011110111011011010100001100011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
