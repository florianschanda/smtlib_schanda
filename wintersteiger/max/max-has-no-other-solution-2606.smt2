(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -0.06469878606198253834236311377026140689849853515625p-1022 {- 291377428800068 -1023 (-1.4396e-309)}
; Y = -1.953054976619151172911870162351988255977630615234375p370 {- 4292178037565606 370 (-4.69692e+111)}
; -0.06469878606198253834236311377026140689849853515625p-1022 M -1.953054976619151172911870162351988255977630615234375p370 == -0.06469878606198253834236311377026140689849853515625p-1022
; [HW: -0.06469878606198253834236311377026140689849853515625p-1022] 

; mpf : - 291377428800068 -1023
; mpfd: - 291377428800068 -1023 (-1.4396e-309) class: Neg. denorm.
; hwf : - 291377428800068 -1023 (-1.4396e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0001000010010000000110011000001000111010001001000100)))
(assert (= y (fp #b1 #b10101110001 #b1111001111111011011010010011001111011110100010100110)))
(assert (= r (fp #b1 #b00000000000 #b0001000010010000000110011000001000111010001001000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
