(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.95574454158093846700694484752602875232696533203125p-818 {+ 4304290761325300 -818 (1.11886e-246)}
; Y = 1.746923698889671694445269167772494256496429443359375p-75 {+ 3363845291993718 -75 (4.62407e-023)}
; 1.95574454158093846700694484752602875232696533203125p-818 M 1.746923698889671694445269167772494256496429443359375p-75 == 1.746923698889671694445269167772494256496429443359375p-75
; [HW: 1.746923698889671694445269167772494256496429443359375p-75] 

; mpf : + 3363845291993718 -75
; mpfd: + 3363845291993718 -75 (4.62407e-023) class: Pos. norm. non-zero
; hwf : + 3363845291993718 -75 (4.62407e-023) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001101 #b1111010010101011101011001001110101101011101011110100)))
(assert (= y (fp #b0 #b01110110100 #b1011111100110110011001000011101101010110101001110110)))
(assert (= r (fp #b0 #b01110110100 #b1011111100110110011001000011101101010110101001110110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
