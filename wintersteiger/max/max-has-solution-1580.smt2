(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1129873161710290840886727892211638391017913818359375p-778 {+ 508849635005439 -778 (7.0009e-235)}
; Y = 1.4533767358151923332343358197249472141265869140625p-811 {+ 2041827298475752 -811 (1.06427e-244)}
; 1.1129873161710290840886727892211638391017913818359375p-778 M 1.4533767358151923332343358197249472141265869140625p-811 == 1.1129873161710290840886727892211638391017913818359375p-778
; [HW: 1.1129873161710290840886727892211638391017913818359375p-778] 

; mpf : + 508849635005439 -778
; mpfd: + 508849635005439 -778 (7.0009e-235) class: Pos. norm. non-zero
; hwf : + 508849635005439 -778 (7.0009e-235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110101 #b0001110011101100101111001001101111010001001111111111)))
(assert (= y (fp #b0 #b00011010100 #b0111010000010000011111110110110100010111111011101000)))
(assert (= r (fp #b0 #b00011110101 #b0001110011101100101111001001101111010001001111111111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
