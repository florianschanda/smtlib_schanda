(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.014964726713287301862465028534643352031707763671875p-410 {- 67395137649662 -410 (-3.83842e-124)}
; Y = 1.8090615492749335668776211605290882289409637451171875p-249 {+ 3643689291834387 -249 (1.99979e-075)}
; -1.014964726713287301862465028534643352031707763671875p-410 M 1.8090615492749335668776211605290882289409637451171875p-249 == 1.8090615492749335668776211605290882289409637451171875p-249
; [HW: 1.8090615492749335668776211605290882289409637451171875p-249] 

; mpf : + 3643689291834387 -249
; mpfd: + 3643689291834387 -249 (1.99979e-075) class: Pos. norm. non-zero
; hwf : + 3643689291834387 -249 (1.99979e-075) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100101 #b0000001111010100101110100111001111010011101111111110)))
(assert (= y (fp #b0 #b01100000110 #b1100111100011110101010000101111010010110010000010011)))
(assert (= r (fp #b0 #b01100000110 #b1100111100011110101010000101111010010110010000010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
