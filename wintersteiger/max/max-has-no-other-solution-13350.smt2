(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3372995103074523104424997654859907925128936767578125p-643 {- 1519061948932893 -643 (-3.66388e-194)}
; Y = 0.6196759739409374301288835340528748929500579833984375p-1022 {+ 2790772485330855 -1023 (1.37882e-308)}
; -1.3372995103074523104424997654859907925128936767578125p-643 M 0.6196759739409374301288835340528748929500579833984375p-1022 == 0.6196759739409374301288835340528748929500579833984375p-1022
; [HW: 0.6196759739409374301288835340528748929500579833984375p-1022] 

; mpf : + 2790772485330855 -1023
; mpfd: + 2790772485330855 -1023 (1.37882e-308) class: Pos. denorm.
; hwf : + 2790772485330855 -1023 (1.37882e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111100 #b0101011001011001010000101011110110111010001100011101)))
(assert (= y (fp #b0 #b00000000000 #b1001111010100011000101011010101000110001011110100111)))
(assert (= r (fp #b0 #b00000000000 #b1001111010100011000101011010101000110001011110100111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
