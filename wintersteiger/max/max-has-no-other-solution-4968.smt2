(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.153849678425045599539089380414225161075592041015625p991 {+ 692877354426106 991 (2.41477e+298)}
; Y = -1.5219085025002823119422146191936917603015899658203125p929 {- 2350466937381765 929 (-6.90644e+279)}
; 1.153849678425045599539089380414225161075592041015625p991 M -1.5219085025002823119422146191936917603015899658203125p929 == 1.153849678425045599539089380414225161075592041015625p991
; [HW: 1.153849678425045599539089380414225161075592041015625p991] 

; mpf : + 692877354426106 991
; mpfd: + 692877354426106 991 (2.41477e+298) class: Pos. norm. non-zero
; hwf : + 692877354426106 991 (2.41477e+298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011110 #b0010011101100010101100010100100101010101111011111010)))
(assert (= y (fp #b1 #b11110100000 #b1000010110011011110010111010110110111110001110000101)))
(assert (= r (fp #b0 #b11111011110 #b0010011101100010101100010100100101010101111011111010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
