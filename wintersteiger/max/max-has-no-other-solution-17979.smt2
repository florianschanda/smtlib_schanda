(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0029399973358190667482858771109022200107574462890625p-306 {+ 13240570906065 -306 (7.69301e-093)}
; Y = 1.793188332545526453287720869411714375019073486328125p959 {+ 3572202678886658 959 (8.73759e+288)}
; 1.0029399973358190667482858771109022200107574462890625p-306 M 1.793188332545526453287720869411714375019073486328125p959 == 1.793188332545526453287720869411714375019073486328125p959
; [HW: 1.793188332545526453287720869411714375019073486328125p959] 

; mpf : + 3572202678886658 959
; mpfd: + 3572202678886658 959 (8.73759e+288) class: Pos. norm. non-zero
; hwf : + 3572202678886658 959 (8.73759e+288) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011001101 #b0000000011000000101011001111100001101000010111010001)))
(assert (= y (fp #b0 #b11110111110 #b1100101100001110011000111111101111011010000100000010)))
(assert (= r (fp #b0 #b11110111110 #b1100101100001110011000111111101111011010000100000010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
