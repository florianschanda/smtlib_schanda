(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.357839322531293912987848671036772429943084716796875p220 {+ 1611565039610446 220 (2.28795e+066)}
; Y = 1.1863852288119558497925254414440132677555084228515625p-619 {+ 839404447024889 -619 (5.45329e-187)}
; 1.357839322531293912987848671036772429943084716796875p220 M 1.1863852288119558497925254414440132677555084228515625p-619 == 1.357839322531293912987848671036772429943084716796875p220
; [HW: 1.357839322531293912987848671036772429943084716796875p220] 

; mpf : + 1611565039610446 220
; mpfd: + 1611565039610446 220 (2.28795e+066) class: Pos. norm. non-zero
; hwf : + 1611565039610446 220 (2.28795e+066) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011011 #b0101101110011011010110111001101101111110101001001110)))
(assert (= y (fp #b0 #b00110010100 #b0010111110110110111100010011111000110100011011111001)))
(assert (= r (fp #b0 #b10011011011 #b0101101110011011010110111001101101111110101001001110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
