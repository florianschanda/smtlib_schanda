(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.695249891431662714325057095265947282314300537109375p-789 {+ 3131127151981014 -789 (5.20676e-238)}
; Y = 1.0687450879431910077954626103746704757213592529296875p-549 {+ 309600352444507 -549 (5.79971e-166)}
; 1.695249891431662714325057095265947282314300537109375p-789 M 1.0687450879431910077954626103746704757213592529296875p-549 == 1.0687450879431910077954626103746704757213592529296875p-549
; [HW: 1.0687450879431910077954626103746704757213592529296875p-549] 

; mpf : + 309600352444507 -549
; mpfd: + 309600352444507 -549 (5.79971e-166) class: Pos. norm. non-zero
; hwf : + 309600352444507 -549 (5.79971e-166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101010 #b1011000111111011111001011001101000111111000111010110)))
(assert (= y (fp #b0 #b00111011010 #b0001000110011001010001110011000001111010000001011011)))
(assert (= r (fp #b0 #b00111011010 #b0001000110011001010001110011000001111010000001011011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
