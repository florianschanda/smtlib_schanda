(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3878719168539352946112330755568109452724456787109375p216 {- 1746819820210863 216 (-1.4616e+065)}
; Y = -1.1664573613347852809596361112198792397975921630859375p-998 {- 749657310480415 -998 (-4.35445e-301)}
; -1.3878719168539352946112330755568109452724456787109375p216 M -1.1664573613347852809596361112198792397975921630859375p-998 == -1.1664573613347852809596361112198792397975921630859375p-998
; [HW: -1.1664573613347852809596361112198792397975921630859375p-998] 

; mpf : - 749657310480415 -998
; mpfd: - 749657310480415 -998 (-4.35445e-301) class: Neg. norm. non-zero
; hwf : - 749657310480415 -998 (-4.35445e-301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010111 #b0110001101001011100100101110110111101100101010101111)))
(assert (= y (fp #b1 #b00000011001 #b0010101010011100111100110001101100011100100000011111)))
(assert (= r (fp #b1 #b00000011001 #b0010101010011100111100110001101100011100100000011111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
