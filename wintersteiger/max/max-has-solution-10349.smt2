(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.492403920063214428637365926988422870635986328125p-946 {+ 2217590110912464 -946 (2.50906e-285)}
; Y = -1.3104896725422732206567388857365585863590240478515625p-318 {- 1398321173563769 -318 (-2.45412e-096)}
; 1.492403920063214428637365926988422870635986328125p-946 M -1.3104896725422732206567388857365585863590240478515625p-318 == 1.492403920063214428637365926988422870635986328125p-946
; [HW: 1.492403920063214428637365926988422870635986328125p-946] 

; mpf : + 2217590110912464 -946
; mpfd: + 2217590110912464 -946 (2.50906e-285) class: Pos. norm. non-zero
; hwf : + 2217590110912464 -946 (2.50906e-285) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001101 #b0111111000001110001011101110110100010111111111010000)))
(assert (= y (fp #b1 #b01011000001 #b0100111101111100010000000100110101010000100101111001)))
(assert (= r (fp #b0 #b00001001101 #b0111111000001110001011101110110100010111111111010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
