(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9842784232533137167564518676954321563243865966796875p954 {- 4432795940192443 954 (-3.02147e+287)}
; Y = -1.2752040699541848933762366868904791772365570068359375p23 {- 1239408946896511 23 (-1.06972e+007)}
; -1.9842784232533137167564518676954321563243865966796875p954 M -1.2752040699541848933762366868904791772365570068359375p23 == -1.2752040699541848933762366868904791772365570068359375p23
; [HW: -1.2752040699541848933762366868904791772365570068359375p23] 

; mpf : - 1239408946896511 23
; mpfd: - 1239408946896511 23 (-1.06972e+007) class: Neg. norm. non-zero
; hwf : - 1239408946896511 23 (-1.06972e+007) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111001 #b1111101111111001101010111011011000001000000010111011)))
(assert (= y (fp #b1 #b10000010110 #b0100011001110011110001100010000000101101111001111111)))
(assert (= r (fp #b1 #b10000010110 #b0100011001110011110001100010000000101101111001111111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
