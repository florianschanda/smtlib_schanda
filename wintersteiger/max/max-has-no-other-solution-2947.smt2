(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.818249126991705821865252801217138767242431640625p-480 {- 3685066463416080 -480 (-5.82446e-145)}
; Y = 1.1410070028915086925991317912121303379535675048828125p36 {+ 635039085678829 36 (7.84094e+010)}
; -1.818249126991705821865252801217138767242431640625p-480 M 1.1410070028915086925991317912121303379535675048828125p36 == 1.1410070028915086925991317912121303379535675048828125p36
; [HW: 1.1410070028915086925991317912121303379535675048828125p36] 

; mpf : + 635039085678829 36
; mpfd: + 635039085678829 36 (7.84094e+010) class: Pos. norm. non-zero
; hwf : + 635039085678829 36 (7.84094e+010) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011111 #b1101000101111000110001100101100001101000111100010000)))
(assert (= y (fp #b0 #b10000100011 #b0010010000011001000010001111000111101101000011101101)))
(assert (= r (fp #b0 #b10000100011 #b0010010000011001000010001111000111101101000011101101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
