(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.43328015584261425630074882064945995807647705078125p-349 {- 1951320348399828 -349 (-1.24986e-105)}
; Y = 1.0462841744300594992722608367330394685268402099609375p-366 {+ 208445390716367 -366 (6.96099e-111)}
; -1.43328015584261425630074882064945995807647705078125p-349 M 1.0462841744300594992722608367330394685268402099609375p-366 == 1.0462841744300594992722608367330394685268402099609375p-366
; [HW: 1.0462841744300594992722608367330394685268402099609375p-366] 

; mpf : + 208445390716367 -366
; mpfd: + 208445390716367 -366 (6.96099e-111) class: Pos. norm. non-zero
; hwf : + 208445390716367 -366 (6.96099e-111) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100010 #b0110111011101011011100101100001101011001100011010100)))
(assert (= y (fp #b0 #b01010010001 #b0000101111011001010001111001011101111111110111001111)))
(assert (= r (fp #b0 #b01010010001 #b0000101111011001010001111001011101111111110111001111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
