(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6607373481550478100388090751948766410350799560546875p269 {- 2975696474940843 269 (-1.57532e+081)}
; Y = -1.680159223250345501554647853481583297252655029296875p325 {- 3063164824382862 325 (-1.14842e+098)}
; -1.6607373481550478100388090751948766410350799560546875p269 M -1.680159223250345501554647853481583297252655029296875p325 == -1.6607373481550478100388090751948766410350799560546875p269
; [HW: -1.6607373481550478100388090751948766410350799560546875p269] 

; mpf : - 2975696474940843 269
; mpfd: - 2975696474940843 269 (-1.57532e+081) class: Neg. norm. non-zero
; hwf : - 2975696474940843 269 (-1.57532e+081) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001100 #b1010100100100110000101010011010110010010010110101011)))
(assert (= y (fp #b1 #b10101000100 #b1010111000011110111010100011001111101110110110001110)))
(assert (= r (fp #b1 #b10100001100 #b1010100100100110000101010011010110010010010110101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
