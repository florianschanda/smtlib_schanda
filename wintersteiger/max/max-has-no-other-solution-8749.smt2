(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1022406455400943769973309827037155628204345703125p743 {- 460450933156488 743 (-5.09992e+223)}
; Y = 1.0377677081121354785153698685462586581707000732421875p182 {+ 170090636180451 182 (6.3615e+054)}
; -1.1022406455400943769973309827037155628204345703125p743 M 1.0377677081121354785153698685462586581707000732421875p182 == 1.0377677081121354785153698685462586581707000732421875p182
; [HW: 1.0377677081121354785153698685462586581707000732421875p182] 

; mpf : + 170090636180451 182
; mpfd: + 170090636180451 182 (6.3615e+054) class: Pos. norm. non-zero
; hwf : + 170090636180451 182 (6.3615e+054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100110 #b0001101000101100011100010110010011101010101010001000)))
(assert (= y (fp #b0 #b10010110101 #b0000100110101011001001001111111100101111101111100011)))
(assert (= r (fp #b0 #b10010110101 #b0000100110101011001001001111111100101111101111100011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
