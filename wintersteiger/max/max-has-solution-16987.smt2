(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8549635068818493000009084425983019173145294189453125p945 {- 3850413331008469 945 (-5.51672e+284)}
; Y = -1.157881302015386193460244612651877105236053466796875p963 {- 711034172925262 963 (-9.02713e+289)}
; -1.8549635068818493000009084425983019173145294189453125p945 M -1.157881302015386193460244612651877105236053466796875p963 == -1.8549635068818493000009084425983019173145294189453125p945
; [HW: -1.8549635068818493000009084425983019173145294189453125p945] 

; mpf : - 3850413331008469 945
; mpfd: - 3850413331008469 945 (-5.51672e+284) class: Neg. norm. non-zero
; hwf : - 3850413331008469 945 (-5.51672e+284) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110000 #b1101101011011110111000110110110101010100101111010101)))
(assert (= y (fp #b1 #b11111000010 #b0010100001101010111010001011010011001110010101001110)))
(assert (= r (fp #b1 #b11110110000 #b1101101011011110111000110110110101010100101111010101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
