(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2410078366389807325020910866442136466503143310546875p552 {+ 1085402803280683 552 (1.8295e+166)}
; Y = 1.5565143043215219353925249379244633018970489501953125p-638 {+ 2506317613568757 -638 (1.36463e-192)}
; 1.2410078366389807325020910866442136466503143310546875p552 M 1.5565143043215219353925249379244633018970489501953125p-638 == 1.2410078366389807325020910866442136466503143310546875p552
; [HW: 1.2410078366389807325020910866442136466503143310546875p552] 

; mpf : + 1085402803280683 552
; mpfd: + 1085402803280683 552 (1.8295e+166) class: Pos. norm. non-zero
; hwf : + 1085402803280683 552 (1.8295e+166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100111 #b0011110110110010101100001000100001110001101100101011)))
(assert (= y (fp #b0 #b00110000001 #b1000111001110111101110001011000011010001001011110101)))
(assert (= r (fp #b0 #b11000100111 #b0011110110110010101100001000100001110001101100101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
