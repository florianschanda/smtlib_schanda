(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.96526398014628966848249547183513641357421875p-836 {+ 4347162501300992 -836 (4.28889e-252)}
; Y = -1.27824133456453292723153936094604432582855224609375p236 {- 1253087570663900 236 (-1.41154e+071)}
; 1.96526398014628966848249547183513641357421875p-836 M -1.27824133456453292723153936094604432582855224609375p236 == 1.96526398014628966848249547183513641357421875p-836
; [HW: 1.96526398014628966848249547183513641357421875p-836] 

; mpf : + 4347162501300992 -836
; mpfd: + 4347162501300992 -836 (4.28889e-252) class: Pos. norm. non-zero
; hwf : + 4347162501300992 -836 (4.28889e-252) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111011 #b1111011100011011100010100100101010111100001100000000)))
(assert (= y (fp #b1 #b10011101011 #b0100011100111010110100101111100001011001100111011100)))
(assert (= r (fp #b0 #b00010111011 #b1111011100011011100010100100101010111100001100000000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
