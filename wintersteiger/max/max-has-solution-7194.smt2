(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.681591069338886246242736888234503567218780517578125p-725 {+ 3069613285893666 -725 (9.52738e-219)}
; Y = 1.5671841189013786532768790493719279766082763671875p769 {+ 2554370186534712 769 (4.86616e+231)}
; 1.681591069338886246242736888234503567218780517578125p-725 M 1.5671841189013786532768790493719279766082763671875p769 == 1.5671841189013786532768790493719279766082763671875p769
; [HW: 1.5671841189013786532768790493719279766082763671875p769] 

; mpf : + 2554370186534712 769
; mpfd: + 2554370186534712 769 (4.86616e+231) class: Pos. norm. non-zero
; hwf : + 2554370186534712 769 (4.86616e+231) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101010 #b1010111001111100110000001001100000001110011000100010)))
(assert (= y (fp #b0 #b11100000000 #b1001000100110010111110100111100101111101111100111000)))
(assert (= r (fp #b0 #b11100000000 #b1001000100110010111110100111100101111101111100111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
