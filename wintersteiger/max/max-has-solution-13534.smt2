(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8026596229691882466994456990505568683147430419921875p-384 {- 3614857578909379 -384 (-4.57505e-116)}
; Y = 1.5850411650523879014684780486277304589748382568359375p900 {+ 2634791172926335 900 (1.33979e+271)}
; -1.8026596229691882466994456990505568683147430419921875p-384 M 1.5850411650523879014684780486277304589748382568359375p900 == 1.5850411650523879014684780486277304589748382568359375p900
; [HW: 1.5850411650523879014684780486277304589748382568359375p900] 

; mpf : + 2634791172926335 900
; mpfd: + 2634791172926335 900 (1.33979e+271) class: Pos. norm. non-zero
; hwf : + 2634791172926335 900 (1.33979e+271) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001111111 #b1100110101111011000110011101111001111000111011000011)))
(assert (= y (fp #b0 #b11110000011 #b1001010111000101010000011111111010110110101101111111)))
(assert (= r (fp #b0 #b11110000011 #b1001010111000101010000011111111010110110101101111111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
