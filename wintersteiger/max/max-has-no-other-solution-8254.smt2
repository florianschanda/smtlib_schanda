(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.75273496484831792230352220940403640270233154296875p-774 {- 3390016907199628 -774 (-1.764e-233)}
; Y = -1.6028831329235142533207181259058415889739990234375p-250 {- 2715144252782296 -250 (-8.85937e-076)}
; -1.75273496484831792230352220940403640270233154296875p-774 M -1.6028831329235142533207181259058415889739990234375p-250 == -1.75273496484831792230352220940403640270233154296875p-774
; [HW: -1.75273496484831792230352220940403640270233154296875p-774] 

; mpf : - 3390016907199628 -774
; mpfd: - 3390016907199628 -774 (-1.764e-233) class: Neg. norm. non-zero
; hwf : - 3390016907199628 -774 (-1.764e-233) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111001 #b1100000010110011001111010001100010010100010010001100)))
(assert (= y (fp #b1 #b01100000101 #b1001101001010110100011001000101100110111011011011000)))
(assert (= r (fp #b1 #b00011111001 #b1100000010110011001111010001100010010100010010001100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
