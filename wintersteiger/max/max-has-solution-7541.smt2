(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3319233644372641123254652484320104122161865234375p35 {+ 1494849940395224 35 (4.57645e+010)}
; Y = -1.128318506604351068034475247259251773357391357421875p777 {- 577895178528094 777 (-8.96888e+233)}
; 1.3319233644372641123254652484320104122161865234375p35 M -1.128318506604351068034475247259251773357391357421875p777 == 1.3319233644372641123254652484320104122161865234375p35
; [HW: 1.3319233644372641123254652484320104122161865234375p35] 

; mpf : + 1494849940395224 35
; mpfd: + 1494849940395224 35 (4.57645e+010) class: Pos. norm. non-zero
; hwf : + 1494849940395224 35 (4.57645e+010) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100010 #b0101010011111000111011011111101100001001010011011000)))
(assert (= y (fp #b1 #b11100001000 #b0010000011011001011110110100110101010110010101011110)))
(assert (= r (fp #b0 #b10000100010 #b0101010011111000111011011111101100001001010011011000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
