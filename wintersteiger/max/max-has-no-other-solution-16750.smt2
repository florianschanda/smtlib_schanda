(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.207130040170842466551448524114675819873809814453125p-31 {- 932830771730642 -31 (-5.62114e-010)}
; Y = -1.6634903036453569935559926307178102433681488037109375p-755 {- 2988094684261167 -755 (-8.77755e-228)}
; -1.207130040170842466551448524114675819873809814453125p-31 M -1.6634903036453569935559926307178102433681488037109375p-755 == -1.6634903036453569935559926307178102433681488037109375p-755
; [HW: -1.6634903036453569935559926307178102433681488037109375p-755] 

; mpf : - 2988094684261167 -755
; mpfd: - 2988094684261167 -755 (-8.77755e-228) class: Neg. norm. non-zero
; hwf : - 2988094684261167 -755 (-8.77755e-228) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111100000 #b0011010100000110011110010110110010001101100011010010)))
(assert (= y (fp #b1 #b00100001100 #b1010100111011010100000000010001101011110101100101111)))
(assert (= r (fp #b1 #b00100001100 #b1010100111011010100000000010001101011110101100101111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
