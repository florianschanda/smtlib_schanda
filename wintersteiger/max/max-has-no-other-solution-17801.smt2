(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6429897713501853129258734043105505406856536865234375p656 {- 2895768494655735 656 (-4.91261e+197)}
; Y = -1.0243004044053078960274660857976414263248443603515625p-236 {- 109439292224697 -236 (-9.27574e-072)}
; -1.6429897713501853129258734043105505406856536865234375p656 M -1.0243004044053078960274660857976414263248443603515625p-236 == -1.0243004044053078960274660857976414263248443603515625p-236
; [HW: -1.0243004044053078960274660857976414263248443603515625p-236] 

; mpf : - 109439292224697 -236
; mpfd: - 109439292224697 -236 (-9.27574e-072) class: Neg. norm. non-zero
; hwf : - 109439292224697 -236 (-9.27574e-072) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001111 #b1010010010011010111110100100011110011100100011110111)))
(assert (= y (fp #b1 #b01100010011 #b0000011000111000100011010010001000110011010010111001)))
(assert (= r (fp #b1 #b01100010011 #b0000011000111000100011010010001000110011010010111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
