(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.713897141122952660907685640268027782440185546875p-840 {- 3215106898742192 -840 (-2.3377e-253)}
; Y = 1.106866614828428740935351015650667250156402587890625p-2 {+ 481284446719658 -2 (0.276717)}
; -1.713897141122952660907685640268027782440185546875p-840 M 1.106866614828428740935351015650667250156402587890625p-2 == 1.106866614828428740935351015650667250156402587890625p-2
; [HW: 1.106866614828428740935351015650667250156402587890625p-2] 

; mpf : + 481284446719658 -2
; mpfd: + 481284446719658 -2 (0.276717) class: Pos. norm. non-zero
; hwf : + 481284446719658 -2 (0.276717) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110111 #b1011011011000001111101101000100111010100101110110000)))
(assert (= y (fp #b0 #b01111111101 #b0001101101011011100111000100011110111000111010101010)))
(assert (= r (fp #b0 #b01111111101 #b0001101101011011100111000100011110111000111010101010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
