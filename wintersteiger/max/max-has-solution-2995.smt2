(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3875649144573571902583353221416473388671875p-970 {- 1745437204332032 -970 (-1.39046e-292)}
; Y = 1.9097852023580095259802646978641860187053680419921875p-585 {+ 4097308298326723 -585 (1.50812e-176)}
; -1.3875649144573571902583353221416473388671875p-970 M 1.9097852023580095259802646978641860187053680419921875p-585 == 1.9097852023580095259802646978641860187053680419921875p-585
; [HW: 1.9097852023580095259802646978641860187053680419921875p-585] 

; mpf : + 4097308298326723 -585
; mpfd: + 4097308298326723 -585 (1.50812e-176) class: Pos. norm. non-zero
; hwf : + 4097308298326723 -585 (1.50812e-176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000110101 #b0110001100110111011101000100100010101011111000000000)))
(assert (= y (fp #b0 #b00110110110 #b1110100011100111101011101101101010000011001011000011)))
(assert (= r (fp #b0 #b00110110110 #b1110100011100111101011101101101010000011001011000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
