(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6322583708778297673092083641677163541316986083984375p600 {+ 2847438563487271 600 (6.77308e+180)}
; Y = -1.3726345454591946104727639976772479712963104248046875p-541 {- 1678196800075403 -541 (-1.9069e-163)}
; 1.6322583708778297673092083641677163541316986083984375p600 M -1.3726345454591946104727639976772479712963104248046875p-541 == 1.6322583708778297673092083641677163541316986083984375p600
; [HW: 1.6322583708778297673092083641677163541316986083984375p600] 

; mpf : + 2847438563487271 600
; mpfd: + 2847438563487271 600 (6.77308e+180) class: Pos. norm. non-zero
; hwf : + 2847438563487271 600 (6.77308e+180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010111 #b1010000111011011101011110100000110001010111000100111)))
(assert (= y (fp #b1 #b00111100010 #b0101111101100100111110100100001000011011011010001011)))
(assert (= r (fp #b0 #b11001010111 #b1010000111011011101011110100000110001010111000100111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
