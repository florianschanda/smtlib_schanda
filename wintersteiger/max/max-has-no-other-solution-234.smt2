(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3318261540026925526802870081155560910701751708984375p-176 {+ 1494412143518311 -176 (1.39049e-053)}
; Y = 1.101355157780093296793211266049183905124664306640625p-463 {+ 456463050810506 -463 (4.62423e-140)}
; 1.3318261540026925526802870081155560910701751708984375p-176 M 1.101355157780093296793211266049183905124664306640625p-463 == 1.3318261540026925526802870081155560910701751708984375p-176
; [HW: 1.3318261540026925526802870081155560910701751708984375p-176] 

; mpf : + 1494412143518311 -176
; mpfd: + 1494412143518311 -176 (1.39049e-053) class: Pos. norm. non-zero
; hwf : + 1494412143518311 -176 (1.39049e-053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001111 #b0101010011110010100011110000111101100110001001100111)))
(assert (= y (fp #b0 #b01000110000 #b0001100111110010011010010101111111110010010010001010)))
(assert (= r (fp #b0 #b01101001111 #b0101010011110010100011110000111101100110001001100111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
