(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0970033436060482312512931457604281604290008544921875p636 {- 436864222117891 636 (-3.12813e+191)}
; Y = 1.5227473218462159731956262476160190999507904052734375p172 {+ 2354244643875543 172 (9.11564e+051)}
; -1.0970033436060482312512931457604281604290008544921875p636 M 1.5227473218462159731956262476160190999507904052734375p172 == 1.5227473218462159731956262476160190999507904052734375p172
; [HW: 1.5227473218462159731956262476160190999507904052734375p172] 

; mpf : + 2354244643875543 172
; mpfd: + 2354244643875543 172 (9.11564e+051) class: Pos. norm. non-zero
; hwf : + 2354244643875543 172 (9.11564e+051) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111011 #b0001100011010101001101100000110001100100000000000011)))
(assert (= y (fp #b0 #b10010101011 #b1000010111010010110001001011101101100110101011010111)))
(assert (= r (fp #b0 #b10010101011 #b1000010111010010110001001011101101100110101011010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
