(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.369349752667660791161097222357057034969329833984375p591 {- 1663403408483462 591 (-1.10979e+178)}
; Y = 1.05558203069014400199421288562007248401641845703125p-183 {+ 250319212704628 -183 (8.60999e-056)}
; -1.369349752667660791161097222357057034969329833984375p591 M 1.05558203069014400199421288562007248401641845703125p-183 == 1.05558203069014400199421288562007248401641845703125p-183
; [HW: 1.05558203069014400199421288562007248401641845703125p-183] 

; mpf : + 250319212704628 -183
; mpfd: + 250319212704628 -183 (8.60999e-056) class: Pos. norm. non-zero
; hwf : + 250319212704628 -183 (8.60999e-056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001110 #b0101111010001101101101001001010001111110010010000110)))
(assert (= y (fp #b0 #b01101001000 #b0000111000111010100111111011110000001111001101110100)))
(assert (= r (fp #b0 #b01101001000 #b0000111000111010100111111011110000001111001101110100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
