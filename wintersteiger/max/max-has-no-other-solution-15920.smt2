(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.493198108516642808041297030285932123661041259765625p993 {+ 2221166817735386 993 (1.24998e+299)}
; Y = -1.4312237987590552545924538208055309951305389404296875p390 {- 1942059339404571 390 (-3.60916e+117)}
; 1.493198108516642808041297030285932123661041259765625p993 M -1.4312237987590552545924538208055309951305389404296875p390 == 1.493198108516642808041297030285932123661041259765625p993
; [HW: 1.493198108516642808041297030285932123661041259765625p993] 

; mpf : + 2221166817735386 993
; mpfd: + 2221166817735386 993 (1.24998e+299) class: Pos. norm. non-zero
; hwf : + 2221166817735386 993 (1.24998e+299) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100000 #b0111111001000010001110110011001010000111001011011010)))
(assert (= y (fp #b1 #b10110000101 #b0110111001100100101011101101000011101101010100011011)))
(assert (= r (fp #b0 #b11111100000 #b0111111001000010001110110011001010000111001011011010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
