(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1835541039654560169225305799045599997043609619140625p148 {+ 826654194221153 148 (4.22306e+044)}
; Y = -1.4313715061155021235350659480900503695011138916015625p-986 {- 1942724554200025 -986 (-2.18865e-297)}
; 1.1835541039654560169225305799045599997043609619140625p148 M -1.4313715061155021235350659480900503695011138916015625p-986 == 1.1835541039654560169225305799045599997043609619140625p148
; [HW: 1.1835541039654560169225305799045599997043609619140625p148] 

; mpf : + 826654194221153 148
; mpfd: + 826654194221153 148 (4.22306e+044) class: Pos. norm. non-zero
; hwf : + 826654194221153 148 (4.22306e+044) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010010011 #b0010111011111101011001101101100110010100000001100001)))
(assert (= y (fp #b1 #b00000100101 #b0110111001101110010111001110111100110001001111011001)))
(assert (= r (fp #b0 #b10010010011 #b0010111011111101011001101101100110010100000001100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
