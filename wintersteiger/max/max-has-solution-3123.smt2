(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.305520994040358484511443748488090932369232177734375p614 {- 1375944234914022 614 (-8.87567e+184)}
; Y = 1.6221213559253764291412380771362222731113433837890625p-27 {+ 2801785506724753 -27 (1.20857e-008)}
; -1.305520994040358484511443748488090932369232177734375p614 M 1.6221213559253764291412380771362222731113433837890625p-27 == 1.6221213559253764291412380771362222731113433837890625p-27
; [HW: 1.6221213559253764291412380771362222731113433837890625p-27] 

; mpf : + 2801785506724753 -27
; mpfd: + 2801785506724753 -27 (1.20857e-008) class: Pos. norm. non-zero
; hwf : + 2801785506724753 -27 (1.20857e-008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100101 #b0100111000110110100111111011010110100101000011100110)))
(assert (= y (fp #b0 #b01111100100 #b1001111101000011010110000101110111010111101110010001)))
(assert (= r (fp #b0 #b01111100100 #b1001111101000011010110000101110111010111101110010001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
