(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5550423223235634306860220021917484700679779052734375p840 {+ 2499688395991255 840 (1.14009e+253)}
; Y = 1.0680738099808728680528702170704491436481475830078125p-241 {+ 306577185263549 -241 (3.02254e-073)}
; 1.5550423223235634306860220021917484700679779052734375p840 M 1.0680738099808728680528702170704491436481475830078125p-241 == 1.5550423223235634306860220021917484700679779052734375p840
; [HW: 1.5550423223235634306860220021917484700679779052734375p840] 

; mpf : + 2499688395991255 840
; mpfd: + 2499688395991255 840 (1.14009e+253) class: Pos. norm. non-zero
; hwf : + 2499688395991255 840 (1.14009e+253) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000111 #b1000111000010111010000001110111001000110100011010111)))
(assert (= y (fp #b0 #b01100001110 #b0001000101101101010010010000001110010100111110111101)))
(assert (= r (fp #b0 #b11101000111 #b1000111000010111010000001110111001000110100011010111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
