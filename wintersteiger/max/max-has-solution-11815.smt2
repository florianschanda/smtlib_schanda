(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9544252904296663952976587097509764134883880615234375p147 {- 4298349382332023 147 (-3.48681e+044)}
; Y = 1.6957359795363036170101622701622545719146728515625p57 {+ 3133316298187944 57 (2.44381e+017)}
; -1.9544252904296663952976587097509764134883880615234375p147 M 1.6957359795363036170101622701622545719146728515625p57 == 1.6957359795363036170101622701622545719146728515625p57
; [HW: 1.6957359795363036170101622701622545719146728515625p57] 

; mpf : + 3133316298187944 57
; mpfd: + 3133316298187944 57 (2.44381e+017) class: Pos. norm. non-zero
; hwf : + 3133316298187944 57 (2.44381e+017) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010010010 #b1111010001010101001101110100000011011110111001110111)))
(assert (= y (fp #b0 #b10000111000 #b1011001000011011110000001100111011000010010010101000)))
(assert (= r (fp #b0 #b10000111000 #b1011001000011011110000001100111011000010010010101000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
