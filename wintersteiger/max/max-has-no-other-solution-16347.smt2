(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.776159584614728004225980839692056179046630859375p-886 {- 3495512016050928 -886 (-3.44275e-267)}
; Y = 1.11141175549670823130554708768613636493682861328125p-432 {+ 501753940539668 -432 (1.00211e-130)}
; -1.776159584614728004225980839692056179046630859375p-886 M 1.11141175549670823130554708768613636493682861328125p-432 == 1.11141175549670823130554708768613636493682861328125p-432
; [HW: 1.11141175549670823130554708768613636493682861328125p-432] 

; mpf : + 501753940539668 -432
; mpfd: + 501753940539668 -432 (1.00211e-130) class: Pos. norm. non-zero
; hwf : + 501753940539668 -432 (1.00211e-130) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001001 #b1100011010110010011001010000000001100101101011110000)))
(assert (= y (fp #b0 #b01001001111 #b0001110010000101011110110001011000111111100100010100)))
(assert (= r (fp #b0 #b01001001111 #b0001110010000101011110110001011000111111100100010100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
