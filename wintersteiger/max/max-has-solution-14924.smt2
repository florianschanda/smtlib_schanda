(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6500331619224650747668192707351408898830413818359375p-498 {- 2927489105812479 -498 (-2.0163e-150)}
; Y = -1.7235294236494211883581328947911970317363739013671875p691 {- 3258486842739123 691 (-1.7707e+208)}
; -1.6500331619224650747668192707351408898830413818359375p-498 M -1.7235294236494211883581328947911970317363739013671875p691 == -1.6500331619224650747668192707351408898830413818359375p-498
; [HW: -1.6500331619224650747668192707351408898830413818359375p-498] 

; mpf : - 2927489105812479 -498
; mpfd: - 2927489105812479 -498 (-2.0163e-150) class: Neg. norm. non-zero
; hwf : - 2927489105812479 -498 (-2.0163e-150) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000001101 #b1010011001101000100100101100001111000101101111111111)))
(assert (= y (fp #b1 #b11010110010 #b1011100100111001001110010110110001000100100110110011)))
(assert (= r (fp #b1 #b01000001101 #b1010011001101000100100101100001111000101101111111111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
