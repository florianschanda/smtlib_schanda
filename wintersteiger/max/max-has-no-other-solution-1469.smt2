(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.103609363332998416495911442325450479984283447265625p11 {- 466615090098586 11 (-2260.19)}
; Y = 1.48803521053039222721281475969590246677398681640625p969 {+ 2197915192288356 969 (7.4247e+291)}
; -1.103609363332998416495911442325450479984283447265625p11 M 1.48803521053039222721281475969590246677398681640625p969 == 1.48803521053039222721281475969590246677398681640625p969
; [HW: 1.48803521053039222721281475969590246677398681640625p969] 

; mpf : + 2197915192288356 969
; mpfd: + 2197915192288356 969 (7.4247e+291) class: Pos. norm. non-zero
; hwf : + 2197915192288356 969 (7.4247e+291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001010 #b0001101010000110001001001010101100010011000110011010)))
(assert (= y (fp #b0 #b11111001000 #b0111110011101111111000000010010010000110010001100100)))
(assert (= r (fp #b0 #b11111001000 #b0111110011101111111000000010010010000110010001100100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
