(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9751089204753669026359830240835435688495635986328125p384 {+ 4391500170898509 384 (7.78233e+115)}
; Y = 1.819143585554282793737002066336572170257568359375p238 {+ 3689094746665200 238 (8.03537e+071)}
; 1.9751089204753669026359830240835435688495635986328125p384 M 1.819143585554282793737002066336572170257568359375p238 == 1.9751089204753669026359830240835435688495635986328125p384
; [HW: 1.9751089204753669026359830240835435688495635986328125p384] 

; mpf : + 4391500170898509 384
; mpfd: + 4391500170898509 384 (7.78233e+115) class: Pos. norm. non-zero
; hwf : + 4391500170898509 384 (7.78233e+115) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101111111 #b1111100110100000101111001111101101111010110001001101)))
(assert (= y (fp #b0 #b10011101101 #b1101000110110011011001001101111010101111000011110000)))
(assert (= r (fp #b0 #b10101111111 #b1111100110100000101111001111101101111010110001001101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
