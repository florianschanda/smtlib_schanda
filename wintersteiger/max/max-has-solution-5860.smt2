(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.7283492433886455952318783602095209062099456787109375p882 {- 3280193381120687 882 (-5.57298e+265)}
; Y = -1.9957270530782429407423705924884416162967681884765625p112 {- 4484355985205897 112 (-1.03624e+034)}
; -1.7283492433886455952318783602095209062099456787109375p882 M -1.9957270530782429407423705924884416162967681884765625p112 == -1.9957270530782429407423705924884416162967681884765625p112
; [HW: -1.9957270530782429407423705924884416162967681884765625p112] 

; mpf : - 4484355985205897 112
; mpfd: - 4484355985205897 112 (-1.03624e+034) class: Neg. norm. non-zero
; hwf : - 4484355985205897 112 (-1.03624e+034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110001 #b1011101001110101000110001001010001101011101010101111)))
(assert (= y (fp #b1 #b10001101111 #b1111111011100111111101111101100010110110101010001001)))
(assert (= r (fp #b1 #b10001101111 #b1111111011100111111101111101100010110110101010001001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
