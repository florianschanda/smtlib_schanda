(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7624396888373448089026851448579691350460052490234375p-23 {+ 3433723098540343 -23 (2.10099e-007)}
; Y = -1.2047770492883376203252510094898752868175506591796875p766 {- 922233842868987 766 (-4.6761e+230)}
; 1.7624396888373448089026851448579691350460052490234375p-23 M -1.2047770492883376203252510094898752868175506591796875p766 == 1.7624396888373448089026851448579691350460052490234375p-23
; [HW: 1.7624396888373448089026851448579691350460052490234375p-23] 

; mpf : + 3433723098540343 -23
; mpfd: + 3433723098540343 -23 (2.10099e-007) class: Pos. norm. non-zero
; hwf : + 3433723098540343 -23 (2.10099e-007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101000 #b1100001100101111001111110101100010111010100100110111)))
(assert (= y (fp #b1 #b11011111101 #b0011010001101100010001001100100110101010001011111011)))
(assert (= r (fp #b0 #b01111101000 #b1100001100101111001111110101100010111010100100110111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
