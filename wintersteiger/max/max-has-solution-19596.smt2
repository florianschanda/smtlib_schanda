(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3441876921655546706091399755678139626979827880859375p479 {- 1550083562182303 479 (-2.09811e+144)}
; Y = -1.4634084988678452976529342777212150394916534423828125p-1014 {- 2087006342821549 -1014 (-8.33585e-306)}
; -1.3441876921655546706091399755678139626979827880859375p479 M -1.4634084988678452976529342777212150394916534423828125p-1014 == -1.4634084988678452976529342777212150394916534423828125p-1014
; [HW: -1.4634084988678452976529342777212150394916534423828125p-1014] 

; mpf : - 2087006342821549 -1014
; mpfd: - 2087006342821549 -1014 (-8.33585e-306) class: Neg. norm. non-zero
; hwf : - 2087006342821549 -1014 (-8.33585e-306) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011110 #b0101100000011100101011110100000110001001011010011111)))
(assert (= y (fp #b1 #b00000001001 #b0111011010100001111100000111101101010011011010101101)))
(assert (= r (fp #b1 #b00000001001 #b0111011010100001111100000111101101010011011010101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
