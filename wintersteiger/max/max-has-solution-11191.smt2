(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7155548298688734210060147233889438211917877197265625p-183 {- 3222572465160617 -183 (-1.39931e-055)}
; Y = 1.157954351495901423874101965338923037052154541015625p379 {+ 711363158538490 379 (1.4258e+114)}
; -1.7155548298688734210060147233889438211917877197265625p-183 M 1.157954351495901423874101965338923037052154541015625p379 == 1.157954351495901423874101965338923037052154541015625p379
; [HW: 1.157954351495901423874101965338923037052154541015625p379] 

; mpf : + 711363158538490 379
; mpfd: + 711363158538490 379 (1.4258e+114) class: Pos. norm. non-zero
; hwf : + 711363158538490 379 (1.4258e+114) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001000 #b1011011100101110100110011111000011001000000110101001)))
(assert (= y (fp #b0 #b10101111010 #b0010100001101111101100100100010111101111100011111010)))
(assert (= r (fp #b0 #b10101111010 #b0010100001101111101100100100010111101111100011111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
