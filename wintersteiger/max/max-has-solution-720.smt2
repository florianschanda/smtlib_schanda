(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.319179222854300892464607386500574648380279541015625p223 {- 1437455429111034 223 (-1.77825e+067)}
; Y = 1.5080255218810332262791007451596669852733612060546875p494 {+ 2287943551038123 494 (7.71306e+148)}
; -1.319179222854300892464607386500574648380279541015625p223 M 1.5080255218810332262791007451596669852733612060546875p494 == 1.5080255218810332262791007451596669852733612060546875p494
; [HW: 1.5080255218810332262791007451596669852733612060546875p494] 

; mpf : + 2287943551038123 494
; mpfd: + 2287943551038123 494 (7.71306e+148) class: Pos. norm. non-zero
; hwf : + 2287943551038123 494 (7.71306e+148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011110 #b0101000110110101101110101100001110111000110011111010)))
(assert (= y (fp #b0 #b10111101101 #b1000001000001101111101011110101000000011001010101011)))
(assert (= r (fp #b0 #b10111101101 #b1000001000001101111101011110101000000011001010101011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
