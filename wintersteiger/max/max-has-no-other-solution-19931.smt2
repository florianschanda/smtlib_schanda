(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.92916766528548233594619887298904359340667724609375p707 {+ 4184599151144412 707 (1.2989e+213)}
; Y = -1.613193211164327234286020029685460031032562255859375p-601 {- 2761576717305782 -601 (-1.94383e-181)}
; 1.92916766528548233594619887298904359340667724609375p707 M -1.613193211164327234286020029685460031032562255859375p-601 == 1.92916766528548233594619887298904359340667724609375p707
; [HW: 1.92916766528548233594619887298904359340667724609375p707] 

; mpf : + 4184599151144412 707
; mpfd: + 4184599151144412 707 (1.2989e+213) class: Pos. norm. non-zero
; hwf : + 4184599151144412 707 (1.2989e+213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000010 #b1110110111011101111011101001111011100110110111011100)))
(assert (= y (fp #b1 #b00110100110 #b1001110011111010001110101111010000010100011110110110)))
(assert (= r (fp #b0 #b11011000010 #b1110110111011101111011101001111011100110110111011100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
