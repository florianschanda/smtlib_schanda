(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.539045681371205009924096884788013994693756103515625p44 {+ 2427645929759034 44 (2.70752e+013)}
; Y = -1.559692117101428632253146133734844624996185302734375p-494 {- 2520629210020198 -494 (-3.04945e-149)}
; 1.539045681371205009924096884788013994693756103515625p44 M -1.559692117101428632253146133734844624996185302734375p-494 == 1.539045681371205009924096884788013994693756103515625p44
; [HW: 1.539045681371205009924096884788013994693756103515625p44] 

; mpf : + 2427645929759034 44
; mpfd: + 2427645929759034 44 (2.70752e+013) class: Pos. norm. non-zero
; hwf : + 2427645929759034 44 (2.70752e+013) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101011 #b1000100111111110111001011101010010001010000100111010)))
(assert (= y (fp #b1 #b01000010001 #b1000111101000111111110111000101011000111100101100110)))
(assert (= r (fp #b0 #b10000101011 #b1000100111111110111001011101010010001010000100111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
