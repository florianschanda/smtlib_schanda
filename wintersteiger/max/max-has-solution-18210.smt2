(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6710722813426748256659948310698382556438446044921875p788 {+ 3022240876193539 788 (2.72039e+237)}
; Y = 1.325205854738127353442678213468752801418304443359375p-270 {+ 1464596966217334 -270 (6.98529e-082)}
; 1.6710722813426748256659948310698382556438446044921875p788 M 1.325205854738127353442678213468752801418304443359375p-270 == 1.6710722813426748256659948310698382556438446044921875p788
; [HW: 1.6710722813426748256659948310698382556438446044921875p788] 

; mpf : + 3022240876193539 788
; mpfd: + 3022240876193539 788 (2.72039e+237) class: Pos. norm. non-zero
; hwf : + 3022240876193539 788 (2.72039e+237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100010011 #b1010101111001011011001001001110110011110011100000011)))
(assert (= y (fp #b0 #b01011110001 #b0101001101000000101100001101111010010001011001110110)))
(assert (= r (fp #b0 #b11100010011 #b1010101111001011011001001001110110011110011100000011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
