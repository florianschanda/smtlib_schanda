(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2467827295120834651953600769047625362873077392578125p-464 {+ 1111410608672093 -464 (2.61742e-140)}
; Y = -1.5403847729747257577770369607605971395969390869140625p-687 {- 2433676662205665 -687 (-2.39896e-207)}
; 1.2467827295120834651953600769047625362873077392578125p-464 M -1.5403847729747257577770369607605971395969390869140625p-687 == 1.2467827295120834651953600769047625362873077392578125p-464
; [HW: 1.2467827295120834651953600769047625362873077392578125p-464] 

; mpf : + 1111410608672093 -464
; mpfd: + 1111410608672093 -464 (2.61742e-140) class: Pos. norm. non-zero
; hwf : + 1111410608672093 -464 (2.61742e-140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000101111 #b0011111100101101001001110010100001111000110101011101)))
(assert (= y (fp #b1 #b00101010000 #b1000101001010110101010000000111100101110110011100001)))
(assert (= r (fp #b0 #b01000101111 #b0011111100101101001001110010100001111000110101011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
