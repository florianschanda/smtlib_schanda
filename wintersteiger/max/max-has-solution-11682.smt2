(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7188898903939431317411390409688465297222137451171875p67 {+ 3237592242498579 67 (2.53663e+020)}
; Y = 1.38989740861633581658907132805325090885162353515625p580 {+ 1755941824157252 580 (5.50022e+174)}
; 1.7188898903939431317411390409688465297222137451171875p67 M 1.38989740861633581658907132805325090885162353515625p580 == 1.38989740861633581658907132805325090885162353515625p580
; [HW: 1.38989740861633581658907132805325090885162353515625p580] 

; mpf : + 1755941824157252 580
; mpfd: + 1755941824157252 580 (5.50022e+174) class: Pos. norm. non-zero
; hwf : + 1755941824157252 580 (5.50022e+174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000010 #b1011100000001001001010101111100010101010110000010011)))
(assert (= y (fp #b0 #b11001000011 #b0110001111010000010100010000101011001101011001000100)))
(assert (= r (fp #b0 #b11001000011 #b0110001111010000010100010000101011001101011001000100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
