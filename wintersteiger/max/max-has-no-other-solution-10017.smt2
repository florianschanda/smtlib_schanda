(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.92298055121614819285014164051972329616546630859375p263 {- 4156734866527260 263 (-2.85012e+079)}
; Y = 1.88002145634826778319848017417825758457183837890625p482 {+ 3963264302888100 482 (2.34758e+145)}
; -1.92298055121614819285014164051972329616546630859375p263 M 1.88002145634826778319848017417825758457183837890625p482 == 1.88002145634826778319848017417825758457183837890625p482
; [HW: 1.88002145634826778319848017417825758457183837890625p482] 

; mpf : + 3963264302888100 482
; mpfd: + 3963264302888100 482 (2.34758e+145) class: Pos. norm. non-zero
; hwf : + 3963264302888100 482 (2.34758e+145) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000110 #b1110110001001000011101000001001001010001010000011100)))
(assert (= y (fp #b0 #b10111100001 #b1110000101001001000101100000111011001011010010100100)))
(assert (= r (fp #b0 #b10111100001 #b1110000101001001000101100000111011001011010010100100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
