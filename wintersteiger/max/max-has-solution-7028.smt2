(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.930976285761516475503185574780218303203582763671875p693 {- 4192744453646334 693 (-7.93531e+208)}
; Y = 1.6107285204779138165775975721771828830242156982421875p821 {+ 2750476737248867 821 (2.25242e+247)}
; -1.930976285761516475503185574780218303203582763671875p693 M 1.6107285204779138165775975721771828830242156982421875p821 == 1.6107285204779138165775975721771828830242156982421875p821
; [HW: 1.6107285204779138165775975721771828830242156982421875p821] 

; mpf : + 2750476737248867 821
; mpfd: + 2750476737248867 821 (2.25242e+247) class: Pos. norm. non-zero
; hwf : + 2750476737248867 821 (2.25242e+247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110100 #b1110111001010100011101100011110010110010011111111110)))
(assert (= y (fp #b0 #b11100110100 #b1001110001011000101101000100111000101111111001100011)))
(assert (= r (fp #b0 #b11100110100 #b1001110001011000101101000100111000101111111001100011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
