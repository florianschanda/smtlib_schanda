(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4596727579284785036861649132333695888519287109375p-720 {+ 2070182061319064 -720 (2.64642e-217)}
; Y = -1.6893593749505544376887655744212679564952850341796875p713 {- 3104598624151675 713 (-7.27962e+214)}
; 1.4596727579284785036861649132333695888519287109375p-720 M -1.6893593749505544376887655744212679564952850341796875p713 == 1.4596727579284785036861649132333695888519287109375p-720
; [HW: 1.4596727579284785036861649132333695888519287109375p-720] 

; mpf : + 2070182061319064 -720
; mpfd: + 2070182061319064 -720 (2.64642e-217) class: Pos. norm. non-zero
; hwf : + 2070182061319064 -720 (2.64642e-217) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101111 #b0111010110101101000111010010011000101010001110011000)))
(assert (= y (fp #b1 #b11011001000 #b1011000001111001110110110010001010011010100001111011)))
(assert (= r (fp #b0 #b00100101111 #b0111010110101101000111010010011000101010001110011000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
