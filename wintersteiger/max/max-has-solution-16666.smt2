(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.725984493166806021946513283182866871356964111328125p-224 {+ 3269543492902786 -224 (6.40203e-068)}
; Y = 1.72320083418868552627145618316717445850372314453125p252 {+ 3257007007366196 252 (1.24708e+076)}
; 1.725984493166806021946513283182866871356964111328125p-224 M 1.72320083418868552627145618316717445850372314453125p252 == 1.72320083418868552627145618316717445850372314453125p252
; [HW: 1.72320083418868552627145618316717445850372314453125p252] 

; mpf : + 3257007007366196 252
; mpfd: + 3257007007366196 252 (1.24708e+076) class: Pos. norm. non-zero
; hwf : + 3257007007366196 252 (1.24708e+076) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011111 #b1011100111011010000111101010011110001101111110000010)))
(assert (= y (fp #b0 #b10011111011 #b1011100100100011101100001001101101000111110000110100)))
(assert (= r (fp #b0 #b10011111011 #b1011100100100011101100001001101101000111110000110100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
