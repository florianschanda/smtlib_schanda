(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8411767527227864693628589520812965929508209228515625p-104 {- 3788323310115065 -104 (-9.0777e-032)}
; Y = -1.8678054040867291263339211582206189632415771484375p361 {- 3908248094475096 361 (-8.77324e+108)}
; -1.8411767527227864693628589520812965929508209228515625p-104 M -1.8678054040867291263339211582206189632415771484375p361 == -1.8411767527227864693628589520812965929508209228515625p-104
; [HW: -1.8411767527227864693628589520812965929508209228515625p-104] 

; mpf : - 3788323310115065 -104
; mpfd: - 3788323310115065 -104 (-9.0777e-032) class: Neg. norm. non-zero
; hwf : - 3788323310115065 -104 (-9.0777e-032) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010111 #b1101011101010111010111000001001100011001100011111001)))
(assert (= y (fp #b1 #b10101101000 #b1101111000101000011111101011010111011000001101011000)))
(assert (= r (fp #b1 #b01110010111 #b1101011101010111010111000001001100011001100011111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
