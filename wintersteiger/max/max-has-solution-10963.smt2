(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8032670172543741049508980722748674452304840087890625p845 {- 3617593039585809 845 (-4.23064e+254)}
; Y = -1.634029642438811880111870777909643948078155517578125p334 {- 2855415661429282 334 (-5.71845e+100)}
; -1.8032670172543741049508980722748674452304840087890625p845 M -1.634029642438811880111870777909643948078155517578125p334 == -1.634029642438811880111870777909643948078155517578125p334
; [HW: -1.634029642438811880111870777909643948078155517578125p334] 

; mpf : - 2855415661429282 334
; mpfd: - 2855415661429282 334 (-5.71845e+100) class: Neg. norm. non-zero
; hwf : - 2855415661429282 334 (-5.71845e+100) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001100 #b1100110110100010111010000100000100010000001000010001)))
(assert (= y (fp #b1 #b10101001101 #b1010001001001111110001000100001011111000001000100010)))
(assert (= r (fp #b1 #b10101001101 #b1010001001001111110001000100001011111000001000100010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
