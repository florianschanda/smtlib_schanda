(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1775599490936878854796532323234714567661285400390625p-797 {+ 799658920574257 -797 (1.41279e-240)}
; Y = 0.9587539390715462683800751619855873286724090576171875p-1022 {+ 4317843882742611 -1023 (2.1333e-308)}
; 1.1775599490936878854796532323234714567661285400390625p-797 M 0.9587539390715462683800751619855873286724090576171875p-1022 == 1.1775599490936878854796532323234714567661285400390625p-797
; [HW: 1.1775599490936878854796532323234714567661285400390625p-797] 

; mpf : + 799658920574257 -797
; mpfd: + 799658920574257 -797 (1.41279e-240) class: Pos. norm. non-zero
; hwf : + 799658920574257 -797 (1.41279e-240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100010 #b0010110101110100100100011001111001101111110100110001)))
(assert (= y (fp #b0 #b00000000000 #b1111010101110000111001011110110100111001001101010011)))
(assert (= r (fp #b0 #b00011100010 #b0010110101110100100100011001111001101111110100110001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
