(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.169174664294353238602752753649838268756866455078125p-202 {+ 761894955076578 -202 (1.81895e-061)}
; Y = 1.0693255715208656031478540171519853174686431884765625p504 {+ 312214618068617 504 (5.60051e+151)}
; 1.169174664294353238602752753649838268756866455078125p-202 M 1.0693255715208656031478540171519853174686431884765625p504 == 1.0693255715208656031478540171519853174686431884765625p504
; [HW: 1.0693255715208656031478540171519853174686431884765625p504] 

; mpf : + 312214618068617 504
; mpfd: + 312214618068617 504 (5.60051e+151) class: Pos. norm. non-zero
; hwf : + 312214618068617 504 (5.60051e+151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100110101 #b0010101101001111000001111110001001110100101111100010)))
(assert (= y (fp #b0 #b10111110111 #b0001000110111111010100100001011001110101011010001001)))
(assert (= r (fp #b0 #b10111110111 #b0001000110111111010100100001011001110101011010001001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
