(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -0.5514316205136553517007769187330268323421478271484375p-1022 {- 2483427240665607 -1023 (-1.22698e-308)}
; Y = -1.0501539678027802526827372275874949991703033447265625p73 {- 225873390707753 73 (-9.91842e+021)}
; -0.5514316205136553517007769187330268323421478271484375p-1022 M -1.0501539678027802526827372275874949991703033447265625p73 == -0.5514316205136553517007769187330268323421478271484375p-1022
; [HW: -0.5514316205136553517007769187330268323421478271484375p-1022] 

; mpf : - 2483427240665607 -1023
; mpfd: - 2483427240665607 -1023 (-1.22698e-308) class: Neg. denorm.
; hwf : - 2483427240665607 -1023 (-1.22698e-308) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1000110100101010100111110110100000010110001000000111)))
(assert (= y (fp #b1 #b10001001000 #b0000110011010110111000111111001101111010010000101001)))
(assert (= r (fp #b1 #b00000000000 #b1000110100101010100111110110100000010110001000000111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
