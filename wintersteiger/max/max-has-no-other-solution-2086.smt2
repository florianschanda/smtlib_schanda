(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.137155547225218388263101587654091417789459228515625p-187 {+ 617693671375290 -187 (5.7971e-057)}
; Y = -1.8322066190485311043545380016439594328403472900390625p577 {- 3747925419442225 577 (-9.06321e+173)}
; 1.137155547225218388263101587654091417789459228515625p-187 M -1.8322066190485311043545380016439594328403472900390625p577 == 1.137155547225218388263101587654091417789459228515625p-187
; [HW: 1.137155547225218388263101587654091417789459228515625p-187] 

; mpf : + 617693671375290 -187
; mpfd: + 617693671375290 -187 (5.7971e-057) class: Pos. norm. non-zero
; hwf : + 617693671375290 -187 (5.7971e-057) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101000100 #b0010001100011100101000000011110111001100000110111010)))
(assert (= y (fp #b1 #b11001000000 #b1101010100001011011111100011010001010100000000110001)))
(assert (= r (fp #b0 #b01101000100 #b0010001100011100101000000011110111001100000110111010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
