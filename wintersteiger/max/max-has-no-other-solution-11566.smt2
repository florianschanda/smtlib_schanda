(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.76029131424420715035239481949247419834136962890625p-103 {+ 3424047679523236 -103 (1.73578e-031)}
; Y = -1.091915502308307139855969580821692943572998046875p575 {- 413950621945264 575 (-1.35032e+173)}
; 1.76029131424420715035239481949247419834136962890625p-103 M -1.091915502308307139855969580821692943572998046875p575 == 1.76029131424420715035239481949247419834136962890625p-103
; [HW: 1.76029131424420715035239481949247419834136962890625p-103] 

; mpf : + 3424047679523236 -103
; mpfd: + 3424047679523236 -103 (1.73578e-031) class: Pos. norm. non-zero
; hwf : + 3424047679523236 -103 (1.73578e-031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011000 #b1100001010100010011100111001101000011100100110100100)))
(assert (= y (fp #b1 #b11000111110 #b0001011110000111110001100011110001101000110110110000)))
(assert (= r (fp #b0 #b01110011000 #b1100001010100010011100111001101000011100100110100100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
