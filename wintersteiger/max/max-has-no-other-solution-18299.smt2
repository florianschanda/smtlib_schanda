(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -0.5763231479668224910284379802760668098926544189453125p-1022 {- 2595528714428373 -1023 (-1.28236e-308)}
; Y = -1.9830684610162603309646556226653046905994415283203125p1020 {- 4427346754712517 1020 (-2.22809e+307)}
; -0.5763231479668224910284379802760668098926544189453125p-1022 M -1.9830684610162603309646556226653046905994415283203125p1020 == -0.5763231479668224910284379802760668098926544189453125p-1022
; [HW: -0.5763231479668224910284379802760668098926544189453125p-1022] 

; mpf : - 2595528714428373 -1023
; mpfd: - 2595528714428373 -1023 (-1.28236e-308) class: Neg. denorm.
; hwf : - 2595528714428373 -1023 (-1.28236e-308) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1001001110001001111010011111000001110001111111010101)))
(assert (= y (fp #b1 #b11111111011 #b1111101110101010010111111110100111001011001111000101)))
(assert (= r (fp #b1 #b00000000000 #b1001001110001001111010011111000001110001111111010101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
