(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.652454929040240383386617395444773137569427490234375p979 {- 2938395775301670 979 (-8.44297e+294)}
; Y = -1.492750689160178279024648873019032180309295654296875p740 {- 2219151820088334 740 (-8.63344e+222)}
; -1.652454929040240383386617395444773137569427490234375p979 M -1.492750689160178279024648873019032180309295654296875p740 == -1.492750689160178279024648873019032180309295654296875p740
; [HW: -1.492750689160178279024648873019032180309295654296875p740] 

; mpf : - 2219151820088334 740
; mpfd: - 2219151820088334 740 (-8.63344e+222) class: Neg. norm. non-zero
; hwf : - 2219151820088334 740 (-8.63344e+222) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010010 #b1010011100000111010010010100011001010111100000100110)))
(assert (= y (fp #b1 #b11011100011 #b0111111000100100111010001011111100000110010000001110)))
(assert (= r (fp #b1 #b11011100011 #b0111111000100100111010001011111100000110010000001110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
