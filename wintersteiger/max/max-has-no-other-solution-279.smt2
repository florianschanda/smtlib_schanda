(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.858183301492533079368740800418891012668609619140625p808 {+ 3864913996817354 808 (3.17194e+243)}
; Y = 1.3187943386222904518234599891002289950847625732421875p557 {+ 1435722064627171 557 (6.22135e+167)}
; 1.858183301492533079368740800418891012668609619140625p808 M 1.3187943386222904518234599891002289950847625732421875p557 == 1.858183301492533079368740800418891012668609619140625p808
; [HW: 1.858183301492533079368740800418891012668609619140625p808] 

; mpf : + 3864913996817354 808
; mpfd: + 3864913996817354 808 (3.17194e+243) class: Pos. norm. non-zero
; hwf : + 3864913996817354 808 (3.17194e+243) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100100111 #b1101101110110001111001101001110111100010001111001010)))
(assert (= y (fp #b0 #b11000101100 #b0101000110011100100000010111101010001000010111100011)))
(assert (= r (fp #b0 #b11100100111 #b1101101110110001111001101001110111100010001111001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
