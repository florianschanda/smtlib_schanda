(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.65263836865120339325585518963634967803955078125p-10 {- 2939221913865248 -10 (-0.0016139)}
; Y = -1.056900262263428924569552691536955535411834716796875p515 {- 256255999926862 515 (-1.13366e+155)}
; -1.65263836865120339325585518963634967803955078125p-10 M -1.056900262263428924569552691536955535411834716796875p515 == -1.65263836865120339325585518963634967803955078125p-10
; [HW: -1.65263836865120339325585518963634967803955078125p-10] 

; mpf : - 2939221913865248 -10
; mpfd: - 2939221913865248 -10 (-0.0016139) class: Neg. norm. non-zero
; hwf : - 2939221913865248 -10 (-0.0016139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111110101 #b1010011100010011010011101110000101111000110000100000)))
(assert (= y (fp #b1 #b11000000010 #b0000111010010001000000111111110110001110001001001110)))
(assert (= r (fp #b1 #b01111110101 #b1010011100010011010011101110000101111000110000100000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
