(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.98521903618196748908530935295857489109039306640625p834 {+ 4437032084227428 834 (2.27418e+251)}
; Y = 1.9987261061148660079567207503714598715305328369140625p371 {+ 4497862519344097 371 (9.6135e+111)}
; 1.98521903618196748908530935295857489109039306640625p834 M 1.9987261061148660079567207503714598715305328369140625p371 == 1.98521903618196748908530935295857489109039306640625p834
; [HW: 1.98521903618196748908530935295857489109039306640625p834] 

; mpf : + 4437032084227428 834
; mpfd: + 4437032084227428 834 (2.27418e+251) class: Pos. norm. non-zero
; hwf : + 4437032084227428 834 (2.27418e+251) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000001 #b1111110000110111010100001001001111001100010101100100)))
(assert (= y (fp #b0 #b10101110010 #b1111111110101100100000111001101101101100101111100001)))
(assert (= r (fp #b0 #b11101000001 #b1111110000110111010100001001001111001100010101100100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
