(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.616034227495793285100944558507762849330902099609375p880 {+ 2774371517397526 880 (1.30271e+265)}
; Y = -1.2445558035956676423694489130866713821887969970703125p-640 {- 1101381425944741 -640 (-2.72783e-193)}
; 1.616034227495793285100944558507762849330902099609375p880 M -1.2445558035956676423694489130866713821887969970703125p-640 == 1.616034227495793285100944558507762849330902099609375p880
; [HW: 1.616034227495793285100944558507762849330902099609375p880] 

; mpf : + 2774371517397526 880
; mpfd: + 2774371517397526 880 (1.30271e+265) class: Pos. norm. non-zero
; hwf : + 2774371517397526 880 (1.30271e+265) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101111 #b1001110110110100011010110100110001001111101000010110)))
(assert (= y (fp #b1 #b00101111111 #b0011111010011011001101011000101001111101100010100101)))
(assert (= r (fp #b0 #b11101101111 #b1001110110110100011010110100110001001111101000010110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
