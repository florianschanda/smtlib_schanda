(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8711042930617816093530336729600094258785247802734375p939 {+ 3923104969633879 939 (8.69489e+282)}
; Y = 1.2789489366085107224790817781467922031879425048828125p821 {+ 1256274326965485 821 (1.78846e+247)}
; 1.8711042930617816093530336729600094258785247802734375p939 M 1.2789489366085107224790817781467922031879425048828125p821 == 1.8711042930617816093530336729600094258785247802734375p939
; [HW: 1.8711042930617816093530336729600094258785247802734375p939] 

; mpf : + 3923104969633879 939
; mpfd: + 3923104969633879 939 (8.69489e+282) class: Pos. norm. non-zero
; hwf : + 3923104969633879 939 (8.69489e+282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101010 #b1101111100000000101100001110001000011011000001010111)))
(assert (= y (fp #b0 #b11100110100 #b0100011101101001001100101000111111111100110011101101)))
(assert (= r (fp #b0 #b11110101010 #b1101111100000000101100001110001000011011000001010111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
