(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.74719338657655054447559450636617839336395263671875p-249 {- 3365059857359852 -249 (-1.9314e-075)}
; Y = -1.677058828238901622142975611495785415172576904296875p96 {- 3049201886564622 96 (-1.3287e+029)}
; -1.74719338657655054447559450636617839336395263671875p-249 M -1.677058828238901622142975611495785415172576904296875p96 == -1.74719338657655054447559450636617839336395263671875p-249
; [HW: -1.74719338657655054447559450636617839336395263671875p-249] 

; mpf : - 3365059857359852 -249
; mpfd: - 3365059857359852 -249 (-1.9314e-075) class: Neg. norm. non-zero
; hwf : - 3365059857359852 -249 (-1.9314e-075) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000110 #b1011111101001000000100001101011100100010001111101100)))
(assert (= y (fp #b1 #b10001011111 #b1010110101010011101110100011010011000001000100001110)))
(assert (= r (fp #b1 #b01100000110 #b1011111101001000000100001101011100100010001111101100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
