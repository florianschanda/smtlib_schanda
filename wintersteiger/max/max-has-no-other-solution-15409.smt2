(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.094917821769218591043681954033672809600830078125p-927 {- 427471866750672 -927 (-9.65107e-280)}
; Y = 1.0190320253165376929160856889211572706699371337890625p-883 {+ 85712622123665 -883 (1.58016e-266)}
; -1.094917821769218591043681954033672809600830078125p-927 M 1.0190320253165376929160856889211572706699371337890625p-883 == 1.0190320253165376929160856889211572706699371337890625p-883
; [HW: 1.0190320253165376929160856889211572706699371337890625p-883] 

; mpf : + 85712622123665 -883
; mpfd: + 85712622123665 -883 (1.58016e-266) class: Pos. norm. non-zero
; hwf : + 85712622123665 -883 (1.58016e-266) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100000 #b0001100001001100100010001100110001001110011011010000)))
(assert (= y (fp #b0 #b00010001100 #b0000010011011111010010000110011001001111101010010001)))
(assert (= r (fp #b0 #b00010001100 #b0000010011011111010010000110011001001111101010010001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
