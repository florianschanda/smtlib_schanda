(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3380011036688037595610012431279756128787994384765625p734 {- 1522221644533641 734 (-1.20913e+221)}
; Y = 1.833296698587416617698409027070738375186920166015625p-855 {+ 3752834701247354 -855 (7.63109e-258)}
; -1.3380011036688037595610012431279756128787994384765625p734 M 1.833296698587416617698409027070738375186920166015625p-855 == 1.833296698587416617698409027070738375186920166015625p-855
; [HW: 1.833296698587416617698409027070738375186920166015625p-855] 

; mpf : + 3752834701247354 -855
; mpfd: + 3752834701247354 -855 (7.63109e-258) class: Pos. norm. non-zero
; hwf : + 3752834701247354 -855 (7.63109e-258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011101 #b0101011010000111001111011000011001000100111110001001)))
(assert (= y (fp #b0 #b00010101000 #b1101010101010010111011101011010001001100001101111010)))
(assert (= r (fp #b0 #b00010101000 #b1101010101010010111011101011010001001100001101111010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
