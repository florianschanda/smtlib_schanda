(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7390671335944289932484707605908624827861785888671875p248 {+ 3328462467457651 248 (7.86602e+074)}
; Y = -1.9244475141217980418417710097855888307094573974609375p942 {- 4163341480122511 942 (-7.15421e+283)}
; 1.7390671335944289932484707605908624827861785888671875p248 M -1.9244475141217980418417710097855888307094573974609375p942 == 1.7390671335944289932484707605908624827861785888671875p248
; [HW: 1.7390671335944289932484707605908624827861785888671875p248] 

; mpf : + 3328462467457651 248
; mpfd: + 3328462467457651 248 (7.86602e+074) class: Pos. norm. non-zero
; hwf : + 3328462467457651 248 (7.86602e+074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011110111 #b1011110100110011100000001111000001010110001001110011)))
(assert (= y (fp #b1 #b11110101101 #b1110110010101000100101111010000000000101100010001111)))
(assert (= r (fp #b0 #b10011110111 #b1011110100110011100000001111000001010110001001110011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
