(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.419707079510741376537907854071818292140960693359375p823 {- 1890192646889334 823 (-7.94118e+247)}
; Y = -1.4653767954789866934106612461619079113006591796875p-727 {- 2095870762706040 -727 (-2.07559e-219)}
; -1.419707079510741376537907854071818292140960693359375p823 M -1.4653767954789866934106612461619079113006591796875p-727 == -1.4653767954789866934106612461619079113006591796875p-727
; [HW: -1.4653767954789866934106612461619079113006591796875p-727] 

; mpf : - 2095870762706040 -727
; mpfd: - 2095870762706040 -727 (-2.07559e-219) class: Neg. norm. non-zero
; hwf : - 2095870762706040 -727 (-2.07559e-219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110110 #b0110101101110001111011000101010001100101111101110110)))
(assert (= y (fp #b1 #b00100101000 #b0111011100100010111011110000010011100110010001111000)))
(assert (= r (fp #b1 #b00100101000 #b0111011100100010111011110000010011100110010001111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
