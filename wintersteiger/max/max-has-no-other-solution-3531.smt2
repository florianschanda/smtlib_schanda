(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9615123247715968712867606882355175912380218505859375p846 {+ 4330266547553503 846 (9.2038e+254)}
; Y = -1.27084044495871495428218622691929340362548828125p25 {- 1219756926992928 25 (-4.26423e+007)}
; 1.9615123247715968712867606882355175912380218505859375p846 M -1.27084044495871495428218622691929340362548828125p25 == 1.9615123247715968712867606882355175912380218505859375p846
; [HW: 1.9615123247715968712867606882355175912380218505859375p846] 

; mpf : + 4330266547553503 846
; mpfd: + 4330266547553503 846 (9.2038e+254) class: Pos. norm. non-zero
; hwf : + 4330266547553503 846 (9.2038e+254) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001101 #b1111011000100101101010111111010110011000010011011111)))
(assert (= y (fp #b1 #b10000011000 #b0100010101010101110011001010010110001000001000100000)))
(assert (= r (fp #b0 #b11101001101 #b1111011000100101101010111111010110011000010011011111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
