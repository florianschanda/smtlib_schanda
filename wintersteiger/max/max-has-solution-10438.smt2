(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.622085946505786413496252862387336790561676025390625p640 {+ 2801626036875882 640 (7.40067e+192)}
; Y = -1.2077557647008492214268926545628346502780914306640625p-378 {- 935648784490817 -378 (-1.96174e-114)}
; 1.622085946505786413496252862387336790561676025390625p640 M -1.2077557647008492214268926545628346502780914306640625p-378 == 1.622085946505786413496252862387336790561676025390625p640
; [HW: 1.622085946505786413496252862387336790561676025390625p640] 

; mpf : + 2801626036875882 640
; mpfd: + 2801626036875882 640 (7.40067e+192) class: Pos. norm. non-zero
; hwf : + 2801626036875882 640 (7.40067e+192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111111 #b1001111101000001000001100100101110001011001001101010)))
(assert (= y (fp #b1 #b01010000101 #b0011010100101111011110110101011011110010000101000001)))
(assert (= r (fp #b0 #b11001111111 #b1001111101000001000001100100101110001011001001101010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
