(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.123047780357698588460380051401443779468536376953125p659 {+ 554157937767698 659 (2.68637e+198)}
; Y = -1.9233126479974502753833576207398436963558197021484375p-935 {- 4158230497467783 -935 (-6.62223e-282)}
; 1.123047780357698588460380051401443779468536376953125p659 M -1.9233126479974502753833576207398436963558197021484375p-935 == 1.123047780357698588460380051401443779468536376953125p659
; [HW: 1.123047780357698588460380051401443779468536376953125p659] 

; mpf : + 554157937767698 659
; mpfd: + 554157937767698 659 (2.68637e+198) class: Pos. norm. non-zero
; hwf : + 554157937767698 659 (2.68637e+198) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010010 #b0001111110000000000011110011000001111011010100010010)))
(assert (= y (fp #b1 #b00001011000 #b1110110001011110001101111011101100100001110110000111)))
(assert (= r (fp #b0 #b11010010010 #b0001111110000000000011110011000001111011010100010010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
