(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.537232970755952887742523671477101743221282958984375p163 {+ 2419482206907654 163 (1.79733e+049)}
; Y = -1.8955255475870955716999333162675611674785614013671875p405 {- 4033088522414003 405 (-1.56631e+122)}
; 1.537232970755952887742523671477101743221282958984375p163 M -1.8955255475870955716999333162675611674785614013671875p405 == 1.537232970755952887742523671477101743221282958984375p163
; [HW: 1.537232970755952887742523671477101743221282958984375p163] 

; mpf : + 2419482206907654 163
; mpfd: + 2419482206907654 163 (1.79733e+049) class: Pos. norm. non-zero
; hwf : + 2419482206907654 163 (1.79733e+049) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100010 #b1000100110001000000110011001011110111010110100000110)))
(assert (= y (fp #b1 #b10110010100 #b1110010101000001001010011000101110011110011110110011)))
(assert (= r (fp #b0 #b10010100010 #b1000100110001000000110011001011110111010110100000110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
