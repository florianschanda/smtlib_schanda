(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.08057613028937371524307309300638735294342041015625p-936 {- 362882630346180 -936 (-1.86028e-282)}
; Y = 1.41309297514400800110934142139740288257598876953125p-566 {+ 1860405368927924 -566 (5.8505e-171)}
; -1.08057613028937371524307309300638735294342041015625p-936 M 1.41309297514400800110934142139740288257598876953125p-566 == 1.41309297514400800110934142139740288257598876953125p-566
; [HW: 1.41309297514400800110934142139740288257598876953125p-566] 

; mpf : + 1860405368927924 -566
; mpfd: + 1860405368927924 -566 (5.8505e-171) class: Pos. norm. non-zero
; hwf : + 1860405368927924 -566 (5.8505e-171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010111 #b0001010010100000101000110010010001101110010111000100)))
(assert (= y (fp #b0 #b00111001001 #b0110100111000000011101100001001001110011011010110100)))
(assert (= r (fp #b0 #b00111001001 #b0110100111000000011101100001001001110011011010110100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
