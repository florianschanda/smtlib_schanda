(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9181134423773771313648239811300300061702728271484375p-319 {+ 4134815356974599 -319 (1.796e-096)}
; Y = 1.379740490224049320744370561442337930202484130859375p-755 {+ 1710199130270518 -755 (7.28032e-228)}
; 1.9181134423773771313648239811300300061702728271484375p-319 M 1.379740490224049320744370561442337930202484130859375p-755 == 1.9181134423773771313648239811300300061702728271484375p-319
; [HW: 1.9181134423773771313648239811300300061702728271484375p-319] 

; mpf : + 4134815356974599 -319
; mpfd: + 4134815356974599 -319 (1.796e-096) class: Pos. norm. non-zero
; hwf : + 4134815356974599 -319 (1.796e-096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011000000 #b1110101100001001011110111000100100000111011000000111)))
(assert (= y (fp #b0 #b00100001100 #b0110000100110110101011000011101001111010101100110110)))
(assert (= r (fp #b0 #b01011000000 #b1110101100001001011110111000100100000111011000000111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
