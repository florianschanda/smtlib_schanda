(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2185025339481783124284675068338401615619659423828125p-437 {+ 984047930468525 -437 (3.43335e-132)}
; Y = 1.0806459920711113387170598798547871410846710205078125p-801 {+ 363197259840381 -801 (8.10321e-242)}
; 1.2185025339481783124284675068338401615619659423828125p-437 M 1.0806459920711113387170598798547871410846710205078125p-801 == 1.2185025339481783124284675068338401615619659423828125p-437
; [HW: 1.2185025339481783124284675068338401615619659423828125p-437] 

; mpf : + 984047930468525 -437
; mpfd: + 984047930468525 -437 (3.43335e-132) class: Pos. norm. non-zero
; hwf : + 984047930468525 -437 (3.43335e-132) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001001010 #b0011011111101111110010000011010101100110100010101101)))
(assert (= y (fp #b0 #b00011011110 #b0001010010100101001101110011101001111111101101111101)))
(assert (= r (fp #b0 #b01001001010 #b0011011111101111110010000011010101100110100010101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
