(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.735883047484934049720095572411082684993743896484375p675 {- 3314122618441414 675 (-2.72124e+203)}
; Y = -1.406936766406401861928543439717032015323638916015625p-867 {- 1832680269551226 -867 (-1.42978e-261)}
; -1.735883047484934049720095572411082684993743896484375p675 M -1.406936766406401861928543439717032015323638916015625p-867 == -1.406936766406401861928543439717032015323638916015625p-867
; [HW: -1.406936766406401861928543439717032015323638916015625p-867] 

; mpf : - 1832680269551226 -867
; mpfd: - 1832680269551226 -867 (-1.42978e-261) class: Neg. norm. non-zero
; hwf : - 1832680269551226 -867 (-1.42978e-261) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100010 #b1011110001100010110101001101011010100000111011000110)))
(assert (= y (fp #b1 #b00010011100 #b0110100000101101000000100000011101000001011001111010)))
(assert (= r (fp #b1 #b00010011100 #b0110100000101101000000100000011101000001011001111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
