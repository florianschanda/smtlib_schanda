(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5900885187386217811678079669945873320102691650390625p138 {- 2657522433106865 138 (-5.54065e+041)}
; Y = -1.8106405993226213357871756670647300779819488525390625p562 {- 3650800701040753 562 (-2.73332e+169)}
; -1.5900885187386217811678079669945873320102691650390625p138 M -1.8106405993226213357871756670647300779819488525390625p562 == -1.5900885187386217811678079669945873320102691650390625p138
; [HW: -1.5900885187386217811678079669945873320102691650390625p138] 

; mpf : - 2657522433106865 138
; mpfd: - 2657522433106865 138 (-5.54065e+041) class: Neg. norm. non-zero
; hwf : - 2657522433106865 138 (-5.54065e+041) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001001 #b1001011100010000000010101000100110111010001110110001)))
(assert (= y (fp #b1 #b11000110001 #b1100111110000110001001000110111011100110100001110001)))
(assert (= r (fp #b1 #b10010001001 #b1001011100010000000010101000100110111010001110110001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
