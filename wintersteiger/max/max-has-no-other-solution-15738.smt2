(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.235773434418414584712309078895486891269683837890625p-669 {+ 1061829151390634 -669 (5.04512e-202)}
; Y = 1.895826356841348481196973807527683675289154052734375p941 {+ 4034443246859366 941 (3.52391e+283)}
; 1.235773434418414584712309078895486891269683837890625p-669 M 1.895826356841348481196973807527683675289154052734375p941 == 1.895826356841348481196973807527683675289154052734375p941
; [HW: 1.895826356841348481196973807527683675289154052734375p941] 

; mpf : + 4034443246859366 941
; mpfd: + 4034443246859366 941 (3.52391e+283) class: Pos. norm. non-zero
; hwf : + 4034443246859366 941 (3.52391e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101100010 #b0011110001011011101001011101011000010111101110101010)))
(assert (= y (fp #b0 #b11110101100 #b1110010101010100111000000100100110000111010001100110)))
(assert (= r (fp #b0 #b11110101100 #b1110010101010100111000000100100110000111010001100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
