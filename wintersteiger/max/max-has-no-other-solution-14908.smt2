(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.10284882726473743019823814393021166324615478515625p873 {+ 463189940144964 873 (6.94548e+262)}
; Y = -1.3785266741411390523097679761121980845928192138671875p998 {- 1704732588611827 998 (-3.69276e+300)}
; 1.10284882726473743019823814393021166324615478515625p873 M -1.3785266741411390523097679761121980845928192138671875p998 == 1.10284882726473743019823814393021166324615478515625p873
; [HW: 1.10284882726473743019823814393021166324615478515625p873] 

; mpf : + 463189940144964 873
; mpfd: + 463189940144964 873 (6.94548e+262) class: Pos. norm. non-zero
; hwf : + 463189940144964 873 (6.94548e+262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101101000 #b0001101001010100010011001111110110001000101101000100)))
(assert (= y (fp #b1 #b11111100101 #b0110000011100111000111111100011000011001100011110011)))
(assert (= r (fp #b0 #b11101101000 #b0001101001010100010011001111110110001000101101000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
