(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.766856836965098320746392346336506307125091552734375p266 {- 3453616165202534 266 (-2.09498e+080)}
; Y = 1.927341926615894873719980751047842204570770263671875p-945 {+ 4176376755152382 -945 (6.48056e-285)}
; -1.766856836965098320746392346336506307125091552734375p266 M 1.927341926615894873719980751047842204570770263671875p-945 == 1.927341926615894873719980751047842204570770263671875p-945
; [HW: 1.927341926615894873719980751047842204570770263671875p-945] 

; mpf : + 4176376755152382 -945
; mpfd: + 4176376755152382 -945 (6.48056e-285) class: Pos. norm. non-zero
; hwf : + 4176376755152382 -945 (6.48056e-285) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001001 #b1100010001010000101110101100101101111010101001100110)))
(assert (= y (fp #b0 #b00001001110 #b1110110101100110010001111100111100000110010111111110)))
(assert (= r (fp #b0 #b00001001110 #b1110110101100110010001111100111100000110010111111110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
