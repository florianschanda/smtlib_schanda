(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3301256077062764138219108644989319145679473876953125p31 {- 1486753563851445 31 (-2.85642e+009)}
; Y = -1.39629614839550608706986167817376554012298583984375p433 {- 1784759186242364 433 (-3.09717e+130)}
; -1.3301256077062764138219108644989319145679473876953125p31 M -1.39629614839550608706986167817376554012298583984375p433 == -1.3301256077062764138219108644989319145679473876953125p31
; [HW: -1.3301256077062764138219108644989319145679473876953125p31] 

; mpf : - 1486753563851445 31
; mpfd: - 1486753563851445 31 (-2.85642e+009) class: Neg. norm. non-zero
; hwf : - 1486753563851445 31 (-2.85642e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011110 #b0101010010000011000111001010000010101011101010110101)))
(assert (= y (fp #b1 #b10110110000 #b0110010101110011101010100001010011100011101100111100)))
(assert (= r (fp #b1 #b10000011110 #b0101010010000011000111001010000010101011101010110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
