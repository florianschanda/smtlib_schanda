(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2820556230248845164254589690244756639003753662109375p884 {- 1270265598752623 884 (-1.65357e+266)}
; Y = -1.727851314527498516326886601746082305908203125p-928 {- 3277950908887168 -928 (-7.61501e-280)}
; -1.2820556230248845164254589690244756639003753662109375p884 M -1.727851314527498516326886601746082305908203125p-928 == -1.727851314527498516326886601746082305908203125p-928
; [HW: -1.727851314527498516326886601746082305908203125p-928] 

; mpf : - 3277950908887168 -928
; mpfd: - 3277950908887168 -928 (-7.61501e-280) class: Neg. norm. non-zero
; hwf : - 3277950908887168 -928 (-7.61501e-280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110011 #b0100100000110100110011000001110010001011011101101111)))
(assert (= y (fp #b1 #b00001011111 #b1011101001010100011101101011100000111111000010000000)))
(assert (= r (fp #b1 #b00001011111 #b1011101001010100011101101011100000111111000010000000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
