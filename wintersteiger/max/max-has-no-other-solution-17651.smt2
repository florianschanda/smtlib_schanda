(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.080338994295610088869352694018743932247161865234375p-682 {- 361814664773030 -682 (-5.38397e-206)}
; Y = -1.9612460436774921124225556923192925751209259033203125p969 {- 4329067324117317 969 (-9.78583e+291)}
; -1.080338994295610088869352694018743932247161865234375p-682 M -1.9612460436774921124225556923192925751209259033203125p969 == -1.080338994295610088869352694018743932247161865234375p-682
; [HW: -1.080338994295610088869352694018743932247161865234375p-682] 

; mpf : - 361814664773030 -682
; mpfd: - 361814664773030 -682 (-5.38397e-206) class: Neg. norm. non-zero
; hwf : - 361814664773030 -682 (-5.38397e-206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101010101 #b0001010010010001000110001010100100010111110110100110)))
(assert (= y (fp #b1 #b11111001000 #b1111011000010100001110001000000100000001000101000101)))
(assert (= r (fp #b1 #b00101010101 #b0001010010010001000110001010100100010111110110100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
