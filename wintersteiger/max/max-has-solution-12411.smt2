(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1680363998612908194019155416754074394702911376953125p-133 {- 756768667799989 -133 (-1.07267e-040)}
; Y = 1.583568670943614531410048584803007543087005615234375p779 {+ 2628159649006758 779 (5.03505e+234)}
; -1.1680363998612908194019155416754074394702911376953125p-133 M 1.583568670943614531410048584803007543087005615234375p779 == 1.583568670943614531410048584803007543087005615234375p779
; [HW: 1.583568670943614531410048584803007543087005615234375p779] 

; mpf : + 2628159649006758 779
; mpfd: + 2628159649006758 779 (5.03505e+234) class: Pos. norm. non-zero
; hwf : + 2628159649006758 779 (5.03505e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111010 #b0010101100000100011011101111100111110001000110110101)))
(assert (= y (fp #b0 #b11100001010 #b1001010101100100110000011010010010101100010010100110)))
(assert (= r (fp #b0 #b11100001010 #b1001010101100100110000011010010010101100010010100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
