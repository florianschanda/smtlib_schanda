(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.576273538489526782058192111435346305370330810546875p207 {- 2595305293204910 207 (-3.24221e+062)}
; Y = -1.3154739618856254868006772085209377110004425048828125p-907 {- 1420768417193197 -907 (-1.21584e-273)}
; -1.576273538489526782058192111435346305370330810546875p207 M -1.3154739618856254868006772085209377110004425048828125p-907 == -1.3154739618856254868006772085209377110004425048828125p-907
; [HW: -1.3154739618856254868006772085209377110004425048828125p-907] 

; mpf : - 1420768417193197 -907
; mpfd: - 1420768417193197 -907 (-1.21584e-273) class: Neg. norm. non-zero
; hwf : - 1420768417193197 -907 (-1.21584e-273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001110 #b1001001110000110101010011010000101011100110110101110)))
(assert (= y (fp #b1 #b00001110100 #b0101000011000010111001101100110100001001110011101101)))
(assert (= r (fp #b1 #b00001110100 #b0101000011000010111001101100110100001001110011101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
