(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8446264048206517660588588114478625357151031494140625p-672 {+ 3803859162017569 -672 (9.4135e-203)}
; Y = 1.59298008060677620534306697663851082324981689453125p787 {+ 2670544870058804 787 (1.29663e+237)}
; 1.8446264048206517660588588114478625357151031494140625p-672 M 1.59298008060677620534306697663851082324981689453125p787 == 1.59298008060677620534306697663851082324981689453125p787
; [HW: 1.59298008060677620534306697663851082324981689453125p787] 

; mpf : + 2670544870058804 787
; mpfd: + 2670544870058804 787 (1.29663e+237) class: Pos. norm. non-zero
; hwf : + 2670544870058804 787 (1.29663e+237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101011111 #b1101100000111001011011111010001000001010111100100001)))
(assert (= y (fp #b0 #b11100010010 #b1001011111001101100010101110010101100010101100110100)))
(assert (= r (fp #b0 #b11100010010 #b1001011111001101100010101110010101100010101100110100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
