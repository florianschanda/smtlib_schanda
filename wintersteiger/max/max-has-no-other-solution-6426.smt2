(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2449917272127419831662109572789631783962249755859375p-457 {- 1103344651384159 -457 (-3.34548e-138)}
; Y = -1.956381421226432326676558659528382122516632080078125p-1019 {- 4307159012259426 -1019 (-3.48247e-307)}
; -1.2449917272127419831662109572789631783962249755859375p-457 M -1.956381421226432326676558659528382122516632080078125p-1019 == -1.956381421226432326676558659528382122516632080078125p-1019
; [HW: -1.956381421226432326676558659528382122516632080078125p-1019] 

; mpf : - 4307159012259426 -1019
; mpfd: - 4307159012259426 -1019 (-3.48247e-307) class: Neg. norm. non-zero
; hwf : - 4307159012259426 -1019 (-3.48247e-307) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110110 #b0011111010110111110001110010000000101011010101011111)))
(assert (= y (fp #b1 #b00000000100 #b1111010011010101011010011010111010101011011001100010)))
(assert (= r (fp #b1 #b00000000100 #b1111010011010101011010011010111010101011011001100010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
