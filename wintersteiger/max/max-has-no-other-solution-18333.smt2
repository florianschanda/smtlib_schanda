(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.15423871512523046334308673976920545101165771484375p-740 {+ 694629419964092 -740 (1.99572e-223)}
; Y = 1.159046648330331663601100444793701171875p-299 {+ 716282426155008 -299 (1.13797e-090)}
; 1.15423871512523046334308673976920545101165771484375p-740 M 1.159046648330331663601100444793701171875p-299 == 1.159046648330331663601100444793701171875p-299
; [HW: 1.159046648330331663601100444793701171875p-299] 

; mpf : + 716282426155008 -299
; mpfd: + 716282426155008 -299 (1.13797e-090) class: Pos. norm. non-zero
; hwf : + 716282426155008 -299 (1.13797e-090) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100011011 #b0010011101111100001100000011110100111101011010111100)))
(assert (= y (fp #b0 #b01011010100 #b0010100010110111010001111111100100011110000000000000)))
(assert (= r (fp #b0 #b01011010100 #b0010100010110111010001111111100100011110000000000000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
