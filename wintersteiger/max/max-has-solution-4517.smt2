(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.138199372382274976445160064031369984149932861328125p-862 {- 622394641963650 -862 (-3.70137e-260)}
; Y = 1.268316301865557438333098616567440330982208251953125p-141 {+ 1208389197099154 -141 (4.54986e-043)}
; -1.138199372382274976445160064031369984149932861328125p-862 M 1.268316301865557438333098616567440330982208251953125p-141 == 1.268316301865557438333098616567440330982208251953125p-141
; [HW: 1.268316301865557438333098616567440330982208251953125p-141] 

; mpf : + 1208389197099154 -141
; mpfd: + 1208389197099154 -141 (4.54986e-043) class: Pos. norm. non-zero
; hwf : + 1208389197099154 -141 (4.54986e-043) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010100001 #b0010001101100001000010001011100010110101101010000010)))
(assert (= y (fp #b0 #b01101110010 #b0100010010110000011000001000110101111111000010010010)))
(assert (= r (fp #b0 #b01101110010 #b0100010010110000011000001000110101111111000010010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
