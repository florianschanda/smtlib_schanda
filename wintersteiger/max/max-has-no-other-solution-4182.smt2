(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.809299042617934727417150497785769402980804443359375p440 {+ 3644758866765430 440 (5.13699e+132)}
; Y = -1.8852199074700977110552457816083915531635284423828125p-913 {- 3986676045423277 -913 (-2.72255e-275)}
; 1.809299042617934727417150497785769402980804443359375p440 M -1.8852199074700977110552457816083915531635284423828125p-913 == 1.809299042617934727417150497785769402980804443359375p440
; [HW: 1.809299042617934727417150497785769402980804443359375p440] 

; mpf : + 3644758866765430 440
; mpfd: + 3644758866765430 440 (5.13699e+132) class: Pos. norm. non-zero
; hwf : + 3644758866765430 440 (5.13699e+132) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110111 #b1100111100101110001110001101100010111010011001110110)))
(assert (= y (fp #b1 #b00001101110 #b1110001010011101110001011001100001011010001010101101)))
(assert (= r (fp #b0 #b10110110111 #b1100111100101110001110001101100010111010011001110110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
