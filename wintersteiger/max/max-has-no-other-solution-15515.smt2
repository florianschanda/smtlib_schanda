(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1071488200590959838365279210847802460193634033203125p-286 {+ 482555386091333 -286 (8.90486e-087)}
; Y = -1.75561956716307587811343182693235576152801513671875p398 {- 3403008001109484 398 (-1.13336e+120)}
; 1.1071488200590959838365279210847802460193634033203125p-286 M -1.75561956716307587811343182693235576152801513671875p398 == 1.1071488200590959838365279210847802460193634033203125p-286
; [HW: 1.1071488200590959838365279210847802460193634033203125p-286] 

; mpf : + 482555386091333 -286
; mpfd: + 482555386091333 -286 (8.90486e-087) class: Pos. norm. non-zero
; hwf : + 482555386091333 -286 (8.90486e-087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100001 #b0001101101101110000110101110010111110101011101000101)))
(assert (= y (fp #b1 #b10110001101 #b1100000101110000010010001011000100101110110111101100)))
(assert (= r (fp #b0 #b01011100001 #b0001101101101110000110101110010111110101011101000101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
