(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.271671989407151759365888210595585405826568603515625p-806 {+ 1223501870261050 -806 (2.97988e-243)}
; Y = 1.8751906548987726797150799029623158276081085205078125p260 {+ 3941508307280253 260 (3.47412e+078)}
; 1.271671989407151759365888210595585405826568603515625p-806 M 1.8751906548987726797150799029623158276081085205078125p260 == 1.8751906548987726797150799029623158276081085205078125p260
; [HW: 1.8751906548987726797150799029623158276081085205078125p260] 

; mpf : + 3941508307280253 260
; mpfd: + 3941508307280253 260 (3.47412e+078) class: Pos. norm. non-zero
; hwf : + 3941508307280253 260 (3.47412e+078) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011011001 #b0100010110001100010010111010010110111110001100111010)))
(assert (= y (fp #b0 #b10100000011 #b1110000000001100011111101010100010001110000101111101)))
(assert (= r (fp #b0 #b10100000011 #b1110000000001100011111101010100010001110000101111101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
