(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.781344955559779119624863596982322633266448974609375p-916 {+ 3518864850706838 -916 (3.21567e-276)}
; Y = 1.213153576832604496615886091603897511959075927734375p583 {+ 959958369196006 583 (3.84064e+175)}
; 1.781344955559779119624863596982322633266448974609375p-916 M 1.213153576832604496615886091603897511959075927734375p583 == 1.213153576832604496615886091603897511959075927734375p583
; [HW: 1.213153576832604496615886091603897511959075927734375p583] 

; mpf : + 959958369196006 583
; mpfd: + 959958369196006 583 (3.84064e+175) class: Pos. norm. non-zero
; hwf : + 959958369196006 583 (3.84064e+175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101011 #b1100100000000110001110010001011100000110000110010110)))
(assert (= y (fp #b0 #b11001000110 #b0011011010010001001110111001100110000101011111100110)))
(assert (= r (fp #b0 #b11001000110 #b0011011010010001001110111001100110000101011111100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
