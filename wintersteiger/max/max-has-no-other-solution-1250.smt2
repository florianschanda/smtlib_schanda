(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.3439778893840619300448224748834036290645599365234375p-775 {- 1549138694453751 -775 (-6.76309e-234)}
; Y = 1.1482617951226377073226103675551712512969970703125p-915 {+ 667711765267592 -915 (4.14567e-276)}
; -1.3439778893840619300448224748834036290645599365234375p-775 M 1.1482617951226377073226103675551712512969970703125p-915 == 1.1482617951226377073226103675551712512969970703125p-915
; [HW: 1.1482617951226377073226103675551712512969970703125p-915] 

; mpf : + 667711765267592 -915
; mpfd: + 667711765267592 -915 (4.14567e-276) class: Pos. norm. non-zero
; hwf : + 667711765267592 -915 (4.14567e-276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111000 #b0101100000001110111011110101100101110011100111110111)))
(assert (= y (fp #b0 #b00001101100 #b0010010111110100011111000010100101001100010010001000)))
(assert (= r (fp #b0 #b00001101100 #b0010010111110100011111000010100101001100010010001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
