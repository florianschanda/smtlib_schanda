(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.421228785143357153941678916453383862972259521484375p1004 {- 1897045799809350 1004 (-2.43657e+302)}
; Y = 1.4942685705395686301955038288724608719348907470703125p197 {+ 2225987750102949 197 (3.0015e+059)}
; -1.421228785143357153941678916453383862972259521484375p1004 M 1.4942685705395686301955038288724608719348907470703125p197 == 1.4942685705395686301955038288724608719348907470703125p197
; [HW: 1.4942685705395686301955038288724608719348907470703125p197] 

; mpf : + 2225987750102949 197
; mpfd: + 2225987750102949 197 (3.0015e+059) class: Pos. norm. non-zero
; hwf : + 2225987750102949 197 (3.0015e+059) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101011 #b0110101111010101101001100101000001010011000101000110)))
(assert (= y (fp #b0 #b10011000100 #b0111111010001000011000101001000111101000011110100101)))
(assert (= r (fp #b0 #b10011000100 #b0111111010001000011000101001000111101000011110100101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
