(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.087627910492380944873502812697552144527435302734375p907 {- 394641025040742 907 (-1.17676e+273)}
; Y = -1.4249966902482531505569340879446826875209808349609375p981 {- 1914014935835727 981 (-2.91232e+295)}
; -1.087627910492380944873502812697552144527435302734375p907 M -1.4249966902482531505569340879446826875209808349609375p981 == -1.087627910492380944873502812697552144527435302734375p907
; [HW: -1.087627910492380944873502812697552144527435302734375p907] 

; mpf : - 394641025040742 907
; mpfd: - 394641025040742 907 (-1.17676e+273) class: Neg. norm. non-zero
; hwf : - 394641025040742 907 (-1.17676e+273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001010 #b0001011001101110110010000110000111001000000101100110)))
(assert (= y (fp #b1 #b11111010100 #b0110110011001100100101010100010110000110010001001111)))
(assert (= r (fp #b1 #b11110001010 #b0001011001101110110010000110000111001000000101100110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
