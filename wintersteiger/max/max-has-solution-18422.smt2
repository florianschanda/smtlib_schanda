(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.84478315145777482797484481125138700008392333984375p9 {- 3804565086114108 9 (-944.529)}
; Y = 1.767595152855017115456348619773052632808685302734375p1012 {+ 3456941244369254 1012 (7.7578e+304)}
; -1.84478315145777482797484481125138700008392333984375p9 M 1.767595152855017115456348619773052632808685302734375p1012 == 1.767595152855017115456348619773052632808685302734375p1012
; [HW: 1.767595152855017115456348619773052632808685302734375p1012] 

; mpf : + 3456941244369254 1012
; mpfd: + 3456941244369254 1012 (7.7578e+304) class: Pos. norm. non-zero
; hwf : + 3456941244369254 1012 (7.7578e+304) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000001000 #b1101100001000011101101010110011110111001000100111100)))
(assert (= y (fp #b0 #b11111110011 #b1100010010000001000111011010111000010100100101100110)))
(assert (= r (fp #b0 #b11111110011 #b1100010010000001000111011010111000010100100101100110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
