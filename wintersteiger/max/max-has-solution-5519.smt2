(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3938895435941309752791994469589553773403167724609375p168 {+ 1773920801755663 168 (5.21516e+050)}
; Y = -1.7673012422135929710975688067264854907989501953125p404 {- 3455617588514056 404 (-7.30178e+121)}
; 1.3938895435941309752791994469589553773403167724609375p168 M -1.7673012422135929710975688067264854907989501953125p404 == 1.3938895435941309752791994469589553773403167724609375p168
; [HW: 1.3938895435941309752791994469589553773403167724609375p168] 

; mpf : + 1773920801755663 168
; mpfd: + 1773920801755663 168 (5.21516e+050) class: Pos. norm. non-zero
; hwf : + 1773920801755663 168 (5.21516e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100111 #b0110010011010101111100011111001111111001001000001111)))
(assert (= y (fp #b1 #b10110010011 #b1100010001101101110110101010110101111100110100001000)))
(assert (= r (fp #b0 #b10010100111 #b0110010011010101111100011111001111111001001000001111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
