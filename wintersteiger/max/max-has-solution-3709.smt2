(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.97622170918838957476282303105108439922332763671875p-183 {+ 4396511725731820 -183 (1.61193e-055)}
; Y = -1.40366749567977766588455779128707945346832275390625p-523 {- 1817956783125028 -523 (-5.11183e-158)}
; 1.97622170918838957476282303105108439922332763671875p-183 M -1.40366749567977766588455779128707945346832275390625p-523 == 1.97622170918838957476282303105108439922332763671875p-183
; [HW: 1.97622170918838957476282303105108439922332763671875p-183] 

; mpf : + 4396511725731820 -183
; mpfd: + 4396511725731820 -183 (1.61193e-055) class: Pos. norm. non-zero
; hwf : + 4396511725731820 -183 (1.61193e-055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001000 #b1111100111101001101010100111101010011011111111101100)))
(assert (= y (fp #b1 #b00111110100 #b0110011101010110110000001100010001100111001000100100)))
(assert (= r (fp #b0 #b01101001000 #b1111100111101001101010100111101010011011111111101100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
