(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.159870500576456020525029089185409247875213623046875p1015 {- 719992726823662 1015 (-4.07244e+305)}
; Y = 1.7849284848095228195319350561476312577724456787109375p-71 {+ 3535003631700655 -71 (7.55947e-022)}
; -1.159870500576456020525029089185409247875213623046875p1015 M 1.7849284848095228195319350561476312577724456787109375p-71 == 1.7849284848095228195319350561476312577724456787109375p-71
; [HW: 1.7849284848095228195319350561476312577724456787109375p-71] 

; mpf : + 3535003631700655 -71
; mpfd: + 3535003631700655 -71 (7.55947e-022) class: Pos. norm. non-zero
; hwf : + 3535003631700655 -71 (7.55947e-022) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111110110 #b0010100011101101010001011110101110010010001011101110)))
(assert (= y (fp #b0 #b01110111000 #b1100100011110001000100101011101111110100101010101111)))
(assert (= r (fp #b0 #b01110111000 #b1100100011110001000100101011101111110100101010101111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
