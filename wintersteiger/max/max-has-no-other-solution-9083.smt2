(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.557095654308512155949983934988267719745635986328125p-676 {- 2508935781153538 -676 (-4.96636e-204)}
; Y = -1.0731218542086893297238248123903758823871612548828125p-647 {- 329311555366893 -647 (-1.83756e-195)}
; -1.557095654308512155949983934988267719745635986328125p-676 M -1.0731218542086893297238248123903758823871612548828125p-647 == -1.557095654308512155949983934988267719745635986328125p-676
; [HW: -1.557095654308512155949983934988267719745635986328125p-676] 

; mpf : - 2508935781153538 -676
; mpfd: - 2508935781153538 -676 (-4.96636e-204) class: Neg. norm. non-zero
; hwf : - 2508935781153538 -676 (-4.96636e-204) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101011011 #b1000111010011101110100100001111111111111101100000010)))
(assert (= y (fp #b1 #b00101111000 #b0001001010111000000111010010010001110010111111101101)))
(assert (= r (fp #b1 #b00101011011 #b1000111010011101110100100001111111111111101100000010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
