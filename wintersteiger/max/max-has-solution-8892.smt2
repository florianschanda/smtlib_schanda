(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6890274060082599572041317514958791434764862060546875p-522 {- 3103103568946859 -522 (-1.23021e-157)}
; Y = 1.764098916641997139009845341206528246402740478515625p593 {+ 3441195596263098 593 (5.71887e+178)}
; -1.6890274060082599572041317514958791434764862060546875p-522 M 1.764098916641997139009845341206528246402740478515625p593 == 1.764098916641997139009845341206528246402740478515625p593
; [HW: 1.764098916641997139009845341206528246402740478515625p593] 

; mpf : + 3441195596263098 593
; mpfd: + 3441195596263098 593 (5.71887e+178) class: Pos. norm. non-zero
; hwf : + 3441195596263098 593 (5.71887e+178) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110101 #b1011000001100100000110011001111011011010011010101011)))
(assert (= y (fp #b0 #b11001010000 #b1100001110011011111111001001000111100010111010111010)))
(assert (= r (fp #b0 #b11001010000 #b1100001110011011111111001001000111100010111010111010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
