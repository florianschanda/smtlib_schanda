(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.044402113383345653829792354372330009937286376953125p268 {- 199969341287698 268 (-4.95344e+080)}
; Y = -1.4860180431217335783600219656364060938358306884765625p981 {- 2188830677898377 981 (-3.03704e+295)}
; -1.044402113383345653829792354372330009937286376953125p268 M -1.4860180431217335783600219656364060938358306884765625p981 == -1.044402113383345653829792354372330009937286376953125p268
; [HW: -1.044402113383345653829792354372330009937286376953125p268] 

; mpf : - 199969341287698 268
; mpfd: - 199969341287698 268 (-4.95344e+080) class: Neg. norm. non-zero
; hwf : - 199969341287698 268 (-4.95344e+080) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001011 #b0000101101011101111011111101100011011010110100010010)))
(assert (= y (fp #b1 #b11111010100 #b0111110001101011101011011011000001111001010010001001)))
(assert (= r (fp #b1 #b10100001011 #b0000101101011101111011111101100011011010110100010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
