(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.464586442789165499078762877616100013256072998046875p53 {+ 2092311330626670 53 (1.31918e+016)}
; Y = -1.6787445006810315373257935789297334849834442138671875p455 {- 3056793480346867 455 (-1.56183e+137)}
; 1.464586442789165499078762877616100013256072998046875p53 M -1.6787445006810315373257935789297334849834442138671875p455 == 1.464586442789165499078762877616100013256072998046875p53
; [HW: 1.464586442789165499078762877616100013256072998046875p53] 

; mpf : + 2092311330626670 53
; mpfd: + 2092311330626670 53 (1.31918e+016) class: Pos. norm. non-zero
; hwf : + 2092311330626670 53 (1.31918e+016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000110100 #b0111011011101111001000110001100111110001110001101110)))
(assert (= y (fp #b1 #b10111000110 #b1010110111000010001100110001100011000011110011110011)))
(assert (= r (fp #b0 #b10000110100 #b0111011011101111001000110001100111110001110001101110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
