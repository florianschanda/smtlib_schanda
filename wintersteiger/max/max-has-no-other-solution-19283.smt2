(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.966914491789794272591507251490838825702667236328125p-941 {- 4354595744923650 -941 (-1.05818e-283)}
; Y = -1.4266142995751172062313116839504800736904144287109375p696 {- 1921300000597423 696 (-4.69012e+209)}
; -1.966914491789794272591507251490838825702667236328125p-941 M -1.4266142995751172062313116839504800736904144287109375p696 == -1.966914491789794272591507251490838825702667236328125p-941
; [HW: -1.966914491789794272591507251490838825702667236328125p-941] 

; mpf : - 4354595744923650 -941
; mpfd: - 4354595744923650 -941 (-1.05818e-283) class: Neg. norm. non-zero
; hwf : - 4354595744923650 -941 (-1.05818e-283) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010010 #b1111011110000111101101010100100001000100000000000010)))
(assert (= y (fp #b1 #b11010110111 #b0110110100110110100110000100000010101110010110101111)))
(assert (= r (fp #b1 #b00001010010 #b1111011110000111101101010100100001000100000000000010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
