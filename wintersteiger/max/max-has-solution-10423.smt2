(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.824226472127159492941927965148352086544036865234375p214 {- 3711986032740774 214 (-4.80284e+064)}
; Y = 1.242253122483564453659710125066339969635009765625p-928 {+ 1091011072146320 -928 (5.47487e-280)}
; -1.824226472127159492941927965148352086544036865234375p214 M 1.242253122483564453659710125066339969635009765625p-928 == 1.242253122483564453659710125066339969635009765625p-928
; [HW: 1.242253122483564453659710125066339969635009765625p-928] 

; mpf : + 1091011072146320 -928
; mpfd: + 1091011072146320 -928 (5.47487e-280) class: Pos. norm. non-zero
; hwf : + 1091011072146320 -928 (5.47487e-280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010101 #b1101001100000000100000011000111001001000100110100110)))
(assert (= y (fp #b0 #b00001011111 #b0011111000000100010011001111011001101011101110010000)))
(assert (= r (fp #b0 #b00001011111 #b0011111000000100010011001111011001101011101110010000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
