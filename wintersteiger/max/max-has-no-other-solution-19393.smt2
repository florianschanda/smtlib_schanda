(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.479601556199063860930209557409398257732391357421875p421 {- 2159933389784414 421 (-8.01259e+126)}
; Y = 1.93743644458625130511109091457910835742950439453125p873 {+ 4221838422522164 873 (1.22015e+263)}
; -1.479601556199063860930209557409398257732391357421875p421 M 1.93743644458625130511109091457910835742950439453125p873 == 1.93743644458625130511109091457910835742950439453125p873
; [HW: 1.93743644458625130511109091457910835742950439453125p873] 

; mpf : + 4221838422522164 873
; mpfd: + 4221838422522164 873 (1.22015e+263) class: Pos. norm. non-zero
; hwf : + 4221838422522164 873 (1.22015e+263) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100100 #b0111101011000111001010101110011011111100010101011110)))
(assert (= y (fp #b0 #b11101101000 #b1110111111111011110101011011011110010011100100110100)))
(assert (= r (fp #b0 #b11101101000 #b1110111111111011110101011011011110010011100100110100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
