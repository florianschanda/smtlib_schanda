(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.091227337755079407344283026759512722492218017578125p879 {- 410851404319778 879 (-4.39827e+264)}
; Y = -1.1137569322370921565124035623739473521709442138671875p-720 {- 512315677633779 -720 (-2.01927e-217)}
; -1.091227337755079407344283026759512722492218017578125p879 M -1.1137569322370921565124035623739473521709442138671875p-720 == -1.1137569322370921565124035623739473521709442138671875p-720
; [HW: -1.1137569322370921565124035623739473521709442138671875p-720] 

; mpf : - 512315677633779 -720
; mpfd: - 512315677633779 -720 (-2.01927e-217) class: Neg. norm. non-zero
; hwf : - 512315677633779 -720 (-2.01927e-217) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101110 #b0001011101011010101011001100000000101000110000100010)))
(assert (= y (fp #b1 #b00100101111 #b0001110100011111001011001001111110100110110011110011)))
(assert (= r (fp #b1 #b00100101111 #b0001110100011111001011001001111110100110110011110011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
