(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2227103888782107077304317499510943889617919921875p478 {+ 1002998424363448 478 (9.54249e+143)}
; Y = -1.4986509562257450678401937693706713616847991943359375p110 {- 2245724260646207 110 (-1.94536e+033)}
; 1.2227103888782107077304317499510943889617919921875p478 M -1.4986509562257450678401937693706713616847991943359375p110 == 1.2227103888782107077304317499510943889617919921875p478
; [HW: 1.2227103888782107077304317499510943889617919921875p478] 

; mpf : + 1002998424363448 478
; mpfd: + 1002998424363448 478 (9.54249e+143) class: Pos. norm. non-zero
; hwf : + 1002998424363448 478 (9.54249e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011101 #b0011100100000011100011000100110010110110000110111000)))
(assert (= y (fp #b1 #b10001101101 #b0111111110100111100101101100110100011011110100111111)))
(assert (= r (fp #b0 #b10111011101 #b0011100100000011100011000100110010110110000110111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
