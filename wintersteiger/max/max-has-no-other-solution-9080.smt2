(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.052922017060128556664722054847516119480133056640625p353 {+ 238339576311690 353 (1.9319e+106)}
; Y = -1.856314561348973324328426315332762897014617919921875p-897 {- 3856497939403166 -897 (-1.75689e-270)}
; 1.052922017060128556664722054847516119480133056640625p353 M -1.856314561348973324328426315332762897014617919921875p-897 == 1.052922017060128556664722054847516119480133056640625p353
; [HW: 1.052922017060128556664722054847516119480133056640625p353] 

; mpf : + 238339576311690 353
; mpfd: + 238339576311690 353 (1.9319e+106) class: Pos. norm. non-zero
; hwf : + 238339576311690 353 (1.9319e+106) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100000 #b0000110110001100010011000001110010000010111110001010)))
(assert (= y (fp #b1 #b00001111110 #b1101101100110111011011100101110000010101000110011110)))
(assert (= r (fp #b0 #b10101100000 #b0000110110001100010011000001110010000010111110001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
