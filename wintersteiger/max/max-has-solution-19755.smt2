(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8284154529598577454407859477214515209197998046875p-65 {+ 3730851525257976 -65 (4.95593e-020)}
; Y = 1.7822504194040276193078398137004114687442779541015625p-455 {+ 3522942697338393 -455 (1.91567e-137)}
; 1.8284154529598577454407859477214515209197998046875p-65 M 1.7822504194040276193078398137004114687442779541015625p-455 == 1.8284154529598577454407859477214515209197998046875p-65
; [HW: 1.8284154529598577454407859477214515209197998046875p-65] 

; mpf : + 3730851525257976 -65
; mpfd: + 3730851525257976 -65 (4.95593e-020) class: Pos. norm. non-zero
; hwf : + 3730851525257976 -65 (4.95593e-020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111110 #b1101010000010011000010001111110111110110101011111000)))
(assert (= y (fp #b0 #b01000111000 #b1100100001000001100100000100000010011111011000011001)))
(assert (= r (fp #b0 #b01110111110 #b1101010000010011000010001111110111110110101011111000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
