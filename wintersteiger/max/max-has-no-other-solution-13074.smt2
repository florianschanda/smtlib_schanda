(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8141008203838302481614164207712747156620025634765625p837 {- 3666384151322633 837 (-1.66252e+252)}
; Y = -1.81632850871993678509852543356828391551971435546875p-413 {- 3676416767683020 -413 (-8.5863e-125)}
; -1.8141008203838302481614164207712747156620025634765625p837 M -1.81632850871993678509852543356828391551971435546875p-413 == -1.81632850871993678509852543356828391551971435546875p-413
; [HW: -1.81632850871993678509852543356828391551971435546875p-413] 

; mpf : - 3676416767683020 -413
; mpfd: - 3676416767683020 -413 (-8.5863e-125) class: Neg. norm. non-zero
; hwf : - 3676416767683020 -413 (-8.5863e-125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101000100 #b1101000001101000111010010100111100110010000000001001)))
(assert (= y (fp #b1 #b01001100010 #b1101000011111010111001111011011110111110100111001100)))
(assert (= r (fp #b1 #b01001100010 #b1101000011111010111001111011011110111110100111001100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
