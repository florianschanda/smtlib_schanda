(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4270722557987547407520878550712950527667999267578125p389 {+ 1923362452075549 389 (1.79934e+117)}
; Y = -1.702551211642993944650470439228229224681854248046875p-487 {- 3164009374964078 -487 (-4.26081e-147)}
; 1.4270722557987547407520878550712950527667999267578125p389 M -1.702551211642993944650470439228229224681854248046875p-487 == 1.4270722557987547407520878550712950527667999267578125p389
; [HW: 1.4270722557987547407520878550712950527667999267578125p389] 

; mpf : + 1923362452075549 389
; mpfd: + 1923362452075549 389 (1.79934e+117) class: Pos. norm. non-zero
; hwf : + 1923362452075549 389 (1.79934e+117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000100 #b0110110101010100100110110111101110101111010000011101)))
(assert (= y (fp #b1 #b01000011000 #b1011001111011010011001010110110111000101100101101110)))
(assert (= r (fp #b0 #b10110000100 #b0110110101010100100110110111101110101111010000011101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
