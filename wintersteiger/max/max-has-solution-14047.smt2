(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5013824059448197534294422439415939152240753173828125p-1004 {- 2258025616583213 -1004 (-8.75741e-303)}
; Y = 1.2133137606106985106890761016984470188617706298828125p-484 {+ 960679772799341 -484 (2.42915e-146)}
; -1.5013824059448197534294422439415939152240753173828125p-1004 M 1.2133137606106985106890761016984470188617706298828125p-484 == 1.2133137606106985106890761016984470188617706298828125p-484
; [HW: 1.2133137606106985106890761016984470188617706298828125p-484] 

; mpf : + 960679772799341 -484
; mpfd: + 960679772799341 -484 (2.42915e-146) class: Pos. norm. non-zero
; hwf : + 960679772799341 -484 (2.42915e-146) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000010011 #b1000000001011010100110001110110001010010101000101101)))
(assert (= y (fp #b0 #b01000011011 #b0011011010011011101110110000100110011100000101101101)))
(assert (= r (fp #b0 #b01000011011 #b0011011010011011101110110000100110011100000101101101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
