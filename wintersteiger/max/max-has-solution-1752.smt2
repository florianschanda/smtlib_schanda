(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5558353559800348620001386734656989574432373046875p710 {- 2503259902071032 710 (-8.38032e+213)}
; Y = 1.6393059154950757605462285937392152845859527587890625p-185 {+ 2879177882799377 -185 (3.3428e-056)}
; -1.5558353559800348620001386734656989574432373046875p710 M 1.6393059154950757605462285937392152845859527587890625p-185 == 1.6393059154950757605462285937392152845859527587890625p-185
; [HW: 1.6393059154950757605462285937392152845859527587890625p-185] 

; mpf : + 2879177882799377 -185
; mpfd: + 2879177882799377 -185 (3.3428e-056) class: Pos. norm. non-zero
; hwf : + 2879177882799377 -185 (3.3428e-056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011000101 #b1000111001001011001110011101001111100101000011111000)))
(assert (= y (fp #b0 #b01101000110 #b1010001110101001100011010110111100110000110100010001)))
(assert (= r (fp #b0 #b01101000110 #b1010001110101001100011010110111100110000110100010001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
