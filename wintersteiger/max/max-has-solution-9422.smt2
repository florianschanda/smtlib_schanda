(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.52602217805875906009305253974162042140960693359375p-995 {- 2368993285094044 -995 (-4.55738e-300)}
; Y = -1.7126172018251970552427110305870883166790008544921875p-142 {- 3209342564597763 -142 (-3.07186e-043)}
; -1.52602217805875906009305253974162042140960693359375p-995 M -1.7126172018251970552427110305870883166790008544921875p-142 == -1.52602217805875906009305253974162042140960693359375p-995
; [HW: -1.52602217805875906009305253974162042140960693359375p-995] 

; mpf : - 2368993285094044 -995
; mpfd: - 2368993285094044 -995 (-4.55738e-300) class: Neg. norm. non-zero
; hwf : - 2368993285094044 -995 (-4.55738e-300) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011100 #b1000011010101001011000111011001110111011101010011100)))
(assert (= y (fp #b1 #b01101110001 #b1011011001101110000101001011100001101000000000000011)))
(assert (= r (fp #b1 #b00000011100 #b1000011010101001011000111011001110111011101010011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
