(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.71176374093051020253142269211821258068084716796875p463 {- 3205498918430476 463 (-4.07692e+139)}
; Y = -1.59370721470344012260511590284295380115509033203125p140 {- 2673819590905588 140 (-2.2213e+042)}
; -1.71176374093051020253142269211821258068084716796875p463 M -1.59370721470344012260511590284295380115509033203125p140 == -1.59370721470344012260511590284295380115509033203125p140
; [HW: -1.59370721470344012260511590284295380115509033203125p140] 

; mpf : - 2673819590905588 140
; mpfd: - 2673819590905588 140 (-2.2213e+042) class: Neg. norm. non-zero
; hwf : - 2673819590905588 140 (-2.2213e+042) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111001110 #b1011011000110110001001100000010111000110011100001100)))
(assert (= y (fp #b1 #b10010001011 #b1001011111111101001100100010111010001100111011110100)))
(assert (= r (fp #b1 #b10010001011 #b1001011111111101001100100010111010001100111011110100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
