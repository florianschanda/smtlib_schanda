(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.07804291550512321151700234622694551944732666015625p49 {+ 351474045187780 49 (6.06884e+014)}
; Y = -1.106283532382934087223702590563334524631500244140625p-930 {- 478658476835402 -930 (-1.21891e-280)}
; 1.07804291550512321151700234622694551944732666015625p49 M -1.106283532382934087223702590563334524631500244140625p-930 == 1.07804291550512321151700234622694551944732666015625p49
; [HW: 1.07804291550512321151700234622694551944732666015625p49] 

; mpf : + 351474045187780 49
; mpfd: + 351474045187780 49 (6.06884e+014) class: Pos. norm. non-zero
; hwf : + 351474045187780 49 (6.06884e+014) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000110000 #b0001001111111010100111101101100111000111011011000100)))
(assert (= y (fp #b1 #b00001011101 #b0001101100110101011001011100011110110000001001001010)))
(assert (= r (fp #b0 #b10000110000 #b0001001111111010100111101101100111000111011011000100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
