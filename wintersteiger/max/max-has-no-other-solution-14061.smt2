(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.05848881182928789002062330837361514568328857421875p-536 {+ 263410191159724 -536 (4.70553e-162)}
; Y = -1.63568136548694997856046029482968151569366455078125p-683 {- 2862854360733396 -683 (-4.07579e-206)}
; 1.05848881182928789002062330837361514568328857421875p-536 M -1.63568136548694997856046029482968151569366455078125p-683 == 1.05848881182928789002062330837361514568328857421875p-536
; [HW: 1.05848881182928789002062330837361514568328857421875p-536] 

; mpf : + 263410191159724 -536
; mpfd: + 263410191159724 -536 (4.70553e-162) class: Pos. norm. non-zero
; hwf : + 263410191159724 -536 (4.70553e-162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100111 #b0000111011111001000111110110110111111101000110101100)))
(assert (= y (fp #b1 #b00101010100 #b1010001010111100000000111001001101110001011011010100)))
(assert (= r (fp #b0 #b00111100111 #b0000111011111001000111110110110111111101000110101100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
