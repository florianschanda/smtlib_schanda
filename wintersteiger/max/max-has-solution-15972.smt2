(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.910053394463617326692883580108173191547393798828125p960 {- 4098516128193602 960 (-1.86141e+289)}
; Y = 0.274166370685719584798789583146572113037109375p-1022 {+ 1234735564857728 -1023 (6.1004e-309)}
; -1.910053394463617326692883580108173191547393798828125p960 M 0.274166370685719584798789583146572113037109375p-1022 == 0.274166370685719584798789583146572113037109375p-1022
; [HW: 0.274166370685719584798789583146572113037109375p-1022] 

; mpf : + 1234735564857728 -1023
; mpfd: + 1234735564857728 -1023 (6.1004e-309) class: Pos. denorm.
; hwf : + 1234735564857728 -1023 (6.1004e-309) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111111 #b1110100011111001010000100101111011010101110001000010)))
(assert (= y (fp #b0 #b00000000000 #b0100011000101111110001000110101111000010000110000000)))
(assert (= r (fp #b0 #b00000000000 #b0100011000101111110001000110101111000010000110000000)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
