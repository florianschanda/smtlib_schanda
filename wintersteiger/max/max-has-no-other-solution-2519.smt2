(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2416900399349122263714662040001712739467620849609375p-506 {+ 1088475173790031 -506 (5.92701e-153)}
; Y = 1.5940602974300244198957443586550652980804443359375p735 {+ 2675409734141464 735 (2.88106e+221)}
; 1.2416900399349122263714662040001712739467620849609375p-506 M 1.5940602974300244198957443586550652980804443359375p735 == 1.5940602974300244198957443586550652980804443359375p735
; [HW: 1.5940602974300244198957443586550652980804443359375p735] 

; mpf : + 2675409734141464 735
; mpfd: + 2675409734141464 735 (2.88106e+221) class: Pos. norm. non-zero
; hwf : + 2675409734141464 735 (2.88106e+221) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000000101 #b0011110111011111011001100000000101001010000101001111)))
(assert (= y (fp #b0 #b11011011110 #b1001100000010100010101011110110101010000011000011000)))
(assert (= r (fp #b0 #b11011011110 #b1001100000010100010101011110110101010000011000011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
