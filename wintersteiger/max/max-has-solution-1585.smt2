(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4795221542100802647468071882030926644802093505859375p-97 {+ 2159575795016415 -97 (9.3371e-030)}
; Y = -1.3551676530282172894459336021100170910358428955078125p-95 {- 1599532909831933 -95 (-3.42092e-029)}
; 1.4795221542100802647468071882030926644802093505859375p-97 M -1.3551676530282172894459336021100170910358428955078125p-95 == 1.4795221542100802647468071882030926644802093505859375p-97
; [HW: 1.4795221542100802647468071882030926644802093505859375p-97] 

; mpf : + 2159575795016415 -97
; mpfd: + 2159575795016415 -97 (9.3371e-030) class: Pos. norm. non-zero
; hwf : + 2159575795016415 -97 (9.3371e-030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011110 #b0111101011000001111101101100001000001010001011011111)))
(assert (= y (fp #b1 #b01110100000 #b0101101011101100010001000110111001011010011011111101)))
(assert (= r (fp #b0 #b01110011110 #b0111101011000001111101101100001000001010001011011111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
