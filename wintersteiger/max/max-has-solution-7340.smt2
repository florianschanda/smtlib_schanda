(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.9662478762768207385391860952950082719326019287109375p-1022 {+ 4351593575547823 -1023 (2.14997e-308)}
; Y = 1.0912842275022798244066279949038289487361907958984375p588 {+ 411107612964071 588 (1.10554e+177)}
; 0.9662478762768207385391860952950082719326019287109375p-1022 M 1.0912842275022798244066279949038289487361907958984375p588 == 1.0912842275022798244066279949038289487361907958984375p588
; [HW: 1.0912842275022798244066279949038289487361907958984375p588] 

; mpf : + 411107612964071 588
; mpfd: + 411107612964071 588 (1.10554e+177) class: Pos. norm. non-zero
; hwf : + 411107612964071 588 (1.10554e+177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1111011101011100000001010101010001110000001110101111)))
(assert (= y (fp #b0 #b11001001011 #b0001011101011110011001110011001111000011010011100111)))
(assert (= r (fp #b0 #b11001001011 #b0001011101011110011001110011001111000011010011100111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
