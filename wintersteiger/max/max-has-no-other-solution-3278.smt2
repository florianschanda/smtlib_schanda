(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7481657309063027838647030876018106937408447265625p-746 {- 3369438906921000 -746 (-4.72287e-225)}
; Y = 1.6708997109627279353816220464068464934825897216796875p-981 {+ 3021463688294715 -981 (8.17569e-296)}
; -1.7481657309063027838647030876018106937408447265625p-746 M 1.6708997109627279353816220464068464934825897216796875p-981 == 1.6708997109627279353816220464068464934825897216796875p-981
; [HW: 1.6708997109627279353816220464068464934825897216796875p-981] 

; mpf : + 3021463688294715 -981
; mpfd: + 3021463688294715 -981 (8.17569e-296) class: Pos. norm. non-zero
; hwf : + 3021463688294715 -981 (8.17569e-296) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100010101 #b1011111110000111110010100001001000111011000000101000)))
(assert (= y (fp #b0 #b00000101010 #b1010101111000000000101010101110101111011000100111011)))
(assert (= r (fp #b0 #b00000101010 #b1010101111000000000101010101110101111011000100111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
