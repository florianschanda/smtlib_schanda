(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3766093784305708513926447267294861376285552978515625p-248 {- 1696097856364153 -248 (-3.04349e-075)}
; Y = 1.8051925855676229648594244281412102282047271728515625p942 {+ 3626265028323833 942 (6.71088e+283)}
; -1.3766093784305708513926447267294861376285552978515625p-248 M 1.8051925855676229648594244281412102282047271728515625p942 == 1.8051925855676229648594244281412102282047271728515625p942
; [HW: 1.8051925855676229648594244281412102282047271728515625p942] 

; mpf : + 3626265028323833 942
; mpfd: + 3626265028323833 942 (6.71088e+283) class: Pos. norm. non-zero
; hwf : + 3626265028323833 942 (6.71088e+283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100000111 #b0110000001101001011110001110001110111001111001111001)))
(assert (= y (fp #b0 #b11110101101 #b1100111000100001000110011110110111111110100111111001)))
(assert (= r (fp #b0 #b11110101101 #b1100111000100001000110011110110111111110100111111001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
