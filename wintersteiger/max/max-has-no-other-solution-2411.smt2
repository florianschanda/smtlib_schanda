(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.58530754537953821881046678754501044750213623046875p-805 {- 2635990843268428 -805 (-7.42963e-243)}
; Y = 1.1563332094076888001410452488926239311695098876953125p540 {+ 704062183634101 540 (4.16179e+162)}
; -1.58530754537953821881046678754501044750213623046875p-805 M 1.1563332094076888001410452488926239311695098876953125p540 == 1.1563332094076888001410452488926239311695098876953125p540
; [HW: 1.1563332094076888001410452488926239311695098876953125p540] 

; mpf : + 704062183634101 540
; mpfd: + 704062183634101 540 (4.16179e+162) class: Pos. norm. non-zero
; hwf : + 704062183634101 540 (4.16179e+162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011011010 #b1001010111010110101101110001110110000001110101001100)))
(assert (= y (fp #b0 #b11000011011 #b0010100000000101011101000000010110101111010010110101)))
(assert (= r (fp #b0 #b11000011011 #b0010100000000101011101000000010110101111010010110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
