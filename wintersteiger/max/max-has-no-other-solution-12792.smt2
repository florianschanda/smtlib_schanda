(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.023815266040881244435922781121917068958282470703125p136 {+ 107254423267442 136 (8.91869e+040)}
; Y = 1.1943606944872484643127563685993663966655731201171875p518 {+ 875322751268243 518 (1.02488e+156)}
; 1.023815266040881244435922781121917068958282470703125p136 M 1.1943606944872484643127563685993663966655731201171875p518 == 1.1943606944872484643127563685993663966655731201171875p518
; [HW: 1.1943606944872484643127563685993663966655731201171875p518] 

; mpf : + 875322751268243 518
; mpfd: + 875322751268243 518 (1.02488e+156) class: Pos. norm. non-zero
; hwf : + 875322751268243 518 (1.02488e+156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000111 #b0000011000011000110000011101110011001010100001110010)))
(assert (= y (fp #b0 #b11000000101 #b0011000111000001100111110101101001110011010110010011)))
(assert (= r (fp #b0 #b11000000101 #b0011000111000001100111110101101001110011010110010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
