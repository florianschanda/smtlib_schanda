(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8044067536362480286271647855755873024463653564453125p-604 {+ 3622725955930517 -604 (2.7178e-182)}
; Y = 1.14469015912914695576318990788422524929046630859375p344 {+ 651626546738204 344 (4.1021e+103)}
; 1.8044067536362480286271647855755873024463653564453125p-604 M 1.14469015912914695576318990788422524929046630859375p344 == 1.14469015912914695576318990788422524929046630859375p344
; [HW: 1.14469015912914695576318990788422524929046630859375p344] 

; mpf : + 651626546738204 344
; mpfd: + 651626546738204 344 (4.1021e+103) class: Pos. norm. non-zero
; hwf : + 651626546738204 344 (4.1021e+103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110100011 #b1100110111101101100110011101101110001100100110010101)))
(assert (= y (fp #b0 #b10101010111 #b0010010100001010011010100000110110000011010000011100)))
(assert (= r (fp #b0 #b10101010111 #b0010010100001010011010100000110110000011010000011100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
