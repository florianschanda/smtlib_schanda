(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.59856432593318942281257477588951587677001953125p-634 {- 2695694075229984 -634 (-2.2424e-191)}
; Y = 1.6576069300103146719749247495201416313648223876953125p620 {+ 2961598324950709 620 (7.21238e+186)}
; -1.59856432593318942281257477588951587677001953125p-634 M 1.6576069300103146719749247495201416313648223876953125p620 == 1.6576069300103146719749247495201416313648223876953125p620
; [HW: 1.6576069300103146719749247495201416313648223876953125p620] 

; mpf : + 2961598324950709 620
; mpfd: + 2961598324950709 620 (7.21238e+186) class: Pos. norm. non-zero
; hwf : + 2961598324950709 620 (7.21238e+186) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000101 #b1001100100111011100000101111110001101111011100100000)))
(assert (= y (fp #b0 #b11001101011 #b1010100001011000111011011000001000000100011010110101)))
(assert (= r (fp #b0 #b11001101011 #b1010100001011000111011011000001000000100011010110101)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
