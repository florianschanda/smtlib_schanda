(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1284090338251357987786605008295737206935882568359375p-524 {- 578302876885887 -524 (-2.0547e-158)}
; Y = -1.6997782423467013845908013536245562136173248291015625p-578 {- 3151521031474585 -578 (-1.71813e-174)}
; -1.1284090338251357987786605008295737206935882568359375p-524 M -1.6997782423467013845908013536245562136173248291015625p-578 == -1.6997782423467013845908013536245562136173248291015625p-578
; [HW: -1.6997782423467013845908013536245562136173248291015625p-578] 

; mpf : - 3151521031474585 -578
; mpfd: - 3151521031474585 -578 (-1.71813e-174) class: Neg. norm. non-zero
; hwf : - 3151521031474585 -578 (-1.71813e-174) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110011 #b0010000011011111011010100001100011001010001101111111)))
(assert (= y (fp #b1 #b00110111101 #b1011001100100100101010101011100101010100110110011001)))
(assert (= r (fp #b1 #b00110111101 #b1011001100100100101010101011100101010100110110011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
