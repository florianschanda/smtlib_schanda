(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.344285929366174858756721732788719236850738525390625p-2 {- 1550525983202410 -2 (-0.336071)}
; Y = -1.9461623095502604829931669883080758154392242431640625p-148 {- 4261136224722561 -148 (-5.45431e-045)}
; -1.344285929366174858756721732788719236850738525390625p-2 M -1.9461623095502604829931669883080758154392242431640625p-148 == -1.9461623095502604829931669883080758154392242431640625p-148
; [HW: -1.9461623095502604829931669883080758154392242431640625p-148] 

; mpf : - 4261136224722561 -148
; mpfd: - 4261136224722561 -148 (-5.45431e-045) class: Neg. norm. non-zero
; hwf : - 4261136224722561 -148 (-5.45431e-045) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111111101 #b0101100000100011000111110110011100011001110001101010)))
(assert (= y (fp #b1 #b01101101011 #b1111001000110111101100010111000000111001111010000001)))
(assert (= r (fp #b1 #b01101101011 #b1111001000110111101100010111000000111001111010000001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
