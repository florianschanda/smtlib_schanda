(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1966381086777158060385772841982543468475341796875p363 {+ 885579312967800 363 (2.24828e+109)}
; Y = 1.0206344093870598488393852676381357014179229736328125p-856 {+ 92929118426573 -856 (2.12419e-258)}
; 1.1966381086777158060385772841982543468475341796875p363 M 1.0206344093870598488393852676381357014179229736328125p-856 == 1.1966381086777158060385772841982543468475341796875p363
; [HW: 1.1966381086777158060385772841982543468475341796875p363] 

; mpf : + 885579312967800 363
; mpfd: + 885579312967800 363 (2.24828e+109) class: Pos. norm. non-zero
; hwf : + 885579312967800 363 (2.24828e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101010 #b0011001001010110111000000000010111101011000001111000)))
(assert (= y (fp #b0 #b00010100111 #b0000010101001000010010111111000101111101010111001101)))
(assert (= r (fp #b0 #b10101101010 #b0011001001010110111000000000010111101011000001111000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
