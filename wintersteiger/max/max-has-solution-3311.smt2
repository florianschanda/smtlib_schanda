(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.164624684653067898665312895900569856166839599609375p756 {+ 741403668459542 756 (4.41431e+227)}
; Y = 1.7155603141108366482825431376113556325435638427734375p-575 {+ 3222597163990679 -575 (1.38726e-173)}
; 1.164624684653067898665312895900569856166839599609375p756 M 1.7155603141108366482825431376113556325435638427734375p-575 == 1.164624684653067898665312895900569856166839599609375p756
; [HW: 1.164624684653067898665312895900569856166839599609375p756] 

; mpf : + 741403668459542 756
; mpfd: + 741403668459542 756 (4.41431e+227) class: Pos. norm. non-zero
; hwf : + 741403668459542 756 (4.41431e+227) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110011 #b0010101000100100110101111110010010110011000000010110)))
(assert (= y (fp #b0 #b00111000000 #b1011011100101110111101011111001101101011111010010111)))
(assert (= r (fp #b0 #b11011110011 #b0010101000100100110101111110010010110011000000010110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
