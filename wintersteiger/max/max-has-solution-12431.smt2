(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8878589579538422871252123513841070234775543212890625p-302 {- 3998561272198481 -302 (-2.31692e-091)}
; Y = -1.610111418994375487301340399426408112049102783203125p-264 {- 2747697559237554 -264 (-5.43172e-080)}
; -1.8878589579538422871252123513841070234775543212890625p-302 M -1.610111418994375487301340399426408112049102783203125p-264 == -1.8878589579538422871252123513841070234775543212890625p-302
; [HW: -1.8878589579538422871252123513841070234775543212890625p-302] 

; mpf : - 3998561272198481 -302
; mpfd: - 3998561272198481 -302 (-2.31692e-091) class: Neg. norm. non-zero
; hwf : - 3998561272198481 -302 (-2.31692e-091) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010001 #b1110001101001010101110011000001111011111010101010001)))
(assert (= y (fp #b1 #b01011110111 #b1001110000110000010000110000111101111111001110110010)))
(assert (= r (fp #b1 #b01011010001 #b1110001101001010101110011000001111011111010101010001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
