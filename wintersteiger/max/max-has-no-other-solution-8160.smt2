(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.550450316798382299765535208280198276042938232421875p-701 {+ 2479007841619166 -701 (1.47377e-211)}
; Y = 1.840014056162625255552711678319610655307769775390625p457 {+ 3783086990319978 457 (6.84745e+137)}
; 1.550450316798382299765535208280198276042938232421875p-701 M 1.840014056162625255552711678319610655307769775390625p457 == 1.840014056162625255552711678319610655307769775390625p457
; [HW: 1.840014056162625255552711678319610655307769775390625p457] 

; mpf : + 3783086990319978 457
; mpfd: + 3783086990319978 457 (6.84745e+137) class: Pos. norm. non-zero
; hwf : + 3783086990319978 457 (6.84745e+137) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000010 #b1000110011101010010011111101110010111000110011011110)))
(assert (= y (fp #b0 #b10111001000 #b1101011100001011001010010100001101100110000101101010)))
(assert (= r (fp #b0 #b10111001000 #b1101011100001011001010010100001101100110000101101010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
