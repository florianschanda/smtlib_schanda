(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.031966035874094078650387018569745123386383056640625p-491 {+ 143962227251082 -491 (1.61413e-148)}
; Y = -1.408146130039490184771011627162806689739227294921875p-897 {- 1838126759158558 -897 (-1.33273e-270)}
; 1.031966035874094078650387018569745123386383056640625p-491 M -1.408146130039490184771011627162806689739227294921875p-897 == 1.031966035874094078650387018569745123386383056640625p-491
; [HW: 1.031966035874094078650387018569745123386383056640625p-491] 

; mpf : + 143962227251082 -491
; mpfd: + 143962227251082 -491 (1.61413e-148) class: Pos. norm. non-zero
; hwf : + 143962227251082 -491 (1.61413e-148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000010100 #b0000100000101110111011010001011010101001011110001010)))
(assert (= y (fp #b1 #b00001111110 #b0110100001111100010000111100100010000010001100011110)))
(assert (= r (fp #b0 #b01000010100 #b0000100000101110111011010001011010101001011110001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
