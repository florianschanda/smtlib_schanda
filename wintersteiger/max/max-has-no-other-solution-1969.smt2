(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.990379736008588640316929740947671234607696533203125p-389 {+ 4460273810043570 -389 (1.57858e-117)}
; Y = 1.7311038230180095798260708761517889797687530517578125p182 {+ 3292598904913053 182 (1.06116e+055)}
; 1.990379736008588640316929740947671234607696533203125p-389 M 1.7311038230180095798260708761517889797687530517578125p182 == 1.7311038230180095798260708761517889797687530517578125p182
; [HW: 1.7311038230180095798260708761517889797687530517578125p182] 

; mpf : + 3292598904913053 182
; mpfd: + 3292598904913053 182 (1.06116e+055) class: Pos. norm. non-zero
; hwf : + 3292598904913053 182 (1.06116e+055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001111010 #b1111110110001001100001101100000011000111001010110010)))
(assert (= y (fp #b0 #b10010110101 #b1011101100101001100111101100000111010111110010011101)))
(assert (= r (fp #b0 #b10010110101 #b1011101100101001100111101100000111010111110010011101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
