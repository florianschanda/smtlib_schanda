(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5263573404186672188842521791229955852031707763671875p-837 {+ 2370502722173235 -837 (1.66552e-252)}
; Y = 1.5920084920994010957429054542444646358489990234375p165 {+ 2666169224419032 165 (7.44551e+049)}
; 1.5263573404186672188842521791229955852031707763671875p-837 M 1.5920084920994010957429054542444646358489990234375p165 == 1.5920084920994010957429054542444646358489990234375p165
; [HW: 1.5920084920994010957429054542444646358489990234375p165] 

; mpf : + 2666169224419032 165
; mpfd: + 2666169224419032 165 (7.44551e+049) class: Pos. norm. non-zero
; hwf : + 2666169224419032 165 (7.44551e+049) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111010 #b1000011010111111010110101100101100011011100100110011)))
(assert (= y (fp #b0 #b10010100100 #b1001011110001101110111100101100010000101011011011000)))
(assert (= r (fp #b0 #b10010100100 #b1001011110001101110111100101100010000101011011011000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
