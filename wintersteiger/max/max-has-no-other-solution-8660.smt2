(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.557285411526664109516104872454889118671417236328125p878 {- 2509790371690498 878 (-3.13837e+264)}
; Y = 1.5816631036878445737414722316316328942775726318359375p315 {+ 2619577737023743 315 (1.05575e+095)}
; -1.557285411526664109516104872454889118671417236328125p878 M 1.5816631036878445737414722316316328942775726318359375p315 == 1.5816631036878445737414722316316328942775726318359375p315
; [HW: 1.5816631036878445737414722316316328942775726318359375p315] 

; mpf : + 2619577737023743 315
; mpfd: + 2619577737023743 315 (1.05575e+095) class: Pos. norm. non-zero
; hwf : + 2619577737023743 315 (1.05575e+095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101101 #b1000111010101010010000011011100100001011100000000010)))
(assert (= y (fp #b0 #b10100111010 #b1001010011100111110111111000011110100001000011111111)))
(assert (= r (fp #b0 #b10100111010 #b1001010011100111110111111000011110100001000011111111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
