(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9998954857102131388302268533152528107166290283203125p938 {- 4503128936853957 938 (-4.64669e+282)}
; Y = 1.039294874484443909068431821651756763458251953125p-587 {+ 176968382085712 -587 (2.05178e-177)}
; -1.9998954857102131388302268533152528107166290283203125p938 M 1.039294874484443909068431821651756763458251953125p-587 == 1.039294874484443909068431821651756763458251953125p-587
; [HW: 1.039294874484443909068431821651756763458251953125p-587] 

; mpf : + 176968382085712 -587
; mpfd: + 176968382085712 -587 (2.05178e-177) class: Pos. norm. non-zero
; hwf : + 176968382085712 -587 (2.05178e-177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110101001 #b1111111111111001001001101000101010001011000111000101)))
(assert (= y (fp #b0 #b00110110100 #b0000101000001111001110101001100011001111101001010000)))
(assert (= r (fp #b0 #b00110110100 #b0000101000001111001110101001100011001111101001010000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
