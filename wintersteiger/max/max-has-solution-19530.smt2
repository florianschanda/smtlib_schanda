(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.624803282683270122532803725334815680980682373046875p-158 {- 2813863831072238 -158 (-4.44694e-048)}
; Y = -1.880365776248684728244597863522358238697052001953125p-530 {- 3964814981863314 -530 (-5.34989e-160)}
; -1.624803282683270122532803725334815680980682373046875p-158 M -1.880365776248684728244597863522358238697052001953125p-530 == -1.880365776248684728244597863522358238697052001953125p-530
; [HW: -1.880365776248684728244597863522358238697052001953125p-530] 

; mpf : - 3964814981863314 -530
; mpfd: - 3964814981863314 -530 (-5.34989e-160) class: Neg. norm. non-zero
; hwf : - 3964814981863314 -530 (-5.34989e-160) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100001 #b1001111111110011000110111010000110001110110111101110)))
(assert (= y (fp #b1 #b00111101101 #b1110000101011111101001101100100110000001011110010010)))
(assert (= r (fp #b1 #b00111101101 #b1110000101011111101001101100100110000001011110010010)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
