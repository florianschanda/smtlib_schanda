(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.599458003001588135560950831859372556209564208984375p-890 {- 2699718838942214 -890 (-1.93766e-268)}
; Y = -1.648638472527972798076234539621509611606597900390625p-664 {- 2921207983175146 -664 (-2.15381e-200)}
; -1.599458003001588135560950831859372556209564208984375p-890 M -1.648638472527972798076234539621509611606597900390625p-664 == -1.599458003001588135560950831859372556209564208984375p-890
; [HW: -1.599458003001588135560950831859372556209564208984375p-890] 

; mpf : - 2699718838942214 -890
; mpfd: - 2699718838942214 -890 (-1.93766e-268) class: Neg. norm. non-zero
; hwf : - 2699718838942214 -890 (-1.93766e-268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010000101 #b1001100101110110000101000110011000110111101000000110)))
(assert (= y (fp #b1 #b00101100111 #b1010011000001101001010111100001001101111010111101010)))
(assert (= r (fp #b1 #b00010000101 #b1001100101110110000101000110011000110111101000000110)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
