(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6112247825571006654143957348424009978771209716796875p908 {+ 2752711702963771 908 (3.48652e+273)}
; Y = 1.42351826787902790982798251206986606121063232421875p225 {+ 1907356713404588 225 (7.6756e+067)}
; 1.6112247825571006654143957348424009978771209716796875p908 M 1.42351826787902790982798251206986606121063232421875p225 == 1.6112247825571006654143957348424009978771209716796875p908
; [HW: 1.6112247825571006654143957348424009978771209716796875p908] 

; mpf : + 2752711702963771 908
; mpfd: + 2752711702963771 908 (3.48652e+273) class: Pos. norm. non-zero
; hwf : + 2752711702963771 908 (3.48652e+273) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001011 #b1001110001111001001110100011001110010110011000111011)))
(assert (= y (fp #b0 #b10011100000 #b0110110001101011101100010111010111001100100010101100)))
(assert (= r (fp #b0 #b11110001011 #b1001110001111001001110100011001110010110011000111011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
