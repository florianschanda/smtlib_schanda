(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.501078166115522805057480582036077976226806640625p667 {- 2256655442201360 667 (-9.19201e+200)}
; Y = -1.7088482448079351794234526096261106431484222412109375p-906 {- 3192368691179247 -906 (-3.15884e-273)}
; -1.501078166115522805057480582036077976226806640625p667 M -1.7088482448079351794234526096261106431484222412109375p-906 == -1.7088482448079351794234526096261106431484222412109375p-906
; [HW: -1.7088482448079351794234526096261106431484222412109375p-906] 

; mpf : - 3192368691179247 -906
; mpfd: - 3192368691179247 -906 (-3.15884e-273) class: Neg. norm. non-zero
; hwf : - 3192368691179247 -906 (-3.15884e-273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010011010 #b1000000001000110101010001010000000110100101100010000)))
(assert (= y (fp #b1 #b00001110101 #b1011010101110111000101000001110101000110111011101111)))
(assert (= r (fp #b1 #b00001110101 #b1011010101110111000101000001110101000110111011101111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
