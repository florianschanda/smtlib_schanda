(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1885388467489883534966566003276966512203216552734375p993 {+ 849103479963607 993 (9.94945e+298)}
; Y = 1.2487365215343679825110712044988758862018585205078125p-591 {+ 1120209705695613 -591 (1.54079e-178)}
; 1.1885388467489883534966566003276966512203216552734375p993 M 1.2487365215343679825110712044988758862018585205078125p-591 == 1.1885388467489883534966566003276966512203216552734375p993
; [HW: 1.1885388467489883534966566003276966512203216552734375p993] 

; mpf : + 849103479963607 993
; mpfd: + 849103479963607 993 (9.94945e+298) class: Pos. norm. non-zero
; hwf : + 849103479963607 993 (9.94945e+298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100000 #b0011000001000100000101001111010011001111111111010111)))
(assert (= y (fp #b0 #b00110110000 #b0011111110101101001100100101100101001111100101111101)))
(assert (= r (fp #b0 #b11111100000 #b0011000001000100000101001111010011001111111111010111)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
