(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6189485589321679359642303097643889486789703369140625p-100 {+ 2787496499368417 -100 (1.27713e-030)}
; Y = -1.4056055066050412438727335029398091137409210205078125p375 {- 1826684808405885 375 (-1.08171e+113)}
; 1.6189485589321679359642303097643889486789703369140625p-100 M -1.4056055066050412438727335029398091137409210205078125p375 == 1.6189485589321679359642303097643889486789703369140625p-100
; [HW: 1.6189485589321679359642303097643889486789703369140625p-100] 

; mpf : + 2787496499368417 -100
; mpfd: + 2787496499368417 -100 (1.27713e-030) class: Pos. norm. non-zero
; hwf : + 2787496499368417 -100 (1.27713e-030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011011 #b1001111001110011011010011010101010000101000111100001)))
(assert (= y (fp #b1 #b10101110110 #b0110011111010101110000110011000111110010001101111101)))
(assert (= r (fp #b0 #b01110011011 #b1001111001110011011010011010101010000101000111100001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
