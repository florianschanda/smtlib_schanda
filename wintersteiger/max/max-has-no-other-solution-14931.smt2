(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6425499546473985024164221613318659365177154541015625p-979 {- 2893787736316953 -979 (-3.21479e-295)}
; Y = -1.732923623828417358794240499264560639858245849609375p-307 {- 3300794559164694 -307 (-6.64616e-093)}
; -1.6425499546473985024164221613318659365177154541015625p-979 M -1.732923623828417358794240499264560639858245849609375p-307 == -1.6425499546473985024164221613318659365177154541015625p-979
; [HW: -1.6425499546473985024164221613318659365177154541015625p-979] 

; mpf : - 2893787736316953 -979
; mpfd: - 2893787736316953 -979 (-3.21479e-295) class: Neg. norm. non-zero
; hwf : - 2893787736316953 -979 (-3.21479e-295) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000101100 #b1010010001111110001001110110000101000001110000011001)))
(assert (= y (fp #b1 #b01011001100 #b1011101110100000111000011111001011001111000100010110)))
(assert (= r (fp #b1 #b00000101100 #b1010010001111110001001110110000101000001110000011001)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
