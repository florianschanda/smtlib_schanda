(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8579107633882505634659310089773498475551605224609375p-960 {+ 3863686594312463 -960 (1.90647e-289)}
; Y = -1.97002825431235972786225829622708261013031005859375p649 {- 4368618884659996 649 (-4.60193e+195)}
; 1.8579107633882505634659310089773498475551605224609375p-960 M -1.97002825431235972786225829622708261013031005859375p649 == 1.8579107633882505634659310089773498475551605224609375p-960
; [HW: 1.8579107633882505634659310089773498475551605224609375p-960] 

; mpf : + 3863686594312463 -960
; mpfd: + 3863686594312463 -960 (1.90647e-289) class: Pos. norm. non-zero
; hwf : + 3863686594312463 -960 (1.90647e-289) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000111111 #b1101101110100000000010100010111110100011100100001111)))
(assert (= y (fp #b1 #b11010001000 #b1111100001010011110001011000110001110111101100011100)))
(assert (= r (fp #b0 #b00000111111 #b1101101110100000000010100010111110100011100100001111)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
