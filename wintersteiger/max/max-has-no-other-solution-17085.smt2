(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.429210312028735163636383731500245630741119384765625p980 {- 1932991401316186 980 (-1.46047e+295)}
; Y = -1.0341087201262844086357972628320567309856414794921875p29 {- 153612019250819 29 (-5.55183e+008)}
; -1.429210312028735163636383731500245630741119384765625p980 M -1.0341087201262844086357972628320567309856414794921875p29 == -1.0341087201262844086357972628320567309856414794921875p29
; [HW: -1.0341087201262844086357972628320567309856414794921875p29] 

; mpf : - 153612019250819 29
; mpfd: - 153612019250819 29 (-5.55183e+008) class: Neg. norm. non-zero
; hwf : - 153612019250819 29 (-5.55183e+008) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010011 #b0110110111100000101110100001110101000100111101011010)))
(assert (= y (fp #b1 #b10000011100 #b0000100010111011010110010101110101110011011010000011)))
(assert (= r (fp #b1 #b10000011100 #b0000100010111011010110010101110101110011011010000011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
