(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1508806154023527579255414821091108024120330810546875p930 {+ 679505883303467 930 (1.04454e+280)}
; Y = 1.86142306364609932956000193371437489986419677734375p903 {+ 3879504588444924 903 (1.25873e+272)}
; 1.1508806154023527579255414821091108024120330810546875p930 M 1.86142306364609932956000193371437489986419677734375p903 == 1.1508806154023527579255414821091108024120330810546875p930
; [HW: 1.1508806154023527579255414821091108024120330810546875p930] 

; mpf : + 679505883303467 930
; mpfd: + 679505883303467 930 (1.04454e+280) class: Pos. norm. non-zero
; hwf : + 679505883303467 930 (1.04454e+280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110100001 #b0010011010100000000111001010110011000000111000101011)))
(assert (= y (fp #b0 #b11110000110 #b1101110010000110001110001100111001100001010011111100)))
(assert (= r (fp #b0 #b11110100001 #b0010011010100000000111001010110011000000111000101011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
