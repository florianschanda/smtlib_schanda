(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5763914794046509637581721108290366828441619873046875p555 {- 2595836451866315 555 (-1.85914e+167)}
; Y = -1.95274695055197700099824942299164831638336181640625p-636 {- 4290790811484260 -636 (-6.84808e-192)}
; -1.5763914794046509637581721108290366828441619873046875p555 M -1.95274695055197700099824942299164831638336181640625p-636 == -1.95274695055197700099824942299164831638336181640625p-636
; [HW: -1.95274695055197700099824942299164831638336181640625p-636] 

; mpf : - 4290790811484260 -636
; mpfd: - 4290790811484260 -636 (-6.84808e-192) class: Neg. norm. non-zero
; hwf : - 4290790811484260 -636 (-6.84808e-192) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101010 #b1001001110001110011001000101100110111100011011001011)))
(assert (= y (fp #b1 #b00110000011 #b1111001111100111001110010110000111111100000001100100)))
(assert (= r (fp #b1 #b00110000011 #b1111001111100111001110010110000111111100000001100100)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
