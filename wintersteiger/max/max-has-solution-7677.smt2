(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8837197581818905245398809711332432925701141357421875p-529 {+ 3979919973647907 -529 (1.07189e-159)}
; Y = 1.4472391286914432217969306293525733053684234619140625p-829 {+ 2014185973320289 -829 (4.04272e-250)}
; 1.8837197581818905245398809711332432925701141357421875p-529 M 1.4472391286914432217969306293525733053684234619140625p-829 == 1.8837197581818905245398809711332432925701141357421875p-529
; [HW: 1.8837197581818905245398809711332432925701141357421875p-529] 

; mpf : + 3979919973647907 -529
; mpfd: + 3979919973647907 -529 (1.07189e-159) class: Pos. norm. non-zero
; hwf : + 3979919973647907 -529 (1.07189e-159) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101110 #b1110001000111011011101010100010000111000011000100011)))
(assert (= y (fp #b0 #b00011000010 #b0111001001111110010000110111011100111000101001100001)))
(assert (= r (fp #b0 #b00111101110 #b1110001000111011011101010100010000111000011000100011)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
