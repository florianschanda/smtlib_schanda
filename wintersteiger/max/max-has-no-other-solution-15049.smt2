(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2391038375564218387836490364861674606800079345703125p350 {- 1076827953721957 350 (-2.84188e+105)}
; Y = -1.09273708965396121328694789553992450237274169921875p249 {- 417650722409004 249 (-9.88518e+074)}
; -1.2391038375564218387836490364861674606800079345703125p350 M -1.09273708965396121328694789553992450237274169921875p249 == -1.09273708965396121328694789553992450237274169921875p249
; [HW: -1.09273708965396121328694789553992450237274169921875p249] 

; mpf : - 417650722409004 249
; mpfd: - 417650722409004 249 (-9.88518e+074) class: Neg. norm. non-zero
; hwf : - 417650722409004 249 (-9.88518e+074) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101011101 #b0011110100110101111010001011101010100111001001100101)))
(assert (= y (fp #b1 #b10011111000 #b0001011110111101100111100010111100110000101000101100)))
(assert (= r (fp #b1 #b10011111000 #b0001011110111101100111100010111100110000101000101100)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
