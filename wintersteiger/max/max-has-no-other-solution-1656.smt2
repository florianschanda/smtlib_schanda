(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9478044824477851459931798672187142074108123779296875p271 {+ 4268531913971931 271 (7.39051e+081)}
; Y = 1.0092401955565606375131437744130380451679229736328125p97 {+ 41614141265357 97 (1.5992e+029)}
; 1.9478044824477851459931798672187142074108123779296875p271 M 1.0092401955565606375131437744130380451679229736328125p97 == 1.9478044824477851459931798672187142074108123779296875p271
; [HW: 1.9478044824477851459931798672187142074108123779296875p271] 

; mpf : + 4268531913971931 271
; mpfd: + 4268531913971931 271 (7.39051e+081) class: Pos. norm. non-zero
; hwf : + 4268531913971931 271 (7.39051e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001110 #b1111001010100011010100001000011100011101100011011011)))
(assert (= y (fp #b0 #b10001100000 #b0000001001011101100100001100000110111001010111001101)))
(assert (= r (fp #b0 #b10100001110 #b1111001010100011010100001000011100011101100011011011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
