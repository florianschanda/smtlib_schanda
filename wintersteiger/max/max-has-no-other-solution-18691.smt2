(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8490553040926318573156095226295292377471923828125p-654 {- 3823805151128520 -654 (-2.47362e-197)}
; Y = -1.07445520289840512617729473276995122432708740234375p-518 {- 335316424029052 -518 (-1.25213e-156)}
; -1.8490553040926318573156095226295292377471923828125p-654 M -1.07445520289840512617729473276995122432708740234375p-518 == -1.8490553040926318573156095226295292377471923828125p-654
; [HW: -1.8490553040926318573156095226295292377471923828125p-654] 

; mpf : - 3823805151128520 -654
; mpfd: - 3823805151128520 -654 (-2.47362e-197) class: Neg. norm. non-zero
; hwf : - 3823805151128520 -654 (-2.47362e-197) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101110001 #b1101100101011011101100000011101110010010101111001000)))
(assert (= y (fp #b1 #b00111111001 #b0001001100001111011111110000010101110111001101111100)))
(assert (= r (fp #b1 #b00101110001 #b1101100101011011101100000011101110010010101111001000)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
