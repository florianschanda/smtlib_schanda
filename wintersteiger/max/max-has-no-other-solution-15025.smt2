(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7213096389950603981588983515393920242786407470703125p669 {+ 3248489821396901 669 (4.21625e+201)}
; Y = 1.6441972507532096603455329386633820831775665283203125p102 {+ 2901206498445253 102 (8.33707e+030)}
; 1.7213096389950603981588983515393920242786407470703125p669 M 1.6441972507532096603455329386633820831775665283203125p102 == 1.7213096389950603981588983515393920242786407470703125p669
; [HW: 1.7213096389950603981588983515393920242786407470703125p669] 

; mpf : + 3248489821396901 669
; mpfd: + 3248489821396901 669 (4.21625e+201) class: Pos. norm. non-zero
; hwf : + 3248489821396901 669 (4.21625e+201) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010011100 #b1011100010100111101111111001110111000101111110100101)))
(assert (= y (fp #b0 #b10001100101 #b1010010011101010000111000110110000101000011111000101)))
(assert (= r (fp #b0 #b11010011100 #b1011100010100111101111111001110111000101111110100101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
