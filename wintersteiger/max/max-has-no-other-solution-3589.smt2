(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.253209167621285313742873768205754458904266357421875p899 {+ 1140352712946014 899 (5.29651e+270)}
; Y = -1.0961512502675223590387076910701580345630645751953125p856 {- 433026734876021 856 (-5.2668e+257)}
; 1.253209167621285313742873768205754458904266357421875p899 M -1.0961512502675223590387076910701580345630645751953125p856 == 1.253209167621285313742873768205754458904266357421875p899
; [HW: 1.253209167621285313742873768205754458904266357421875p899] 

; mpf : + 1140352712946014 899
; mpfd: + 1140352712946014 899 (5.29651e+270) class: Pos. norm. non-zero
; hwf : + 1140352712946014 899 (5.29651e+270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110000010 #b0100000011010010010100001110010111111011000101011110)))
(assert (= y (fp #b1 #b11101010111 #b0001100010011101010111100100101101011110010101110101)))
(assert (= r (fp #b0 #b11110000010 #b0100000011010010010100001110010111111011000101011110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
