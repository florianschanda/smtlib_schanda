(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5062391087003279555034396253176964819431304931640625p-431 {+ 2279898261303169 -431 (2.71623e-130)}
; Y = 1.5353796206743950403250664749066345393657684326171875p181 {+ 2411135460170963 181 (4.70592e+054)}
; 1.5062391087003279555034396253176964819431304931640625p-431 M 1.5353796206743950403250664749066345393657684326171875p181 == 1.5353796206743950403250664749066345393657684326171875p181
; [HW: 1.5353796206743950403250664749066345393657684326171875p181] 

; mpf : + 2411135460170963 181
; mpfd: + 2411135460170963 181 (4.70592e+054) class: Pos. norm. non-zero
; hwf : + 2411135460170963 181 (4.70592e+054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010000 #b1000000110011000111000101101111111010010111110000001)))
(assert (= y (fp #b0 #b10010110100 #b1000100100001110101000111000100110111101110011010011)))
(assert (= r (fp #b0 #b10010110100 #b1000100100001110101000111000100110111101110011010011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
