(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7322338293988532864631224583717994391918182373046875p31 {+ 3297688001228747 31 (3.71994e+009)}
; Y = 1.402473076780650362849200973869301378726959228515625p592 {+ 1812577598615994 592 (2.27327e+178)}
; 1.7322338293988532864631224583717994391918182373046875p31 M 1.402473076780650362849200973869301378726959228515625p592 == 1.402473076780650362849200973869301378726959228515625p592
; [HW: 1.402473076780650362849200973869301378726959228515625p592] 

; mpf : + 1812577598615994 592
; mpfd: + 1812577598615994 592 (2.27327e+178) class: Pos. norm. non-zero
; hwf : + 1812577598615994 592 (2.27327e+178) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011110 #b1011101101110011101011010001111001001010111111001011)))
(assert (= y (fp #b0 #b11001001111 #b0110011100001000011110011011111001001011000110111010)))
(assert (= r (fp #b0 #b11001001111 #b0110011100001000011110011011111001001011000110111010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
