(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.182511240788260753475924502708949148654937744140625p-394 {+ 821957556004938 -394 (2.93081e-119)}
; Y = -1.085314893826138327170838238089345395565032958984375p-557 {- 384224124044550 -557 (-2.30064e-168)}
; 1.182511240788260753475924502708949148654937744140625p-394 M -1.085314893826138327170838238089345395565032958984375p-557 == 1.182511240788260753475924502708949148654937744140625p-394
; [HW: 1.182511240788260753475924502708949148654937744140625p-394] 

; mpf : + 821957556004938 -394
; mpfd: + 821957556004938 -394 (2.93081e-119) class: Pos. norm. non-zero
; hwf : + 821957556004938 -394 (2.93081e-119) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001110101 #b0010111010111001000011101000001001010110100001001010)))
(assert (= y (fp #b1 #b00111010010 #b0001010111010111001100100110011011011000010100000110)))
(assert (= r (fp #b0 #b01001110101 #b0010111010111001000011101000001001010110100001001010)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
