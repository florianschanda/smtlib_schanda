(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0859235926339334543655468223732896149158477783203125p-135 {- 386965459768517 -135 (-2.49316e-041)}
; Y = 1.2480774138045453991452404807205311954021453857421875p-672 {+ 1117241348369187 -672 (6.36919e-203)}
; -1.0859235926339334543655468223732896149158477783203125p-135 M 1.2480774138045453991452404807205311954021453857421875p-672 == 1.2480774138045453991452404807205311954021453857421875p-672
; [HW: 1.2480774138045453991452404807205311954021453857421875p-672] 

; mpf : + 1117241348369187 -672
; mpfd: + 1117241348369187 -672 (6.36919e-203) class: Pos. norm. non-zero
; hwf : + 1117241348369187 -672 (6.36919e-203) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101111000 #b0001010111111111000101101010110001010001010011000101)))
(assert (= y (fp #b0 #b00101011111 #b0011111110000010000000000101101100101010101100100011)))
(assert (= r (fp #b0 #b00101011111 #b0011111110000010000000000101101100101010101100100011)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
