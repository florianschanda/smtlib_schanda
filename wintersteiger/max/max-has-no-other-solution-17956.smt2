(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6443471652995189646873086530831642448902130126953125p915 {+ 2901881653540149 915 (4.55449e+275)}
; Y = 1.6942365382928599171208361440221779048442840576171875p-616 {+ 3126563415162707 -616 (6.23012e-186)}
; 1.6443471652995189646873086530831642448902130126953125p915 M 1.6942365382928599171208361440221779048442840576171875p-616 == 1.6443471652995189646873086530831642448902130126953125p915
; [HW: 1.6443471652995189646873086530831642448902130126953125p915] 

; mpf : + 2901881653540149 915
; mpfd: + 2901881653540149 915 (4.55449e+275) class: Pos. norm. non-zero
; hwf : + 2901881653540149 915 (4.55449e+275) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110010010 #b1010010011110011111011111001001000111011010100110101)))
(assert (= y (fp #b0 #b00110010111 #b1011000110111001011111000101101110100111111101010011)))
(assert (= r (fp #b0 #b11110010010 #b1010010011110011111011111001001000111011010100110101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
