(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2762101526412639174168361932970583438873291015625p696 {- 1243939940511144 696 (-4.19565e+209)}
; Y = -1.5312461785757192078705202220589853823184967041015625p474 {- 2392520091875609 474 (-7.46901e+142)}
; -1.2762101526412639174168361932970583438873291015625p696 M -1.5312461785757192078705202220589853823184967041015625p474 == -1.5312461785757192078705202220589853823184967041015625p474
; [HW: -1.5312461785757192078705202220589853823184967041015625p474] 

; mpf : - 2392520091875609 474
; mpfd: - 2392520091875609 474 (-7.46901e+142) class: Neg. norm. non-zero
; hwf : - 2392520091875609 474 (-7.46901e+142) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110111 #b0100011010110101101101010110010001101010110110101000)))
(assert (= y (fp #b1 #b10111011001 #b1000011111111111101111111110001100011011100100011001)))
(assert (= r (fp #b1 #b10111011001 #b1000011111111111101111111110001100011011100100011001)))
(assert (= (fp.max x y) r))
(check-sat)
(exit)
