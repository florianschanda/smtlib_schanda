(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.595949927031521387021939517580904066562652587890625p262 {- 2683919869310634 262 (-1.18271e+079)}
; Y = 1.2707983096530075517449631661293096840381622314453125p-120 {+ 1219567166445845 -120 (9.56042e-037)}
; -1.595949927031521387021939517580904066562652587890625p262 M 1.2707983096530075517449631661293096840381622314453125p-120 == 1.2707983096530075517449631661293096840381622314453125p-120
; [HW: 1.2707983096530075517449631661293096840381622314453125p-120] 

; mpf : + 1219567166445845 -120
; mpfd: + 1219567166445845 -120 (9.56042e-037) class: Pos. norm. non-zero
; hwf : + 1219567166445845 -120 (9.56042e-037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000101 #b1001100010010000001011001010011010100111011010101010)))
(assert (= y (fp #b0 #b01110000111 #b0100010101010011000010011011101111000101100100010101)))
(assert (= r (fp #b0 #b01110000111 #b0100010101010011000010011011101111000101100100010101)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
