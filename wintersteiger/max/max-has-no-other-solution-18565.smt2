(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.668080280005234339313346936251036822795867919921875p732 {+ 3008766100085150 732 (3.76855e+220)}
; Y = -1.654511982978121853449238187749870121479034423828125p7 {- 2947659922649794 7 (-211.778)}
; 1.668080280005234339313346936251036822795867919921875p732 M -1.654511982978121853449238187749870121479034423828125p7 == 1.668080280005234339313346936251036822795867919921875p732
; [HW: 1.668080280005234339313346936251036822795867919921875p732] 

; mpf : + 3008766100085150 732
; mpfd: + 3008766100085150 732 (3.76855e+220) class: Pos. norm. non-zero
; hwf : + 3008766100085150 732 (3.76855e+220) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011011011 #b1010101100000111010011110010100110111001100110011110)))
(assert (= y (fp #b1 #b10000000110 #b1010011110001110000110001110100110111011001011000010)))
(assert (= r (fp #b0 #b11011011011 #b1010101100000111010011110010100110111001100110011110)))
(assert  (not (= (fp.max x y) r)))
(check-sat)
(exit)
