(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.028549382091877628653264764579944312572479248046875p-483 {+ 128574986550638 -483 (4.11848e-146)}
; Y = -1.8603060092359076094226111308671534061431884765625p639 {- 3874473822619432 639 (-4.24377e+192)}
; Z = 1.8556271408431854741394317898084409534931182861328125p-658 {+ 3853402072669453 -658 (1.55151e-198)}
; 1.028549382091877628653264764579944312572479248046875p-483 x -1.8603060092359076094226111308671534061431884765625p639 1.8556271408431854741394317898084409534931182861328125p-658 == -1.9134165963013993749797236887388862669467926025390625p156
; [HW: -1.9134165963013993749797236887388862669467926025390625p156] 

; mpf : - 4113662642737009 156
; mpfd: - 4113662642737009 156 (-1.74779e+047) class: Neg. norm. non-zero
; hwf : - 4113662642737009 156 (-1.74779e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000011100 #b0000011101001111000000110010011001100111110101101110)))
(assert (= y (fp #b1 #b11001111110 #b1101110000111101000000111011111000111000011100101000)))
(assert (= z (fp #b0 #b00101101101 #b1101101100001010011000010101101101111101110100001101)))
(assert (= r (fp #b1 #b10010011011 #b1110100111010101101010111000100010111100111101110001)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
