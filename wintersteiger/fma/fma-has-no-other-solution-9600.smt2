(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = +zero {+ 0 -1023 (0)}
; Y = -1.1557411107199315747351420213817618787288665771484375p-504 {- 701395608204551 -504 (-2.2067e-152)}
; Z = 1.89606077646879445097738425829447805881500244140625p97 {+ 4035498979006180 97 (3.00443e+029)}
; +zero x -1.1557411107199315747351420213817618787288665771484375p-504 1.89606077646879445097738425829447805881500244140625p97 == 1.89606077646879445097738425829447805881500244140625p97
; [HW: 1.89606077646879445097738425829447805881500244140625p97] 

; mpf : + 4035498979006180 97
; mpfd: + 4035498979006180 97 (3.00443e+029) class: Pos. norm. non-zero
; hwf : + 4035498979006180 97 (3.00443e+029) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= y (fp #b1 #b01000000111 #b0010011111011110101001100100000100101111010100000111)))
(assert (= z (fp #b0 #b10001100000 #b1110010101100100001111010011001000101001011011100100)))
(assert (= r (fp #b0 #b10001100000 #b1110010101100100001111010011001000101001011011100100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
