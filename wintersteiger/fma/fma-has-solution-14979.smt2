(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4098284709165305184086491863126866519451141357421875p-786 {- 1845703348905507 -786 (-3.46409e-237)}
; Y = -1.3873242524226692129474258763366378843784332275390625p-535 {- 1744353358882289 -535 (-1.23347e-161)}
; Z = 1.1578990255182690649604637656011618673801422119140625p-40 {+ 711113992486241 -40 (1.0531e-012)}
; -1.4098284709165305184086491863126866519451141357421875p-786 x -1.3873242524226692129474258763366378843784332275390625p-535 1.1578990255182690649604637656011618673801422119140625p-40 == 1.1578990255182690649604637656011618673801422119140625p-40
; [HW: 1.1578990255182690649604637656011618673801422119140625p-40] 

; mpf : + 711113992486241 -40
; mpfd: + 711113992486241 -40 (1.0531e-012) class: Pos. norm. non-zero
; hwf : + 711113992486241 -40 (1.0531e-012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101101 #b0110100011101010100001001100011110001110011000100011)))
(assert (= y (fp #b1 #b00111101000 #b0110001100100111101011101010010100011010010111110001)))
(assert (= z (fp #b0 #b01111010111 #b0010100001101100000100100000111010101011110101100001)))
(assert (= r (fp #b0 #b01111010111 #b0010100001101100000100100000111010101011110101100001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
