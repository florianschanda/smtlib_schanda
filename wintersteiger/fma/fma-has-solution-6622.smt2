(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.220371663779419524331615320988930761814117431640625p-150 {- 992465742880010 -150 (-8.55052e-046)}
; Y = 1.115406128534635943339026198373176157474517822265625p-298 {+ 519742997464858 -298 (2.19025e-090)}
; Z = -1.794982414583584873213339960784651339054107666015625p-974 {- 3580282506084730 -974 (-1.1242e-293)}
; -1.220371663779419524331615320988930761814117431640625p-150 x 1.115406128534635943339026198373176157474517822265625p-298 -1.794982414583584873213339960784651339054107666015625p-974 == -1.3612100328695746487284168324549682438373565673828125p-448
; [HW: -1.3612100328695746487284168324549682438373565673828125p-448] 

; mpf : - 1626745369433901 -448
; mpfd: - 1626745369433901 -448 (-1.87278e-135) class: Neg. norm. non-zero
; hwf : - 1626745369433901 -448 (-1.87278e-135) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101101001 #b0011100001101010010001110000000011100101110100001010)))
(assert (= y (fp #b0 #b01011010101 #b0001110110001011010000011000101111010000011100011010)))
(assert (= z (fp #b1 #b00000110001 #b1100101110000011111101111010111110001000000101111010)))
(assert (= r (fp #b1 #b01000111111 #b0101110001111000010000101011111000101001011100101101)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
