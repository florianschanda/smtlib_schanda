(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.302076866381952857665282863308675587177276611328125p-962 {- 1360433262875010 -962 (-3.34026e-290)}
; Y = -1.1148594355594172444767764318385161459445953369140625p677 {- 517280911185377 677 (-6.9908e+203)}
; Z = -1.7452197908449000873787326781894080340862274169921875p1017 {- 3356171572358211 1017 (-2.45107e+306)}
; -1.302076866381952857665282863308675587177276611328125p-962 x -1.1148594355594172444767764318385161459445953369140625p677 -1.7452197908449000873787326781894080340862274169921875p1017 == -1.7452197908449000873787326781894080340862274169921875p1017
; [HW: -1.7452197908449000873787326781894080340862274169921875p1017] 

; mpf : - 3356171572358211 1017
; mpfd: - 3356171572358211 1017 (-2.45107e+306) class: Neg. norm. non-zero
; hwf : - 3356171572358211 1017 (-2.45107e+306) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111101 #b0100110101010100111010001101010111111101000110000010)))
(assert (= y (fp #b1 #b11010100100 #b0001110101100111011011011000111101011101010111100001)))
(assert (= z (fp #b1 #b11111111000 #b1011111011000110101110010110011000000010110001000011)))
(assert (= r (fp #b1 #b11111111000 #b1011111011000110101110010110011000000010110001000011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
