(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -0.87757507215661778587900698767043650150299072265625p-1022 {- 3952246767954180 -1023 (-1.95267e-308)}
; Y = -1.0430198803367540794084789013140834867954254150390625p903 {- 193744317054129 903 (-7.05308e+271)}
; Z = -1.2286851804676761634738113571074791252613067626953125p-581 {- 1029906493539381 -581 (-1.55243e-175)}
; -0.87757507215661778587900698767043650150299072265625p-1022 x -1.0430198803367540794084789013140834867954254150390625p903 -1.2286851804676761634738113571074791252613067626953125p-581 == 1.8306564934946276679283982957713305950164794921875p-120
; [HW: 1.8306564934946276679283982957713305950164794921875p-120] 

; mpf : + 3740944274575288 -120
; mpfd: + 3740944274575288 -120 (1.37723e-036) class: Pos. norm. non-zero
; hwf : + 3740944274575288 -120 (1.37723e-036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b1110000010101000110000101000101010110010100100000100)))
(assert (= y (fp #b1 #b11110000110 #b0000101100000011010110011101001100011111110010110001)))
(assert (= z (fp #b1 #b00110111010 #b0011101010001011000111001010101100110000010000110101)))
(assert (= r (fp #b0 #b01110000111 #b1101010010100101111001110110100111000100111110111000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
