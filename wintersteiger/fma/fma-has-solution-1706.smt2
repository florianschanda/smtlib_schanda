(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.91322550928312562490418713423423469066619873046875p-862 {+ 4112802063312716 -862 (6.22171e-260)}
; Y = 1.075354644122835878761179628781974315643310546875p254 {+ 339367147192240 254 (3.11294e+076)}
; Z = -1.8596631048893790261189451484824530780315399169921875p279 {- 3871578438843971 279 (-1.80635e+084)}
; 1.91322550928312562490418713423423469066619873046875p-862 x 1.075354644122835878761179628781974315643310546875p254 -1.8596631048893790261189451484824530780315399169921875p279 == -1.859663104889378804074340223451144993305206298828125p279
; [HW: -1.859663104889378804074340223451144993305206298828125p279] 

; mpf : - 3871578438843970 279
; mpfd: - 3871578438843970 279 (-1.80635e+084) class: Neg. norm. non-zero
; hwf : - 3871578438843970 279 (-1.80635e+084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100001 #b1110100111001001001001011010000000111110011101001100)))
(assert (= y (fp #b0 #b10011111101 #b0001001101001010011100010010010000011011111110110000)))
(assert (= z (fp #b1 #b10100010110 #b1101110000010010111000011001100100010011111001000011)))
(assert (= r (fp #b1 #b10100010110 #b1101110000010010111000011001100100010011111001000010)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
