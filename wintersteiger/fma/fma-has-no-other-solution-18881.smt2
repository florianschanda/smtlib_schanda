(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2258284569223254489855889914906583726406097412109375p-336 {+ 1017040954445039 -336 (8.75692e-102)}
; Y = 1.9939651773237876408728652677382342517375946044921875p513 {+ 4476421202214659 513 (5.34694e+154)}
; Z = 1.7259808246711203505441289962618611752986907958984375p910 {+ 3269526971466983 910 (1.49394e+274)}
; 1.2258284569223254489855889914906583726406097412109375p-336 x 1.9939651773237876408728652677382342517375946044921875p513 1.7259808246711203505441289962618611752986907958984375p910 == 1.7259808246711203505441289962618611752986907958984375p910
; [HW: 1.7259808246711203505441289962618611752986907958984375p910] 

; mpf : + 3269526971466983 910
; mpfd: + 3269526971466983 910 (1.49394e+274) class: Pos. norm. non-zero
; hwf : + 3269526971466983 910 (1.49394e+274) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101111 #b0011100111001111111001001100110011111100110011101111)))
(assert (= y (fp #b0 #b11000000000 #b1111111001110100100000000111100111110111111100000011)))
(assert (= z (fp #b0 #b11110001101 #b1011100111011001111000010001101101111100010011100111)))
(assert (= r (fp #b0 #b11110001101 #b1011100111011001111000010001101101111100010011100111)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
