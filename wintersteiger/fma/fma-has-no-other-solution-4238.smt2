(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.418970117846910294900908411364071071147918701171875p-305 {+ 1886873666614718 -305 (2.17683e-092)}
; Y = -1.7503924553326755120252755659748800098896026611328125p782 {- 3379467182217869 782 (-4.45238e+235)}
; Z = 1.3053295895769150281040538175147958099842071533203125p944 {+ 1375082225843781 944 (1.94105e+284)}
; 1.418970117846910294900908411364071071147918701171875p-305 x -1.7503924553326755120252755659748800098896026611328125p782 1.3053295895769150281040538175147958099842071533203125p944 == 1.3053295895769150281040538175147958099842071533203125p944
; [HW: 1.3053295895769150281040538175147958099842071533203125p944] 

; mpf : + 1375082225843781 944
; mpfd: + 1375082225843781 944 (1.94105e+284) class: Pos. norm. non-zero
; hwf : + 1375082225843781 944 (1.94105e+284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011001110 #b0110101101000001101000000010101000100111010110111110)))
(assert (= y (fp #b1 #b11100001101 #b1100000000011001101110000100111011010001101010001101)))
(assert (= z (fp #b0 #b11110101111 #b0100111000101010000101000111100110111011111001000101)))
(assert (= r (fp #b0 #b11110101111 #b0100111000101010000101000111100110111011111001000101)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
