(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0038921902375392836148648711969144642353057861328125p673 {- 17528866503437 673 (-3.93436e+202)}
; Y = -1.9871084839555595014104483198025263845920562744140625p-213 {- 4445541400516513 -213 (-1.5095e-064)}
; Z = -1.834192191170278096734591599670238792896270751953125p-704 {- 3756867641309842 -704 (-2.17935e-212)}
; -1.0038921902375392836148648711969144642353057861328125p673 x -1.9871084839555595014104483198025263845920562744140625p-213 -1.834192191170278096734591599670238792896270751953125p-704 == 1.9948426881977427971293082009651698172092437744140625p460
; [HW: 1.9948426881977427971293082009651698172092437744140625p460] 

; mpf : + 4480373159859617 460
; mpfd: + 4480373159859617 460 (5.93891e+138) class: Pos. norm. non-zero
; hwf : + 4480373159859617 460 (5.93891e+138) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100000 #b0000000011111111000101000001110111000111101100001101)))
(assert (= y (fp #b1 #b01100101010 #b1111110010110011001001000100000000110001011110100001)))
(assert (= z (fp #b1 #b00100111111 #b1101010110001101100111101001001110100111101010010010)))
(assert (= r (fp #b0 #b10111001011 #b1111111010101110000000101010101001111001010110100001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
