(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.134037165814263392604743785341270267963409423828125p468 {- 603649730014914 468 (-8.64301e+140)}
; Y = -1.50567611125223521639782120473682880401611328125p356 {- 2277362746205728 356 (-2.21009e+107)}
; Z = -1.0413870658223791654251044747070409357547760009765625p292 {- 186390774215625 292 (-8.2865e+087)}
; -1.134037165814263392604743785341270267963409423828125p468 x -1.50567611125223521639782120473682880401611328125p356 -1.0413870658223791654251044747070409357547760009765625p292 == 1.7074926698387262735678859826293773949146270751953125p824
; [HW: 1.7074926698387262735678859826293773949146270751953125p824] 

; mpf : + 3186263724253045 824
; mpfd: + 3186263724253045 824 (1.91018e+248) class: Pos. norm. non-zero
; hwf : + 3186263724253045 824 (1.91018e+248) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111010011 #b0010001001010000010000100111101110011110111011000010)))
(assert (= y (fp #b1 #b10101100011 #b1000000101110011111111010101100000110010011000100000)))
(assert (= z (fp #b1 #b10100100011 #b0000101010011000010101111011111000101111001111001001)))
(assert (= r (fp #b0 #b11100110111 #b1011010100011110001111010101011100011101111101110101)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
