(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.851148018074816103961666158284060657024383544921875p-226 {- 3833229897038878 -226 (-1.71657e-068)}
; Y = 1.4272342411166214493078996383701451122760772705078125p14 {+ 1924091969092733 14 (23383.8)}
; Z = 1.72904011915006350363910314626991748809814453125p582 {+ 3283304808942368 582 (2.73692e+175)}
; -1.851148018074816103961666158284060657024383544921875p-226 x 1.4272342411166214493078996383701451122760772705078125p14 1.72904011915006350363910314626991748809814453125p582 == 1.72904011915006350363910314626991748809814453125p582
; [HW: 1.72904011915006350363910314626991748809814453125p582] 

; mpf : + 3283304808942368 582
; mpfd: + 3283304808942368 582 (2.73692e+175) class: Pos. norm. non-zero
; hwf : + 3283304808942368 582 (2.73692e+175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100011101 #b1101100111100100110101100010010110101111110000011110)))
(assert (= y (fp #b0 #b10000001101 #b0110110101011111001110010010010101010011110001111101)))
(assert (= z (fp #b0 #b11001000101 #b1011101010100010010111111000110100111000101100100000)))
(assert (= r (fp #b0 #b11001000101 #b1011101010100010010111111000110100111000101100100000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
