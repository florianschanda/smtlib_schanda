(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.776445764123909309972759729134850203990936279296875p-276 {- 3496800853981838 -276 (-1.4631e-083)}
; Y = -1.78067428559876272942119612707756459712982177734375p-412 {- 3515844421720316 -412 (-1.68355e-124)}
; Z = -1.94066890248789736261869620648212730884552001953125p259 {- 4236396118723508 259 (-1.79771e+078)}
; -1.776445764123909309972759729134850203990936279296875p-276 x -1.78067428559876272942119612707756459712982177734375p-412 -1.94066890248789736261869620648212730884552001953125p259 == -1.94066890248789736261869620648212730884552001953125p259
; [HW: -1.94066890248789736261869620648212730884552001953125p259] 

; mpf : - 4236396118723508 259
; mpfd: - 4236396118723508 259 (-1.79771e+078) class: Neg. norm. non-zero
; hwf : - 4236396118723508 259 (-1.79771e+078) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101011 #b1100011011000101001001100100110000000111101010001110)))
(assert (= y (fp #b1 #b01001100011 #b1100011111011010010001010001110101111001100011111100)))
(assert (= z (fp #b1 #b10100000010 #b1111000011001111101011010101110010001100101110110100)))
(assert (= r (fp #b1 #b10100000010 #b1111000011001111101011010101110010001100101110110100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
