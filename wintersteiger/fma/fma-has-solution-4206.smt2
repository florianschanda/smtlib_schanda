(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.394358890173320819627633682102896273136138916015625p977 {- 1776034550834810 977 (-1.78107e+294)}
; Y = -1.93748179456149127730668624280951917171478271484375p-220 {- 4222042660653756 -220 (-1.14984e-066)}
; Z = -1.9705243081739738375546266979654319584369659423828125p-265 {- 4370852912646317 -265 (-3.32379e-080)}
; -1.394358890173320819627633682102896273136138916015625p977 x -1.93748179456149127730668624280951917171478271484375p-220 -1.9705243081739738375546266979654319584369659423828125p-265 == 1.350772482397887497285182689665816724300384521484375p758
; [HW: 1.350772482397887497285182689665816724300384521484375p758] 

; mpf : + 1579738821018950 758
; mpfd: + 1579738821018950 758 (2.04795e+228) class: Pos. norm. non-zero
; hwf : + 1579738821018950 758 (2.04795e+228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010000 #b0110010011110100101101000100100000101110011001111010)))
(assert (= y (fp #b1 #b01100100011 #b1110111111111110110011101001000000111100101010111100)))
(assert (= z (fp #b1 #b01011110110 #b1111100001110100010001111111001110010100100010101101)))
(assert (= r (fp #b0 #b11011110101 #b0101100111001100001110011011010000111100010101000110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
