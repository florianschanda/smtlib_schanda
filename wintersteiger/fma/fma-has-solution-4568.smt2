(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4870351869384468290746781349298544228076934814453125p-405 {+ 2193411486412309 -405 (1.79959e-122)}
; Y = -1.8855614309956489904607224161736667156219482421875p-908 {- 3988214130645688 -908 (-8.71374e-274)}
; Z = -1.2587753359487561244378639457863755524158477783203125p-821 {- 1165420506551493 -821 (-9.00164e-248)}
; 1.4870351869384468290746781349298544228076934814453125p-405 x -1.8855614309956489904607224161736667156219482421875p-908 -1.2587753359487561244378639457863755524158477783203125p-821 == -1.2587753359487561244378639457863755524158477783203125p-821
; [HW: -1.2587753359487561244378639457863755524158477783203125p-821] 

; mpf : - 1165420506551493 -821
; mpfd: - 1165420506551493 -821 (-9.00164e-248) class: Neg. norm. non-zero
; hwf : - 1165420506551493 -821 (-9.00164e-248) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001101010 #b0111110010101110010101101000011111100110111000010101)))
(assert (= y (fp #b1 #b00001110011 #b1110001010110100001001110110100010111001101010111000)))
(assert (= z (fp #b1 #b00011001010 #b0100001000111111000110011011010011101001010011000101)))
(assert (= r (fp #b1 #b00011001010 #b0100001000111111000110011011010011101001010011000101)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
