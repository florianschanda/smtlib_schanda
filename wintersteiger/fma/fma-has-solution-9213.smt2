(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.64562563742088574514355059363879263401031494140625p524 {- 2907639380109540 524 (-9.03751e+157)}
; Y = 1.5374644022592016678885329383774660527706146240234375p248 {+ 2420524481739447 248 (6.95415e+074)}
; Z = -1.5459412744002667405851525472826324403285980224609375p-737 {- 2458700919955215 -737 (-2.13839e-222)}
; -1.64562563742088574514355059363879263401031494140625p524 x 1.5374644022592016678885329383774660527706146240234375p248 -1.5459412744002667405851525472826324403285980224609375p-737 == -1.265045418489859851973733384511433541774749755859375p773
; [HW: -1.265045418489859851973733384511433541774749755859375p773] 

; mpf : - 1193658447947190 773
; mpfd: - 1193658447947190 773 (-6.28482e+232) class: Neg. norm. non-zero
; hwf : - 1193658447947190 773 (-6.28482e+232) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000001011 #b1010010101000111101110001100011000101110100011100100)))
(assert (= y (fp #b0 #b10011110111 #b1000100110010111010001000101111001110111101010110111)))
(assert (= z (fp #b1 #b00100011110 #b1000101111000010110011101010111100010101111100001111)))
(assert (= r (fp #b1 #b11100000100 #b0100001111011010000001000011110001011110010110110110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
