(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9607174963031948067282428382895886898040771484375p588 {- 4326686958359384 588 (-1.98633e+177)}
; Y = 1.828530045638455447942760656587779521942138671875p-498 {+ 3731367604802608 -498 (2.23442e-150)}
; Z = -1.63246207344892724222518154419958591461181640625p210 {- 2848355958310560 210 (-2.68622e+063)}
; -1.9607174963031948067282428382895886898040771484375p588 x 1.828530045638455447942760656587779521942138671875p-498 -1.63246207344892724222518154419958591461181640625p210 == -1.63246207344892724222518154419958591461181640625p210
; [HW: -1.63246207344892724222518154419958591461181640625p210] 

; mpf : - 2848355958310560 210
; mpfd: - 2848355958310560 210 (-2.68622e+063) class: Neg. norm. non-zero
; hwf : - 2848355958310560 210 (-2.68622e+063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001011 #b1111010111110001100101001111001101010001001101011000)))
(assert (= y (fp #b0 #b01000001101 #b1101010000011010100010111000100111000101010000110000)))
(assert (= z (fp #b1 #b10011010001 #b1010000111101001000010001101000101101100011010100000)))
(assert (= r (fp #b1 #b10011010001 #b1010000111101001000010001101000101101100011010100000)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
