(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8535462459141232027803880555438809096813201904296875p-630 {- 3844030555042331 -630 (-4.16012e-190)}
; Y = 1.199234516663235439182244590483605861663818359375p-517 {+ 897272495003888 -517 (2.79509e-156)}
; Z = -1.0156753166154743883708988505532033741474151611328125p-321 {- 70595350068365 -321 (-2.37753e-097)}
; -1.8535462459141232027803880555438809096813201904296875p-630 x 1.199234516663235439182244590483605861663818359375p-517 -1.0156753166154743883708988505532033741474151611328125p-321 == -1.0156753166154743883708988505532033741474151611328125p-321
; [HW: -1.0156753166154743883708988505532033741474151611328125p-321] 

; mpf : - 70595350068365 -321
; mpfd: - 70595350068365 -321 (-2.37753e-097) class: Neg. norm. non-zero
; hwf : - 70595350068365 -321 (-2.37753e-097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001001 #b1101101010000010000000011011101111010011001000011011)))
(assert (= y (fp #b0 #b00111111010 #b0011001100000001000010001000010101001101100011110000)))
(assert (= z (fp #b1 #b01010111110 #b0000010000000011010011000010110000110111110010001101)))
(assert (= r (fp #b1 #b01010111110 #b0000010000000011010011000010110000110111110010001101)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
