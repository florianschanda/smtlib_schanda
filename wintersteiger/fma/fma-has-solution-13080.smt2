(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.7947356185319403021338757753255777060985565185546875p-1022 {+ 3579171035478507 -1023 (1.76835e-308)}
; Y = -1.71313178702038282352759779314510524272918701171875p-606 {- 3211660050291052 -606 (-6.4508e-183)}
; Z = 1.543108420082468068557091100956313312053680419921875p703 {+ 2445942878305182 703 (6.49357e+211)}
; 0.7947356185319403021338757753255777060985565185546875p-1022 x -1.71313178702038282352759779314510524272918701171875p-606 1.543108420082468068557091100956313312053680419921875p703 == 1.5431084200824678465124861759250052273273468017578125p703
; [HW: 1.5431084200824678465124861759250052273273468017578125p703] 

; mpf : + 2445942878305181 703
; mpfd: + 2445942878305181 703 (6.49357e+211) class: Pos. norm. non-zero
; hwf : + 2445942878305181 703 (6.49357e+211) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1100101101110011110010110010001010001111100111101011)))
(assert (= y (fp #b1 #b00110100001 #b1011011010001111110011100000011011111101100101101100)))
(assert (= z (fp #b0 #b11010111110 #b1000101100001001001001110100011001101111101110011110)))
(assert (= r (fp #b0 #b11010111110 #b1000101100001001001001110100011001101111101110011101)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
