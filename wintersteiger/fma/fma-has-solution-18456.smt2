(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.250208194498720448706308161490596830844879150390625p843 {- 1126837531509482 843 (-7.33278e+253)}
; Y = 1.798554285029545507512693802709691226482391357421875p-82 {+ 3596368780494174 -82 (3.71932e-025)}
; Z = -1.915480783881104098753667130949907004833221435546875p-450 {- 4122958917151790 -450 (-6.5884e-136)}
; -1.250208194498720448706308161490596830844879150390625p843 x 1.798554285029545507512693802709691226482391357421875p-82 -1.915480783881104098753667130949907004833221435546875p-450 == -1.1242836526973627453429571687593124806880950927734375p762
; [HW: -1.1242836526973627453429571687593124806880950927734375p762] 

; mpf : - 559723811976087 762
; mpfd: - 559723811976087 762 (-2.7273e+229) class: Neg. norm. non-zero
; hwf : - 559723811976087 762 (-2.7273e+229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001010 #b0100000000001101101001001110110010010000001011101010)))
(assert (= y (fp #b0 #b01110101101 #b1100110001101110000011011011101001001000010101011110)))
(assert (= z (fp #b1 #b01000111101 #b1110101001011100111100101101101011100010110000101110)))
(assert (= r (fp #b1 #b11011111001 #b0001111111010001000011011010111111000011001110010111)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
