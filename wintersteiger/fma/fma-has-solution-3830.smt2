(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8556265675101542012015443106065504252910614013671875p-581 {+ 3853399490607027 -581 (2.34457e-175)}
; Y = -1.40166072161562471620754877221770584583282470703125p779 {- 1808919076197492 779 (-4.45666e+234)}
; Z = 1.2212547276598606504904864777927286922931671142578125p-317 {+ 996442709042909 -317 (4.57402e-096)}
; 1.8556265675101542012015443106065504252910614013671875p-581 x -1.40166072161562471620754877221770584583282470703125p779 1.2212547276598606504904864777927286922931671142578125p-317 == -1.3004794368327037279442492945236153900623321533203125p199
; [HW: -1.3004794368327037279442492945236153900623321533203125p199] 

; mpf : - 1353239079752261 199
; mpfd: - 1353239079752261 199 (-1.04489e+060) class: Neg. norm. non-zero
; hwf : - 1353239079752261 199 (-1.04489e+060) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111010 #b1101101100001010010101111011110100001011011110110011)))
(assert (= y (fp #b1 #b11100001010 #b0110011011010011001111001010111101101101010001110100)))
(assert (= z (fp #b0 #b01011000010 #b0011100010100100001001100101101101100010011011011101)))
(assert (= r (fp #b1 #b10011000110 #b0100110011101100001110000110101001010001001001000101)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
