(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.255894360317158398032688637613318860530853271484375p-326 {+ 1152445745770566 -326 (9.18702e-099)}
; Y = -1.11577662750203199237830631318502128124237060546875p976 {- 521411576476364 976 (-7.12612e+293)}
; Z = 1.7728086700596403790797239707899279892444610595703125p521 {+ 3480420838509285 521 (1.217e+157)}
; 1.255894360317158398032688637613318860530853271484375p-326 x -1.11577662750203199237830631318502128124237060546875p976 1.7728086700596403790797239707899279892444610595703125p521 == -1.401297573853500733065402528154663741588592529296875p650
; [HW: -1.401297573853500733065402528154663741588592529296875p650] 

; mpf : - 1807283604071310 650
; mpfd: - 1807283604071310 650 (-6.54678e+195) class: Neg. norm. non-zero
; hwf : - 1807283604071310 650 (-6.54678e+195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010111001 #b0100000110000010010010101111010011001011000001000110)))
(assert (= y (fp #b1 #b11111001111 #b0001110110100011100010010111110011000011001011001100)))
(assert (= z (fp #b0 #b11000001000 #b1100010111010110110010011111101111111000101011100101)))
(assert (= r (fp #b1 #b11010001001 #b0110011010111011011100000001001110101010001110001110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
