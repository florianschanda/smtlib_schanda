(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1390114219010261109588100225664675235748291015625p-417 {- 626051787873704 -417 (-3.36527e-126)}
; Y = -1.8973797505115335138015097982133738696575164794921875p1013 {- 4041439110013571 1013 (-1.66548e+305)}
; Z = +zero {+ 0 -1023 (0)}
; -1.1390114219010261109588100225664675235748291015625p-417 x -1.8973797505115335138015097982133738696575164794921875p1013 +zero == 1.0805686037581778702332258035312406718730926513671875p597
; [HW: 1.0805686037581778702332258035312406718730926513671875p597] 

; mpf : + 362848733863091 597
; mpfd: + 362848733863091 597 (5.6048e+179) class: Pos. norm. non-zero
; hwf : + 362848733863091 597 (5.6048e+179) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001011110 #b0010001110010110010000001010011011010101110110101000)))
(assert (= y (fp #b1 #b11111110100 #b1110010110111010101011011110100010001010001010000011)))
(assert (= z (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= r (fp #b0 #b11001010100 #b0001010010100000001001001101111000111001110010110011)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
