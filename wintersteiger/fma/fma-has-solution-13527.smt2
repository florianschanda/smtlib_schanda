(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.90301299156546210866736146272160112857818603515625p518 {+ 4066808972324932 518 (1.63297e+156)}
; Y = -1.2952728010329985774973238221718929708003997802734375p110 {- 1329790476704855 110 (-1.68136e+033)}
; Z = 1.0978793182204977796345701790414750576019287109375p123 {+ 440809261065112 123 (1.16747e+037)}
; 1.90301299156546210866736146272160112857818603515625p518 x -1.2952728010329985774973238221718929708003997802734375p110 1.0978793182204977796345701790414750576019287109375p123 == -1.232460483993591093820896276156418025493621826171875p629
; [HW: -1.232460483993591093820896276156418025493621826171875p629] 

; mpf : - 1046908949091902 629
; mpfd: - 1046908949091902 629 (-2.74562e+189) class: Neg. norm. non-zero
; hwf : - 1046908949091902 629 (-2.74562e+189) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000101 #b1110011100101011110111000000001010100011000001000100)))
(assert (= y (fp #b1 #b10001101101 #b0100101110010110111111111000111111010101110001010111)))
(assert (= z (fp #b0 #b10001111010 #b0001100100001110100111100111011010110110001110011000)))
(assert (= r (fp #b1 #b11001110100 #b0011101110000010100001111100000001011101011000111110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
