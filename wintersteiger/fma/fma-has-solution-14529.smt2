(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9266160142853194781054071427206508815288543701171875p450 {- 4173107536650899 450 (-5.60136e+135)}
; Y = 1.6326776565929244089403482576017268002033233642578125p-404 {+ 2849326858477533 -404 (3.95168e-122)}
; Z = -1.0940443016780683205269042446161620318889617919921875p-841 {- 423537881993667 -841 (-7.4612e-254)}
; -1.9266160142853194781054071427206508815288543701171875p450 x 1.6326776565929244089403482576017268002033233642578125p-404 -1.0940443016780683205269042446161620318889617919921875p-841 == -1.5727714596788777701164008249179460108280181884765625p47
; [HW: -1.5727714596788777701164008249179460108280181884765625p47] 

; mpf : - 2579533332378249 47
; mpfd: - 2579533332378249 47 (-2.21348e+014) class: Neg. norm. non-zero
; hwf : - 2579533332378249 47 (-2.21348e+014) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000001 #b1110110100110110101101010000010101001110001010010011)))
(assert (= y (fp #b0 #b01001101011 #b1010000111110111001010011011001111111001111111011101)))
(assert (= z (fp #b1 #b00010110110 #b0001100000010011010010011001000000010101000111000011)))
(assert (= r (fp #b1 #b10000101110 #b1001001010100001001001100111111101100111001010001001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
