(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5479120982201453049498240943648852407932281494140625p-508 {- 2467576721376033 -508 (-1.84718e-153)}
; Y = 1.270940206057418198071218284894712269306182861328125p788 {+ 1220206211039874 788 (2.06901e+237)}
; Z = -1.2207533021216472324255164494388736784458160400390625p-596 {- 994184489175857 -596 (-4.70707e-180)}
; -1.5479120982201453049498240943648852407932281494140625p-508 x 1.270940206057418198071218284894712269306182861328125p788 -1.2207533021216472324255164494388736784458160400390625p-596 == -1.967303721070682076543789662537164986133575439453125p280
; [HW: -1.967303721070682076543789662537164986133575439453125p280] 

; mpf : - 4356348677768018 280
; mpfd: - 4356348677768018 280 (-3.82182e+084) class: Neg. norm. non-zero
; hwf : - 4356348677768018 280 (-3.82182e+084) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000011 #b1000110001000011111101111001111011110000001100100001)))
(assert (= y (fp #b0 #b11100010011 #b0100010101011100010101100101110000110000001010000010)))
(assert (= z (fp #b1 #b00110101011 #b0011100010000011010010011101010100011000101100110001)))
(assert (= r (fp #b1 #b10100010111 #b1111011110100001001101110111011101001100001101010010)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
