(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8309802850162213427864799086819402873516082763671875p1007 {+ 3742402501951283 1007 (2.51125e+303)}
; Y = -1.7087593025331122564836050514713861048221588134765625p-423 {- 3191968130783497 -423 (-7.88847e-128)}
; Z = 1.8579078712274788021119320546858943998813629150390625p562 {+ 3863673569178289 562 (2.80467e+169)}
; 1.8309802850162213427864799086819402873516082763671875p1007 x -1.7087593025331122564836050514713861048221588134765625p-423 1.8579078712274788021119320546858943998813629150390625p562 == -1.564352075908221451072677155025303363800048828125p585
; [HW: -1.564352075908221451072677155025303363800048828125p585] 

; mpf : - 2541615798766032 585
; mpfd: - 2541615798766032 585 (-1.98099e+176) class: Neg. norm. non-zero
; hwf : - 2541615798766032 585 (-1.98099e+176) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101110 #b1101010010111011000111111011101111000011111100110011)))
(assert (= y (fp #b1 #b01001011000 #b1011010101110001001111111110100100011101100100001001)))
(assert (= z (fp #b0 #b11000110001 #b1101101110011111110110011010100111100111001010110001)))
(assert (= r (fp #b1 #b11001001000 #b1001000001111001011000001010110101110100100111010000)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
