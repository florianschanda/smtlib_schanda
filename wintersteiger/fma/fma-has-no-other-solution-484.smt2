(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7059247348283974599070234035025350749492645263671875p403 {- 3179202372724787 403 (-3.5241e+121)}
; Y = -1.814914269534948942919072578661143779754638671875p-316 {- 3670047600616496 -316 (-1.35949e-095)}
; Z = -1.026308146811496069261693264706991612911224365234375p700 {- 118481360177062 700 (-5.39852e+210)}
; -1.7059247348283974599070234035025350749492645263671875p403 x -1.814914269534948942919072578661143779754638671875p-316 -1.026308146811496069261693264706991612911224365234375p700 == -1.026308146811496069261693264706991612911224365234375p700
; [HW: -1.026308146811496069261693264706991612911224365234375p700] 

; mpf : - 118481360177062 700
; mpfd: - 118481360177062 700 (-5.39852e+210) class: Neg. norm. non-zero
; hwf : - 118481360177062 700 (-5.39852e+210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010010 #b1011010010110111011110111100000110000110100000110011)))
(assert (= y (fp #b1 #b01011000011 #b1101000010011110001110001011100010110010010000110000)))
(assert (= z (fp #b1 #b11010111011 #b0000011010111100001000010111011000101100011110100110)))
(assert (= r (fp #b1 #b11010111011 #b0000011010111100001000010111011000101100011110100110)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
