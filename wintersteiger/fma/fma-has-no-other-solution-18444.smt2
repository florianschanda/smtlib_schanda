(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.309388058372787266847581122419796884059906005859375p184 {+ 1393359944400566 184 (3.21061e+055)}
; Y = -1.7406433134088985514864589276839978992938995361328125p-675 {- 3335560950282765 -675 (-1.11036e-203)}
; Z = 1.19493343715916022773626536945812404155731201171875p-317 {+ 877902154952044 -317 (4.47543e-096)}
; 1.309388058372787266847581122419796884059906005859375p184 x -1.7406433134088985514864589276839978992938995361328125p-675 1.19493343715916022773626536945812404155731201171875p-317 == 1.19493343715916022773626536945812404155731201171875p-317
; [HW: 1.19493343715916022773626536945812404155731201171875p-317] 

; mpf : + 877902154952044 -317
; mpfd: + 877902154952044 -317 (4.47543e-096) class: Pos. norm. non-zero
; hwf : + 877902154952044 -317 (4.47543e-096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110111 #b0100111100110100000011100100100001111011111010110110)))
(assert (= y (fp #b1 #b00101011100 #b1011110110011010110011001101100100010111101000001101)))
(assert (= z (fp #b0 #b01011000010 #b0011000111100111001010000110000101111110110101101100)))
(assert (= r (fp #b0 #b01011000010 #b0011000111100111001010000110000101111110110101101100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
