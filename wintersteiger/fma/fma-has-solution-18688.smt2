(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.583624638374183657418825532658956944942474365234375p132 {- 2628411703906214 132 (-8.62207e+039)}
; Y = 1.818312469217471250004791727405972778797149658203125p-870 {+ 3685351731440434 -870 (2.30979e-262)}
; Z = -1.1636310943091363601098464641836471855640411376953125p-739 {- 736928935356853 -739 (-4.02391e-223)}
; -1.583624638374183657418825532658956944942474365234375p132 x 1.818312469217471250004791727405972778797149658203125p-870 -1.1636310943091363601098464641836471855640411376953125p-739 == -1.7306699868351775872810094369924627244472503662109375p-737
; [HW: -1.7306699868351775872810094369924627244472503662109375p-737] 

; mpf : - 3290645080441711 -737
; mpfd: - 3290645080441711 -737 (-2.39391e-222) class: Neg. norm. non-zero
; hwf : - 3290645080441711 -737 (-2.39391e-222) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010000011 #b1001010101101000011011001001111011110100111110100110)))
(assert (= y (fp #b0 #b00010011001 #b1101000101111100111011010000110100110010101100110010)))
(assert (= z (fp #b1 #b00100011100 #b0010100111100011101110100011011010101010100110110101)))
(assert (= r (fp #b1 #b00100011110 #b1011101100001101001100000011000110100000001101101111)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
