(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9204527182139521368497980802203528583049774169921875p1006 {- 4145350518760515 1006 (-1.31698e+303)}
; Y = -1.8215437416129844905299250967800617218017578125p-192 {- 3699904088596800 -192 (-2.90189e-058)}
; Z = -1.732987036169167271992819223669357597827911376953125p-534 {- 3301080142958866 -534 (-3.08161e-161)}
; -1.9204527182139521368497980802203528583049774169921875p1006 x -1.8215437416129844905299250967800617218017578125p-192 -1.732987036169167271992819223669357597827911376953125p-534 == 1.7490943149631343889183199280523695051670074462890625p815
; [HW: 1.7490943149631343889183199280523695051670074462890625p815] 

; mpf : + 3373620877733329 815
; mpfd: + 3373620877733329 815 (3.82173e+245) class: Pos. norm. non-zero
; hwf : + 3373620877733329 815 (3.82173e+245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101101 #b1110101110100010110010100001001000111110010001000011)))
(assert (= y (fp #b1 #b01100111111 #b1101001001010000101100001100111001110110000101000000)))
(assert (= z (fp #b1 #b00111101001 #b1011101110100101000010011101010010111101000100010010)))
(assert (= r (fp #b0 #b11100101110 #b1011111111000100101001010010000001100010110111010001)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
