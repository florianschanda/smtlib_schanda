(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5347442420575918564651374254026450216770172119140625p-468 {- 2408273969269089 -468 (-2.01372e-141)}
; Y = 1.9727261843976886535045878190430812537670135498046875p698 {+ 4380769281586955 698 (2.5942e+210)}
; Z = -1.5953364631133630791026689621503464877605438232421875p-263 {- 2681157073437411 -263 (-1.07637e-079)}
; -1.5347442420575918564651374254026450216770172119140625p-468 x 1.9727261843976886535045878190430812537670135498046875p698 -1.5953364631133630791026689621503464877605438232421875p-263 == -1.5138150763302979928681679666624404489994049072265625p231
; [HW: -1.5138150763302979928681679666624404489994049072265625p231] 

; mpf : - 2314017386298473 231
; mpfd: - 2314017386298473 231 (-5.22398e+069) class: Neg. norm. non-zero
; hwf : - 2314017386298473 231 (-5.22398e+069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101011 #b1000100011100100111111111010011101011100100101100001)))
(assert (= y (fp #b0 #b11010111001 #b1111100100000100100101010100110111110011011100001011)))
(assert (= z (fp #b1 #b01011111000 #b1001100001100111111110000110111100110000001011100011)))
(assert (= r (fp #b1 #b10011100110 #b1000001110001001011000101000010100000111110001101001)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
