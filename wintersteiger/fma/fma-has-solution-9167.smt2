(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.96056625530993411388180902577005326747894287109375p-260 {- 4326005829478492 -260 (-1.05824e-078)}
; Y = -1.3451982825109458641321680261171422898769378662109375p-837 {- 1554634856485231 -837 (-1.46784e-252)}
; Z = 1.9922588969212047249612851373967714607715606689453125p707 {+ 4468736798429397 707 (1.34138e+213)}
; -1.96056625530993411388180902577005326747894287109375p-260 x -1.3451982825109458641321680261171422898769378662109375p-837 1.9922588969212047249612851373967714607715606689453125p707 == 1.9922588969212047249612851373967714607715606689453125p707
; [HW: 1.9922588969212047249612851373967714607715606689453125p707] 

; mpf : + 4468736798429397 707
; mpfd: + 4468736798429397 707 (1.34138e+213) class: Pos. norm. non-zero
; hwf : + 4468736798429397 707 (1.34138e+213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111011 #b1111010111100111101010111000110000110010100001011100)))
(assert (= y (fp #b1 #b00010111010 #b0101100001011110111010100010011000000101000101101111)))
(assert (= z (fp #b0 #b11011000010 #b1111111000000100101011011101011101110001000011010101)))
(assert (= r (fp #b0 #b11011000010 #b1111111000000100101011011101011101110001000011010101)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
