(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5605139370377318908111874407040886580944061279296875p-718 {+ 2524330357979099 -718 (1.1317e-216)}
; Y = -1.4214802872262481958642865720321424305438995361328125p941 {- 1898178464496141 941 (-2.64221e+283)}
; Z = -1.837565609648188935665302778943441808223724365234375p186 {- 3772060167509926 186 (-1.80228e+056)}
; 1.5605139370377318908111874407040886580944061279296875p-718 x -1.4214802872262481958642865720321424305438995361328125p941 -1.837565609648188935665302778943441808223724365234375p186 == -1.1091198997271642934236979272100143134593963623046875p224
; [HW: -1.1091198997271642934236979272100143134593963623046875p224] 

; mpf : - 491432339749963 224
; mpfd: - 491432339749963 224 (-2.99018e+067) class: Neg. norm. non-zero
; hwf : - 491432339749963 224 (-2.99018e+067) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110001 #b1000111101111101110101110110010010000111011111011011)))
(assert (= y (fp #b1 #b11110101100 #b0110101111100110001000011101000110001011101000001101)))
(assert (= z (fp #b1 #b10010111001 #b1101011001101010101100110010010110110001011110100110)))
(assert (= r (fp #b1 #b10011011111 #b0001101111101111010010000010000010101011110001001011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
