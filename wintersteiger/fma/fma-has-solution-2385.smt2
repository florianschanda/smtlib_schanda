(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7596112617539774181096845495630986988544464111328125p315 {+ 3420984995381645 315 (1.17453e+095)}
; Y = 1.8803109326792546429629737758659757673740386962890625p-930 {+ 3964567988384465 -930 (2.07173e-280)}
; Z = 1.6353611068301876496633440183359198272228240966796875p-724 {+ 2861412043966139 -724 (1.85309e-218)}
; 1.7596112617539774181096845495630986988544464111328125p315 x 1.8803109326792546429629737758659757673740386962890625p-930 1.6353611068301876496633440183359198272228240966796875p-724 == 1.6543081463707707268184776694397442042827606201171875p-614
; [HW: 1.6543081463707707268184776694397442042827606201171875p-614] 

; mpf : + 2946741924180883 -614
; mpfd: + 2946741924180883 -614 (2.43332e-185) class: Pos. norm. non-zero
; hwf : + 2946741924180883 -614 (2.43332e-185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111010 #b1100001001110101111000100011011011101000000110001101)))
(assert (= y (fp #b0 #b00001011101 #b1110000101011100000011101010101000101011001011010001)))
(assert (= z (fp #b0 #b00100101011 #b1010001010100111000001101000011011111100011010111011)))
(assert (= r (fp #b0 #b00110011001 #b1010011110000000101111010001101000101011001110010011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
