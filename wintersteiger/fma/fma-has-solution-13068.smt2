(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.850083886037934721713327235192991793155670166015625p-985 {- 3828437472394106 -985 (-5.65778e-297)}
; Y = -1.13548016700956555524726354633457958698272705078125p-436 {- 610148429660372 -436 (-6.39884e-132)}
; Z = -1.6311985224448630749094490965944714844226837158203125p692 {- 2842665430479493 692 (-3.35169e+208)}
; -1.850083886037934721713327235192991793155670166015625p-985 x -1.13548016700956555524726354633457958698272705078125p-436 -1.6311985224448630749094490965944714844226837158203125p692 == -1.63119852244486285286484417156316339969635009765625p692
; [HW: -1.63119852244486285286484417156316339969635009765625p692] 

; mpf : - 2842665430479492 692
; mpfd: - 2842665430479492 692 (-3.35169e+208) class: Neg. norm. non-zero
; hwf : - 2842665430479492 692 (-3.35169e+208) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000100110 #b1101100110011111000110001111100101100011101101111010)))
(assert (= y (fp #b1 #b01001001011 #b0010001010101110110101000000011010010000000011010100)))
(assert (= z (fp #b1 #b11010110011 #b1010000110010110001110011111001100101111001010000101)))
(assert (= r (fp #b1 #b11010110011 #b1010000110010110001110011111001100101111001010000100)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
