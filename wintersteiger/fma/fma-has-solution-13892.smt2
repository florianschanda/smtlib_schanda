(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.811874402951579643428203780786134302616119384765625p109 {- 3656357258604378 109 (-1.17597e+033)}
; Y = -1.648303316139007268503746672649867832660675048828125p-133 {- 2919698572986690 -133 (-1.51373e-040)}
; Z = 1.6522829321090763965429459858569316565990447998046875p-432 {+ 2937621169986571 -432 (1.48979e-130)}
; -1.811874402951579643428203780786134302616119384765625p109 x -1.648303316139007268503746672649867832660675048828125p-133 1.6522829321090763965429459858569316565990447998046875p-432 == 1.493259293406236309920132043771445751190185546875p-23
; [HW: 1.493259293406236309920132043771445751190185546875p-23] 

; mpf : + 2221442369981360 -23
; mpfd: + 2221442369981360 -23 (1.7801e-007) class: Pos. norm. non-zero
; hwf : + 2221442369981360 -23 (1.7801e-007) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001101100 #b1100111111010111000000000011100100100010111101011010)))
(assert (= y (fp #b1 #b01101111010 #b1010010111110111001101001100010010110100100101000010)))
(assert (= z (fp #b0 #b01001001111 #b1010011011111100000000111010010100100101110000001011)))
(assert (= r (fp #b0 #b01111101000 #b0111111001000110001111011011010110100000101110110000)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
