(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.46544342048677211920448826276697218418121337890625p754 {+ 2096170815066276 754 (1.38863e+227)}
; Y = -1.7570306607724754943689049468957819044589996337890625p-783 {- 3409363001762961 -783 (-3.45376e-236)}
; Z = 1.2646794662106664031142599924351088702678680419921875p-633 {+ 1192010345398979 -633 (3.54808e-191)}
; 1.46544342048677211920448826276697218418121337890625p754 x -1.7570306607724754943689049468957819044589996337890625p-783 1.2646794662106664031142599924351088702678680419921875p-633 == -1.2874145107112748842581595454248599708080291748046875p-28
; [HW: -1.2874145107112748842581595454248599708080291748046875p-28] 

; mpf : - 1294399883340171 -28
; mpfd: - 1294399883340171 -28 (-4.79599e-009) class: Neg. norm. non-zero
; hwf : - 1294399883340171 -28 (-4.79599e-009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110001 #b0111011100100111010011001100110100100001000010100100)))
(assert (= y (fp #b1 #b00011110000 #b1100000111001100110000101110101000010110010010010001)))
(assert (= z (fp #b0 #b00110000110 #b0100001111000010000010001001001101001100001011000011)))
(assert (= r (fp #b1 #b01111100011 #b0100100110010011111111110101001111100110100110001011)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
