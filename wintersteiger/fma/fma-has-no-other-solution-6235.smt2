(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7261648644002767216676375028328038752079010009765625p988 {+ 3270355812722633 988 (4.51563e+297)}
; Y = 1.0745784884503859490934019049745984375476837158203125p-455 {+ 335871652795013 -455 (1.15502e-137)}
; Z = 1.611506673023275215683725036797113716602325439453125p-201 {+ 2753981224762194 -201 (5.01422e-061)}
; 1.7261648644002767216676375028328038752079010009765625p988 x 1.0745784884503859490934019049745984375476837158203125p-455 1.611506673023275215683725036797113716602325439453125p-201 == 1.8548996308034146895948879318893887102603912353515625p533
; [HW: 1.8548996308034146895948879318893887102603912353515625p533] 

; mpf : + 3850125658725433 533
; mpfd: + 3850125658725433 533 (5.21565e+160) class: Pos. norm. non-zero
; hwf : + 3850125658725433 533 (5.21565e+160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011011 #b1011100111100101111100001100100000011010011111001001)))
(assert (= y (fp #b0 #b01000111000 #b0001001100010111100100110110100011100001001010000101)))
(assert (= z (fp #b0 #b01100110110 #b1001110010001011101100111000100111101011101101010010)))
(assert (= r (fp #b0 #b11000010100 #b1101101011011010101100111100001110101001110000111001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
