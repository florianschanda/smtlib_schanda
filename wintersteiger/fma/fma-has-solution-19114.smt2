(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6938989041603689233994600726873613893985748291015625p65 {- 3125042846209433 65 (-6.24938e+019)}
; Y = -1.1029616624630180776733823222457431256771087646484375p-854 {- 463698104701895 -854 (-9.18214e-258)}
; Z = -1.551264742469365298660477492376230657100677490234375p-205 {- 2482675688767526 -205 (-3.01673e-062)}
; -1.6938989041603689233994600726873613893985748291015625p65 x -1.1029616624630180776733823222457431256771087646484375p-854 -1.551264742469365298660477492376230657100677490234375p-205 == -1.5512647424693650766158725673449225723743438720703125p-205
; [HW: -1.5512647424693650766158725673449225723743438720703125p-205] 

; mpf : - 2482675688767525 -205
; mpfd: - 2482675688767525 -205 (-3.01673e-062) class: Neg. norm. non-zero
; hwf : - 2482675688767525 -205 (-3.01673e-062) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000000 #b1011000110100011010110111100110000011001010110011001)))
(assert (= y (fp #b1 #b00010101001 #b0001101001011011101100100000110100000101001111000111)))
(assert (= z (fp #b1 #b01100110010 #b1000110100011111101011111010100001011000000000100110)))
(assert (= r (fp #b1 #b01100110010 #b1000110100011111101011111010100001011000000000100101)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
