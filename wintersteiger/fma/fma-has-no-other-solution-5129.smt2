(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.146014480216880571106230490840971469879150390625p795 {+ 657590758695440 795 (2.38801e+239)}
; Y = -1.0340809852905288312996390232001431286334991455078125p-472 {- 153487112654845 -472 (-8.48001e-143)}
; Z = -1.7280967972185712344668218065635301172733306884765625p-581 {- 3279056464643209 -581 (-2.18344e-175)}
; 1.146014480216880571106230490840971469879150390625p795 x -1.0340809852905288312996390232001431286334991455078125p-472 -1.7280967972185712344668218065635301172733306884765625p-581 == -1.1850717828598849035159901177394203841686248779296875p323
; [HW: -1.1850717828598849035159901177394203841686248779296875p323] 

; mpf : - 833489212324571 323
; mpfd: - 833489212324571 323 (-2.02504e+097) class: Neg. norm. non-zero
; hwf : - 833489212324571 323 (-2.02504e+097) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011010 #b0010010101100001001101000111100101000110001000010000)))
(assert (= y (fp #b1 #b01000100111 #b0000100010111001100010000000110100111100111111111101)))
(assert (= z (fp #b1 #b00110111010 #b1011101001100100100011010011110001100000010010001001)))
(assert (= r (fp #b1 #b10101000010 #b0010111101100000110111010100011011001011101011011011)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
