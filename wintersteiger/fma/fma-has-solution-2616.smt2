(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0193591260266072762163958032033406198024749755859375p-33 {- 87185752759647 -33 (-1.18669e-010)}
; Y = -1.9096826983471715255546996559132821857929229736328125p13 {- 4096846661301709 13 (-15644.1)}
; Z = 1.7264378918000782281438887366675771772861480712890625p700 {+ 3271585418818641 700 (9.0813e+210)}
; -1.0193591260266072762163958032033406198024749755859375p-33 x -1.9096826983471715255546996559132821857929229736328125p13 1.7264378918000782281438887366675771772861480712890625p700 == 1.7264378918000782281438887366675771772861480712890625p700
; [HW: 1.7264378918000782281438887366675771772861480712890625p700] 

; mpf : + 3271585418818641 700
; mpfd: + 3271585418818641 700 (9.0813e+210) class: Pos. norm. non-zero
; hwf : + 3271585418818641 700 (9.0813e+210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111011110 #b0000010011110100101110000011110100101001110101011111)))
(assert (= y (fp #b1 #b10000001100 #b1110100011100000111101110001111100100011010111001101)))
(assert (= z (fp #b0 #b11010111011 #b1011100111110111110101010110101111011011010001010001)))
(assert (= r (fp #b0 #b11010111011 #b1011100111110111110101010110101111011011010001010001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
