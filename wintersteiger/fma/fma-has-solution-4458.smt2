(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9960415716636370486725127193494699895381927490234375p-548 {+ 4485772450989879 -548 (2.16637e-165)}
; Y = 1.541260471239674689769572069053538143634796142578125p835 {+ 2437620456585378 835 (3.5312e+251)}
; Z = -1.341922847282783326505750665091909468173980712890625p0 {- 1539883607612202 0 (-1.34192)}
; 1.9960415716636370486725127193494699895381927490234375p-548 x 1.541260471239674689769572069053538143634796142578125p835 -1.341922847282783326505750665091909468173980712890625p0 == 1.5382099866781391295234016070025973021984100341796875p288
; [HW: 1.5382099866781391295234016070025973021984100341796875p288] 

; mpf : + 2423882295450747 288
; mpfd: + 2423882295450747 288 (7.64988e+086) class: Pos. norm. non-zero
; hwf : + 2423882295450747 288 (7.64988e+086) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011011 #b1111111011111100100101001001011111000000011100110111)))
(assert (= y (fp #b0 #b11101000010 #b1000101010010000000010111101011010010111100010100010)))
(assert (= z (fp #b1 #b01111111111 #b0101011110001000010000010111011011010101101100101010)))
(assert (= r (fp #b0 #b10100011111 #b1000100111001000001000010011001100101001110001111011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
