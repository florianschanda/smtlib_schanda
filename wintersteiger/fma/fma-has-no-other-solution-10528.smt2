(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7243680908178433686117614342947490513324737548828125p992 {+ 3262263863886317 992 (7.21748e+298)}
; Y = 1.030392373864858601706373519846238195896148681640625p-573 {+ 136875083612682 -573 (3.33285e-173)}
; Z = 1.3610657938530295041346107609570026397705078125p-424 {+ 1626095774652736 -424 (3.14167e-128)}
; 1.7243680908178433686117614342947490513324737548828125p992 x 1.030392373864858601706373519846238195896148681640625p-573 1.3610657938530295041346107609570026397705078125p-424 == 1.776775730514611684185410922509618103504180908203125p419
; [HW: 1.776775730514611684185410922509618103504180908203125p419] 

; mpf : + 3498286890496050 419
; mpfd: + 3498286890496050 419 (2.40547e+126) class: Pos. norm. non-zero
; hwf : + 3498286890496050 419 (2.40547e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011111 #b1011100101110000001011111110110001010100000111101101)))
(assert (= y (fp #b0 #b00111000010 #b0000011111000111110010110110101111001100001000001010)))
(assert (= z (fp #b0 #b01001010111 #b0101110001101110110011101101000001001101100101000000)))
(assert (= r (fp #b0 #b10110100010 #b1100011011011010110001100011011011100011000000110010)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
