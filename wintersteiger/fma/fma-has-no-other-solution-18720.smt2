(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5381065744911388559756915128673426806926727294921875p-712 {+ 2423416568363907 -712 (7.13887e-215)}
; Y = 1.4038573922726982345920987427234649658203125p-743 {+ 1818812001350144 -743 (3.03414e-224)}
; Z = -0.594386136790221453196636502980254590511322021484375p-1022 {- 2676877184162630 -1023 (-1.32255e-308)}
; 1.5381065744911388559756915128673426806926727294921875p-712 x 1.4038573922726982345920987427234649658203125p-743 -0.594386136790221453196636502980254590511322021484375p-1022 == -0.594386136790221453196636502980254590511322021484375p-1022
; [HW: -0.594386136790221453196636502980254590511322021484375p-1022] 

; mpf : - 2676877184162630 -1023
; mpfd: - 2676877184162630 -1023 (-1.32255e-308) class: Neg. denorm.
; hwf : - 2676877184162630 -1023 (-1.32255e-308) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100110111 #b1000100111000001010110100011101100110011101110000011)))
(assert (= y (fp #b0 #b00100011000 #b0110011101100011001100101011010000001111001000000000)))
(assert (= z (fp #b1 #b00000000000 #b1001100000101001101100001001101010110101101101000110)))
(assert (= r (fp #b1 #b00000000000 #b1001100000101001101100001001101010110101101101000110)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
