(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.968672719382444480373806072748266160488128662109375p201 {- 4362514098054742 201 (-6.32707e+060)}
; Y = -1.764423051022535826604098474490456283092498779296875p552 {- 3442655367738510 552 (-2.60112e+166)}
; Z = -1.273269891688463939516395839746110141277313232421875p308 {- 1230698182379742 308 (-6.63986e+092)}
; -1.968672719382444480373806072748266160488128662109375p201 x -1.764423051022535826604098474490456283092498779296875p552 -1.273269891688463939516395839746110141277313232421875p308 == 1.7367857629988023848710554375429637730121612548828125p754
; [HW: 1.7367857629988023848710554375429637730121612548828125p754] 

; mpf : + 3318188087693293 754
; mpfd: + 3318188087693293 754 (1.64575e+227) class: Pos. norm. non-zero
; hwf : + 3318188087693293 754 (1.64575e+227) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011001000 #b1111011111111010111011110111001001000110011001010110)))
(assert (= y (fp #b1 #b11000100111 #b1100001110110001001110101010010001110011010010001110)))
(assert (= z (fp #b1 #b10100110011 #b0100010111110101000000111111111111001000100011011110)))
(assert (= r (fp #b0 #b11011110001 #b1011110010011101111111011110010000111100111111101101)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
