(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0121025492740265416813372212345711886882781982421875p-521 {+ 54505036400739 -521 (1.47434e-157)}
; Y = -1.4186635253187567240473754281993024051189422607421875p591 {- 1885492896619171 591 (-1.14976e+178)}
; Z = 1.1623344611482744337394024114473722875118255615234375p-576 {+ 731089418736759 -576 (4.69952e-174)}
; 1.0121025492740265416813372212345711886882781982421875p-521 x -1.4186635253187567240473754281993024051189422607421875p591 1.1623344611482744337394024114473722875118255615234375p-576 == -1.4358329705371912776712406412116251885890960693359375p70
; [HW: -1.4358329705371912776712406412116251885890960693359375p70] 

; mpf : - 1962817203707071 70
; mpfd: - 1962817203707071 70 (-1.69513e+021) class: Neg. norm. non-zero
; hwf : - 1962817203707071 70 (-1.69513e+021) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111110110 #b0000001100011001001001110001010101010100100001100011)))
(assert (= y (fp #b1 #b11001001110 #b0110101100101101100010000110010101000101101010100011)))
(assert (= z (fp #b0 #b00110111111 #b0010100110001110110000000101000110100101010001110111)))
(assert (= r (fp #b1 #b10001000101 #b0110111110010010101111111110001011111001110010111111)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
