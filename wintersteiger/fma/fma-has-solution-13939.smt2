(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2446660979931689627875357473385520279407501220703125p742 {- 1101878147752229 742 (-2.87945e+223)}
; Y = 1.2806668555823110811076048776158131659030914306640625p-107 {+ 1264011146215745 -107 (7.89272e-033)}
; Z = +zero {+ 0 -1023 (0)}
; -1.2446660979931689627875357473385520279407501220703125p742 x 1.2806668555823110811076048776158131659030914306640625p-107 +zero == -1.5940026179668163042180140109849162399768829345703125p635
; [HW: -1.5940026179668163042180140109849162399768829345703125p635] 

; mpf : - 2675149968932453 635
; mpfd: - 2675149968932453 635 (-2.27267e+191) class: Neg. norm. non-zero
; hwf : - 2675149968932453 635 (-2.27267e+191) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100101 #b0011111010100010011011111111100101010010000100100101)))
(assert (= y (fp #b0 #b01110010100 #b0100011111011001110010000111010111001100000101000001)))
(assert (= z (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= r (fp #b1 #b11001111010 #b1001100000010000100011100011100111100111111001100101)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
