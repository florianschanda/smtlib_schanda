(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.78547719536266047413164415047504007816314697265625p-886 {+ 3537474804343300 -886 (3.46081e-267)}
; Y = -1.5369653026285432506625738824368454515933990478515625p-401 {- 2418276736828793 -401 (-2.97602e-121)}
; Z = -1.0704527777406924737846338757663033902645111083984375p883 {- 317291103580199 883 (-6.90325e+265)}
; 1.78547719536266047413164415047504007816314697265625p-886 x -1.5369653026285432506625738824368454515933990478515625p-401 -1.0704527777406924737846338757663033902645111083984375p883 == -1.0704527777406924737846338757663033902645111083984375p883
; [HW: -1.0704527777406924737846338757663033902645111083984375p883] 

; mpf : - 317291103580199 883
; mpfd: - 317291103580199 883 (-6.90325e+265) class: Neg. norm. non-zero
; hwf : - 317291103580199 883 (-6.90325e+265) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001001 #b1100100100010101000010001001000111010110001000000100)))
(assert (= y (fp #b1 #b01001101110 #b1000100101110110100011101101110111100000010101111001)))
(assert (= z (fp #b1 #b11101110010 #b0001001000001001001100010111100001001111000000100111)))
(assert (= r (fp #b1 #b11101110010 #b0001001000001001001100010111100001001111000000100111)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
