(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.067603709531260935960972346947528421878814697265625p-778 {+ 304460041053850 -778 (6.71542e-235)}
; Y = -1.9660656053227205664057919420883990824222564697265625p-650 {- 4350772700146857 -650 (-4.20824e-196)}
; Z = 1.4198297075054508997737912068259902298450469970703125p-66 {+ 1890744914280613 -66 (1.92423e-020)}
; 1.067603709531260935960972346947528421878814697265625p-778 x -1.9660656053227205664057919420883990824222564697265625p-650 1.4198297075054508997737912068259902298450469970703125p-66 == 1.4198297075054508997737912068259902298450469970703125p-66
; [HW: 1.4198297075054508997737912068259902298450469970703125p-66] 

; mpf : + 1890744914280613 -66
; mpfd: + 1890744914280613 -66 (1.92423e-020) class: Pos. norm. non-zero
; hwf : + 1890744914280613 -66 (1.92423e-020) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110101 #b0001000101001110011110100000100110000110011010011010)))
(assert (= y (fp #b1 #b00101110101 #b1111011101010000000100110101010010100110110010101001)))
(assert (= z (fp #b0 #b01110111101 #b0110101101111001111101011010111110100000000010100101)))
(assert (= r (fp #b0 #b01110111101 #b0110101101111001111101011010111110100000000010100101)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
