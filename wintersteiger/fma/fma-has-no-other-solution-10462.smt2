(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.707425839167343806224153013317845761775970458984375p-553 {- 3185962745666310 -553 (-5.79101e-167)}
; Y = 1.0407074333798773668746662224293686449527740478515625p-742 {+ 183329981800825 -742 (4.49854e-224)}
; Z = 1.9207964146661093973733613893273286521434783935546875p263 {+ 4146898389974379 263 (2.84689e+079)}
; -1.707425839167343806224153013317845761775970458984375p-553 x 1.0407074333798773668746662224293686449527740478515625p-742 1.9207964146661093973733613893273286521434783935546875p263 == 1.920796414666109175328756464296020567417144775390625p263
; [HW: 1.920796414666109175328756464296020567417144775390625p263] 

; mpf : + 4146898389974378 263
; mpfd: + 4146898389974378 263 (2.84689e+079) class: Pos. norm. non-zero
; hwf : + 4146898389974378 263 (2.84689e+079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010110 #b1011010100011001110111000001101110010001101100000110)))
(assert (= y (fp #b0 #b00100011001 #b0000101001101011110011010110011100010010000101111001)))
(assert (= z (fp #b0 #b10100000110 #b1110101110111001010100000101011101000011110101101011)))
(assert (= r (fp #b0 #b10100000110 #b1110101110111001010100000101011101000011110101101010)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
