(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.044197383218094632439942870405502617359161376953125p533 {- 199047318591762 533 (-2.9361e+160)}
; Y = -1.4489588941632545182613966971985064446926116943359375p1002 {- 2021931108458303 1002 (-6.21029e+301)}
; Z = -1.272327587410174043469623939017765223979949951171875p-957 {- 1226454421183166 -957 (-1.04446e-288)}
; -1.044197383218094632439942870405502617359161376953125p533 x -1.4489588941632545182613966971985064446926116943359375p1002 -1.272327587410174043469623939017765223979949951171875p-957 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000010100 #b0000101101010000100001010000101101111101100100010010)))
(assert (= y (fp #b1 #b11111101001 #b0111001011101110111110000101011110101101111100111111)))
(assert (= z (fp #b1 #b00001000010 #b0100010110110111010000101100000110111001101010111110)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
