(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0274764560672213775660566170699894428253173828125p-156 {- 123742957305800 -156 (-1.12484e-047)}
; Y = -1.4546877875764392396007451679906807839870452880859375p356 {- 2047731750699167 356 (-2.13525e+107)}
; Z = 1.79341227988162899009694228880107402801513671875p-467 {+ 3573211248026080 -467 (4.70622e-141)}
; -1.0274764560672213775660566170699894428253173828125p-156 x -1.4546877875764392396007451679906807839870452880859375p356 1.79341227988162899009694228880107402801513671875p-467 == 1.4946574526633067403480481516453437507152557373046875p200
; [HW: 1.4946574526633067403480481516453437507152557373046875p200] 

; mpf : + 2227739119490507 200
; mpfd: + 2227739119490507 200 (2.40182e+060) class: Pos. norm. non-zero
; hwf : + 2227739119490507 200 (2.40182e+060) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100011 #b0000011100001000101100100111000000110111111111001000)))
(assert (= y (fp #b1 #b10101100011 #b0111010001100110011010110011100110001000000010011111)))
(assert (= z (fp #b0 #b01000101100 #b1100101100011101000100010011001001010110000111100000)))
(assert (= r (fp #b0 #b10011000111 #b0111111010100001110111101110110111101001010111001011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
