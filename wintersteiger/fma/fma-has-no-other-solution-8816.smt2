(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.998510511275462864233531945501454174518585205078125p655 {- 4496891566505698 655 (-2.98781e+197)}
; Y = 1.773693253231014121951147899380885064601898193359375p292 {+ 3484404646950262 292 (1.41136e+088)}
; Z = -1.9326250958844661820279497987939976155757904052734375p691 {- 4200170034301655 691 (-1.98552e+208)}
; -1.998510511275462864233531945501454174518585205078125p655 x 1.773693253231014121951147899380885064601898193359375p292 -1.9326250958844661820279497987939976155757904052734375p691 == -1.77237230518027644166068057529628276824951171875p948
; [HW: -1.77237230518027644166068057529628276824951171875p948] 

; mpf : - 3478455625801184 948
; mpfd: - 3478455625801184 948 (-4.21688e+285) class: Neg. norm. non-zero
; hwf : - 3478455625801184 948 (-4.21688e+285) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010001110 #b1111111110011110011000101000011010100011111011100010)))
(assert (= y (fp #b0 #b10100100011 #b1100011000010000110000101101001111000011010101110110)))
(assert (= z (fp #b1 #b11010110010 #b1110111011000000100001001010111001000000101011010111)))
(assert (= r (fp #b1 #b11110110011 #b1100010110111010001100001111111100010101110111100000)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
