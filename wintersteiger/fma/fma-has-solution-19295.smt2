(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2456186631496841688004906245623715221881866455078125p331 {- 1106168119836157 331 (-5.44896e+099)}
; Y = -1.8797301494284932577016888899379409849643707275390625p-662 {- 3961952373152753 -662 (-9.82287e-200)}
; Z = 1.3701018582128217104809664306230843067169189453125p-468 {+ 1666790590736392 -468 (1.79769e-141)}
; -1.2456186631496841688004906245623715221881866455078125p331 x -1.8797301494284932577016888899379409849643707275390625p-662 1.3701018582128217104809664306230843067169189453125p-468 == 1.1707134779066377117118236128590069711208343505859375p-330
; [HW: 1.1707134779066377117118236128590069711208343505859375p-330] 

; mpf : + 768825155487455 -330
; mpfd: + 768825155487455 -330 (5.35244e-100) class: Pos. norm. non-zero
; hwf : + 768825155487455 -330 (5.35244e-100) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101001010 #b0011111011100000110111010101110110000011110111111101)))
(assert (= y (fp #b1 #b00101101001 #b1110000100110101111111101011110100011001101111110001)))
(assert (= z (fp #b0 #b01000101011 #b0101111010111110111111101101000100110110100000001000)))
(assert (= r (fp #b0 #b01010110101 #b0010101110110011111000001110010010011000011011011111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
