(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7185099190501429422539558800053782761096954345703125p522 {+ 3235881003696229 522 (2.35944e+157)}
; Y = 1.07023129655973558982395843486301600933074951171875p216 {+ 316293641016172 216 (1.12709e+065)}
; Z = 1.95027123877731778378574745147489011287689208984375p-772 {+ 4279641196858428 -772 (7.85124e-233)}
; 1.7185099190501429422539558800053782761096954345703125p522 x 1.07023129655973558982395843486301600933074951171875p216 1.95027123877731778378574745147489011287689208984375p-772 == 1.8392030988158005744281808802043087780475616455078125p738
; [HW: 1.8392030988158005744281808802043087780475616455078125p738] 

; mpf : + 3779434763115005 738
; mpfd: + 3779434763115005 738 (2.65929e+222) class: Pos. norm. non-zero
; hwf : + 3779434763115005 738 (2.65929e+222) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001001 #b1011011111110000010001000001110000101100000001100101)))
(assert (= y (fp #b0 #b10011010111 #b0001000111111010101011011010000111100001001101101100)))
(assert (= z (fp #b0 #b00011111011 #b1111001101000100111110011101010011100000110000111100)))
(assert (= r (fp #b0 #b11011100001 #b1101011011010110000000111010100000011101100111111101)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
