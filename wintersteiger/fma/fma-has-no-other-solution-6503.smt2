(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.46948857552644529533836248447187244892120361328125p-739 {- 2114388573795604 -739 (-5.08159e-223)}
; Y = -1.3764693828581042733816275358549319207668304443359375p-48 {- 1695467372356159 -48 (-4.8902e-015)}
; Z = -1.217043732174079906371844117529690265655517578125p-294 {- 977478071342288 -294 (-3.82373e-089)}
; -1.46948857552644529533836248447187244892120361328125p-739 x -1.3764693828581042733816275358549319207668304443359375p-48 -1.217043732174079906371844117529690265655517578125p-294 == -1.217043732174079906371844117529690265655517578125p-294
; [HW: -1.217043732174079906371844117529690265655517578125p-294] 

; mpf : - 977478071342288 -294
; mpfd: - 977478071342288 -294 (-3.82373e-089) class: Neg. norm. non-zero
; hwf : - 977478071342288 -294 (-3.82373e-089) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011100 #b0111100000110000011001110011110110111011010100010100)))
(assert (= y (fp #b1 #b01111001111 #b0110000001100000010011000010011101010010001000111111)))
(assert (= z (fp #b1 #b01011011001 #b0011011110010000001011011001001101111101010011010000)))
(assert (= r (fp #b1 #b01011011001 #b0011011110010000001011011001001101111101010011010000)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
