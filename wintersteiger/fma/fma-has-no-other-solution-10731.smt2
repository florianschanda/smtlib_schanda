(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9147184464673585591043547537992708384990692138671875p818 {- 4119525654659315 818 (-3.34689e+246)}
; Y = -1.4162952149739236329395453140023164451122283935546875p-838 {- 1874826975032683 -838 (-7.72712e-253)}
; Z = 1.0469242655721184842576576556893996894359588623046875p807 {+ 211328104945227 807 (8.93556e+242)}
; -1.9147184464673585591043547537992708384990692138671875p818 x -1.4162952149739236329395453140023164451122283935546875p-838 1.0469242655721184842576576556893996894359588623046875p807 == 1.0469242655721184842576576556893996894359588623046875p807
; [HW: 1.0469242655721184842576576556893996894359588623046875p807] 

; mpf : + 211328104945227 807
; mpfd: + 211328104945227 807 (8.93556e+242) class: Pos. norm. non-zero
; hwf : + 211328104945227 807 (8.93556e+242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110001 #b1110101000101010111111001111010010100000000011110011)))
(assert (= y (fp #b1 #b00010111001 #b0110101010010010010100101011110111001011010101101011)))
(assert (= z (fp #b0 #b11100100110 #b0000110000000011001110101000101000000101011001001011)))
(assert (= r (fp #b0 #b11100100110 #b0000110000000011001110101000101000000101011001001011)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
