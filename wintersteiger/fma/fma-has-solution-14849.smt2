(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4352942844563794100309905843460001051425933837890625p-572 {- 1960391177274257 -572 (-9.28503e-173)}
; Y = -1.503906479782627148011897588730789721012115478515625p-950 {- 2269393034578618 -950 (-1.58025e-286)}
; Z = -1.8155027866843986839029412294621579349040985107421875p179 {- 3672698046231459 179 (-1.39112e+054)}
; -1.4352942844563794100309905843460001051425933837890625p-572 x -1.503906479782627148011897588730789721012115478515625p-950 -1.8155027866843986839029412294621579349040985107421875p179 == -1.8155027866843986839029412294621579349040985107421875p179
; [HW: -1.8155027866843986839029412294621579349040985107421875p179] 

; mpf : - 3672698046231459 179
; mpfd: - 3672698046231459 179 (-1.39112e+054) class: Neg. norm. non-zero
; hwf : - 3672698046231459 179 (-1.39112e+054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111000011 #b0110111101101111011100100011101111100000001110010001)))
(assert (= y (fp #b1 #b00001001001 #b1000000100000000000000111101101011101000101010111010)))
(assert (= z (fp #b1 #b10010110010 #b1101000011000100110010100110011010011011001110100011)))
(assert (= r (fp #b1 #b10010110010 #b1101000011000100110010100110011010011011001110100011)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
