(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0001511482892115889598017020034603774547576904296875p-782 {- 680711378971 -782 (-3.93196e-236)}
; Y = -1.63872160697760005376721892389468848705291748046875p418 {- 2876546391177804 418 (-1.10929e+126)}
; Z = 1.82604744451401046489991131238639354705810546875p715 {+ 3720186963303648 715 (3.14745e+215)}
; -1.0001511482892115889598017020034603774547576904296875p-782 x -1.63872160697760005376721892389468848705291748046875p418 1.82604744451401046489991131238639354705810546875p715 == 1.82604744451401046489991131238639354705810546875p715
; [HW: 1.82604744451401046489991131238639354705810546875p715] 

; mpf : + 3720186963303648 715
; mpfd: + 3720186963303648 715 (3.14745e+215) class: Pos. norm. non-zero
; hwf : + 3720186963303648 715 (3.14745e+215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110001 #b0000000000001001111001111101100011110101100000011011)))
(assert (= y (fp #b1 #b10110100001 #b1010001110000011010000100101110100110111101001001100)))
(assert (= z (fp #b0 #b11011001010 #b1101001101110111110110000110011100100001110011100000)))
(assert (= r (fp #b0 #b11011001010 #b1101001101110111110110000110011100100001110011100000)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
