(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7803748608848193324405428938916884362697601318359375p736 {- 3514495932690175 736 (-6.43559e+221)}
; Y = -1.7435935896985252924196174717508256435394287109375p-10 {- 3348847813481368 -10 (-0.00170273)}
; Z = -0.335682986998755428231788755510933697223663330078125p-1022 {- 1511781775162210 -1023 (-7.46919e-309)}
; -1.7803748608848193324405428938916884362697601318359375p736 x -1.7435935896985252924196174717508256435394287109375p-10 -0.335682986998755428231788755510933697223663330078125p-1022 == 1.55212509734958725715614491491578519344329833984375p727
; [HW: 1.55212509734958725715614491491578519344329833984375p727] 

; mpf : + 2486550382685500 727
; mpfd: + 2486550382685500 727 (1.09581e+219) class: Pos. norm. non-zero
; hwf : + 2486550382685500 727 (1.09581e+219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011111 #b1100011111000110101001011001101000011110111011111111)))
(assert (= y (fp #b1 #b01111110101 #b1011111001011100001001100100010101000101001110011000)))
(assert (= z (fp #b1 #b00000000000 #b0101010111101111010100011111101011111011101101100010)))
(assert (= r (fp #b0 #b11011010110 #b1000110101011000000100100000010001101010110100111100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
