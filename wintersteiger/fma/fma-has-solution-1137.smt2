(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4472007481642148452039009498548693954944610595703125p21 {- 2014013122792165 21 (-3.035e+006)}
; Y = 1.82618093141110637844803932239301502704620361328125p218 {+ 3720788134843668 218 (7.69277e+065)}
; Z = 1.8078437178247621641702380657079629600048065185546875p-305 {+ 3638204666569195 -305 (2.7734e-092)}
; -1.4472007481642148452039009498548693954944610595703125p21 x 1.82618093141110637844803932239301502704620361328125p218 1.8078437178247621641702380657079629600048065185546875p-305 == -1.3214252051106878393937904547783546149730682373046875p240
; [HW: -1.3214252051106878393937904547783546149730682373046875p240] 

; mpf : - 1447570433963979 240
; mpfd: - 1447570433963979 240 (-2.33476e+072) class: Neg. norm. non-zero
; hwf : - 1447570433963979 240 (-2.33476e+072) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010100 #b0111001001111011101111111000110000011100101011100101)))
(assert (= y (fp #b0 #b10011011001 #b1101001110000000100101111111000011111101010100010100)))
(assert (= z (fp #b0 #b01011001110 #b1100111011001110110110001000110001010110000111101011)))
(assert (= r (fp #b1 #b10011101111 #b0101001001001000111011000001100000001111011111001011)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
