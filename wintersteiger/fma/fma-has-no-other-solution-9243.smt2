(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9881647244690772158293157190200872719287872314453125p767 {+ 4450298284899605 767 (1.54333e+231)}
; Y = -1.6620099979220730457285526426858268678188323974609375p65 {- 2981427979957391 65 (-6.13173e+019)}
; Z = 1.7835485315891386193243306479416787624359130859375p-924 {+ 3528788874891544 -924 (1.25768e-278)}
; 1.9881647244690772158293157190200872719287872314453125p767 x -1.6620099979220730457285526426858268678188323974609375p65 1.7835485315891386193243306479416787624359130859375p-924 == -1.6521748247917951157859306476893834769725799560546875p833
; [HW: -1.6521748247917951157859306476893834769725799560546875p833] 

; mpf : - 2937134297912747 833
; mpfd: - 2937134297912747 833 (-9.4633e+250) class: Neg. norm. non-zero
; hwf : - 2937134297912747 833 (-9.4633e+250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111110 #b1111110011111000010111010000011010100111110100010101)))
(assert (= y (fp #b1 #b10001000000 #b1010100101111001011111001011101010110011010010001111)))
(assert (= z (fp #b0 #b00001100011 #b1100100010010110101000101111011000000001000100011000)))
(assert (= r (fp #b1 #b11101000000 #b1010011011110100111011011110011111000001010110101011)))
(assert  (not (= (fp.fma roundTowardNegative x y z) r)))
(check-sat)
(exit)
