(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6162995385437517459337186664924956858158111572265625p413 {+ 2775566372134249 413 (3.41909e+124)}
; Y = -1.7680534293501193321418440973502583801746368408203125p-495 {- 3459005138221829 -495 (-1.72841e-149)}
; Z = -zero {- 0 -1023 (-0)}
; 1.6162995385437517459337186664924956858158111572265625p413 x -1.7680534293501193321418440973502583801746368408203125p-495 -zero == -1.4288519709896478904198602322139777243137359619140625p-81
; [HW: -1.4288519709896478904198602322139777243137359619140625p-81] 

; mpf : - 1931377576746081 -81
; mpfd: - 1931377576746081 -81 (-5.90959e-025) class: Neg. norm. non-zero
; hwf : - 1931377576746081 -81 (-5.90959e-025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011100 #b1001110111000101110011100111101010010101110101101001)))
(assert (= y (fp #b1 #b01000010000 #b1100010010011111001001100100100010100011101100000101)))
(assert (= z (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= r (fp #b1 #b01110101110 #b0110110111001001001111100010011000111001110001100001)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
