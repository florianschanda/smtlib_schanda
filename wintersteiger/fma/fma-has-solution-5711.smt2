(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2149945697483086615164893373730592429637908935546875p-258 {- 968249464205163 -258 (-2.62322e-078)}
; Y = -1.34620685860221822593985052662901580333709716796875p-445 {- 1559177079394060 -445 (-1.48171e-134)}
; Z = 1.3697425761997117366064458110486157238483428955078125p-741 {+ 1665172528396029 -741 (1.18416e-223)}
; -1.2149945697483086615164893373730592429637908935546875p-258 x -1.34620685860221822593985052662901580333709716796875p-445 1.3697425761997117366064458110486157238483428955078125p-741 == 1.6356340229646073591851518358453176915645599365234375p-703
; [HW: 1.6356340229646073591851518358453176915645599365234375p-703] 

; mpf : + 2862641148967415 -703
; mpfd: + 2862641148967415 -703 (3.88686e-212) class: Pos. norm. non-zero
; hwf : + 2862641148967415 -703 (3.88686e-212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111101 #b0011011100001001111000100101010111100010111101101011)))
(assert (= y (fp #b1 #b01001000010 #b0101100010100001000000110011111101011000111100001100)))
(assert (= z (fp #b0 #b00100011010 #b0101111010100111011100110001000010110111011011111101)))
(assert (= r (fp #b0 #b00101000000 #b1010001010111000111010010100110011011011100111110111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
