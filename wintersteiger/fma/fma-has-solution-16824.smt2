(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.07389308225497170923290468635968863964080810546875p71 {- 332784857708748 71 (-2.53566e+021)}
; Y = -1.043685644694359648809722784790210425853729248046875p-364 {- 196742653166958 -364 (-2.77748e-110)}
; Z = 1.007080717197194275058791390620172023773193359375p-38 {+ 31888715330800 -38 (3.66374e-012)}
; -1.07389308225497170923290468635968863964080810546875p71 x -1.043685644694359648809722784790210425853729248046875p-364 1.007080717197194275058791390620172023773193359375p-38 == 1.007080717197194275058791390620172023773193359375p-38
; [HW: 1.007080717197194275058791390620172023773193359375p-38] 

; mpf : + 31888715330800 -38
; mpfd: + 31888715330800 -38 (3.66374e-012) class: Pos. norm. non-zero
; hwf : + 31888715330800 -38 (3.66374e-012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000110 #b0001001011101010101010000011001110101111100011001100)))
(assert (= y (fp #b1 #b01010010011 #b0000101100101110111110110111111101000100010101101110)))
(assert (= z (fp #b0 #b01111011001 #b0000000111010000000010101011100011001011010011110000)))
(assert (= r (fp #b0 #b01111011001 #b0000000111010000000010101011100011001011010011110000)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
