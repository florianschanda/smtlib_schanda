(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2863574423825909764929065204341895878314971923828125p747 {+ 1289639270809005 747 (9.52288e+224)}
; Y = -1.6579256386348417695586476838798262178897857666015625p752 {- 2963033660993369 752 (-3.92755e+226)}
; Z = -1.9730814336042572509910542066791094839572906494140625p522 {- 4382369181781281 522 (-2.70896e+157)}
; 1.2863574423825909764929065204341895878314971923828125p747 x -1.6579256386348417695586476838798262178897857666015625p752 -1.9730814336042572509910542066791094839572906494140625p522 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101010 #b0100100101001110101110001010100111111111110110101101)))
(assert (= y (fp #b1 #b11011101111 #b1010100001101101110100001000110100100010111101011001)))
(assert (= z (fp #b1 #b11000001001 #b1111100100011011110111010110010110101100110100100001)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
