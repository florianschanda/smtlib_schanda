(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5727191661354213980672511752345599234104156494140625p-279 {- 2579297823195425 -279 (-1.61913e-084)}
; Y = -1.3093501038993970997381666165892966091632843017578125p-495 {- 1393189012648349 -495 (-1.27999e-149)}
; Z = 1.362747997815713763003486747038550674915313720703125p-104 {+ 1633671747792242 -104 (6.71887e-032)}
; -1.5727191661354213980672511752345599234104156494140625p-279 x -1.3093501038993970997381666165892966091632843017578125p-495 1.362747997815713763003486747038550674915313720703125p-104 == 1.362747997815713763003486747038550674915313720703125p-104
; [HW: 1.362747997815713763003486747038550674915313720703125p-104] 

; mpf : + 1633671747792242 -104
; mpfd: + 1633671747792242 -104 (6.71887e-032) class: Pos. norm. non-zero
; hwf : + 1633671747792242 -104 (6.71887e-032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011101000 #b1001001010011101101110010010100001011000000100100001)))
(assert (= y (fp #b1 #b01000010000 #b0100111100110001100100011000001101000011000110011101)))
(assert (= z (fp #b0 #b01110010111 #b0101110011011101000011011000001101001110110101110010)))
(assert (= r (fp #b0 #b01110010111 #b0101110011011101000011011000001101001110110101110010)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
