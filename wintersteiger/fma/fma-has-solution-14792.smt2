(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.834324094566537777240000650635920464992523193359375p-562 {- 3757461681396086 -562 (-1.21512e-169)}
; Y = -1.0699475554343511607413574893143959343433380126953125p-23 {- 315015784589621 -23 (-1.27548e-007)}
; Z = 1.1165916882111892594053870197967626154422760009765625p-949 {+ 525082283582409 -949 (2.34654e-286)}
; -1.834324094566537777240000650635920464992523193359375p-562 x -1.0699475554343511607413574893143959343433380126953125p-23 1.1165916882111892594053870197967626154422760009765625p-949 == 1.962630580855796669226265294128097593784332275390625p-585
; [HW: 1.962630580855796669226265294128097593784332275390625p-585] 

; mpf : + 4335302725237610 -585
; mpfd: + 4335302725237610 -585 (1.54986e-176) class: Pos. norm. non-zero
; hwf : + 4335302725237610 -585 (1.54986e-176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001101 #b1101010110010110010000111000110001101101100101110110)))
(assert (= y (fp #b1 #b01111101000 #b0001000111101000000101010011111100000110100100110101)))
(assert (= z (fp #b0 #b00001001010 #b0001110111011000111100111110111111011010001111001001)))
(assert (= r (fp #b0 #b00110110110 #b1111011001101110111101010010111011100111101101101010)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
