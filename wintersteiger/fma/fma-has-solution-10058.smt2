(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1175648477532253988186994320130906999111175537109375p-912 {- 529465004533295 -912 (-3.22787e-275)}
; Y = 1.9376606323505409790186604368500411510467529296875p238 {+ 4222848074453880 238 (8.55888e+071)}
; Z = -1.856259968624986544938337829080410301685333251953125p-946 {- 3856252075631762 -946 (-3.12078e-285)}
; -1.1175648477532253988186994320130906999111175537109375p-912 x 1.9376606323505409790186604368500411510467529296875p238 -1.856259968624986544938337829080410301685333251953125p-946 == -1.0827307047951253426987250350066460669040679931640625p-673
; [HW: -1.0827307047951253426987250350066460669040679931640625p-673] 

; mpf : - 372585971287425 -673
; mpfd: - 372585971287425 -673 (-2.7627e-203) class: Neg. norm. non-zero
; hwf : - 372585971287425 -673 (-2.7627e-203) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101111 #b0001111000011000101110101101100001000010011000101111)))
(assert (= y (fp #b0 #b10011101101 #b1111000000001010100001101111011010110001001101111000)))
(assert (= z (fp #b1 #b00001001101 #b1101101100110011110110100111001000011110010010010010)))
(assert (= r (fp #b1 #b00101011110 #b0001010100101101110101101110011101111000010110000001)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
