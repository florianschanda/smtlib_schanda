(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8672642760671285255824614068842492997646331787109375p-996 {- 3905811070527663 -996 (-2.78824e-300)}
; Y = -1.2183240757108020346777266240678727626800537109375p-877 {- 983244226017176 -877 (-1.20908e-264)}
; Z = -1.964956625600220885274893589667044579982757568359375p157 {- 4345778299481846 157 (-3.58973e+047)}
; -1.8672642760671285255824614068842492997646331787109375p-996 x -1.2183240757108020346777266240678727626800537109375p-877 -1.964956625600220885274893589667044579982757568359375p157 == -1.964956625600220885274893589667044579982757568359375p157
; [HW: -1.964956625600220885274893589667044579982757568359375p157] 

; mpf : - 4345778299481846 157
; mpfd: - 4345778299481846 157 (-3.58973e+047) class: Neg. norm. non-zero
; hwf : - 4345778299481846 157 (-3.58973e+047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011011 #b1101111000000101000010000001011010110010100010101111)))
(assert (= y (fp #b1 #b00010010010 #b0011011111100100000101100010110100011011011110011000)))
(assert (= z (fp #b1 #b10010011100 #b1111011100000111011001011011110100000010111011110110)))
(assert (= r (fp #b1 #b10010011100 #b1111011100000111011001011011110100000010111011110110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
