(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.507181186640957459843548349454067647457122802734375p194 {- 2284141003165542 194 (-3.78429e+058)}
; Y = 1.7793220770435398403463977956562303006649017333984375p-972 {+ 3509754615774887 -972 (4.45758e-293)}
; Z = -1.9826834423862511602720815062639303505420684814453125p-768 {- 4425612784953877 -768 (-1.27708e-231)}
; -1.507181186640957459843548349454067647457122802734375p194 x 1.7793220770435398403463977956562303006649017333984375p-972 -1.9826834423862511602720815062639303505420684814453125p-768 == -1.9853023493779453634289211549912579357624053955078125p-768
; [HW: -1.9853023493779453634289211549912579357624053955078125p-768] 

; mpf : - 4437407293505789 -768
; mpfd: - 4437407293505789 -768 (-1.27876e-231) class: Neg. norm. non-zero
; hwf : - 4437407293505789 -768 (-1.27876e-231) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011000001 #b1000000111010110101000000101000111000100111101100110)))
(assert (= y (fp #b0 #b00000110011 #b1100011110000001101001101101000111110011111010100111)))
(assert (= z (fp #b1 #b00011111111 #b1111101110010001001001000101111101011110101000010101)))
(assert (= r (fp #b1 #b00011111111 #b1111110000111100110001100101011101000000000011111101)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
