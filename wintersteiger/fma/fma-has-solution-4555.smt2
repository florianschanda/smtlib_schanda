(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.422825453663907779855435364879667758941650390625p43 {+ 1904236555563536 43 (1.25153e+013)}
; Y = -1.6372773198505383707157534445286728441715240478515625p-948 {- 2870041900210553 -948 (-6.88155e-286)}
; Z = -1.5534414471549211622658503983984701335430145263671875p-909 {- 2492478695178291 -909 (-3.58946e-274)}
; 1.422825453663907779855435364879667758941650390625p43 x -1.6372773198505383707157534445286728441715240478515625p-948 -1.5534414471549211622658503983984701335430145263671875p-909 == -1.213324967918576025027732612215913832187652587890625p-904
; [HW: -1.213324967918576025027732612215913832187652587890625p-904] 

; mpf : - 960730246026922 -904
; mpfd: - 960730246026922 -904 (-8.97142e-273) class: Neg. norm. non-zero
; hwf : - 960730246026922 -904 (-8.97142e-273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101010 #b0110110000111110010010011111011101100111001000010000)))
(assert (= y (fp #b1 #b00001001011 #b1010001100100100100110110011111100111101100101111001)))
(assert (= z (fp #b1 #b00001110010 #b1000110110101110010101101011001111001000000000110011)))
(assert (= r (fp #b1 #b00001110111 #b0011011010011100011101110001000010100001011010101010)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
