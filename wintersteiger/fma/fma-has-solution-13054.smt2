(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.819834310882809891296574278385378420352935791015625p-950 {+ 3692205496997370 -950 (1.91221e-286)}
; Y = 1.93760759610009625220072848605923354625701904296875p120 {+ 4222609220416140 120 (2.57552e+036)}
; Z = 1.599368336380354804759917897172272205352783203125p-986 {+ 2699315016380240 -986 (2.44553e-297)}
; 1.819834310882809891296574278385378420352935791015625p-950 x 1.93760759610009625220072848605923354625701904296875p120 1.599368336380354804759917897172272205352783203125p-986 == 1.76306239220505833742436152533628046512603759765625p-829
; [HW: 1.76306239220505833742436152533628046512603759765625p-829] 

; mpf : + 3436527505195140 -829
; mpfd: + 3436527505195140 -829 (4.92494e-250) class: Pos. norm. non-zero
; hwf : + 3436527505195140 -829 (4.92494e-250) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001001 #b1101000111100000101010010101000101100001010111111010)))
(assert (= y (fp #b0 #b10001110111 #b1111000000000111000011010010100110111011001010001100)))
(assert (= z (fp #b0 #b00000100101 #b1001100101110000001101000000101100000010111101010000)))
(assert (= r (fp #b0 #b00011000010 #b1100001101011000000011101001001101010100000010000100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
