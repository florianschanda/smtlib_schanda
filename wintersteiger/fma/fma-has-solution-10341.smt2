(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.871488445418773682860091867041774094104766845703125p334 {+ 3924835038045682 334 (6.54946e+100)}
; Y = 1.5223942294018837362301610482973046600818634033203125p-318 {+ 2352654456874821 -318 (2.85094e-096)}
; Z = 1.081432582496145489159289354574866592884063720703125p-270 {+ 366739748185458 -270 (5.70034e-082)}
; 1.871488445418773682860091867041774094104766845703125p334 x 1.5223942294018837362301610482973046600818634033203125p-318 1.081432582496145489159289354574866592884063720703125p-270 == 1.4245716048489216465355866603204049170017242431640625p17
; [HW: 1.4245716048489216465355866603204049170017242431640625p17] 

; mpf : + 1912100521389697 17
; mpfd: + 1912100521389697 17 (186721) class: Pos. norm. non-zero
; hwf : + 1912100521389697 17 (186721) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101001101 #b1101111100011001110111011110001111101010010111110010)))
(assert (= y (fp #b0 #b01011000001 #b1000010110111011101000001101001011100110011101000101)))
(assert (= z (fp #b0 #b01011110001 #b0001010011011000110001000000011010100110010101110010)))
(assert (= r (fp #b0 #b10000010000 #b0110110010110000101110011000010110100010111010000001)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
