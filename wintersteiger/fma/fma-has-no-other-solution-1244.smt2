(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6485231886631186437597307303803972899913787841796875p-306 {- 2920688790804347 -306 (-1.26449e-092)}
; Y = 1.0730731626708689407934116388787515461444854736328125p21 {+ 329092268175309 21 (2.2504e+006)}
; Z = -1.7645206479277579791897778704878874123096466064453125p-578 {- 3443094905124501 -578 (-1.78357e-174)}
; -1.6485231886631186437597307303803972899913787841796875p-306 x 1.0730731626708689407934116388787515461444854736328125p21 -1.7645206479277579791897778704878874123096466064453125p-578 == -1.7689859917949981582552254621987231075763702392578125p-285
; [HW: -1.7689859917949981582552254621987231075763702392578125p-285] 

; mpf : - 3463205026101085 -285
; mpfd: - 3463205026101085 -285 (-2.84561e-086) class: Neg. norm. non-zero
; hwf : - 3463205026101085 -285 (-2.84561e-086) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011001101 #b1010011000000101100111011001111000000001011101111011)))
(assert (= y (fp #b0 #b10000010100 #b0001001010110100111011000011101111100010111111001101)))
(assert (= z (fp #b1 #b00110111101 #b1100001110110111101000000000101111110111011010010101)))
(assert (= r (fp #b1 #b01011100010 #b1100010011011100010001000001010111010111011101011101)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
