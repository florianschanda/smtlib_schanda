(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2129785239764812043716801781556569039821624755859375p-729 {+ 959170001218399 -729 (4.29523e-220)}
; Y = 1.14832151773005097794566609081812202930450439453125p151 {+ 667980731980084 151 (3.27788e+045)}
; Z = -1.41821800392991637096429258235730230808258056640625p244 {- 1883486446658404 244 (-4.00924e+073)}
; 1.2129785239764812043716801781556569039821624755859375p-729 x 1.14832151773005097794566609081812202930450439453125p151 -1.41821800392991637096429258235730230808258056640625p244 == -1.4182180039299161489196876573259942233562469482421875p244
; [HW: -1.4182180039299161489196876573259942233562469482421875p244] 

; mpf : - 1883486446658403 244
; mpfd: - 1883486446658403 244 (-4.00924e+073) class: Neg. norm. non-zero
; hwf : - 1883486446658403 244 (-4.00924e+073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100100110 #b0011011010000101110000101011001100111010101101011111)))
(assert (= y (fp #b0 #b10010010110 #b0010010111111000011001100010001111110001100100110100)))
(assert (= z (fp #b1 #b10011110011 #b0110101100010000010101011100100101111010001101100100)))
(assert (= r (fp #b1 #b10011110011 #b0110101100010000010101011100100101111010001101100011)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
