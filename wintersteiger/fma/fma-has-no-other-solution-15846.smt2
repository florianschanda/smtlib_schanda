(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3784986393478930732925391566823236644268035888671875p-511 {- 1704606331127411 -511 (-2.05626e-154)}
; Y = -1.3293871023784660234667853728751651942729949951171875p402 {- 1483427631532307 402 (-1.37312e+121)}
; Z = -1.8501534727017843184881940032937563955783843994140625p133 {- 3828750862867489 133 (-2.01464e+040)}
; -1.3784986393478930732925391566823236644268035888671875p-511 x -1.3293871023784660234667853728751651942729949951171875p402 -1.8501534727017843184881940032937563955783843994140625p133 == -1.8501534727017843184881940032937563955783843994140625p133
; [HW: -1.8501534727017843184881940032937563955783843994140625p133] 

; mpf : - 3828750862867489 133
; mpfd: - 3828750862867489 133 (-2.01464e+040) class: Neg. norm. non-zero
; hwf : - 3828750862867489 133 (-2.01464e+040) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000000000 #b0110000011100101010010010110110110010100011001110011)))
(assert (= y (fp #b1 #b10110010001 #b0101010001010010101101101001000001110000100100010011)))
(assert (= z (fp #b1 #b10010000100 #b1101100110100011101010000111000111010101110000100001)))
(assert (= r (fp #b1 #b10010000100 #b1101100110100011101010000111000111010101110000100001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
