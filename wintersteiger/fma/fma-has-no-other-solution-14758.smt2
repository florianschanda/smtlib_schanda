(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.834472790387974061587783580762334167957305908203125p-958 {+ 3758131347842098 -958 (7.52966e-289)}
; Y = -1.7243505462581101284058604505844414234161376953125p-681 {- 3262184850213640 -681 (-1.71869e-205)}
; Z = 1.0673309611065031621279786122613586485385894775390625p-323 {+ 303231691349745 -323 (6.24612e-098)}
; 1.834472790387974061587783580762334167957305908203125p-958 x -1.7243505462581101284058604505844414234161376953125p-681 1.0673309611065031621279786122613586485385894775390625p-323 == 1.0673309611065031621279786122613586485385894775390625p-323
; [HW: 1.0673309611065031621279786122613586485385894775390625p-323] 

; mpf : + 303231691349745 -323
; mpfd: + 303231691349745 -323 (6.24612e-098) class: Pos. norm. non-zero
; hwf : + 303231691349745 -323 (6.24612e-098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001000001 #b1101010110100000000000100100000000011110010000110010)))
(assert (= y (fp #b1 #b00101010110 #b1011100101101111000010011001001100000100101100001000)))
(assert (= z (fp #b0 #b01010111100 #b0001000100111100100110100001001111110101111011110001)))
(assert (= r (fp #b0 #b01010111100 #b0001000100111100100110100001001111110101111011110001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
