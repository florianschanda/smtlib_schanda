(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1744589947910435423494845963432453572750091552734375p764 {+ 785693463932375 764 (1.13961e+230)}
; Y = -1.3638332732293176885463026337674818933010101318359375p-349 {- 1638559393740543 -349 (-1.1893e-105)}
; Z = 1.5481496956108180551581199324573390185832977294921875p-251 {+ 2468646764896131 -251 (4.27843e-076)}
; 1.1744589947910435423494845963432453572750091552734375p764 x -1.3638332732293176885463026337674818933010101318359375p-349 1.5481496956108180551581199324573390185832977294921875p-251 == -1.6017662551394831194073731239768676459789276123046875p415
; [HW: -1.6017662551394831194073731239768676459789276123046875p415] 

; mpf : - 2710114282410315 415
; mpfd: - 2710114282410315 415 (-1.35534e+125) class: Neg. norm. non-zero
; hwf : - 2710114282410315 415 (-1.35534e+125) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011111011 #b0010110010101001010110000011110100011110110111010111)))
(assert (= y (fp #b1 #b01010100010 #b0101110100100100001011010110100110110111011011111111)))
(assert (= z (fp #b0 #b01100000100 #b1000110001010011100010011101011111110101111110000011)))
(assert (= r (fp #b1 #b10110011110 #b1001101000001101010110100111000110101001000101001011)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
