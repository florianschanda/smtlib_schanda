(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.002201769582957258108990572509355843067169189453125p900 {- 9915888673362 900 (-8.47132e+270)}
; Y = -1.4584240730170285882394409782136790454387664794921875p503 {- 2064558484417155 503 (-3.81919e+151)}
; Z = -1.33853052767518487797815396334044635295867919921875p533 {- 1524605958291500 533 (-3.76371e+160)}
; -1.002201769582957258108990572509355843067169189453125p900 x -1.4584240730170285882394409782136790454387664794921875p503 -1.33853052767518487797815396334044635295867919921875p533 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110000011 #b0000000010010000010010111001000001011010001001010010)))
(assert (= y (fp #b1 #b10111110110 #b0111010101011011010001111011000101001110101010000011)))
(assert (= z (fp #b1 #b11000010100 #b0101011010101001111011111100100100010000000000101100)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
