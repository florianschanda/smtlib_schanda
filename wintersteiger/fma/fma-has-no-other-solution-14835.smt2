(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0174904571061935687481536660925485193729400634765625p857 {+ 78770016105993 857 (9.7777e+257)}
; Y = -1.6769462543022697342820492849568836390972137451171875p1022 {- 3048694898625555 1022 (-7.53659e+307)}
; Z = 1.7274548269316383208860088416258804500102996826171875p-305 {+ 3276165287498195 -305 (2.65007e-092)}
; 1.0174904571061935687481536660925485193729400634765625p857 x -1.6769462543022697342820492849568836390972137451171875p1022 1.7274548269316383208860088416258804500102996826171875p-305 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011000 #b0000010001111010010000010010110101000011011000001001)))
(assert (= y (fp #b1 #b11111111101 #b1010110101001100010110011000011101100000110000010011)))
(assert (= z (fp #b0 #b01011001110 #b1011101000111010011110101100001011111101000111010011)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
