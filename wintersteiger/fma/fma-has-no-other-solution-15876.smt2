(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5207168932562049601386888753040693700313568115234375p-971 {- 2345100406434167 -971 (-7.61943e-293)}
; Y = -1.16328250817603606748207312193699181079864501953125p-556 {- 735359042977716 -556 (-4.93182e-168)}
; Z = -0.243411025994470175959349944605492055416107177734375p-1022 {- 1096225805966566 -1023 (-5.41608e-309)}
; -1.5207168932562049601386888753040693700313568115234375p-971 x -1.16328250817603606748207312193699181079864501953125p-556 -0.243411025994470175959349944605492055416107177734375p-1022 == -0.2434110259944699539147450195741839706897735595703125p-1022
; [HW: -0.2434110259944699539147450195741839706897735595703125p-1022] 

; mpf : - 1096225805966565 -1023
; mpfd: - 1096225805966565 -1023 (-5.41608e-309) class: Neg. denorm.
; hwf : - 1096225805966565 -1023 (-5.41608e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000110100 #b1000010101001101101100111100101100000010100101110111)))
(assert (= y (fp #b1 #b00111010011 #b0010100111001100111000011110100010011111111110110100)))
(assert (= z (fp #b1 #b00000000000 #b0011111001010000001011110101110000100001110011100110)))
(assert (= r (fp #b1 #b00000000000 #b0011111001010000001011110101110000100001110011100101)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
