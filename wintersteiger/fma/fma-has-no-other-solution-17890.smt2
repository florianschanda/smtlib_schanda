(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.53041198719255699955965610570274293422698974609375p-837 {+ 2388763227873244 -837 (1.66994e-252)}
; Y = -1.5074370892413939682086265747784636914730072021484375p595 {- 2285293486021511 595 (-1.95473e+179)}
; Z = -1.8292998324146638733367353779613040387630462646484375p-427 {- 3734834416241095 -427 (-5.27809e-129)}
; 1.53041198719255699955965610570274293422698974609375p-837 x -1.5074370892413939682086265747784636914730072021484375p595 -1.8292998324146638733367353779613040387630462646484375p-427 == -1.1534998956568427441737867411575280129909515380859375p-241
; [HW: -1.1534998956568427441737867411575280129909515380859375p-241] 

; mpf : - 691302072881567 -241
; mpfd: - 691302072881567 -241 (-3.26429e-073) class: Neg. norm. non-zero
; hwf : - 691302072881567 -241 (-3.26429e-073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010111010 #b1000011111001001000101000111101001100101111111011100)))
(assert (= y (fp #b1 #b11001010010 #b1000000111100111011001011010011100010001101110000111)))
(assert (= z (fp #b1 #b01001010100 #b1101010001001100111111100110101011001100100111000111)))
(assert (= r (fp #b1 #b01100001110 #b0010011101001011110001001110011111001001000110011111)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
