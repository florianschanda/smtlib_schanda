(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7222435893089873548689183735405094921588897705078125p-840 {- 3252695959682685 -840 (-2.34908e-253)}
; Y = -1.6231249837434369442945580885862000286579132080078125p303 {- 2806305444592189 303 (-2.64509e+091)}
; Z = -zero {- 0 -1023 (-0)}
; -1.7222435893089873548689183735405094921588897705078125p-840 x -1.6231249837434369442945580885862000286579132080078125p303 -zero == 1.3977082989496942833085313395713455975055694580078125p-536
; [HW: 1.3977082989496942833085313395713455975055694580078125p-536] 

; mpf : + 1791118946951997 -536
; mpfd: + 1791118946951997 -536 (6.21354e-162) class: Pos. norm. non-zero
; hwf : + 1791118946951997 -536 (6.21354e-162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110111 #b1011100011100100111101001011001111010011111001111101)))
(assert (= y (fp #b1 #b10100101110 #b1001111110000101000111100111001001111111101000111101)))
(assert (= z (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= r (fp #b0 #b00111100111 #b0110010111010000001101100000100101010110001100111101)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
