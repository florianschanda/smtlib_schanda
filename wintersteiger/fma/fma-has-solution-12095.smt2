(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8066832315270666686757294883136637508869171142578125p-830 {+ 3632978300911325 -830 (2.5234e-250)}
; Y = -1.691037160969087960182832830469124019145965576171875p598 {- 3112154700639550 598 (-1.75425e+180)}
; Z = 1.1955951932661916803368740147561766207218170166015625p1012 {+ 880882439509081 1012 (5.24735e+304)}
; 1.8066832315270666686757294883136637508869171142578125p-830 x -1.691037160969087960182832830469124019145965576171875p598 1.1955951932661916803368740147561766207218170166015625p1012 == 1.1955951932661916803368740147561766207218170166015625p1012
; [HW: 1.1955951932661916803368740147561766207218170166015625p1012] 

; mpf : + 880882439509081 1012
; mpfd: + 880882439509081 1012 (5.24735e+304) class: Pos. norm. non-zero
; hwf : + 880882439509081 1012 (5.24735e+304) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000001 #b1100111010000010110010101101000110100011111011011101)))
(assert (= y (fp #b1 #b11001010101 #b1011000011100111110011111011011010101110110100111110)))
(assert (= z (fp #b0 #b11111110011 #b0011001000010010100001101100111001010101010001011001)))
(assert (= r (fp #b0 #b11111110011 #b0011001000010010100001101100111001010101010001011001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
