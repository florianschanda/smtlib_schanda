(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.904748103690461658032972991350106894969940185546875p295 {+ 4074623222644526 295 (1.21251e+089)}
; Y = 1.0399678584665312808255066556739620864391326904296875p-129 {+ 179999232496667 -129 (1.5281e-039)}
; Z = -1.0040496025619771724990414440981112420558929443359375p-282 {- 18237788589119 -282 (-1.2921e-085)}
; 1.904748103690461658032972991350106894969940185546875p295 x 1.0399678584665312808255066556739620864391326904296875p-129 -1.0040496025619771724990414440981112420558929443359375p-282 == 1.9808768063131558800904485906357876956462860107421875p166
; [HW: 1.9808768063131558800904485906357876956462860107421875p166] 

; mpf : + 4417476419408291 166
; mpfd: + 4417476419408291 166 (1.85284e+050) class: Pos. norm. non-zero
; hwf : + 4417476419408291 166 (1.85284e+050) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100110 #b1110011110011101100100100101110001110111111100101110)))
(assert (= y (fp #b0 #b01101111110 #b0000101000111011010101010110010100000001010000011011)))
(assert (= z (fp #b1 #b01011100101 #b0000000100001001011001010000111010010000110000111111)))
(assert (= r (fp #b0 #b10010100101 #b1111101100011010101111100000110010000101000110100011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
