(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.978540945738398448838779586367309093475341796875p-968 {- 4406956638594224 -968 (-7.93066e-292)}
; Y = -1.549248935153069606229792043450288474559783935546875p-321 {- 2473597299689006 -321 (-3.62654e-097)}
; Z = -1.8358351160741588348201958069694228470325469970703125p-557 {- 3764266717294757 -557 (-3.89158e-168)}
; -1.978540945738398448838779586367309093475341796875p-968 x -1.549248935153069606229792043450288474559783935546875p-321 -1.8358351160741588348201958069694228470325469970703125p-557 == -1.83583511607415861277559088193811476230621337890625p-557
; [HW: -1.83583511607415861277559088193811476230621337890625p-557] 

; mpf : - 3764266717294756 -557
; mpfd: - 3764266717294756 -557 (-3.89158e-168) class: Neg. norm. non-zero
; hwf : - 3764266717294756 -557 (-3.89158e-168) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000110111 #b1111101010000001101010001100111110111110010010110000)))
(assert (= y (fp #b1 #b01010111110 #b1000110010011011100101000000010111011000011000101110)))
(assert (= z (fp #b1 #b00111010010 #b1101010111111001010010100100100001100011000010100101)))
(assert (= r (fp #b1 #b00111010010 #b1101010111111001010010100100100001100011000010100100)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
