(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7753562895539205523931514107971452176570892333984375p-234 {- 3491894296714407 -234 (-6.43082e-071)}
; Y = 1.6885561242701678796862552189850248396396636962890625p819 {+ 3100981104686801 819 (5.90312e+246)}
; Z = -1.4040495395088417041051798150874674320220947265625p141 {- 1819677355571240 141 (-3.91392e+042)}
; -1.7753562895539205523931514107971452176570892333984375p-234 x 1.6885561242701678796862552189850248396396636962890625p819 -1.4040495395088417041051798150874674320220947265625p141 == -1.4988943677439170443221883033402264118194580078125p586
; [HW: -1.4988943677439170443221883033402264118194580078125p586] 

; mpf : - 2246820488668744 586
; mpfd: - 2246820488668744 586 (-3.79619e+176) class: Neg. norm. non-zero
; hwf : - 2246820488668744 586 (-3.79619e+176) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100010101 #b1100011001111101101111111111001001100001110010100111)))
(assert (= y (fp #b0 #b11100110010 #b1011000001000101001101101101001100110011011011010001)))
(assert (= z (fp #b1 #b10010001100 #b0110011101101111110010100110011000100111100000101000)))
(assert (= r (fp #b1 #b11001001001 #b0111111110110111100010101001000110011110011001001000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
