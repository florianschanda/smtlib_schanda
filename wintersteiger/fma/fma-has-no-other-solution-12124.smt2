(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9069978230502291349779397933161817491054534912109375p884 {+ 4084755057914863 884 (2.45961e+266)}
; Y = -1.0418988079111073385973895710776560008525848388671875p9 {- 188695455695731 9 (-533.452)}
; Z = -1.827384443572929395571691202349029481410980224609375p72 {- 3726208271767190 72 (-8.62958e+021)}
; 1.9069978230502291349779397933161817491054534912109375p884 x -1.0418988079111073385973895710776560008525848388671875p9 -1.827384443572929395571691202349029481410980224609375p72 == -1.98689875852511033116343241999857127666473388671875p893
; [HW: -1.98689875852511033116343241999857127666473388671875p893] 

; mpf : - 4444596881146092 893
; mpfd: - 4444596881146092 893 (-1.31208e+269) class: Neg. norm. non-zero
; hwf : - 4444596881146092 893 (-1.31208e+269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110011 #b1110100000110001000000100110001110001011001111101111)))
(assert (= y (fp #b1 #b10000001000 #b0000101010111001111000010101100110111000001101110011)))
(assert (= z (fp #b1 #b10001000111 #b1101001111001111011101111000011001011101011010010110)))
(assert (= r (fp #b1 #b11101111100 #b1111110010100101011001011010010001010100000011101100)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
