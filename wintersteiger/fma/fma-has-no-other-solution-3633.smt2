(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0850009522977595022297236937447451055049896240234375p565 {- 382810257094327 565 (-1.31032e+170)}
; Y = +zero {+ 0 -1023 (0)}
; Z = -1.201681547593894006098480531363748013973236083984375p-848 {- 908292942591366 -848 (-6.40255e-256)}
; -1.0850009522977595022297236937447451055049896240234375p565 x +zero -1.201681547593894006098480531363748013973236083984375p-848 == -1.201681547593894006098480531363748013973236083984375p-848
; [HW: -1.201681547593894006098480531363748013973236083984375p-848] 

; mpf : - 908292942591366 -848
; mpfd: - 908292942591366 -848 (-6.40255e-256) class: Neg. norm. non-zero
; hwf : - 908292942591366 -848 (-6.40255e-256) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110100 #b0001010111000010100111110101011000111111011010110111)))
(assert (= y (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= z (fp #b1 #b00010101111 #b0011001110100001011001101110001100011111010110000110)))
(assert (= r (fp #b1 #b00010101111 #b0011001110100001011001101110001100011111010110000110)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
