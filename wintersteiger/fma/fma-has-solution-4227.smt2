(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5836717339027190920575094423838891088962554931640625p-331 {+ 2628623803310977 -331 (3.62023e-100)}
; Y = -1.6136229311622101167955634082318283617496490478515625p931 {- 2763512004128121 931 (-2.92906e+280)}
; Z = -1.310952754442740175733206342556513845920562744140625p-195 {- 1400406709038154 -195 (-2.61059e-059)}
; 1.5836717339027190920575094423838891088962554931640625p-331 x -1.6136229311622101167955634082318283617496490478515625p931 -1.310952754442740175733206342556513845920562744140625p-195 == -1.277724512629422548570801154710352420806884765625p601
; [HW: -1.277724512629422548570801154710352420806884765625p601] 

; mpf : - 1250760011589520 601
; mpfd: - 1250760011589520 601 (-1.06039e+181) class: Neg. norm. non-zero
; hwf : - 1250760011589520 601 (-1.06039e+181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010110100 #b1001010101101011100000101100000010110110001110000001)))
(assert (= y (fp #b1 #b11110100010 #b1001110100010110011001000111010101101010110101111001)))
(assert (= z (fp #b1 #b01100111100 #b0100111110011010100110011000011011101110110001001010)))
(assert (= r (fp #b1 #b11001011000 #b0100011100011000111101000010001100001010011110010000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
