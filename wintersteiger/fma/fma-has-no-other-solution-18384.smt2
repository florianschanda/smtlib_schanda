(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.463140107499855790962328683235682547092437744140625p276 {- 2085797615556682 276 (-1.7765e+083)}
; Y = +zero {+ 0 -1023 (0)}
; Z = 1.4803992594132282523133881113608367741107940673828125p-814 {+ 2163525925682477 -814 (1.35507e-245)}
; -1.463140107499855790962328683235682547092437744140625p276 x +zero 1.4803992594132282523133881113608367741107940673828125p-814 == 1.4803992594132282523133881113608367741107940673828125p-814
; [HW: 1.4803992594132282523133881113608367741107940673828125p-814] 

; mpf : + 2163525925682477 -814
; mpfd: + 2163525925682477 -814 (1.35507e-245) class: Pos. norm. non-zero
; hwf : + 2163525925682477 -814 (1.35507e-245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100010011 #b0111011010010000010110011001111100101101100001001010)))
(assert (= y (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= z (fp #b0 #b00011010001 #b0111101011111011011100100010010000110011110100101101)))
(assert (= r (fp #b0 #b00011010001 #b0111101011111011011100100010010000110011110100101101)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
