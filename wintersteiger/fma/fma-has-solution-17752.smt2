(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6574404458775837678530251650954596698284149169921875p779 {- 2960848547072579 779 (-5.26993e+234)}
; Y = 1.229947766639295725354941168916411697864532470703125p-333 {+ 1035592676151410 -333 (7.02907e-101)}
; Z = -1.9084772330129859962966065722866915166378021240234375p521 {- 4091417728071863 521 (-1.31013e+157)}
; -1.6574404458775837678530251650954596698284149169921875p779 x 1.229947766639295725354941168916411697864532470703125p-333 -1.9084772330129859962966065722866915166378021240234375p521 == -1.9084772330129859962966065722866915166378021240234375p521
; [HW: -1.9084772330129859962966065722866915166378021240234375p521] 

; mpf : - 4091417728071863 521
; mpfd: - 4091417728071863 521 (-1.31013e+157) class: Neg. norm. non-zero
; hwf : - 4091417728071863 521 (-1.31013e+157) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001010 #b1010100001001110000001000101111000011100101001000011)))
(assert (= y (fp #b0 #b01010110010 #b0011101011011101110110110101100110000001000001110010)))
(assert (= z (fp #b1 #b11000001000 #b1110100010010001111101101100010011110011100010110111)))
(assert (= r (fp #b1 #b11000001000 #b1110100010010001111101101100010011110011100010110111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
