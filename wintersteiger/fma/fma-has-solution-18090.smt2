(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.814189848000320015586339650326408445835113525390625p-280 {+ 3666785096063082 -280 (9.33865e-085)}
; Y = -1.081956608770852756862268506665714085102081298828125p-381 {- 369099752720962 -381 (-2.19675e-115)}
; Z = 1.9935654422670368024483877888997085392475128173828125p-744 {+ 4474620955562029 -744 (2.15434e-224)}
; 1.814189848000320015586339650326408445835113525390625p-280 x -1.081956608770852756862268506665714085102081298828125p-381 1.9935654422670368024483877888997085392475128173828125p-744 == -1.962874695608935127211225335486233234405517578125p-661
; [HW: -1.962874695608935127211225335486233234405517578125p-661] 

; mpf : - 4336402120348880 -661
; mpfd: - 4336402120348880 -661 (-2.05147e-199) class: Neg. norm. non-zero
; hwf : - 4336402120348880 -661 (-2.05147e-199) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100111 #b1101000001101110101111101111000111100101100001101010)))
(assert (= y (fp #b1 #b01010000010 #b0001010011111011000110111011101001011100101001000010)))
(assert (= z (fp #b0 #b00100010111 #b1111111001011010010011100000100011111001000000101101)))
(assert (= r (fp #b1 #b00101101010 #b1111011001111110111101001011111111001001010011010000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
