(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.433223807562924445591079347650520503520965576171875p844 {- 1951066578308414 844 (-1.68124e+254)}
; Y = 1.692740132493139260105863286298699676990509033203125p-898 {+ 3119824202560690 -898 (8.0104e-271)}
; Z = -1.07770667267993047744312207214534282684326171875p-95 {- 349959742125536 -95 (-2.72051e-029)}
; -1.433223807562924445591079347650520503520965576171875p844 x 1.692740132493139260105863286298699676990509033203125p-898 -1.07770667267993047744312207214534282684326171875p-95 == -1.2130377289534381990421252339729107916355133056640625p-53
; [HW: -1.2130377289534381990421252339729107916355133056640625p-53] 

; mpf : - 959436636730561 -53
; mpfd: - 959436636730561 -53 (-1.34674e-016) class: Neg. norm. non-zero
; hwf : - 959436636730561 -53 (-1.34674e-016) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101001011 #b0110111011100111110000010110010101010100110100111110)))
(assert (= y (fp #b0 #b00001111101 #b1011000101010111011010101101010110101111010010110010)))
(assert (= z (fp #b1 #b01110100000 #b0001001111100100100101011010000111010111010111100000)))
(assert (= r (fp #b1 #b01111001010 #b0011011010001001101000111111111010101011010011000001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
