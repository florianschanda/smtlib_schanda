(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1341263544294883924834493882372044026851654052734375p-531 {- 604051399829207 -531 (-1.61337e-160)}
; Y = -1.9045121313122639339354691401240415871143341064453125p-301 {- 4073560497530005 -301 (-4.67471e-091)}
; Z = -1.076201387793495722888792442972771823406219482421875p344 {- 343180541671902 344 (-3.85667e+103)}
; -1.1341263544294883924834493882372044026851654052734375p-531 x -1.9045121313122639339354691401240415871143341064453125p-301 -1.076201387793495722888792442972771823406219482421875p344 == -1.076201387793495722888792442972771823406219482421875p344
; [HW: -1.076201387793495722888792442972771823406219482421875p344] 

; mpf : - 343180541671902 344
; mpfd: - 343180541671902 344 (-3.85667e+103) class: Neg. norm. non-zero
; hwf : - 343180541671902 344 (-3.85667e+103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101100 #b0010001001010110000110101101000111001110011011010111)))
(assert (= y (fp #b1 #b01011010010 #b1110011110001110000110110110011011010010010010010101)))
(assert (= z (fp #b1 #b10101010111 #b0001001110000001111011110010010001111011100111011110)))
(assert (= r (fp #b1 #b10101010111 #b0001001110000001111011110010010001111011100111011110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
