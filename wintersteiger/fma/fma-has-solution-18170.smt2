(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2609942299277230315368569790734909474849700927734375p-420 {- 1175413516648343 -420 (-4.65709e-127)}
; Y = 1.1116142939624917840291118409368209540843963623046875p695 {+ 502666092698699 695 (1.82726e+209)}
; Z = 1.0633163731815422625714973037247546017169952392578125p-837 {+ 285151594666845 -837 (1.16026e-252)}
; -1.2609942299277230315368569790734909474849700927734375p-420 x 1.1116142939624917840291118409368209540843963623046875p695 1.0633163731815422625714973037247546017169952392578125p-837 == -1.40173921059188177906662531313486397266387939453125p275
; [HW: -1.40173921059188177906662531313486397266387939453125p275] 

; mpf : - 1809272559121716 275
; mpfd: - 1809272559121716 275 (-8.50973e+082) class: Neg. norm. non-zero
; hwf : - 1809272559121716 275 (-8.50973e+082) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001011011 #b0100001011010000100001001001000111111011111110010111)))
(assert (= y (fp #b0 #b11010110110 #b0001110010010010110000010001111001010101110001001011)))
(assert (= z (fp #b0 #b00010111010 #b0001000000110101100000000111100000011101101101011101)))
(assert (= r (fp #b1 #b10100010010 #b0110011011011000011000011000001100000011010100110100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
