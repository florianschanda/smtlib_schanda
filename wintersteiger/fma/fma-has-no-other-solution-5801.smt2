(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2508054715474525853124987406772561371326446533203125p-254 {+ 1129527428203589 -254 (4.32087e-077)}
; Y = 1.393051353905239597708032306400127708911895751953125p-368 {+ 1770145930985106 -368 (2.31701e-111)}
; Z = 1.5983980313465699918396012435550801455974578857421875p892 {+ 2694945150991651 892 (5.27766e+268)}
; 1.2508054715474525853124987406772561371326446533203125p-254 x 1.393051353905239597708032306400127708911895751953125p-368 1.5983980313465699918396012435550801455974578857421875p892 == 1.5983980313465699918396012435550801455974578857421875p892
; [HW: 1.5983980313465699918396012435550801455974578857421875p892] 

; mpf : + 2694945150991651 892
; mpfd: + 2694945150991651 892 (5.27766e+268) class: Pos. norm. non-zero
; hwf : + 2694945150991651 892 (5.27766e+268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000001 #b0100000000110100110010011001000111110100010001000101)))
(assert (= y (fp #b0 #b01010001111 #b0110010010011111000000110111011010101011111010010010)))
(assert (= z (fp #b0 #b11101111011 #b1001100100110000100111010000011010011111110100100011)))
(assert (= r (fp #b0 #b11101111011 #b1001100100110000100111010000011010011111110100100011)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
