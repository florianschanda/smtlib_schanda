(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2086717010695922080998343517421744763851165771484375p998 {- 939773795179783 998 (-3.23776e+300)}
; Y = 1.669451738500288495714585224050097167491912841796875p-83 {+ 3014942600052430 -83 (1.72617e-025)}
; Z = -1.9727329428596345195501271518878638744354248046875p197 {- 4380799718993656 197 (-3.96257e+059)}
; -1.2086717010695922080998343517421744763851165771484375p998 x 1.669451738500288495714585224050097167491912841796875p-83 -1.9727329428596345195501271518878638744354248046875p197 == -1.008909536313365773452233042917214334011077880859375p916
; [HW: -1.008909536313365773452233042917214334011077880859375p916] 

; mpf : - 40124984420918 916
; mpfd: - 40124984420918 916 (-5.58892e+275) class: Neg. norm. non-zero
; hwf : - 40124984420918 916 (-5.58892e+275) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100101 #b0011010101101011100000100011001110110001110100000111)))
(assert (= y (fp #b0 #b01110101100 #b1010101101100001001100000110101100011011111011001110)))
(assert (= z (fp #b1 #b10011000100 #b1111100100000101000001101011000101010010111011111000)))
(assert (= r (fp #b1 #b11110010011 #b0000001001000111111001010011011100010110101000110110)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
