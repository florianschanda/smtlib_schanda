(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6003321566158599242868376677506603300571441650390625p-405 {- 2703655676833713 -405 (-1.9367e-122)}
; Y = 1.7181113357560118259925729944370687007904052734375p-252 {+ 3234085944121304 -252 (2.37406e-076)}
; Z = -1.067015909939603712786038158810697495937347412109375p562 {- 301812827031894 562 (-1.61075e+169)}
; -1.6003321566158599242868376677506603300571441650390625p-405 x 1.7181113357560118259925729944370687007904052734375p-252 -1.067015909939603712786038158810697495937347412109375p562 == -1.067015909939603712786038158810697495937347412109375p562
; [HW: -1.067015909939603712786038158810697495937347412109375p562] 

; mpf : - 301812827031894 562
; mpfd: - 301812827031894 562 (-1.61075e+169) class: Neg. norm. non-zero
; hwf : - 301812827031894 562 (-1.61075e+169) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101010 #b1001100110101111010111100100001101100110111110110001)))
(assert (= y (fp #b0 #b01100000011 #b1011011111010110001001001111110111110101011111011000)))
(assert (= z (fp #b1 #b11000110001 #b0001000100100111111101000110010110000000100101010110)))
(assert (= r (fp #b1 #b11000110001 #b0001000100100111111101000110010110000000100101010110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
