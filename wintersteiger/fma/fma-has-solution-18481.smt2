(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.268753235701405746027603527181781828403472900390625p-570 {- 1210356972159466 -570 (-3.28307e-172)}
; Y = -1.9821259706998592964311001196620054543018341064453125p642 {- 4423102155674773 642 (-3.61733e+193)}
; Z = -1.797874925957923419872486192616634070873260498046875p-154 {- 3593309219232366 -154 (-7.873e-047)}
; -1.268753235701405746027603527181781828403472900390625p-570 x -1.9821259706998592964311001196620054543018341064453125p642 -1.797874925957923419872486192616634070873260498046875p-154 == 1.2574143694466182186175728929811157286167144775390625p73
; [HW: 1.2574143694466182186175728929811157286167144775390625p73] 

; mpf : + 1159291258319601 73
; mpfd: + 1159291258319601 73 (1.18759e+022) class: Pos. norm. non-zero
; hwf : + 1159291258319601 73 (1.18759e+022) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111000101 #b0100010011001101000000110001011000001000000111101010)))
(assert (= y (fp #b1 #b11010000001 #b1111101101101100100110111000110010110101010010010101)))
(assert (= z (fp #b1 #b01101100101 #b1100110001000001100001111111100101001001101001101110)))
(assert (= r (fp #b0 #b10001001000 #b0100000111100101111010000111101001001011001011110001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
