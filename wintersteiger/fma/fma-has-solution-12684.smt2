(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.430203562697166308481655505602248013019561767578125p-829 {+ 1937464604656418 -829 (3.99513e-250)}
; Y = 1.5069908095896291655435561551712453365325927734375p-450 {+ 2283283621148120 -450 (5.18337e-136)}
; Z = 1.1905903645605573348831285329652018845081329345703125p501 {+ 858342694815333 501 (7.79453e+150)}
; 1.430203562697166308481655505602248013019561767578125p-829 x 1.5069908095896291655435561551712453365325927734375p-450 1.1905903645605573348831285329652018845081329345703125p501 == 1.1905903645605573348831285329652018845081329345703125p501
; [HW: 1.1905903645605573348831285329652018845081329345703125p501] 

; mpf : + 858342694815333 501
; mpfd: + 858342694815333 501 (7.79453e+150) class: Pos. norm. non-zero
; hwf : + 858342694815333 501 (7.79453e+150) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000010 #b0110111000100001110100100001100001101000001100100010)))
(assert (= y (fp #b0 #b01000111101 #b1000000111001010001001100101001010001111010111011000)))
(assert (= z (fp #b0 #b10111110100 #b0011000011001010100001111011011010111000011001100101)))
(assert (= r (fp #b0 #b10111110100 #b0011000011001010100001111011011010111000011001100101)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
