(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3072904257694613061602240122738294303417205810546875p-721 {- 1383913046989867 -721 (-1.18507e-217)}
; Y = -1.948100391020705757227915455587208271026611328125p-417 {- 4269864567710672 -417 (-5.75577e-126)}
; Z = 1.9916531213982338055501486451248638331890106201171875p931 {+ 4466008628009875 931 (3.61526e+280)}
; -1.3072904257694613061602240122738294303417205810546875p-721 x -1.948100391020705757227915455587208271026611328125p-417 1.9916531213982338055501486451248638331890106201171875p931 == 1.9916531213982338055501486451248638331890106201171875p931
; [HW: 1.9916531213982338055501486451248638331890106201171875p931] 

; mpf : + 4466008628009875 931
; mpfd: + 4466008628009875 931 (3.61526e+280) class: Pos. norm. non-zero
; hwf : + 4466008628009875 931 (3.61526e+280) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101110 #b0100111010101010100101011101100100001101110000101011)))
(assert (= y (fp #b1 #b01001011110 #b1111001010110110101101010000110011000010001111010000)))
(assert (= z (fp #b0 #b11110100010 #b1111110111011100111110101001110101100001101110010011)))
(assert (= r (fp #b0 #b11110100010 #b1111110111011100111110101001110101100001101110010011)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
