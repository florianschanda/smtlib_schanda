(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.186768946957954540266655385494232177734375p-587 {- 841132559924224 -587 (-2.34293e-177)}
; Y = -1.966716997979475411995053946156986057758331298828125p21 {- 4353706311873090 21 (-4.1245e+006)}
; Z = -1.7265556975512372783754244665033183991909027099609375p-688 {- 3272115968755663 -688 (-1.34445e-207)}
; -1.186768946957954540266655385494232177734375p-587 x -1.966716997979475411995053946156986057758331298828125p21 -1.7265556975512372783754244665033183991909027099609375p-688 == 1.167019330328205928282159220543690025806427001953125p-565
; [HW: 1.167019330328205928282159220543690025806427001953125p-565] 

; mpf : + 752188193829778 -565
; mpfd: + 752188193829778 -565 (9.66341e-171) class: Pos. norm. non-zero
; hwf : + 752188193829778 -565 (9.66341e-171) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110110100 #b0010111111010000000101101111011100010111110000000000)))
(assert (= y (fp #b1 #b10000010100 #b1111011101111010110000111110001011001111001001000010)))
(assert (= z (fp #b1 #b00101001111 #b1011100111111111100011011101111110110100011111001111)))
(assert (= r (fp #b0 #b00111001010 #b0010101011000001110001110110000110001111001110010010)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
