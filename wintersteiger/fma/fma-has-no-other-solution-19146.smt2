(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2036914451872886555605646208277903497219085693359375p-295 {+ 917344716644031 -295 (1.89089e-089)}
; Y = -1.7389527373046271829792885910137556493282318115234375p739 {- 3327947272369527 739 (-5.02869e+222)}
; Z = 1.6106169161751366925017237008432857692241668701171875p-674 {+ 2749974116152467 -674 (2.05483e-203)}
; 1.2036914451872886555605646208277903497219085693359375p-295 x -1.7389527373046271829792885910137556493282318115234375p739 1.6106169161751366925017237008432857692241668701171875p-674 == -1.0465812667392990764625437805079855024814605712890625p445
; [HW: -1.0465812667392990764625437805079855024814605712890625p445] 

; mpf : - 209783375529553 445
; mpfd: - 209783375529553 445 (-9.5087e+133) class: Neg. norm. non-zero
; hwf : - 209783375529553 445 (-9.5087e+133) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011000 #b0011010000100101000111110101111110001101111010111111)))
(assert (= y (fp #b1 #b11011100010 #b1011110100101100000000011011000000000011010101110111)))
(assert (= z (fp #b0 #b00101011101 #b1001110001010001011000111110010101011011010010010011)))
(assert (= r (fp #b1 #b10110111100 #b0000101111101100101111111111100101000000011001010001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
