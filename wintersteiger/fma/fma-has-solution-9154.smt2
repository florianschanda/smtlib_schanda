(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.78768373632912958015594995231367647647857666015625p664 {- 3547412181417668 664 (-1.36838e+200)}
; Y = 1.3318560221594435422076685426873154938220977783203125p-950 {+ 1494546657737925 -950 (1.39946e-286)}
; Z = -1.5552825851205369644958409480750560760498046875p265 {- 2500770443434176 265 (-9.22058e+079)}
; -1.78768373632912958015594995231367647647857666015625p664 x 1.3318560221594435422076685426873154938220977783203125p-950 -1.5552825851205369644958409480750560760498046875p265 == -1.5552825851205369644958409480750560760498046875p265
; [HW: -1.5552825851205369644958409480750560760498046875p265] 

; mpf : - 2500770443434176 265
; mpfd: - 2500770443434176 265 (-9.22058e+079) class: Neg. norm. non-zero
; hwf : - 2500770443434176 265 (-9.22058e+079) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010010111 #b1100100110100101101001000010111100011111111011000100)))
(assert (= y (fp #b0 #b00001001001 #b0101010011110100100001000010101000100111110011000101)))
(assert (= z (fp #b1 #b10100001000 #b1000111000100110111111111101111100100001100011000000)))
(assert (= r (fp #b1 #b10100001000 #b1000111000100110111111111101111100100001100011000000)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
