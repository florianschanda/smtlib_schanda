(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2934642245342171662514374474994838237762451171875p907 {+ 1321645372258872 907 (1.39946e+273)}
; Y = -1.72859611622584008472358618746511638164520263671875p70 {- 3281305197538284 70 (-2.04077e+021)}
; Z = -1.698628596887957531436086355824954807758331298828125p-401 {- 3146343488614978 -401 (-3.28905e-121)}
; 1.2934642245342171662514374474994838237762451171875p907 x -1.72859611622584008472358618746511638164520263671875p70 -1.698628596887957531436086355824954807758331298828125p-401 == -1.11793861750345779881854468840174376964569091796875p978
; [HW: -1.11793861750345779881854468840174376964569091796875p978] 

; mpf : - 531148313841164 978
; mpfd: - 531148313841164 978 (-2.85597e+294) class: Neg. norm. non-zero
; hwf : - 531148313841164 978 (-2.85597e+294) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001010 #b0100101100100000011110001010111011101011101000111000)))
(assert (= y (fp #b1 #b10001000101 #b1011101010000101010001100110101100101110101111101100)))
(assert (= z (fp #b1 #b01001101110 #b1011001011011001010100101101111110101111001001000010)))
(assert (= r (fp #b1 #b11111010001 #b0001111000110001001110011010100100011100111000001100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
