(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3606162728222355173812729844939894974231719970703125p-715 {- 1624071311905957 -715 (-7.89385e-216)}
; Y = -1.1085211931474019397825259147793985903263092041015625p511 {- 488736005020441 511 (-7.43142e+153)}
; Z = -1.8156894208366820553379739067167975008487701416015625p-789 {- 3673538571730137 -789 (-5.57667e-238)}
; -1.3606162728222355173812729844939894974231719970703125p-715 x -1.1085211931474019397825259147793985903263092041015625p511 -1.8156894208366820553379739067167975008487701416015625p-789 == 1.508271974164675288676562558976002037525177001953125p-204
; [HW: 1.508271974164675288676562558976002037525177001953125p-204] 

; mpf : + 2289053473450898 -204
; mpfd: + 2289053473450898 -204 (5.86625e-062) class: Pos. norm. non-zero
; hwf : + 2289053473450898 -204 (5.86625e-062) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110100 #b0101110001010001010110010001101000101101010010100101)))
(assert (= y (fp #b1 #b10111111110 #b0001101111001000000010110111111101111101101100011001)))
(assert (= z (fp #b1 #b00011101010 #b1101000011010001000001011001101000101111110011011001)))
(assert (= r (fp #b0 #b01100110011 #b1000001000011110000111001011001010000010101110010010)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
