(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.5791051271162330760233771798084490001201629638671875p-229 {+ 2608057634689011 -229 (1.83038e-069)}
; Y = -1.47277091654788083729954450973309576511383056640625p-678 {- 2129170923596644 -678 (-1.17435e-204)}
; Z = -1.7565344504997237873311632938566617667675018310546875p603 {- 3407128269363499 603 (-5.83101e+181)}
; 1.5791051271162330760233771798084490001201629638671875p-229 x -1.47277091654788083729954450973309576511383056640625p-678 -1.7565344504997237873311632938566617667675018310546875p603 == -1.7565344504997237873311632938566617667675018310546875p603
; [HW: -1.7565344504997237873311632938566617667675018310546875p603] 

; mpf : - 3407128269363499 603
; mpfd: - 3407128269363499 603 (-5.83101e+181) class: Neg. norm. non-zero
; hwf : - 3407128269363499 603 (-5.83101e+181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100011010 #b1001010001000000001110111100110111101000111111110011)))
(assert (= y (fp #b1 #b00101011001 #b0111100100000111100000111100100100010010101101100100)))
(assert (= z (fp #b1 #b11001011010 #b1100000110101100001111011110001100110001100100101011)))
(assert (= r (fp #b1 #b11001011010 #b1100000110101100001111011110001100110001100100101011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
