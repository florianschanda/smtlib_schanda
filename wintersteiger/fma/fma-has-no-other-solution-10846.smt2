(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.469591612110887179909468613914214074611663818359375p487 {- 2114852609318902 487 (-5.87225e+146)}
; Y = -1.9337028593080081151356353075243532657623291015625p116 {- 4205023849254312 116 (-1.60646e+035)}
; Z = -1.322774233812830768641788381501100957393646240234375p-574 {- 1453645919124262 -574 (-2.13928e-173)}
; -1.469591612110887179909468613914214074611663818359375p487 x -1.9337028593080081151356353075243532657623291015625p116 -1.322774233812830768641788381501100957393646240234375p-574 == 1.4208767511769437863478060535271652042865753173828125p604
; [HW: 1.4208767511769437863478060535271652042865753173828125p604] 

; mpf : + 1895460379769389 604
; mpfd: + 1895460379769389 604 (9.43352e+181) class: Pos. norm. non-zero
; hwf : + 1895460379769389 604 (9.43352e+181) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111100110 #b0111100000110111001001111110100001111101111111110110)))
(assert (= y (fp #b1 #b10001110011 #b1110111100000111001001101000110011101000110110101000)))
(assert (= z (fp #b1 #b00111000001 #b0101001010100001010101010000101000110111101100100110)))
(assert (= r (fp #b0 #b11001011011 #b0110101110111110100101000010100111110011101000101101)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
