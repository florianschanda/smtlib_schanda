(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.0119839786560069772036740687326528131961822509765625p475 {- 53971041809609 475 (-9.87237e+142)}
; Y = -1.7619474100886021172840401050052605569362640380859375p246 {- 3431506072150943 246 (-1.99238e+074)}
; Z = -1.6757307134308498941521747838123701512813568115234375p604 {- 3043220589209975 604 (-1.11256e+182)}
; -1.0119839786560069772036740687326528131961822509765625p475 x -1.7619474100886021172840401050052605569362640380859375p246 -1.6757307134308498941521747838123701512813568115234375p604 == 1.7830625502441106444706520051113329827785491943359375p721
; [HW: 1.7830625502441106444706520051113329827785491943359375p721] 

; mpf : + 3526600209487167 721
; mpfd: + 3526600209487167 721 (1.96695e+217) class: Pos. norm. non-zero
; hwf : + 3526600209487167 721 (1.96695e+217) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111011010 #b0000001100010001011000011100110001100111010011001001)))
(assert (= y (fp #b1 #b10011110101 #b1100001100001110111111000100011110011010001110011111)))
(assert (= z (fp #b1 #b11001011011 #b1010110011111100101100000010001100010110100101110111)))
(assert (= r (fp #b0 #b11011010000 #b1100100001110110110010011000110000000101010100111111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
