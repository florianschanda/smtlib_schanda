(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6091478268638876869545129011385142803192138671875p611 {- 2743357926077752 611 (-1.36749e+184)}
; Y = 1.0314344735059324253967361073591746389865875244140625p296 {+ 141568283167905 296 (1.31317e+089)}
; Z = -1.65673772761219684213074287981726229190826416015625p14 {- 2957683785354436 14 (-27144)}
; -1.6091478268638876869545129011385142803192138671875p611 x 1.0314344735059324253967361073591746389865875244140625p296 -1.65673772761219684213074287981726229190826416015625p14 == -1.659730541594569341867781986366026103496551513671875p907
; [HW: -1.659730541594569341867781986366026103496551513671875p907] 

; mpf : - 2971162221290238 907
; mpfd: - 2971162221290238 907 (-1.79574e+273) class: Neg. norm. non-zero
; hwf : - 2971162221290238 907 (-1.79574e+273) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100010 #b1001101111110001000111001010101011001111010100111000)))
(assert (= y (fp #b0 #b10100100111 #b0000100000001100000101101111001110101100110010100001)))
(assert (= z (fp #b1 #b10000001101 #b1010100000011111111101101011011000100100110011000100)))
(assert (= r (fp #b1 #b11110001010 #b1010100011100100000110011100110001010010001011111110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
