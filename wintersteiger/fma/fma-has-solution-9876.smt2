(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5714248826287329219297816962352953851222991943359375p-927 {- 2573468888476991 -927 (-1.38512e-279)}
; Y = -1.7225143868213990128168688897858373820781707763671875p323 {- 3253915523258675 323 (-2.94341e+097)}
; Z = 1.5286154323359213424993185981293208897113800048828125p-550 {+ 2380672264090349 -550 (4.14764e-166)}
; -1.5714248826287329219297816962352953851222991943359375p-927 x -1.7225143868213990128168688897858373820781707763671875p323 1.5286154323359213424993185981293208897113800048828125p-550 == 1.528615432335921564543923523160628974437713623046875p-550
; [HW: 1.528615432335921564543923523160628974437713623046875p-550] 

; mpf : + 2380672264090350 -550
; mpfd: + 2380672264090350 -550 (4.14764e-166) class: Pos. norm. non-zero
; hwf : + 2380672264090350 -550 (4.14764e-166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100000 #b1001001001001000111001101010111100000010110100111111)))
(assert (= y (fp #b1 #b10101000010 #b1011100011110110101100111110111001001001100100110011)))
(assert (= z (fp #b0 #b00111011001 #b1000011101010011010101110100101000001011001011101101)))
(assert (= r (fp #b0 #b00111011001 #b1000011101010011010101110100101000001011001011101110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
