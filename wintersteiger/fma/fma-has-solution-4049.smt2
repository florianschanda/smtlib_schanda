(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.022080225146360543675427834386937320232391357421875p907 {+ 99440493741406 907 (1.10584e+273)}
; Y = -1.6828277414937691247587281395681202411651611328125p-313 {- 3075182762149576 -313 (-1.00844e-094)}
; Z = 1.894134308366993924011012495611794292926788330078125p254 {+ 4026822937980770 254 (5.48314e+076)}
; 1.022080225146360543675427834386937320232391357421875p907 x -1.6828277414937691247587281395681202411651611328125p-313 1.894134308366993924011012495611794292926788330078125p254 == -1.7199849569084928457840533155831508338451385498046875p594
; [HW: -1.7199849569084928457840533155831508338451385498046875p594] 

; mpf : - 3242523983645451 594
; mpfd: - 3242523983645451 594 (-1.11517e+179) class: Neg. norm. non-zero
; hwf : - 3242523983645451 594 (-1.11517e+179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110001010 #b0000010110100111000011001011010011100100010101011110)))
(assert (= y (fp #b1 #b01011000110 #b1010111011001101110011001000001010000100011011001000)))
(assert (= z (fp #b0 #b10011111101 #b1110010011100101111111000110110010101010111101100010)))
(assert (= r (fp #b1 #b11001010001 #b1011100001010000111011110010001110001000101100001011)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
