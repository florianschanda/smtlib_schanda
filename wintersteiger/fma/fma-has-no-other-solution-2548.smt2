(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.894185547582564854707243284792639315128326416015625p547 {- 4027053698892922 547 (-8.7263e+164)}
; Y = 1.906008917787620493555778011796064674854278564453125p-950 {+ 4080301424542674 -950 (2.00276e-286)}
; Z = -1.34592537197974326801386268925853073596954345703125p61 {- 1557909376345972 61 (-3.10349e+018)}
; -1.894185547582564854707243284792639315128326416015625p547 x 1.906008917787620493555778011796064674854278564453125p-950 -1.34592537197974326801386268925853073596954345703125p61 == -1.34592537197974326801386268925853073596954345703125p61
; [HW: -1.34592537197974326801386268925853073596954345703125p61] 

; mpf : - 1557909376345972 61
; mpfd: - 1557909376345972 61 (-3.10349e+018) class: Neg. norm. non-zero
; hwf : - 1557909376345972 61 (-3.10349e+018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100010 #b1110010011101001010110000001001101101100010001111010)))
(assert (= y (fp #b0 #b00001001001 #b1110011111110000001100110100111111001000001111010010)))
(assert (= z (fp #b1 #b10000111100 #b0101100010001110100100001010111110000010011101110100)))
(assert (= r (fp #b1 #b10000111100 #b0101100010001110100100001010111110000010011101110100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
