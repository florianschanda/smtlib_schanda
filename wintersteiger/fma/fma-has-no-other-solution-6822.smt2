(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.21555165712121837628956200205720961093902587890625p495 {+ 970758362690212 495 (1.24343e+149)}
; Y = -1.84514405686767712921891870792023837566375732421875p990 {- 3806190459583660 990 (-1.93075e+298)}
; Z = -1.247865760426663417348436269094236195087432861328125p770 {- 1116288146295426 770 (-7.74934e+231)}
; 1.21555165712121837628956200205720961093902587890625p495 x -1.84514405686767712921891870792023837566375732421875p990 -1.247865760426663417348436269094236195087432861328125p770 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111101110 #b0011011100101110011001001011010111101111001010100100)))
(assert (= y (fp #b1 #b11111011101 #b1101100001011011010111000110010010100111110010101100)))
(assert (= z (fp #b1 #b11100000001 #b0011111101110100001000010110011011010100101010000010)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
