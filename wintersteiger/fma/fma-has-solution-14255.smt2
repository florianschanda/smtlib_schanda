(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.593726926196129323187733461963944137096405029296875p-339 {+ 2673908363576718 -339 (1.42313e-102)}
; Y = -1.3324734304543834895184772904030978679656982421875p-164 {- 1497327217504952 -164 (-5.69822e-050)}
; Z = 1.9962245884440161791673062907648272812366485595703125p-624 {+ 4486596685293797 -624 (2.86743e-188)}
; 1.593726926196129323187733461963944137096405029296875p-339 x -1.3324734304543834895184772904030978679656982421875p-164 1.9962245884440161791673062907648272812366485595703125p-624 == -1.0617993922780382121118236682377755641937255859375p-502
; [HW: -1.0617993922780382121118236682377755641937255859375p-502] 

; mpf : - 278319720035096 -502
; mpfd: - 278319720035096 -502 (-8.10932e-152) class: Neg. norm. non-zero
; hwf : - 278319720035096 -502 (-8.10932e-152) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010101100 #b1001011111111110011111001110001011000100010110001110)))
(assert (= y (fp #b1 #b01101011011 #b0101010100011100111110101000111010010111001010111000)))
(assert (= z (fp #b0 #b00110001111 #b1111111100001000100100110001101011010110100011100101)))
(assert (= r (fp #b1 #b01000001001 #b0000111111010010000101011100000010111111001100011000)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
