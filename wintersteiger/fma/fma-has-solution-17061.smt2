(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7962871458234055399572071110014803707599639892578125p596 {+ 3586158493210205 596 (4.65858e+179)}
; Y = 1.826861023507884596028816304169595241546630859375p327 {+ 3723850997357296 327 (4.99475e+098)}
; Z = 1.429717730928059093997717354795895516872406005859375p34 {+ 1935276612882102 34 (2.45624e+010)}
; 1.7962871458234055399572071110014803707599639892578125p596 x 1.826861023507884596028816304169595241546630859375p327 1.429717730928059093997717354795895516872406005859375p34 == 1.6407834868665016614386331639252603054046630859375p924
; [HW: 1.6407834868665016614386331639252603054046630859375p924] 

; mpf : + 2885832272677144 924
; mpfd: + 2885832272677144 924 (2.32684e+278) class: Pos. norm. non-zero
; hwf : + 2885832272677144 924 (2.32684e+278) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010011 #b1100101111011001011110010111000110001001011001011101)))
(assert (= y (fp #b0 #b10101000110 #b1101001110101101001010011111111001001101101011110000)))
(assert (= z (fp #b0 #b10000100001 #b0110111000000001111110110011000011011000111010110110)))
(assert (= r (fp #b0 #b11110011011 #b1010010000001010011000101111011111101000100100011000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
