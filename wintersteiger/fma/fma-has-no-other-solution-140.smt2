(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3865775083611351359280661199591122567653656005859375p441 {+ 1740990322605023 441 (7.87358e+132)}
; Y = -1.6334437633404996770281059070839546620845794677734375p140 {- 2852777096540439 140 (-2.27669e+042)}
; Z = 1.120197205046922217519522746442817151546478271484375p772 {+ 541320087860294 772 (2.7826e+232)}
; 1.3865775083611351359280661199591122567653656005859375p441 x -1.6334437633404996770281059070839546620845794677734375p140 1.120197205046922217519522746442817151546478271484375p772 == 1.1201972050469219954749178214115090668201446533203125p772
; [HW: 1.1201972050469219954749178214115090668201446533203125p772] 

; mpf : + 541320087860293 772
; mpfd: + 541320087860293 772 (2.7826e+232) class: Pos. norm. non-zero
; hwf : + 541320087860293 772 (2.7826e+232) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111000 #b0110001011110110101111100101101111000111101111011111)))
(assert (= y (fp #b1 #b10010001011 #b1010001000101001010111101101011101100111000100010111)))
(assert (= z (fp #b0 #b11100000011 #b0001111011000101001111100111100010111111010001000110)))
(assert (= r (fp #b0 #b11100000011 #b0001111011000101001111100111100010111111010001000101)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
