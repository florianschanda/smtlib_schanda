(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.71245816208401269165051417076028883457183837890625p616 {- 3208626313278628 616 (-4.6569e+185)}
; Y = 1.1295086892029189140629341636667959392070770263671875p-585 {+ 583255284435507 -585 (8.91953e-177)}
; Z = -1.2544404287647079598855270887725055217742919921875p-695 {- 1145897820172728 -695 (-7.63138e-210)}
; -1.71245816208401269165051417076028883457183837890625p616 x 1.1295086892029189140629341636667959392070770263671875p-585 -1.2544404287647079598855270887725055217742919921875p-695 == -1.93423637397035275142798127490095794200897216796875p31
; [HW: -1.93423637397035275142798127490095794200897216796875p31] 

; mpf : - 4207426585688844 31
; mpfd: - 4207426585688844 31 (-4.15374e+009) class: Neg. norm. non-zero
; hwf : - 4207426585688844 31 (-4.15374e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001100111 #b1011011001100011101010000111100111101011010010100100)))
(assert (= y (fp #b0 #b00110110110 #b0010000100100111011110110100000010101100101000110011)))
(assert (= z (fp #b1 #b00101001000 #b0100000100100011000000100000100001010011000110111000)))
(assert (= r (fp #b1 #b10000011110 #b1110111100101010000111010111000011101111101100001100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
