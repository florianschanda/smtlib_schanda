(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.302033474502858556576256887638010084629058837890625p22 {- 1360237843224490 22 (-5.46112e+006)}
; Y = 1.7755860950892727867511666772770695388317108154296875p809 {+ 3492929248837787 809 (6.06189e+243)}
; Z = 1.1833741043537300274834933588863350450992584228515625p591 {+ 825843548036857 591 (9.59068e+177)}
; -1.302033474502858556576256887638010084629058837890625p22 x 1.7755860950892727867511666772770695388317108154296875p809 1.1833741043537300274834933588863350450992584228515625p591 == -1.155936266334024242752320787985809147357940673828125p832
; [HW: -1.155936266334024242752320787985809147357940673828125p832] 

; mpf : - 702274510955458 832
; mpfd: - 702274510955458 832 (-3.31047e+250) class: Neg. norm. non-zero
; hwf : - 702274510955458 832 (-3.31047e+250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010101 #b0100110101010010000100001101011101001001011110101010)))
(assert (= y (fp #b0 #b11100101000 #b1100011010001100110011110111000110100100000010011011)))
(assert (= z (fp #b0 #b11001001110 #b0010111011110001100110101111010100100001111011111001)))
(assert (= r (fp #b1 #b11100111111 #b0010011111101011011100000110110000101010001111000010)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
