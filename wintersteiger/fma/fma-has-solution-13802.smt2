(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.03559645075774664491063958848826587200164794921875p784 {- 160312162368300 784 (-1.05368e+236)}
; Y = 1.053590565453857319511143941781483590602874755859375p-645 {+ 241350450608566 -645 (7.21647e-195)}
; Z = 1.05453571195404460780764566152356564998626708984375p388 {+ 245607012034620 388 (6.64813e+116)}
; -1.03559645075774664491063958848826587200164794921875p784 x 1.053590565453857319511143941781483590602874755859375p-645 1.05453571195404460780764566152356564998626708984375p388 == 1.05453571195404460780764566152356564998626708984375p388
; [HW: 1.05453571195404460780764566152356564998626708984375p388] 

; mpf : + 245607012034620 388
; mpfd: + 245607012034620 388 (6.64813e+116) class: Pos. norm. non-zero
; hwf : + 245607012034620 388 (6.64813e+116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001111 #b0000100100011100110110010101011111011011101100101100)))
(assert (= y (fp #b0 #b00101111010 #b0000110110111000000111000111110111111111100110110110)))
(assert (= z (fp #b0 #b10110000011 #b0000110111110110000011010110101101001110100000111100)))
(assert (= r (fp #b0 #b10110000011 #b0000110111110110000011010110101101001110100000111100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
