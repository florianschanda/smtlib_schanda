(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.132794436882450295200897016911767423152923583984375p-625 {- 598052976460678 -625 (-8.13587e-189)}
; Y = -1.4224010708203549402384169297874905169010162353515625p-185 {- 1902325305147449 -185 (-2.9005e-056)}
; Z = 1.6765031672667560780354278904269449412822723388671875p-490 {+ 3046699412017523 -490 (5.24453e-148)}
; -1.132794436882450295200897016911767423152923583984375p-625 x -1.4224010708203549402384169297874905169010162353515625p-185 1.6765031672667560780354278904269449412822723388671875p-490 == 1.6765031672667560780354278904269449412822723388671875p-490
; [HW: 1.6765031672667560780354278904269449412822723388671875p-490] 

; mpf : + 3046699412017523 -490
; mpfd: + 3046699412017523 -490 (5.24453e-148) class: Pos. norm. non-zero
; hwf : + 3046699412017523 -490 (5.24453e-148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110001110 #b0010000111111110110100001111001110000000001110000110)))
(assert (= y (fp #b1 #b01101000110 #b0110110000100010011110100000000011111000000000111001)))
(assert (= z (fp #b0 #b01000010101 #b1010110100101111010011111100001100001101000101110011)))
(assert (= r (fp #b0 #b01000010101 #b1010110100101111010011111100001100001101000101110011)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
