(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.896785303749663142980352859012782573699951171875p498 {+ 4038761959798320 498 (1.55223e+150)}
; Y = 1.331652760572582305798050583689473569393157958984375p927 {+ 1493631248931078 927 (1.51077e+279)}
; Z = 1.11560647707902393932499762740917503833770751953125p990 {+ 520645287094708 990 (1.16737e+298)}
; 1.896785303749663142980352859012782573699951171875p498 x 1.331652760572582305798050583689473569393157958984375p927 1.11560647707902393932499762740917503833770751953125p990 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110001 #b1110010110010011101110001011111100100011011000110000)))
(assert (= y (fp #b0 #b11110011110 #b0101010011100111001100100000000001001001100100000110)))
(assert (= z (fp #b0 #b11111011101 #b0001110110011000011000101101011001000010100110110100)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
