(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7365902405390774010385257497546263039112091064453125p-57 {+ 3317307532816533 -57 (1.205e-017)}
; Y = -zero {- 0 -1023 (-0)}
; Z = 1.1791673358598677712194557898328639566898345947265625p352 {+ 806897947015465 352 (1.08177e+106)}
; 1.7365902405390774010385257497546263039112091064453125p-57 x -zero 1.1791673358598677712194557898328639566898345947265625p352 == 1.1791673358598677712194557898328639566898345947265625p352
; [HW: 1.1791673358598677712194557898328639566898345947265625p352] 

; mpf : + 806897947015465 352
; mpfd: + 806897947015465 352 (1.08177e+106) class: Pos. norm. non-zero
; hwf : + 806897947015465 352 (1.08177e+106) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111000110 #b1011110010010001001011011001000110101011000010010101)))
(assert (= y (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= z (fp #b0 #b10101011111 #b0010110111011101111010010001100000000111100100101001)))
(assert (= r (fp #b0 #b10101011111 #b0010110111011101111010010001100000000111100100101001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
