(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.333367518681150887260855597560293972492218017578125p-950 {- 1501353832909858 -950 (-1.40105e-286)}
; Y = -1.5161376662991603581076560658402740955352783203125p339 {- 2324477401616776 339 (-1.69788e+102)}
; Z = 1.0800571478637677191869670423329807817935943603515625p-888 {+ 360545341287609 -888 (5.23372e-268)}
; -1.333367518681150887260855597560293972492218017578125p-950 x -1.5161376662991603581076560658402740955352783203125p339 1.0800571478637677191869670423329807817935943603515625p-888 == 1.010784359046171143603487507789395749568939208984375p-610
; [HW: 1.010784359046171143603487507789395749568939208984375p-610] 

; mpf : + 48568435381766 -610
; mpfd: + 48568435381766 -610 (2.37882e-184) class: Pos. norm. non-zero
; hwf : + 48568435381766 -610 (2.37882e-184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001001001 #b0101010101010111100100101101111001001000110000100010)))
(assert (= y (fp #b1 #b10101010010 #b1000010000100001100110010001110011111101000110001000)))
(assert (= z (fp #b0 #b00010000111 #b0001010001111110101000000000111111100010110010111001)))
(assert (= r (fp #b0 #b00110011101 #b0000001011000010110000111000010101101001011000000110)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
