(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5632434698294226382841998201911337673664093017578125p-145 {+ 2536623080842653 -145 (3.50491e-044)}
; Y = -1.4920105316848630838677536303293891251087188720703125p870 {- 2215818447158309 870 (-1.17454e+262)}
; Z = 1.2443344475797075698864091464201919734477996826171875p252 {+ 1100384527073747 252 (9.00526e+075)}
; 1.5632434698294226382841998201911337673664093017578125p-145 x -1.4920105316848630838677536303293891251087188720703125p870 1.2443344475797075698864091464201919734477996826171875p252 == -1.1661878602865434206847794484929181635379791259765625p726
; [HW: -1.1661878602865434206847794484929181635379791259765625p726] 

; mpf : - 748443585659977 726
; mpfd: - 748443585659977 726 (-4.11666e+218) class: Neg. norm. non-zero
; hwf : - 748443585659977 726 (-4.11666e+218) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101110 #b1001000000110000101110010101101010011010010110011101)))
(assert (= y (fp #b1 #b11101100101 #b0111110111110100011001101111011011011111110000100101)))
(assert (= z (fp #b0 #b10011111011 #b0011111010001100101100111100110110100100000111010011)))
(assert (= r (fp #b1 #b11011010101 #b0010101010001011010010011010000011101100010001001001)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
