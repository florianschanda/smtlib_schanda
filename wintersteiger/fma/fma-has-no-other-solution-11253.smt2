(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.741774738704169767089524611947126686573028564453125p-402 {- 3340656436820946 -402 (-1.6863e-121)}
; Y = 1.137108710678449430275804843404330313205718994140625p804 {+ 617482738320714 804 (1.21316e+242)}
; Z = -1.3711176968110259100086523176287300884723663330078125p0 {- 1671365521068733 0 (-1.37112)}
; -1.741774738704169767089524611947126686573028564453125p-402 x 1.137108710678449430275804843404330313205718994140625p804 -1.3711176968110259100086523176287300884723663330078125p0 == -1.9805872274201916649616350696305744349956512451171875p402
; [HW: -1.9805872274201916649616350696305744349956512451171875p402] 

; mpf : - 4416172272013843 402
; mpfd: - 4416172272013843 402 (-2.04575e+121) class: Neg. norm. non-zero
; hwf : - 4416172272013843 402 (-2.04575e+121) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101101 #b1011110111100100111100110000001110111011101111010010)))
(assert (= y (fp #b0 #b11100100011 #b0010001100011001100011100111010001011100010101001010)))
(assert (= z (fp #b1 #b01111111111 #b0101111100000001100100011100001011000101001010111101)))
(assert (= r (fp #b1 #b10110010001 #b1111101100000111110000111011100010100101001000010011)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
