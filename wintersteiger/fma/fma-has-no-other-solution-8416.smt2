(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.46083378328026025627650597016327083110809326171875p886 {- 2075410854660716 886 (-7.53663e+266)}
; Y = -1.7428263012007743082421029612305574119091033935546875p-57 {- 3345392253288811 -57 (-1.20933e-017)}
; Z = -1.5494194613364287160806043175398372113704681396484375p528 {- 2474365281344839 528 (-1.36147e+159)}
; -1.46083378328026025627650597016327083110809326171875p886 x -1.7428263012007743082421029612305574119091033935546875p-57 -1.5494194613364287160806043175398372113704681396484375p528 == 1.272989769591734710019181875395588576793670654296875p830
; [HW: 1.272989769591734710019181875395588576793670654296875p830] 

; mpf : + 1229436624609294 830
; mpfd: + 1229436624609294 830 (9.11426e+249) class: Pos. norm. non-zero
; hwf : + 1229436624609294 830 (9.11426e+249) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110101 #b0111010111111001001100111110110000010100101001101100)))
(assert (= y (fp #b1 #b01111000110 #b1011111000101001110111010100111001000100000101101011)))
(assert (= z (fp #b1 #b11000001111 #b1000110010100110110000001111101000111001110101000111)))
(assert (= r (fp #b0 #b11100111101 #b0100010111100010101010000101010010001010000000001110)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
