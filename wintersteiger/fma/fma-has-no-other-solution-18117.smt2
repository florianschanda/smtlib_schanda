(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9286831243432411842064766460680402815341949462890625p-718 {- 4182416972737489 -718 (-1.3987e-216)}
; Y = -1.6334710757272390413419316246290691196918487548828125p224 {- 2852900100595181 224 (-4.40383e+067)}
; Z = 1.3732574353761821672748055789270438253879547119140625p-300 {+ 1681002046873441 -300 (6.74145e-091)}
; -1.9286831243432411842064766460680402815341949462890625p-718 x -1.6334710757272390413419316246290691196918487548828125p224 1.3732574353761821672748055789270438253879547119140625p-300 == 1.3732574353761821672748055789270438253879547119140625p-300
; [HW: 1.3732574353761821672748055789270438253879547119140625p-300] 

; mpf : + 1681002046873441 -300
; mpfd: + 1681002046873441 -300 (6.74145e-091) class: Pos. norm. non-zero
; hwf : + 1681002046873441 -300 (6.74145e-091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110001 #b1110110110111110001011010101111101100110101111010001)))
(assert (= y (fp #b1 #b10011011111 #b1010001000101011001010010001000100110101110111101101)))
(assert (= z (fp #b0 #b01011010011 #b0101111110001101110011001001110111101101111101100001)))
(assert (= r (fp #b0 #b01011010011 #b0101111110001101110011001001110111101101111101100001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
