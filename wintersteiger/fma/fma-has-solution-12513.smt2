(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.313551468459680737765893354662694036960601806640625p861 {- 1412110276516490 861 (-2.01964e+259)}
; Y = -1.471469205900322041458139210590161383152008056640625p-290 {- 2123308540009354 -290 (-7.39695e-088)}
; Z = -1.01823083601795172370430009323172271251678466796875p-219 {- 82104386297100 -219 (-1.20858e-066)}
; -1.313551468459680737765893354662694036960601806640625p861 x -1.471469205900322041458139210590161383152008056640625p-290 -1.01823083601795172370430009323172271251678466796875p-219 == 1.932850536203568392323859370662830770015716552734375p571
; [HW: 1.932850536203568392323859370662830770015716552734375p571] 

; mpf : + 4201185327238758 571
; mpfd: + 4201185327238758 571 (1.49391e+172) class: Pos. norm. non-zero
; hwf : + 4201185327238758 571 (1.49391e+172) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101011100 #b0101000001000100111010001011011010100101101010001010)))
(assert (= y (fp #b1 #b01011011101 #b0111100010110010001101001011010001101001101110001010)))
(assert (= z (fp #b1 #b01100100100 #b0000010010101010110001101010110001111001110100001100)))
(assert (= r (fp #b0 #b11000111010 #b1110111011001111010010101111000100001100111001100110)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
