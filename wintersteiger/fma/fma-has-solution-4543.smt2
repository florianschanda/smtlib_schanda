(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.862217183969220091199758826405741274356842041015625p-266 {+ 3883080988436218 -266 (1.57055e-080)}
; Y = -1.0047801682959356384117199922911822795867919921875p63 {- 21527964156344 63 (-9.26746e+018)}
; Z = +zero {+ 0 -1023 (0)}
; 1.862217183969220091199758826405741274356842041015625p-266 x -1.0047801682959356384117199922911822795867919921875p63 +zero == -1.8711188955121762500510840254719369113445281982421875p-203
; [HW: -1.8711188955121762500510840254719369113445281982421875p-203] 

; mpf : - 3923170733224035 -203
; mpfd: - 3923170733224035 -203 (-1.4555e-061) class: Neg. norm. non-zero
; hwf : - 3923170733224035 -203 (-1.4555e-061) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110101 #b1101110010111010010000111110111100110010011011111010)))
(assert (= y (fp #b1 #b10000111110 #b0000000100111001010001011110101010000000000110111000)))
(assert (= z (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)))
(assert (= r (fp #b1 #b01100110100 #b1101111100000001101001011101111100100111000001100011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
