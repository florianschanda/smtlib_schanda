(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2753265278783068037427028684760443866252899169921875p887 {- 1239960448357955 887 (-1.31591e+267)}
; Y = -1.3359850030349160743270431339624337852001190185546875p-748 {- 1513141934470123 -748 (-9.02329e-226)}
; Z = 1.5653239938422720545219135601655580103397369384765625p601 {+ 2545992928011657 601 (1.29907e+181)}
; -1.2753265278783068037427028684760443866252899169921875p887 x -1.3359850030349160743270431339624337852001190185546875p-748 1.5653239938422720545219135601655580103397369384765625p601 == 1.5653239938422720545219135601655580103397369384765625p601
; [HW: 1.5653239938422720545219135601655580103397369384765625p601] 

; mpf : + 2545992928011657 601
; mpfd: + 2545992928011657 601 (1.29907e+181) class: Pos. norm. non-zero
; hwf : + 2545992928011657 601 (1.29907e+181) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110110 #b0100011001111011110011001010000011110101011001000011)))
(assert (= y (fp #b1 #b00100010011 #b0101011000000011000111001111011111111011001111101011)))
(assert (= z (fp #b0 #b11001011000 #b1001000010111001000100101100000100110010010110001001)))
(assert (= r (fp #b0 #b11001011000 #b1001000010111001000100101100000100110010010110001001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
