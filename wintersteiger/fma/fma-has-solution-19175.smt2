(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.879113264218723156062651469255797564983367919921875p815 {- 3959174169151902 815 (-4.10582e+245)}
; Y = 1.3123287770278249109168200448038987815380096435546875p-221 {+ 1406603763839595 -221 (3.89416e-067)}
; Z = -1.0408743764456642733051694449386559426784515380859375p-159 {- 184081826529695 -159 (-1.42439e-048)}
; -1.879113264218723156062651469255797564983367919921875p815 x 1.3123287770278249109168200448038987815380096435546875p-221 -1.0408743764456642733051694449386559426784515380859375p-159 == -1.2330072059644605619865842527360655367374420166015625p595
; [HW: -1.2330072059644605619865842527360655367374420166015625p595] 

; mpf : - 1049371165956185 595
; mpfd: - 1049371165956185 595 (-1.59887e+179) class: Neg. norm. non-zero
; hwf : - 1049371165956185 595 (-1.59887e+179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101110 #b1110000100001101100100010001111101001100100110011110)))
(assert (= y (fp #b0 #b01100100010 #b0100111111110100110001110101101011101111001001101011)))
(assert (= z (fp #b1 #b01101100000 #b0000101001110110101111100011111000010100000110011111)))
(assert (= r (fp #b1 #b11001010010 #b0011101110100110010111000011100101011001100001011001)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
