(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6105843993909745304193847914575599133968353271484375p-148 {+ 2749827673575431 -148 (4.51382e-045)}
; Y = -1.8557562618564629186579395536682568490505218505859375p930 {- 3853983582016735 930 (-1.68429e+280)}
; Z = -1.014508689696147047953900255379267036914825439453125p-357 {- 65341329509202 -357 (-3.45579e-108)}
; 1.6105843993909745304193847914575599133968353271484375p-148 x -1.8557562618564629186579395536682568490505218505859375p930 -1.014508689696147047953900255379267036914825439453125p-357 == -1.4944260422090656081905990504310466349124908447265625p783
; [HW: -1.4944260422090656081905990504310466349124908447265625p783] 

; mpf : - 2226696939455017 783
; mpfd: - 2226696939455017 783 (-7.60258e+235) class: Neg. norm. non-zero
; hwf : - 2226696939455017 783 (-7.60258e+235) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101101011 #b1001110001001111010000100101101011010101000000000111)))
(assert (= y (fp #b1 #b11110100001 #b1101101100010010110101111010011000000101010011011111)))
(assert (= z (fp #b1 #b01010011010 #b0000001110110110110101110110101111000000101101010010)))
(assert (= r (fp #b1 #b11100001110 #b0111111010010010101101001000000110010100001000101001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
