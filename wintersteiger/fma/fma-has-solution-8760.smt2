(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.443218951075813993867313911323435604572296142578125p943 {+ 1996080702908578 943 (1.07305e+284)}
; Y = -1.4623073565048503308361205199616961181163787841796875p-439 {- 2082047238485883 -439 (-1.03008e-132)}
; Z = -1.7217408251589898515732102168840356171131134033203125p-817 {- 3250431711244101 -817 (-1.96998e-246)}
; 1.443218951075813993867313911323435604572296142578125p943 x -1.4623073565048503308361205199616961181163787841796875p-439 -1.7217408251589898515732102168840356171131134033203125p-817 == -1.0552148446026883288340059152687899768352508544921875p505
; [HW: -1.0552148446026883288340059152687899768352508544921875p505] 

; mpf : - 248665553577987 505
; mpfd: - 248665553577987 505 (-1.10532e+152) class: Neg. norm. non-zero
; hwf : - 248665553577987 505 (-1.10532e+152) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110101110 #b0111000101110110110011000001001111010110100010100010)))
(assert (= y (fp #b1 #b01001001000 #b0111011001011001110001100110000011100011011101111011)))
(assert (= z (fp #b1 #b00011001110 #b1011100011000100000000011011100000111110111101000101)))
(assert (= r (fp #b1 #b10111111000 #b0000111000100010100011110101111111010010100000000011)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
