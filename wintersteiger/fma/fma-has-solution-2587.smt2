(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.382687182464212849453133458155207335948944091796875p-358 {+ 1723469852345294 -358 (2.35497e-108)}
; Y = -1.022123917412203208954224464832805097103118896484375p316 {- 99637266213574 316 (-1.36453e+095)}
; Z = -1.263978949933179496412094522383995354175567626953125p255 {- 1188855500552722 255 (-7.31794e+076)}
; 1.382687182464212849453133458155207335948944091796875p-358 x -1.022123917412203208954224464832805097103118896484375p316 -1.263978949933179496412094522383995354175567626953125p255 == -1.2639789499331797184566994474153034389019012451171875p255
; [HW: -1.2639789499331797184566994474153034389019012451171875p255] 

; mpf : - 1188855500552723 255
; mpfd: - 1188855500552723 255 (-7.31794e+076) class: Neg. norm. non-zero
; hwf : - 1188855500552723 255 (-7.31794e+076) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011001 #b0110000111110111110010011000010101001000001111001110)))
(assert (= y (fp #b1 #b10100111011 #b0000010110101001111010011011110110111110101011000110)))
(assert (= z (fp #b1 #b10011111110 #b0100001110010100000111111101110011001011101000010010)))
(assert (= r (fp #b1 #b10011111110 #b0100001110010100000111111101110011001011101000010011)))
(assert (= (fp.fma roundTowardNegative x y z) r))
(check-sat)
(exit)
