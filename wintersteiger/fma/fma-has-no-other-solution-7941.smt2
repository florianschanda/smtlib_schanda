(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.125224645363711584167276669177226722240447998046875p-926 {+ 563961666197614 -926 (1.98364e-279)}
; Y = -1.9397154003951315726084203561185859143733978271484375p882 {- 4232101927053831 882 (-6.25452e+265)}
; Z = -1.6998252976397589808499333230429328978061676025390625p-571 {- 3151732949674865 -571 (-2.19926e-172)}
; 1.125224645363711584167276669177226722240447998046875p-926 x -1.9397154003951315726084203561185859143733978271484375p882 -1.6998252976397589808499333230429328978061676025390625p-571 == -1.0913077867580709412465012064785696566104888916015625p-43
; [HW: -1.0913077867580709412465012064785696566104888916015625p-43] 

; mpf : - 411213714419673 -43
; mpfd: - 411213714419673 -43 (-1.24067e-013) class: Neg. norm. non-zero
; hwf : - 411213714419673 -43 (-1.24067e-013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001100001 #b0010000000001110101110001110110001111101100001101110)))
(assert (= y (fp #b1 #b11101110001 #b1111000010010001001100000100000000111110101000000111)))
(assert (= z (fp #b1 #b00111000100 #b1011001100100111110000000010111001000110101101110001)))
(assert (= r (fp #b1 #b01111010100 #b0001011101011111111100100111010111111110111111011001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
