(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7461200242043088959320584763190709054470062255859375p610 {+ 3360225862980191 610 (7.41945e+183)}
; Y = 1.787091122439168788815777588752098381519317626953125p581 {+ 3544743285723666 581 (1.41441e+175)}
; Z = 1.5635275915785931122314877939061261713504791259765625p-785 {+ 2537902651446345 -785 (7.6835e-237)}
; 1.7461200242043088959320584763190709054470062255859375p610 x 1.787091122439168788815777588752098381519317626953125p581 1.5635275915785931122314877939061261713504791259765625p-785 == 1.9999999999999997779553950749686919152736663818359375p1023
; [HW: 1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : + 4503599627370495 1023
; mpfd: + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero
; hwf : + 4503599627370495 1023 (1.79769e+308) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001100001 #b1011111100000001101110001100111011011001001001011111)))
(assert (= y (fp #b0 #b11001000100 #b1100100101111110110011011100010111011001001000010010)))
(assert (= z (fp #b0 #b00011101110 #b1001000001000011010110000010000000111001010001001001)))
(assert (= r (fp #b0 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
