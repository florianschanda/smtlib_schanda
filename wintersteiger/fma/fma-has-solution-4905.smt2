(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8048875724928679087355476440279744565486907958984375p-335 {- 3624891371554023 -335 (-2.5787e-101)}
; Y = -1.0021046512191456034912562245153822004795074462890625p359 {- 9478506446289 359 (-1.17674e+108)}
; Z = -1.6944785736158447519983383244834840297698974609375p970 {- 3127653445353112 970 (-1.69095e+292)}
; -1.8048875724928679087355476440279744565486907958984375p-335 x -1.0021046512191456034912562245153822004795074462890625p359 -1.6944785736158447519983383244834840297698974609375p970 == -1.6944785736158447519983383244834840297698974609375p970
; [HW: -1.6944785736158447519983383244834840297698974609375p970] 

; mpf : - 3127653445353112 970
; mpfd: - 3127653445353112 970 (-1.69095e+292) class: Neg. norm. non-zero
; hwf : - 3127653445353112 970 (-1.69095e+292) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010110000 #b1100111000001101000111001010100011010000010011100111)))
(assert (= y (fp #b1 #b10101100110 #b0000000010001001111011100011000000100111110111010001)))
(assert (= z (fp #b1 #b11111001001 #b1011000111001001010110010000100101110011111010011000)))
(assert (= r (fp #b1 #b11111001001 #b1011000111001001010110010000100101110011111010011000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
