(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6309608833042295028548096524900756776332855224609375p-913 {+ 2841595198934287 -913 (2.35536e-275)}
; Y = -1.542085360388110615303958184085786342620849609375p737 {- 2441335427046896 737 (-1.11485e+222)}
; Z = 1.3398638141857268646361944774980656802654266357421875p-423 {+ 1530610546923555 -423 (6.18547e-128)}
; 1.6309608833042295028548096524900756776332855224609375p-913 x -1.542085360388110615303958184085786342620849609375p737 1.3398638141857268646361944774980656802654266357421875p-423 == -1.25754045075455689328691732953302562236785888671875p-175
; [HW: -1.25754045075455689328691732953302562236785888671875p-175] 

; mpf : - 1159859078051052 -175
; mpfd: - 1159859078051052 -175 (-2.62587e-053) class: Neg. norm. non-zero
; hwf : - 1159859078051052 -175 (-2.62587e-053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101110 #b1010000110000110101001110000011011011000110100001111)))
(assert (= y (fp #b1 #b11011100000 #b1000101011000110000110110010111010000001110111110000)))
(assert (= z (fp #b0 #b01001011000 #b0101011100000001010100001001111100000101100000100011)))
(assert (= r (fp #b1 #b01101010000 #b0100000111101110001010111100010101100011010011101100)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
