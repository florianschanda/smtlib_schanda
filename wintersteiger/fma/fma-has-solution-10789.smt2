(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7949337766722901488236630029859952628612518310546875p-290 {+ 3580063460405547 -290 (9.02297e-088)}
; Y = -1.3821130329209017073566201361245475709438323974609375p617 {- 1720884112675983 617 (-7.51711e+185)}
; Z = -1.1760142337378856058904830206301994621753692626953125p-784 {- 792697637473845 -784 (-1.15584e-236)}
; 1.7949337766722901488236630029859952628612518310546875p-290 x -1.3821130329209017073566201361245475709438323974609375p617 -1.1760142337378856058904830206301994621753692626953125p-784 == -1.24040068298435368632226527552120387554168701171875p328
; [HW: -1.24040068298435368632226527552120387554168701171875p328] 

; mpf : - 1082668426307948 328
; mpfd: - 1082668426307948 328 (-6.78267e+098) class: Neg. norm. non-zero
; hwf : - 1082668426307948 328 (-6.78267e+098) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011101 #b1100101110000000110001111010110101001011000100101011)))
(assert (= y (fp #b1 #b11001101000 #b0110000111010010001010001110001111000101010010001111)))
(assert (= z (fp #b1 #b00011101111 #b0010110100001111010001001101000110001000111000110101)))
(assert (= r (fp #b1 #b10101000111 #b0011110110001010111001100010111101011010100101101100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
