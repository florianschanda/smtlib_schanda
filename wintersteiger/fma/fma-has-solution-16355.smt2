(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.62452245337113243550675178994424641132354736328125p251 {- 2812599088286740 251 (-5.87834e+075)}
; Y = -1.8467239295154838085721848983666859567165374755859375p310 {- 3813305573451615 310 (-3.85213e+093)}
; Z = 1.88895090949130040058889790088869631290435791015625p-109 {+ 4003478984735684 -109 (2.91039e-033)}
; -1.62452245337113243550675178994424641132354736328125p251 x -1.8467239295154838085721848983666859567165374755859375p310 1.88895090949130040058889790088869631290435791015625p-109 == 1.5000222443378359304944069663179107010364532470703125p562
; [HW: 1.5000222443378359304944069663179107010364532470703125p562] 

; mpf : + 2251899993276837 562
; mpfd: + 2251899993276837 562 (2.26441e+169) class: Pos. norm. non-zero
; hwf : + 2251899993276837 562 (2.26441e+169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011111010 #b1001111111100000101101000001100011011000110000010100)))
(assert (= y (fp #b1 #b10100110101 #b1101100011000010111001100100001000000010011101011111)))
(assert (= z (fp #b0 #b01110010010 #b1110001110010010010010010110110000000011101111000100)))
(assert (= r (fp #b0 #b11000110001 #b1000000000000001011101010011001010110100000110100101)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
