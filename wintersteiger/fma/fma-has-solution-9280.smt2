(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.696386194585495221787141417735256254673004150390625p-900 {- 3136244606441194 -900 (-2.00691e-271)}
; Y = 1.3269763693849423447090885019861161708831787109375p198 {+ 1472570655320984 198 (5.33092e+059)}
; Z = -1.493967760604366201704351624357514083385467529296875p710 {- 2224633022590862 710 (-8.04708e+213)}
; -1.696386194585495221787141417735256254673004150390625p-900 x 1.3269763693849423447090885019861161708831787109375p198 -1.493967760604366201704351624357514083385467529296875p710 == -1.493967760604366201704351624357514083385467529296875p710
; [HW: -1.493967760604366201704351624357514083385467529296875p710] 

; mpf : - 2224633022590862 710
; mpfd: - 2224633022590862 710 (-8.04708e+213) class: Neg. norm. non-zero
; hwf : - 2224633022590862 710 (-8.04708e+213) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001111011 #b1011001001000110010111011001101100100001011011101010)))
(assert (= y (fp #b0 #b10011000101 #b0101001110110100101110010010110100010010101110011000)))
(assert (= z (fp #b1 #b11011000101 #b0111111001110100101010111101000100010010111110001110)))
(assert (= r (fp #b1 #b11011000101 #b0111111001110100101010111101000100010010111110001110)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
