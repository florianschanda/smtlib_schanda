(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2248166670448867865417241773684509098529815673828125p560 {+ 1012484257930029 560 (4.62241e+168)}
; Y = 1.6444322386408602998386641047545708715915679931640625p-743 {+ 2902264789808513 -743 (3.5541e-224)}
; Z = -1.6812465156105516062012839029193855822086334228515625p-812 {- 3068061553851129 -812 (-6.15566e-245)}
; 1.2248166670448867865417241773684509098529815673828125p560 x 1.6444322386408602998386641047545708715915679931640625p-743 -1.6812465156105516062012839029193855822086334228515625p-812 == 1.007064006856630111741424116189591586589813232421875p-182
; [HW: 1.007064006856630111741424116189591586589813232421875p-182] 

; mpf : + 31813458647262 -182
; mpfd: + 31813458647262 -182 (1.64285e-055) class: Pos. norm. non-zero
; hwf : + 31813458647262 -182 (1.64285e-055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101111 #b0011100110001101100101011100100010001101101100101101)))
(assert (= y (fp #b0 #b00100011000 #b1010010011111001100000101101110101110011010110000001)))
(assert (= z (fp #b1 #b00011010011 #b1010111001100110001010111111000100001111101011111001)))
(assert (= r (fp #b0 #b01101001001 #b0000000111001110111100100101111001101101100011011110)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
