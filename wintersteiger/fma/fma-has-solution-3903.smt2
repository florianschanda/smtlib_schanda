(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0788885503387104503048021797440014779567718505859375p-710 {+ 355282445909215 -710 (2.00299e-214)}
; Y = -1.164139925626149985049551105475984513759613037109375p813 {- 739220507886550 813 (-6.35904e+244)}
; Z = -1.6721534529953065995044880764908157289028167724609375p-170 {- 3027110040445455 -170 (-1.11732e-051)}
; 1.0788885503387104503048021797440014779567718505859375p-710 x -1.164139925626149985049551105475984513759613037109375p813 -1.6721534529953065995044880764908157289028167724609375p-170 == -1.25597723675021111233718329458497464656829833984375p103
; [HW: -1.25597723675021111233718329458497464656829833984375p103] 

; mpf : - 1152818988043580 103
; mpfd: - 1152818988043580 103 (-1.27371e+031) class: Neg. norm. non-zero
; hwf : - 1152818988043580 103 (-1.27371e+031) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111001 #b0001010000110010000010100011111110111011110011011111)))
(assert (= y (fp #b1 #b11100101100 #b0010101000000101000100101111110010001000001111010110)))
(assert (= z (fp #b1 #b01101010101 #b1010110000010010001111111010101010000010001000001111)))
(assert (= r (fp #b1 #b10001100110 #b0100000110000111101110010110010001011100110100111100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
