(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.291036849136115716163430988672189414501190185546875p-637 {- 1310713445320494 -637 (-2.26377e-192)}
; Y = -1.925505726538462969443799011060036718845367431640625p-189 {- 4168107245167882 -189 (-2.45401e-057)}
; Z = -1.681546690160922619128314181580208241939544677734375p327 {- 3069413419844326 327 (-4.59746e+098)}
; -1.291036849136115716163430988672189414501190185546875p-637 x -1.925505726538462969443799011060036718845367431640625p-189 -1.681546690160922619128314181580208241939544677734375p327 == -1.6815466901609223970837092565489001572132110595703125p327
; [HW: -1.6815466901609223970837092565489001572132110595703125p327] 

; mpf : - 3069413419844325 327
; mpfd: - 3069413419844325 327 (-4.59746e+098) class: Neg. norm. non-zero
; hwf : - 3069413419844325 327 (-4.59746e+098) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000010 #b0100101010000001011001000001010011111000011100101110)))
(assert (= y (fp #b1 #b01101000010 #b1110110011101101111100010111101110111110010100001010)))
(assert (= z (fp #b1 #b10101000110 #b1010111001111001110110000000100011110000001011100110)))
(assert (= r (fp #b1 #b10101000110 #b1010111001111001110110000000100011110000001011100101)))
(assert  (not (= (fp.fma roundTowardZero x y z) r)))
(check-sat)
(exit)
