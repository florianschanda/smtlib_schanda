(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1997424289408546993485060738748870790004730224609375p552 {- 899559928548111 552 (-1.76867e+166)}
; Y = 1.272646930605893178523047026828862726688385009765625p-531 {+ 1227892615080410 -531 (1.81042e-160)}
; Z = -1.9077497856623912841911305804387666285037994384765625p-603 {- 4088141596454793 -603 (-5.74691e-182)}
; -1.1997424289408546993485060738748870790004730224609375p552 x 1.272646930605893178523047026828862726688385009765625p-531 -1.9077497856623912841911305804387666285037994384765625p-603 == -1.52684851970923762820575575460679829120635986328125p21
; [HW: -1.52684851970923762820575575460679829120635986328125p21] 

; mpf : - 2372714797043220 21
; mpfd: - 2372714797043220 21 (-3.20203e+006) class: Neg. norm. non-zero
; hwf : - 2372714797043220 21 (-3.20203e+006) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100111 #b0011001100100010010100011101111111101100101100001111)))
(assert (= y (fp #b0 #b00111101100 #b0100010111001100001100000111001001001110100111011010)))
(assert (= z (fp #b1 #b00110100100 #b1110100001100010010010100011101001011110111110001001)))
(assert (= r (fp #b1 #b10000010100 #b1000011011011111100010110110101000011000111000010100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
