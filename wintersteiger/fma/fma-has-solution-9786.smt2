(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.708011878747065726003029340063221752643585205078125p477 {+ 3188602033299170 477 (6.66498e+143)}
; Y = 1.0349973965058414382411910992232151329517364501953125p515 {+ 157614261862645 515 (1.11016e+155)}
; Z = 1.2550209842213717603698341918061487376689910888671875p624 {+ 1148512409511027 624 (8.73712e+187)}
; 1.708011878747065726003029340063221752643585205078125p477 x 1.0349973965058414382411910992232151329517364501953125p515 1.2550209842213717603698341918061487376689910888671875p624 == 1.767787847704263892723020035191439092159271240234375p992
; [HW: 1.767787847704263892723020035191439092159271240234375p992] 

; mpf : + 3457809064820518 992
; mpfd: + 3457809064820518 992 (7.39922e+298) class: Pos. norm. non-zero
; hwf : + 3457809064820518 992 (7.39922e+298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011100 #b1011010101000000010001000011100001100101111011100010)))
(assert (= y (fp #b0 #b11000000010 #b0000100011110101100101101110000101110000000011110101)))
(assert (= z (fp #b0 #b11001101111 #b0100000101001001000011100010001100000110010001110011)))
(assert (= r (fp #b0 #b11111011111 #b1100010010001101101111101001000000100111111100100110)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
