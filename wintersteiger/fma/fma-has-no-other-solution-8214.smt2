(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7910446100824817250440901261754333972930908203125p-200 {- 3562548211200904 -200 (-1.11457e-060)}
; Y = -1.3972273117556335275679657570435665547847747802734375p-447 {- 1788952773204055 -447 (-3.84467e-135)}
; Z = -1.17881150231476450329637373215518891811370849609375p-774 {- 805295415194332 -774 (-1.18639e-233)}
; -1.7910446100824817250440901261754333972930908203125p-200 x -1.3972273117556335275679657570435665547847747802734375p-447 -1.17881150231476450329637373215518891811370849609375p-774 == 1.25124822288998149844019280862994492053985595703125p-646
; [HW: 1.25124822288998149844019280862994492053985595703125p-646] 

; mpf : + 1131521402984820 -646
; mpfd: + 1131521402984820 -646 (4.28515e-195) class: Pos. norm. non-zero
; hwf : + 1131521402984820 -646 (4.28515e-195) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100110111 #b1100101010000001111001100100100111111011001110001000)))
(assert (= y (fp #b1 #b01001000000 #b0110010110110000101100000110100100010001100001010111)))
(assert (= z (fp #b1 #b00011111001 #b0010110111000110100101110011001010010111001011011100)))
(assert (= r (fp #b0 #b00101111001 #b0100000001010001110011011011010001111101100101110100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
