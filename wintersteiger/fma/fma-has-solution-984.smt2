(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8948163335674461649205113644711673259735107421875p-840 {- 4029894506419384 -840 (-2.58447e-253)}
; Y = 1.6890100027806500548877011169679462909698486328125p-719 {+ 3103025191777480 -719 (6.12443e-217)}
; Z = 1.700077991481969252873795994673855602741241455078125p-954 {+ 3152870981568482 -954 (1.11649e-287)}
; -1.8948163335674461649205113644711673259735107421875p-840 x 1.6890100027806500548877011169679462909698486328125p-719 1.700077991481969252873795994673855602741241455078125p-954 == 1.700077991481969252873795994673855602741241455078125p-954
; [HW: 1.700077991481969252873795994673855602741241455078125p-954] 

; mpf : + 3152870981568482 -954
; mpfd: + 3152870981568482 -954 (1.11649e-287) class: Pos. norm. non-zero
; hwf : + 3152870981568482 -954 (1.11649e-287) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110111 #b1110010100010010101011101110100010011001010010111000)))
(assert (= y (fp #b0 #b00100110000 #b1011000001100010111101011010010010001111010011001000)))
(assert (= z (fp #b0 #b00001000101 #b1011001100111000010011111010111000010000011111100010)))
(assert (= r (fp #b0 #b00001000101 #b1011001100111000010011111010111000010000011111100010)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
