(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.618018998467702918020449942559935152530670166015625p-783 {+ 2783310131207034 -783 (3.18051e-236)}
; Y = -1.2588069536905799328252442137454636394977569580078125p570 {- 1165562900201789 570 (-4.86471e+171)}
; Z = 1.909869610542124451768586368416436016559600830078125p-788 {+ 4097688438993250 -788 (1.17319e-237)}
; 1.618018998467702918020449942559935152530670166015625p-783 x -1.2588069536905799328252442137454636394977569580078125p570 1.909869610542124451768586368416436016559600830078125p-788 == -1.018386783237306136840061299153603613376617431640625p-212
; [HW: -1.018386783237306136840061299153603613376617431640625p-212] 

; mpf : - 82806710136074 -212
; mpfd: - 82806710136074 -212 (-1.54723e-064) class: Neg. norm. non-zero
; hwf : - 82806710136074 -212 (-1.54723e-064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110000 #b1001111000110110011111100011101010111001101101111010)))
(assert (= y (fp #b1 #b11000111001 #b0100001001000001001011000010101000010100000100111101)))
(assert (= z (fp #b0 #b00011101011 #b1110100011101101001101101111110011100111000101100010)))
(assert (= r (fp #b1 #b01100101011 #b0000010010110100111111110000100010101110110100001010)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
