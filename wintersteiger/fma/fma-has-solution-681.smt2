(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3403848025435924906645368537283502519130706787109375p-693 {+ 1532956869897903 -693 (3.26169e-209)}
; Y = -1.434362164669898742630493870819918811321258544921875p782 {- 1956193282951198 782 (-3.64851e+235)}
; Z = 1.0792781072754322746476418615202419459819793701171875p-665 {+ 357036854384275 -665 (7.04995e-201)}
; 1.3403848025435924906645368537283502519130706787109375p-693 x -1.434362164669898742630493870819918811321258544921875p782 1.0792781072754322746476418615202419459819793701171875p-665 == -1.922597246867062015240890104905702173709869384765625p89
; [HW: -1.922597246867062015240890104905702173709869384765625p89] 

; mpf : - 4155008617203546 89
; mpfd: - 4155008617203546 89 (-1.19003e+027) class: Neg. norm. non-zero
; hwf : - 4155008617203546 89 (-1.19003e+027) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101001010 #b0101011100100011011101010101101011111010111010101111)))
(assert (= y (fp #b1 #b11100001101 #b0110111100110010010110111101101111100000100000011110)))
(assert (= z (fp #b0 #b00101100110 #b0001010001001011100100011110111000001001011010010011)))
(assert (= r (fp #b1 #b10001011000 #b1110110000101111010101010100101010101100011101011010)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
