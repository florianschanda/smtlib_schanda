(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8906773645878522938090782190556637942790985107421875p494 {- 4011254247265187 494 (-9.6702e+148)}
; Y = 1.821384527521875629219039183226414024829864501953125p-264 {+ 3699187052075410 -264 (6.14445e-080)}
; Z = -1.040242141195942604525725982966832816600799560546875p-494 {- 181234492094638 -494 (-2.03384e-149)}
; -1.8906773645878522938090782190556637942790985107421875p494 x 1.821384527521875629219039183226414024829864501953125p-264 -1.040242141195942604525725982966832816600799560546875p-494 == -1.721825249198075002965424573631025850772857666015625p231
; [HW: -1.721825249198075002965424573631025850772857666015625p231] 

; mpf : - 3250811923315066 231
; mpfd: - 3250811923315066 231 (-5.9418e+069) class: Neg. norm. non-zero
; hwf : - 3250811923315066 231 (-5.9418e+069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111101101 #b1110010000000011011011101000100000110001001110100011)))
(assert (= y (fp #b0 #b01011110111 #b1101001001000110010000011010001100100101100110010010)))
(assert (= z (fp #b1 #b01000010001 #b0000101001001101010011110001100001011011100010101110)))
(assert (= r (fp #b1 #b10011100110 #b1011100011001001100010100001111010111011100101111010)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
