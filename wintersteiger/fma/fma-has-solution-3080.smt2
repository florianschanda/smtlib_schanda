(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4149553053887746756345222820527851581573486328125p640 {- 1868792558724296 640 (-6.45565e+192)}
; Y = -1.9057637672932437045147935350541956722736358642578125p215 {- 4079197364867549 215 (-1.0035e+065)}
; Z = -1.7770394951805708050329712932580150663852691650390625p452 {- 3499474780947377 452 (-2.06659e+136)}
; -1.4149553053887746756345222820527851581573486328125p640 x -1.9057637672932437045147935350541956722736358642578125p215 -1.7770394951805708050329712932580150663852691650390625p452 == 1.34828527667463671235736910603009164333343505859375p856
; [HW: 1.34828527667463671235736910603009164333343505859375p856] 

; mpf : + 1568537442250524 856
; mpfd: + 1568537442250524 856 (6.47826e+257) class: Pos. norm. non-zero
; hwf : + 1568537442250524 856 (6.47826e+257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111111 #b0110101000111010100000101100100111110010010011001000)))
(assert (= y (fp #b1 #b10011010110 #b1110011111100000001000100101111001101101000111011101)))
(assert (= z (fp #b1 #b10111000011 #b1100011011101100000011110111001110000000001110110001)))
(assert (= r (fp #b0 #b11101010111 #b0101100100101001001110010101000011111110111100011100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
