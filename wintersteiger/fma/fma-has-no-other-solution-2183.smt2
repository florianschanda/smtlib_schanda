(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8117084923163548904057051913696341216564178466796875p576 {+ 3655610063529403 576 (4.48091e+173)}
; Y = -1.02512994075417029904429000453092157840728759765625p383 {- 113175191816324 383 (-2.01961e+115)}
; Z = 1.172044499243724668957611356745474040508270263671875p-461 {+ 774819542685182 -461 (1.96841e-139)}
; 1.8117084923163548904057051913696341216564178466796875p576 x -1.02512994075417029904429000453092157840728759765625p383 1.172044499243724668957611356745474040508270263671875p-461 == -1.857236619392092169533725609653629362583160400390625p959
; [HW: -1.857236619392092169533725609653629362583160400390625p959] 

; mpf : - 3860650519662570 959
; mpfd: - 3860650519662570 959 (-9.04968e+288) class: Neg. norm. non-zero
; hwf : - 3860650519662570 959 (-9.04968e+288) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111111 #b1100111111001100001000001011010001100010010110111011)))
(assert (= y (fp #b1 #b10101111110 #b0000011001101110111010100111000110110000100010000100)))
(assert (= z (fp #b0 #b01000110010 #b0010110000001011000110111011100110110101010111111110)))
(assert (= r (fp #b1 #b11110111110 #b1101101101110011110110111110110100111000111111101010)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
