(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9271135105249401764382355395355261862277984619140625p-766 {+ 4175348060530273 -766 (4.96513e-231)}
; Y = -1.2695989070401785259178950582281686365604400634765625p-1004 {- 1214165537285641 -1004 (-7.40544e-303)}
; Z = 1.8001660531809948739834226216771639883518218994140625p514 {+ 3603627538940449 514 (9.65451e+154)}
; 1.9271135105249401764382355395355261862277984619140625p-766 x -1.2695989070401785259178950582281686365604400634765625p-1004 1.8001660531809948739834226216771639883518218994140625p514 == 1.8001660531809948739834226216771639883518218994140625p514
; [HW: 1.8001660531809948739834226216771639883518218994140625p514] 

; mpf : + 3603627538940449 514
; mpfd: + 3603627538940449 514 (9.65451e+154) class: Pos. norm. non-zero
; hwf : + 3603627538940449 514 (9.65451e+154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000001 #b1110110101010111010011111001111101100010011001100001)))
(assert (= y (fp #b1 #b00000010011 #b0100010100000100011011110001100011000110011000001001)))
(assert (= z (fp #b0 #b11000000001 #b1100110011010111101011101011010111001000001000100001)))
(assert (= r (fp #b0 #b11000000001 #b1100110011010111101011101011010111001000001000100001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
