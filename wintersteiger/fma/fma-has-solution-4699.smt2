(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.56772534471151292478907635086216032505035400390625p-611 {+ 2556807650891556 -611 (1.84477e-184)}
; Y = 1.369153608346231454362396107171662151813507080078125p-570 {+ 1662520052990562 -570 (3.54287e-172)}
; Z = -0.122024859575873723116501423646695911884307861328125p-1022 {- 549551112115842 -1023 (-2.71514e-309)}
; 1.56772534471151292478907635086216032505035400390625p-611 x 1.369153608346231454362396107171662151813507080078125p-570 -0.122024859575873723116501423646695911884307861328125p-1022 == -0.122024859575873723116501423646695911884307861328125p-1022
; [HW: -0.122024859575873723116501423646695911884307861328125p-1022] 

; mpf : - 549551112115842 -1023
; mpfd: - 549551112115842 -1023 (-2.71514e-309) class: Neg. denorm.
; hwf : - 549551112115842 -1023 (-2.71514e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011100 #b1001000101010110011100101011110010100101011100100100)))
(assert (= y (fp #b0 #b00111000101 #b0101111010000000110110011101001100001100001001100010)))
(assert (= z (fp #b1 #b00000000000 #b0001111100111101000001010110110100101101011010000010)))
(assert (= r (fp #b1 #b00000000000 #b0001111100111101000001010110110100101101011010000010)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
