(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.619017359494006935705101568601094186305999755859375p787 {- 2787806349553078 787 (-1.31783e+237)}
; Y = -1.2738913261959849965165858520776964724063873291015625p-199 {- 1233496874596249 -199 (-1.58549e-060)}
; Z = 1.7677478551645873228181926606339402496814727783203125p-749 {+ 3457628954433733 -749 (5.96971e-226)}
; -1.619017359494006935705101568601094186305999755859375p787 x -1.2738913261959849965165858520776964724063873291015625p-199 1.7677478551645873228181926606339402496814727783203125p-749 == 1.03122608561007123029185095219872891902923583984375p589
; [HW: 1.03122608561007123029185095219872891902923583984375p589] 

; mpf : + 140629787517756 589
; mpfd: + 140629787517756 589 (2.0894e+177) class: Pos. norm. non-zero
; hwf : + 140629787517756 589 (2.0894e+177) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100010010 #b1001111001110111111010111111001010101110110110110110)))
(assert (= y (fp #b1 #b01100111000 #b0100011000011101101111011111000010101011011110011001)))
(assert (= z (fp #b0 #b00100010010 #b1100010010001011000111111001100110000001100011000101)))
(assert (= r (fp #b0 #b11001001100 #b0000011111111110011011101100100001111010001100111100)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
