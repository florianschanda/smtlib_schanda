(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8712017476708628915815779691911302506923675537109375p-902 {- 3923543866175023 -902 (-5.53432e-272)}
; Y = -1.2610380560012137696190848146216012537479400634765625p-708 {- 1175610891736585 -708 (-9.36464e-214)}
; Z = -1.5775523419289692039768624454154632985591888427734375p-771 {- 2601064511898263 -771 (-1.27016e-232)}
; -1.8712017476708628915815779691911302506923675537109375p-902 x -1.2610380560012137696190848146216012537479400634765625p-708 -1.5775523419289692039768624454154632985591888427734375p-771 == -1.5775523419289692039768624454154632985591888427734375p-771
; [HW: -1.5775523419289692039768624454154632985591888427734375p-771] 

; mpf : - 2601064511898263 -771
; mpfd: - 2601064511898263 -771 (-1.27016e-232) class: Neg. norm. non-zero
; hwf : - 2601064511898263 -771 (-1.27016e-232) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001111001 #b1101111100000111000100111110011001110110111000101111)))
(assert (= y (fp #b1 #b00100111011 #b0100001011010011011000111101100110001001011000001001)))
(assert (= z (fp #b1 #b00011111100 #b1001001111011010011110000110010001010000001010010111)))
(assert (= r (fp #b1 #b00011111100 #b1001001111011010011110000110010001010000001010010111)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
