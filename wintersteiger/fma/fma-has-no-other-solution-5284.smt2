(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4071774131170460275797040594625286757946014404296875p-401 {- 1833764045987611 -401 (-2.72471e-121)}
; Y = -1.1416118107047827923139493577764369547367095947265625p-660 {- 637762897921321 -660 (-2.38628e-199)}
; Z = 1.48929565949302311622659544809721410274505615234375p88 {+ 2203591749766780 88 (4.60915e+026)}
; -1.4071774131170460275797040594625286757946014404296875p-401 x -1.1416118107047827923139493577764369547367095947265625p-660 1.48929565949302311622659544809721410274505615234375p88 == 1.48929565949302311622659544809721410274505615234375p88
; [HW: 1.48929565949302311622659544809721410274505615234375p88] 

; mpf : + 2203591749766780 88
; mpfd: + 2203591749766780 88 (4.60915e+026) class: Pos. norm. non-zero
; hwf : + 2203591749766780 88 (4.60915e+026) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101110 #b0110100000111100110001110110100100000001111100011011)))
(assert (= y (fp #b1 #b00101101011 #b0010010001000000101010111110111110110100010100101001)))
(assert (= z (fp #b0 #b10001010111 #b0111110101000010011110101111011110011000111001111100)))
(assert (= r (fp #b0 #b10001010111 #b0111110101000010011110101111011110011000111001111100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
