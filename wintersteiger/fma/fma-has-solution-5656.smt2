(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1456758012941949953500397896277718245983123779296875p-336 {- 656065484425435 -336 (-8.18433e-102)}
; Y = -1.7233625745515259719553569084382615983486175537109375p-449 {- 3257735421204015 -449 (-1.18552e-135)}
; Z = -1.9969074505719301981798707856796681880950927734375p38 {- 4489672022918616 38 (-5.48906e+011)}
; -1.1456758012941949953500397896277718245983123779296875p-336 x -1.7233625745515259719553569084382615983486175537109375p-449 -1.9969074505719301981798707856796681880950927734375p38 == -1.9969074505719301981798707856796681880950927734375p38
; [HW: -1.9969074505719301981798707856796681880950927734375p38] 

; mpf : - 4489672022918616 38
; mpfd: - 4489672022918616 38 (-5.48906e+011) class: Neg. norm. non-zero
; hwf : - 4489672022918616 38 (-5.48906e+011) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101111 #b0010010101001011000000100110001001100000100011011011)))
(assert (= y (fp #b1 #b01000111110 #b1011100100101110010010100010100011011001011000101111)))
(assert (= z (fp #b1 #b10000100101 #b1111111100110101010100111010000101011000010111011000)))
(assert (= r (fp #b1 #b10000100101 #b1111111100110101010100111010000101011000010111011000)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
