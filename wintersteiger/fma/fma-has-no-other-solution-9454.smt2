(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8914452600646998181588287479826249182224273681640625p301 {- 4014712541048577 301 (-7.70588e+090)}
; Y = -1.4236399206984524656860457980656065046787261962890625p-880 {- 1907904588996817 -880 (-1.76605e-265)}
; Z = 1.008041098238802835140859315288253128528594970703125p-856 {+ 36213887031922 -856 (2.09798e-258)}
; -1.8914452600646998181588287479826249182224273681640625p301 x -1.4236399206984524656860457980656065046787261962890625p-880 1.008041098238802835140859315288253128528594970703125p-856 == 1.34636849002198655256279380409978330135345458984375p-578
; [HW: 1.34636849002198655256279380409978330135345458984375p-578] 

; mpf : + 1559905002595900 -578
; mpfd: + 1559905002595900 -578 (1.3609e-174) class: Pos. norm. non-zero
; hwf : + 1559905002595900 -578 (1.3609e-174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100101100 #b1110010000110101110000011010111000100110111100000001)))
(assert (= y (fp #b1 #b00010001111 #b0110110001110011101010100111010010101110000011010001)))
(assert (= z (fp #b0 #b00010100111 #b0000001000001110111110110011110111110101101001110010)))
(assert (= r (fp #b0 #b00110111101 #b0101100010101011100110101111100100000010011000111100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
