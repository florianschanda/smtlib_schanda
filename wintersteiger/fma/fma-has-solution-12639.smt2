(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.05468772062566973346520171617157757282257080078125p832 {+ 246291598231508 832 (3.02051e+250)}
; Y = -1.7649491148737812551416936912573873996734619140625p955 {- 3445024548702952 955 (-5.37499e+287)}
; Z = -1.34122655008818725264063687063753604888916015625p782 {- 1536747763826080 782 (-3.41161e+235)}
; 1.05468772062566973346520171617157757282257080078125p832 x -1.7649491148737812551416936912573873996734619140625p955 -1.34122655008818725264063687063753604888916015625p782 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111111 #b0000111000000000000000111011001110010100011111010100)))
(assert (= y (fp #b1 #b11110111010 #b1100001111010011101101001000011101111100101011101000)))
(assert (= z (fp #b1 #b11100001101 #b0101011101011010100111111000100100100111110110100000)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
