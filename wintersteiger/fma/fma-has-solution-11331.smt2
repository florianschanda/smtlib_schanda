(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6465588907702819465583843339118175208568572998046875p-650 {+ 2911842379546123 -650 (3.52436e-196)}
; Y = 1.4112290275340535483650228343321941792964935302734375p744 {+ 1852010895166295 744 (1.30591e+224)}
; Z = 1.031390079905053713815732407965697348117828369140625p967 {+ 141368352163530 967 (1.28656e+291)}
; 1.6465588907702819465583843339118175208568572998046875p-650 x 1.4112290275340535483650228343321941792964935302734375p744 1.031390079905053713815732407965697348117828369140625p967 == 1.031390079905053713815732407965697348117828369140625p967
; [HW: 1.031390079905053713815732407965697348117828369140625p967] 

; mpf : + 141368352163530 967
; mpfd: + 141368352163530 967 (1.28656e+291) class: Pos. norm. non-zero
; hwf : + 141368352163530 967 (1.28656e+291) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110101 #b1010010110000100111000100010101011001011111000001011)))
(assert (= y (fp #b0 #b11011100111 #b0110100101000110010011100011100001101100101101010111)))
(assert (= z (fp #b0 #b11111000110 #b0000100000001001001011100010011010011100011011001010)))
(assert (= r (fp #b0 #b11111000110 #b0000100000001001001011100010011010011100011011001010)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
