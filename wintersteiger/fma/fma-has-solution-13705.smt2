(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.980072105082295141897930079721845686435699462890625p-102 {+ 4413852367244842 -102 (3.905e-031)}
; Y = -1.3940253451181388033575103690964169800281524658203125p402 {- 1774532397448581 402 (-1.43989e+121)}
; Z = 1.4859656507267076097633662357111461460590362548828125p-381 {+ 2188594723527661 -381 (3.01704e-115)}
; 1.980072105082295141897930079721845686435699462890625p-102 x -1.3940253451181388033575103690964169800281524658203125p402 1.4859656507267076097633662357111461460590362548828125p-381 == -1.3801353498230730654228182174847461283206939697265625p301
; [HW: -1.3801353498230730654228182174847461283206939697265625p301] 

; mpf : - 1711977419813545 301
; mpfd: - 1711977419813545 301 (-5.62277e+090) class: Neg. norm. non-zero
; hwf : - 1711977419813545 301 (-5.62277e+090) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011001 #b1111101011100110000000010110011100001100111000101010)))
(assert (= y (fp #b1 #b10110010001 #b0110010011011110110110000101001100010011110110000101)))
(assert (= z (fp #b0 #b01010000010 #b0111110001101000001111101011000011011001101111101101)))
(assert (= r (fp #b1 #b10100101100 #b0110000101010000100011001101111110001011001010101001)))
(assert (= (fp.fma roundNearestTiesToEven x y z) r))
(check-sat)
(exit)
