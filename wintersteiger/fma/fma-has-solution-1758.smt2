(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.3261370378188084284687420222326181828975677490234375p968 {- 1468790641992503 968 (-3.30845e+291)}
; Y = -1.7206546048461832665310566881089471280574798583984375p-152 {- 3245539809848103 -152 (-3.01394e-046)}
; Z = -1.3163941408053572157399457864812575280666351318359375p-361 {- 1424912534633215 -361 (-2.80258e-109)}
; -1.3261370378188084284687420222326181828975677490234375p968 x -1.7206546048461832665310566881089471280574798583984375p-152 -1.3163941408053572157399457864812575280666351318359375p-361 == 1.140911900390004785066366821411065757274627685546875p817
; [HW: 1.140911900390004785066366821411065757274627685546875p817] 

; mpf : + 634610782088494 817
; mpfd: + 634610782088494 817 (9.97146e+245) class: Pos. norm. non-zero
; hwf : + 634610782088494 817 (9.97146e+245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111000111 #b0101001101111101101101111000011101110010001100110111)))
(assert (= y (fp #b1 #b01101100111 #b1011100001111100110100011111011110000110101100100111)))
(assert (= z (fp #b1 #b01010010110 #b0101000011111111001101001101011101100111101011111111)))
(assert (= r (fp #b0 #b11100110000 #b0010010000010010110011010110001111001010110100101110)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
