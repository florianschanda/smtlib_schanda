(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2845176809794394134911499349982477724552154541015625p-583 {+ 1281353722039321 -583 (4.05744e-176)}
; Y = -1.0057588034382785036058294281247071921825408935546875p964 {- 25935345018731 964 (-1.56823e+290)}
; Z = 1.6581477333799308215844803271465934813022613525390625p872 {+ 2964033886804593 872 (5.22131e+262)}
; 1.2845176809794394134911499349982477724552154541015625p-583 x -1.0057588034382785036058294281247071921825408935546875p964 1.6581477333799308215844803271465934813022613525390625p872 == 1.658147733379930599539875402115285396575927734375p872
; [HW: 1.658147733379930599539875402115285396575927734375p872] 

; mpf : + 2964033886804592 872
; mpfd: + 2964033886804592 872 (5.22131e+262) class: Pos. norm. non-zero
; hwf : + 2964033886804592 872 (5.22131e+262) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111000 #b0100100011010110001001101001011011110000110000011001)))
(assert (= y (fp #b1 #b11111000011 #b0000000101111001011010001011000001101110011101101011)))
(assert (= z (fp #b0 #b11101100111 #b1010100001111100010111101010111011001101101001110001)))
(assert (= r (fp #b0 #b11101100111 #b1010100001111100010111101010111011001101101001110000)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
