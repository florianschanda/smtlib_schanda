(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.680566929831790456972839820082299411296844482421875p-960 {- 3065000971591134 -960 (-1.72449e-289)}
; Y = 1.1917109651953154969561410325695760548114776611328125p-12 {+ 863389431416461 -12 (0.000290945)}
; Z = -1.8738470204229502602544243927695788443088531494140625p-672 {- 3935457115555617 -672 (-9.56262e-203)}
; -1.680566929831790456972839820082299411296844482421875p-960 x 1.1917109651953154969561410325695760548114776611328125p-12 -1.8738470204229502602544243927695788443088531494140625p-672 == -1.8738470204229502602544243927695788443088531494140625p-672
; [HW: -1.8738470204229502602544243927695788443088531494140625p-672] 

; mpf : - 3935457115555617 -672
; mpfd: - 3935457115555617 -672 (-9.56262e-203) class: Neg. norm. non-zero
; hwf : - 3935457115555617 -672 (-9.56262e-203) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111111 #b1010111000111001101000100110001001011101110111011110)))
(assert (= y (fp #b0 #b01111110011 #b0011000100010011111110000100010111001100011010001101)))
(assert (= z (fp #b1 #b00101011111 #b1101111110110100011100000011011001101100011100100001)))
(assert (= r (fp #b1 #b00101011111 #b1101111110110100011100000011011001101100011100100001)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
