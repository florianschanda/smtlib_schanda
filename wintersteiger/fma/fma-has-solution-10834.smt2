(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4759303428778334232873703513178043067455291748046875p645 {+ 2143399714838923 645 (2.15483e+194)}
; Y = -1.773423736253001425922093403642065823078155517578125p478 {- 3483190850388514 478 (-1.38405e+144)}
; Z = -1.4535919405590858044519109171233139932155609130859375p939 {- 2042796494480159 939 (-6.75474e+282)}
; 1.4759303428778334232873703513178043067455291748046875p645 x -1.773423736253001425922093403642065823078155517578125p478 -1.4535919405590858044519109171233139932155609130859375p939 == -1.9999999999999997779553950749686919152736663818359375p1023
; [HW: -1.9999999999999997779553950749686919152736663818359375p1023] 

; mpf : - 4503599627370495 1023
; mpfd: - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero
; hwf : - 4503599627370495 1023 (-1.79769e+308) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010000100 #b0111100111010110100100100010100111010101100110001011)))
(assert (= y (fp #b1 #b10111011101 #b1100010111111111000110010001010100101000001000100010)))
(assert (= z (fp #b1 #b11110101010 #b0111010000011110100110011111011001101110001100011111)))
(assert (= r (fp #b1 #b11111111110 #b1111111111111111111111111111111111111111111111111111)))
(assert (= (fp.fma roundTowardZero x y z) r))
(check-sat)
(exit)
