(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3243076693718018876921860282891429960727691650390625p211 {- 1460551898936241 211 (-4.35831e+063)}
; Y = -1.44650861623200999162008884013630449771881103515625p121 {- 2010896037680196 121 (-3.84548e+036)}
; Z = -1.9325898507593779473978656824328936636447906494140625p15 {- 4200011304369441 15 (-63327.1)}
; -1.3243076693718018876921860282891429960727691650390625p211 x -1.44650861623200999162008884013630449771881103515625p121 -1.9325898507593779473978656824328936636447906494140625p15 == 1.91562245428844324379724639584310352802276611328125p332
; [HW: 1.91562245428844324379724639584310352802276611328125p332] 

; mpf : + 4123596943945492 332
; mpfd: + 4123596943945492 332 (1.67598e+100) class: Pos. norm. non-zero
; hwf : + 4123596943945492 332 (1.67598e+100) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun z () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010010 #b0101001100000101110100111101000111001011001110110001)))
(assert (= y (fp #b1 #b10001111000 #b0111001001001110011000111000000000011001010001000100)))
(assert (= z (fp #b1 #b10000001110 #b1110111010111110001101010101110110010111110100100001)))
(assert (= r (fp #b0 #b10101001011 #b1110101001100110001110111011000010100110111100010100)))
(assert  (not (= (fp.fma roundNearestTiesToEven x y z) r)))
(check-sat)
(exit)
