(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6334088257257521892285012654610909521579742431640625p880 {- 2852619751511681 880 (-1.31671e+265)}
; Y = 1.2484801129125664420627117578987963497638702392578125p43 {+ 1119054943922013 43 (1.09817e+013)}
; -1.6334088257257521892285012654610909521579742431640625p880 % 1.2484801129125664420627117578987963497638702392578125p43 == -1.9089538228357252336309102247469127178192138671875p41
; [HW: -1.9089538228357252336309102247469127178192138671875p41] 

; mpf : - 4093564097819960 41
; mpfd: - 4093564097819960 41 (-4.19783e+012) class: Neg. norm. non-zero
; hwf : - 4093564097819960 41 (-4.19783e+012) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101111 #b1010001000100111000101001010111101111101011010000001)))
(assert (= y (fp #b0 #b10000101010 #b0011111110011100011001001000011010101010011101011101)))
(assert (= r (fp #b1 #b10000101000 #xe8b1329ea7538)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
