(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8924724359537190565561104449443519115447998046875p926 {+ 4019338529999608 926 (1.07351e+279)}
; Y = -1.3286944441457373411452635991736315190792083740234375p363 {- 1480308176173495 363 (-2.4964e+109)}
; 1.8924724359537190565561104449443519115447998046875p926 % -1.3286944441457373411452635991736315190792083740234375p363 == 1.1166965902023295864609053751337341964244842529296875p363
; [HW: 1.1166965902023295864609053751337341964244842529296875p363] 

; mpf : + 525554720150619 363
; mpfd: + 525554720150619 363 (2.09809e+109) class: Pos. norm. non-zero
; hwf : + 525554720150619 363 (2.09809e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110011101 #b1110010001111001000100101101010100000000101011111000)))
(assert (= y (fp #b1 #b10101101010 #b0101010000100101010100011010111111111011100110110111)))
(assert (= r (fp #b1 #b10101100111 #xb22bee4c12ae0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
