(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.231659690474908419588473407202400267124176025390625p-853 {+ 1043302495699562 -853 (2.05071e-257)}
; Y = 1.75051654203355600003533254493959248065948486328125p-821 {+ 3380026019037716 -821 (1.25181e-247)}
; 1.231659690474908419588473407202400267124176025390625p-853 % 1.75051654203355600003533254493959248065948486328125p-821 == 1.231659690474908419588473407202400267124176025390625p-853
; [HW: 1.231659690474908419588473407202400267124176025390625p-853] 

; mpf : + 1043302495699562 -853
; mpfd: + 1043302495699562 -853 (2.05071e-257) class: Pos. norm. non-zero
; hwf : + 1043302495699562 -853 (2.05071e-257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010101010 #b0011101101001110000011001010101001100100001001101010)))
(assert (= y (fp #b0 #b00011001010 #b1100000000100001110110100010001100100100001000010100)))
(assert (= r (fp #b0 #b00010101010 #x3b4e0caa6426a)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
