(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9500914694297384333054878879920579493045806884765625p-99 {+ 4278831587691657 -99 (3.0767e-030)}
; Y = 1.79499173910178644320012608659453690052032470703125p712 {+ 3580324499981428 712 (3.8674e+214)}
; 1.9500914694297384333054878879920579493045806884765625p-99 % 1.79499173910178644320012608659453690052032470703125p712 == 1.9500914694297384333054878879920579493045806884765625p-99
; [HW: 1.9500914694297384333054878879920579493045806884765625p-99] 

; mpf : + 4278831587691657 -99
; mpfd: + 4278831587691657 -99 (3.0767e-030) class: Pos. norm. non-zero
; hwf : + 4278831587691657 -99 (3.0767e-030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110011100 #b1111001100111001001100011100110101101000110010001001)))
(assert (= y (fp #b0 #b11011000111 #b1100101110000100100101000010000000001000010001110100)))
(assert (= r (fp #b0 #b01110011100 #xf33931cd68c89)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
