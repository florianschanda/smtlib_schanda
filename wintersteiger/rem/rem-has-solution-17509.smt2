(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.607724349775342620461060505476780235767364501953125p-843 {- 2736947155192210 -843 (-2.7411e-254)}
; Y = 1.9037591397699793471787188536836765706539154052734375p343 {+ 4070169325100759 343 (3.41115e+103)}
; -1.607724349775342620461060505476780235767364501953125p-843 % 1.9037591397699793471787188536836765706539154052734375p343 == -1.607724349775342620461060505476780235767364501953125p-843
; [HW: -1.607724349775342620461060505476780235767364501953125p-843] 

; mpf : - 2736947155192210 -843
; mpfd: - 2736947155192210 -843 (-2.7411e-254) class: Neg. norm. non-zero
; hwf : - 2736947155192210 -843 (-2.7411e-254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110100 #b1001101110010011110100101010111101000100100110010010)))
(assert (= y (fp #b0 #b10101010110 #b1110011101011100110000100100110011000101111011010111)))
(assert (= r (fp #b1 #b00010110100 #x9b93d2af44992)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
