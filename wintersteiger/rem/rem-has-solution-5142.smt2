(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.205995899446033359225793901714496314525604248046875p-892 {+ 927723055985006 -892 (3.6525e-269)}
; Y = 1.4576583805192686593699136210489086806774139404296875p250 {+ 2061110111969563 250 (2.63727e+075)}
; 1.205995899446033359225793901714496314525604248046875p-892 % 1.4576583805192686593699136210489086806774139404296875p250 == 1.205995899446033359225793901714496314525604248046875p-892
; [HW: 1.205995899446033359225793901714496314525604248046875p-892] 

; mpf : + 927723055985006 -892
; mpfd: + 927723055985006 -892 (3.6525e-269) class: Pos. norm. non-zero
; hwf : + 927723055985006 -892 (3.6525e-269) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010000011 #b0011010010111100001001011011001100111011000101101110)))
(assert (= y (fp #b0 #b10011111001 #b0111010100101001000110011000000100010010000100011011)))
(assert (= r (fp #b0 #b00010000011 #x34bc25b33b16e)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
