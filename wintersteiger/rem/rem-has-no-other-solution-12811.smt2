(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.54610075256148693512159297824837267398834228515625p-213 {- 2459419145742660 -213 (-1.17449e-064)}
; Y = 1.0711392913542983063024394141393713653087615966796875p-890 {+ 320382886034619 -890 (1.29763e-268)}
; -1.54610075256148693512159297824837267398834228515625p-213 % 1.0711392913542983063024394141393713653087615966796875p-890 == -1.40576820472780728010775419534184038639068603515625p-891
; [HW: -1.40576820472780728010775419534184038639068603515625p-891] 

; mpf : - 1827417535610948 -891
; mpfd: - 1827417535610948 -891 (-8.51506e-269) class: Neg. norm. non-zero
; hwf : - 1827417535610948 -891 (-8.51506e-269) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100101010 #b1000101111001101010000100100100010010010100101000100)))
(assert (= y (fp #b0 #b00010000101 #b0001001000110110001011110100000111010011110010111011)))
(assert (= r (fp #b0 #b00010000011 #x7917e3652f264)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
