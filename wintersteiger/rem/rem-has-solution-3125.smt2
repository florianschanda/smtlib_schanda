(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8760926957019281591243498041876591742038726806640625p572 {+ 3945570737905217 572 (2.90009e+172)}
; Y = 1.42732526599367393060902031720615923404693603515625p-784 {+ 1924501908695108 -784 (1.40283e-236)}
; 1.8760926957019281591243498041876591742038726806640625p572 % 1.42732526599367393060902031720615923404693603515625p-784 == 1.351498630121735544662442407570779323577880859375p-785
; [HW: 1.351498630121735544662442407570779323577880859375p-785] 

; mpf : + 1583009099637488 -785
; mpfd: + 1583009099637488 -785 (6.64154e-237) class: Pos. norm. non-zero
; hwf : + 1583009099637488 -785 (6.64154e-237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000111011 #b1110000001000111100111000110010001001101111001000001)))
(assert (= y (fp #b0 #b00011101111 #b0110110101100101001100000100101000110010100001000100)))
(assert (= r (fp #b0 #b00011101110 #x59fbd070f62f0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
