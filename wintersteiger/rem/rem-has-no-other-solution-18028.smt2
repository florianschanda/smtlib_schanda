(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.14748588052330457998095880611799657344818115234375p933 {- 664217356567164 933 (-8.33169e+280)}
; Y = -1.589270913619797997995419791550375521183013916015625p435 {- 2653840266998394 435 (-1.41009e+131)}
; -1.14748588052330457998095880611799657344818115234375p933 % -1.589270913619797997995419791550375521183013916015625p435 == -1.52537306404151973282523613306693732738494873046875p435
; [HW: -1.52537306404151973282523613306693732738494873046875p435] 

; mpf : - 2366069935447884 435
; mpfd: - 2366069935447884 435 (-1.35339e+131) class: Neg. norm. non-zero
; hwf : - 2366069935447884 435 (-1.35339e+131) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110100100 #b0010010111000001101000100111100101111000001001111100)))
(assert (= y (fp #b1 #b10110110010 #b1001011011011010011101010110011001111011001001111010)))
(assert (= r (fp #b0 #b10110101110 #x05b9c063932e0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
