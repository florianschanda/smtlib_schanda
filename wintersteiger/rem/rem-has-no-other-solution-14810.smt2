(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.879207802977067132133015547879040241241455078125p887 {+ 3959599933868752 887 (1.93901e+267)}
; Y = 1.990449151708594488496828489587642252445220947265625p-331 {+ 4460586430564250 -331 (4.55012e-100)}
; 1.879207802977067132133015547879040241241455078125p887 % 1.990449151708594488496828489587642252445220947265625p-331 == 1.612954632153709599862168033723719418048858642578125p-331
; [HW: 1.612954632153709599862168033723719418048858642578125p-331] 

; mpf : + 2760502252962466 -331
; mpfd: + 2760502252962466 -331 (3.68717e-100) class: Pos. norm. non-zero
; hwf : + 2760502252962466 -331 (3.68717e-100) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101110110 #b1110000100010011110000110011100000101100101011010000)))
(assert (= y (fp #b0 #b01010110100 #b1111110110001110000100110101101011110000011110011010)))
(assert (= r (fp #b1 #b01010110010 #x828dec5fa13e0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
