(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7497354221038017296763200647546909749507904052734375p923 {- 3376508167613143 923 (-1.24068e+278)}
; Y = 1.91933766863871557717402538401074707508087158203125p135 {+ 4140328781908980 135 (8.35989e+040)}
; -1.7497354221038017296763200647546909749507904052734375p923 % 1.91933766863871557717402538401074707508087158203125p135 == -1.6162219407411821947562202694825828075408935546875p134
; [HW: -1.6162219407411821947562202694825828075408935546875p134] 

; mpf : - 2775216902699512 134
; mpfd: - 2775216902699512 134 (-3.51982e+040) class: Neg. norm. non-zero
; hwf : - 2775216902699512 134 (-3.51982e+040) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110011010 #b1011111111101110101010010001111010010110101011010111)))
(assert (= y (fp #b0 #b10010000110 #b1110101101011001101101101010010011001000101111110100)))
(assert (= r (fp #b1 #b10010000101 #x9dc0b89a8f9f8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
