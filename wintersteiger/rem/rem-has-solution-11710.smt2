(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.41295086016369442205586892669089138507843017578125p675 {- 1859765339955540 675 (-2.215e+203)}
; Y = -1.2022318429830682884329462467576377093791961669921875p-869 {- 910771252700995 -869 (-3.05437e-262)}
; -1.41295086016369442205586892669089138507843017578125p675 % -1.2022318429830682884329462467576377093791961669921875p-869 == -1.6551382475738396493625259608961641788482666015625p-870
; [HW: -1.6551382475738396493625259608961641788482666015625p-870] 

; mpf : - 2950480367649704 -870
; mpfd: - 2950480367649704 -870 (-2.10251e-262) class: Neg. norm. non-zero
; hwf : - 2950480367649704 -870 (-2.10251e-262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100010 #b0110100110110111001001011100011101000010000101010100)))
(assert (= y (fp #b1 #b00010011010 #b0011001111000101011101110100111111010010011101000011)))
(assert (= r (fp #b0 #b00010011000 #x7fa79577e95bc)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
