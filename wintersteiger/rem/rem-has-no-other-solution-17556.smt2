(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6213363989474414150748771135113202035427093505859375p277 {+ 2798250374771423 277 (3.93715e+083)}
; Y = 1.5964691081257473825871784356422722339630126953125p-342 {+ 2686258053093128 -342 (1.78198e-103)}
; 1.6213363989474414150748771135113202035427093505859375p277 % 1.5964691081257473825871784356422722339630126953125p-342 == 1.446990803152512938822837895713746547698974609375p-342
; [HW: 1.446990803152512938822837895713746547698974609375p-342] 

; mpf : + 2013067614515696 -342
; mpfd: + 2013067614515696 -342 (1.61513e-103) class: Pos. norm. non-zero
; hwf : + 2013067614515696 -342 (1.61513e-103) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010100 #b1001111100001111111001101111100101001011001011011111)))
(assert (= y (fp #b0 #b01010101001 #b1001100010110010001100110001000001111001011100001000)))
(assert (= r (fp #b1 #b01010100110 #x3221ae7a928c0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
