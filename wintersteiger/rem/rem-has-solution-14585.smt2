(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1024399468414622926815127357258461415767669677734375p449 {+ 461348506423063 449 (1.60259e+135)}
; Y = -1.694311980865903510817815913469530642032623291015625p-509 {- 3126903178306554 -509 (-1.01094e-153)}
; 1.1024399468414622926815127357258461415767669677734375p449 % -1.694311980865903510817815913469530642032623291015625p-509 == 1.291744403069248647852873546071350574493408203125p-510
; [HW: 1.291744403069248647852873546071350574493408203125p-510] 

; mpf : + 1313899984950096 -510
; mpfd: + 1313899984950096 -510 (3.85371e-154) class: Pos. norm. non-zero
; hwf : + 1313899984950096 -510 (3.85371e-154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111000000 #b0001101000111001100000010001110101111100111100010111)))
(assert (= y (fp #b1 #b01000000010 #b1011000110111110011011100001001100001010001111111010)))
(assert (= r (fp #b0 #b01000000001 #x4aafc2ddf9350)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
