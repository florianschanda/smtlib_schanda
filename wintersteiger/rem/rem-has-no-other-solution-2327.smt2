(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3248565511724479382138497385312803089618682861328125p739 {+ 1463023842809101 739 (3.83121e+222)}
; Y = -1.6561631902533433535751328236074186861515045166015625p896 {- 2955096299119193 896 (-8.74942e+269)}
; 1.3248565511724479382138497385312803089618682861328125p739 % -1.6561631902533433535751328236074186861515045166015625p896 == 1.3248565511724479382138497385312803089618682861328125p739
; [HW: 1.3248565511724479382138497385312803089618682861328125p739] 

; mpf : + 1463023842809101 739
; mpfd: + 1463023842809101 739 (3.83121e+222) class: Pos. norm. non-zero
; hwf : + 1463023842809101 739 (3.83121e+222) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011100010 #b0101001100101001110011001000011100101101010100001101)))
(assert (= y (fp #b1 #b11101111111 #b1010011111111010010011111001001011111010001001011001)))
(assert (= r (fp #b0 #b11011100010 #x5329cc872d50d)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
