(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5599802203045014525883971145958639681339263916015625p555 {- 2521926711498201 555 (-1.83978e+167)}
; Y = -1.9132920354506597337973516914644278585910797119140625p872 {- 4113101670536033 872 (-6.02473e+262)}
; -1.5599802203045014525883971145958639681339263916015625p555 % -1.9132920354506597337973516914644278585910797119140625p872 == -1.5599802203045014525883971145958639681339263916015625p555
; [HW: -1.5599802203045014525883971145958639681339263916015625p555] 

; mpf : - 2521926711498201 555
; mpfd: - 2521926711498201 555 (-1.83978e+167) class: Neg. norm. non-zero
; hwf : - 2521926711498201 555 (-1.83978e+167) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101010 #b1000111101011010110111010001110010011101010111011001)))
(assert (= y (fp #b1 #b11101100111 #b1110100111001101100000011011111111110101001101100001)))
(assert (= r (fp #b1 #b11000101010 #x8f5add1c9d5d9)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
