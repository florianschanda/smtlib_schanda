(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9875788147186386201070718016126193106174468994140625p502 {+ 4447659581965857 502 (2.60245e+151)}
; Y = -1.4049731954909188136326747553539462387561798095703125p-478 {- 1823837132307941 -478 (-1.80024e-144)}
; 1.9875788147186386201070718016126193106174468994140625p502 % -1.4049731954909188136326747553539462387561798095703125p-478 == 1.223491830414106917856997824856080114841461181640625p-478
; [HW: 1.223491830414106917856997824856080114841461181640625p-478] 

; mpf : + 1006517724173322 -478
; mpfd: + 1006517724173322 -478 (1.5677e-144) class: Pos. norm. non-zero
; hwf : + 1006517724173322 -478 (1.5677e-144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110101 #b1111110011010001111101110001011101110000011000100001)))
(assert (= y (fp #b1 #b01000100001 #b0110011110101100010100101100011001100011110111100101)))
(assert (= r (fp #b1 #b01000011110 #x73ac807eb4ed8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
