(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3893329999042547395760038853040896356105804443359375p-799 {- 1753399953291839 -799 (-4.16716e-241)}
; Y = 1.2973843209710962387504196158261038362979888916015625p672 {+ 1339299917111257 672 (2.54229e+202)}
; -1.3893329999042547395760038853040896356105804443359375p-799 % 1.2973843209710962387504196158261038362979888916015625p672 == -1.3893329999042547395760038853040896356105804443359375p-799
; [HW: -1.3893329999042547395760038853040896356105804443359375p-799] 

; mpf : - 1753399953291839 -799
; mpfd: - 1753399953291839 -799 (-4.16716e-241) class: Neg. norm. non-zero
; hwf : - 1753399953291839 -799 (-4.16716e-241) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011100000 #b0110001110101011010100111101010111010111101000111111)))
(assert (= y (fp #b0 #b11010011111 #b0100110000100001011000001111110011101001111111011001)))
(assert (= r (fp #b1 #b00011100000 #x63ab53d5d7a3f)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
