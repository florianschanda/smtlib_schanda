(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2039939440681670657085078346426598727703094482421875p756 {- 918707050491235 756 (-4.56353e+227)}
; Y = -1.0860299602003899988034163470729254186153411865234375p-478 {- 387444496701175 -478 (-1.39157e-144)}
; -1.2039939440681670657085078346426598727703094482421875p756 % -1.0860299602003899988034163470729254186153411865234375p-478 == -1.712210403480864062686350735020823776721954345703125p-479
; [HW: -1.712210403480864062686350735020823776721954345703125p-479] 

; mpf : - 3207510507725810 -479
; mpfd: - 3207510507725810 -479 (-1.09696e-144) class: Neg. norm. non-zero
; hwf : - 3207510507725810 -479 (-1.09696e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011110011 #b0011010000111000111100100111011001011010110101100011)))
(assert (= y (fp #b1 #b01000100001 #b0001011000000110000011110011100110001001011011110111)))
(assert (= r (fp #b0 #b01000011110 #xd6e2cab1027f0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
