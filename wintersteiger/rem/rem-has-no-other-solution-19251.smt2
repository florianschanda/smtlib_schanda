(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5715363083754703144023778804694302380084991455078125p-133 {+ 2573970705428477 -133 (1.44323e-040)}
; Y = 1.0193604626472343444021362302009947597980499267578125p562 {+ 87191772363805 562 (1.53881e+169)}
; 1.5715363083754703144023778804694302380084991455078125p-133 % 1.0193604626472343444021362302009947597980499267578125p562 == 1.5715363083754703144023778804694302380084991455078125p-133
; [HW: 1.5715363083754703144023778804694302380084991455078125p-133] 

; mpf : + 2573970705428477 -133
; mpfd: + 2573970705428477 -133 (1.44323e-040) class: Pos. norm. non-zero
; hwf : + 2573970705428477 -133 (1.44323e-040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111010 #b1001001001010000001101000001100011110010111111111101)))
(assert (= y (fp #b0 #b11000110001 #b0000010011110100110011101010100111100111110000011101)))
(assert (= r (fp #b0 #b01101111010 #x92503418f2ffd)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
