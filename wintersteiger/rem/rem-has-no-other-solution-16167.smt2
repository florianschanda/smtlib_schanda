(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4473553545849557888658409865456633269786834716796875p-761 {- 2014709408211003 -761 (-1.1933e-229)}
; Y = 1.5467930058252179481570465213735587894916534423828125p-669 {+ 2462536777283245 -669 (6.31488e-202)}
; -1.4473553545849557888658409865456633269786834716796875p-761 % 1.5467930058252179481570465213735587894916534423828125p-669 == -1.4473553545849557888658409865456633269786834716796875p-761
; [HW: -1.4473553545849557888658409865456633269786834716796875p-761] 

; mpf : - 2014709408211003 -761
; mpfd: - 2014709408211003 -761 (-1.1933e-229) class: Neg. norm. non-zero
; hwf : - 2014709408211003 -761 (-1.1933e-229) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100000110 #b0111001010000101111000010110100110100010000000111011)))
(assert (= y (fp #b0 #b00101100010 #b1000101111111010101000000101110110110011011010101101)))
(assert (= r (fp #b1 #b00100000110 #x7285e169a203b)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
