(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.190065855385843196501127749797888100147247314453125p-23 {+ 855980515491538 -23 (1.41867e-007)}
; Y = -1.0683321382054333792410716341692022979259490966796875p-412 {- 307740592159419 -412 (-1.01006e-124)}
; 1.190065855385843196501127749797888100147247314453125p-23 % -1.0683321382054333792410716341692022979259490966796875p-412 == 1.32370262101703684010090000811032950878143310546875p-413
; [HW: 1.32370262101703684010090000811032950878143310546875p-413] 

; mpf : + 1457827003391180 -413
; mpfd: + 1457827003391180 -413 (6.25752e-125) class: Pos. norm. non-zero
; hwf : + 1457827003391180 -413 (6.25752e-125) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111101000 #b0011000010101000001001111110100011110111111011010010)))
(assert (= y (fp #b1 #b01001100011 #b0001000101111110001101110000101011011011101010111011)))
(assert (= r (fp #b1 #b01001100001 #xa03c8295a3154)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
