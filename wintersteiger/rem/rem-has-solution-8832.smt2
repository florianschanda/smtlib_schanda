(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8702489914493478639911927530192770063877105712890625p422 {- 3919253033610833 422 (-2.02562e+127)}
; Y = 1.4897310832502130839571918841102160513401031494140625p333 {+ 2205552724037409 333 (2.60673e+100)}
; -1.8702489914493478639911927530192770063877105712890625p422 % 1.4897310832502130839571918841102160513401031494140625p333 == -1.030640040010685876126217408454976975917816162109375p333
; [HW: -1.030640040010685876126217408454976975917816162109375p333] 

; mpf : - 137990472774742 333
; mpfd: - 137990472774742 333 (-1.80341e+100) class: Neg. norm. non-zero
; hwf : - 137990472774742 333 (-1.80341e+100) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110100101 #b1101111011001000101000110100110110100110111001010001)))
(assert (= y (fp #b0 #b10101001100 #b0111110101011111000001000010101001100100111100100001)))
(assert (= r (fp #b0 #b10101001010 #xd61bf66266b2c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
