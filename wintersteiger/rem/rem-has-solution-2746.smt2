(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4877095079063764604399011659552343189716339111328125p85 {+ 2196448358072205 85 (5.7553e+025)}
; Y = -1.404324267716502649960830240161158144474029541015625p85 {- 1820914621424890 85 (-5.43272e+025)}
; 1.4877095079063764604399011659552343189716339111328125p85 % -1.404324267716502649960830240161158144474029541015625p85 == 1.334163843037980967665134812705218791961669921875p81
; [HW: 1.334163843037980967665134812705218791961669921875p81] 

; mpf : + 1504940158986544 81
; mpfd: + 1504940158986544 81 (3.22581e+024) class: Pos. norm. non-zero
; hwf : + 1504940158986544 81 (3.22581e+024) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001010100 #b0111110011011010100001111100001001100111111110001101)))
(assert (= y (fp #b1 #b10001010100 #b0110011110000001110010111001001011010010010011111010)))
(assert (= r (fp #b0 #b10001010000 #x558bc2f95a930)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
