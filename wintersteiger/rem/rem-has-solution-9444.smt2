(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.11419070797014807538971581379882991313934326171875p-794 {+ 514269229863532 -794 (1.06941e-239)}
; Y = -1.460836561749801365550638365675695240497589111328125p-150 {- 2075423367775106 -150 (-1.02353e-045)}
; 1.11419070797014807538971581379882991313934326171875p-794 % -1.460836561749801365550638365675695240497589111328125p-150 == 1.11419070797014807538971581379882991313934326171875p-794
; [HW: 1.11419070797014807538971581379882991313934326171875p-794] 

; mpf : + 514269229863532 -794
; mpfd: + 514269229863532 -794 (1.06941e-239) class: Pos. norm. non-zero
; hwf : + 514269229863532 -794 (1.06941e-239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011100101 #b0001110100111011100110100010110000111101001001101100)))
(assert (= y (fp #b1 #b01101101001 #b0111010111111001011000101000100110000100001110000010)))
(assert (= r (fp #b0 #b00011100101 #x1d3b9a2c3d26c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
