(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3142571888423140169521730058477260172367095947265625p-920 {- 1415288558568745 -920 (-1.48281e-277)}
; Y = 1.259746227131359308515357042779214680194854736328125p701 {+ 1169793011719682 701 (1.32529e+211)}
; -1.3142571888423140169521730058477260172367095947265625p-920 % 1.259746227131359308515357042779214680194854736328125p701 == -1.3142571888423140169521730058477260172367095947265625p-920
; [HW: -1.3142571888423140169521730058477260172367095947265625p-920] 

; mpf : - 1415288558568745 -920
; mpfd: - 1415288558568745 -920 (-1.48281e-277) class: Neg. norm. non-zero
; hwf : - 1415288558568745 -920 (-1.48281e-277) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001100111 #b0101000001110011001010001011110010011100010100101001)))
(assert (= y (fp #b0 #b11010111100 #b0100001001111110101110101000111011001001111000000010)))
(assert (= r (fp #b1 #b00001100111 #x507328bc9c529)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
