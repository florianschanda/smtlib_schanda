(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.007921880646323042896028709947131574153900146484375p-864 {- 35676978726854 -864 (-8.19428e-261)}
; Y = 1.950469323180380687432489139609970152378082275390625p539 {+ 4280533289702250 539 (3.51e+162)}
; -1.007921880646323042896028709947131574153900146484375p-864 % 1.950469323180380687432489139609970152378082275390625p539 == -1.007921880646323042896028709947131574153900146484375p-864
; [HW: -1.007921880646323042896028709947131574153900146484375p-864] 

; mpf : - 35676978726854 -864
; mpfd: - 35676978726854 -864 (-8.19428e-261) class: Neg. norm. non-zero
; hwf : - 35676978726854 -864 (-8.19428e-261) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010011111 #b0000001000000111001010110001101001001100011111000110)))
(assert (= y (fp #b0 #b11000011010 #b1111001101010001111101010010001011101001001101101010)))
(assert (= r (fp #b1 #b00010011111 #x02072b1a4c7c6)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
