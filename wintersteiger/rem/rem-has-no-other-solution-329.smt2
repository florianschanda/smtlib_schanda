(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7093306988602254836706606511143036186695098876953125p300 {+ 3194541471069365 300 (3.48197e+090)}
; Y = -1.8198488122006828415777590635116212069988250732421875p-408 {- 3692270805127139 -408 (-2.75294e-123)}
; 1.7093306988602254836706606511143036186695098876953125p300 % -1.8198488122006828415777590635116212069988250732421875p-408 == 1.85705341464354223290911249932833015918731689453125p-410
; [HW: 1.85705341464354223290911249932833015918731689453125p-410] 

; mpf : + 3859825438825268 -410
; mpfd: + 3859825438825268 -410 (7.02306e-124) class: Pos. norm. non-zero
; hwf : + 3859825438825268 -410 (7.02306e-124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101011 #b1011010110010110101100100101100110100111010010110101)))
(assert (= y (fp #b1 #b01001100111 #b1101000111100001100111001001110000010000111111100011)))
(assert (= r (fp #b0 #b01001100101 #xdb67da42d1b34)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
