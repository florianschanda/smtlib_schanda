(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.35158051106960552800728692091070115566253662109375p-842 {- 1583377858643804 -842 (-4.60878e-254)}
; Y = -1.520996269132583567085248432704247534275054931640625p356 {- 2346358603526922 356 (-2.23258e+107)}
; -1.35158051106960552800728692091070115566253662109375p-842 % -1.520996269132583567085248432704247534275054931640625p356 == -1.35158051106960552800728692091070115566253662109375p-842
; [HW: -1.35158051106960552800728692091070115566253662109375p-842] 

; mpf : - 1583377858643804 -842
; mpfd: - 1583377858643804 -842 (-4.60878e-254) class: Neg. norm. non-zero
; hwf : - 1583377858643804 -842 (-4.60878e-254) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110101 #b0101101000000001001011100010110011110100011101011100)))
(assert (= y (fp #b1 #b10101100011 #b1000010101100000000000101111000101000011001100001010)))
(assert (= r (fp #b1 #b00010110101 #x5a012e2cf475c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
