(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2596579141639943077990437814150936901569366455078125p-879 {- 1169395285472765 -879 (-3.12526e-265)}
; Y = 1.2856724816636642128031553511391393840312957763671875p-466 {+ 1286554481970483 -466 (6.74765e-141)}
; -1.2596579141639943077990437814150936901569366455078125p-879 % 1.2856724816636642128031553511391393840312957763671875p-466 == -1.2596579141639943077990437814150936901569366455078125p-879
; [HW: -1.2596579141639943077990437814150936901569366455078125p-879] 

; mpf : - 1169395285472765 -879
; mpfd: - 1169395285472765 -879 (-3.12526e-265) class: Neg. norm. non-zero
; hwf : - 1169395285472765 -879 (-3.12526e-265) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010010000 #b0100001001111000111100001110100101111011010111111101)))
(assert (= y (fp #b0 #b01000101101 #b0100100100100001110101001110111000011100110100110011)))
(assert (= r (fp #b1 #b00010010000 #x4278f0e97b5fd)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
