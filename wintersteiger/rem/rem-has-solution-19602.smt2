(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9958955727344724895289118649088777601718902587890625p-634 {- 4485114930266897 -634 (-2.79976e-191)}
; Y = 1.4835693827872076244744903306127525866031646728515625p-35 {+ 2177802892128249 -35 (4.31776e-011)}
; -1.9958955727344724895289118649088777601718902587890625p-634 % 1.4835693827872076244744903306127525866031646728515625p-35 == -1.9958955727344724895289118649088777601718902587890625p-634
; [HW: -1.9958955727344724895289118649088777601718902587890625p-634] 

; mpf : - 4485114930266897 -634
; mpfd: - 4485114930266897 -634 (-2.79976e-191) class: Neg. norm. non-zero
; hwf : - 4485114930266897 -634 (-2.79976e-191) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110000101 #b1111111011110011000000110010001100100000001100010001)))
(assert (= y (fp #b0 #b01111011100 #b0111101111001011001100111111110001101010111111111001)))
(assert (= r (fp #b1 #b00110000101 #xfef3032320311)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
