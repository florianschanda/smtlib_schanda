(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.211445399564476499421061816974543035030364990234375p-790 {- 952265422687782 -790 (-1.8604e-238)}
; Y = -1.28555739810758407060120589449070394039154052734375p-458 {- 1286036191710204 -458 (-1.72724e-138)}
; -1.211445399564476499421061816974543035030364990234375p-790 % -1.28555739810758407060120589449070394039154052734375p-458 == -1.211445399564476499421061816974543035030364990234375p-790
; [HW: -1.211445399564476499421061816974543035030364990234375p-790] 

; mpf : - 952265422687782 -790
; mpfd: - 952265422687782 -790 (-1.8604e-238) class: Neg. norm. non-zero
; hwf : - 952265422687782 -790 (-1.8604e-238) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011101001 #b0011011000100001010010010010010000000100111000100110)))
(assert (= y (fp #b1 #b01000110101 #b0100100100011010010010100010011000000000101111111100)))
(assert (= r (fp #b1 #b00011101001 #x3621492404e26)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
