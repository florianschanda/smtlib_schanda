(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.492525868812046407896332311793230473995208740234375p-530 {- 2218139319252262 -530 (-4.24643e-160)}
; Y = -1.4361092245192532690367670511477626860141754150390625p-601 {- 1964061341037745 -601 (-1.73045e-181)}
; -1.492525868812046407896332311793230473995208740234375p-530 % -1.4361092245192532690367670511477626860141754150390625p-601 == -1.1016548673787720513672638844582252204418182373046875p-601
; [HW: -1.1016548673787720513672638844582252204418182373046875p-601] 

; mpf : - 457812822847435 -601
; mpfd: - 457812822847435 -601 (-1.32745e-181) class: Neg. norm. non-zero
; hwf : - 457812822847435 -601 (-1.32745e-181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111101101 #b0111111000010110001011001110001011111011010100100110)))
(assert (= y (fp #b1 #b00110100110 #b0110111110100100110110101010100011001011010010110001)))
(assert (= r (fp #b0 #b00110100100 #x567b33f7b1398)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
