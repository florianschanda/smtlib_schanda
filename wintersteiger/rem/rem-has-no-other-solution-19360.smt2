(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.355293501425788971204156041494570672512054443359375p183 {- 1600099680628342 183 (-1.66158e+055)}
; Y = 1.1701434942596879995591052647796459496021270751953125p-902 {+ 766258177347445 -902 (3.46085e-272)}
; -1.355293501425788971204156041494570672512054443359375p183 % 1.1701434942596879995591052647796459496021270751953125p-902 == -1.132510462725704325492870339076034724712371826171875p-902
; [HW: -1.132510462725704325492870339076034724712371826171875p-902] 

; mpf : - 596774070554174 -902
; mpfd: - 596774070554174 -902 (-3.34955e-272) class: Neg. norm. non-zero
; hwf : - 596774070554174 -902 (-3.34955e-272) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010110110 #b0101101011110100100000111101000100011010111001110110)))
(assert (= y (fp #b0 #b00001111001 #b0010101110001110100001100010011101111000111101110101)))
(assert (= r (fp #b0 #b00001110100 #x344a2ff6026e0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
