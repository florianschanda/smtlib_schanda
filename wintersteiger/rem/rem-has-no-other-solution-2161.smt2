(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2656849868600499320336894015781581401824951171875p-269 {+ 1196538807820856 -269 (1.33431e-081)}
; Y = 1.9106209784619692104712385116727091372013092041015625p-426 {+ 4101072299277081 -426 (1.10255e-128)}
; 1.2656849868600499320336894015781581401824951171875p-269 % 1.9106209784619692104712385116727091372013092041015625p-426 == 1.922733245794548739837637185701169073581695556640625p-427
; [HW: 1.922733245794548739837637185701169073581695556640625p-427] 

; mpf : + 4155621101922698 -427
; mpfd: + 4155621101922698 -427 (5.54767e-129) class: Pos. norm. non-zero
; hwf : + 4155621101922698 -427 (5.54767e-129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110010 #b0100010000000011111011100110100110011010001000111000)))
(assert (= y (fp #b0 #b01001010101 #b1110100100011110011101001101100110001011101100011001)))
(assert (= r (fp #b1 #b01001010100 #xe604aab978ca8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
