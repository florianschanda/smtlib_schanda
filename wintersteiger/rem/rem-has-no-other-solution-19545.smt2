(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.680766206787775995934453021618537604808807373046875p-581 {- 3065898435215854 -581 (-2.12363e-175)}
; Y = 1.24398894766620404794821297400631010532379150390625p-185 {+ 1098828533792036 -185 (2.53669e-056)}
; -1.680766206787775995934453021618537604808807373046875p-581 % 1.24398894766620404794821297400631010532379150390625p-185 == -1.680766206787775995934453021618537604808807373046875p-581
; [HW: -1.680766206787775995934453021618537604808807373046875p-581] 

; mpf : - 3065898435215854 -581
; mpfd: - 3065898435215854 -581 (-2.12363e-175) class: Neg. norm. non-zero
; hwf : - 3065898435215854 -581 (-2.12363e-175) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110111010 #b1010111001000110101100011011001001100000000111101110)))
(assert (= y (fp #b0 #b01101000110 #b0011111001110110000011110100011011001111110100100100)))
(assert (= r (fp #b1 #b00110111010 #xae46b1b2601ee)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
