(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.607864271476696860219135487568564713001251220703125p-410 {+ 2737577306514290 -410 (6.08067e-124)}
; Y = 1.1817832670665058270031977372127585113048553466796875p443 {+ 818679053822907 443 (2.68427e+133)}
; 1.607864271476696860219135487568564713001251220703125p-410 % 1.1817832670665058270031977372127585113048553466796875p443 == 1.607864271476696860219135487568564713001251220703125p-410
; [HW: 1.607864271476696860219135487568564713001251220703125p-410] 

; mpf : + 2737577306514290 -410
; mpfd: + 2737577306514290 -410 (6.08067e-124) class: Pos. norm. non-zero
; hwf : + 2737577306514290 -410 (6.08067e-124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100101 #b1001101110011100111111100010111001100110001101110010)))
(assert (= y (fp #b0 #b10110111010 #b0010111010001001010110010010001100000010101110111011)))
(assert (= r (fp #b0 #b01001100101 #x9b9cfe2e66372)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
