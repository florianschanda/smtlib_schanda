(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9692765466962678377882411950849927961826324462890625p365 {+ 4365233494520273 365 (1.47998e+110)}
; Y = -1.032592819403358230800904493662528693675994873046875p1022 {- 146785009319918 1022 (-4.64071e+307)}
; 1.9692765466962678377882411950849927961826324462890625p365 % -1.032592819403358230800904493662528693675994873046875p1022 == 1.9692765466962678377882411950849927961826324462890625p365
; [HW: 1.9692765466962678377882411950849927961826324462890625p365] 

; mpf : + 4365233494520273 365
; mpfd: + 4365233494520273 365 (1.47998e+110) class: Pos. norm. non-zero
; hwf : + 4365233494520273 365 (1.47998e+110) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101101100 #b1111100000100010100000011111110011010111000111010001)))
(assert (= y (fp #b1 #b11111111101 #b0000100001011000000000001100010101101011111111101110)))
(assert (= r (fp #b0 #b10101101100 #xf82281fcd71d1)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
