(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8903561238365165220187691375031135976314544677734375p881 {- 4009807507537175 881 (-3.04768e+265)}
; Y = 1.5508917578742840159833349389373324811458587646484375p-457 {+ 2480995915484103 -457 (4.16748e-138)}
; -1.8903561238365165220187691375031135976314544677734375p881 % 1.5508917578742840159833349389373324811458587646484375p-457 == -1.21089786227090723258470461587421596050262451171875p-457
; [HW: -1.21089786227090723258470461587421596050262451171875p-457] 

; mpf : - 949799533936492 -457
; mpfd: - 949799533936492 -457 (-3.25386e-138) class: Neg. norm. non-zero
; hwf : - 949799533936492 -457 (-3.25386e-138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101110000 #b1110001111101110011000010000000110101011110100010111)))
(assert (= y (fp #b0 #b01000110110 #b1000110100000111001111100000001110110100101111000111)))
(assert (= r (fp #b0 #b01000110100 #x5c275c19d316c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
