(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.8389443277716155389356345040141604840755462646484375p293 {- 3778269361936839 293 (-2.92656e+088)}
; Y = 1.579477998732154109262637575739063322544097900390625p176 {+ 2609736899159530 176 (1.51284e+053)}
; -1.8389443277716155389356345040141604840755462646484375p293 % 1.579477998732154109262637575739063322544097900390625p176 == -1.68579081330436952868012667750008404254913330078125p175
; [HW: -1.68579081330436952868012667750008404254913330078125p175] 

; mpf : - 3088527251251668 175
; mpfd: - 3088527251251668 175 (-8.07333e+052) class: Neg. norm. non-zero
; hwf : - 3088527251251668 175 (-8.07333e+052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100100100 #b1101011011000101000011100011001011110001100111000111)))
(assert (= y (fp #b0 #b10010101111 #b1001010001011000101010111000110101001110010111101010)))
(assert (= r (fp #b0 #b10010101110 #x79215a7f92a00)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
