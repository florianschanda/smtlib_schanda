(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.350339909962956053135485490201972424983978271484375p-471 {- 1577790687962182 -471 (-2.2147e-142)}
; Y = -1.87615264721671604064567873138003051280975341796875p436 {- 3945840735524876 436 (-3.32925e+131)}
; -1.350339909962956053135485490201972424983978271484375p-471 % -1.87615264721671604064567873138003051280975341796875p436 == -1.350339909962956053135485490201972424983978271484375p-471
; [HW: -1.350339909962956053135485490201972424983978271484375p-471] 

; mpf : - 1577790687962182 -471
; mpfd: - 1577790687962182 -471 (-2.2147e-142) class: Neg. norm. non-zero
; hwf : - 1577790687962182 -471 (-2.2147e-142) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000101000 #b0101100110101111111000000101011111000110010001000110)))
(assert (= y (fp #b1 #b10110110011 #b1110000001001011100010100011011000011001100000001100)))
(assert (= r (fp #b1 #b01000101000 #x59afe057c6446)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
