(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4183538455204647288354635747964493930339813232421875p-376 {- 1884098222794979 -376 (-9.21523e-114)}
; Y = -1.1221108945966158376705834598396904766559600830078125p-189 {- 549938579403197 -189 (-1.4301e-057)}
; -1.4183538455204647288354635747964493930339813232421875p-376 % -1.1221108945966158376705834598396904766559600830078125p-189 == -1.4183538455204647288354635747964493930339813232421875p-376
; [HW: -1.4183538455204647288354635747964493930339813232421875p-376] 

; mpf : - 1884098222794979 -376
; mpfd: - 1884098222794979 -376 (-9.21523e-114) class: Neg. norm. non-zero
; hwf : - 1884098222794979 -376 (-9.21523e-114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010000111 #b0110101100011001001111001101010010101010100011100011)))
(assert (= y (fp #b1 #b01101000010 #b0001111101000010101010001101101011000111000110111101)))
(assert (= r (fp #b1 #b01010000111 #x6b193cd4aa8e3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
