(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.56653552313812394203296207706443965435028076171875p-303 {- 2551449170897004 -303 (-9.61284e-092)}
; Y = 1.80545600431463082458094504545442759990692138671875p262 {+ 3627451360894700 262 (1.33797e+079)}
; -1.56653552313812394203296207706443965435028076171875p-303 % 1.80545600431463082458094504545442759990692138671875p262 == -1.56653552313812394203296207706443965435028076171875p-303
; [HW: -1.56653552313812394203296207706443965435028076171875p-303] 

; mpf : - 2551449170897004 -303
; mpfd: - 2551449170897004 -303 (-9.61284e-092) class: Neg. norm. non-zero
; hwf : - 2551449170897004 -303 (-9.61284e-092) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010000 #b1001000100001000011110001101011111100110100001101100)))
(assert (= y (fp #b0 #b10100000101 #b1100111000110010010111010101110011100101111011101100)))
(assert (= r (fp #b1 #b01011010000 #x910878d7e686c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
