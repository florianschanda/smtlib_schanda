(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0311702248520646651996912623872049152851104736328125p-988 {+ 140378213028813 -988 (3.9418e-298)}
; Y = 1.8517968450239619127017931532463990151882171630859375p-972 {+ 3836151953845279 -972 (4.63914e-293)}
; 1.0311702248520646651996912623872049152851104736328125p-988 % 1.8517968450239619127017931532463990151882171630859375p-972 == 1.0311702248520646651996912623872049152851104736328125p-988
; [HW: 1.0311702248520646651996912623872049152851104736328125p-988] 

; mpf : + 140378213028813 -988
; mpfd: + 140378213028813 -988 (3.9418e-298) class: Pos. norm. non-zero
; hwf : + 140378213028813 -988 (3.9418e-298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100011 #b0000011111111010110001011001100001011001001111001101)))
(assert (= y (fp #b0 #b00000110011 #b1101101000001111010110111010100000110110110000011111)))
(assert (= r (fp #b0 #b00000100011 #x07fac598593cd)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
