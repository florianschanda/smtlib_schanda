(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6779818521180740464870950745535083115100860595703125p1000 {+ 3053358816562917 1000 (1.79797e+301)}
; Y = -1.844456656250470505398197929025627672672271728515625p-363 {- 3803094682420154 -363 (-9.81703e-110)}
; 1.6779818521180740464870950745535083115100860595703125p1000 % -1.844456656250470505398197929025627672672271728515625p-363 == 1.323166896871253772616228161496110260486602783203125p-363
; [HW: 1.323166896871253772616228161496110260486602783203125p-363] 

; mpf : + 1455414316327858 -363
; mpfd: + 1455414316327858 -363 (7.04249e-110) class: Pos. norm. non-zero
; hwf : + 1455414316327858 -363 (7.04249e-110) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100111 #b1010110110010000001101111111101000100000111011100101)))
(assert (= y (fp #b1 #b01010010100 #b1101100000101110010011111011100101111100001110111010)))
(assert (= r (fp #b1 #b01010010011 #x0ae67dc88c010)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
