(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.583944700638227676137148591806180775165557861328125p114 {+ 2629853136199298 114 (3.28972e+034)}
; Y = -1.8652621654145356000498168214107863605022430419921875p175 {- 3896794365738691 175 (-8.93283e+052)}
; 1.583944700638227676137148591806180775165557861328125p114 % -1.8652621654145356000498168214107863605022430419921875p175 == 1.583944700638227676137148591806180775165557861328125p114
; [HW: 1.583944700638227676137148591806180775165557861328125p114] 

; mpf : + 2629853136199298 114
; mpfd: + 2629853136199298 114 (3.28972e+034) class: Pos. norm. non-zero
; hwf : + 2629853136199298 114 (3.28972e+034) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001110001 #b1001010101111101011001100101111111101001111010000010)))
(assert (= y (fp #b1 #b10010101110 #b1101110110000001110100100011111011101011111011000011)))
(assert (= r (fp #b0 #b10001110001 #x957d665fe9e82)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
