(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5016388794192374600555694996728561818599700927734375p-450 {- 2259180670427031 -450 (-5.16497e-136)}
; Y = -1.0651746359363765126460066312574781477451324462890625p-352 {- 293520466117073 -352 (-1.16108e-106)}
; -1.5016388794192374600555694996728561818599700927734375p-450 % -1.0651746359363765126460066312574781477451324462890625p-352 == -1.5016388794192374600555694996728561818599700927734375p-450
; [HW: -1.5016388794192374600555694996728561818599700927734375p-450] 

; mpf : - 2259180670427031 -450
; mpfd: - 2259180670427031 -450 (-5.16497e-136) class: Neg. norm. non-zero
; hwf : - 2259180670427031 -450 (-5.16497e-136) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000111101 #b1000000001101011011001111101010110000001111110010111)))
(assert (= y (fp #b1 #b01010011111 #b0001000010101111010010001111000111100000000111010001)))
(assert (= r (fp #b1 #b01000111101 #x806b67d581f97)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
