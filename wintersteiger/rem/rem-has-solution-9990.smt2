(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8075022624116996450283068043063394725322723388671875p36 {+ 3636666888098163 36 (1.24211e+011)}
; Y = -1.616506974821999786939841214916668832302093505859375p-486 {- 2776500582079670 -486 (-8.09095e-147)}
; 1.8075022624116996450283068043063394725322723388671875p36 % -1.616506974821999786939841214916668832302093505859375p-486 == 1.33076892746077657392334003816358745098114013671875p-486
; [HW: 1.33076892746077657392334003816358745098114013671875p-486] 

; mpf : + 1489650818458092 -486
; mpfd: + 1489650818458092 -486 (6.66077e-147) class: Pos. norm. non-zero
; hwf : + 1489650818458092 -486 (6.66077e-147) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100011 #b1100111010111000011101111110000010000001000101110011)))
(assert (= y (fp #b1 #b01000011001 #b1001110111010011011001101010111010011101110010110110)))
(assert (= r (fp #b1 #b01000010111 #x249883c28eb28)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
