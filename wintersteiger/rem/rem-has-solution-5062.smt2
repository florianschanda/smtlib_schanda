(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.222321302454739022635976652964018285274505615234375p-978 {+ 1001246134891686 -978 (4.78464e-295)}
; Y = 1.6523670386901752049624292340013198554515838623046875p200 {+ 2937999952353867 200 (2.65525e+060)}
; 1.222321302454739022635976652964018285274505615234375p-978 % 1.6523670386901752049624292340013198554515838623046875p200 == 1.222321302454739022635976652964018285274505615234375p-978
; [HW: 1.222321302454739022635976652964018285274505615234375p-978] 

; mpf : + 1001246134891686 -978
; mpfd: + 1001246134891686 -978 (4.78464e-295) class: Pos. norm. non-zero
; hwf : + 1001246134891686 -978 (4.78464e-295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000101101 #b0011100011101010000011001000001100111111010010100110)))
(assert (= y (fp #b0 #b10011000111 #b1010011100000001100001101011100000101001101001001011)))
(assert (= r (fp #b0 #b00000101101 #x38ea0c833f4a6)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
