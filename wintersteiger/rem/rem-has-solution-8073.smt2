(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4396779518433608924254940575337968766689300537109375p1023 {+ 1980133460084783 1023 (1.29405e+308)}
; Y = -1.07694206286445837150722582009620964527130126953125p-926 {- 346516245645492 -926 (-1.89853e-279)}
; 1.4396779518433608924254940575337968766689300537109375p1023 % -1.07694206286445837150722582009620964527130126953125p-926 == 1.74040153838660671681282110512256622314453125p-927
; [HW: 1.74040153838660671681282110512256622314453125p-927] 

; mpf : + 3334472092382464 -927
; mpfd: + 3334472092382464 -927 (1.53406e-279) class: Pos. norm. non-zero
; hwf : + 3334472092382464 -927 (1.53406e-279) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111111110 #b0111000010001110101110111111011111110000100000101111)))
(assert (= y (fp #b1 #b00001100001 #b0001001110110010011110011001101110110000100010110100)))
(assert (= r (fp #b1 #b00001011110 #xa767fab8671a0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
