(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.53410636312148351834139248239807784557342529296875p523 {+ 2405401217930124 523 (4.21253e+157)}
; Y = -1.7531134860957344745457930912380106747150421142578125p329 {- 3391721615348445 329 (-1.91725e+099)}
; 1.53410636312148351834139248239807784557342529296875p523 % -1.7531134860957344745457930912380106747150421142578125p329 == 1.628793594629682761620870223850943148136138916015625p328
; [HW: 1.628793594629682761620870223850943148136138916015625p328] 

; mpf : + 2831834598467194 328
; mpfd: + 2831834598467194 328 (8.90645e+098) class: Pos. norm. non-zero
; hwf : + 2831834598467194 328 (8.90645e+098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001010 #b1000100010111011001100011101001000110001001110001100)))
(assert (= y (fp #b1 #b10101001000 #b1100000011001100000010111010000011110101001011011101)))
(assert (= r (fp #b0 #b10101000111 #xa0f89df4de67a)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
