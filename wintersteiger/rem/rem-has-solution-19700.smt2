(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0177537655522297388444030730170197784900665283203125p433 {+ 79955851925445 433 (2.25752e+130)}
; Y = -1.4216898122708467866459614015184342861175537109375p976 {- 1899122081408920 976 (-9.07989e+293)}
; 1.0177537655522297388444030730170197784900665283203125p433 % -1.4216898122708467866459614015184342861175537109375p976 == 1.0177537655522297388444030730170197784900665283203125p433
; [HW: 1.0177537655522297388444030730170197784900665283203125p433] 

; mpf : + 79955851925445 433
; mpfd: + 79955851925445 433 (2.25752e+130) class: Pos. norm. non-zero
; hwf : + 79955851925445 433 (2.25752e+130) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110000 #b0000010010001011100000101100001001101101011111000101)))
(assert (= y (fp #b1 #b11111001111 #b0110101111110011110111010001000011000010011110011000)))
(assert (= r (fp #b0 #b10110110000 #x048b82c26d7c5)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
