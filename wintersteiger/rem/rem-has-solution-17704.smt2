(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1899693359614567089721504089538939297199249267578125p-544 {+ 855545830647837 -544 (2.06642e-164)}
; Y = -1.9983239929226546127694064125535078346729278564453125p675 {- 4496051562521493 675 (-3.13266e+203)}
; 1.1899693359614567089721504089538939297199249267578125p-544 % -1.9983239929226546127694064125535078346729278564453125p675 == 1.1899693359614567089721504089538939297199249267578125p-544
; [HW: 1.1899693359614567089721504089538939297199249267578125p-544] 

; mpf : + 855545830647837 -544
; mpfd: + 855545830647837 -544 (2.06642e-164) class: Pos. norm. non-zero
; hwf : + 855545830647837 -544 (2.06642e-164) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111011111 #b0011000010100001110101001001010100110010100000011101)))
(assert (= y (fp #b1 #b11010100010 #b1111111110010010001010010100010001101010001110010101)))
(assert (= r (fp #b0 #b00111011111 #x30a1d4953281d)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
