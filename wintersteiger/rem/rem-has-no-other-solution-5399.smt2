(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5885331138575515819155725694145075976848602294921875p-734 {- 2650517512264067 -734 (-1.75784e-221)}
; Y = -1.3518090375189240059938811100437305867671966552734375p719 {- 1584407050275799 719 (-3.72805e+216)}
; -1.5885331138575515819155725694145075976848602294921875p-734 % -1.3518090375189240059938811100437305867671966552734375p719 == -1.5885331138575515819155725694145075976848602294921875p-734
; [HW: -1.5885331138575515819155725694145075976848602294921875p-734] 

; mpf : - 2650517512264067 -734
; mpfd: - 2650517512264067 -734 (-1.75784e-221) class: Neg. norm. non-zero
; hwf : - 2650517512264067 -734 (-1.75784e-221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100100001 #b1001011010101010000110110010110010100001100110000011)))
(assert (= y (fp #b1 #b11011001110 #b0101101000010000001010000011011010010100101111010111)))
(assert (= r (fp #b1 #b00100100001 #x96aa1b2ca1983)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
