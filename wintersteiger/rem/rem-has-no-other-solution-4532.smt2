(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7250433704242993382393933643470518290996551513671875p-271 {+ 3265305052870323 -271 (4.54644e-082)}
; Y = 1.2756230561572292625527325071743689477443695068359375p726 {+ 1241295893004415 726 (4.50297e+218)}
; 1.7250433704242993382393933643470518290996551513671875p-271 % 1.2756230561572292625527325071743689477443695068359375p726 == 1.7250433704242993382393933643470518290996551513671875p-271
; [HW: 1.7250433704242993382393933643470518290996551513671875p-271] 

; mpf : + 3265305052870323 -271
; mpfd: + 3265305052870323 -271 (4.54644e-082) class: Pos. norm. non-zero
; hwf : + 3265305052870323 -271 (4.54644e-082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110000 #b1011100110011100011100010011110000100111011010110011)))
(assert (= y (fp #b0 #b11011010101 #b0100011010001111001110111000110000111000000001111111)))
(assert (= r (fp #b0 #b01011110000 #xb99c713c276b3)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
