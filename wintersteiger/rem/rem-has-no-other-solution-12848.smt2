(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3438425058620182550583876945893280208110809326171875p535 {+ 1548528981274323 535 (1.51146e+161)}
; Y = 1.7502284261254457131684603155008517205715179443359375p-815 {+ 3378728460341311 -815 (8.01029e-246)}
; 1.3438425058620182550583876945893280208110809326171875p535 % 1.7502284261254457131684603155008517205715179443359375p-815 == 1.46849941290039165409098131931386888027191162109375p-816
; [HW: 1.46849941290039165409098131931386888027191162109375p-816] 

; mpf : + 2109933781361500 -816
; mpfd: + 2109933781361500 -816 (3.36045e-246) class: Pos. norm. non-zero
; hwf : + 2109933781361500 -816 (3.36045e-246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010110 #b0101100000000110000011111111110110100110111011010011)))
(assert (= y (fp #b0 #b00011010000 #b1100000000001110111110000101101010111101000000111111)))
(assert (= r (fp #b0 #b00011001111 #x77ef93d89a35c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
