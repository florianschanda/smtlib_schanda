(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2041660820032842327265143467229790985584259033203125p-116 {+ 919482290831685 -116 (1.44946e-035)}
; Y = 1.8239676656671914845020410211873240768909454345703125p1004 {+ 3710820472064101 1004 (3.12704e+302)}
; 1.2041660820032842327265143467229790985584259033203125p-116 % 1.8239676656671914845020410211873240768909454345703125p1004 == 1.2041660820032842327265143467229790985584259033203125p-116
; [HW: 1.2041660820032842327265143467229790985584259033203125p-116] 

; mpf : + 919482290831685 -116
; mpfd: + 919482290831685 -116 (1.44946e-035) class: Pos. norm. non-zero
; hwf : + 919482290831685 -116 (1.44946e-035) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110001011 #b0011010001000100001110100111010100101000000101000101)))
(assert (= y (fp #b0 #b11111101011 #b1101001011101111100010111000000100000000100001100101)))
(assert (= r (fp #b0 #b01110001011 #x34443a7528145)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
