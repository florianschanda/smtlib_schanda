(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9627370540155573142016010024235583841800689697265625p727 {- 4335782237720233 727 (-1.3857e+219)}
; Y = 1.380105661840544950536013857345096766948699951171875p339 {+ 1711843717026494 339 (1.54554e+102)}
; -1.9627370540155573142016010024235583841800689697265625p727 % 1.380105661840544950536013857345096766948699951171875p339 == -1.2935300063174910434327102848328649997711181640625p338
; [HW: -1.2935300063174910434327102848328649997711181640625p338] 

; mpf : - 1321941627073512 338
; mpfd: - 1321941627073512 338 (-7.24294e+101) class: Neg. norm. non-zero
; hwf : - 1321941627073512 338 (-7.24294e+101) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011010110 #b1111011001110101111011111000000110100100111010101001)))
(assert (= y (fp #b0 #b10101010010 #b0110000101001110100110101100101010100001001010111110)))
(assert (= r (fp #b1 #b10101010001 #x4b24c851873e8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
