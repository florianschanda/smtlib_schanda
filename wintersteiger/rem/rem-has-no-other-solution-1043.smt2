(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -0.158382464781219756133623377536423504352569580078125p-1022 {- 713291209370722 -1023 (-3.52413e-309)}
; Y = 1.0802635835238738604147101796115748584270477294921875p332 {+ 361475044849539 332 (9.45123e+099)}
; -0.158382464781219756133623377536423504352569580078125p-1022 % 1.0802635835238738604147101796115748584270477294921875p332 == -0.158382464781219756133623377536423504352569580078125p-1022
; [HW: -0.158382464781219756133623377536423504352569580078125p-1022] 

; mpf : - 713291209370722 -1023
; mpfd: - 713291209370722 -1023 (-3.52413e-309) class: Neg. denorm.
; hwf : - 713291209370722 -1023 (-3.52413e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0010100010001011110000001101001001111110110001100010)))
(assert (= y (fp #b0 #b10101001011 #b0001010010001100001001110111101001001011011110000011)))
(assert (= r (fp #b1 #b00000000000 #x288bc0d27ec62)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
