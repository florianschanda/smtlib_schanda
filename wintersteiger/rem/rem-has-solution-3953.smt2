(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.276021803394289388933202644693665206432342529296875p721 {+ 1243091690912654 721 (1.40762e+217)}
; Y = -1.8229522311973178627653169314726255834102630615234375p214 {- 3706247361763959 214 (-4.79948e+064)}
; 1.276021803394289388933202644693665206432342529296875p721 % -1.8229522311973178627653169314726255834102630615234375p214 == 1.27326879972753825853715170524083077907562255859375p214
; [HW: 1.27326879972753825853715170524083077907562255859375p214] 

; mpf : + 1230693264624924 214
; mpfd: + 1230693264624924 214 (3.35227e+064) class: Pos. norm. non-zero
; hwf : + 1230693264624924 214 (3.35227e+064) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011010000 #b0100011010101001010111010110101010001111101110001110)))
(assert (= y (fp #b1 #b10011010101 #b1101001010101100111111110101011100101001101001110111)))
(assert (= r (fp #b1 #b10011010100 #x19701b52a1ab6)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
