(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.25284011050277488408255521790124475955963134765625p42 {+ 1138690627444612 42 (5.51005e+012)}
; Y = 1.89410279027959926878565966035239398479461669921875p222 {+ 4026680993134124 222 (1.27662e+067)}
; 1.25284011050277488408255521790124475955963134765625p42 % 1.89410279027959926878565966035239398479461669921875p222 == 1.25284011050277488408255521790124475955963134765625p42
; [HW: 1.25284011050277488408255521790124475955963134765625p42] 

; mpf : + 1138690627444612 42
; mpfd: + 1138690627444612 42 (5.51005e+012) class: Pos. norm. non-zero
; hwf : + 1138690627444612 42 (5.51005e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000101001 #b0100000010111010001000010010010110111001111110000100)))
(assert (= y (fp #b0 #b10011011101 #b1110010011100011111010111010001110000011011000101100)))
(assert (= r (fp #b0 #b10000101001 #x40ba2125b9f84)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
