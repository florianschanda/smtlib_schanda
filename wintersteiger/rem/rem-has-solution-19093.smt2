(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9226332845241456137586055774590931832790374755859375p70 {- 4155170916382559 70 (-2.26984e+021)}
; Y = -1.4330420223921367384178893189528025686740875244140625p-588 {- 1950247890680993 -588 (-1.41456e-177)}
; -1.9226332845241456137586055774590931832790374755859375p70 % -1.4330420223921367384178893189528025686740875244140625p-588 == -1.28311784391631444890435886918567121028900146484375p-590
; [HW: -1.28311784391631444890435886918567121028900146484375p-590] 

; mpf : - 1275049416363452 -590
; mpfd: - 1275049416363452 -590 (-3.16642e-178) class: Neg. norm. non-zero
; hwf : - 1275049416363452 -590 (-3.16642e-178) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001000101 #b1110110000110001101100011110011100111011011101011111)))
(assert (= y (fp #b1 #b00110110011 #b0110111011011011110101111000101111110111110010100001)))
(assert (= r (fp #b1 #b00110110001 #x487a693888dbc)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
