(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0569967304032534816116140063968487083911895751953125p894 {+ 256690453805429 894 (1.39601e+269)}
; Y = 1.8190907160452820523488526305300183594226837158203125p594 {+ 3688856643564165 594 (1.17943e+179)}
; 1.0569967304032534816116140063968487083911895751953125p894 % 1.8190907160452820523488526305300183594226837158203125p594 == 1.33698951775601937441706468234769999980926513671875p593
; [HW: 1.33698951775601937441706468234769999980926513671875p593] 

; mpf : + 1517665866593772 593
; mpfd: + 1517665866593772 593 (4.33426e+178) class: Pos. norm. non-zero
; hwf : + 1517665866593772 593 (4.33426e+178) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101111101 #b0000111010010111010101100111010100001111100101110101)))
(assert (= y (fp #b0 #b11001010001 #b1101000110101111111011011101110111011111001010000101)))
(assert (= r (fp #b0 #b11001010000 #x5644f1eddb5ec)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
