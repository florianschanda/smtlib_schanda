(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5297418810383833776000983561971224844455718994140625p794 {+ 2385745338047009 794 (1.5938e+239)}
; Y = 1.3854623678977724399175031066988594830036163330078125p948 {+ 1735968176429757 948 (3.29633e+285)}
; 1.5297418810383833776000983561971224844455718994140625p794 % 1.3854623678977724399175031066988594830036163330078125p948 == 1.5297418810383833776000983561971224844455718994140625p794
; [HW: 1.5297418810383833776000983561971224844455718994140625p794] 

; mpf : + 2385745338047009 794
; mpfd: + 2385745338047009 794 (1.5938e+239) class: Pos. norm. non-zero
; hwf : + 2385745338047009 794 (1.5938e+239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100011001 #b1000011110011101001010011111011001100001101000100001)))
(assert (= y (fp #b0 #b11110110011 #b0110001010101101101010010110011111110101101010111101)))
(assert (= r (fp #b0 #b11100011001 #x879d29f661a21)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
