(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.593527110929513934678425357560627162456512451171875p-136 {+ 2673008475616446 -136 (1.82928e-041)}
; Y = 1.4473291856958869772142861620523035526275634765625p-436 {+ 2014591554011944 -436 (8.15623e-132)}
; 1.593527110929513934678425357560627162456512451171875p-136 % 1.4473291856958869772142861620523035526275634765625p-436 == 1.12813303610777637686624075286090373992919921875p-438
; [HW: 1.12813303610777637686624075286090373992919921875p-438] 

; mpf : + 577059893668832 -438
; mpfd: + 577059893668832 -438 (1.58936e-132) class: Pos. norm. non-zero
; hwf : + 577059893668832 -438 (1.58936e-132) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110111 #b1001011111110001011001001000101010111011010010111110)))
(assert (= y (fp #b0 #b01001001011 #b0111001010000100001010100101111100011100001100101000)))
(assert (= r (fp #b0 #b01001001001 #x20cd539f9ebe0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
