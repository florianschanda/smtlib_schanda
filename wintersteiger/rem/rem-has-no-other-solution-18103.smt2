(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7927688734283984128836664240225218236446380615234375p-201 {+ 3570313602963063 -201 (5.57821e-061)}
; Y = 1.4663915436654131330129757770919241011142730712890625p-473 {+ 2100440782260305 -473 (6.0126e-143)}
; 1.7927688734283984128836664240225218236446380615234375p-201 % 1.4663915436654131330129757770919241011142730712890625p-473 == 1.3121566694354578341830119825317524373531341552734375p-473
; [HW: 1.3121566694354578341830119825317524373531341552734375p-473] 

; mpf : + 1405828660150743 -473
; mpfd: + 1405828660150743 -473 (5.38019e-143) class: Pos. norm. non-zero
; hwf : + 1405828660150743 -473 (5.38019e-143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100110110 #b1100101011110010111001101010000010101001011001110111)))
(assert (= y (fp #b0 #b01000100110 #b0111011101100101011011111010101100101100100001010001)))
(assert (= r (fp #b1 #b01000100011 #x3bdf7e65c33d0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
