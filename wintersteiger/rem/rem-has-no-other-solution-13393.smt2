(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.008987137413527523932543772389180958271026611328125p948 {+ 40474468706690 948 (2.40061e+285)}
; Y = 1.7526896590874603276688503683544695377349853515625p-612 {+ 3389812868191912 -612 (1.03121e-184)}
; 1.008987137413527523932543772389180958271026611328125p948 % 1.7526896590874603276688503683544695377349853515625p-612 == 1.915981409656883016623396542854607105255126953125p-613
; [HW: 1.915981409656883016623396542854607105255126953125p-613] 

; mpf : + 4125213535209040 -613
; mpfd: + 4125213535209040 -613 (5.63643e-185) class: Pos. norm. non-zero
; hwf : + 4125213535209040 -613 (5.63643e-185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110011 #b0000001001001100111110110010010101000110100110000010)))
(assert (= y (fp #b0 #b00110011011 #b1100000010110000010001001111110111010001011010101000)))
(assert (= r (fp #b1 #b00110011010 #x96e2c8056a700)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
