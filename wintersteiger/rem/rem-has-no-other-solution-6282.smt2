(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.800494970867621891130738731590099632740020751953125p878 {- 3605108852511378 878 (-3.62851e+264)}
; Y = 1.562962851309289913359634738299064338207244873046875p-577 {+ 2535359287379950 -577 (3.15967e-174)}
; -1.800494970867621891130738731590099632740020751953125p878 % 1.562962851309289913359634738299064338207244873046875p-577 == -1.2421335628192604616515382076613605022430419921875p-578
; [HW: -1.2421335628192604616515382076613605022430419921875p-578] 

; mpf : - 1090472623286712 -578
; mpfd: - 1090472623286712 -578 (-1.25554e-174) class: Neg. norm. non-zero
; hwf : - 1090472623286712 -578 (-1.25554e-174) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101101 #b1100110011101101001111010000100001111101001010010010)))
(assert (= y (fp #b0 #b00110111110 #b1001000000011110010101010101101100111100011111101110)))
(assert (= r (fp #b1 #b00110111101 #x3dfc7715929b8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
