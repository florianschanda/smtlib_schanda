(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.19347900308118060053175213397480547428131103515625p555 {+ 871351966180420 555 (1.40755e+167)}
; Y = 1.5562008934325841646995058908942155539989471435546875p-941 {+ 2504906136406123 -941 (8.3722e-284)}
; 1.19347900308118060053175213397480547428131103515625p555 % 1.5562008934325841646995058908942155539989471435546875p-941 == 1.60778086829252941925005870871245861053466796875p-946
; [HW: 1.60778086829252941925005870871245861053466796875p-946] 

; mpf : + 2737201691965152 -946
; mpfd: + 2737201691965152 -946 (2.70303e-285) class: Pos. norm. non-zero
; hwf : + 2737201691965152 -946 (2.70303e-285) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000101010 #b0011000110000111110101110000011010110010010001000100)))
(assert (= y (fp #b0 #b00001010010 #b1000111001100011001011101000011101001100100001101011)))
(assert (= r (fp #b0 #b00001001101 #x9b9786e8736e0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
