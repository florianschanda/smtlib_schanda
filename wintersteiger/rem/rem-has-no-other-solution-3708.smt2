(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2812447716964723287702554443967528641223907470703125p-573 {- 1266613849012133 -573 (-4.14424e-173)}
; Y = 1.702805672984526008661987361847423017024993896484375p-733 {+ 3165155366966982 -733 (3.76858e-221)}
; -1.2812447716964723287702554443967528641223907470703125p-573 % 1.702805672984526008661987361847423017024993896484375p-733 == -1.429964632067891816546989502967335283756256103515625p-733
; [HW: -1.429964632067891816546989502967335283756256103515625p-733] 

; mpf : - 1936388556763450 -733
; mpfd: - 1936388556763450 -733 (-3.16474e-221) class: Neg. norm. non-zero
; hwf : - 1936388556763450 -733 (-3.16474e-221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111000010 #b0100011111111111101010000100100010011011011110100101)))
(assert (= y (fp #b0 #b00100100010 #b1011001111101011000100101001010011101001011011000110)))
(assert (= r (fp #b0 #b00100100000 #x1763a44ef9630)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
