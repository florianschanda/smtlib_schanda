(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0254531915935942709694472796400077641010284423828125p-303 {- 114630984176301 -303 (-6.29256e-092)}
; Y = -1.94320504418021133830052349367178976535797119140625p23 {- 4247817885503972 23 (-1.63008e+007)}
; -1.0254531915935942709694472796400077641010284423828125p-303 % -1.94320504418021133830052349367178976535797119140625p23 == -1.0254531915935942709694472796400077641010284423828125p-303
; [HW: -1.0254531915935942709694472796400077641010284423828125p-303] 

; mpf : - 114630984176301 -303
; mpfd: - 114630984176301 -303 (-6.29256e-092) class: Neg. norm. non-zero
; hwf : - 114630984176301 -303 (-6.29256e-092) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011010000 #b0000011010000100000110011011000101111001001010101101)))
(assert (= y (fp #b1 #b10000010110 #b1111000101110101111000101100001000101101000111100100)))
(assert (= r (fp #b1 #b01011010000 #x068419b1792ad)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
