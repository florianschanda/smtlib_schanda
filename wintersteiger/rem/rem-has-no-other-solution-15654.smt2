(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8923817821669615124591246058116666972637176513671875p-714 {- 4018930261639347 -714 (-2.1958e-215)}
; Y = 1.34021539459245442316159824258647859096527099609375p-461 {+ 1532193924312284 -461 (2.25085e-139)}
; -1.8923817821669615124591246058116666972637176513671875p-714 % 1.34021539459245442316159824258647859096527099609375p-461 == -1.8923817821669615124591246058116666972637176513671875p-714
; [HW: -1.8923817821669615124591246058116666972637176513671875p-714] 

; mpf : - 4018930261639347 -714
; mpfd: - 4018930261639347 -714 (-2.1958e-215) class: Neg. norm. non-zero
; hwf : - 4018930261639347 -714 (-2.1958e-215) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110101 #b1110010001110011001000011110100111110100000010110011)))
(assert (= y (fp #b0 #b01000110010 #b0101011100011000010110110010100101011110110011011100)))
(assert (= r (fp #b1 #b00100110101 #xe47321e9f40b3)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
