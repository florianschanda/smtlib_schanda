(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7335599404888364372112619093968532979488372802734375p515 {- 3303660274639447 515 (-1.85946e+155)}
; Y = 1.7347887414381368831328700252925045788288116455078125p-345 {+ 3309194302136829 -345 (2.42046e-104)}
; -1.7335599404888364372112619093968532979488372802734375p515 % 1.7347887414381368831328700252925045788288116455078125p-345 == -1.470193211324574367182549394783563911914825439453125p-346
; [HW: -1.470193211324574367182549394783563911914825439453125p-346] 

; mpf : - 2117561971313490 -346
; mpfd: - 2117561971313490 -346 (-1.02564e-104) class: Neg. norm. non-zero
; hwf : - 2117561971313490 -346 (-1.02564e-104) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000000010 #b1011101111001010100101011001001000001110001001010111)))
(assert (= y (fp #b0 #b01010100110 #b1011110000011011000111010110110111110010000111111101)))
(assert (= r (fp #b1 #b01010100101 #x785e951170b52)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
