(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.74611001972651269653624694910831749439239501953125p-152 {- 3360180806817716 -152 (-3.05853e-046)}
; Y = 1.6202470862567406317822360506397671997547149658203125p488 {+ 2793344546543493 488 (1.29485e+147)}
; -1.74611001972651269653624694910831749439239501953125p-152 % 1.6202470862567406317822360506397671997547149658203125p488 == -1.74611001972651269653624694910831749439239501953125p-152
; [HW: -1.74611001972651269653624694910831749439239501953125p-152] 

; mpf : - 3360180806817716 -152
; mpfd: - 3360180806817716 -152 (-3.05853e-046) class: Neg. norm. non-zero
; hwf : - 3360180806817716 -152 (-3.05853e-046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100111 #b1011111100000001000100001111010111110001011110110100)))
(assert (= y (fp #b0 #b10111100111 #b1001111011001000100000110101011011101001011110000101)))
(assert (= r (fp #b1 #b01101100111 #xbf0110f5f17b4)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
