(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6584470357554448316506068294984288513660430908203125p-583 {+ 2965381824871429 -583 (5.23859e-176)}
; Y = 1.13787631353766727215770515613257884979248046875p960 {+ 620939714271456 960 (1.1089e+289)}
; 1.6584470357554448316506068294984288513660430908203125p-583 % 1.13787631353766727215770515613257884979248046875p960 == 1.6584470357554448316506068294984288513660430908203125p-583
; [HW: 1.6584470357554448316506068294984288513660430908203125p-583] 

; mpf : + 2965381824871429 -583
; mpfd: + 2965381824871429 -583 (5.23859e-176) class: Pos. norm. non-zero
; hwf : + 2965381824871429 -583 (5.23859e-176) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111000 #b1010100010001111111111000010010010110111110000000101)))
(assert (= y (fp #b0 #b11110111111 #b0010001101001011110111001011000110001001100011100000)))
(assert (= r (fp #b0 #b00110111000 #xa88ffc24b7c05)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
