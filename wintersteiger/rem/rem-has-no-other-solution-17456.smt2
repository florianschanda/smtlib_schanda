(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3617991509291400564762852809508331120014190673828125p263 {+ 1629398521307437 263 (2.01838e+079)}
; Y = 1.7090582158545635227397951894090510904788970947265625p592 {+ 3193314316706601 592 (2.77022e+178)}
; 1.3617991509291400564762852809508331120014190673828125p263 % 1.7090582158545635227397951894090510904788970947265625p592 == 1.3617991509291400564762852809508331120014190673828125p263
; [HW: 1.3617991509291400564762852809508331120014190673828125p263] 

; mpf : + 1629398521307437 263
; mpfd: + 1629398521307437 263 (2.01838e+079) class: Pos. norm. non-zero
; hwf : + 1629398521307437 263 (2.01838e+079) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100000110 #b0101110010011110110111101000000011110110000100101101)))
(assert (= y (fp #b0 #b11001001111 #b1011010110000100110101101101100000001110001100101001)))
(assert (= r (fp #b0 #b10100000110 #x5c9ede80f612d)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
