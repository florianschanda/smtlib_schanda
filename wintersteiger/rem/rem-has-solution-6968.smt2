(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.381950056050037733967883468721993267536163330078125p-809 {+ 1720150130101090 -809 (4.04786e-244)}
; Y = -1.73983641306984448959838118753395974636077880859375p-130 {- 3331926994216476 -130 (-1.27823e-039)}
; 1.381950056050037733967883468721993267536163330078125p-809 % -1.73983641306984448959838118753395974636077880859375p-130 == 1.381950056050037733967883468721993267536163330078125p-809
; [HW: 1.381950056050037733967883468721993267536163330078125p-809] 

; mpf : + 1720150130101090 -809
; mpfd: + 1720150130101090 -809 (4.04786e-244) class: Pos. norm. non-zero
; hwf : + 1720150130101090 -809 (4.04786e-244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010110 #b0110000111000111011110101001011101110000101101100010)))
(assert (= y (fp #b1 #b01101111101 #b1011110101100101111010110100111010000110011000011100)))
(assert (= r (fp #b0 #b00011010110 #x61c77a9770b62)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
