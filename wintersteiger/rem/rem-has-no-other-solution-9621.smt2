(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6095666035714077946039424205082468688488006591796875p-456 {+ 2745243928701691 -456 (8.6503e-138)}
; Y = 1.3160547942758313855193819108535535633563995361328125p195 {+ 1423384253729293 195 (6.60881e+058)}
; 1.6095666035714077946039424205082468688488006591796875p-456 % 1.3160547942758313855193819108535535633563995361328125p195 == 1.6095666035714077946039424205082468688488006591796875p-456
; [HW: 1.6095666035714077946039424205082468688488006591796875p-456] 

; mpf : + 2745243928701691 -456
; mpfd: + 2745243928701691 -456 (8.6503e-138) class: Pos. norm. non-zero
; hwf : + 2745243928701691 -456 (8.6503e-138) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000110111 #b1001110000001100100011101001001100010010101011111011)))
(assert (= y (fp #b0 #b10011000010 #b0101000011101000111101111000110100101000101000001101)))
(assert (= r (fp #b0 #b01000110111 #x9c0c8e9312afb)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
