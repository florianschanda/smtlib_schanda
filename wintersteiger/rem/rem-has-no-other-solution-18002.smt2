(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.91399257711466308506942368694581091403961181640625p-252 {+ 4116256629712996 -252 (2.64473e-076)}
; Y = 1.401803268562872073488279056618921458721160888671875p798 {+ 1809561050575998 798 (2.33681e+240)}
; 1.91399257711466308506942368694581091403961181640625p-252 % 1.401803268562872073488279056618921458721160888671875p798 == 1.91399257711466308506942368694581091403961181640625p-252
; [HW: 1.91399257711466308506942368694581091403961181640625p-252] 

; mpf : + 4116256629712996 -252
; mpfd: + 4116256629712996 -252 (2.64473e-076) class: Pos. norm. non-zero
; hwf : + 4116256629712996 -252 (2.64473e-076) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000011 #b1110100111111011011010101110001101111110100001100100)))
(assert (= y (fp #b0 #b11100011101 #b0110011011011100100101000011100111100111010001111110)))
(assert (= r (fp #b0 #b01100000011 #xe9fb6ae37e864)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
