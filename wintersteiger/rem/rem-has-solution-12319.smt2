(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9747006564802027650529225866193883121013641357421875p616 {+ 4389661513322019 616 (5.37005e+185)}
; Y = 1.4952283219324622454138307148241437971591949462890625p673 {+ 2230310086118353 673 (5.85996e+202)}
; 1.9747006564802027650529225866193883121013641357421875p616 % 1.4952283219324622454138307148241437971591949462890625p673 == 1.9747006564802027650529225866193883121013641357421875p616
; [HW: 1.9747006564802027650529225866193883121013641357421875p616] 

; mpf : + 4389661513322019 616
; mpfd: + 4389661513322019 616 (5.37005e+185) class: Pos. norm. non-zero
; hwf : + 4389661513322019 616 (5.37005e+185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001100111 #b1111100110000101111110110111001011111000111000100011)))
(assert (= y (fp #b0 #b11010100000 #b0111111011000111010010001000011011000000101111010001)))
(assert (= r (fp #b0 #b11001100111 #xf985fb72f8e23)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
