(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3563662613469105178154450186411850154399871826171875p-901 {+ 1604930961809363 -901 (8.02326e-272)}
; Y = 1.7917632996897967512239802090334706008434295654296875p-759 {+ 3565784901448603 -759 (5.909e-229)}
; 1.3563662613469105178154450186411850154399871826171875p-901 % 1.7917632996897967512239802090334706008434295654296875p-759 == 1.3563662613469105178154450186411850154399871826171875p-901
; [HW: 1.3563662613469105178154450186411850154399871826171875p-901] 

; mpf : + 1604930961809363 -901
; mpfd: + 1604930961809363 -901 (8.02326e-272) class: Pos. norm. non-zero
; hwf : + 1604930961809363 -901 (8.02326e-272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001111010 #b0101101100111010110100011011110111100001111111010011)))
(assert (= y (fp #b0 #b00100001000 #b1100101010110000111111111110011001010111001110011011)))
(assert (= r (fp #b0 #b00001111010 #x5b3ad1bde1fd3)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
