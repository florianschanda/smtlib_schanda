(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4275913913349571604527454837807454168796539306640625p-717 {- 1925700430682945 -717 (-2.0706e-216)}
; Y = -1.900555715029852432707002662937156856060028076171875p-372 {- 4055742382634814 -372 (-1.97571e-112)}
; -1.4275913913349571604527454837807454168796539306640625p-717 % -1.900555715029852432707002662937156856060028076171875p-372 == -1.4275913913349571604527454837807454168796539306640625p-717
; [HW: -1.4275913913349571604527454837807454168796539306640625p-717] 

; mpf : - 1925700430682945 -717
; mpfd: - 1925700430682945 -717 (-2.0706e-216) class: Neg. norm. non-zero
; hwf : - 1925700430682945 -717 (-2.0706e-216) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110010 #b0110110101110110101000010010000111010101101101000001)))
(assert (= y (fp #b1 #b01010001011 #b1110011010001010110100011100000001000111011100111110)))
(assert (= r (fp #b1 #b00100110010 #x6d76a121d5b41)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
