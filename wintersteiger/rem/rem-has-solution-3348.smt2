(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0808111068209711458365518410573713481426239013671875p706 {+ 363940870566323 706 (3.63854e+212)}
; Y = 1.4574000786157019771138720898306928575038909912109375p184 {+ 2059946823612911 184 (3.57353e+055)}
; 1.0808111068209711458365518410573713481426239013671875p706 % 1.4574000786157019771138720898306928575038909912109375p184 == 1.1951460840238958827086435121600516140460968017578125p184
; [HW: 1.1951460840238958827086435121600516140460968017578125p184] 

; mpf : + 878859831292829 184
; mpfd: + 878859831292829 184 (2.93049e+055) class: Pos. norm. non-zero
; hwf : + 878859831292829 184 (2.93049e+055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000001 #b0001010010110000000010010110010011110011000110110011)))
(assert (= y (fp #b0 #b10010110111 #b0111010100011000001010111110101011010111100111101111)))
(assert (= r (fp #b1 #b10010110101 #x0c8c4fa811948)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
