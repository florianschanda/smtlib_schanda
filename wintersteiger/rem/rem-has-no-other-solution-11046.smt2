(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.175581265981435752365769076277501881122589111328125p414 {- 790747724047234 414 (-4.9736e+124)}
; Y = -1.9429186557149720204762388675590045750141143798828125p1020 {- 4246528106518637 1020 (-2.18298e+307)}
; -1.175581265981435752365769076277501881122589111328125p414 % -1.9429186557149720204762388675590045750141143798828125p1020 == -1.175581265981435752365769076277501881122589111328125p414
; [HW: -1.175581265981435752365769076277501881122589111328125p414] 

; mpf : - 790747724047234 414
; mpfd: - 790747724047234 414 (-4.9736e+124) class: Neg. norm. non-zero
; hwf : - 790747724047234 414 (-4.9736e+124) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110011101 #b0010110011110010111001001101001100101110001110000010)))
(assert (= y (fp #b1 #b11111111011 #b1111000101100011000111011111010100010101100001101101)))
(assert (= r (fp #b1 #b10110011101 #x2cf2e4d32e382)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
