(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.17861220171634339948241176898591220378875732421875p-814 {+ 804397845093548 -814 (1.07883e-245)}
; Y = 1.1747998565581807550728399291983805596828460693359375p660 {+ 787228568859839 660 (5.62032e+198)}
; 1.17861220171634339948241176898591220378875732421875p-814 % 1.1747998565581807550728399291983805596828460693359375p660 == 1.17861220171634339948241176898591220378875732421875p-814
; [HW: 1.17861220171634339948241176898591220378875732421875p-814] 

; mpf : + 804397845093548 -814
; mpfd: + 804397845093548 -814 (1.07883e-245) class: Pos. norm. non-zero
; hwf : + 804397845093548 -814 (1.07883e-245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010001 #b0010110110111001100001110111110100001001110010101100)))
(assert (= y (fp #b0 #b11010010011 #b0010110010111111101011101111001101000011010010111111)))
(assert (= r (fp #b0 #b00011010001 #x2db9877d09cac)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
