(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4402030680565258702330311280093155801296234130859375p-254 {+ 1982498373266719 -254 (4.97513e-077)}
; Y = 1.86084880392950413607877635513432323932647705078125p-813 {+ 3876918352599252 -813 (3.40663e-245)}
; 1.4402030680565258702330311280093155801296234130859375p-254 % 1.86084880392950413607877635513432323932647705078125p-813 == 1.85484944726224654232282773591578006744384765625p-813
; [HW: 1.85484944726224654232282773591578006744384765625p-813] 

; mpf : + 3849899652148128 -813
; mpfd: + 3849899652148128 -813 (3.39564e-245) class: Pos. norm. non-zero
; hwf : + 3849899652148128 -813 (3.39564e-245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000001 #b0111000010110001001001011111010011100110110100011111)))
(assert (= y (fp #b0 #b00011010010 #b1101110001100000100101100101001110101101100011010100)))
(assert (= r (fp #b1 #b00011001010 #x892c80aed3400)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
