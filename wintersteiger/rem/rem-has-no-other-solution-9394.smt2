(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 0.97336696320680715643902658484876155853271484375p-1022 {+ 4383655092792928 -1023 (2.16581e-308)}
; Y = -1.0263226709302848416172082579578272998332977294921875p86 {- 118546770993027 86 (-7.94079e+025)}
; 0.97336696320680715643902658484876155853271484375p-1022 % -1.0263226709302848416172082579578272998332977294921875p86 == 0.97336696320680715643902658484876155853271484375p-1022
; [HW: 0.97336696320680715643902658484876155853271484375p-1022] 

; mpf : + 4383655092792928 -1023
; mpfd: + 4383655092792928 -1023 (2.16581e-308) class: Pos. denorm.
; hwf : + 4383655092792928 -1023 (2.16581e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1111100100101110100100111100100111111010111001100000)))
(assert (= y (fp #b1 #b10001010101 #b0000011010111101000101010010001011001001111110000011)))
(assert (= r (fp #b0 #b00000000000 #xf92e93c9fae60)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
