(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0429976245959462488599456264637410640716552734375p138 {+ 193644086108120 138 (3.63432e+041)}
; Y = 1.3073330145149506531510041895671747624874114990234375p857 {+ 1384104849648183 857 (1.2563e+258)}
; 1.0429976245959462488599456264637410640716552734375p138 % 1.3073330145149506531510041895671747624874114990234375p857 == 1.0429976245959462488599456264637410640716552734375p138
; [HW: 1.0429976245959462488599456264637410640716552734375p138] 

; mpf : + 193644086108120 138
; mpfd: + 193644086108120 138 (3.63432e+041) class: Pos. norm. non-zero
; hwf : + 193644086108120 138 (3.63432e+041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010001001 #b0000101100000001111001000110111101110001111111011000)))
(assert (= y (fp #b0 #b11101011000 #b0100111010101101011000000101111001010010101000110111)))
(assert (= r (fp #b0 #b10010001001 #x0b01e46f71fd8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
