(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5434976830627793464856267746654339134693145751953125p-337 {- 2447695962918261 -337 (-5.51312e-102)}
; Y = -1.6885451507585298447366994878393597900867462158203125p914 {- 3100931684383877 914 (-2.33845e+275)}
; -1.5434976830627793464856267746654339134693145751953125p-337 % -1.6885451507585298447366994878393597900867462158203125p914 == -1.5434976830627793464856267746654339134693145751953125p-337
; [HW: -1.5434976830627793464856267746654339134693145751953125p-337] 

; mpf : - 2447695962918261 -337
; mpfd: - 2447695962918261 -337 (-5.51312e-102) class: Neg. norm. non-zero
; hwf : - 2447695962918261 -337 (-5.51312e-102) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010101110 #b1000101100100010101010100000011000110100110101110101)))
(assert (= y (fp #b1 #b11110010001 #b1011000001000100011111101011100001010011110010000101)))
(assert (= r (fp #b1 #b01010101110 #x8b22aa0634d75)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
