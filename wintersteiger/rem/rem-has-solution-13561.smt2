(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.548483807982945048564715762040577828884124755859375p323 {+ 2470151473250742 323 (2.64603e+097)}
; Y = -1.4204947985795677301013029136811383068561553955078125p-53 {- 1893740218194173 -53 (-1.57707e-016)}
; 1.548483807982945048564715762040577828884124755859375p323 % -1.4204947985795677301013029136811383068561553955078125p-53 == 1.93629327742116341681821722886525094509124755859375p-54
; [HW: 1.93629327742116341681821722886525094509124755859375p-54] 

; mpf : + 4216690055303452 -54
; mpfd: + 4216690055303452 -54 (1.07486e-016) class: Pos. norm. non-zero
; hwf : + 4216690055303452 -54 (1.07486e-016) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000010 #b1000110001101001011011110101000110101100000110110110)))
(assert (= y (fp #b1 #b01111001010 #b0110101110100101100011000001000000001001100011111101)))
(assert (= r (fp #b1 #b01111001000 #xcf345b242c1bc)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
