(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.78159749862295324618344238842837512493133544921875p-908 {+ 3520002203552044 -908 (8.23329e-274)}
; Y = 1.8175700056520358582901053523528389632701873779296875p-578 {+ 3682007972803803 -578 (1.83719e-174)}
; 1.78159749862295324618344238842837512493133544921875p-908 % 1.8175700056520358582901053523528389632701873779296875p-578 == 1.78159749862295324618344238842837512493133544921875p-908
; [HW: 1.78159749862295324618344238842837512493133544921875p-908] 

; mpf : + 3520002203552044 -908
; mpfd: + 3520002203552044 -908 (8.23329e-274) class: Pos. norm. non-zero
; hwf : + 3520002203552044 -908 (8.23329e-274) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110011 #b1100100000010110110001100000111100111000100100101100)))
(assert (= y (fp #b0 #b00110111101 #b1101000101001100010001001001010001110111010011011011)))
(assert (= r (fp #b0 #b00001110011 #xc816c60f3892c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
