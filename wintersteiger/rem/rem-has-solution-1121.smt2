(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.590495079003616307744550795177929103374481201171875p-760 {+ 2659353417764798 -760 (2.62262e-229)}
; Y = 1.1701285722092722441090018037357367575168609619140625p-992 {+ 766190974406753 -992 (2.79562e-299)}
; 1.590495079003616307744550795177929103374481201171875p-760 % 1.1701285722092722441090018037357367575168609619140625p-992 == 1.7458659027339376024201555992476642131805419921875p-995
; [HW: 1.7458659027339376024201555992476642131805419921875p-995] 

; mpf : + 3359081401620920 -995
; mpfd: + 3359081401620920 -995 (5.21393e-300) class: Pos. norm. non-zero
; hwf : + 3359081401620920 -995 (5.21393e-300) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000111 #b1001011100101010101011110111110011000100111110111110)))
(assert (= y (fp #b0 #b00000011111 #b0010101110001101100010111100110111000001000001100001)))
(assert (= r (fp #b0 #b00000011100 #xbef1115b719b8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
