(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2810355143461606974852884377469308674335479736328125p661 {+ 1265671437687245 661 (1.22571e+199)}
; Y = -1.228265246681186528832085969042964279651641845703125p-967 {- 1028015279895026 -967 (-9.8466e-292)}
; 1.2810355143461606974852884377469308674335479736328125p661 % -1.228265246681186528832085969042964279651641845703125p-967 == 1.52676193430537399109425678034313023090362548828125p-968
; [HW: 1.52676193430537399109425678034313023090362548828125p-968] 

; mpf : + 2372324851050644 -968
; mpfd: + 2372324851050644 -968 (6.11978e-292) class: Pos. norm. non-zero
; hwf : + 2372324851050644 -968 (6.11978e-292) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010100 #b0100011111110001111100011000011100100001100111001101)))
(assert (= y (fp #b1 #b00000111000 #b0011101001101111100101110101100101001111000111110010)))
(assert (= r (fp #b1 #b00000110110 #xdc0a9fe3ff6a0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
