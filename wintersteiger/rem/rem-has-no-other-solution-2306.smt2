(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.36162975942114794491999418823979794979095458984375p693 {- 1628635649775164 693 (-5.59559e+208)}
; Y = 1.2737518846470357036793075167224742472171783447265625p-763 {+ 1232868885688361 -763 (2.62542e-230)}
; -1.36162975942114794491999418823979794979095458984375p693 % 1.2737518846470357036793075167224742472171783447265625p-763 == -1.23443290365740931946447744849137961864471435546875p-763
; [HW: -1.23443290365740931946447744849137961864471435546875p-763] 

; mpf : - 1055791937554892 -763
; mpfd: - 1055791937554892 -763 (-2.54437e-230) class: Neg. norm. non-zero
; hwf : - 1055791937554892 -763 (-2.54437e-230) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010110100 #b0101110010010011110001001001010111111001011000111100)))
(assert (= y (fp #b0 #b00100000100 #b0100011000010100100110100111111111000111000000101001)))
(assert (= r (fp #b0 #b00011111111 #x4219e12eccba0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
