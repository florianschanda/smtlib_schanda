(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9262458563505926445458271700772456824779510498046875p533 {- 4171440493513995 533 (-5.41626e+160)}
; Y = 1.3076119027512251857814362665521912276744842529296875p-190 {+ 1385360850605147 -190 (8.33258e-058)}
; -1.9262458563505926445458271700772456824779510498046875p533 % 1.3076119027512251857814362665521912276744842529296875p-190 == -1.99963518906643589190252896514721214771270751953125p-191
; [HW: -1.99963518906643589190252896514721214771270751953125p-191] 

; mpf : - 4501956664986036 -191
; mpfd: - 4501956664986036 -191 (-6.37121e-058) class: Neg. norm. non-zero
; hwf : - 4501956664986036 -191 (-6.37121e-058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000010100 #b1110110100011110011100101100110100010100110100001011)))
(assert (= y (fp #b0 #b01101000001 #b0100111010111111101001110101011000101101010001011011)))
(assert (= r (fp #b0 #b01100111111 #x3b2e6e5ec3e04)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
