(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.0201794236487817801872779455152340233325958251953125p265 {- 90880044825205 265 (-6.04819e+079)}
; Y = -1.38512715062429503376506545464508235454559326171875p-170 {- 1734458492041836 -170 (-9.2553e-052)}
; -1.0201794236487817801872779455152340233325958251953125p265 % -1.38512715062429503376506545464508235454559326171875p-170 == -1.4993515731460096418459215783514082431793212890625p-171
; [HW: -1.4993515731460096418459215783514082431793212890625p-171] 

; mpf : - 2248879558747240 -171
; mpfd: - 2248879558747240 -171 (-5.00927e-052) class: Neg. norm. non-zero
; hwf : - 2248879558747240 -171 (-5.00927e-052) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001000 #b0000010100101010011110101000110010011111101001110101)))
(assert (= y (fp #b1 #b01101010101 #b0110001010010111101100010110010010111011101001101100)))
(assert (= r (fp #b0 #b01101010100 #x4559e19599070)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
