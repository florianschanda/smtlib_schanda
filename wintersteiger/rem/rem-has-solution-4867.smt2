(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1070494741557401763287771245813928544521331787109375p-43 {- 482107971917999 -43 (-1.25857e-013)}
; Y = 1.2113310586076113661846420654910616576671600341796875p46 {+ 951750476797051 46 (8.52398e+013)}
; -1.1070494741557401763287771245813928544521331787109375p-43 % 1.2113310586076113661846420654910616576671600341796875p46 == -1.1070494741557401763287771245813928544521331787109375p-43
; [HW: -1.1070494741557401763287771245813928544521331787109375p-43] 

; mpf : - 482107971917999 -43
; mpfd: - 482107971917999 -43 (-1.25857e-013) class: Neg. norm. non-zero
; hwf : - 482107971917999 -43 (-1.25857e-013) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111010100 #b0001101101100111100110000010011010001101100010101111)))
(assert (= y (fp #b0 #b10000101101 #b0011011000011001110010101101000101011001010001111011)))
(assert (= r (fp #b1 #b01111010100 #x1b6798268d8af)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
