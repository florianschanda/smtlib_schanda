(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.52306941368319304075384934549219906330108642578125p-408 {+ 2355695216552532 -408 (2.30399e-123)}
; Y = -1.3489195698609599549655513328616507351398468017578125p364 {- 1571394044808093 364 (-5.06879e+109)}
; 1.52306941368319304075384934549219906330108642578125p-408 % -1.3489195698609599549655513328616507351398468017578125p364 == 1.52306941368319304075384934549219906330108642578125p-408
; [HW: 1.52306941368319304075384934549219906330108642578125p-408] 

; mpf : + 2355695216552532 -408
; mpfd: + 2355695216552532 -408 (2.30399e-123) class: Pos. norm. non-zero
; hwf : + 2355695216552532 -408 (2.30399e-123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001100111 #b1000010111100111111000001000100101001110101001010100)))
(assert (= y (fp #b1 #b10101101011 #b0101100101010010110010101111110101111100101110011101)))
(assert (= r (fp #b0 #b01001100111 #x85e7e0894ea54)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
