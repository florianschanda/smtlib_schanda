(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9799369316504453752969538982142694294452667236328125p-634 {+ 4413243600227533 -634 (2.77737e-191)}
; Y = 1.5544277287487979766211765308980830013751983642578125p-990 {+ 2496920512596957 -990 (1.48551e-298)}
; 1.9799369316504453752969538982142694294452667236328125p-634 % 1.5544277287487979766211765308980830013751983642578125p-990 == 1.3633544599015550158327414465020410716533660888671875p-990
; [HW: 1.3633544599015550158327414465020410716533660888671875p-990] 

; mpf : + 1636403010216051 -990
; mpfd: + 1636403010216051 -990 (1.30291e-298) class: Pos. norm. non-zero
; hwf : + 1636403010216051 -990 (1.30291e-298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110000101 #b1111101011011101001001011001000110010100110011001101)))
(assert (= y (fp #b0 #b00000100001 #b1000110111101110111110011100001011111000101111011101)))
(assert (= r (fp #b1 #b00000011110 #x87516c06b5b50)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
