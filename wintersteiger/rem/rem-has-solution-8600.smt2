(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.956151302670925407056756739621050655841827392578125p596 {+ 4306122650418594 596 (5.07318e+179)}
; Y = 1.2172032722665451220933618969866074621677398681640625p268 {+ 978196576043265 268 (5.77301e+080)}
; 1.956151302670925407056756739621050655841827392578125p596 % 1.2172032722665451220933618969866074621677398681640625p268 == 1.670087095311866942637379906955175101757049560546875p267
; [HW: 1.670087095311866942637379906955175101757049560546875p267] 

; mpf : + 3017803992752302 267
; mpfd: + 3017803992752302 267 (3.96048e+080) class: Pos. norm. non-zero
; hwf : + 3017803992752302 267 (3.96048e+080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010011 #b1111010011000110010101001110111011111111110110100010)))
(assert (= y (fp #b0 #b10100001011 #b0011011110011010101000100011011011111000000100000001)))
(assert (= r (fp #b1 #b10100001001 #x8754e0fc342a8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
