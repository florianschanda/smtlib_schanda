(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.990180889951971732187985253403894603252410888671875p-658 {- 4459378287017086 -658 (-1.66401e-198)}
; Y = 1.7983026888496838058273397109587676823139190673828125p-74 {+ 3595235692032301 -74 (9.52014e-023)}
; -1.990180889951971732187985253403894603252410888671875p-658 % 1.7983026888496838058273397109587676823139190673828125p-74 == -1.990180889951971732187985253403894603252410888671875p-658
; [HW: -1.990180889951971732187985253403894603252410888671875p-658] 

; mpf : - 4459378287017086 -658
; mpfd: - 4459378287017086 -658 (-1.66401e-198) class: Neg. norm. non-zero
; hwf : - 4459378287017086 -658 (-1.66401e-198) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101101101 #b1111110101111100011111101010101101110111110001111110)))
(assert (= y (fp #b0 #b01110110101 #b1100110001011101100100001010010011101011000100101101)))
(assert (= r (fp #b1 #b00101101101 #xfd7c7eab77c7e)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
