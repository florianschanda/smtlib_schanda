(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0286290704897365078096527213347144424915313720703125p713 {- 128933871189541 713 (-4.43247e+214)}
; Y = 1.7387168889279747130416353684267960488796234130859375p830 {+ 3326885105708319 830 (1.24487e+250)}
; -1.0286290704897365078096527213347144424915313720703125p713 % 1.7387168889279747130416353684267960488796234130859375p830 == -1.0286290704897365078096527213347144424915313720703125p713
; [HW: -1.0286290704897365078096527213347144424915313720703125p713] 

; mpf : - 128933871189541 713
; mpfd: - 128933871189541 713 (-4.43247e+214) class: Neg. norm. non-zero
; hwf : - 128933871189541 713 (-4.43247e+214) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001000 #b0000011101010100001111000001100101110111111000100101)))
(assert (= y (fp #b0 #b11100111101 #b1011110100011100100011001100111011110010110100011111)))
(assert (= r (fp #b1 #b11011001000 #x07543c1977e25)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
