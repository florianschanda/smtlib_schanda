(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4493682636045217559939146667602472007274627685546875p-197 {+ 2023774744521451 -197 (7.21555e-060)}
; Y = -1.9430822190876197996800556211383081972599029541015625p-863 {- 4247264730462745 -863 (-3.1594e-260)}
; 1.4493682636045217559939146667602472007274627685546875p-197 % -1.9430822190876197996800556211383081972599029541015625p-863 == 1.444729314533565567302275667316280305385589599609375p-864
; [HW: 1.444729314533565567302275667316280305385589599609375p-864] 

; mpf : + 2002882775214102 -864
; mpfd: + 2002882775214102 -864 (1.17455e-260) class: Pos. norm. non-zero
; hwf : + 2002882775214102 -864 (1.17455e-260) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100111010 #b0111001100001001110011000110110000001010101011101011)))
(assert (= y (fp #b1 #b00010100000 #b1111000101101101110101100001100001101011101000011001)))
(assert (= r (fp #b0 #b00010011111 #x71d9c7c57e816)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
