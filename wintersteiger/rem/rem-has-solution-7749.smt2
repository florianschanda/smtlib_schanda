(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.19438817543179798263963675708509981632232666015625p-920 {+ 875446514439876 -920 (1.34756e-277)}
; Y = 1.815990846808423153646572245634160935878753662109375p683 {+ 3674896073624150 683 (7.28787e+205)}
; 1.19438817543179798263963675708509981632232666015625p-920 % 1.815990846808423153646572245634160935878753662109375p683 == 1.19438817543179798263963675708509981632232666015625p-920
; [HW: 1.19438817543179798263963675708509981632232666015625p-920] 

; mpf : + 875446514439876 -920
; mpfd: + 875446514439876 -920 (1.34756e-277) class: Pos. norm. non-zero
; hwf : + 875446514439876 -920 (1.34756e-277) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001100111 #b0011000111000011011011000110100000110101011011000100)))
(assert (= y (fp #b0 #b11010101010 #b1101000011100100110001101011000011100000101001010110)))
(assert (= r (fp #b0 #b00001100111 #x31c36c68356c4)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
