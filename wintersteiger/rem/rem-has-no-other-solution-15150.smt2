(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.472573680137308382853689181501977145671844482421875p380 {- 2128282649771486 380 (-3.6264e+114)}
; Y = -1.31431743541965584398667488130740821361541748046875p413 {- 1415559885032012 413 (-2.78028e+124)}
; -1.472573680137308382853689181501977145671844482421875p380 % -1.31431743541965584398667488130740821361541748046875p413 == -1.472573680137308382853689181501977145671844482421875p380
; [HW: -1.472573680137308382853689181501977145671844482421875p380] 

; mpf : - 2128282649771486 380
; mpfd: - 2128282649771486 380 (-3.6264e+114) class: Neg. norm. non-zero
; hwf : - 2128282649771486 380 (-3.6264e+114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111011 #b0111100011111010100101101011010100100011110111011110)))
(assert (= y (fp #b1 #b10110011100 #b0101000001110111000110111000000110110000101001001100)))
(assert (= r (fp #b1 #b10101111011 #x78fa96b523dde)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
