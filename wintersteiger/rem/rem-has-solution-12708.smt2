(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.123368821853019117185112918377853929996490478515625p-989 {+ 555603780126394 -989 (2.14712e-298)}
; Y = -1.866992788600898567352714962908066809177398681640625p-698 {- 3904588399675914 -698 (-1.41973e-210)}
; 1.123368821853019117185112918377853929996490478515625p-989 % -1.866992788600898567352714962908066809177398681640625p-698 == 1.123368821853019117185112918377853929996490478515625p-989
; [HW: 1.123368821853019117185112918377853929996490478515625p-989] 

; mpf : + 555603780126394 -989
; mpfd: + 555603780126394 -989 (2.14712e-298) class: Pos. norm. non-zero
; hwf : + 555603780126394 -989 (2.14712e-298) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100010 #b0001111110010101000110010101111100110100011010111010)))
(assert (= y (fp #b1 #b00101000101 #b1101110111110011001111010100100011101000101000001010)))
(assert (= r (fp #b0 #b00000100010 #x1f95195f346ba)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
