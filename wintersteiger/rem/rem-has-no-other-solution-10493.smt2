(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9942714767838409795075449437717907130718231201171875p-703 {+ 4477800652348819 -703 (4.73912e-212)}
; Y = -1.58318829728551779822964817867614328861236572265625p273 {- 2626446598341892 273 (-2.40282e+082)}
; 1.9942714767838409795075449437717907130718231201171875p-703 % -1.58318829728551779822964817867614328861236572265625p273 == 1.9942714767838409795075449437717907130718231201171875p-703
; [HW: 1.9942714767838409795075449437717907130718231201171875p-703] 

; mpf : + 4477800652348819 -703
; mpfd: + 4477800652348819 -703 (4.73912e-212) class: Pos. norm. non-zero
; hwf : + 4477800652348819 -703 (4.73912e-212) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000000 #b1111111010001000100100110101010000100001110110010011)))
(assert (= y (fp #b1 #b10100010000 #b1001010101001011110101000000100001000000010100000100)))
(assert (= r (fp #b0 #b00101000000 #xfe88935421d93)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
