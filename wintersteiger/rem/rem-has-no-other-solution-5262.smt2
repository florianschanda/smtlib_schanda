(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.918173604675302623689958636532537639141082763671875p751 {+ 4135086303877118 751 (2.27203e+226)}
; Y = -1.2596300680321859122301475508720614016056060791015625p975 {- 1169269877643929 975 (-4.02243e+293)}
; 1.918173604675302623689958636532537639141082763671875p751 % -1.2596300680321859122301475508720614016056060791015625p975 == 1.918173604675302623689958636532537639141082763671875p751
; [HW: 1.918173604675302623689958636532537639141082763671875p751] 

; mpf : + 4135086303877118 751
; mpfd: + 4135086303877118 751 (2.27203e+226) class: Pos. norm. non-zero
; hwf : + 4135086303877118 751 (2.27203e+226) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101110 #b1110101100001101011011001110010000100001011111111110)))
(assert (= y (fp #b1 #b11111001110 #b0100001001110111000111011011101101000001101010011001)))
(assert (= r (fp #b0 #b11011101110 #xeb0d6ce4217fe)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
