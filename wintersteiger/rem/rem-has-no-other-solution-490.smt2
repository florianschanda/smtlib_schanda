(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1327064036534533197908558577182702720165252685546875p164 {+ 597656510043371 164 (2.64872e+049)}
; Y = 1.146742358137354589331380338990129530429840087890625p-251 {+ 660868829426858 -251 (3.16911e-076)}
; 1.1327064036534533197908558577182702720165252685546875p164 % 1.146742358137354589331380338990129530429840087890625p-251 == 1.15909321323245961821157834492623805999755859375p-254
; [HW: 1.15909321323245961821157834492623805999755859375p-254] 

; mpf : + 716492135830880 -254
; mpfd: + 716492135830880 -254 (4.00405e-077) class: Pos. norm. non-zero
; hwf : + 716492135830880 -254 (4.00405e-077) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010100011 #b0010000111111001000010111111111110101001010011101011)))
(assert (= y (fp #b0 #b01100000100 #b0010010110010000111010000011110100100011010010101010)))
(assert (= r (fp #b0 #b01100000001 #x28ba5533d9560)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
