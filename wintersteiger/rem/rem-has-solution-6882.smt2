(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6610831975637088131492191678262315690517425537109375p-293 {- 2977254042208815 -293 (-1.04376e-088)}
; Y = 1.6690655866549020114320001084706746041774749755859375p767 {+ 3013203526745439 767 (1.29563e+231)}
; -1.6610831975637088131492191678262315690517425537109375p-293 % 1.6690655866549020114320001084706746041774749755859375p767 == -1.6610831975637088131492191678262315690517425537109375p-293
; [HW: -1.6610831975637088131492191678262315690517425537109375p-293] 

; mpf : - 2977254042208815 -293
; mpfd: - 2977254042208815 -293 (-1.04376e-088) class: Neg. norm. non-zero
; hwf : - 2977254042208815 -293 (-1.04376e-088) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011011010 #b1010100100111100101111111001100101111000101000101111)))
(assert (= y (fp #b0 #b11011111110 #b1010101101000111111000011101110110001111110101011111)))
(assert (= r (fp #b1 #b01011011010 #xa93cbf9978a2f)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
