(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.144899293717370536427324623218737542629241943359375p-581 {+ 652568405191798 -581 (1.44657e-175)}
; Y = 1.38061038449960360452450913726352155208587646484375p-408 {+ 1714116785805756 -408 (2.08849e-123)}
; 1.144899293717370536427324623218737542629241943359375p-581 % 1.38061038449960360452450913726352155208587646484375p-408 == 1.144899293717370536427324623218737542629241943359375p-581
; [HW: 1.144899293717370536427324623218737542629241943359375p-581] 

; mpf : + 652568405191798 -581
; mpfd: + 652568405191798 -581 (1.44657e-175) class: Pos. norm. non-zero
; hwf : + 652568405191798 -581 (1.44657e-175) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110111010 #b0010010100011000000111101011111110111010110001110110)))
(assert (= y (fp #b0 #b01001100111 #b0110000101101111101011101010000111110001100110111100)))
(assert (= r (fp #b0 #b00110111010 #x25181ebfbac76)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
