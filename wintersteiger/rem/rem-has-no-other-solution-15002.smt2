(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.061061096409997350775711311143822968006134033203125p-736 {- 274994731038898 -736 (-2.93537e-222)}
; Y = -1.318629178309660421319904344272799789905548095703125p596 {- 1434978248704754 596 (-3.4198e+179)}
; -1.061061096409997350775711311143822968006134033203125p-736 % -1.318629178309660421319904344272799789905548095703125p596 == -1.061061096409997350775711311143822968006134033203125p-736
; [HW: -1.061061096409997350775711311143822968006134033203125p-736] 

; mpf : - 274994731038898 -736
; mpfd: - 274994731038898 -736 (-2.93537e-222) class: Neg. norm. non-zero
; hwf : - 274994731038898 -736 (-2.93537e-222) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011111 #b0000111110100001101100110011010000100011100010110010)))
(assert (= y (fp #b1 #b11001010011 #b0101000110010001101011101000110001100100001011110010)))
(assert (= r (fp #b1 #b00100011111 #x0fa1b334238b2)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
