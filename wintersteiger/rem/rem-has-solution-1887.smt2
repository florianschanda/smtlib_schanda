(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5942788782496444266456592231406830251216888427734375p751 {- 2676394134639255 751 (-1.88839e+226)}
; Y = 1.9010546348024763840811601767200045287609100341796875p139 {+ 4057989317536891 139 (1.32484e+042)}
; -1.5942788782496444266456592231406830251216888427734375p751 % 1.9010546348024763840811601767200045287609100341796875p139 == -1.069333583668565790247839686344377696514129638671875p139
; [HW: -1.069333583668565790247839686344377696514129638671875p139] 

; mpf : - 312250701574014 139
; mpfd: - 312250701574014 139 (-7.45217e+041) class: Neg. norm. non-zero
; hwf : - 312250701574014 139 (-7.45217e+041) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101110 #b1001100000100010101010010001101011001001001010010111)))
(assert (= y (fp #b0 #b10010001010 #b1110011010101011100001000011110001100010110001111011)))
(assert (= r (fp #b0 #b10010001001 #xa9d75774079fa)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
