(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2617323381991158992576629316317848861217498779296875p604 {+ 1178737660784347 604 (8.37692e+181)}
; Y = 1.22144015379532522302952202153392136096954345703125p-604 {+ 997277794117492 -604 (1.83973e-182)}
; 1.2617323381991158992576629316317848861217498779296875p604 % 1.22144015379532522302952202153392136096954345703125p-604 == 1.03064320574210288583572037168778479099273681640625p-604
; [HW: 1.03064320574210288583572037168778479099273681640625p-604] 

; mpf : + 138004729961572 -604
; mpfd: + 138004729961572 -604 (1.55235e-182) class: Pos. norm. non-zero
; hwf : + 138004729961572 -604 (1.55235e-182) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011011 #b0100001100000000111000111111100011011110111011011011)))
(assert (= y (fp #b0 #b00110100011 #b0011100010110000010011010100101010010010011101110100)))
(assert (= r (fp #b1 #b00110100000 #x86c08ce085880)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
