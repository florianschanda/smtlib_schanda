(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9193698810655523967483304659253917634487152099609375p-323 {+ 4140473853782479 -323 (1.12323e-097)}
; Y = -1.3724277388833872048934381382423453032970428466796875p-986 {- 1677265426057659 -986 (-2.09852e-297)}
; 1.9193698810655523967483304659253917634487152099609375p-323 % -1.3724277388833872048934381382423453032970428466796875p-986 == 1.062361578525676808482103297137655317783355712890625p-986
; [HW: 1.062361578525676808482103297137655317783355712890625p-986] 

; mpf : + 280851581810474 -986
; mpfd: + 280851581810474 -986 (1.62441e-297) class: Pos. norm. non-zero
; hwf : + 280851581810474 -986 (1.62441e-297) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010111100 #b1110101101011011110100110001010000011010100111001111)))
(assert (= y (fp #b1 #b00000100101 #b0101111101010111011011001001111010100000100110111011)))
(assert (= r (fp #b1 #b00000100011 #x3d81fbc954a44)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
