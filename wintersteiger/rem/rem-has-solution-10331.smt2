(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.666312565940991863300268960301764309406280517578125p-881 {+ 3000805023684130 -881 (1.03355e-265)}
; Y = 1.0285144030624009392482776092947460711002349853515625p-322 {+ 128417455006521 -322 (1.20379e-097)}
; 1.666312565940991863300268960301764309406280517578125p-881 % 1.0285144030624009392482776092947460711002349853515625p-322 == 1.666312565940991863300268960301764309406280517578125p-881
; [HW: 1.666312565940991863300268960301764309406280517578125p-881] 

; mpf : + 3000805023684130 -881
; mpfd: + 3000805023684130 -881 (1.03355e-265) class: Pos. norm. non-zero
; hwf : + 3000805023684130 -881 (1.03355e-265) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001110 #b1010101010010011011101011101011110100001011000100010)))
(assert (= y (fp #b0 #b01010111101 #b0000011101001100101110000100110010011110001100111001)))
(assert (= r (fp #b0 #b00010001110 #xaa9375d7a1622)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
