(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5795047699448245825948333731503225862979888916015625p-360 {- 2609857465982937 -360 (-6.72547e-109)}
; Y = 1.404111475266204056566721192211844027042388916015625p-725 {+ 1819956289425018 -725 (7.95527e-219)}
; -1.5795047699448245825948333731503225862979888916015625p-360 % 1.404111475266204056566721192211844027042388916015625p-725 == -1.22516758648389423314029045286588370800018310546875p-725
; [HW: -1.22516758648389423314029045286588370800018310546875p-725] 

; mpf : - 1014064658584780 -725
; mpfd: - 1014064658584780 -725 (-6.94143e-219) class: Neg. norm. non-zero
; hwf : - 1014064658584780 -725 (-6.94143e-219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010111 #b1001010001011010011011001011001011001001111111011001)))
(assert (= y (fp #b0 #b00100101010 #b0110011101110011110110011000001000110100111001111010)))
(assert (= r (fp #b0 #b00100100111 #x6e7a22311cd70)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
