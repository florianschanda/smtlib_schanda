(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.331663048873255039694640800007618963718414306640625p-600 {- 1493677583318154 -600 (-3.2092e-181)}
; Y = -1.858027342707924578490974454325623810291290283203125p461 {- 3864211620893106 461 (-1.10632e+139)}
; -1.331663048873255039694640800007618963718414306640625p-600 % -1.858027342707924578490974454325623810291290283203125p461 == -1.331663048873255039694640800007618963718414306640625p-600
; [HW: -1.331663048873255039694640800007618963718414306640625p-600] 

; mpf : - 1493677583318154 -600
; mpfd: - 1493677583318154 -600 (-3.2092e-181) class: Neg. norm. non-zero
; hwf : - 1493677583318154 -600 (-3.2092e-181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110100111 #b0101010011100111110111101001110000110011110010001010)))
(assert (= y (fp #b1 #b10111001100 #b1101101110100111101011100001000000000001000110110010)))
(assert (= r (fp #b1 #b00110100111 #x54e7de9c33c8a)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
