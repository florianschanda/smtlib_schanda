(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5771154223065593225072689165244810283184051513671875p421 {+ 2599096800849587 421 (8.54066e+126)}
; Y = 1.7152742887790777270851094726822338998317718505859375p955 {+ 3221309020413151 955 (5.22371e+287)}
; 1.5771154223065593225072689165244810283184051513671875p421 % 1.7152742887790777270851094726822338998317718505859375p955 == 1.5771154223065593225072689165244810283184051513671875p421
; [HW: 1.5771154223065593225072689165244810283184051513671875p421] 

; mpf : + 2599096800849587 421
; mpfd: + 2599096800849587 421 (8.54066e+126) class: Pos. norm. non-zero
; hwf : + 2599096800849587 421 (8.54066e+126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110100100 #b1001001110111101110101100001100011010010111010110011)))
(assert (= y (fp #b0 #b11110111010 #b1011011100011100001101110011110111111001110011011111)))
(assert (= r (fp #b0 #b10110100100 #x93bdd618d2eb3)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
