(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1001144083658791483770755803561769425868988037109375p608 {+ 450875212210991 608 (1.16863e+183)}
; Y = -1.480913074453038547062533325515687465667724609375p690 {- 2165839942904304 690 (-7.60723e+207)}
; 1.1001144083658791483770755803561769425868988037109375p608 % -1.480913074453038547062533325515687465667724609375p690 == 1.1001144083658791483770755803561769425868988037109375p608
; [HW: 1.1001144083658791483770755803561769425868988037109375p608] 

; mpf : + 450875212210991 608
; mpfd: + 450875212210991 608 (1.16863e+183) class: Pos. norm. non-zero
; hwf : + 450875212210991 608 (1.16863e+183) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001011111 #b0001100110100001000110010000110111001010001100101111)))
(assert (= y (fp #b1 #b11010110001 #b0111101100011101000111101000011011111110100111110000)))
(assert (= r (fp #b0 #b11001011111 #x19a1190dca32f)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
