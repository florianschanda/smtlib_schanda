(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5569127673199478767429582148906774818897247314453125p215 {- 2508112131379989 215 (-8.1981e+064)}
; Y = -1.0016259489964809414885849037091247737407684326171875p330 {- 7322623294675 330 (-2.19081e+099)}
; -1.5569127673199478767429582148906774818897247314453125p215 % -1.0016259489964809414885849037091247737407684326171875p330 == -1.5569127673199478767429582148906774818897247314453125p215
; [HW: -1.5569127673199478767429582148906774818897247314453125p215] 

; mpf : - 2508112131379989 215
; mpfd: - 2508112131379989 215 (-8.1981e+064) class: Neg. norm. non-zero
; hwf : - 2508112131379989 215 (-8.1981e+064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010110 #b1000111010010001110101011100101001011101001100010101)))
(assert (= y (fp #b1 #b10101001001 #b0000000001101010100011101110010111000011110011010011)))
(assert (= r (fp #b1 #b10011010110 #x8e91d5ca5d315)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
