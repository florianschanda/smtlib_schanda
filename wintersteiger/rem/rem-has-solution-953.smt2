(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4729758247949986671443411978543736040592193603515625p426 {- 2130093748302009 426 (-2.55255e+128)}
; Y = -1.3764683439234712825083306597662158310413360595703125p980 {- 1695462693410533 980 (-1.40657e+295)}
; -1.4729758247949986671443411978543736040592193603515625p426 % -1.3764683439234712825083306597662158310413360595703125p980 == -1.4729758247949986671443411978543736040592193603515625p426
; [HW: -1.4729758247949986671443411978543736040592193603515625p426] 

; mpf : - 2130093748302009 426
; mpfd: - 2130093748302009 426 (-2.55255e+128) class: Neg. norm. non-zero
; hwf : - 2130093748302009 426 (-2.55255e+128) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110101001 #b0111100100010100111100011001001101001011000010111001)))
(assert (= y (fp #b1 #b11111010011 #b0110000001100000001110101011100100100001011011100101)))
(assert (= r (fp #b1 #b10110101001 #x7914f1934b0b9)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
