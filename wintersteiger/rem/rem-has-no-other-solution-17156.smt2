(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.671738956331794145881985969026573002338409423828125p-454 {+ 3025243313426114 -454 (3.59377e-137)}
; Y = 1.6980081610217163667897466439171694219112396240234375p-402 {+ 3143549293878967 -402 (1.64392e-121)}
; 1.671738956331794145881985969026573002338409423828125p-454 % 1.6980081610217163667897466439171694219112396240234375p-402 == 1.671738956331794145881985969026573002338409423828125p-454
; [HW: 1.671738956331794145881985969026573002338409423828125p-454] 

; mpf : + 3025243313426114 -454
; mpfd: + 3025243313426114 -454 (3.59377e-137) class: Pos. norm. non-zero
; hwf : + 3025243313426114 -454 (3.59377e-137) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000111001 #b1010101111110111000101011001000011100100111011000010)))
(assert (= y (fp #b0 #b01001101101 #b1011001010110000101010011010111111101101111010110111)))
(assert (= r (fp #b0 #b01000111001 #xabf71590e4ec2)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
