(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3110808598467882379878801657469011843204498291015625p547 {+ 1400983644488089 547 (6.04e+164)}
; Y = 1.6014328368891739273749408312141895294189453125p891 {+ 2708612700102464 891 (2.64384e+268)}
; 1.3110808598467882379878801657469011843204498291015625p547 % 1.6014328368891739273749408312141895294189453125p891 == 1.3110808598467882379878801657469011843204498291015625p547
; [HW: 1.3110808598467882379878801657469011843204498291015625p547] 

; mpf : + 1400983644488089 547
; mpfd: + 1400983644488089 547 (6.04e+164) class: Pos. norm. non-zero
; hwf : + 1400983644488089 547 (6.04e+164) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100010 #b0100111110100010111111101100011101110100000110011001)))
(assert (= y (fp #b0 #b11101111010 #b1001100111110111100000001001110100101101111101000000)))
(assert (= r (fp #b0 #b11000100010 #x4fa2fec774199)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
