(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2633933362958937873798959117266349494457244873046875p-153 {- 1186218131194059 -153 (-1.10649e-046)}
; Y = 1.0819750260814424702715541570796631276607513427734375p893 {+ 369182696914071 893 (7.14502e+268)}
; -1.2633933362958937873798959117266349494457244873046875p-153 % 1.0819750260814424702715541570796631276607513427734375p893 == -1.2633933362958937873798959117266349494457244873046875p-153
; [HW: -1.2633933362958937873798959117266349494457244873046875p-153] 

; mpf : - 1186218131194059 -153
; mpfd: - 1186218131194059 -153 (-1.10649e-046) class: Neg. norm. non-zero
; hwf : - 1186218131194059 -153 (-1.10649e-046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100110 #b0100001101101101101111101110010101100000000011001011)))
(assert (= y (fp #b0 #b11101111100 #b0001010011111100010100001011100000011011110010010111)))
(assert (= r (fp #b1 #b01101100110 #x436dbee5600cb)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
