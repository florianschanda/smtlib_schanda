(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.555739055879130194881554416497237980365753173828125p242 {- 2502826204972482 242 (-1.0995e+073)}
; Y = -1.1368525016132389193757035172893665730953216552734375p933 {- 616328875270103 933 (-8.25449e+280)}
; -1.555739055879130194881554416497237980365753173828125p242 % -1.1368525016132389193757035172893665730953216552734375p933 == -1.555739055879130194881554416497237980365753173828125p242
; [HW: -1.555739055879130194881554416497237980365753173828125p242] 

; mpf : - 2502826204972482 242
; mpfd: - 2502826204972482 242 (-1.0995e+073) class: Neg. norm. non-zero
; hwf : - 2502826204972482 242 (-1.0995e+073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110001 #b1000111001000100111010100010111000011100010111000010)))
(assert (= y (fp #b1 #b11110100100 #b0010001100001000110000111111101011001101111111010111)))
(assert (= r (fp #b1 #b10011110001 #x8e44ea2e1c5c2)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
