(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.04667793576078071993151752394624054431915283203125p191 {- 210218734098676 191 (-3.28505e+057)}
; Y = 1.1912556350079628320060010082670487463474273681640625p-730 {+ 861338806554369 -730 (2.10915e-220)}
; -1.04667793576078071993151752394624054431915283203125p191 % 1.1912556350079628320060010082670487463474273681640625p-730 == -1.10948151846719422763953843968920409679412841796875p-731
; [HW: -1.10948151846719422763953843968920409679412841796875p-731] 

; mpf : - 493060925772812 -731
; mpfd: - 493060925772812 -731 (-9.82185e-221) class: Neg. norm. non-zero
; hwf : - 493060925772812 -731 (-9.82185e-221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010111110 #b0000101111110011000101011100111110001001100011110100)))
(assert (= y (fp #b0 #b00100100101 #b0011000011110110001000010001100110001000111100000001)))
(assert (= r (fp #b1 #b00100100100 #x1c06fb155540c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
