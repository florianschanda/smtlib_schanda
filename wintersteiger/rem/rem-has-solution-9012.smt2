(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.006541969769233713094536142307333648204803466796875p910 {- 29462412614990 910 (-8.7122e+273)}
; Y = -1.3108773459002851513588439047452993690967559814453125p255 {- 1400067099154453 255 (-7.58946e+076)}
; -1.006541969769233713094536142307333648204803466796875p910 % -1.3108773459002851513588439047452993690967559814453125p255 == -1.3200451579050973549556147190742194652557373046875p253
; [HW: -1.3200451579050973549556147190742194652557373046875p253] 

; mpf : - 1441355253883128 253
; mpfd: - 1441355253883128 253 (-1.91063e+076) class: Neg. norm. non-zero
; hwf : - 1441355253883128 253 (-1.91063e+076) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001101 #b0000000110101100101111000000101000110101110101001110)))
(assert (= y (fp #b1 #b10011111110 #b0100111110010101101010000110000110110101100000010101)))
(assert (= r (fp #b1 #b10011111100 #x51ee7abe720f8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
