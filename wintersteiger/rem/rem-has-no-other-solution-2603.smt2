(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7810130140504185636274314674665220081806182861328125p759 {+ 3517369919048973 759 (5.4005e+228)}
; Y = -1.9572457480970102405848365378915332257747650146484375p-158 {- 4311051594431687 -158 (-5.35681e-048)}
; 1.7810130140504185636274314674665220081806182861328125p759 % -1.9572457480970102405848365378915332257747650146484375p-158 == 1.0957728581329728712034921045415103435516357421875p-159
; [HW: 1.0957728581329728712034921045415103435516357421875p-159] 

; mpf : + 431322608199864 -159
; mpfd: + 431322608199864 -159 (1.49952e-048) class: Pos. norm. non-zero
; hwf : + 431322608199864 -159 (1.49952e-048) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011110110 #b1100011111110000011110000000100100011000110100001101)))
(assert (= y (fp #b1 #b01101100001 #b1111010100001110000011101010111001001111110011000111)))
(assert (= r (fp #b0 #b01101100000 #x188491ed868b8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
