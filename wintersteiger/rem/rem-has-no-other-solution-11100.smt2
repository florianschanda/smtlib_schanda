(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7816565113983691137633513790206052362918853759765625p-884 {+ 3520267973465417 -884 (1.38136e-266)}
; Y = -1.1558196463725656233378913384512998163700103759765625p-278 {- 701749301340489 -278 (-2.37986e-084)}
; 1.7816565113983691137633513790206052362918853759765625p-884 % -1.1558196463725656233378913384512998163700103759765625p-278 == 1.7816565113983691137633513790206052362918853759765625p-884
; [HW: 1.7816565113983691137633513790206052362918853759765625p-884] 

; mpf : + 3520267973465417 -884
; mpfd: + 3520267973465417 -884 (1.38136e-266) class: Pos. norm. non-zero
; hwf : + 3520267973465417 -884 (1.38136e-266) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010001011 #b1100100000011010101001000010000100101001010101001001)))
(assert (= y (fp #b1 #b01011101001 #b0010011111100011110010111101110100111110100101001001)))
(assert (= r (fp #b0 #b00010001011 #xc81aa42129549)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
