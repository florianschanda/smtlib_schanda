(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8065077072919766276726249998318962752819061279296875p-781 {+ 3632187810031579 -781 (1.42041e-235)}
; Y = 1.47575126533654366056680373731069266796112060546875p396 {+ 2142593221290700 396 (2.38172e+119)}
; 1.8065077072919766276726249998318962752819061279296875p-781 % 1.47575126533654366056680373731069266796112060546875p396 == 1.8065077072919766276726249998318962752819061279296875p-781
; [HW: 1.8065077072919766276726249998318962752819061279296875p-781] 

; mpf : + 3632187810031579 -781
; mpfd: + 3632187810031579 -781 (1.42041e-235) class: Pos. norm. non-zero
; hwf : + 3632187810031579 -781 (1.42041e-235) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011110010 #b1100111001110111010010100000001011001010011111011011)))
(assert (= y (fp #b0 #b10110001011 #b0111100111001010110101011011110110100110101011001100)))
(assert (= r (fp #b0 #b00011110010 #xce774a02ca7db)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
