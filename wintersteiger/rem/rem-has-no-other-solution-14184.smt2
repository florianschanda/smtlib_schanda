(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2037729786864723724448822395061142742633819580078125p945 {+ 917711910880573 945 (3.58006e+284)}
; Y = -1.8372592758629966436245695149409584701061248779296875p564 {- 3770680562789083 564 (-1.1094e+170)}
; 1.2037729786864723724448822395061142742633819580078125p945 % -1.8372592758629966436245695149409584701061248779296875p564 == 1.148917181819868016390273623983375728130340576171875p564
; [HW: 1.148917181819868016390273623983375728130340576171875p564] 

; mpf : + 670663364553022 564
; mpfd: + 670663364553022 564 (6.93755e+169) class: Pos. norm. non-zero
; hwf : + 670663364553022 564 (6.93755e+169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11110110000 #b0011010000101010011101110100011101000100010100111101)))
(assert (= y (fp #b1 #b11000110011 #b1101011001010110100111111011100000011010101011011011)))
(assert (= r (fp #b1 #b11000110010 #x606e5ffcc033a)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
