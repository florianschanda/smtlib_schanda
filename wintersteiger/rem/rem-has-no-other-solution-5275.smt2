(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1865646226352624115207845534314401447772979736328125p225 {+ 840212364980685 225 (6.39794e+067)}
; Y = -1.094371488651124213475895885494537651538848876953125p708 {- 425011401123602 708 (-1.47367e+213)}
; 1.1865646226352624115207845534314401447772979736328125p225 % -1.094371488651124213475895885494537651538848876953125p708 == 1.1865646226352624115207845534314401447772979736328125p225
; [HW: 1.1865646226352624115207845534314401447772979736328125p225] 

; mpf : + 840212364980685 225
; mpfd: + 840212364980685 225 (6.39794e+067) class: Pos. norm. non-zero
; hwf : + 840212364980685 225 (6.39794e+067) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011100000 #b0010111111000010101100101111100011001111000111001101)))
(assert (= y (fp #b1 #b11011000011 #b0001100000101000101110101101100101101110011100010010)))
(assert (= r (fp #b0 #b10011100000 #x2fc2b2f8cf1cd)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
