(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0653606530636892113506064561079256236553192138671875p305 {+ 294358212782323 305 (6.94457e+091)}
; Y = 1.7786257918215344631107655004598200321197509765625p422 {+ 3506618825908520 422 (1.92638e+127)}
; 1.0653606530636892113506064561079256236553192138671875p305 % 1.7786257918215344631107655004598200321197509765625p422 == 1.0653606530636892113506064561079256236553192138671875p305
; [HW: 1.0653606530636892113506064561079256236553192138671875p305] 

; mpf : + 294358212782323 305
; mpfd: + 294358212782323 305 (6.94457e+091) class: Pos. norm. non-zero
; hwf : + 294358212782323 305 (6.94457e+091) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110000 #b0001000010111011011110011100101101011010100011110011)))
(assert (= y (fp #b0 #b10110100101 #b1100011101010100000001010001011110110010000100101000)))
(assert (= r (fp #b0 #b10100110000 #x10bb79cb5a8f3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
