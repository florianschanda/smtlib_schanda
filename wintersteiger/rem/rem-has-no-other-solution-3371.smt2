(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3715449618272661513884713713196106255054473876953125p-756 {+ 1673289751636661 -756 (3.61854e-228)}
; Y = -1.628919312512734141051851111114956438541412353515625p458 {- 2832400781478458 458 (-1.21238e+138)}
; 1.3715449618272661513884713713196106255054473876953125p-756 % -1.628919312512734141051851111114956438541412353515625p458 == 1.3715449618272661513884713713196106255054473876953125p-756
; [HW: 1.3715449618272661513884713713196106255054473876953125p-756] 

; mpf : + 1673289751636661 -756
; mpfd: + 1673289751636661 -756 (3.61854e-228) class: Pos. norm. non-zero
; hwf : + 1673289751636661 -756 (3.61854e-228) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100001011 #b0101111100011101100100100001010000001010101010110101)))
(assert (= y (fp #b1 #b10111001001 #b1010000100000000110110110010011100010000101000111010)))
(assert (= r (fp #b0 #b00100001011 #x5f1d92140aab5)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
