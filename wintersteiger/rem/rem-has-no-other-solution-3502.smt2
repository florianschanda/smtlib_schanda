(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7064963868514297917755584421684034168720245361328125p-979 {+ 3181776864562701 -979 (3.33995e-295)}
; Y = -1.1039194067468451887492619789554737508296966552734375p844 {- 468011401501655 844 (-1.29495e+254)}
; 1.7064963868514297917755584421684034168720245361328125p-979 % -1.1039194067468451887492619789554737508296966552734375p844 == 1.7064963868514297917755584421684034168720245361328125p-979
; [HW: 1.7064963868514297917755584421684034168720245361328125p-979] 

; mpf : + 3181776864562701 -979
; mpfd: + 3181776864562701 -979 (3.33995e-295) class: Pos. norm. non-zero
; hwf : + 3181776864562701 -979 (3.33995e-295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000101100 #b1011010011011100111100100111110001000100111000001101)))
(assert (= y (fp #b1 #b11101001011 #b0001101010011010011101100101010101100101101111010111)))
(assert (= r (fp #b0 #b00000101100 #xb4dcf27c44e0d)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
