(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5454528050401277194936255909851752221584320068359375p490 {- 2456501049526911 490 (-4.9403e+147)}
; Y = 1.459352017521062361282702113385312259197235107421875p987 {+ 2068737574939742 987 (1.90882e+297)}
; -1.5454528050401277194936255909851752221584320068359375p490 % 1.459352017521062361282702113385312259197235107421875p987 == -1.5454528050401277194936255909851752221584320068359375p490
; [HW: -1.5454528050401277194936255909851752221584320068359375p490] 

; mpf : - 2456501049526911 490
; mpfd: - 2456501049526911 490 (-4.9403e+147) class: Neg. norm. non-zero
; hwf : - 2456501049526911 490 (-4.9403e+147) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111101001 #b1000101110100010110010111000011100101000101001111111)))
(assert (= y (fp #b0 #b11111011010 #b0111010110011000000110000000010010011010110001011110)))
(assert (= r (fp #b1 #b10111101001 #x8ba2cb8728a7f)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
