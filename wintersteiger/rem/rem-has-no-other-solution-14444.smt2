(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3944863894423515926490608762833289802074432373046875p13 {+ 1776608756495307 13 (11423.6)}
; Y = 1.0262394000032151186729834080324508249759674072265625p440 {+ 118171752076905 440 (2.91371e+132)}
; 1.3944863894423515926490608762833289802074432373046875p13 % 1.0262394000032151186729834080324508249759674072265625p440 == 1.3944863894423515926490608762833289802074432373046875p13
; [HW: 1.3944863894423515926490608762833289802074432373046875p13] 

; mpf : + 1776608756495307 13
; mpfd: + 1776608756495307 13 (11423.6) class: Pos. norm. non-zero
; hwf : + 1776608756495307 13 (11423.6) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000001100 #b0110010011111101000011110101110101011111001111001011)))
(assert (= y (fp #b0 #b10110110111 #b0000011010110111101000000001010011100001011001101001)))
(assert (= r (fp #b0 #b10000001100 #x64fd0f5d5f3cb)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
