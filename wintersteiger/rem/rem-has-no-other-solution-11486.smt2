(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0989524921662703338398614505422301590442657470703125p-1003 {+ 445642406847397 -1003 (1.28202e-302)}
; Y = -1.7160661886427812650168789332383312284946441650390625p-404 {- 3224875420344241 -404 (-4.15352e-122)}
; 1.0989524921662703338398614505422301590442657470703125p-1003 % -1.7160661886427812650168789332383312284946441650390625p-404 == 1.0989524921662703338398614505422301590442657470703125p-1003
; [HW: 1.0989524921662703338398614505422301590442657470703125p-1003] 

; mpf : + 445642406847397 -1003
; mpfd: + 445642406847397 -1003 (1.28202e-302) class: Pos. norm. non-zero
; hwf : + 445642406847397 -1003 (1.28202e-302) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000010100 #b0001100101010100111100110101010110110110001110100101)))
(assert (= y (fp #b1 #b01001101011 #b1011011101010000000111010001110111111101111110110001)))
(assert (= r (fp #b0 #b00000010100 #x1954f355b63a5)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
