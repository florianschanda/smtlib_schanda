(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.95588008394304413428699263022281229496002197265625p552 {+ 4304901189856772 552 (2.88337e+166)}
; Y = -1.774356015474158443367969084647484123706817626953125p-476 {- 3487389462741522 -476 (-9.09416e-144)}
; 1.95588008394304413428699263022281229496002197265625p552 % -1.774356015474158443367969084647484123706817626953125p-476 == 1.72083694906514583777834559441544115543365478515625p-477
; [HW: 1.72083694906514583777834559441544115543365478515625p-477] 

; mpf : + 3246361015204676 -477
; mpfd: + 3246361015204676 -477 (4.40993e-144) class: Pos. norm. non-zero
; hwf : + 3246361015204676 -477 (4.40993e-144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000100111 #b1111010010110100100011101010001101101110111000000100)))
(assert (= y (fp #b1 #b01000100011 #b1100011000111100001100100010000111101100001000010010)))
(assert (= r (fp #b0 #b01000100010 #xb888c531fbb44)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
