(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.14086136247028502310740805114619433879852294921875p-821 {+ 634383179532076 -821 (8.15843e-248)}
; Y = 1.7254985269322180574391722984728403389453887939453125p617 {+ 3267354895549781 617 (9.38473e+185)}
; 1.14086136247028502310740805114619433879852294921875p-821 % 1.7254985269322180574391722984728403389453887939453125p617 == 1.14086136247028502310740805114619433879852294921875p-821
; [HW: 1.14086136247028502310740805114619433879852294921875p-821] 

; mpf : + 634383179532076 -821
; mpfd: + 634383179532076 -821 (8.15843e-248) class: Pos. norm. non-zero
; hwf : + 634383179532076 -821 (8.15843e-248) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001010 #b0010010000001111011111011000000100010100011100101100)))
(assert (= y (fp #b0 #b11001101000 #b1011100110111010010001010111111001111000010101010101)))
(assert (= r (fp #b0 #b00011001010 #x240f7d811472c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
