(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9162969489254193522498326274217106401920318603515625p-346 {+ 4126634597741241 -346 (1.33686e-104)}
; Y = -1.7314294083771333276899895281530916690826416015625p683 {- 3294065211015080 683 (-6.94851e+205)}
; 1.9162969489254193522498326274217106401920318603515625p-346 % -1.7314294083771333276899895281530916690826416015625p683 == 1.9162969489254193522498326274217106401920318603515625p-346
; [HW: 1.9162969489254193522498326274217106401920318603515625p-346] 

; mpf : + 4126634597741241 -346
; mpfd: + 4126634597741241 -346 (1.33686e-104) class: Pos. norm. non-zero
; hwf : + 4126634597741241 -346 (1.33686e-104) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100101 #b1110101010010010011011111101010100001111001010111001)))
(assert (= y (fp #b1 #b11010101010 #b1011101100111110111101010010110001001111111110101000)))
(assert (= r (fp #b0 #b01010100101 #xea926fd50f2b9)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
