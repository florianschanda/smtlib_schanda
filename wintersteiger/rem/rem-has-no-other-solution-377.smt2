(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.00874054506369947858956948039121925830841064453125p-352 {- 39363915491892 -352 (-1.09957e-106)}
; Y = -1.4080259877328138440333304970408789813518524169921875p967 {- 1837585686310979 967 (-1.75637e+291)}
; -1.00874054506369947858956948039121925830841064453125p-352 % -1.4080259877328138440333304970408789813518524169921875p967 == -1.00874054506369947858956948039121925830841064453125p-352
; [HW: -1.00874054506369947858956948039121925830841064453125p-352] 

; mpf : - 39363915491892 -352
; mpfd: - 39363915491892 -352 (-1.09957e-106) class: Neg. norm. non-zero
; hwf : - 39363915491892 -352 (-1.09957e-106) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011111 #b0000001000111100110100100000001100110010101000110100)))
(assert (= y (fp #b1 #b11111000110 #b0110100001110100011001000010000100111011000001000011)))
(assert (= r (fp #b1 #b01010011111 #x023cd20332a34)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
