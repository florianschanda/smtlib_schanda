(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.747494700853618354585705674253404140472412109375p812 {+ 3366416856225776 812 (4.77279e+244)}
; Y = 1.2953745222219319455092545467778109014034271240234375p-133 {+ 1330248588213431 -133 (1.18961e-040)}
; 1.747494700853618354585705674253404140472412109375p812 % 1.2953745222219319455092545467778109014034271240234375p-133 == 1.0211046334345221797690328457974828779697418212890625p-133
; [HW: 1.0211046334345221797690328457974828779697418212890625p-133] 

; mpf : + 95046819271505 -133
; mpfd: + 95046819271505 -133 (9.37737e-041) class: Pos. norm. non-zero
; hwf : + 95046819271505 -133 (9.37737e-041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100101011 #b1011111101011011110100000000111000011001011111110000)))
(assert (= y (fp #b0 #b01101111010 #b0100101110011101101010100010100100000011110010110111)))
(assert (= r (fp #b1 #b01101111000 #x18da34aa7a598)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
