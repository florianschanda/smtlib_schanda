(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.754627676229351340708717543748207390308380126953125p-739 {+ 3398540921469970 -739 (6.06762e-223)}
; Y = 1.18618426072530258608139774878509342670440673828125p-1 {+ 838499367224724 -1 (0.593092)}
; 1.754627676229351340708717543748207390308380126953125p-739 % 1.18618426072530258608139774878509342670440673828125p-1 == 1.754627676229351340708717543748207390308380126953125p-739
; [HW: 1.754627676229351340708717543748207390308380126953125p-739] 

; mpf : + 3398540921469970 -739
; mpfd: + 3398540921469970 -739 (6.06762e-223) class: Pos. norm. non-zero
; hwf : + 3398540921469970 -739 (6.06762e-223) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100011100 #b1100000100101111010001111000011000001111110000010010)))
(assert (= y (fp #b0 #b01111111110 #b0010111110101001110001011000111011011000010110010100)))
(assert (= r (fp #b0 #b00100011100 #xc12f47860fc12)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
