(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8613041176641609286690481894765980541706085205078125p-294 {+ 3878968903364989 -294 (5.84788e-089)}
; Y = 1.0475173237614188170852003167965449392795562744140625p150 {+ 213999001585569 150 (1.49507e+045)}
; 1.8613041176641609286690481894765980541706085205078125p-294 % 1.0475173237614188170852003167965449392795562744140625p150 == 1.8613041176641609286690481894765980541706085205078125p-294
; [HW: 1.8613041176641609286690481894765980541706085205078125p-294] 

; mpf : + 3878968903364989 -294
; mpfd: + 3878968903364989 -294 (5.84788e-089) class: Pos. norm. non-zero
; hwf : + 3878968903364989 -294 (5.84788e-089) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011001 #b1101110001111110011011010011100101000111000101111101)))
(assert (= y (fp #b0 #b10010010101 #b0000110000101010000110000110011110001100011110100001)))
(assert (= r (fp #b0 #b01011011001 #xdc7e6d394717d)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
