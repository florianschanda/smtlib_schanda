(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2761847253980906913284343318082392215728759765625p-913 {+ 1243825426388264 -913 (1.84301e-275)}
; Y = 1.1890732046529688403779800864867866039276123046875p421 {+ 851510014020856 421 (6.43927e+126)}
; 1.2761847253980906913284343318082392215728759765625p-913 % 1.1890732046529688403779800864867866039276123046875p421 == 1.2761847253980906913284343318082392215728759765625p-913
; [HW: 1.2761847253980906913284343318082392215728759765625p-913] 

; mpf : + 1243825426388264 -913
; mpfd: + 1243825426388264 -913 (1.84301e-275) class: Pos. norm. non-zero
; hwf : + 1243825426388264 -913 (1.84301e-275) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001101110 #b0100011010110100000010101100101100111101010100101000)))
(assert (= y (fp #b0 #b10110100100 #b0011000001100111000110011111111010001000110011111000)))
(assert (= r (fp #b0 #b00001101110 #x46b40acb3d528)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
