(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.5757266269559695448521097205230034887790679931640625p-766 {+ 2592842222626177 -766 (4.0598e-231)}
; Y = 1.6289950344940018478467891327454708516597747802734375p116 {+ 2832741802965079 116 (1.35332e+035)}
; 1.5757266269559695448521097205230034887790679931640625p-766 % 1.6289950344940018478467891327454708516597747802734375p116 == 1.5757266269559695448521097205230034887790679931640625p-766
; [HW: 1.5757266269559695448521097205230034887790679931640625p-766] 

; mpf : + 2592842222626177 -766
; mpfd: + 2592842222626177 -766 (4.0598e-231) class: Pos. norm. non-zero
; hwf : + 2592842222626177 -766 (4.0598e-231) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100000001 #b1001001101100010110100011111101000110110010110000001)))
(assert (= y (fp #b0 #b10001110011 #b1010000100000101110100011000111001111111100001010111)))
(assert (= r (fp #b0 #b00100000001 #x9362d1fa36581)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
