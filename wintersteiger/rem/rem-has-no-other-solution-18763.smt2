(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9789665760112293835248920004232786595821380615234375p54 {- 4408873506932343 54 (-3.56499e+016)}
; Y = -1.7500330145265230452622517987038008868694305419921875p-887 {- 3377848404737219 -887 (-1.69606e-267)}
; -1.9789665760112293835248920004232786595821380615234375p54 % -1.7500330145265230452622517987038008868694305419921875p-887 == -1.2180276907301763600344202131964266300201416015625p-887
; [HW: -1.2180276907301763600344202131964266300201416015625p-887] 

; mpf : - 981909426728872 -887
; mpfd: - 981909426728872 -887 (-1.18046e-267) class: Neg. norm. non-zero
; hwf : - 981909426728872 -887 (-1.18046e-267) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000110101 #b1111101010011101100011011011001111011000011001110111)))
(assert (= y (fp #b1 #b00010001000 #b1100000000000010001010011110010001001111110011000011)))
(assert (= r (fp #b0 #b00010000111 #x1063007601a36)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
