(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5613319427288165908151995608932338654994964599609375p558 {- 2528014328104655 558 (-1.4731e+168)}
; Y = -0.8740485032405034271363319930969737470149993896484375p-1022 {- 3936364513497671 -1023 (-1.94482e-308)}
; -1.5613319427288165908151995608932338654994964599609375p558 % -0.8740485032405034271363319930969737470149993896484375p-1022 == -0.2117919669418772965485686654574237763881683349609375p-1022
; [HW: -0.2117919669418772965485686654574237763881683349609375p-1022] 

; mpf : - 953826223399503 -1023
; mpfd: - 953826223399503 -1023 (-4.71253e-309) class: Neg. denorm.
; hwf : - 953826223399503 -1023 (-4.71253e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000101101 #b1000111110110011011100110100000000111000011011001111)))
(assert (= y (fp #b1 #b00000000000 #b1101111111000001101001001000100010001001001001000111)))
(assert (= r (fp #b1 #b00000000000 #x3637ff939224f)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
