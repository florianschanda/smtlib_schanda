(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8249757781551527724417383069521747529506683349609375p-599 {- 3715360607089231 -599 (-8.79609e-181)}
; Y = -1.9754071477097341347217707152594812214374542236328125p-85 {- 4392843266960077 -85 (-5.10631e-026)}
; -1.8249757781551527724417383069521747529506683349609375p-599 % -1.9754071477097341347217707152594812214374542236328125p-85 == -1.8249757781551527724417383069521747529506683349609375p-599
; [HW: -1.8249757781551527724417383069521747529506683349609375p-599] 

; mpf : - 3715360607089231 -599
; mpfd: - 3715360607089231 -599 (-8.79609e-181) class: Neg. norm. non-zero
; hwf : - 3715360607089231 -599 (-8.79609e-181) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110101000 #b1101001100110001100111001101001100101011001001001111)))
(assert (= y (fp #b1 #b01110101010 #b1111100110110100010010000110011110110010101011001101)))
(assert (= r (fp #b1 #b00110101000 #xd3319cd32b24f)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
