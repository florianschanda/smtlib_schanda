(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.8415010977144838921759628647123463451862335205078125p677 {- 3789784030098813 677 (-1.15473e+204)}
; Y = -1.327274809431642221824176886002533137798309326171875p-728 {- 1473914709804094 -728 (-9.39992e-220)}
; -1.8415010977144838921759628647123463451862335205078125p677 % -1.327274809431642221824176886002533137798309326171875p-728 == -1.324465057883347895995029830373823642730712890625p-728
; [HW: -1.324465057883347895995029830373823642730712890625p-728] 

; mpf : - 1461260713778192 -728
; mpfd: - 1461260713778192 -728 (-9.38002e-220) class: Neg. norm. non-zero
; hwf : - 1461260713778192 -728 (-9.38002e-220) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100100 #b1101011101101100100111011010111000111011010101111101)))
(assert (= y (fp #b1 #b00100100111 #b0101001111001000010010000010101101010000010000111110)))
(assert (= r (fp #b0 #b00100011110 #x70479e0505c00)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
