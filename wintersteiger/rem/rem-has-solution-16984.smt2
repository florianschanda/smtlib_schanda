(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3800291062280651832594458028324879705905914306640625p-488 {- 1711498941198657 -488 (-1.72683e-147)}
; Y = -1.1460545808807791612338178310892544686794281005859375p-471 {- 657771356030431 -471 (-1.87965e-142)}
; -1.3800291062280651832594458028324879705905914306640625p-488 % -1.1460545808807791612338178310892544686794281005859375p-471 == -1.3800291062280651832594458028324879705905914306640625p-488
; [HW: -1.3800291062280651832594458028324879705905914306640625p-488] 

; mpf : - 1711498941198657 -488
; mpfd: - 1711498941198657 -488 (-1.72683e-147) class: Neg. norm. non-zero
; hwf : - 1711498941198657 -488 (-1.72683e-147) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000010111 #b0110000101001001100101100110011011000111000101000001)))
(assert (= y (fp #b1 #b01000101000 #b0010010101100011110101010100000001010000010111011111)))
(assert (= r (fp #b1 #b01000010111 #x61499666c7141)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
