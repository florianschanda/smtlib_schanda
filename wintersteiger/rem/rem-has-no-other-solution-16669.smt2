(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3707228231331856083130560364224947988986968994140625p436 {+ 1669587168120353 436 (2.43236e+131)}
; Y = 1.4374797246691375374183508029091171920299530029296875p618 {+ 1970233525002075 618 (1.56365e+186)}
; 1.3707228231331856083130560364224947988986968994140625p436 % 1.4374797246691375374183508029091171920299530029296875p618 == 1.3707228231331856083130560364224947988986968994140625p436
; [HW: 1.3707228231331856083130560364224947988986968994140625p436] 

; mpf : + 1669587168120353 436
; mpfd: + 1669587168120353 436 (2.43236e+131) class: Pos. norm. non-zero
; hwf : + 1669587168120353 436 (2.43236e+131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110011 #b0101111011100111101100001110000100111100111000100001)))
(assert (= y (fp #b0 #b11001101001 #b0110111111111110101010111101011000011101111101011011)))
(assert (= r (fp #b0 #b10110110011 #x5ee7b0e13ce21)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
