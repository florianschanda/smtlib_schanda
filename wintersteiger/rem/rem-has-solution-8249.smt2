(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.197810496178360661900796912959776818752288818359375p21 {+ 890859276878838 21 (2.51199e+006)}
; Y = -1.4044652946768625412232722737826406955718994140625p498 {- 1821549750391016 498 (-1.14934e+150)}
; 1.197810496178360661900796912959776818752288818359375p21 % -1.4044652946768625412232722737826406955718994140625p498 == 1.197810496178360661900796912959776818752288818359375p21
; [HW: 1.197810496178360661900796912959776818752288818359375p21] 

; mpf : + 890859276878838 21
; mpfd: + 890859276878838 21 (2.51199e+006) class: Pos. norm. non-zero
; hwf : + 890859276878838 21 (2.51199e+006) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000010100 #b0011001010100011101101010110101111100100001111110110)))
(assert (= y (fp #b1 #b10111110001 #b0110011110001011000010011001110100000001000011101000)))
(assert (= r (fp #b0 #b10000010100 #x32a3b56be43f6)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
