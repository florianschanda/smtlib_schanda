(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4552389139948440632821302642696537077426910400390625p-697 {+ 2050213803431729 -697 (2.21323e-210)}
; Y = -1.2330461689839420369452227532747201621532440185546875p167 {- 1049546639796203 167 (-2.30669e+050)}
; 1.4552389139948440632821302642696537077426910400390625p-697 % -1.2330461689839420369452227532747201621532440185546875p167 == 1.4552389139948440632821302642696537077426910400390625p-697
; [HW: 1.4552389139948440632821302642696537077426910400390625p-697] 

; mpf : + 2050213803431729 -697
; mpfd: + 2050213803431729 -697 (2.21323e-210) class: Pos. norm. non-zero
; hwf : + 2050213803431729 -697 (2.21323e-210) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101000110 #b0111010010001010100010011001011101111001011100110001)))
(assert (= y (fp #b1 #b10010100110 #b0011101110101000111010011110101000111110011111101011)))
(assert (= r (fp #b0 #b00101000110 #x748a899779731)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
