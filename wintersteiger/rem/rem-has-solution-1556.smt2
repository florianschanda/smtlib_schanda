(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7637674041794781931713487210799939930438995361328125p329 {- 3439702596860429 329 (-1.9289e+099)}
; Y = 1.0192015601691364334868694641045294702053070068359375p547 {+ 86476139222655 547 (4.69535e+164)}
; -1.7637674041794781931713487210799939930438995361328125p329 % 1.0192015601691364334868694641045294702053070068359375p547 == -1.7637674041794781931713487210799939930438995361328125p329
; [HW: -1.7637674041794781931713487210799939930438995361328125p329] 

; mpf : - 3439702596860429 329
; mpfd: - 3439702596860429 329 (-1.9289e+099) class: Neg. norm. non-zero
; hwf : - 3439702596860429 329 (-1.9289e+099) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101001000 #b1100001110000110010000101011011010110011101000001101)))
(assert (= y (fp #b0 #b11000100010 #b0000010011101010011001001011100011110101011001111111)))
(assert (= r (fp #b1 #b10101001000 #xc38642b6b3a0d)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
