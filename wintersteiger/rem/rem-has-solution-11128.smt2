(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.057973765956624401241015220875851809978485107421875p-916 {- 261090630759518 -916 (-1.90985e-276)}
; Y = 1.531184989734749368750499343150295317173004150390625p429 {+ 2392244521834218 429 (2.12274e+129)}
; -1.057973765956624401241015220875851809978485107421875p-916 % 1.531184989734749368750499343150295317173004150390625p429 == -1.057973765956624401241015220875851809978485107421875p-916
; [HW: -1.057973765956624401241015220875851809978485107421875p-916] 

; mpf : - 261090630759518 -916
; mpfd: - 261090630759518 -916 (-1.90985e-276) class: Neg. norm. non-zero
; hwf : - 261090630759518 -916 (-1.90985e-276) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001101011 #b0000111011010111010111100110010011001111010001011110)))
(assert (= y (fp #b0 #b10110101100 #b1000011111111011101111010100111100001001011011101010)))
(assert (= r (fp #b1 #b00001101011 #x0ed75e64cf45e)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
