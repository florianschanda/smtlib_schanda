(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.780806505584462851032867547473870217800140380859375p-726 {- 3516439887598646 -726 (-5.04475e-219)}
; Y = -1.359042497512403802062408431083895266056060791015625p407 {- 1616983658007034 407 (-4.49202e+122)}
; -1.780806505584462851032867547473870217800140380859375p-726 % -1.359042497512403802062408431083895266056060791015625p407 == -1.780806505584462851032867547473870217800140380859375p-726
; [HW: -1.780806505584462851032867547473870217800140380859375p-726] 

; mpf : - 3516439887598646 -726
; mpfd: - 3516439887598646 -726 (-5.04475e-219) class: Neg. norm. non-zero
; hwf : - 3516439887598646 -726 (-5.04475e-219) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100101001 #b1100011111100010111011110110010111111101010000110110)))
(assert (= y (fp #b1 #b10110010110 #b0101101111101010001101011000100010110000100111111010)))
(assert (= r (fp #b1 #b00100101001 #xc7e2ef65fd436)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
