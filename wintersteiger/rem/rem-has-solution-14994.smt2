(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6984947263778533699252193400752730667591094970703125p-124 {+ 3145740589435557 -124 (7.98628e-038)}
; Y = -1.1445722252888919090452191085205413401126861572265625p-978 {- 651095419939177 -978 (-4.4803e-295)}
; 1.6984947263778533699252193400752730667591094970703125p-124 % -1.1445722252888919090452191085205413401126861572265625p-978 == 1.037224812499086823436300619505345821380615234375p-979
; [HW: 1.037224812499086823436300619505345821380615234375p-979] 

; mpf : + 167645651699824 -979
; mpfd: + 167645651699824 -979 (2.03005e-295) class: Pos. norm. non-zero
; hwf : + 167645651699824 -979 (2.03005e-295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110000011 #b1011001011010000100011001110011000111000101010100101)))
(assert (= y (fp #b1 #b00000101101 #b0010010100000010101011110111001110000110100101101001)))
(assert (= r (fp #b0 #b00000101100 #x098790b848870)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
