(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8711732418290487611756134356255643069744110107421875p-819 {+ 3923415487276451 -819 (5.35239e-247)}
; Y = -1.1944526266638575417999845740268938243389129638671875p-76 {- 875736776984563 -76 (-1.58084e-023)}
; 1.8711732418290487611756134356255643069744110107421875p-819 % -1.1944526266638575417999845740268938243389129638671875p-76 == 1.8711732418290487611756134356255643069744110107421875p-819
; [HW: 1.8711732418290487611756134356255643069744110107421875p-819] 

; mpf : + 3923415487276451 -819
; mpfd: + 3923415487276451 -819 (5.35239e-247) class: Pos. norm. non-zero
; hwf : + 3923415487276451 -819 (5.35239e-247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001100 #b1101111100000101001101011010011011001110010110100011)))
(assert (= y (fp #b1 #b01110110011 #b0011000111000111101001011011100000100100011111110011)))
(assert (= r (fp #b0 #b00011001100 #xdf0535a6ce5a3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
