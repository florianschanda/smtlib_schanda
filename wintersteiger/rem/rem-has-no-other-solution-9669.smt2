(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8033668847474009222509039318538270890712738037109375p-286 {+ 3618042802790191 -286 (1.45046e-086)}
; Y = 1.1339970173726932056723626374150626361370086669921875p462 {+ 603468917508419 462 (1.35042e+139)}
; 1.8033668847474009222509039318538270890712738037109375p-286 % 1.1339970173726932056723626374150626361370086669921875p462 == 1.8033668847474009222509039318538270890712738037109375p-286
; [HW: 1.8033668847474009222509039318538270890712738037109375p-286] 

; mpf : + 3618042802790191 -286
; mpfd: + 3618042802790191 -286 (1.45046e-086) class: Pos. norm. non-zero
; hwf : + 3618042802790191 -286 (1.45046e-086) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100001 #b1100110110101001011100111100000010101101111100101111)))
(assert (= y (fp #b0 #b10111001101 #b0010001001001101101000001110011101100000100101000011)))
(assert (= r (fp #b0 #b01011100001 #xcda973c0adf2f)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
