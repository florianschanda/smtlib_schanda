(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4688473600994178536183198957587592303752899169921875p-250 {+ 2111500796237379 -250 (8.11854e-076)}
; Y = 1.4552637601692730573432754681562073528766632080078125p-517 {+ 2050325700653629 -517 (3.39183e-156)}
; 1.4688473600994178536183198957587592303752899169921875p-250 % 1.4552637601692730573432754681562073528766632080078125p-517 == 1.317885656018091822261339984834194183349609375p-518
; [HW: 1.317885656018091822261339984834194183349609375p-518] 

; mpf : + 1431629721989504 -518
; mpfd: + 1431629721989504 -518 (1.53582e-156) class: Pos. norm. non-zero
; hwf : + 1431629721989504 -518 (1.53582e-156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100000101 #b0111100000000110011000010110111001110001011001000011)))
(assert (= y (fp #b0 #b00111111010 #b0111010010001100001010100111000011111011001000111101)))
(assert (= r (fp #b0 #b00111111001 #x5160f45077180)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
