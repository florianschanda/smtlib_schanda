(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.827844164775412227896822514594532549381256103515625p-531 {+ 3728278672003386 -531 (2.60023e-160)}
; Y = -1.03032000470383966472809333936311304569244384765625p-143 {- 136549161886084 -143 (-9.24023e-044)}
; 1.827844164775412227896822514594532549381256103515625p-531 % -1.03032000470383966472809333936311304569244384765625p-143 == 1.827844164775412227896822514594532549381256103515625p-531
; [HW: 1.827844164775412227896822514594532549381256103515625p-531] 

; mpf : + 3728278672003386 -531
; mpfd: + 3728278672003386 -531 (2.60023e-160) class: Pos. norm. non-zero
; hwf : + 3728278672003386 -531 (2.60023e-160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101100 #b1101001111101101100110000101110111100101000100111010)))
(assert (= y (fp #b1 #b01101110000 #b0000011111000011000011010100010010011110000110000100)))
(assert (= r (fp #b0 #b00111101100 #xd3ed985de513a)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
