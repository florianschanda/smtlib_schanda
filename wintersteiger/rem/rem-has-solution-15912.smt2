(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.445920486445386732299311915994621813297271728515625p-950 {- 2008247336592314 -950 (-1.51932e-286)}
; Y = 1.7632784581756164588028923390083946287631988525390625p-154 {+ 3437500579819633 -154 (7.7215e-047)}
; -1.445920486445386732299311915994621813297271728515625p-950 % 1.7632784581756164588028923390083946287631988525390625p-154 == -1.445920486445386732299311915994621813297271728515625p-950
; [HW: -1.445920486445386732299311915994621813297271728515625p-950] 

; mpf : - 2008247336592314 -950
; mpfd: - 2008247336592314 -950 (-1.51932e-286) class: Neg. norm. non-zero
; hwf : - 2008247336592314 -950 (-1.51932e-286) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001001001 #b0111001000100111110110000101000111100110001110111010)))
(assert (= y (fp #b0 #b01101100101 #b1100001101100110001101111000111110011011000001110001)))
(assert (= r (fp #b1 #b00001001001 #x7227d851e63ba)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
