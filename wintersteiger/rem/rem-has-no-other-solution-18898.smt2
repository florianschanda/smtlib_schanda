(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.482622210063096357401946079335175454616546630859375p29 {+ 2173537205400886 29 (7.95977e+008)}
; Y = -1.148136260090030447145181824453175067901611328125p1014 {- 667146405741520 1014 (-2.01562e+305)}
; 1.482622210063096357401946079335175454616546630859375p29 % -1.148136260090030447145181824453175067901611328125p1014 == 1.482622210063096357401946079335175454616546630859375p29
; [HW: 1.482622210063096357401946079335175454616546630859375p29] 

; mpf : + 2173537205400886 29
; mpfd: + 2173537205400886 29 (7.95977e+008) class: Pos. norm. non-zero
; hwf : + 2173537205400886 29 (7.95977e+008) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000011100 #b0111101110001101001000010001000010001011010100110110)))
(assert (= y (fp #b1 #b11111110101 #b0010010111101100010000100000100001110000001111010000)))
(assert (= r (fp #b0 #b10000011100 #x7b8d21108b536)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
