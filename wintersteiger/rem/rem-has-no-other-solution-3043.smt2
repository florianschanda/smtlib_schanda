(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9055658446708825248805396768148057162761688232421875p-647 {- 4078306000619235 -647 (-3.263e-195)}
; Y = -1.6708814424793334563190683184075169265270233154296875p248 {- 3021381414359707 248 (-7.55761e+074)}
; -1.9055658446708825248805396768148057162761688232421875p-647 % -1.6708814424793334563190683184075169265270233154296875p248 == -1.9055658446708825248805396768148057162761688232421875p-647
; [HW: -1.9055658446708825248805396768148057162761688232421875p-647] 

; mpf : - 4078306000619235 -647
; mpfd: - 4078306000619235 -647 (-3.263e-195) class: Neg. norm. non-zero
; hwf : - 4078306000619235 -647 (-3.263e-195) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111000 #b1110011111010011001010011100011100111100011011100011)))
(assert (= y (fp #b1 #b10011110111 #b1010101110111110111000101101111011110001001010011011)))
(assert (= r (fp #b1 #b00101111000 #xe7d329c73c6e3)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
