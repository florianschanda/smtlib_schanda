(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.440520276059821025427254426176659762859344482421875p908 {- 1983926951112158 908 (-3.11713e+273)}
; Y = 1.61117762813910392338812016532756388187408447265625p872 {+ 2752499338344452 872 (5.07341e+262)}
; -1.440520276059821025427254426176659762859344482421875p908 % 1.61117762813910392338812016532756388187408447265625p872 == -1.63618790628229504591217846609652042388916015625p871
; [HW: -1.63618790628229504591217846609652042388916015625p871] 

; mpf : - 2865135617670560 871
; mpfd: - 2865135617670560 871 (-2.57608e+262) class: Neg. norm. non-zero
; hwf : - 2865135617670560 871 (-2.57608e+262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110001011 #b0111000011000101111011111101001011100110110111011110)))
(assert (= y (fp #b0 #b11101100111 #b1001110001110110001000110001010011100111100000000100)))
(assert (= r (fp #b0 #b11101100110 #x960f103e37268)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
