(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3524999615996666779693669013795442879199981689453125p-362 {+ 1587518695708373 -362 (1.43972e-109)}
; Y = 1.7243307617870813341909297378151677548885345458984375p-853 {+ 3262095748877287 -853 (2.87101e-257)}
; 1.3524999615996666779693669013795442879199981689453125p-362 % 1.7243307617870813341909297378151677548885345458984375p-853 == 1.3305257564455670316050373003236018121242523193359375p-853
; [HW: 1.3305257564455670316050373003236018121242523193359375p-853] 

; mpf : + 1488555673564607 -853
; mpfd: + 1488555673564607 -853 (2.21532e-257) class: Pos. norm. non-zero
; hwf : + 1488555673564607 -853 (2.21532e-257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010101 #b0101101000111101011011111111111011101001011011010101)))
(assert (= y (fp #b0 #b00010101010 #b1011100101101101101111011010010101011100101111100111)))
(assert (= r (fp #b1 #b00010101000 #x93419e8bc58a0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
