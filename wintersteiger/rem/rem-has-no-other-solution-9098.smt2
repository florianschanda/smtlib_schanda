(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6437373740531098231798523556790314614772796630859375p-106 {+ 2899135397910047 -106 (2.02606e-032)}
; Y = 1.8635066424219057790168108112993650138378143310546875p678 {+ 3888888193043243 678 (2.33705e+204)}
; 1.6437373740531098231798523556790314614772796630859375p-106 % 1.8635066424219057790168108112993650138378143310546875p678 == 1.6437373740531098231798523556790314614772796630859375p-106
; [HW: 1.6437373740531098231798523556790314614772796630859375p-106] 

; mpf : + 2899135397910047 -106
; mpfd: + 2899135397910047 -106 (2.02606e-032) class: Pos. norm. non-zero
; hwf : + 2899135397910047 -106 (2.02606e-032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110010101 #b1010010011001011111110001111100011000101011000011111)))
(assert (= y (fp #b0 #b11010100101 #b1101110100001110110001010111010100010100101100101011)))
(assert (= r (fp #b0 #b01110010101 #xa4cbf8f8c561f)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
