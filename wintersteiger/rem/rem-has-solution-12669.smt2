(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.141344650816963568473738632746972143650054931640625p-776 {- 636559716750090 -776 (-2.87171e-234)}
; Y = 1.4580839115542507666845040148473344743251800537109375p806 {+ 2063026533380143 806 (6.22242e+242)}
; -1.141344650816963568473738632746972143650054931640625p-776 % 1.4580839115542507666845040148473344743251800537109375p806 == -1.141344650816963568473738632746972143650054931640625p-776
; [HW: -1.141344650816963568473738632746972143650054931640625p-776] 

; mpf : - 636559716750090 -776
; mpfd: - 636559716750090 -776 (-2.87171e-234) class: Neg. norm. non-zero
; hwf : - 636559716750090 -776 (-2.87171e-234) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110111 #b0010010000101111001010011011110010111001001100001010)))
(assert (= y (fp #b0 #b11100100101 #b0111010101000100111111001011101011110011000000101111)))
(assert (= r (fp #b1 #b00011110111 #x242f29bcb930a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
