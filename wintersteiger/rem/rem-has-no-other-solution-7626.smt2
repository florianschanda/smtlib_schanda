(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1539428558667454982611388913937844336032867431640625p-345 {+ 693296988317825 -345 (1.61004e-104)}
; Y = 1.1690537245826566614681496503180824220180511474609375p-230 {+ 761350291036047 -230 (6.77541e-070)}
; 1.1539428558667454982611388913937844336032867431640625p-345 % 1.1690537245826566614681496503180824220180511474609375p-230 == 1.1539428558667454982611388913937844336032867431640625p-345
; [HW: 1.1539428558667454982611388913937844336032867431640625p-345] 

; mpf : + 693296988317825 -345
; mpfd: + 693296988317825 -345 (1.61004e-104) class: Pos. norm. non-zero
; hwf : + 693296988317825 -345 (1.61004e-104) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010100110 #b0010011101101000110011001000101101100110100010000001)))
(assert (= y (fp #b0 #b01100011001 #b0010101101000111000110101101101001011001011110001111)))
(assert (= r (fp #b0 #b01010100110 #x2768cc8b66881)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
