(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.70938606932681036454368950217030942440032958984375p70 {+ 3194790837482044 70 (2.01809e+021)}
; Y = 1.8497550238073288131346316731651313602924346923828125p-569 {+ 3826956408574893 -569 (9.57297e-172)}
; 1.70938606932681036454368950217030942440032958984375p70 % 1.8497550238073288131346316731651313602924346923828125p-569 == 1.623753970800506873928270579199306666851043701171875p-569
; [HW: 1.623753970800506873928270579199306666851043701171875p-569] 

; mpf : + 2809138150468030 -569
; mpfd: + 2809138150468030 -569 (8.40335e-172) class: Pos. norm. non-zero
; hwf : + 2809138150468030 -569 (8.40335e-172) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001000101 #b1011010110011010010100110100111111111111001000111100)))
(assert (= y (fp #b0 #b00111000110 #b1101100110001001100010111001010011011101001110101101)))
(assert (= r (fp #b1 #b00111000011 #xced9a3dc34f78)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
