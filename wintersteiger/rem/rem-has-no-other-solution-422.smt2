(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3995853630990391369692815715097822248935699462890625p-723 {+ 1799572492355537 -723 (3.17185e-218)}
; Y = 1.659967646768178095584289621911011636257171630859375p-488 {+ 2972230048061750 -488 (2.07712e-147)}
; 1.3995853630990391369692815715097822248935699462890625p-723 % 1.659967646768178095584289621911011636257171630859375p-488 == 1.3995853630990391369692815715097822248935699462890625p-723
; [HW: 1.3995853630990391369692815715097822248935699462890625p-723] 

; mpf : + 1799572492355537 -723
; mpfd: + 1799572492355537 -723 (3.17185e-218) class: Pos. norm. non-zero
; hwf : + 1799572492355537 -723 (3.17185e-218) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101100 #b0110011001001011001110011111001001111000011111010001)))
(assert (= y (fp #b0 #b01000010111 #b1010100011110011101000111100001101001001100100110110)))
(assert (= r (fp #b0 #b00100101100 #x664b39f2787d1)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
