(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.457521017198718293883530350285582244396209716796875p-887 {- 2060491482570318 -887 (-1.41257e-267)}
; Y = 1.0526559494476133149731822413741610944271087646484375p452 {+ 237141314311111 452 (1.22418e+136)}
; -1.457521017198718293883530350285582244396209716796875p-887 % 1.0526559494476133149731822413741610944271087646484375p452 == -1.457521017198718293883530350285582244396209716796875p-887
; [HW: -1.457521017198718293883530350285582244396209716796875p-887] 

; mpf : - 2060491482570318 -887
; mpfd: - 2060491482570318 -887 (-1.41257e-267) class: Neg. norm. non-zero
; hwf : - 2060491482570318 -887 (-1.41257e-267) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010001000 #b0111010100100000000110001110111000011001111001001110)))
(assert (= y (fp #b0 #b10111000011 #b0000110101111010110111000011110011010001001111000111)))
(assert (= r (fp #b1 #b00010001000 #x752018ee19e4e)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
