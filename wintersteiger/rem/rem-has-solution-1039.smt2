(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6889808791494622663975633258814923465251922607421875p-676 {- 3102894030602915 -676 (-5.38701e-204)}
; Y = 1.0565283989513323259501476059085689485073089599609375p-451 {+ 254581276453071 -451 (1.81699e-136)}
; -1.6889808791494622663975633258814923465251922607421875p-676 % 1.0565283989513323259501476059085689485073089599609375p-451 == -1.6889808791494622663975633258814923465251922607421875p-676
; [HW: -1.6889808791494622663975633258814923465251922607421875p-676] 

; mpf : - 3102894030602915 -676
; mpfd: - 3102894030602915 -676 (-5.38701e-204) class: Neg. norm. non-zero
; hwf : - 3102894030602915 -676 (-5.38701e-204) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101011011 #b1011000001100001000011010000011110000100001010100011)))
(assert (= y (fp #b0 #b01000111100 #b0000111001111000101001010010100011001010100011001111)))
(assert (= r (fp #b1 #b00101011011 #xb0610d07842a3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
