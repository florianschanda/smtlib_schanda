(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4052692399204627093922681524418294429779052734375p236 {+ 1825170397890520 236 (1.55181e+071)}
; Y = -1.0484180291095288595215606619603931903839111328125p201 {- 218055417855688 201 (-3.36949e+060)}
; 1.4052692399204627093922681524418294429779052734375p236 % -1.0484180291095288595215606619603931903839111328125p201 == 1.095405302004817116312551661394536495208740234375p200
; [HW: 1.095405302004817116312551661394536495208740234375p200] 

; mpf : + 429667282558064 200
; mpfd: + 429667282558064 200 (1.76025e+060) class: Pos. norm. non-zero
; hwf : + 429667282558064 200 (1.76025e+060) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101011 #b0110011110111111101110011001001110001000011111011000)))
(assert (= y (fp #b1 #b10011001000 #b0000110001100101000111111011101110001111111011001000)))
(assert (= r (fp #b1 #b10011000111 #x005dc41b26120)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
