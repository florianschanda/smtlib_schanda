(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2531327162257543950119043074664659798145294189453125p738 {- 1140008406469589 738 (-1.8119e+222)}
; Y = -1.2908601371134202917545508171315304934978485107421875p-730 {- 1309917605120931 -730 (-2.28551e-220)}
; -1.2531327162257543950119043074664659798145294189453125p738 % -1.2908601371134202917545508171315304934978485107421875p-730 == -1.072668927195532972973524010740220546722412109375p-733
; [HW: -1.072668927195532972973524010740220546722412109375p-733] 

; mpf : - 327271753439216 -733
; mpfd: - 327271753439216 -733 (-2.37399e-221) class: Neg. norm. non-zero
; hwf : - 327271753439216 -733 (-2.37399e-221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011100001 #b0100000011001101010011100100000110111100101111010101)))
(assert (= y (fp #b1 #b00100100101 #b0100101001110101110011110101100010011100101110100011)))
(assert (= r (fp #b1 #b00100100010 #x129a6e49bd7f0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
