(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.688826848391210777577953194850124418735504150390625p-100 {- 3102200337737450 -100 (-1.33225e-030)}
; Y = 1.5725078770086156065843852047692053020000457763671875p747 {+ 2578346261562675 747 (1.16412e+225)}
; -1.688826848391210777577953194850124418735504150390625p-100 % 1.5725078770086156065843852047692053020000457763671875p747 == -1.688826848391210777577953194850124418735504150390625p-100
; [HW: -1.688826848391210777577953194850124418735504150390625p-100] 

; mpf : - 3102200337737450 -100
; mpfd: - 3102200337737450 -100 (-1.33225e-030) class: Neg. norm. non-zero
; hwf : - 3102200337737450 -100 (-1.33225e-030) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110011011 #b1011000001010110111101001101001001110010011011101010)))
(assert (= y (fp #b0 #b11011101010 #b1001001010001111111000000101000001110100010100110011)))
(assert (= r (fp #b1 #b01110011011 #xb056f4d2726ea)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
