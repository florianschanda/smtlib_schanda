(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.396229952957629194543187622912228107452392578125p392 {+ 1784461068493008 392 (1.40837e+118)}
; Y = -1.4479980976915560741957733625895343720912933349609375p481 {- 2017604065826383 481 (-9.04057e+144)}
; 1.396229952957629194543187622912228107452392578125p392 % -1.4479980976915560741957733625895343720912933349609375p481 == 1.396229952957629194543187622912228107452392578125p392
; [HW: 1.396229952957629194543187622912228107452392578125p392] 

; mpf : + 1784461068493008 392
; mpfd: + 1784461068493008 392 (1.40837e+118) class: Pos. norm. non-zero
; hwf : + 1784461068493008 392 (1.40837e+118) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000111 #b0110010101101111010100111000000110100110000011010000)))
(assert (= y (fp #b1 #b10111100000 #b0111001010110000000000001101101001000001011001001111)))
(assert (= r (fp #b0 #b10110000111 #x656f5381a60d0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
