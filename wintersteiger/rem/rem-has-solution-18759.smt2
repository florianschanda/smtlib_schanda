(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.168375091828139478167258857865817844867706298828125p713 {- 758294000815682 713 (-5.03465e+214)}
; Y = 1.8399923458104707751914475011290051043033599853515625p184 {+ 3782989215586105 184 (4.51165e+055)}
; -1.168375091828139478167258857865817844867706298828125p713 % 1.8399923458104707751914475011290051043033599853515625p184 == -1.3348620931630161834391401498578488826751708984375p182
; [HW: -1.3348620931630161834391401498578488826751708984375p182] 

; mpf : - 1508084797989464 182
; mpfd: - 1508084797989464 182 (-8.18268e+054) class: Neg. norm. non-zero
; hwf : - 1508084797989464 182 (-8.18268e+054) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011001000 #b0010101100011010101000010100100011011100111001000010)))
(assert (= y (fp #b0 #b10010110111 #b1101011100001001101111010000011000100101011100111001)))
(assert (= r (fp #b1 #b10010110101 #x55b985aace258)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
