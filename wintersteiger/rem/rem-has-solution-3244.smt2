(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8695003209265108612413541777641512453556060791015625p195 {+ 3915881321323161 195 (9.38803e+058)}
; Y = 1.7133417304635483180419441850972361862659454345703125p-356 {+ 3212605551503461 -356 (1.16725e-107)}
; 1.8695003209265108612413541777641512453556060791015625p195 % 1.7133417304635483180419441850972361862659454345703125p-356 == 1.64091818956807689033894348540343344211578369140625p-357
; [HW: 1.64091818956807689033894348540343344211578369140625p-357] 

; mpf : + 2886438919713764 -357
; mpfd: + 2886438919713764 -357 (5.58957e-108) class: Pos. norm. non-zero
; hwf : + 2886438919713764 -357 (5.58957e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000010 #b1101111010010111100100101011001000111101101010011001)))
(assert (= y (fp #b0 #b01010011011 #b1011011010011101100100000100101100110110100001100101)))
(assert (= r (fp #b0 #b01010011010 #xa41336e79b3e4)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
