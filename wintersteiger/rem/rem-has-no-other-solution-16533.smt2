(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.21966677920238897314675341476686298847198486328125p240 {+ 989291224961556 240 (2.15496e+072)}
; Y = -1.6113806313331557884538369762594811618328094482421875p997 {- 2753413583453539 997 (-2.15826e+300)}
; 1.21966677920238897314675341476686298847198486328125p240 % -1.6113806313331557884538369762594811618328094482421875p997 == 1.21966677920238897314675341476686298847198486328125p240
; [HW: 1.21966677920238897314675341476686298847198486328125p240] 

; mpf : + 989291224961556 240
; mpfd: + 989291224961556 240 (2.15496e+072) class: Pos. norm. non-zero
; hwf : + 989291224961556 240 (2.15496e+072) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101111 #b0011100000111100000101010000000010110001001000010100)))
(assert (= y (fp #b1 #b11111100100 #b1001110010000011011100001110100011111011110101100011)))
(assert (= r (fp #b0 #b10011101111 #x383c1500b1214)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
