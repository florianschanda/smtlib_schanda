(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.557530620625870998452455751248635351657867431640625p-71 {- 2510894695298314 -71 (-6.5964e-022)}
; Y = -1.654670554325866849154635929153300821781158447265625p-339 {- 2948374064512410 -339 (-1.47755e-102)}
; -1.557530620625870998452455751248635351657867431640625p-71 % -1.654670554325866849154635929153300821781158447265625p-339 == -1.4344955464343325246545646223239600658416748046875p-339
; [HW: -1.4344955464343325246545646223239600658416748046875p-339] 

; mpf : - 1956793981015800 -339
; mpfd: - 1956793981015800 -339 (-1.28095e-102) class: Neg. norm. non-zero
; hwf : - 1956793981015800 -339 (-1.28095e-102) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110111000 #b1000111010111010010100111010011000011011010100001010)))
(assert (= y (fp #b1 #b01010101100 #b1010011110011000011111010100110001111011110110011010)))
(assert (= r (fp #b0 #b01010101001 #xc2eb1d5253510)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
