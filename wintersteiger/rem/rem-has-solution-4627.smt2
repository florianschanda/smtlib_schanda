(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.073050118853035694854725079494528472423553466796875p637 {+ 328988488045902 637 (6.11966e+191)}
; Y = 1.6212337918762267374717112033977173268795013427734375p541 {+ 2797788273603735 541 (1.16701e+163)}
; 1.073050118853035694854725079494528472423553466796875p637 % 1.6212337918762267374717112033977173268795013427734375p541 == 1.201145620079987708095359266735613346099853515625p537
; [HW: 1.201145620079987708095359266735613346099853515625p537] 

; mpf : + 905879339639440 537
; mpfd: + 905879339639440 537 (5.40385e+161) class: Pos. norm. non-zero
; hwf : + 905879339639440 537 (5.40385e+161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001111100 #b0001001010110011011010011001111101110001010101001110)))
(assert (= y (fp #b0 #b11000011100 #b1001111100001001001011011000001101000111010010010111)))
(assert (= r (fp #b0 #b11000011000 #x337e4783fa290)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
