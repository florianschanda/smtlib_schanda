(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6449161905636817682108130611595697700977325439453125p177 {+ 2904444315507797 177 (3.15103e+053)}
; Y = -1.2626508077518583395004725389298982918262481689453125p563 {- 1182874079919829 563 (-3.81216e+169)}
; 1.6449161905636817682108130611595697700977325439453125p177 % -1.2626508077518583395004725389298982918262481689453125p563 == 1.6449161905636817682108130611595697700977325439453125p177
; [HW: 1.6449161905636817682108130611595697700977325439453125p177] 

; mpf : + 2904444315507797 177
; mpfd: + 2904444315507797 177 (3.15103e+053) class: Pos. norm. non-zero
; hwf : + 2904444315507797 177 (3.15103e+053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010110000 #b1010010100011001001110100011101100100001110001010101)))
(assert (= y (fp #b1 #b11000110010 #b0100001100111101000101010101010110001111111011010101)))
(assert (= r (fp #b0 #b10010110000 #xa5193a3b21c55)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
