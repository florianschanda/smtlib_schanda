(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5212476982916280920932194931083358824253082275390625p-408 {- 2347490939793905 -408 (-2.30124e-123)}
; Y = 1.8721072805226179891491256057634018361568450927734375p671 {+ 3927622023588759 671 (1.83425e+202)}
; -1.5212476982916280920932194931083358824253082275390625p-408 % 1.8721072805226179891491256057634018361568450927734375p671 == -1.5212476982916280920932194931083358824253082275390625p-408
; [HW: -1.5212476982916280920932194931083358824253082275390625p-408] 

; mpf : - 2347490939793905 -408
; mpfd: - 2347490939793905 -408 (-2.30124e-123) class: Neg. norm. non-zero
; hwf : - 2347490939793905 -408 (-2.30124e-123) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001100111 #b1000010101110000011111010011100101000111000111110001)))
(assert (= y (fp #b0 #b11010011110 #b1101111101000010011011000011100001110010101110010111)))
(assert (= r (fp #b1 #b01001100111 #x85707d39471f1)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
