(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.059494291403237031801154444110579788684844970703125p-520 {- 267938468594290 -520 (-3.08675e-157)}
; Y = -1.4057562987823823963395852842950262129306793212890625p-955 {- 1827363915999569 -955 (-4.61598e-288)}
; -1.059494291403237031801154444110579788684844970703125p-520 % -1.4057562987823823963395852842950262129306793212890625p-955 == -1.371712370733856989346577393007464706897735595703125p-955
; [HW: -1.371712370733856989346577393007464706897735595703125p-955] 

; mpf : - 1674043694326002 -955
; mpfd: - 1674043694326002 -955 (-4.5042e-288) class: Neg. norm. non-zero
; hwf : - 1674043694326002 -955 (-4.5042e-288) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111110111 #b0000111100111011000001001001001111100000001001110010)))
(assert (= y (fp #b1 #b00001000100 #b0110011111011111101001010001000101101010100101010001)))
(assert (= r (fp #b0 #b00000111111 #x16e34ab310be0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
