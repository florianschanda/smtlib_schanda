(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.2035139044143055020441579472390003502368927001953125p29 {- 916545144084981 29 (-6.46132e+008)}
; Y = -0.0923204225180327409105984770576469600200653076171875p-1022 {- 415774220450899 -1023 (-2.0542e-309)}
; -1.2035139044143055020441579472390003502368927001953125p29 % -0.0923204225180327409105984770576469600200653076171875p-1022 == -0.008592770173080577222890497068874537944793701171875p-1022
; [HW: -0.008592770173080577222890497068874537944793701171875p-1022] 

; mpf : - 38698396549566 -1023
; mpfd: - 38698396549566 -1023 (-1.91195e-310) class: Neg. denorm.
; hwf : - 38698396549566 -1023 (-1.91195e-310) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011100 #b0011010000011001011111001011101110111101100111110101)))
(assert (= y (fp #b1 #b00000000000 #b0001011110100010010011111010101101110111110001010011)))
(assert (= r (fp #b1 #b00000000000 #x023322c2e01be)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
