(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7635559715340123343452205517678521573543548583984375p-890 {- 3438750388877095 -890 (-2.13645e-268)}
; Y = 1.9035670617841555785076934625976718962192535400390625p-430 {+ 4069304282755377 -430 (6.86547e-130)}
; -1.7635559715340123343452205517678521573543548583984375p-890 % 1.9035670617841555785076934625976718962192535400390625p-430 == -1.7635559715340123343452205517678521573543548583984375p-890
; [HW: -1.7635559715340123343452205517678521573543548583984375p-890] 

; mpf : - 3438750388877095 -890
; mpfd: - 3438750388877095 -890 (-2.13645e-268) class: Neg. norm. non-zero
; hwf : - 3438750388877095 -890 (-2.13645e-268) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010000101 #b1100001101111000011001110111011001100111011100100111)))
(assert (= y (fp #b0 #b01001010001 #b1110011101010000001010111100010000011011000100110001)))
(assert (= r (fp #b1 #b00010000101 #xc378677667727)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
