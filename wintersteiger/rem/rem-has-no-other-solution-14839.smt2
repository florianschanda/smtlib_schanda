(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.999379326159749670210885597043670713901519775390625p118 {- 4500804360894826 118 (-6.64408e+035)}
; Y = 1.2231170124034556057068812151555903255939483642578125p336 {+ 1004829693920221 336 (1.71217e+101)}
; -1.999379326159749670210885597043670713901519775390625p118 % 1.2231170124034556057068812151555903255939483642578125p336 == -1.999379326159749670210885597043670713901519775390625p118
; [HW: -1.999379326159749670210885597043670713901519775390625p118] 

; mpf : - 4500804360894826 118
; mpfd: - 4500804360894826 118 (-6.64408e+035) class: Neg. norm. non-zero
; hwf : - 4500804360894826 118 (-6.64408e+035) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001110101 #b1111111111010111010100101101001000100111100101101010)))
(assert (= y (fp #b0 #b10101001111 #b0011100100011110001100100100111101110100001111011101)))
(assert (= r (fp #b1 #b10001110101 #xffd752d22796a)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
