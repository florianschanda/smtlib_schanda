(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6054322209785640840351561564602889120578765869140625p-106 {- 2726624324797153 -106 (-1.97885e-032)}
; Y = -1.9638295262536369367722954848431982100009918212890625p-734 {- 4340702295284561 -734 (-2.17314e-221)}
; -1.6054322209785640840351561564602889120578765869140625p-106 % -1.9638295262536369367722954848431982100009918212890625p-734 == -1.862990364979915991483494508429430425167083740234375p-734
; [HW: -1.862990364979915991483494508429430425167083740234375p-734] 

; mpf : - 3886563086147878 -734
; mpfd: - 3886563086147878 -734 (-2.06155e-221) class: Neg. norm. non-zero
; hwf : - 3886563086147878 -734 (-2.06155e-221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110010101 #b1001101011111101100110110010010100001100001011100001)))
(assert (= y (fp #b1 #b00100100001 #b1111011010111101100010000010011000101101101101010001)))
(assert (= r (fp #b0 #b00100011101 #x9d09863d3a2b0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
