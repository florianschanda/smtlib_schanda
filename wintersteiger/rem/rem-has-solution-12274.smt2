(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.6000580925630967232820012213778682053089141845703125p296 {+ 2702421402067813 296 (2.03711e+089)}
; Y = -1.9179263890483408960818678679061122238636016845703125p104 {- 4133972943671653 104 (-3.89002e+031)}
; 1.6000580925630967232820012213778682053089141845703125p296 % -1.9179263890483408960818678679061122238636016845703125p104 == 1.728982152977554864747844476369209587574005126953125p103
; [HW: 1.728982152977554864747844476369209587574005126953125p103] 

; mpf : + 3283043752509458 103
; mpfd: + 3283043752509458 103 (1.7534e+031) class: Pos. norm. non-zero
; hwf : + 3283043752509458 103 (1.7534e+031) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100111 #b1001100110011101011010000011101101000010001101100101)))
(assert (= y (fp #b1 #b10001100111 #b1110101011111101001110010100110100011001000101100101)))
(assert (= r (fp #b0 #b10001100110 #xba9e930a68012)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
