(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8444025941587340877703127262066118419170379638671875p211 {- 3802851208403955 211 (-6.06995e+063)}
; Y = 1.3432385526896590821621657596551813185214996337890625p-855 {+ 1545809017992337 -855 (5.59122e-258)}
; -1.8444025941587340877703127262066118419170379638671875p211 % 1.3432385526896590821621657596551813185214996337890625p-855 == -1.97144094236925848662167481961660087108612060546875p-856
; [HW: -1.97144094236925848662167481961660087108612060546875p-856] 

; mpf : - 4374981066066636 -856
; mpfd: - 4374981066066636 -856 (-4.10306e-258) class: Neg. norm. non-zero
; hwf : - 4374981066066636 -856 (-4.10306e-258) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010010 #b1101100000101010110001001011011010010001101111110011)))
(assert (= y (fp #b0 #b00010101000 #b0101011111011110011110110101011010000111010010010001)))
(assert (= r (fp #b0 #b00010100110 #x6e19384f2bcac)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
