(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.845645824710087534725744262686930596828460693359375p-702 {- 3808450221051766 -702 (-8.77185e-212)}
; Y = 1.99590883304439525858242632239125669002532958984375p470 {+ 4485174649393724 470 (6.08469e+141)}
; -1.845645824710087534725744262686930596828460693359375p-702 % 1.99590883304439525858242632239125669002532958984375p470 == -1.845645824710087534725744262686930596828460693359375p-702
; [HW: -1.845645824710087534725744262686930596828460693359375p-702] 

; mpf : - 3808450221051766 -702
; mpfd: - 3808450221051766 -702 (-8.77185e-212) class: Neg. norm. non-zero
; hwf : - 3808450221051766 -702 (-8.77185e-212) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101000001 #b1101100001111100001111101010100100100000111101110110)))
(assert (= y (fp #b0 #b10111010101 #b1111111011110011111000011001101110111001001000111100)))
(assert (= r (fp #b1 #b00101000001 #xd87c3ea920f76)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
