(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.820714961892862415737681658356450498104095458984375p221 {- 3696171596558086 221 (-6.1358e+066)}
; Y = 1.6113400175306094030958092844230122864246368408203125p227 {+ 2753230675147525 227 (3.47533e+068)}
; -1.820714961892862415737681658356450498104095458984375p221 % 1.6113400175306094030958092844230122864246368408203125p227 == -1.820714961892862415737681658356450498104095458984375p221
; [HW: -1.820714961892862415737681658356450498104095458984375p221] 

; mpf : - 3696171596558086 221
; mpfd: - 3696171596558086 221 (-6.1358e+066) class: Neg. norm. non-zero
; hwf : - 3696171596558086 221 (-6.1358e+066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011011100 #b1101001000011010011000000011000010101010111100000110)))
(assert (= y (fp #b0 #b10011100010 #b1001110010000000110001111000011000000111101100000101)))
(assert (= r (fp #b1 #b10011011100 #xd21a6030aaf06)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
