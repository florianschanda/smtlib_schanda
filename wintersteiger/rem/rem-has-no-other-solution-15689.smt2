(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4645021637414199489057864411734044551849365234375p-695 {- 2091931771538648 -695 (-8.90929e-210)}
; Y = 1.921439744333335308823507148190401494503021240234375p193 {+ 4149795689223974 193 (2.41221e+058)}
; -1.4645021637414199489057864411734044551849365234375p-695 % 1.921439744333335308823507148190401494503021240234375p193 == -1.4645021637414199489057864411734044551849365234375p-695
; [HW: -1.4645021637414199489057864411734044551849365234375p-695] 

; mpf : - 2091931771538648 -695
; mpfd: - 2091931771538648 -695 (-8.90929e-210) class: Neg. norm. non-zero
; hwf : - 2091931771538648 -695 (-8.90929e-210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101001000 #b0111011011101001100111010010001000110000110011011000)))
(assert (= y (fp #b0 #b10011000000 #b1110101111100011011110011001111100100101011100100110)))
(assert (= r (fp #b1 #b00101001000 #x76e99d2230cd8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
