(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6883069073311711694174164222204126417636871337890625p-348 {- 3099858731373201 -348 (-2.94451e-105)}
; Y = -1.8426344894691222275895370330545119941234588623046875p-698 {- 3794888372782667 -698 (-1.40121e-210)}
; -1.6883069073311711694174164222204126417636871337890625p-348 % -1.8426344894691222275895370330545119941234588623046875p-698 == -1.1408329257354885566400071184034459292888641357421875p-698
; [HW: -1.1408329257354885566400071184034459292888641357421875p-698] 

; mpf : - 634255111863843 -698
; mpfd: - 634255111863843 -698 (-8.67531e-211) class: Neg. norm. non-zero
; hwf : - 634255111863843 -698 (-8.67531e-211) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010100011 #b1011000000110100111000011010100010011001001010010001)))
(assert (= y (fp #b1 #b00101000101 #b1101011110110110111001001101011011000000011001001011)))
(assert (= r (fp #b0 #b00101000100 #x675288d909050)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
