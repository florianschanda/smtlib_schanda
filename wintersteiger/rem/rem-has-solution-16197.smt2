(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2157291669494874053469857244635932147502899169921875p-898 {+ 971557795886659 -898 (5.75308e-271)}
; Y = -1.74594507919425812048075385973788797855377197265625p607 {- 3359437980698116 607 (-9.27338e+182)}
; 1.2157291669494874053469857244635932147502899169921875p-898 % -1.74594507919425812048075385973788797855377197265625p607 == 1.2157291669494874053469857244635932147502899169921875p-898
; [HW: 1.2157291669494874053469857244635932147502899169921875p-898] 

; mpf : + 971557795886659 -898
; mpfd: + 971557795886659 -898 (5.75308e-271) class: Pos. norm. non-zero
; hwf : + 971557795886659 -898 (5.75308e-271) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001111101 #b0011011100111010000001101101010011010111011001000011)))
(assert (= y (fp #b1 #b11001011110 #b1011111011110110010000011011011111000000011000000100)))
(assert (= r (fp #b0 #b00001111101 #x373a06d4d7643)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
