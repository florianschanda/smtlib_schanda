(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5734123497489462817355843071709387004375457763671875p-640 {- 2582419644658995 -640 (-3.44862e-193)}
; Y = -1.6905490276173742447696213275776244699954986572265625p444 {- 3109956343458665 444 (-7.67973e+133)}
; -1.5734123497489462817355843071709387004375457763671875p-640 % -1.6905490276173742447696213275776244699954986572265625p444 == -1.5734123497489462817355843071709387004375457763671875p-640
; [HW: -1.5734123497489462817355843071709387004375457763671875p-640] 

; mpf : - 2582419644658995 -640
; mpfd: - 2582419644658995 -640 (-3.44862e-193) class: Neg. norm. non-zero
; hwf : - 2582419644658995 -640 (-3.44862e-193) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111111 #b1001001011001011001001101101100101001011010100110011)))
(assert (= y (fp #b1 #b10110111011 #b1011000011000111110100100011000111100110101101101001)))
(assert (= r (fp #b1 #b00101111111 #x92cb26d94b533)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
