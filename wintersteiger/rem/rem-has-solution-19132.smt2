(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.809704556683458864796421039500273764133453369140625p444 {+ 3646585139759818 444 (8.22102e+133)}
; Y = 1.3320932542988714875065170417656190693378448486328125p-226 {+ 1495615056312653 -226 (1.23525e-068)}
; 1.809704556683458864796421039500273764133453369140625p444 % 1.3320932542988714875065170417656190693378448486328125p-226 == 1.92802510790598891077252119430340826511383056640625p-228
; [HW: 1.92802510790598891077252119430340826511383056640625p-228] 

; mpf : + 4179453530155876 -228
; mpfd: + 4179453530155876 -228 (4.46965e-069) class: Pos. norm. non-zero
; hwf : + 4179453530155876 -228 (4.46965e-069) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111011 #b1100111101001000110011000011111001100000101011001010)))
(assert (= y (fp #b0 #b01100011101 #b0101010100000100000100000100001001101111100101001101)))
(assert (= r (fp #b0 #b01100011011 #xed930db052b64)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
