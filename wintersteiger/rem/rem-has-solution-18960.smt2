(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8004628849485417863007796768215484917163848876953125p232 {- 3604964350378165 232 (-1.24263e+070)}
; Y = 1.413425567348772116105237728334031999111175537109375p-697 {+ 1861903231057366 -697 (2.14964e-210)}
; -1.8004628849485417863007796768215484917163848876953125p232 % 1.413425567348772116105237728334031999111175537109375p-697 == -1.82184981543663138126021294738166034221649169921875p-698
; [HW: -1.82184981543663138126021294738166034221649169921875p-698] 

; mpf : - 3701282522554924 -698
; mpfd: - 3701282522554924 -698 (-1.3854e-210) class: Neg. norm. non-zero
; hwf : - 3701282522554924 -698 (-1.3854e-210) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100111 #b1100110011101011001000101011100010000100000010110101)))
(assert (= y (fp #b0 #b00101000110 #b0110100111010110010000100000101100010111110111010110)))
(assert (= r (fp #b0 #b00101000101 #x0147c436a9980)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
