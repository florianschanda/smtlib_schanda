(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.391412227121938460783212576643563807010650634765625p-503 {+ 1762763960214618 -503 (5.31334e-152)}
; Y = -1.0980632327373551770932635918143205344676971435546875p741 {- 441637538414699 741 (-1.27015e+223)}
; 1.391412227121938460783212576643563807010650634765625p-503 % -1.0980632327373551770932635918143205344676971435546875p741 == 1.391412227121938460783212576643563807010650634765625p-503
; [HW: 1.391412227121938460783212576643563807010650634765625p-503] 

; mpf : + 1762763960214618 -503
; mpfd: + 1762763960214618 -503 (5.31334e-152) class: Pos. norm. non-zero
; hwf : + 1762763960214618 -503 (5.31334e-152) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01000001000 #b0110010000110011100101110111101010111110010001011010)))
(assert (= y (fp #b1 #b11011100100 #b0001100100011010101011000000100110001100000001101011)))
(assert (= r (fp #b0 #b01000001000 #x6433977abe45a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
