(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4275372111595163726605051124352030456066131591796875p-628 {+ 1925456424865019 -628 (1.28159e-189)}
; Y = -1.536058353791376784869271432398818433284759521484375p802 {- 2414192202383686 802 (-4.09698e+241)}
; 1.4275372111595163726605051124352030456066131591796875p-628 % -1.536058353791376784869271432398818433284759521484375p802 == 1.4275372111595163726605051124352030456066131591796875p-628
; [HW: 1.4275372111595163726605051124352030456066131591796875p-628] 

; mpf : + 1925456424865019 -628
; mpfd: + 1925456424865019 -628 (1.28159e-189) class: Pos. norm. non-zero
; hwf : + 1925456424865019 -628 (1.28159e-189) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110001011 #b0110110101110011000101000010001111000000110011111011)))
(assert (= y (fp #b1 #b11100100001 #b1000100100111011000111101100101001001000000101000110)))
(assert (= r (fp #b0 #b00110001011 #x6d731423c0cfb)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
