(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7246707953933737567098205545335076749324798583984375p564 {+ 3263627124099879 564 (1.04141e+170)}
; Y = -1.4255217060994933575557297444902360439300537109375p188 {- 1916379397027736 188 (-5.59259e+056)}
; 1.7246707953933737567098205545335076749324798583984375p564 % -1.4255217060994933575557297444902360439300537109375p188 == 1.40114544957919662238055025227367877960205078125p188
; [HW: 1.40114544957919662238055025227367877960205078125p188] 

; mpf : + 1806598497246240 188
; mpfd: + 1806598497246240 188 (5.49696e+056) class: Pos. norm. non-zero
; hwf : + 1806598497246240 188 (5.49696e+056) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000110011 #b1011100110000100000001100111011010010100101100100111)))
(assert (= y (fp #b1 #b10010111011 #b0110110011101110111111011001001101101111011110011000)))
(assert (= r (fp #b1 #b10010110101 #x8f616e236de00)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
