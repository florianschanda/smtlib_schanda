(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.369588375654764877964453262393362820148468017578125p-178 {- 1664478070879266 -178 (-3.57479e-054)}
; Y = -1.6249278143834240406562230418785475194454193115234375p-785 {- 2814424671990647 -785 (-7.98523e-237)}
; -1.369588375654764877964453262393362820148468017578125p-178 % -1.6249278143834240406562230418785475194454193115234375p-785 == -1.36097093660865997577502639614976942539215087890625p-786
; [HW: -1.36097093660865997577502639614976942539215087890625p-786] 

; mpf : - 1625668575602340 -786
; mpfd: - 1625668575602340 -786 (-3.34405e-237) class: Neg. norm. non-zero
; hwf : - 1625668575602340 -786 (-3.34405e-237) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001101 #b0101111010011101010110000000001001101011010000100010)))
(assert (= y (fp #b1 #b00011101110 #b1001111111111011010001001110110100100011001101110111)))
(assert (= r (fp #b1 #b00011101101 #x5c68975f8a6a4)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
