(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8092727321988333333280252190888859331607818603515625p-331 {+ 3644640375171769 -331 (4.13595e-100)}
; Y = -1.0567764646562063379775509019964374601840972900390625p850 {- 255698465069105 850 (-7.93377e+255)}
; 1.8092727321988333333280252190888859331607818603515625p-331 % -1.0567764646562063379775509019964374601840972900390625p850 == 1.8092727321988333333280252190888859331607818603515625p-331
; [HW: 1.8092727321988333333280252190888859331607818603515625p-331] 

; mpf : + 3644640375171769 -331
; mpfd: + 3644640375171769 -331 (4.13595e-100) class: Pos. norm. non-zero
; hwf : + 3644640375171769 -331 (4.13595e-100) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010110100 #b1100111100101100011111110110111001010110101010111001)))
(assert (= y (fp #b1 #b11101010001 #b0000111010001000111001110000001011100001100000110001)))
(assert (= r (fp #b0 #b01010110100 #xcf2c7f6e56ab9)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
