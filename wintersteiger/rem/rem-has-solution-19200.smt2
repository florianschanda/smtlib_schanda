(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9631908858399607087363847313099540770053863525390625p-365 {+ 4337826114555505 -365 (2.61225e-110)}
; Y = 1.6145525385351329195060543497675098478794097900390625p-547 {+ 2767698583546417 -547 (3.50465e-165)}
; 1.9631908858399607087363847313099540770053863525390625p-365 % 1.6145525385351329195060543497675098478794097900390625p-547 == 1.933042719802383402338818996213376522064208984375p-551
; [HW: 1.933042719802383402338818996213376522064208984375p-551] 

; mpf : + 4202050845222768 -551
; mpfd: + 4202050845222768 -551 (2.62249e-166) class: Pos. norm. non-zero
; hwf : + 4202050845222768 -551 (2.62249e-166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010010010 #b1111011010010011101011011000101001111100111001110001)))
(assert (= y (fp #b0 #b00111011100 #b1001110101010011010100001010111010101110101000110001)))
(assert (= r (fp #b0 #b00111011000 #xeedbe33f52770)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
