(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8964722023094922054298194780130870640277862548828125p764 {- 4037351876269037 764 (-1.84019e+230)}
; Y = -1.7673357483201197482003408367745578289031982421875p-929 {- 3455772990202552 -929 (-3.89451e-280)}
; -1.8964722023094922054298194780130870640277862548828125p764 % -1.7673357483201197482003408367745578289031982421875p-929 == -1.8960167382173125361077836714684963226318359375p-931
; [HW: -1.8960167382173125361077836714684963226318359375p-931] 

; mpf : - 4035300648353216 -931
; mpfd: - 4035300648353216 -931 (-1.04452e-280) class: Neg. norm. non-zero
; hwf : - 4035300648353216 -931 (-1.04452e-280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011111011 #b1110010101111111001100111100011010110001001111101101)))
(assert (= y (fp #b1 #b00001011110 #b1100010001110000000111011001100000010110001010111000)))
(assert (= r (fp #b1 #b00001011100 #xe5615a5b4fdc0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
