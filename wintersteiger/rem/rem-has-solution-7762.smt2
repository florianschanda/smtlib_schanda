(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0726248256276609271964161962387152016162872314453125p718 {+ 327073137634581 718 (1.47906e+216)}
; Y = -1.7795523404581661264245440179365687072277069091796875p376 {- 3510791630003195 376 (-2.73898e+113)}
; 1.0726248256276609271964161962387152016162872314453125p718 % -1.7795523404581661264245440179365687072277069091796875p376 == 1.3793743585342195245857510599307715892791748046875p376
; [HW: 1.3793743585342195245857510599307715892791748046875p376] 

; mpf : + 1708550219728632 376
; mpfd: + 1708550219728632 376 (2.12305e+113) class: Pos. norm. non-zero
; hwf : + 1708550219728632 376 (2.12305e+113) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001101 #b0001001010010111100010100110001011110010110100010101)))
(assert (= y (fp #b1 #b10101110111 #b1100011110010000101111011111111111001001101111111011)))
(assert (= r (fp #b1 #b10101110101 #x99c841c3c540c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
