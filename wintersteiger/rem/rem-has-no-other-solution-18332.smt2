(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2620111191589222787712287754402495920658111572265625p-649 {+ 1179993178611049 -649 (5.40252e-196)}
; Y = -1.5608400347204145486301740675116889178752899169921875p-332 {- 2525798971381315 -332 (-1.78402e-100)}
; 1.2620111191589222787712287754402495920658111572265625p-649 % -1.5608400347204145486301740675116889178752899169921875p-332 == 1.2620111191589222787712287754402495920658111572265625p-649
; [HW: 1.2620111191589222787712287754402495920658111572265625p-649] 

; mpf : + 1179993178611049 -649
; mpfd: + 1179993178611049 -649 (5.40252e-196) class: Pos. norm. non-zero
; hwf : + 1179993178611049 -649 (5.40252e-196) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110110 #b0100001100010011001010010010001111111001110101101001)))
(assert (= y (fp #b1 #b01010110011 #b1000111110010011001101100110011101101001011001000011)))
(assert (= r (fp #b0 #b00101110110 #x43132923f9d69)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
