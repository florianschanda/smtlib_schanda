(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.3275967944218354244156898857909254729747772216796875p-81 {- 1475364801285947 -81 (-5.49081e-025)}
; Y = 1.4404442814914617532195961757679469883441925048828125p441 {+ 1983584702002413 441 (8.17946e+132)}
; -1.3275967944218354244156898857909254729747772216796875p-81 % 1.4404442814914617532195961757679469883441925048828125p441 == -1.3275967944218354244156898857909254729747772216796875p-81
; [HW: -1.3275967944218354244156898857909254729747772216796875p-81] 

; mpf : - 1475364801285947 -81
; mpfd: - 1475364801285947 -81 (-5.49081e-025) class: Neg. norm. non-zero
; hwf : - 1475364801285947 -81 (-5.49081e-025) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110101110 #b0101001111011101011000100010111001010000111100111011)))
(assert (= y (fp #b0 #b10110111000 #b0111000011000000111101001101100010110111010011101101)))
(assert (= r (fp #b1 #b01110101110 #x53dd622e50f3b)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
