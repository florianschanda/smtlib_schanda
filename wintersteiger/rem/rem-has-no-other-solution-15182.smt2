(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0304847786585569213713142744381912052631378173828125p-992 {+ 137291237807149 -992 (2.46199e-299)}
; Y = -1.949381583061106315568622449063695967197418212890625p-65 {- 4275634543706410 -65 (-5.28381e-020)}
; 1.0304847786585569213713142744381912052631378173828125p-992 % -1.949381583061106315568622449063695967197418212890625p-65 == 1.0304847786585569213713142744381912052631378173828125p-992
; [HW: 1.0304847786585569213713142744381912052631378173828125p-992] 

; mpf : + 137291237807149 -992
; mpfd: + 137291237807149 -992 (2.46199e-299) class: Pos. norm. non-zero
; hwf : + 137291237807149 -992 (2.46199e-299) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011111 #b0000011111001101110110011011011101011101010000101101)))
(assert (= y (fp #b1 #b01110111110 #b1111001100001010101010111110001010101100000100101010)))
(assert (= r (fp #b0 #b00000011111 #x07cdd9b75d42d)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
