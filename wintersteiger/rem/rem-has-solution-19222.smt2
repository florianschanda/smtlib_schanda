(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0965073352922558580502254699240438640117645263671875p-710 {+ 434630399260723 -710 (2.0357e-214)}
; Y = 1.003294406053654608257375002722255885601043701171875p-343 {+ 14836685875646 -343 (5.59938e-104)}
; 1.0965073352922558580502254699240438640117645263671875p-710 % 1.003294406053654608257375002722255885601043701171875p-343 == 1.0965073352922558580502254699240438640117645263671875p-710
; [HW: 1.0965073352922558580502254699240438640117645263671875p-710] 

; mpf : + 434630399260723 -710
; mpfd: + 434630399260723 -710 (2.0357e-214) class: Pos. norm. non-zero
; hwf : + 434630399260723 -710 (2.0357e-214) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111001 #b0001100010110100101101000110100011100111100000110011)))
(assert (= y (fp #b0 #b01010101000 #b0000000011010111111001101111011001000010100110111110)))
(assert (= r (fp #b0 #b00100111001 #x18b4b468e7833)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
