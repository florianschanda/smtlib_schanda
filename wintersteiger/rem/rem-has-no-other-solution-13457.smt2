(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6634996709252256597011410121922381222248077392578125p893 {- 2988136870739293 893 (-1.09852e+269)}
; Y = 1.8028567017485210843830145677202381193637847900390625p82 {+ 3615745142826545 82 (8.71808e+024)}
; -1.6634996709252256597011410121922381222248077392578125p893 % 1.8028567017485210843830145677202381193637847900390625p82 == -1.99489972703942353149386690347455441951751708984375p80
; [HW: -1.99489972703942353149386690347455441951751708984375p80] 

; mpf : - 4480630039965756 80
; mpfd: - 4480630039965756 80 (-2.41169e+024) class: Neg. norm. non-zero
; hwf : - 4480630039965756 80 (-2.41169e+024) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101111100 #b1010100111011011000111010100101110000111110101011101)))
(assert (= y (fp #b0 #b10001010001 #b1100110110001000000001000100110101100010011000110001)))
(assert (= r (fp #b1 #b10001001111 #xfeb1bf9e6f03c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
