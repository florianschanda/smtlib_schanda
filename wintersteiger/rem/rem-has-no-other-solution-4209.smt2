(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.991677318258711526510751355090178549289703369140625p234 {+ 4466117600981706 234 (5.49842e+070)}
; Y = 1.609232501558348626957695159944705665111541748046875p631 {+ 2743739267000174 631 (1.43399e+190)}
; 1.991677318258711526510751355090178549289703369140625p234 % 1.609232501558348626957695159944705665111541748046875p631 == 1.991677318258711526510751355090178549289703369140625p234
; [HW: 1.991677318258711526510751355090178549289703369140625p234] 

; mpf : + 4466117600981706 234
; mpfd: + 4466117600981706 234 (5.49842e+070) class: Pos. norm. non-zero
; hwf : + 4466117600981706 234 (5.49842e+070) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101001 #b1111110111011110100100001001001000011011001011001010)))
(assert (= y (fp #b0 #b11001110110 #b1001101111110110101010010100010111011010011101101110)))
(assert (= r (fp #b0 #b10011101001 #xfdde90921b2ca)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
