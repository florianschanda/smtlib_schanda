(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.91822545432611857307847458287142217159271240234375p-272 {+ 4135319813945212 -272 (2.52779e-082)}
; Y = 1.6408702012330025343800343762268312275409698486328125p783 {+ 2886222799465805 783 (8.34758e+235)}
; 1.91822545432611857307847458287142217159271240234375p-272 % 1.6408702012330025343800343762268312275409698486328125p783 == 1.91822545432611857307847458287142217159271240234375p-272
; [HW: 1.91822545432611857307847458287142217159271240234375p-272] 

; mpf : + 4135319813945212 -272
; mpfd: + 4135319813945212 -272 (2.52779e-082) class: Pos. norm. non-zero
; hwf : + 4135319813945212 -272 (2.52779e-082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101111 #b1110101100010000110100101100100010101111011101111100)))
(assert (= y (fp #b0 #b11100001110 #b1010010000010000000100011100101101000110110101001101)))
(assert (= r (fp #b0 #b01011101111 #xeb10d2c8af77c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
