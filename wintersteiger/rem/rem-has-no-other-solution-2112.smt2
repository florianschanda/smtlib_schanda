(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.874716880212642156067204268765635788440704345703125p501 {+ 3939374615780338 501 (1.22734e+151)}
; Y = 1.3159498507068041472933828117675147950649261474609375p883 {+ 1422911629910927 883 (8.48644e+265)}
; 1.874716880212642156067204268765635788440704345703125p501 % 1.3159498507068041472933828117675147950649261474609375p883 == 1.874716880212642156067204268765635788440704345703125p501
; [HW: 1.874716880212642156067204268765635788440704345703125p501] 

; mpf : + 3939374615780338 501
; mpfd: + 3939374615780338 501 (1.22734e+151) class: Pos. norm. non-zero
; hwf : + 3939374615780338 501 (1.22734e+151) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111110100 #b1101111111101101011100100000100111000101101111110010)))
(assert (= y (fp #b0 #b11101110010 #b0101000011100010000101101110001111110110001110001111)))
(assert (= r (fp #b0 #b10111110100 #xdfed7209c5bf2)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
