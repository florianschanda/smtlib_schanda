(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7479637179131073398963280851603485643863677978515625p211 {- 3368529121280121 211 (-5.75256e+063)}
; Y = 1.184702481928592288085155814769677817821502685546875p385 {+ 831826028788014 385 (9.33593e+115)}
; -1.7479637179131073398963280851603485643863677978515625p211 % 1.184702481928592288085155814769677817821502685546875p385 == -1.7479637179131073398963280851603485643863677978515625p211
; [HW: -1.7479637179131073398963280851603485643863677978515625p211] 

; mpf : - 3368529121280121 211
; mpfd: - 3368529121280121 211 (-5.75256e+063) class: Neg. norm. non-zero
; hwf : - 3368529121280121 211 (-5.75256e+063) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010010 #b1011111101111010100011001101101100001000000001111001)))
(assert (= y (fp #b0 #b10110000000 #b0010111101001000101010010110111101011111100100101110)))
(assert (= r (fp #b1 #b10011010010 #xbf7a8cdb08079)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
