(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.30861591469422222644425346516072750091552734375p-534 {+ 1389882518417504 -534 (2.32699e-161)}
; Y = 1.4854081934900593697790327496477402746677398681640625p77 {+ 2186084159324417 77 (2.24469e+023)}
; 1.30861591469422222644425346516072750091552734375p-534 % 1.4854081934900593697790327496477402746677398681640625p77 == 1.30861591469422222644425346516072750091552734375p-534
; [HW: 1.30861591469422222644425346516072750091552734375p-534] 

; mpf : + 1389882518417504 -534
; mpfd: + 1389882518417504 -534 (2.32699e-161) class: Pos. norm. non-zero
; hwf : + 1389882518417504 -534 (2.32699e-161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101001 #b0100111100000001011100111101110010100011000001100000)))
(assert (= y (fp #b0 #b10001001100 #b0111110001000011101101100001110001000000000100000001)))
(assert (= r (fp #b0 #b00111101001 #x4f0173dca3060)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
