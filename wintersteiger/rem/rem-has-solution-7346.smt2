(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2541651057604046304305711601045913994312286376953125p-734 {+ 1144657875593141 -734 (1.38784e-221)}
; Y = -1.156991155885349176202225862652994692325592041015625p578 {- 707025311145722 578 (-1.14464e+174)}
; 1.2541651057604046304305711601045913994312286376953125p-734 % -1.156991155885349176202225862652994692325592041015625p578 == 1.2541651057604046304305711601045913994312286376953125p-734
; [HW: 1.2541651057604046304305711601045913994312286376953125p-734] 

; mpf : + 1144657875593141 -734
; mpfd: + 1144657875593141 -734 (1.38784e-221) class: Pos. norm. non-zero
; hwf : + 1144657875593141 -734 (1.38784e-221) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100100001 #b0100000100010000111101101110000100000110011110110101)))
(assert (= y (fp #b1 #b11001000001 #b0010100000110000100100101000100001001001111011111010)))
(assert (= r (fp #b0 #b00100100001 #x4110f6e1067b5)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
