(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.169590009599491775560409223544411361217498779296875p120 {+ 763765504038030 120 (1.55465e+036)}
; Y = -1.7450887783506197070693133355234749615192413330078125p829 {- 3355581544537789 829 (-6.24718e+249)}
; 1.169590009599491775560409223544411361217498779296875p120 % -1.7450887783506197070693133355234749615192413330078125p829 == 1.169590009599491775560409223544411361217498779296875p120
; [HW: 1.169590009599491775560409223544411361217498779296875p120] 

; mpf : + 763765504038030 120
; mpfd: + 763765504038030 120 (1.55465e+036) class: Pos. norm. non-zero
; hwf : + 763765504038030 120 (1.55465e+036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001110111 #b0010101101101010010000000011100011110101010010001110)))
(assert (= y (fp #b1 #b11100111100 #b1011111010111110001000110101111110100001111010111101)))
(assert (= r (fp #b0 #b10001110111 #x2b6a4038f548e)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
