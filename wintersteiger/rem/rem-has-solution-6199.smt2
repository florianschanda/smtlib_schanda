(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.40648248225944438871692909742705523967742919921875p-824 {+ 1830634355636268 -824 (1.25724e-248)}
; Y = 1.5946103563738949215888851540512405335903167724609375p-538 {+ 2677886979396111 -538 (1.77222e-162)}
; 1.40648248225944438871692909742705523967742919921875p-824 % 1.5946103563738949215888851540512405335903167724609375p-538 == 1.40648248225944438871692909742705523967742919921875p-824
; [HW: 1.40648248225944438871692909742705523967742919921875p-824] 

; mpf : + 1830634355636268 -824
; mpfd: + 1830634355636268 -824 (1.25724e-248) class: Pos. norm. non-zero
; hwf : + 1830634355636268 -824 (1.25724e-248) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011000111 #b0110100000001111001111000110011110110011100000101100)))
(assert (= y (fp #b0 #b00111100101 #b1001100000111000011000100110001001111101001000001111)))
(assert (= r (fp #b0 #b00011000111 #x680f3c67b382c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
