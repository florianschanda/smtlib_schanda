(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1501236890091621756226913930731825530529022216796875p108 {+ 676096989881147 108 (3.73236e+032)}
; Y = 1.300717973036350283422279972000978887081146240234375p-705 {+ 1354313351310118 -705 (7.72745e-213)}
; 1.1501236890091621756226913930731825530529022216796875p108 % 1.300717973036350283422279972000978887081146240234375p-705 == 1.69291347544275705416794153279624879360198974609375p-706
; [HW: 1.69291347544275705416794153279624879360198974609375p-706] 

; mpf : + 3120604869803996 -706
; mpfd: + 3120604869803996 -706 (5.02872e-213) class: Pos. norm. non-zero
; hwf : + 3120604869803996 -706 (5.02872e-213) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001101011 #b0010011001101110100000011000111010100110001100111011)))
(assert (= y (fp #b0 #b00100111110 #b0100110011111011110110100110001110000010101100100110)))
(assert (= r (fp #b1 #b00100111100 #xd129db7612ce0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
