(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2684420344570035421583042989368550479412078857421875p-963 {+ 1208955446351139 -963 (1.62699e-290)}
; Y = -1.42132196761748641478106947033666074275970458984375p358 {- 1897465456365116 358 (-8.34509e+107)}
; 1.2684420344570035421583042989368550479412078857421875p-963 % -1.42132196761748641478106947033666074275970458984375p358 == 1.2684420344570035421583042989368550479412078857421875p-963
; [HW: 1.2684420344570035421583042989368550479412078857421875p-963] 

; mpf : + 1208955446351139 -963
; mpfd: + 1208955446351139 -963 (1.62699e-290) class: Pos. norm. non-zero
; hwf : + 1208955446351139 -963 (1.62699e-290) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000111100 #b0100010010111000100111011111111011011101010100100011)))
(assert (= y (fp #b1 #b10101100101 #b0110101111011011110000011010100000000000111000111100)))
(assert (= r (fp #b0 #b00000111100 #x44b89dfedd523)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
