(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5279349737802425668320438489899970591068267822265625p-1012 {- 2377607751192553 -1012 (-3.48136e-305)}
; Y = 1.3672517042161282940782029982074163854122161865234375p1009 {+ 1653954638258935 1009 (7.50091e+303)}
; -1.5279349737802425668320438489899970591068267822265625p-1012 % 1.3672517042161282940782029982074163854122161865234375p1009 == -1.5279349737802425668320438489899970591068267822265625p-1012
; [HW: -1.5279349737802425668320438489899970591068267822265625p-1012] 

; mpf : - 2377607751192553 -1012
; mpfd: - 2377607751192553 -1012 (-3.48136e-305) class: Neg. norm. non-zero
; hwf : - 2377607751192553 -1012 (-3.48136e-305) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000001011 #b1000011100100110101111110001011011001100111111101001)))
(assert (= y (fp #b0 #b11111110000 #b0101111000000100001101010010101100000010001011110111)))
(assert (= r (fp #b1 #b00000001011 #x8726bf16ccfe9)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
