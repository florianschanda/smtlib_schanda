(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2256480290721405435050428422982804477214813232421875p-614 {+ 1016228379646179 -614 (1.8028e-185)}
; Y = -1.285294885129677044943719010916538536548614501953125p656 {- 1284853938360722 656 (-3.84308e+197)}
; 1.2256480290721405435050428422982804477214813232421875p-614 % -1.285294885129677044943719010916538536548614501953125p656 == 1.2256480290721405435050428422982804477214813232421875p-614
; [HW: 1.2256480290721405435050428422982804477214813232421875p-614] 

; mpf : + 1016228379646179 -614
; mpfd: + 1016228379646179 -614 (1.8028e-185) class: Pos. norm. non-zero
; hwf : + 1016228379646179 -614 (1.8028e-185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011001 #b0011100111000100000100011011100101000101100011100011)))
(assert (= y (fp #b1 #b11010001111 #b0100100100001001000101011110100101011001000110010010)))
(assert (= r (fp #b0 #b00110011001 #x39c411b9458e3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
