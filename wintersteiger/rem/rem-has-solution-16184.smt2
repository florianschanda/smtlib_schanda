(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.54834292430286613040379961603321135044097900390625p-940 {- 2469516989561636 -940 (-1.66599e-283)}
; Y = 1.0524176007575671842886322338017635047435760498046875p134 {+ 236067887239435 134 (2.29196e+040)}
; -1.54834292430286613040379961603321135044097900390625p-940 % 1.0524176007575671842886322338017635047435760498046875p134 == -1.54834292430286613040379961603321135044097900390625p-940
; [HW: -1.54834292430286613040379961603321135044097900390625p-940] 

; mpf : - 2469516989561636 -940
; mpfd: - 2469516989561636 -940 (-1.66599e-283) class: Neg. norm. non-zero
; hwf : - 2469516989561636 -940 (-1.66599e-283) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001010011 #b1000110001100000001100111010111011011111101100100100)))
(assert (= y (fp #b0 #b10010000101 #b0000110101101011001111010110100011111101000100001011)))
(assert (= r (fp #b1 #b00001010011 #x8c6033aedfb24)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
