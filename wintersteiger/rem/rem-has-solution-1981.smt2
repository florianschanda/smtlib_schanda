(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5434555782906880239124802756123244762420654296875p-131 {+ 2447506339882360 -131 (5.66976e-040)}
; Y = -1.355979062033225712724515688023529946804046630859375p82 {- 1603187171124534 82 (-6.55711e+024)}
; 1.5434555782906880239124802756123244762420654296875p-131 % -1.355979062033225712724515688023529946804046630859375p82 == 1.5434555782906880239124802756123244762420654296875p-131
; [HW: 1.5434555782906880239124802756123244762420654296875p-131] 

; mpf : + 2447506339882360 -131
; mpfd: + 2447506339882360 -131 (5.66976e-040) class: Pos. norm. non-zero
; hwf : + 2447506339882360 -131 (5.66976e-040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111100 #b1000101100011111111001111001111110010110010101111000)))
(assert (= y (fp #b1 #b10001010001 #b0101101100100001011100011001110101111110010100110110)))
(assert (= r (fp #b0 #b01101111100 #x8b1fe79f96578)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
