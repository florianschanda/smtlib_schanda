(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8552079119848323696118086445494554936885833740234375p460 {+ 3851514033739191 460 (5.5232e+138)}
; Y = 1.2728172254797078810639732182607986032962799072265625p-348 {+ 1228659555010665 -348 (2.21987e-105)}
; 1.8552079119848323696118086445494554936885833740234375p460 % 1.2728172254797078810639732182607986032962799072265625p-348 == 1.697317025218097796823712997138500213623046875p-352
; [HW: 1.697317025218097796823712997138500213623046875p-352] 

; mpf : + 3140436694931328 -352
; mpfd: + 3140436694931328 -352 (1.85014e-106) class: Pos. norm. non-zero
; hwf : + 3140436694931328 -352 (1.85014e-106) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111001011 #b1101101011101110111001111101110101000001010110110111)))
(assert (= y (fp #b0 #b01010100011 #b0100010111010111010110011000010100111000100001101001)))
(assert (= r (fp #b0 #b01010011111 #xb2835e5a41780)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
