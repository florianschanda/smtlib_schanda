(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.9009684498367727112366765140905044972896575927734375p409 {+ 4057601174957463 409 (2.51329e+123)}
; Y = -1.1162094077553785798073704427224583923816680908203125p844 {- 523360645464069 844 (-1.30937e+254)}
; 1.9009684498367727112366765140905044972896575927734375p409 % -1.1162094077553785798073704427224583923816680908203125p844 == 1.9009684498367727112366765140905044972896575927734375p409
; [HW: 1.9009684498367727112366765140905044972896575927734375p409] 

; mpf : + 4057601174957463 409
; mpfd: + 4057601174957463 409 (2.51329e+123) class: Pos. norm. non-zero
; hwf : + 4057601174957463 409 (2.51329e+123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011000 #b1110011010100101110111100100101011000110110110010111)))
(assert (= y (fp #b1 #b11101001011 #b0001110110111111111001100101010111001100000000000101)))
(assert (= r (fp #b0 #b10110011000 #xe6a5de4ac6d97)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
