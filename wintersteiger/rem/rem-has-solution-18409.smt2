(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5586860918378822038476982925203628838062286376953125p50 {+ 2516098475018165 50 (1.75492e+015)}
; Y = 1.311608924895114380859695302206091582775115966796875p-475 {+ 1403361838042958 -475 (1.34449e-143)}
; 1.5586860918378822038476982925203628838062286376953125p50 % 1.311608924895114380859695302206091582775115966796875p-475 == 1.4984090869686550462347440770827233791351318359375p-477
; [HW: 1.4984090869686550462347440770827233791351318359375p-477] 

; mpf : + 2244634978350104 -477
; mpfd: + 2244634978350104 -477 (3.83992e-144) class: Pos. norm. non-zero
; hwf : + 2244634978350104 -477 (3.83992e-144) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000110001 #b1000111100000110000011010011110100101100011110110101)))
(assert (= y (fp #b0 #b01000100100 #b0100111111000101100110100011110110010000111101001110)))
(assert (= r (fp #b0 #b01000100010 #x7f97bce88f418)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
