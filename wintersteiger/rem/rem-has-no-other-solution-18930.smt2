(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.342637113275011007118564521078951656818389892578125p-688 {+ 1543100375668642 -688 (1.04549e-207)}
; Y = 1.7538023975708967316933239999343641102313995361328125p-886 {+ 3394824196811277 -886 (3.39942e-267)}
; 1.342637113275011007118564521078951656818389892578125p-688 % 1.7538023975708967316933239999343641102313995361328125p-886 == 1.645977038971467631967016131966374814510345458984375p-887
; [HW: 1.645977038971467631967016131966374814510345458984375p-887] 

; mpf : + 2909221952001798 -887
; mpfd: + 2909221952001798 -887 (1.59521e-267) class: Pos. norm. non-zero
; hwf : + 2909221952001798 -887 (1.59521e-267) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101001111 #b0101011110110111000100001101101111101001011110100010)))
(assert (= y (fp #b0 #b00010001001 #b1100000011111001001100011010010100110110101000001101)))
(assert (= r (fp #b0 #b00010001000 #xa55ec05059706)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
