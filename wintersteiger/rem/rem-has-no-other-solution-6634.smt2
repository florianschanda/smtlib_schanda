(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6904036246942981680518869325169362127780914306640625p-772 {- 3109301506908481 -772 (-6.80509e-233)}
; Y = 1.963194833264835903463563226978294551372528076171875p-565 {+ 4337843892176702 -565 (1.62561e-170)}
; -1.6904036246942981680518869325169362127780914306640625p-772 % 1.963194833264835903463563226978294551372528076171875p-565 == -1.6904036246942981680518869325169362127780914306640625p-772
; [HW: -1.6904036246942981680518869325169362127780914306640625p-772] 

; mpf : - 3109301506908481 -772
; mpfd: - 3109301506908481 -772 (-6.80509e-233) class: Neg. norm. non-zero
; hwf : - 3109301506908481 -772 (-6.80509e-233) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011111011 #b1011000010111110010010101011110100011010000101000001)))
(assert (= y (fp #b0 #b00111001010 #b1111011010010011111011111100010010001100011100111110)))
(assert (= r (fp #b1 #b00011111011 #xb0be4abd1a141)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
