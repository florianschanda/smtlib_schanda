(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9461546991862770372705426780157722532749176025390625p442 {- 4261101950690161 442 (-2.21022e+133)}
; Y = 1.221608760370581858722971446695737540721893310546875p-218 {+ 998037130626990 -218 (2.89997e-066)}
; -1.9461546991862770372705426780157722532749176025390625p442 % 1.221608760370581858722971446695737540721893310546875p-218 == -1.063451144360495703722335747443139553070068359375p-219
; [HW: -1.063451144360495703722335747443139553070068359375p-219] 

; mpf : - 285758550098160 -219
; mpfd: - 285758550098160 -219 (-1.26226e-066) class: Neg. norm. non-zero
; hwf : - 285758550098160 -219 (-1.26226e-066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110111001 #b1111001000110111001100011100000111110110001101110001)))
(assert (= y (fp #b0 #b01100100101 #b0011100010111011010110100000101001001100011110101110)))
(assert (= r (fp #b1 #b01100100100 #x103e558dec0f0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
