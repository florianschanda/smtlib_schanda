(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.86871735870761757070113162626512348651885986328125p-948 {+ 3912355172965908 -948 (7.8543e-286)}
; Y = -1.17853054339597829169861142872832715511322021484375p-796 {- 804030088712380 -796 (-2.8279e-240)}
; 1.86871735870761757070113162626512348651885986328125p-948 % -1.17853054339597829169861142872832715511322021484375p-796 == 1.86871735870761757070113162626512348651885986328125p-948
; [HW: 1.86871735870761757070113162626512348651885986328125p-948] 

; mpf : + 3912355172965908 -948
; mpfd: + 3912355172965908 -948 (7.8543e-286) class: Pos. norm. non-zero
; hwf : + 3912355172965908 -948 (7.8543e-286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001001011 #b1101111001100100010000101100010100011101111000010100)))
(assert (= y (fp #b1 #b00011100011 #b0010110110110100001011010111110100111001000010111100)))
(assert (= r (fp #b0 #b00001001011 #xde6442c51de14)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
