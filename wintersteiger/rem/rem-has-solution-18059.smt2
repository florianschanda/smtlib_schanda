(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.848424256381535624171874587773345410823822021484375p153 {- 3820963164891974 153 (-2.11053e+046)}
; Y = -1.313629942105915215933009676518850028514862060546875p387 {- 1412463690400430 387 (-4.14077e+116)}
; -1.848424256381535624171874587773345410823822021484375p153 % -1.313629942105915215933009676518850028514862060546875p387 == -1.848424256381535624171874587773345410823822021484375p153
; [HW: -1.848424256381535624171874587773345410823822021484375p153] 

; mpf : - 3820963164891974 153
; mpfd: - 3820963164891974 153 (-2.11053e+046) class: Neg. norm. non-zero
; hwf : - 3820963164891974 153 (-2.11053e+046) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010011000 #b1101100100110010010101010000001001001010101101000110)))
(assert (= y (fp #b1 #b10110000010 #b0101000001001010000011010100100001100100001010101110)))
(assert (= r (fp #b1 #b10010011000 #xd93255024ab46)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
