(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4840032032117462801323881649295799434185028076171875p341 {+ 2179756645630547 341 (6.64758e+102)}
; Y = 1.2437397497994491235573377707623876631259918212890625p-999 {+ 1097706246372177 -999 (2.32147e-301)}
; 1.4840032032117462801323881649295799434185028076171875p341 % 1.2437397497994491235573377707623876631259918212890625p-999 == 1.319323168793963052536355462507344782352447509765625p-1000
; [HW: 1.319323168793963052536355462507344782352447509765625p-1000] 

; mpf : + 1438103703991258 -1000
; mpfd: + 1438103703991258 -1000 (1.23128e-301) class: Pos. norm. non-zero
; hwf : + 1438103703991258 -1000 (1.23128e-301) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101010100 #b0111101111100111101000100100100011110100001001010011)))
(assert (= y (fp #b0 #b00000011000 #b0011111001100101101110100110111000011111101101010001)))
(assert (= r (fp #b1 #b00000010111 #x2b0c4b156c2c8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
