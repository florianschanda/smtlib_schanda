(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7160724277596555165104064144543372094631195068359375p133 {+ 3224903518828671 133 (1.86864e+040)}
; Y = -1.0293142327982847117340270415297709405422210693359375p471 {- 132019567907007 471 (-6.2759e+141)}
; 1.7160724277596555165104064144543372094631195068359375p133 % -1.0293142327982847117340270415297709405422210693359375p471 == 1.7160724277596555165104064144543372094631195068359375p133
; [HW: 1.7160724277596555165104064144543372094631195068359375p133] 

; mpf : + 3224903518828671 133
; mpfd: + 3224903518828671 133 (1.86864e+040) class: Pos. norm. non-zero
; hwf : + 3224903518828671 133 (1.86864e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010000100 #b1011011101010000100001011100101011001011100001111111)))
(assert (= y (fp #b1 #b10111010110 #b0000011110000001001000110011011100101101000010111111)))
(assert (= r (fp #b0 #b10010000100 #xb75085cacb87f)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
