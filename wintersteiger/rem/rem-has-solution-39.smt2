(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2553369201612258887479356417316012084484100341796875p-666 {- 1149935258492027 -666 (-4.09999e-201)}
; Y = 1.8786105164469777406566208810545504093170166015625p374 {+ 3956909994474408 374 (7.22862e+112)}
; -1.2553369201612258887479356417316012084484100341796875p-666 % 1.8786105164469777406566208810545504093170166015625p374 == -1.2553369201612258887479356417316012084484100341796875p-666
; [HW: -1.2553369201612258887479356417316012084484100341796875p-666] 

; mpf : - 1149935258492027 -666
; mpfd: - 1149935258492027 -666 (-4.09999e-201) class: Neg. norm. non-zero
; hwf : - 1149935258492027 -666 (-4.09999e-201) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101100101 #b0100000101011101110000101010100110001101110001111011)))
(assert (= y (fp #b0 #b10101110101 #b1110000011101100100111100110101000001111101110101000)))
(assert (= r (fp #b1 #b00101100101 #x415dc2a98dc7b)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
