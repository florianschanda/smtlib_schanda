(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.4527479223154260434824891490279696881771087646484375p-433 {+ 2038995374232519 -433 (6.54941e-131)}
; Y = 1.77033329665981131739727061358280479907989501953125p-409 {+ 3469272747788212 -409 (1.33902e-123)}
; 1.4527479223154260434824891490279696881771087646484375p-433 % 1.77033329665981131739727061358280479907989501953125p-409 == 1.4527479223154260434824891490279696881771087646484375p-433
; [HW: 1.4527479223154260434824891490279696881771087646484375p-433] 

; mpf : + 2038995374232519 -433
; mpfd: + 2038995374232519 -433 (6.54941e-131) class: Pos. norm. non-zero
; hwf : + 2038995374232519 -433 (6.54941e-131) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001001110 #b0111001111100111010010011010111110101101001111000111)))
(assert (= y (fp #b0 #b01001100110 #b1100010100110100100100000001110000101100011110110100)))
(assert (= r (fp #b0 #b01001001110 #x73e749afad3c7)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
