(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0092963423071756867699377835378982126712799072265625p307 {- 41867003750505 307 (-2.63165e+092)}
; Y = 1.8989685215070426504979650417226366698741912841796875p-985 {+ 4048594298476923 -985 (5.80727e-297)}
; -1.0092963423071756867699377835378982126712799072265625p307 % 1.8989685215070426504979650417226366698741912841796875p-985 == -1.399787462085192668581612451816909015178680419921875p-986
; [HW: -1.399787462085192668581612451816909015178680419921875p-986] 

; mpf : - 1800482665274270 -986
; mpfd: - 1800482665274270 -986 (-2.14036e-297) class: Neg. norm. non-zero
; hwf : - 1800482665274270 -986 (-2.14036e-297) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100110010 #b0000001001100001001111101011111000101110100001101001)))
(assert (= y (fp #b0 #b00000100110 #b1110011000100010110011010001000000000001100101111011)))
(assert (= r (fp #b1 #b00000100101 #x6658789b01b9e)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
