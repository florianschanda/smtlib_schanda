(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.938562446052143339869644478312693536281585693359375p-243 {+ 4226909482304374 -243 (1.37148e-073)}
; Y = 1.2662619963362675701290527285891585052013397216796875p826 {+ 1199137427482939 826 (5.66631e+248)}
; 1.938562446052143339869644478312693536281585693359375p-243 % 1.2662619963362675701290527285891585052013397216796875p826 == 1.938562446052143339869644478312693536281585693359375p-243
; [HW: 1.938562446052143339869644478312693536281585693359375p-243] 

; mpf : + 4226909482304374 -243
; mpfd: + 4226909482304374 -243 (1.37148e-073) class: Pos. norm. non-zero
; hwf : + 4226909482304374 -243 (1.37148e-073) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100001100 #b1111000001000101101000001110001100001100001101110110)))
(assert (= y (fp #b0 #b11100111001 #b0100010000101001101111110000011001101110100100111011)))
(assert (= r (fp #b0 #b01100001100 #xf045a0e30c376)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
