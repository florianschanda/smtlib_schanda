(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.963473277981930831259660408250056207180023193359375p564 {- 4339097895700854 564 (-1.18561e+170)}
; Y = -1.0764616704207241593138633106718771159648895263671875p809 {- 344352750414899 809 (-3.67507e+243)}
; -1.963473277981930831259660408250056207180023193359375p564 % -1.0764616704207241593138633106718771159648895263671875p809 == -1.963473277981930831259660408250056207180023193359375p564
; [HW: -1.963473277981930831259660408250056207180023193359375p564] 

; mpf : - 4339097895700854 564
; mpfd: - 4339097895700854 564 (-1.18561e+170) class: Neg. norm. non-zero
; hwf : - 4339097895700854 564 (-1.18561e+170) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000110011 #b1111011010100110001011110100101110000000100101110110)))
(assert (= y (fp #b1 #b11100101000 #b0001001110010010111111011111010111011010110000110011)))
(assert (= r (fp #b1 #b11000110011 #xf6a62f4b80976)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
