(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0854393697959856535106837327475659549236297607421875p-199 {- 384784713975971 -199 (-1.35094e-060)}
; Y = 1.8900031380168733630142696711118333041667938232421875p879 {+ 4008217800731363 879 (7.61779e+264)}
; -1.0854393697959856535106837327475659549236297607421875p-199 % 1.8900031380168733630142696711118333041667938232421875p879 == -1.0854393697959856535106837327475659549236297607421875p-199
; [HW: -1.0854393697959856535106837327475659549236297607421875p-199] 

; mpf : - 384784713975971 -199
; mpfd: - 384784713975971 -199 (-1.35094e-060) class: Neg. norm. non-zero
; hwf : - 384784713975971 -199 (-1.35094e-060) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01100111000 #b0001010111011111010110101100001100010000100010100011)))
(assert (= y (fp #b0 #b11101101110 #b1110001111010111001111101110001100011110101011100011)))
(assert (= r (fp #b1 #b01100111000 #x15df5ac3108a3)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
