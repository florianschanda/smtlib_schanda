(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.78657014010955261795743354014120995998382568359375p-559 {+ 3542396989898140 -559 (9.46787e-169)}
; Y = -1.214819520114673423449858091771602630615234375p402 {- 967461110740352 402 (-1.25479e+121)}
; 1.78657014010955261795743354014120995998382568359375p-559 % -1.214819520114673423449858091771602630615234375p402 == 1.78657014010955261795743354014120995998382568359375p-559
; [HW: 1.78657014010955261795743354014120995998382568359375p-559] 

; mpf : + 3542396989898140 -559
; mpfd: + 3542396989898140 -559 (9.46787e-169) class: Pos. norm. non-zero
; hwf : + 3542396989898140 -559 (9.46787e-169) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111010000 #b1100100101011100101010010010001111000111110110011100)))
(assert (= y (fp #b1 #b10110010001 #b0011011011111110011010010111110101101111010110000000)))
(assert (= r (fp #b0 #b00111010000 #xc95ca923c7d9c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
