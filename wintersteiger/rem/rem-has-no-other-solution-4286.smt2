(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.215484212205001579576446602004580199718475341796875p-726 {+ 970454617790670 -726 (3.44328e-219)}
; Y = 1.9295223203404230361002191784791648387908935546875p154 {+ 4186196375517688 154 (4.40625e+046)}
; 1.215484212205001579576446602004580199718475341796875p-726 % 1.9295223203404230361002191784791648387908935546875p154 == 1.215484212205001579576446602004580199718475341796875p-726
; [HW: 1.215484212205001579576446602004580199718475341796875p-726] 

; mpf : + 970454617790670 -726
; mpfd: + 970454617790670 -726 (3.44328e-219) class: Pos. norm. non-zero
; hwf : + 970454617790670 -726 (3.44328e-219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101001 #b0011011100101001111110010010110000111001100011001110)))
(assert (= y (fp #b0 #b10010011001 #b1110110111110101001011001011111011000011100111111000)))
(assert (= r (fp #b0 #b00100101001 #x3729f92c398ce)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
