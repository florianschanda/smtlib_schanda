(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.869255965361848570438496608403511345386505126953125p720 {+ 3914780841693202 720 (1.03102e+217)}
; Y = 1.3042947594384803888800661297864280641078948974609375p561 {+ 1370421765217935 561 (9.84472e+168)}
; 1.869255965361848570438496608403511345386505126953125p720 % 1.3042947594384803888800661297864280641078948974609375p561 == 1.893297997402218157958486699499189853668212890625p559
; [HW: 1.893297997402218157958486699499189853668212890625p559] 

; mpf : + 4023056528231440 559
; mpfd: + 4023056528231440 559 (3.57262e+168) class: Pos. norm. non-zero
; hwf : + 4023056528231440 559 (3.57262e+168) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011001111 #b1101111010000111100011110001011100010101000000010010)))
(assert (= y (fp #b0 #b11000110000 #b0100110111100110010000101110100000100001111010001111)))
(assert (= r (fp #b0 #b11000101110 #xe4af2d746cc10)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
