(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.928031019870805717886241836822591722011566162109375p-820 {+ 4179480155278422 -820 (2.75751e-247)}
; Y = 1.63230459718844489458433599793352186679840087890625p-24 {+ 2847646748282532 -24 (9.72929e-008)}
; 1.928031019870805717886241836822591722011566162109375p-820 % 1.63230459718844489458433599793352186679840087890625p-24 == 1.928031019870805717886241836822591722011566162109375p-820
; [HW: 1.928031019870805717886241836822591722011566162109375p-820] 

; mpf : + 4179480155278422 -820
; mpfd: + 4179480155278422 -820 (2.75751e-247) class: Pos. norm. non-zero
; hwf : + 4179480155278422 -820 (2.75751e-247) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011001011 #b1110110110010011011100001110000000000100110001010110)))
(assert (= y (fp #b0 #b01111100111 #b1010000111011110101101101100111000001000111010100100)))
(assert (= r (fp #b0 #b00011001011 #xed9370e004c56)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
