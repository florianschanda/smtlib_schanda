(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1385720361185536209092106219031848013401031494140625p820 {- 624072970227489 820 (-7.9608e+246)}
; Y = -1.871726084329894401747651500045321881771087646484375p-443 {- 3925905268557254 -443 (-8.24051e-134)}
; -1.1385720361185536209092106219031848013401031494140625p820 % -1.871726084329894401747651500045321881771087646484375p-443 == -1.787213733112533731173243722878396511077880859375p-446
; [HW: -1.787213733112533731173243722878396511077880859375p-446] 

; mpf : - 3545295475106544 -446
; mpfd: - 3545295475106544 -446 (-9.83554e-135) class: Neg. norm. non-zero
; hwf : - 3545295475106544 -446 (-9.83554e-135) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110011 #b0010001101111001011101001111101101000100111100100001)))
(assert (= y (fp #b1 #b01001000100 #b1101111100101001011100001100111101000100010111000110)))
(assert (= r (fp #b1 #b01001000001 #xc986d6d6ae2f0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
