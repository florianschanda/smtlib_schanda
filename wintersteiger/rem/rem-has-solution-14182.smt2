(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8318070448808174699451001288252882659435272216796875p-998 {- 3746125897369403 -998 (-6.83824e-301)}
; Y = -1.2449443600684355626384558490826748311519622802734375p-854 {- 1103131328730711 -854 (-1.03641e-257)}
; -1.8318070448808174699451001288252882659435272216796875p-998 % -1.2449443600684355626384558490826748311519622802734375p-854 == -1.8318070448808174699451001288252882659435272216796875p-998
; [HW: -1.8318070448808174699451001288252882659435272216796875p-998] 

; mpf : - 3746125897369403 -998
; mpfd: - 3746125897369403 -998 (-6.83824e-301) class: Neg. norm. non-zero
; hwf : - 3746125897369403 -998 (-6.83824e-301) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000011001 #b1101010011110001010011100111011001011000011100111011)))
(assert (= y (fp #b1 #b00010101001 #b0011111010110100101011000110111111010101011001010111)))
(assert (= r (fp #b1 #b00000011001 #xd4f14e765873b)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
