(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3519267816406344007162942943978123366832733154296875p290 {+ 1584937322658459 290 (2.68938e+087)}
; Y = 1.8370167901969047807853030462865717709064483642578125p-920 {+ 3769588504433629 -920 (2.07261e-277)}
; 1.3519267816406344007162942943978123366832733154296875p290 % 1.8370167901969047807853030462865717709064483642578125p-920 == 1.83446927069628618056640334543772041797637939453125p-920
; [HW: 1.83446927069628618056640334543772041797637939453125p-920] 

; mpf : + 3758115496559924 -920
; mpfd: + 3758115496559924 -920 (2.06973e-277) class: Pos. norm. non-zero
; hwf : + 3758115496559924 -920 (2.06973e-277) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100100001 #b0101101000010111110111111010000110111011101010011011)))
(assert (= y (fp #b0 #b00001100111 #b1101011001000110101110110111110000011001001111011101)))
(assert (= r (fp #b1 #b00001011110 #x4de891e1d5200)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
