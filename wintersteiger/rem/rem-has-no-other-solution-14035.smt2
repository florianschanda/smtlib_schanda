(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8316876857632504727035893665743060410022735595703125p-53 {- 3745588351692005 -53 (-2.03358e-016)}
; Y = 1.149598301774158226606914467993192374706268310546875p295 {+ 673730856125358 295 (7.31804e+088)}
; -1.8316876857632504727035893665743060410022735595703125p-53 % 1.149598301774158226606914467993192374706268310546875p295 == -1.8316876857632504727035893665743060410022735595703125p-53
; [HW: -1.8316876857632504727035893665743060410022735595703125p-53] 

; mpf : - 3745588351692005 -53
; mpfd: - 3745588351692005 -53 (-2.03358e-016) class: Neg. norm. non-zero
; hwf : - 3745588351692005 -53 (-2.03358e-016) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001010 #b1101010011101001011110111111001011010110110011100101)))
(assert (= y (fp #b0 #b10100100110 #b0010011001001100000100110000010110101000001110101110)))
(assert (= r (fp #b1 #b01111001010 #xd4e97bf2d6ce5)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
