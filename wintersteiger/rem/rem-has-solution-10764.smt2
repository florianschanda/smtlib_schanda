(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.62704376571018993757888893014751374721527099609375p646 {- 2823954069597404 646 (-4.75091e+194)}
; Y = 1.8435657659049657919325682087219320237636566162109375p980 {+ 3799082468992111 980 (1.88388e+295)}
; -1.62704376571018993757888893014751374721527099609375p646 % 1.8435657659049657919325682087219320237636566162109375p980 == -1.62704376571018993757888893014751374721527099609375p646
; [HW: -1.62704376571018993757888893014751374721527099609375p646] 

; mpf : - 2823954069597404 646
; mpfd: - 2823954069597404 646 (-4.75091e+194) class: Neg. norm. non-zero
; hwf : - 2823954069597404 646 (-4.75091e+194) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010000101 #b1010000010000101111100001011001011100010110011011100)))
(assert (= y (fp #b0 #b11111010011 #b1101011111110011111011010001000010010110010001101111)))
(assert (= r (fp #b1 #b11010000101 #xa085f0b2e2cdc)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
