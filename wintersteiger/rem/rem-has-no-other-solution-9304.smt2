(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.3067033794650388944802443802473135292530059814453125p-933 {+ 1381269225472021 -933 (1.79966e-281)}
; Y = 1.592515803204845870055805789888836443424224853515625p-269 {+ 2668453950524474 -269 (1.67886e-081)}
; 1.3067033794650388944802443802473135292530059814453125p-933 % 1.592515803204845870055805789888836443424224853515625p-269 == 1.3067033794650388944802443802473135292530059814453125p-933
; [HW: 1.3067033794650388944802443802473135292530059814453125p-933] 

; mpf : + 1381269225472021 -933
; mpfd: + 1381269225472021 -933 (1.79966e-281) class: Pos. norm. non-zero
; hwf : + 1381269225472021 -933 (1.79966e-281) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001011010 #b0100111010000100000111001101100001100000000000010101)))
(assert (= y (fp #b0 #b01011110010 #b1001011110101111000111011001110100100000110000111010)))
(assert (= r (fp #b0 #b00001011010 #x4e841cd860015)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
