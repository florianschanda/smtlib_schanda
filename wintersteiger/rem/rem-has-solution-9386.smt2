(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.30327124304085995021296184859238564968109130859375p-710 {+ 1365812257151004 -710 (2.41957e-214)}
; Y = -1.6511125145816223369621411620755679905414581298828125p693 {- 2932350078046061 693 (-6.78522e+208)}
; 1.30327124304085995021296184859238564968109130859375p-710 % -1.6511125145816223369621411620755679905414581298828125p693 == 1.30327124304085995021296184859238564968109130859375p-710
; [HW: 1.30327124304085995021296184859238564968109130859375p-710] 

; mpf : + 1365812257151004 -710
; mpfd: + 1365812257151004 -710 (2.41957e-214) class: Pos. norm. non-zero
; hwf : + 1365812257151004 -710 (2.41957e-214) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100111001 #b0100110110100011001011110010011010101101100000011100)))
(assert (= y (fp #b1 #b11010110100 #b1010011010101111010011110100110000100100111101101101)))
(assert (= r (fp #b0 #b00100111001 #x4da32f26ad81c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
