(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4340075878765261574443456993321888148784637451171875p-373 {- 1954596411036691 -373 (-7.45355e-113)}
; Y = -1.1320023352555834694754821612150408327579498291015625p-246 {- 594485667869081 -246 (-1.00108e-074)}
; -1.4340075878765261574443456993321888148784637451171875p-373 % -1.1320023352555834694754821612150408327579498291015625p-246 == -1.4340075878765261574443456993321888148784637451171875p-373
; [HW: -1.4340075878765261574443456993321888148784637451171875p-373] 

; mpf : - 1954596411036691 -373
; mpfd: - 1954596411036691 -373 (-7.45355e-113) class: Neg. norm. non-zero
; hwf : - 1954596411036691 -373 (-7.45355e-113) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010001010 #b0110111100011011000111110000110000100101010000010011)))
(assert (= y (fp #b1 #b01100001001 #b0010000111001010111001111011000011101011000110011001)))
(assert (= r (fp #b1 #b01010001010 #x6f1b1f0c25413)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
