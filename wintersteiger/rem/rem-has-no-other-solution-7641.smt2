(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9634363642727554744027429478592239320278167724609375p162 {- 4338931651133967 162 (-1.14783e+049)}
; Y = 1.53409628893849170339080956182442605495452880859375p-1018 {+ 2405355847843356 -1018 (5.46156e-307)}
; -1.9634363642727554744027429478592239320278167724609375p162 % 1.53409628893849170339080956182442605495452880859375p-1018 == -1.10162763997053136932890993193723261356353759765625p-1018
; [HW: -1.10162763997053136932890993193723261356353759765625p-1018] 

; mpf : - 457690201501828 -1018
; mpfd: - 457690201501828 -1018 (-3.92192e-307) class: Neg. norm. non-zero
; hwf : - 457690201501828 -1018 (-3.92192e-307) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100001 #b1111011010100011110000111111110001010100001000001111)))
(assert (= y (fp #b0 #b00000000101 #b1000100010111010100010001100110111100111111000011100)))
(assert (= r (fp #b0 #b00000000011 #xbad90fbf73660)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
