(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4368837354105468140375023722299374639987945556640625p-112 {- 1967549427999169 -112 (-2.76734e-034)}
; Y = -1.8365441245138283132831702459952794015407562255859375p555 {- 3767459807439455 555 (-2.16595e+167)}
; -1.4368837354105468140375023722299374639987945556640625p-112 % -1.8365441245138283132831702459952794015407562255859375p555 == -1.4368837354105468140375023722299374639987945556640625p-112
; [HW: -1.4368837354105468140375023722299374639987945556640625p-112] 

; mpf : - 1967549427999169 -112
; mpfd: - 1967549427999169 -112 (-2.76734e-034) class: Neg. norm. non-zero
; hwf : - 1967549427999169 -112 (-2.76734e-034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01110001111 #b0110111111010111100111001100101110111110000111000001)))
(assert (= y (fp #b1 #b11000101010 #b1101011000100111110000010111100001110010101001011111)))
(assert (= r (fp #b1 #b01110001111 #x6fd79ccbbe1c1)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
