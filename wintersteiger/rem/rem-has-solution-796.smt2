(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.594215020192236043072853135527111589908599853515625p336 {- 2676106543515706 336 (-2.23165e+101)}
; Y = 1.5037063756046211704386905694263987243175506591796875p906 {+ 2268491845477115 906 (8.13465e+272)}
; -1.594215020192236043072853135527111589908599853515625p336 % 1.5037063756046211704386905694263987243175506591796875p906 == -1.594215020192236043072853135527111589908599853515625p336
; [HW: -1.594215020192236043072853135527111589908599853515625p336] 

; mpf : - 2676106543515706 336
; mpfd: - 2676106543515706 336 (-2.23165e+101) class: Neg. norm. non-zero
; hwf : - 2676106543515706 336 (-2.23165e+101) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101001111 #b1001100000011110011110011011111010000100100000111010)))
(assert (= y (fp #b0 #b11110001001 #b1000000011110010111001101010101000000010001011111011)))
(assert (= r (fp #b1 #b10101001111 #x981e79be8483a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
