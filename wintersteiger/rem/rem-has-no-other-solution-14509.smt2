(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.315112968233318468946890789084136486053466796875p358 {+ 1419142646315184 358 (7.7215e+107)}
; Y = -1.7333708732726302859106226605945266783237457275390625p35 {- 3302808791594993 35 (-5.95582e+010)}
; 1.315112968233318468946890789084136486053466796875p358 % -1.7333708732726302859106226605945266783237457275390625p35 == 1.47169892921795852913646740489639341831207275390625p33
; [HW: 1.47169892921795852913646740489639341831207275390625p33] 

; mpf : + 2124343121857060 33
; mpfd: + 2124343121857060 33 (1.26418e+010) class: Pos. norm. non-zero
; hwf : + 2124343121857060 33 (1.26418e+010) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101100101 #b0101000010101011001111100101010100011011100010110000)))
(assert (= y (fp #b1 #b10000100010 #b1011101110111110001100011000110010001011011111110001)))
(assert (= r (fp #b0 #b10000100000 #x78c142d28ca24)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
