(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.690238075111706539388478631735779345035552978515625p-645 {- 3108555937870010 -645 (-1.15771e-194)}
; Y = 1.589247201364859307659571641124784946441650390625p-128 {+ 2653733476495888 -128 (4.67038e-039)}
; -1.690238075111706539388478631735779345035552978515625p-645 % 1.589247201364859307659571641124784946441650390625p-128 == -1.690238075111706539388478631735779345035552978515625p-645
; [HW: -1.690238075111706539388478631735779345035552978515625p-645] 

; mpf : - 3108555937870010 -645
; mpfd: - 3108555937870010 -645 (-1.15771e-194) class: Neg. norm. non-zero
; hwf : - 3108555937870010 -645 (-1.15771e-194) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101111010 #b1011000010110011011100010100011100001111000010111010)))
(assert (= y (fp #b0 #b01101111111 #b1001011011011000111001111001001100011111001000010000)))
(assert (= r (fp #b1 #b00101111010 #xb0b371470f0ba)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
