(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.635032726807100988963838972267694771289825439453125p660 {- 2859933151816530 660 (-7.8221e+198)}
; Y = 1.1862164641480246185523128588101826608180999755859375p-687 {+ 838644398547295 -687 (1.84738e-207)}
; -1.635032726807100988963838972267694771289825439453125p660 % 1.1862164641480246185523128588101826608180999755859375p-687 == -1.0562804886382728408733555625076405704021453857421875p-687
; [HW: -1.0562804886382728408733555625076405704021453857421875p-687] 

; mpf : - 253464787659555 -687
; mpfd: - 253464787659555 -687 (-1.64502e-207) class: Neg. norm. non-zero
; hwf : - 253464787659555 -687 (-1.64502e-207) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010010011 #b1010001010010001100000010011100110000110101101010010)))
(assert (= y (fp #b0 #b00101010000 #b0010111110101011111000011101011101111110000101011111)))
(assert (= r (fp #b0 #b00101001101 #x0a1bdf6b1b1e0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
