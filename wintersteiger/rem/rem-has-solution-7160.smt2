(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8449507367689534920174310173024423420429229736328125p394 {- 3805319823259085 394 (-7.44394e+118)}
; Y = 1.1067442208897853017646184525801800191402435302734375p270 {+ 480733233423191 270 (2.09965e+081)}
; -1.8449507367689534920174310173024423420429229736328125p394 % 1.1067442208897853017646184525801800191402435302734375p270 == -1.9624662961450933806872853892855346202850341796875p267
; [HW: -1.9624662961450933806872853892855346202850341796875p267] 

; mpf : - 4334562852675704 267
; mpfd: - 4334562852675704 267 (-4.65384e+080) class: Neg. norm. non-zero
; hwf : - 4334562852675704 267 (-4.65384e+080) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001001 #b1101100001001110101100010000010100100111010111001101)))
(assert (= y (fp #b0 #b10100001101 #b0001101101010011100101101101100111000010001101010111)))
(assert (= r (fp #b1 #b10100001010 #xf66430f172078)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
