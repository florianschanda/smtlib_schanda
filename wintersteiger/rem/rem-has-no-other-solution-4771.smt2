(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2283110604384239739061968066380359232425689697265625p320 {+ 1028221606715049 320 (2.62366e+096)}
; Y = 1.3613423107829707436877697546151466667652130126953125p830 {+ 1627341096195381 830 (9.74684e+249)}
; 1.2283110604384239739061968066380359232425689697265625p320 % 1.3613423107829707436877697546151466667652130126953125p830 == 1.2283110604384239739061968066380359232425689697265625p320
; [HW: 1.2283110604384239739061968066380359232425689697265625p320] 

; mpf : + 1028221606715049 320
; mpfd: + 1028221606715049 320 (2.62366e+096) class: Pos. norm. non-zero
; hwf : + 1028221606715049 320 (2.62366e+096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111111 #b0011101001110010100101111111100111100101111010101001)))
(assert (= y (fp #b0 #b11100111101 #b0101110010000000111011011111111101111001010100110101)))
(assert (= r (fp #b0 #b10100111111 #x3a7297f9e5ea9)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
