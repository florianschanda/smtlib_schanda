(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.7412530805728609895055569722899235785007476806640625p18 {- 3338307097455169 18 (-456459)}
; Y = 1.2810207064492977746539281724835745990276336669921875p752 {+ 1265604748848451 752 (3.03468e+226)}
; -1.7412530805728609895055569722899235785007476806640625p18 % 1.2810207064492977746539281724835745990276336669921875p752 == -1.7412530805728609895055569722899235785007476806640625p18
; [HW: -1.7412530805728609895055569722899235785007476806640625p18] 

; mpf : - 3338307097455169 18
; mpfd: - 3338307097455169 18 (-456459) class: Neg. norm. non-zero
; hwf : - 3338307097455169 18 (-456459) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010001 #b1011110111000010110000110000101100011110101001000001)))
(assert (= y (fp #b0 #b11011101111 #b0100011111110000111110010001011110110010110101000011)))
(assert (= r (fp #b1 #b10000010001 #xbdc2c30b1ea41)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
