(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.65211119165287012577891800901852548122406005859375p477 {+ 2936847719731996 477 (6.44684e+143)}
; Y = -1.206782612178080693610127127612940967082977294921875p710 {- 931266095151902 710 (-6.50019e+213)}
; 1.65211119165287012577891800901852548122406005859375p477 % -1.206782612178080693610127127612940967082977294921875p710 == 1.65211119165287012577891800901852548122406005859375p477
; [HW: 1.65211119165287012577891800901852548122406005859375p477] 

; mpf : + 2936847719731996 477
; mpfd: + 2936847719731996 477 (6.44684e+143) class: Pos. norm. non-zero
; hwf : + 2936847719731996 477 (6.44684e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011100 #b1010011011110000110000100101000110000001001100011100)))
(assert (= y (fp #b1 #b11011000101 #b0011010011101111101101001000110010101111101100011110)))
(assert (= r (fp #b0 #b10111011100 #xa6f0c2518131c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
