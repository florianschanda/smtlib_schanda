(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2216218153268825208357384326518513262271881103515625p-961 {- 998095924923321 -961 (-6.26774e-290)}
; Y = 1.2731864447228484760188393920543603599071502685546875p-322 {+ 1230322370656491 -322 (1.49016e-097)}
; -1.2216218153268825208357384326518513262271881103515625p-961 % 1.2731864447228484760188393920543603599071502685546875p-322 == -1.2216218153268825208357384326518513262271881103515625p-961
; [HW: -1.2216218153268825208357384326518513262271881103515625p-961] 

; mpf : - 998095924923321 -961
; mpfd: - 998095924923321 -961 (-6.26774e-290) class: Neg. norm. non-zero
; hwf : - 998095924923321 -961 (-6.26774e-290) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111110 #b0011100010111100001101010001000011101000101110111001)))
(assert (= y (fp #b0 #b01010111101 #b0100010111101111100010111111110111001011100011101011)))
(assert (= r (fp #b1 #b00000111110 #x38bc3510e8bb9)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
