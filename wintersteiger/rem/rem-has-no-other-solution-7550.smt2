(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0934004767620872922151420425507239997386932373046875p595 {+ 420638352341963 595 (1.41784e+179)}
; Y = 1.216685209703209924470002079033292829990386962890625p902 {+ 975863429676074 902 (4.11372e+271)}
; 1.0934004767620872922151420425507239997386932373046875p595 % 1.216685209703209924470002079033292829990386962890625p902 == 1.0934004767620872922151420425507239997386932373046875p595
; [HW: 1.0934004767620872922151420425507239997386932373046875p595] 

; mpf : + 420638352341963 595
; mpfd: + 420638352341963 595 (1.41784e+179) class: Pos. norm. non-zero
; hwf : + 420638352341963 595 (1.41784e+179) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001010010 #b0001011111101001000101111111100100011111101111001011)))
(assert (= y (fp #b0 #b11110000101 #b0011011101111000101011101001000100110011110000101010)))
(assert (= r (fp #b0 #b11001010010 #x17e917f91fbcb)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
