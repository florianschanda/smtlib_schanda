(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9440323742193663658639479763223789632320404052734375p552 {- 4251543848760023 552 (-2.8659e+166)}
; Y = 1.959335965613861585410404586582444608211517333984375p1012 {+ 4320465097261702 1012 (8.59933e+304)}
; -1.9440323742193663658639479763223789632320404052734375p552 % 1.959335965613861585410404586582444608211517333984375p1012 == -1.9440323742193663658639479763223789632320404052734375p552
; [HW: -1.9440323742193663658639479763223789632320404052734375p552] 

; mpf : - 4251543848760023 552
; mpfd: - 4251543848760023 552 (-2.8659e+166) class: Neg. norm. non-zero
; hwf : - 4251543848760023 552 (-2.8659e+166) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100111 #b1111000110101100000110110000110110100011001011010111)))
(assert (= y (fp #b0 #b11111110011 #b1111010110010111000010101011011000110000001010000110)))
(assert (= r (fp #b1 #b11000100111 #xf1ac1b0da32d7)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
