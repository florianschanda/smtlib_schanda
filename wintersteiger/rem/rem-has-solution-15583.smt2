(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.2813004435330075381216374807991087436676025390625p77 {- 1266864572674408 77 (-1.93625e+023)}
; Y = 1.6188360973527873287736156271421350538730621337890625p-378 {+ 2786990017441425 -378 (2.62945e-114)}
; -1.2813004435330075381216374807991087436676025390625p77 % 1.6188360973527873287736156271421350538730621337890625p-378 == -1.3869980915756696671081726890406571328639984130859375p-378
; [HW: -1.3869980915756696671081726890406571328639984130859375p-378] 

; mpf : - 1742884461013279 -378
; mpfd: - 1742884461013279 -378 (-2.25288e-114) class: Neg. norm. non-zero
; hwf : - 1742884461013279 -378 (-2.25288e-114) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10001001100 #b0100100000000011010011100100110101010011000101101000)))
(assert (= y (fp #b0 #b01010000101 #b1001111001101100000010101101111110110110111010010001)))
(assert (= r (fp #b0 #b01010000010 #xdacde26642b90)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
