(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.075300766502622185072368665714748203754425048828125p223 {+ 339124503961922 223 (1.4495e+067)}
; Y = 1.24091362013845607492612543865106999874114990234375p-283 {+ 1084978489884028 -283 (7.98459e-086)}
; 1.075300766502622185072368665714748203754425048828125p223 % 1.24091362013845607492612543865106999874114990234375p-283 == 1.4591721836653501753744421876035630702972412109375p-284
; [HW: 1.4591721836653501753744421876035630702972412109375p-284] 

; mpf : + 2067927675254168 -284
; mpfd: + 2067927675254168 -284 (4.69448e-086) class: Pos. norm. non-zero
; hwf : + 2067927675254168 -284 (4.69448e-086) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011011110 #b0001001101000110111010010011100101111110000101000010)))
(assert (= y (fp #b0 #b01011100100 #b0011110110101100100000111101011110100111110101111100)))
(assert (= r (fp #b1 #b01011100011 #x05ccb8c73c560)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
