(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7689058252927107872665146715007722377777099609375p447 {+ 3462843988271256 447 (6.42855e+134)}
; Y = 1.4426865904395571593710201341309584677219390869140625p500 {+ 1993683163745505 500 (4.72248e+150)}
; 1.7689058252927107872665146715007722377777099609375p447 % 1.4426865904395571593710201341309584677219390869140625p500 == 1.7689058252927107872665146715007722377777099609375p447
; [HW: 1.7689058252927107872665146715007722377777099609375p447] 

; mpf : + 3462843988271256 447
; mpfd: + 3462843988271256 447 (6.42855e+134) class: Pos. norm. non-zero
; hwf : + 3462843988271256 447 (6.42855e+134) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110111110 #b1100010011010111000000110001110101010110000010011000)))
(assert (= y (fp #b0 #b10111110011 #b0111000101010011111010001000110001010000110011100001)))
(assert (= r (fp #b0 #b10110111110 #xc4d7031d56098)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
