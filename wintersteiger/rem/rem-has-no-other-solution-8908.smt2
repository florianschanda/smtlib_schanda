(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.2218785298878318545945376172312535345554351806640625p102 {+ 999252064524353 102 (6.19566e+030)}
; Y = 1.5762420488385895378513623654725961387157440185546875p-522 {+ 2595163476424683 -522 (1.14806e-157)}
; 1.2218785298878318545945376172312535345554351806640625p102 % 1.5762420488385895378513623654725961387157440185546875p-522 == 1.443844578124589883572070903028361499309539794921875p-523
; [HW: 1.443844578124589883572070903028361499309539794921875p-523] 

; mpf : + 1998898276652318 -523
; mpfd: + 1998898276652318 -523 (5.25815e-158) class: Pos. norm. non-zero
; hwf : + 1998898276652318 -523 (5.25815e-158) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001100101 #b0011100011001101000010000000010110001101100001000001)))
(assert (= y (fp #b0 #b00111110101 #b1001001110000100100110010101001001010111011111101011)))
(assert (= r (fp #b0 #b00111110100 #x719fcc5b8d51e)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
