(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.073001193666694330630662079784087836742401123046875p591 {- 328768148594926 591 (-8.69616e+177)}
; Y = -1.76910241070056972745305756689049303531646728515625p945 {- 3463729330240836 945 (-5.26137e+284)}
; -1.073001193666694330630662079784087836742401123046875p591 % -1.76910241070056972745305756689049303531646728515625p945 == -1.073001193666694330630662079784087836742401123046875p591
; [HW: -1.073001193666694330630662079784087836742401123046875p591] 

; mpf : - 328768148594926 591
; mpfd: - 328768148594926 591 (-8.69616e+177) class: Neg. norm. non-zero
; hwf : - 328768148594926 591 (-8.69616e+177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001110 #b0001001010110000001101001100101101011110000011101110)))
(assert (= y (fp #b1 #b11110110000 #b1100010011100011111001010100010100111011110101000100)))
(assert (= r (fp #b1 #b11001001110 #x12b034cb5e0ee)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
