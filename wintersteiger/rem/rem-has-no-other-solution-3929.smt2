(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.206972868441113622139937433530576527118682861328125p52 {- 932122933187202 52 (-5.43572e+015)}
; Y = 1.3706857948892137155638693002401851117610931396484375p-297 {+ 1669420407734599 -297 (5.38306e-090)}
; -1.206972868441113622139937433530576527118682861328125p52 % 1.3706857948892137155638693002401851117610931396484375p-297 == -1.3032645626410470640621497295796871185302734375p-298
; [HW: -1.3032645626410470640621497295796871185302734375p-298] 

; mpf : - 1365782171304896 -298
; mpfd: - 1365782171304896 -298 (-2.55914e-090) class: Neg. norm. non-zero
; hwf : - 1365782171304896 -298 (-2.55914e-090) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000110011 #b0011010011111100001011001000010100011101001010000010)))
(assert (= y (fp #b0 #b01011010110 #b0101111011100101010000111010011000100100000101000111)))
(assert (= r (fp #b1 #b01011010101 #x4da2bf12943c0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
