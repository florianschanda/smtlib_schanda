(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 0.521990971409523663027130169211886823177337646484375p-1022 {+ 2350838344330694 -1023 (1.16147e-308)}
; Y = 1.2451135268861943661278246509027667343616485595703125p505 {+ 1103893188348133 505 (1.30424e+152)}
; 0.521990971409523663027130169211886823177337646484375p-1022 % 1.2451135268861943661278246509027667343616485595703125p505 == 0.521990971409523663027130169211886823177337646484375p-1022
; [HW: 0.521990971409523663027130169211886823177337646484375p-1022] 

; mpf : + 2350838344330694 -1023
; mpfd: + 2350838344330694 -1023 (1.16147e-308) class: Pos. denorm.
; hwf : + 2350838344330694 -1023 (1.16147e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1000010110100001001100110100011100000010110111000110)))
(assert (= y (fp #b0 #b10111111000 #b0011111010111111110000101001010111001000100011100101)))
(assert (= r (fp #b0 #b00000000000 #x85a1334702dc6)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
