(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.39118751443403088075001505785621702671051025390625p-849 {- 1761751944237092 -849 (-3.70612e-256)}
; Y = 1.4791159777308118261629488188191317021846771240234375p-643 {+ 2157746538775735 -643 (4.05243e-194)}
; -1.39118751443403088075001505785621702671051025390625p-849 % 1.4791159777308118261629488188191317021846771240234375p-643 == -1.39118751443403088075001505785621702671051025390625p-849
; [HW: -1.39118751443403088075001505785621702671051025390625p-849] 

; mpf : - 1761751944237092 -849
; mpfd: - 1761751944237092 -849 (-3.70612e-256) class: Neg. norm. non-zero
; hwf : - 1761751944237092 -849 (-3.70612e-256) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010101110 #b0110010000100100110111010110110100011001000000100100)))
(assert (= y (fp #b0 #b00101111100 #b0111101010100111010110000011111101011000010010110111)))
(assert (= r (fp #b1 #b00010101110 #x6424dd6d19024)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
