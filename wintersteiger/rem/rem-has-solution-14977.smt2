(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7236996138818039270290682907216250896453857421875p822 {- 3259253311406264 822 (-4.82079e+247)}
; Y = 1.7787412429055298179747524045524187386035919189453125p-129 {+ 3507138771367381 -129 (2.61363e-039)}
; -1.7236996138818039270290682907216250896453857421875p822 % 1.7787412429055298179747524045524187386035919189453125p-129 == -1.2063935782869841251141451721196062862873077392578125p-129
; [HW: -1.2063935782869841251141451721196062862873077392578125p-129] 

; mpf : - 929514042264925 -129
; mpfd: - 929514042264925 -129 (-1.77264e-039) class: Neg. norm. non-zero
; hwf : - 929514042264925 -129 (-1.77264e-039) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100110101 #b1011100101000100011000001011110111000000000010111000)))
(assert (= y (fp #b0 #b01101111110 #b1100011101011011100101100000101001010011010111010101)))
(assert (= r (fp #b0 #b01101111101 #x250ac0caf50f0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
