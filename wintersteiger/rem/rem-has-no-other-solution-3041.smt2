(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.5987262671373632105797923941281624138355255126953125p-356 {- 2696423393576757 -356 (-1.08917e-107)}
; Y = 1.1968637723911503822904478511190973222255706787109375p650 {+ 886595611983535 650 (5.59167e+195)}
; -1.5987262671373632105797923941281624138355255126953125p-356 % 1.1968637723911503822904478511190973222255706787109375p650 == -1.5987262671373632105797923941281624138355255126953125p-356
; [HW: -1.5987262671373632105797923941281624138355255126953125p-356] 

; mpf : - 2696423393576757 -356
; mpfd: - 2696423393576757 -356 (-1.08917e-107) class: Neg. norm. non-zero
; hwf : - 2696423393576757 -356 (-1.08917e-107) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011011 #b1001100101000110000111111110100010011100011100110101)))
(assert (= y (fp #b0 #b11010001001 #b0011001001100101101010100000100000101111111010101111)))
(assert (= r (fp #b1 #b01010011011 #x99461fe89c735)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
