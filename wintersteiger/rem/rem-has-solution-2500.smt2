(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.740717014711962828954483484267257153987884521484375p-663 {- 3335892871443782 -663 (-4.54822e-200)}
; Y = 1.7662025970051782319814037691685371100902557373046875p-96 {+ 3450669730362827 -96 (2.22926e-029)}
; -1.740717014711962828954483484267257153987884521484375p-663 % 1.7662025970051782319814037691685371100902557373046875p-96 == -1.740717014711962828954483484267257153987884521484375p-663
; [HW: -1.740717014711962828954483484267257153987884521484375p-663] 

; mpf : - 3335892871443782 -663
; mpfd: - 3335892871443782 -663 (-4.54822e-200) class: Neg. norm. non-zero
; hwf : - 3335892871443782 -663 (-4.54822e-200) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00101101000 #b1011110110011111101000010101100111000111010101000110)))
(assert (= y (fp #b0 #b01110011111 #b1100010000100101110110100111100000111111010111001011)))
(assert (= r (fp #b1 #b00101101000 #xbd9fa159c7546)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
