(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.707157276377480048523693767492659389972686767578125p-991 {- 3184753246385954 -991 (-8.15733e-299)}
; Y = -1.5675768668021212715046885932679288089275360107421875p-33 {- 2556138965834147 -33 (-1.8249e-010)}
; -1.707157276377480048523693767492659389972686767578125p-991 % -1.5675768668021212715046885932679288089275360107421875p-33 == -1.707157276377480048523693767492659389972686767578125p-991
; [HW: -1.707157276377480048523693767492659389972686767578125p-991] 

; mpf : - 3184753246385954 -991
; mpfd: - 3184753246385954 -991 (-8.15733e-299) class: Neg. norm. non-zero
; hwf : - 3184753246385954 -991 (-8.15733e-299) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000100000 #b1011010100001000010000100101111100101011011100100010)))
(assert (= y (fp #b1 #b01111011110 #b1001000101001100101101111011000011100001100110100011)))
(assert (= r (fp #b1 #b00000100000 #xb508425f2b722)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
