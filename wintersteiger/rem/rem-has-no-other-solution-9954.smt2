(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2767135999486185493623224829207174479961395263671875p1007 {+ 1246207265616947 1007 (1.75105e+303)}
; Y = 1.1420633612496680076020538763259537518024444580078125p-880 {+ 639796500787005 -880 (1.41675e-265)}
; 1.2767135999486185493623224829207174479961395263671875p1007 % 1.1420633612496680076020538763259537518024444580078125p-880 == 1.8132318425287081709029735065996646881103515625p-884
; [HW: 1.8132318425287081709029735065996646881103515625p-884] 

; mpf : + 3662470622978112 -884
; mpfd: + 3662470622978112 -884 (1.40584e-266) class: Pos. norm. non-zero
; hwf : + 3662470622978112 -884 (1.40584e-266) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101110 #b0100011011010110101100111101011000100011010000110011)))
(assert (= y (fp #b0 #b00010001111 #b0010010001011110010000111011001010000110111100111101)))
(assert (= r (fp #b0 #b00010001011 #xd02ff647ba040)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
