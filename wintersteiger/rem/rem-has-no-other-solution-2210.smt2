(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2788753622348159044719295707182027399539947509765625p-910 {+ 1255942977443529 -910 (1.47752e-274)}
; Y = -1.395186093703923102538055900367908179759979248046875p563 {- 1779759944346990 563 (-4.2123e+169)}
; 1.2788753622348159044719295707182027399539947509765625p-910 % -1.395186093703923102538055900367908179759979248046875p563 == 1.2788753622348159044719295707182027399539947509765625p-910
; [HW: 1.2788753622348159044719295707182027399539947509765625p-910] 

; mpf : + 1255942977443529 -910
; mpfd: + 1255942977443529 -910 (1.47752e-274) class: Pos. norm. non-zero
; hwf : + 1255942977443529 -910 (1.47752e-274) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110001 #b0100011101100100011000000011000001110101011011001001)))
(assert (= y (fp #b1 #b11000110010 #b0110010100101010111010100111010001001010110101101110)))
(assert (= r (fp #b0 #b00001110001 #x47646030756c9)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
