(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.736758368466835289467553593567572534084320068359375p-485 {- 3318064713689334 -485 (-1.73857e-146)}
; Y = 1.398524299461391340315685738460160791873931884765625p-921 {+ 1794793886552410 -921 (7.8894e-278)}
; -1.736758368466835289467553593567572534084320068359375p-485 % 1.398524299461391340315685738460160791873931884765625p-921 == -1.83232918431037461459709447808563709259033203125p-924
; [HW: -1.83232918431037461459709447808563709259033203125p-924] 

; mpf : - 3748477404309792 -924
; mpfd: - 3748477404309792 -924 (-1.29207e-278) class: Neg. norm. non-zero
; hwf : - 3748477404309792 -924 (-1.29207e-278) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011010 #b1011110010011100001100100100100110011110100011110110)))
(assert (= y (fp #b0 #b00001100110 #b0110011000000101101100000100000011011001000101011010)))
(assert (= r (fp #b1 #b00001100011 #xd51386821e920)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
