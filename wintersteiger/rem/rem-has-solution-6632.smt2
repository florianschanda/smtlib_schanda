(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.122655530581712302051755614229477941989898681640625p-750 {+ 552391401822730 -750 (1.89561e-226)}
; Y = 1.600625774819250057845465562422759830951690673828125p936 {+ 2704978015665090 936 (9.29749e+281)}
; 1.122655530581712302051755614229477941989898681640625p-750 % 1.600625774819250057845465562422759830951690673828125p936 == 1.122655530581712302051755614229477941989898681640625p-750
; [HW: 1.122655530581712302051755614229477941989898681640625p-750] 

; mpf : + 552391401822730 -750
; mpfd: + 552391401822730 -750 (1.89561e-226) class: Pos. norm. non-zero
; hwf : + 552391401822730 -750 (1.89561e-226) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100010001 #b0001111101100110010110100101010010000101101000001010)))
(assert (= y (fp #b0 #b11110100111 #b1001100111000010100111000101101111111011101111000010)))
(assert (= r (fp #b0 #b00100010001 #x1f665a5485a0a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
