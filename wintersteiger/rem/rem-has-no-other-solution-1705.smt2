(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.7733291494241989472158138596569187939167022705078125p187 {+ 3482764869181565 187 (3.47855e+056)}
; Y = 1.2869215713520121280311059308587573468685150146484375p-244 {+ 1292179881825479 -244 (4.55232e-074)}
; 1.7733291494241989472158138596569187939167022705078125p187 % 1.2869215713520121280311059308587573468685150146484375p-244 == 1.246054017354826459751393485930748283863067626953125p-245
; [HW: 1.246054017354826459751393485930748283863067626953125p-245] 

; mpf : + 1108128780872210 -245
; mpfd: + 1108128780872210 -245 (2.20388e-074) class: Pos. norm. non-zero
; hwf : + 1108128780872210 -245 (2.20388e-074) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10010111010 #b1100010111111000111001100010110111010010000001111101)))
(assert (= y (fp #b0 #b01100001011 #b0100100101110011101100010010110101111001010011000111)))
(assert (= r (fp #b0 #b01100001010 #x3efd656596a12)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
