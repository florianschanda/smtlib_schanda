(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9307934983183099308945429584127850830554962158203125p999 {+ 4191921252185221 999 (1.03443e+301)}
; Y = -1.524133653664531795612901987624354660511016845703125p-490 {- 2360488127335922 -490 (-4.76788e-148)}
; 1.9307934983183099308945429584127850830554962158203125p999 % -1.524133653664531795612901987624354660511016845703125p-490 == 1.474408986419962541702943781274370849132537841796875p-490
; [HW: 1.474408986419962541702943781274370849132537841796875p-490] 

; mpf : + 2136548134462158 -490
; mpfd: + 2136548134462158 -490 (4.61233e-148) class: Pos. norm. non-zero
; hwf : + 2136548134462158 -490 (4.61233e-148) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111100110 #b1110111001001000011110111001001010011011010010000101)))
(assert (= y (fp #b1 #b01000010101 #b1000011000101101100111111000010100111000110111110010)))
(assert (= r (fp #b1 #b01000010000 #x97582f73d6480)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
