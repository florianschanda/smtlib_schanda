(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.351909618817623393027815836830995976924896240234375p170 {- 1584860028175142 170 (-2.02324e+051)}
; Y = 1.147902197506755594957894572871737182140350341796875p-782 {+ 666092281578702 -782 (4.51282e-236)}
; -1.351909618817623393027815836830995976924896240234375p170 % 1.147902197506755594957894572871737182140350341796875p-782 == -1.59753913317652784797928688931278884410858154296875p-783
; [HW: -1.59753913317652784797928688931278884410858154296875p-783] 

; mpf : - 2691077017513100 -783
; mpfd: - 2691077017513100 -783 (-3.14025e-236) class: Neg. norm. non-zero
; hwf : - 2691077017513100 -783 (-3.14025e-236) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010101001 #b0101101000010110101111111010111111111000001100100110)))
(assert (= y (fp #b0 #b00011110001 #b0010010111011100111010110001110101001100010011001110)))
(assert (= r (fp #b0 #b00011101111 #x6583063f0ba20)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
