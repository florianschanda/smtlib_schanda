(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.940534675928674790412742368062026798725128173828125p-970 {- 4235791616041410 -970 (-1.94458e-292)}
; Y = -1.153513498009989035608668928034603595733642578125p217 {- 691363332434128 217 (-2.42958e+065)}
; -1.940534675928674790412742368062026798725128173828125p-970 % -1.153513498009989035608668928034603595733642578125p217 == -1.940534675928674790412742368062026798725128173828125p-970
; [HW: -1.940534675928674790412742368062026798725128173828125p-970] 

; mpf : - 4235791616041410 -970
; mpfd: - 4235791616041410 -970 (-1.94458e-292) class: Neg. norm. non-zero
; hwf : - 4235791616041410 -970 (-1.94458e-292) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000110101 #b1111000011000110111000010110100111011110000111000010)))
(assert (= y (fp #b1 #b10011011000 #b0010011101001100101010010001110101110010100011010000)))
(assert (= r (fp #b1 #b00000110101 #xf0c6e169de1c2)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
