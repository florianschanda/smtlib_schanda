(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.16728488355940651644004901754669845104217529296875p-282 {+ 753384139262860 -282 (1.50217e-085)}
; Y = -1.0229342432445507338201196034788154065608978271484375p-311 {- 103286649330183 -311 (-2.45199e-094)}
; 1.16728488355940651644004901754669845104217529296875p-282 % -1.0229342432445507338201196034788154065608978271484375p-311 == 1.395391675546051146739046089351177215576171875p-317
; [HW: 1.395391675546051146739046089351177215576171875p-317] 

; mpf : + 1780685802654592 -317
; mpfd: + 1780685802654592 -317 (5.22622e-096) class: Pos. norm. non-zero
; hwf : + 1780685802654592 -317 (5.22622e-096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100101 #b0010101011010011001011101010000000000000101110001100)))
(assert (= y (fp #b1 #b01011001000 #b0000010111011111000001001100000010110001101000000111)))
(assert (= r (fp #b0 #b01011000010 #x6538638b94b80)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
