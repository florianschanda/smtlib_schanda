(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.496336890033588939985520482878200709819793701171875p-272 {+ 2235302633005502 -272 (1.97183e-082)}
; Y = -1.58979394674854557223397932830266654491424560546875p140 {- 2656195798802124 140 (-2.21585e+042)}
; 1.496336890033588939985520482878200709819793701171875p-272 % -1.58979394674854557223397932830266654491424560546875p140 == 1.496336890033588939985520482878200709819793701171875p-272
; [HW: 1.496336890033588939985520482878200709819793701171875p-272] 

; mpf : + 2235302633005502 -272
; mpfd: + 2235302633005502 -272 (1.97183e-082) class: Pos. norm. non-zero
; hwf : + 2235302633005502 -272 (1.97183e-082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011101111 #b0111111100001111111011110011011001111110000110111110)))
(assert (= y (fp #b1 #b10010001011 #b1001011011111100101111000111000010101001111011001100)))
(assert (= r (fp #b0 #b01011101111 #x7f0fef367e1be)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
