(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.456191900894359125828714240924455225467681884765625p-359 {- 2054505674877274 -359 (-1.24008e-108)}
; Y = -1.586805228028251857352870501927100121974945068359375p-478 {- 2642735806287094 -478 (-2.03323e-144)}
; -1.456191900894359125828714240924455225467681884765625p-359 % -1.586805228028251857352870501927100121974945068359375p-478 == -1.517865179487378757272608709172345697879791259765625p-478
; [HW: -1.517865179487378757272608709172345697879791259765625p-478] 

; mpf : - 2332257429367514 -478
; mpfd: - 2332257429367514 -478 (-1.94489e-144) class: Neg. norm. non-zero
; hwf : - 2332257429367514 -478 (-1.94489e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011000 #b0111010011001000111111100000111100001010100101011010)))
(assert (= y (fp #b1 #b01000100001 #b1001011000111000110111100000111110000000110011110110)))
(assert (= r (fp #b0 #b01000011101 #x1a60e15de21c0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
