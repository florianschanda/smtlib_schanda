(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3657754720155452776708671080996282398700714111328125p-908 {+ 1647306279470477 -908 (6.31165e-274)}
; Y = -1.203927954270221700738829895271919667720794677734375p-714 {- 918409858861798 -714 (-1.39696e-215)}
; 1.3657754720155452776708671080996282398700714111328125p-908 % -1.203927954270221700738829895271919667720794677734375p-714 == 1.3657754720155452776708671080996282398700714111328125p-908
; [HW: 1.3657754720155452776708671080996282398700714111328125p-908] 

; mpf : + 1647306279470477 -908
; mpfd: + 1647306279470477 -908 (6.31165e-274) class: Pos. norm. non-zero
; hwf : + 1647306279470477 -908 (6.31165e-274) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110011 #b0101110110100011011101100001100111111100010110001101)))
(assert (= y (fp #b1 #b00100110101 #b0011010000110100100111110101011001010100101011100110)))
(assert (= r (fp #b0 #b00001110011 #x5da37619fc58d)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
