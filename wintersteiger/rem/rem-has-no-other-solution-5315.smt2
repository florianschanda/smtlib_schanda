(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9084805462692135957780692478991113603115081787109375p31 {- 4091432649651375 31 (-4.09843e+009)}
; Y = -1.3774506232903906965958640284952707588672637939453125p35 {- 1699886486401365 35 (-4.73288e+010)}
; -1.9084805462692135957780692478991113603115081787109375p31 % -1.3774506232903906965958640284952707588672637939453125p35 == -1.9084805462692135957780692478991113603115081787109375p31
; [HW: -1.9084805462692135957780692478991113603115081787109375p31] 

; mpf : - 4091432649651375 31
; mpfd: - 4091432649651375 31 (-4.09843e+009) class: Neg. norm. non-zero
; hwf : - 4091432649651375 31 (-4.09843e+009) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000011110 #b1110100010010010001011100101101101000111010010101111)))
(assert (= y (fp #b1 #b10000100010 #b0110000010100000100110101010001011100011000101010101)))
(assert (= r (fp #b1 #b10000011110 #xe8922e5b474af)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
