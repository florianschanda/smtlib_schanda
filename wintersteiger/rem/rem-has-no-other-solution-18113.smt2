(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.7721700800817756782379319702158682048320770263671875p-352 {+ 3477544884922931 -352 (1.93173e-106)}
; Y = 1.45317921486478329740066328668035566806793212890625p283 {+ 2040937743197092 283 (2.25844e+085)}
; 1.7721700800817756782379319702158682048320770263671875p-352 % 1.45317921486478329740066328668035566806793212890625p283 == 1.7721700800817756782379319702158682048320770263671875p-352
; [HW: 1.7721700800817756782379319702158682048320770263671875p-352] 

; mpf : + 3477544884922931 -352
; mpfd: + 3477544884922931 -352 (1.93173e-106) class: Pos. norm. non-zero
; hwf : + 3477544884922931 -352 (1.93173e-106) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011111 #b1100010110101100111100000011100011100110101000110011)))
(assert (= y (fp #b0 #b10100011010 #b0111010000000011100011011001001100010010001110100100)))
(assert (= r (fp #b0 #b01010011111 #xc5acf038e6a33)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
