(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.021497958875081213392377321724779903888702392578125p-820 {- 96818199579042 -820 (-1.46097e-247)}
; Y = -1.4475728009579540422890886475215665996074676513671875p356 {- 2015688699615411 356 (-2.1248e+107)}
; -1.021497958875081213392377321724779903888702392578125p-820 % -1.4475728009579540422890886475215665996074676513671875p356 == -1.021497958875081213392377321724779903888702392578125p-820
; [HW: -1.021497958875081213392377321724779903888702392578125p-820] 

; mpf : - 96818199579042 -820
; mpfd: - 96818199579042 -820 (-1.46097e-247) class: Neg. norm. non-zero
; hwf : - 96818199579042 -820 (-1.46097e-247) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011001011 #b0000010110000000111000111110011001001100100110100010)))
(assert (= y (fp #b1 #b10101100011 #b0111001010010100001000011000111010110001100010110011)))
(assert (= r (fp #b1 #b00011001011 #x0580e3e64c9a2)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
