(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.479220170444711879298438361729495227336883544921875p-725 {+ 2158215781043230 -725 (8.38081e-219)}
; Y = -1.950128835837057206248346119537018239498138427734375p789 {- 4278999871029734 789 (-6.34936e+237)}
; 1.479220170444711879298438361729495227336883544921875p-725 % -1.950128835837057206248346119537018239498138427734375p789 == 1.479220170444711879298438361729495227336883544921875p-725
; [HW: 1.479220170444711879298438361729495227336883544921875p-725] 

; mpf : + 2158215781043230 -725
; mpfd: + 2158215781043230 -725 (8.38081e-219) class: Pos. norm. non-zero
; hwf : + 2158215781043230 -725 (8.38081e-219) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00100101010 #b0111101010101110001011000100111110100100110000011110)))
(assert (= y (fp #b1 #b11100010100 #b1111001100111011101001001011010011101000000111100110)))
(assert (= r (fp #b0 #b00100101010 #x7aae2c4fa4c1e)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
