(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.32246682026461837011765965144149959087371826171875p-517 {+ 1452261451583084 -517 (3.08232e-156)}
; Y = -1.9734881512970254835437344809179194271564483642578125p922 {- 4384200875430877 922 (-6.99666e+277)}
; 1.32246682026461837011765965144149959087371826171875p-517 % -1.9734881512970254835437344809179194271564483642578125p922 == 1.32246682026461837011765965144149959087371826171875p-517
; [HW: 1.32246682026461837011765965144149959087371826171875p-517] 

; mpf : + 1452261451583084 -517
; mpfd: + 1452261451583084 -517 (3.08232e-156) class: Pos. norm. non-zero
; hwf : + 1452261451583084 -517 (3.08232e-156) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111010 #b0101001010001101001011110111111100010100111001101100)))
(assert (= y (fp #b1 #b11110011001 #b1111100100110110100001001111110011011101001111011101)))
(assert (= r (fp #b0 #b00111111010 #x528d2f7f14e6c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
