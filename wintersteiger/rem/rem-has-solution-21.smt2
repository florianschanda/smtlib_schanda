(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9386542654094911508622089968412183225154876708984375p-300 {+ 4227322999927911 -300 (9.51703e-091)}
; Y = -1.5332225620344968053387901818496175110340118408203125p-552 {- 2401420931684101 -552 (-1.04003e-166)}
; 1.9386542654094911508622089968412183225154876708984375p-300 % -1.5332225620344968053387901818496175110340118408203125p-552 == 1.105473794590249525526814977638423442840576171875p-555
; [HW: 1.105473794590249525526814977638423442840576171875p-555] 

; mpf : + 475011742014000 -555
; mpfd: + 475011742014000 -555 (9.37348e-168) class: Pos. norm. non-zero
; hwf : + 475011742014000 -555 (9.37348e-168) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011010011 #b1111000001001011101001010101110000101111010001100111)))
(assert (= y (fp #b1 #b00111010111 #b1000100010000001010001100001100101101101011100000101)))
(assert (= r (fp #b0 #b00111010100 #x1b0054a259a30)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
