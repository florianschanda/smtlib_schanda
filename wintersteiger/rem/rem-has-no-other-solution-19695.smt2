(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.1712040889160764134402370473253540694713592529296875p477 {+ 771034671046747 477 (4.57026e+143)}
; Y = -1.3227389462780159146149117077584378421306610107421875p-268 {- 1453486998195619 -268 (-2.78892e-081)}
; 1.1712040889160764134402370473253540694713592529296875p477 % -1.3227389462780159146149117077584378421306610107421875p-268 == 1.15125896426800533589585029403679072856903076171875p-269
; [HW: 1.15125896426800533589585029403679072856903076171875p-269] 

; mpf : + 681209815113836 -269
; mpfd: + 681209815113836 -269 (1.21368e-081) class: Pos. norm. non-zero
; hwf : + 681209815113836 -269 (1.21368e-081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011100 #b0010101111010100000001111111101011010110000001011011)))
(assert (= y (fp #b1 #b01011110011 #b0101001010011111000001010000001101101000110110100011)))
(assert (= r (fp #b0 #b01011110010 #x26b8e850c206c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
