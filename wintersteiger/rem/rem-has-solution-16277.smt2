(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7225730103776231150192188579239882528781890869140625p383 {+ 3254179540284641 383 (3.39364e+115)}
; Y = 1.7248498358471133773406336331390775740146636962890625p718 {+ 3264433450620625 718 (2.37842e+216)}
; 1.7225730103776231150192188579239882528781890869140625p383 % 1.7248498358471133773406336331390775740146636962890625p718 == 1.7225730103776231150192188579239882528781890869140625p383
; [HW: 1.7225730103776231150192188579239882528781890869140625p383] 

; mpf : + 3254179540284641 383
; mpfd: + 3254179540284641 383 (3.39364e+115) class: Pos. norm. non-zero
; hwf : + 3254179540284641 383 (3.39364e+115) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101111110 #b1011100011111010100010110111100010001011010011100001)))
(assert (= y (fp #b0 #b11011001101 #b1011100110001111110000100100001101111001011011010001)))
(assert (= r (fp #b0 #b10101111110 #xb8fa8b788b4e1)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
