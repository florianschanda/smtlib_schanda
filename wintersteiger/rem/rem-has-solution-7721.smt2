(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.017610513621272527728933710022829473018646240234375p1010 {+ 79310702582566 1010 (1.11655e+304)}
; Y = 1.094089634385807752181563046178780496120452880859375p-187 {+ 423742042359350 -187 (5.57755e-057)}
; 1.017610513621272527728933710022829473018646240234375p1010 % 1.094089634385807752181563046178780496120452880859375p-187 == 1.59466557744826076259414548985660076141357421875p-191
; [HW: 1.59466557744826076259414548985660076141357421875p-191] 

; mpf : + 2678135673006048 -191
; mpfd: + 2678135673006048 -191 (5.0809e-058) class: Pos. norm. non-zero
; hwf : + 2678135673006048 -191 (5.0809e-058) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111110001 #b0000010010000010000111110110010000010001101100100110)))
(assert (= y (fp #b0 #b01101000100 #b0001100000010110010000100001111010010100011000110110)))
(assert (= r (fp #b0 #b01101000000 #x983c00d7327e0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
