(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8168411760043101654815700385370291769504547119140625p861 {+ 3678725615873889 861 (2.79346e+259)}
; Y = 1.817807987291977678268040108378045260906219482421875p-383 {+ 3683079746828766 -383 (9.22698e-116)}
; 1.8168411760043101654815700385370291769504547119140625p861 % 1.817807987291977678268040108378045260906219482421875p-383 == 1.3441709377909365485948001150973141193389892578125p-385
; [HW: 1.3441709377909365485948001150973141193389892578125p-385] 

; mpf : + 1550008107187016 -385
; mpfd: + 1550008107187016 -385 (1.70571e-116) class: Pos. norm. non-zero
; hwf : + 1550008107187016 -385 (1.70571e-116) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101011100 #b1101000100011100100000001101100011110110111101100001)))
(assert (= y (fp #b0 #b01010000000 #b1101000101011011110111010011111111010011100111011110)))
(assert (= r (fp #b0 #b01001111110 #x581b962a0bb48)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
