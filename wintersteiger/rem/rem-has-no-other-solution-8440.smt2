(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.1415922281177282027186947743757627904415130615234375p583 {- 637674705789559 583 (-3.61409e+175)}
; Y = 1.1341559431877354935380708411685191094875335693359375p-858 {+ 604184655749823 -858 (5.90115e-259)}
; -1.1415922281177282027186947743757627904415130615234375p583 % 1.1341559431877354935380708411685191094875335693359375p-858 == -1.0343716882844500304372559185139834880828857421875p-859
; [HW: -1.0343716882844500304372559185139834880828857421875p-859] 

; mpf : - 154796322549944 -859
; mpfd: - 154796322549944 -859 (-2.69098e-259) class: Neg. norm. non-zero
; hwf : - 154796322549944 -859 (-2.69098e-259) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001000110 #b0010010000111111011000110110010100100010001001110111)))
(assert (= y (fp #b0 #b00010100101 #b0010001001011000000010110011110010001110001010111111)))
(assert (= r (fp #b1 #b00010100100 #x08cc953d170b8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
