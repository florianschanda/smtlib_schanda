(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.780423973872423903941353273694403469562530517578125p-3 {+ 3514717117922850 -3 (0.222553)}
; Y = 1.907027055754980882085192206432111561298370361328125p-949 {+ 4084886710313090 -949 (4.00766e-286)}
; 1.780423973872423903941353273694403469562530517578125p-3 % 1.907027055754980882085192206432111561298370361328125p-949 == 1.124553287812921187338588424609042704105377197265625p-949
; [HW: 1.124553287812921187338588424609042704105377197265625p-949] 

; mpf : + 560938140582042 -949
; mpfd: + 560938140582042 -949 (2.36327e-286) class: Pos. norm. non-zero
; hwf : + 560938140582042 -949 (2.36327e-286) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01111111100 #b1100011111001001110111011001010011001011111000100010)))
(assert (= y (fp #b0 #b00001001010 #b1110100000110010111011001101010100001110000010000010)))
(assert (= r (fp #b1 #b00001001001 #x90a066d693fd0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
