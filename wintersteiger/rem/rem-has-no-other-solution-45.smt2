(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.047364428384806256389083500835113227367401123046875p-375 {- 213310422024430 -375 (-1.36097e-113)}
; Y = -1.719693441031421965448089395067654550075531005859375p969 {- 3241211112850102 969 (-8.58058e+291)}
; -1.047364428384806256389083500835113227367401123046875p-375 % -1.719693441031421965448089395067654550075531005859375p969 == -1.047364428384806256389083500835113227367401123046875p-375
; [HW: -1.047364428384806256389083500835113227367401123046875p-375] 

; mpf : - 213310422024430 -375
; mpfd: - 213310422024430 -375 (-1.36097e-113) class: Neg. norm. non-zero
; hwf : - 213310422024430 -375 (-1.36097e-113) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010001000 #b0000110000100000000100110011111011101000000011101110)))
(assert (= y (fp #b1 #b11111001000 #b1011100000111101110101000101000001100000001010110110)))
(assert (= r (fp #b1 #b01010001000 #x0c20133ee80ee)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
