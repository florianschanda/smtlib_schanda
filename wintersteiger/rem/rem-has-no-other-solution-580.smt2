(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6873750355365839670440664121997542679309844970703125p871 {+ 3095661953906341 871 (2.65667e+262)}
; Y = 1.3097181747746107216556765706627629697322845458984375p866 {+ 1394846656504807 866 (6.44398e+260)}
; 1.6873750355365839670440664121997542679309844970703125p871 % 1.3097181747746107216556765706627629697322845458984375p866 == 1.19022388564658943010954317287541925907135009765625p864
; [HW: 1.19022388564658943010954317287541925907135009765625p864] 

; mpf : + 856692220514948 864
; mpfd: + 856692220514948 864 (1.46401e+260) class: Pos. norm. non-zero
; hwf : + 856692220514948 864 (1.46401e+260) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100110 #b1010111111110111110011110111000110110111011010100101)))
(assert (= y (fp #b0 #b11101100001 #b0100111101001001101100001011011110100010001111100111)))
(assert (= r (fp #b0 #b11101011111 #x30b28337c5284)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
