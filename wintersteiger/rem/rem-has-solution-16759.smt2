(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7492768193715491076289936245302669703960418701171875p-441 {+ 3374442804519059 -441 (3.08057e-133)}
; Y = 1.7191911290347301477510200129472650587558746337890625p942 {+ 3238948900728977 942 (6.39117e+283)}
; 1.7492768193715491076289936245302669703960418701171875p-441 % 1.7191911290347301477510200129472650587558746337890625p942 == 1.7492768193715491076289936245302669703960418701171875p-441
; [HW: 1.7492768193715491076289936245302669703960418701171875p-441] 

; mpf : + 3374442804519059 -441
; mpfd: + 3374442804519059 -441 (3.08057e-133) class: Pos. norm. non-zero
; hwf : + 3374442804519059 -441 (3.08057e-133) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001000110 #b1011111111010000100110110000101011011010000010010011)))
(assert (= y (fp #b0 #b11110101101 #b1011100000011100111010001110101011000111000010010001)))
(assert (= r (fp #b0 #b01001000110 #xbfd09b0ada093)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
