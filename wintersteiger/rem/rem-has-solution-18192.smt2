(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.397975591308831422310277048381976783275604248046875p-286 {- 1792322724721006 -286 (-1.1244e-086)}
; Y = 1.5260108632742526157954898735624738037586212158203125p-542 {+ 2368942327834757 -542 (1.05999e-163)}
; -1.397975591308831422310277048381976783275604248046875p-286 % 1.5260108632742526157954898735624738037586212158203125p-542 == -1.4536717950568951440715181888663209974765777587890625p-542
; [HW: -1.4536717950568951440715181888663209974765777587890625p-542] 

; mpf : - 2043156127166737 -542
; mpfd: - 2043156127166737 -542 (-1.00974e-163) class: Neg. norm. non-zero
; hwf : - 2043156127166737 -542 (-1.00974e-163) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011100001 #b0110010111100001101110100111010101000111000101101110)))
(assert (= y (fp #b0 #b00111100001 #b1000011010101000101001011101111100011010100010000101)))
(assert (= r (fp #b0 #b00111011101 #x284d02c377740)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
