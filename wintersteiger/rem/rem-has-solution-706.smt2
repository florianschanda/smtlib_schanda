(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1490491284302688512752865790389478206634521484375p-783 {- 671257599258456 -783 (-2.25867e-236)}
; Y = 1.6605777477042071854640425954130478203296661376953125p-612 {+ 2974977698409909 -612 (9.77016e-185)}
; -1.1490491284302688512752865790389478206634521484375p-783 % 1.6605777477042071854640425954130478203296661376953125p-612 == -1.1490491284302688512752865790389478206634521484375p-783
; [HW: -1.1490491284302688512752865790389478206634521484375p-783] 

; mpf : - 671257599258456 -783
; mpfd: - 671257599258456 -783 (-2.25867e-236) class: Neg. norm. non-zero
; hwf : - 671257599258456 -783 (-2.25867e-236) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011110000 #b0010011000101000000101010110110000011010111101011000)))
(assert (= y (fp #b0 #b00110011011 #b1010100100011011100111111000111011011010110110110101)))
(assert (= r (fp #b1 #b00011110000 #x2628156c1af58)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
