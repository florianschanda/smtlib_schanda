(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.4166983050595705062590923262177966535091400146484375p-57 {- 1876642331392199 -57 (-9.83032e-018)}
; Y = 1.8206761832460285344126305062673054635524749755859375p-733 {+ 3695996953058655 -733 (4.02945e-221)}
; -1.4166983050595705062590923262177966535091400146484375p-57 % 1.8206761832460285344126305062673054635524749755859375p-733 == -1.866644247846384718769741084543056786060333251953125p-734
; [HW: -1.866644247846384718769741084543056786060333251953125p-734] 

; mpf : - 3903018711663762 -734
; mpfd: - 3903018711663762 -734 (-2.06559e-221) class: Neg. norm. non-zero
; hwf : - 3903018711663762 -734 (-2.06559e-221) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111000110 #b0110101010101100101111010111100010000111100011000111)))
(assert (= y (fp #b0 #b00100100010 #b1101001000010111110101011001011110100101110101011111)))
(assert (= r (fp #b0 #b00100100001 #xc65345718762c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
