(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.19356354198084435580540230148471891880035400390625p-879 {+ 871732695537444 -879 (2.96128e-265)}
; Y = -1.1451140761395388611987300464534200727939605712890625p-860 {- 653535699228241 -860 (-1.48954e-259)}
; 1.19356354198084435580540230148471891880035400390625p-879 % -1.1451140761395388611987300464534200727939605712890625p-860 == 1.19356354198084435580540230148471891880035400390625p-879
; [HW: 1.19356354198084435580540230148471891880035400390625p-879] 

; mpf : + 871732695537444 -879
; mpfd: + 871732695537444 -879 (2.96128e-265) class: Pos. norm. non-zero
; hwf : + 871732695537444 -879 (2.96128e-265) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010010000 #b0011000110001101011000010101101010000001011100100100)))
(assert (= y (fp #b1 #b00010100011 #b0010010100100110001100100011001100110101011001010001)))
(assert (= r (fp #b0 #b00010010000 #x318d615a81724)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
