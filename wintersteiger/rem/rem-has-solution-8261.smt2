(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.96628776329098808872686277027241885662078857421875p991 {+ 4351773210689964 991 (4.11503e+298)}
; Y = -1.8385534723387431110808165612979792058467864990234375p-355 {- 3776509105554999 -355 (-2.50512e-107)}
; 1.96628776329098808872686277027241885662078857421875p991 % -1.8385534723387431110808165612979792058467864990234375p-355 == 1.375879985368495539432842633686959743499755859375p-357
; [HW: 1.375879985368495539432842633686959743499755859375p-357] 

; mpf : + 1692812962041584 -357
; mpfd: + 1692812962041584 -357 (4.68675e-108) class: Pos. norm. non-zero
; hwf : + 1692812962041584 -357 (4.68675e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011110 #b1111011101011110101000101000010111011100000110101100)))
(assert (= y (fp #b1 #b01010011100 #b1101011010101011011100001011101110100100011000110111)))
(assert (= r (fp #b0 #b01010011010 #x6039abb460ef0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
