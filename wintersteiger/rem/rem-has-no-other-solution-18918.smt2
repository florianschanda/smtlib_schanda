(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.28954156193087410287034799694083631038665771484375p-941 {+ 1303979270420156 -941 (6.9376e-284)}
; Y = 1.7881169152679914358117230221978388726711273193359375p-657 {+ 3549363045925311 -657 (2.99012e-198)}
; 1.28954156193087410287034799694083631038665771484375p-941 % 1.7881169152679914358117230221978388726711273193359375p-657 == 1.28954156193087410287034799694083631038665771484375p-941
; [HW: 1.28954156193087410287034799694083631038665771484375p-941] 

; mpf : + 1303979270420156 -941
; mpfd: + 1303979270420156 -941 (6.9376e-284) class: Pos. norm. non-zero
; hwf : + 1303979270420156 -941 (6.9376e-284) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010010 #b0100101000011111011001010101001101010011011010111100)))
(assert (= y (fp #b0 #b00101101110 #b1100100111000010000001111011100010000000000110111111)))
(assert (= r (fp #b0 #b00001010010 #x4a1f6553536bc)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
