(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9259362670203203915519907241105102002620697021484375p851 {- 4170046227121543 851 (-2.8918e+256)}
; Y = 1.4540567522795819765946134793921373784542083740234375p-174 {+ 2044889820371383 -174 (6.07242e-053)}
; -1.9259362670203203915519907241105102002620697021484375p851 % 1.4540567522795819765946134793921373784542083740234375p-174 == -1.07183189299884507050819593132473528385162353515625p-176
; [HW: -1.07183189299884507050819593132473528385162353515625p-176] 

; mpf : - 323502086542916 -176
; mpfd: - 323502086542916 -176 (-1.11904e-053) class: Neg. norm. non-zero
; hwf : - 323502086542916 -176 (-1.11904e-053) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101010010 #b1110110100001010001010001100000100001000010110000111)))
(assert (= y (fp #b0 #b01101010001 #b0111010000111101000100000011010110010001100110110111)))
(assert (= r (fp #b1 #b01101001111 #x1263932f3d644)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
