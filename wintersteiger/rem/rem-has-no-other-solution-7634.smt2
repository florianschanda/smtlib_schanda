(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3673989778478043977116840324015356600284576416015625p319 {+ 1654617899731673 319 (1.46037e+096)}
; Y = 1.3489501247995845378824242288828827440738677978515625p741 {+ 1571531652018297 741 (1.56035e+223)}
; 1.3673989778478043977116840324015356600284576416015625p319 % 1.3489501247995845378824242288828827440738677978515625p741 == 1.3673989778478043977116840324015356600284576416015625p319
; [HW: 1.3673989778478043977116840324015356600284576416015625p319] 

; mpf : + 1654617899731673 319
; mpfd: + 1654617899731673 319 (1.46037e+096) class: Pos. norm. non-zero
; hwf : + 1654617899731673 319 (1.46037e+096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100111110 #b0101111000001101110111000000001001110000101011011001)))
(assert (= y (fp #b0 #b11011100100 #b0101100101010100110010111001110111110011000001111001)))
(assert (= r (fp #b0 #b10100111110 #x5e0ddc0270ad9)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
