(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.1328365628946654997122323038638569414615631103515625p-991 {+ 598242695153593 -991 (5.41304e-299)}
; Y = -1.85533292654263615162335554487071931362152099609375p517 {- 3852077049255132 517 (-7.9603e+155)}
; 1.1328365628946654997122323038638569414615631103515625p-991 % -1.85533292654263615162335554487071931362152099609375p517 == 1.1328365628946654997122323038638569414615631103515625p-991
; [HW: 1.1328365628946654997122323038638569414615631103515625p-991] 

; mpf : + 598242695153593 -991
; mpfd: + 598242695153593 -991 (5.41304e-299) class: Pos. norm. non-zero
; hwf : + 598242695153593 -991 (5.41304e-299) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000100000 #b0010001000000001100100111011010101011000011110111001)))
(assert (= y (fp #b1 #b11000000100 #b1101101011110111000110010100001010110001010011011100)))
(assert (= r (fp #b0 #b00000100000 #x220193b5587b9)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
