(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0883062488295858205589183853589929640293121337890625p261 {- 397695989323409 261 (-4.03255e+078)}
; Y = 0.4496050175605628140829139738343656063079833984375p-1022 {+ 2024840989549656 -1023 (1.0004e-308)}
; -1.0883062488295858205589183853589929640293121337890625p261 % 0.4496050175605628140829139738343656063079833984375p-1022 == -0.321520657523588937465319759212434291839599609375p-1022
; [HW: -0.321520657523588937465319759212434291839599609375p-1022] 

; mpf : - 1448000313415152 -1023
; mpfd: - 1448000313415152 -1023 (-7.15407e-309) class: Neg. denorm.
; hwf : - 1448000313415152 -1023 (-7.15407e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100000100 #b0001011010011011001111010000001011000001011010010001)))
(assert (= y (fp #b0 #b00000000000 #b0111001100011001010100000111111010001010010001011000)))
(assert (= r (fp #b0 #b00000000000 #x20ca22f97ce68)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
