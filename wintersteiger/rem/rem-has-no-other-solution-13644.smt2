(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.166652367286943547952660082955844700336456298828125p-374 {- 750535539213890 -374 (-3.03196e-113)}
; Y = -1.810941688197245102998067523003555834293365478515625p983 {- 3652156684784314 983 (-1.48044e+296)}
; -1.166652367286943547952660082955844700336456298828125p-374 % -1.810941688197245102998067523003555834293365478515625p983 == -1.166652367286943547952660082955844700336456298828125p-374
; [HW: -1.166652367286943547952660082955844700336456298828125p-374] 

; mpf : - 750535539213890 -374
; mpfd: - 750535539213890 -374 (-3.03196e-113) class: Neg. norm. non-zero
; hwf : - 750535539213890 -374 (-3.03196e-113) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010001001 #b0010101010101001101110101100001101001100011001000010)))
(assert (= y (fp #b1 #b11111010110 #b1100111110011001110111111101110111000101001010111010)))
(assert (= r (fp #b1 #b01010001001 #x2aa9bac34c642)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
