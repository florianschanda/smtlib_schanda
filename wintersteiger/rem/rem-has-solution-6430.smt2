(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8181662119997665794102204017690382897853851318359375p230 {- 3684693047489279 230 (-3.13713e+069)}
; Y = -1.0582495167316370299204209004528820514678955078125p511 {- 262332501847112 511 (-7.0944e+153)}
; -1.8181662119997665794102204017690382897853851318359375p230 % -1.0582495167316370299204209004528820514678955078125p511 == -1.8181662119997665794102204017690382897853851318359375p230
; [HW: -1.8181662119997665794102204017690382897853851318359375p230] 

; mpf : - 3684693047489279 230
; mpfd: - 3684693047489279 230 (-3.13713e+069) class: Neg. norm. non-zero
; hwf : - 3684693047489279 230 (-3.13713e+069) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011100101 #b1101000101110011010101110100001100111011001011111111)))
(assert (= y (fp #b1 #b10111111110 #b0000111011101001011100001011100101011110110001001000)))
(assert (= r (fp #b1 #b10011100101 #xd17357433b2ff)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
