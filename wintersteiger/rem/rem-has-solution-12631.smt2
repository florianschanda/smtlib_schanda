(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.640332194472568172471937941736541688442230224609375p-152 {+ 2883799832419990 -152 (2.87324e-046)}
; Y = 1.6471162857907979404359366526477970182895660400390625p620 {+ 2914352663552817 620 (7.16674e+186)}
; 1.640332194472568172471937941736541688442230224609375p-152 % 1.6471162857907979404359366526477970182895660400390625p620 == 1.640332194472568172471937941736541688442230224609375p-152
; [HW: 1.640332194472568172471937941736541688442230224609375p-152] 

; mpf : + 2883799832419990 -152
; mpfd: + 2883799832419990 -152 (2.87324e-046) class: Pos. norm. non-zero
; hwf : + 2883799832419990 -152 (2.87324e-046) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100111 #b1010001111101100110011111000100111010101111010010110)))
(assert (= y (fp #b0 #b11001101011 #b1010010110101001011010011011010000101110001100110001)))
(assert (= r (fp #b0 #b01101100111 #xa3eccf89d5e96)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
