(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.91764775547020516199836492887698113918304443359375p657 {+ 4132718089592988 657 (1.14677e+198)}
; Y = 1.037344952966436029129226881195791065692901611328125p433 {+ 168186716263810 433 (2.30097e+130)}
; 1.91764775547020516199836492887698113918304443359375p657 % 1.037344952966436029129226881195791065692901611328125p433 == 1.58519074343363541856888332404196262359619140625p429
; [HW: 1.58519074343363541856888332404196262359619140625p429] 

; mpf : + 2635464814068384 429
; mpfd: + 2635464814068384 429 (2.19761e+129) class: Pos. norm. non-zero
; hwf : + 2635464814068384 429 (2.19761e+129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010010000 #b1110101011101010111101101001101011111110000010011100)))
(assert (= y (fp #b0 #b10110110000 #b0000100110001111011100000101011110101001010110000010)))
(assert (= r (fp #b0 #b10110101100 #x95cf0f80f82a0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
