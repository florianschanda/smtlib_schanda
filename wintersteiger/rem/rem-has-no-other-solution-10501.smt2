(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8512617673772540083376725306152366101741790771484375p326 {+ 3833742178354951 326 (2.53073e+098)}
; Y = 1.7687591048785851199909302522428333759307861328125p985 {+ 3462183218268872 985 (5.78382e+296)}
; 1.8512617673772540083376725306152366101741790771484375p326 % 1.7687591048785851199909302522428333759307861328125p985 == 1.8512617673772540083376725306152366101741790771484375p326
; [HW: 1.8512617673772540083376725306152366101741790771484375p326] 

; mpf : + 3833742178354951 326
; mpfd: + 3833742178354951 326 (2.53073e+098) class: Pos. norm. non-zero
; hwf : + 3833742178354951 326 (2.53073e+098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101000101 #b1101100111101100010010101000101100111000011100000111)))
(assert (= y (fp #b0 #b11111011000 #b1100010011001101011001011000110111110100101011001000)))
(assert (= r (fp #b0 #b10101000101 #xd9ec4a8b38707)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
