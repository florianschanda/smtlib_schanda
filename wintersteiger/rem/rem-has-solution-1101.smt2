(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.92323157379568510094713928992860019207000732421875p51 {- 4157865371722924 51 (-4.33073e+015)}
; Y = -1.3978611410378347645888652550638653337955474853515625p-755 {- 1791807286523193 -755 (-7.37594e-228)}
; -1.92323157379568510094713928992860019207000732421875p51 % -1.3978611410378347645888652550638653337955474853515625p-755 == -1.64221865873108097133581395610235631465911865234375p-757
; [HW: -1.64221865873108097133581395610235631465911865234375p-757] 

; mpf : - 2892295712151676 -757
; mpfd: - 2892295712151676 -757 (-2.16633e-228) class: Neg. norm. non-zero
; hwf : - 2892295712151676 -757 (-2.16633e-228) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000110010 #b1110110001011000111001111000100000010110010010101100)))
(assert (= y (fp #b1 #b00100001100 #b0110010111011010001110100100110100011011010100111001)))
(assert (= r (fp #b1 #b00100001010 #xa46871282187c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
