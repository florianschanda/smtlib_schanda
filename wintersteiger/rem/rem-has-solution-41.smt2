(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9973892480195301057932510957471095025539398193359375p1007 {+ 4491841845724095 1007 (2.73948e+303)}
; Y = 1.9136177887128018593188016893691383302211761474609375p133 {+ 4114568732806031 133 (2.08375e+040)}
; 1.9973892480195301057932510957471095025539398193359375p1007 % 1.9136177887128018593188016893691383302211761474609375p133 == 1.5238105418865373064107870959560386836528778076171875p133
; [HW: 1.5238105418865373064107870959560386836528778076171875p133] 

; mpf : + 2359032961252947 133
; mpfd: + 2359032961252947 133 (1.65928e+040) class: Pos. norm. non-zero
; hwf : + 2359032961252947 133 (1.65928e+040) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101110 #b1111111101010100111001101101100110100000001110111111)))
(assert (= y (fp #b0 #b10010000100 #b1110100111100010110110101111101110010000101110001111)))
(assert (= r (fp #b1 #b10010000010 #x8f29a183734f0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
