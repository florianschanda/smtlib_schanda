(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9688888859734825498293275813921354711055755615234375p122 {+ 4363487625833591 122 (1.04684e+037)}
; Y = -1.51248090807949164826595733757130801677703857421875p885 {- 2308008826661292 885 (-3.90154e+266)}
; 1.9688888859734825498293275813921354711055755615234375p122 % -1.51248090807949164826595733757130801677703857421875p885 == 1.9688888859734825498293275813921354711055755615234375p122
; [HW: 1.9688888859734825498293275813921354711055755615234375p122] 

; mpf : + 4363487625833591 122
; mpfd: + 4363487625833591 122 (1.04684e+037) class: Pos. norm. non-zero
; hwf : + 4363487625833591 122 (1.04684e+037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001111001 #b1111100000001001000110100001111010110110110001110111)))
(assert (= y (fp #b1 #b11101110100 #b1000001100110001111100101110010000000110100110101100)))
(assert (= r (fp #b0 #b10001111001 #xf8091a1eb6c77)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
