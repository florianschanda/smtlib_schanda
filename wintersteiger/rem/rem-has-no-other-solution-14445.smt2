(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3325455776782020311799215050996281206607818603515625p-262 {+ 1497652139715257 -262 (1.79814e-079)}
; Y = -1.72137702173798512461644349968992173671722412109375p-529 {- 3248793286292828 -529 (-9.79509e-160)}
; 1.3325455776782020311799215050996281206607818603515625p-262 % -1.72137702173798512461644349968992173671722412109375p-529 == 1.8570842700679150993892108090221881866455078125p-532
; [HW: 1.8570842700679150993892108090221881866455078125p-532] 

; mpf : + 3859964399302976 -532
; mpfd: + 3859964399302976 -532 (1.32091e-160) class: Pos. norm. non-zero
; hwf : + 3859964399302976 -532 (1.32091e-160) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111001 #b0101010100100001101101001111110010001110101010111001)))
(assert (= y (fp #b1 #b00111101110 #b1011100010101100001010100001110001110011010101011100)))
(assert (= r (fp #b0 #b00111101011 #xdb69dfeddb940)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
