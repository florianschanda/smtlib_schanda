(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5363819211526175134707727920613251626491546630859375p-289 {+ 2415649420231199 -289 (1.54465e-087)}
; Y = 1.549780029053120955495614907704293727874755859375p689 {+ 2475989133979376 689 (3.98049e+207)}
; 1.5363819211526175134707727920613251626491546630859375p-289 % 1.549780029053120955495614907704293727874755859375p689 == 1.5363819211526175134707727920613251626491546630859375p-289
; [HW: 1.5363819211526175134707727920613251626491546630859375p-289] 

; mpf : + 2415649420231199 -289
; mpfd: + 2415649420231199 -289 (1.54465e-087) class: Pos. norm. non-zero
; hwf : + 2415649420231199 -289 (1.54465e-087) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011011110 #b1000100101010000010100110101100110000100001000011111)))
(assert (= y (fp #b0 #b11010110000 #b1000110010111110011000100100110011000110111011110000)))
(assert (= r (fp #b0 #b01011011110 #x895053598421f)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
