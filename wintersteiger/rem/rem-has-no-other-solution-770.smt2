(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5769979949422323617369556814082898199558258056640625p779 {+ 2598567955015361 779 (5.01416e+234)}
; Y = 1.0898755043680659060356674672220833599567413330078125p-635 {+ 404763287981757 -635 (7.64416e-192)}
; 1.5769979949422323617369556814082898199558258056640625p779 % 1.0898755043680659060356674672220833599567413330078125p-635 == 1.846770385902718469850469773518852889537811279296875p-636
; [HW: 1.846770385902718469850469773518852889537811279296875p-636] 

; mpf : + 3813514794419854 -636
; mpfd: + 3813514794419854 -636 (6.47643e-192) class: Pos. norm. non-zero
; hwf : + 3813514794419854 -636 (6.47643e-192) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001010 #b1001001110110110001000111111111000100010011011000001)))
(assert (= y (fp #b0 #b00110000100 #b0001011100000010000101001011111111111000111010111101)))
(assert (= r (fp #b1 #b00110000001 #x54f8df5515bb0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
