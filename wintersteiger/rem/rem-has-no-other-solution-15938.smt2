(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.0293210929790976848607897409237921237945556640625p-1022 {+ 132050463414760 -1023 (6.52416e-310)}
; Y = -1.120683654768485748576267724274657666683197021484375p334 {- 543510862645062 334 (-3.92195e+100)}
; 0.0293210929790976848607897409237921237945556640625p-1022 % -1.120683654768485748576267724274657666683197021484375p334 == 0.0293210929790976848607897409237921237945556640625p-1022
; [HW: 0.0293210929790976848607897409237921237945556640625p-1022] 

; mpf : + 132050463414760 -1023
; mpfd: + 132050463414760 -1023 (6.52416e-310) class: Pos. denorm.
; hwf : + 132050463414760 -1023 (6.52416e-310) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b0000011110000001100101100100111101101101100111101000)))
(assert (= y (fp #b1 #b10101001101 #b0001111011100101000111111011111001100100011101000110)))
(assert (= r (fp #b0 #b00000000000 #x0781964f6d9e8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
