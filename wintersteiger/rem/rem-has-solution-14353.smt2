(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4416805323234225255646379082463681697845458984375p-512 {+ 1989152280788568 -512 (1.07525e-154)}
; Y = -1.5365619955672615848385476056137122213840484619140625p684 {- 2416460403297889 684 (-1.2333e+206)}
; 1.4416805323234225255646379082463681697845458984375p-512 % -1.5365619955672615848385476056137122213840484619140625p684 == 1.4416805323234225255646379082463681697845458984375p-512
; [HW: 1.4416805323234225255646379082463681697845458984375p-512] 

; mpf : + 1989152280788568 -512
; mpfd: + 1989152280788568 -512 (1.07525e-154) class: Pos. norm. non-zero
; hwf : + 1989152280788568 -512 (1.07525e-154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111111111 #b0111000100010001111110011011000110011011111001011000)))
(assert (= y (fp #b1 #b11010101011 #b1000100101011100001000000111111100111100111001100001)))
(assert (= r (fp #b0 #b00111111111 #x7111f9b19be58)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
