(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2937496919794766458977619549841620028018951416015625p-1009 {+ 1322931003338969 -1009 (2.35822e-304)}
; Y = -1.843794492264750228827097089379094541072845458984375p-576 {- 3800112560940806 -576 (-7.45478e-174)}
; 1.2937496919794766458977619549841620028018951416015625p-1009 % -1.843794492264750228827097089379094541072845458984375p-576 == 1.2937496919794766458977619549841620028018951416015625p-1009
; [HW: 1.2937496919794766458977619549841620028018951416015625p-1009] 

; mpf : + 1322931003338969 -1009
; mpfd: + 1322931003338969 -1009 (2.35822e-304) class: Pos. norm. non-zero
; hwf : + 1322931003338969 -1009 (2.35822e-304) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000001110 #b0100101100110011001011100000100001000011000011011001)))
(assert (= y (fp #b1 #b00110111111 #b1101100000000010111010100111010011010010011100000110)))
(assert (= r (fp #b0 #b00000001110 #x4b332e08430d9)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
