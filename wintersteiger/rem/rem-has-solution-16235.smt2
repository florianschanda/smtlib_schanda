(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7796957442130454385420534890727140009403228759765625p-156 {- 3511437463100233 -156 (-1.94835e-047)}
; Y = 1.2280489674965633373204809686285443603992462158203125p-18 {+ 1027041245039749 -18 (4.68464e-006)}
; -1.7796957442130454385420534890727140009403228759765625p-156 % 1.2280489674965633373204809686285443603992462158203125p-18 == -1.7796957442130454385420534890727140009403228759765625p-156
; [HW: -1.7796957442130454385420534890727140009403228759765625p-156] 

; mpf : - 3511437463100233 -156
; mpfd: - 3511437463100233 -156 (-1.94835e-047) class: Neg. norm. non-zero
; hwf : - 3511437463100233 -156 (-1.94835e-047) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101100011 #b1100011110011010001000111110101000111001101101001001)))
(assert (= y (fp #b0 #b01111101101 #b0011101001100001011010101100100101001000110010000101)))
(assert (= r (fp #b1 #b01101100011 #xc79a23ea39b49)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
