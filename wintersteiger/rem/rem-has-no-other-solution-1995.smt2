(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6150428647443642038439293173723854124546051025390625p597 {- 2769906816479601 597 (-8.37706e+179)}
; Y = -1.61847303336050440947246897849254310131072998046875p588 {- 2785354922581068 588 (-1.63962e+177)}
; -1.6150428647443642038439293173723854124546051025390625p597 % -1.61847303336050440947246897849254310131072998046875p588 == -1.4806997352572235371326314634643495082855224609375p588
; [HW: -1.4806997352572235371326314634643495082855224609375p588] 

; mpf : - 2164879148581528 588
; mpfd: - 2164879148581528 588 (-1.50005e+177) class: Neg. norm. non-zero
; hwf : - 2164879148581528 588 (-1.50005e+177) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010100 #b1001110101110011011100101111110110110111000101110001)))
(assert (= y (fp #b1 #b11001001011 #b1001111001010100001111111010101110111101110001001100)))
(assert (= r (fp #b0 #b11001001000 #x1a28e30cecda0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
