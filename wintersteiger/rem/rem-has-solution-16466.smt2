(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3999502725471486552777378165046684443950653076171875p-876 {+ 1801215898410067 -876 (2.77867e-264)}
; Y = -1.8381532447191568646616133264615200459957122802734375p-144 {- 3774706640596567 -144 (-8.24256e-044)}
; 1.3999502725471486552777378165046684443950653076171875p-876 % -1.8381532447191568646616133264615200459957122802734375p-144 == 1.3999502725471486552777378165046684443950653076171875p-876
; [HW: 1.3999502725471486552777378165046684443950653076171875p-876] 

; mpf : + 1801215898410067 -876
; mpfd: + 1801215898410067 -876 (2.77867e-264) class: Pos. norm. non-zero
; hwf : + 1801215898410067 -876 (2.77867e-264) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010010011 #b0110011001100011001001000001110010011101110001010011)))
(assert (= y (fp #b1 #b01101101111 #b1101011010010001001101100000011100011010111001010111)))
(assert (= r (fp #b0 #b00010010011 #x6663241c9dc53)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
