(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6001237070152278807455559217487461864948272705078125p-428 {+ 2702716903289981 -428 (2.30842e-129)}
; Y = -1.63573768172572986401291927904821932315826416015625p766 {- 2863107986525380 766 (-6.34878e+230)}
; 1.6001237070152278807455559217487461864948272705078125p-428 % -1.63573768172572986401291927904821932315826416015625p766 == 1.6001237070152278807455559217487461864948272705078125p-428
; [HW: 1.6001237070152278807455559217487461864948272705078125p-428] 

; mpf : + 2702716903289981 -428
; mpfd: + 2702716903289981 -428 (2.30842e-129) class: Pos. norm. non-zero
; hwf : + 2702716903289981 -428 (2.30842e-129) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010011 #b1001100110100001101101010000111100101111010001111101)))
(assert (= y (fp #b1 #b11011111101 #b1010001010111111101101000110011111011000110011000100)))
(assert (= r (fp #b0 #b01001010011 #x99a1b50f2f47d)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
