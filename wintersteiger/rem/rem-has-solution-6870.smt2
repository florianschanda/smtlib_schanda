(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5685585086807412036336017990834079682826995849609375p-374 {+ 2560559887832911 -374 (4.07645e-113)}
; Y = -1.8888955971046017534575867102830670773983001708984375p517 {- 4003229879891559 517 (-8.1043e+155)}
; 1.5685585086807412036336017990834079682826995849609375p-374 % -1.8888955971046017534575867102830670773983001708984375p517 == 1.5685585086807412036336017990834079682826995849609375p-374
; [HW: 1.5685585086807412036336017990834079682826995849609375p-374] 

; mpf : + 2560559887832911 -374
; mpfd: + 2560559887832911 -374 (4.07645e-113) class: Pos. norm. non-zero
; hwf : + 2560559887832911 -374 (4.07645e-113) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010001001 #b1001000110001101000011001110100010100101011101001111)))
(assert (= y (fp #b1 #b11000000100 #b1110001110001110101010010110111100011111011001100111)))
(assert (= r (fp #b0 #b01010001001 #x918d0ce8a574f)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
