(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.76856193577527331939336363575421273708343505859375p952 {- 3461295247568668 952 (-6.7325e+286)}
; Y = 1.318394844698748347155969895538873970508575439453125p-242 {+ 1433922903941970 -242 (1.86546e-073)}
; -1.76856193577527331939336363575421273708343505859375p952 % 1.318394844698748347155969895538873970508575439453125p-242 == -1.89423831379987195333569616195745766162872314453125p-243
; [HW: -1.89423831379987195333569616195745766162872314453125p-243] 

; mpf : - 4027291336809524 -243
; mpfd: - 4027291336809524 -243 (-1.34013e-073) class: Neg. norm. non-zero
; hwf : - 4027291336809524 -243 (-1.34013e-073) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110111 #b1100010011000000011110011001101100011010111100011100)))
(assert (= y (fp #b0 #b01100001101 #b0101000110000010010100110001010100110010001101010010)))
(assert (= r (fp #b0 #b01100001011 #x7c2fb1a3954e0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
