(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.98895362332088065926427589147351682186126708984375p1007 {+ 4453851169474620 1007 (2.72791e+303)}
; Y = 1.79804343386425369288872389006428420543670654296875p869 {+ 3594068111376524 869 (7.07728e+261)}
; 1.98895362332088065926427589147351682186126708984375p1007 % 1.79804343386425369288872389006428420543670654296875p869 == 1.58391778668958949083389597944915294647216796875p867
; [HW: 1.58391778668958949083389597944915294647216796875p867] 

; mpf : + 2629731926550240 867
; mpfd: + 2629731926550240 867 (1.55862e+261) class: Pos. norm. non-zero
; hwf : + 2629731926550240 867 (1.55862e+261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111101110 #b1111110100101100000100001000110101101100100000111100)))
(assert (= y (fp #b0 #b11101100100 #b1100110001001100100100110001000100111100000010001100)))
(assert (= r (fp #b0 #b11101100010 #x957ba2d5626e0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
