(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.750276348460442665810887774568982422351837158203125p-849 {- 3378944283351346 -849 (-4.66273e-256)}
; Y = 1.9429212200679975008910105316317640244960784912109375p1004 {+ 4246539655337967 1004 (3.33097e+302)}
; -1.750276348460442665810887774568982422351837158203125p-849 % 1.9429212200679975008910105316317640244960784912109375p1004 == -1.750276348460442665810887774568982422351837158203125p-849
; [HW: -1.750276348460442665810887774568982422351837158203125p-849] 

; mpf : - 3378944283351346 -849
; mpfd: - 3378944283351346 -849 (-4.66273e-256) class: Neg. norm. non-zero
; hwf : - 3378944283351346 -849 (-4.66273e-256) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010101110 #b1100000000010010000111000101101110011001100100110010)))
(assert (= y (fp #b0 #b11111101011 #b1111000101100011010010001111101011100101011111101111)))
(assert (= r (fp #b1 #b00010101110 #xc0121c5b99932)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
