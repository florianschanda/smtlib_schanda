(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.228209914985570971879269563942216336727142333984375p1020 {- 1027766088091270 1020 (-1.37997e+307)}
; Y = -1.15551341698286602621692509273998439311981201171875p-896 {- 700370166775148 -896 (-2.18725e-270)}
; -1.228209914985570971879269563942216336727142333984375p1020 % -1.15551341698286602621692509273998439311981201171875p-896 == -1.4759610343417914890551401185803115367889404296875p-897
; [HW: -1.4759610343417914890551401185803115367889404296875p-897] 

; mpf : - 2143537936904568 -897
; mpfd: - 2143537936904568 -897 (-1.39691e-270) class: Neg. norm. non-zero
; hwf : - 2143537936904568 -897 (-1.39691e-270) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111111011 #b0011101001101011111101110000100101111100011010000110)))
(assert (= y (fp #b1 #b00001111111 #b0010011111001111101110100011000000000111110101101100)))
(assert (= r (fp #b0 #b00001111101 #xab8dbe96c92c0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
