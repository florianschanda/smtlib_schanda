(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4851440088158451846567231768858619034290313720703125p-785 {+ 2184894377324069 -785 (7.2983e-237)}
; Y = -1.26473703140849824677616197732277214527130126953125p-668 {- 1192269596002484 -668 (-1.03267e-201)}
; 1.4851440088158451846567231768858619034290313720703125p-785 % -1.26473703140849824677616197732277214527130126953125p-668 == 1.4851440088158451846567231768858619034290313720703125p-785
; [HW: 1.4851440088158451846567231768858619034290313720703125p-785] 

; mpf : + 2184894377324069 -785
; mpfd: + 2184894377324069 -785 (7.2983e-237) class: Pos. norm. non-zero
; hwf : + 2184894377324069 -785 (7.2983e-237) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101110 #b0111110000110010011001011101001110110110111000100101)))
(assert (= y (fp #b1 #b00101100011 #b0100001111000101110011100101101111110000100010110100)))
(assert (= r (fp #b0 #b00011101110 #x7c3265d3b6e25)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
