(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2623524334351727826941669263760559260845184326171875p681 {+ 1181530321458387 681 (1.26651e+205)}
; Y = 1.817258802005947249114115038537420332431793212890625p-792 {+ 3680606436179242 -792 (6.97686e-239)}
; 1.2623524334351727826941669263760559260845184326171875p681 % 1.817258802005947249114115038537420332431793212890625p-792 == 1.3783731434047954422794646234251558780670166015625p-793
; [HW: 1.3783731434047954422794646234251558780670166015625p-793] 

; mpf : + 1704041147644840 -793
; mpfd: + 1704041147644840 -793 (2.64594e-239) class: Pos. norm. non-zero
; hwf : + 1704041147644840 -793 (2.64594e-239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11010101000 #b0100001100101001100001110111000110100001010011010011)))
(assert (= y (fp #b0 #b00011100111 #b1101000100110111110111110111001011111011110100101010)))
(assert (= r (fp #b0 #b00011100110 #x60dd0ff49bba8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
