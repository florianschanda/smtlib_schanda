(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.284552871669366158613456718740053474903106689453125p514 {+ 1281512206817362 514 (6.88922e+154)}
; Y = 1.2737627010750844913644641565042547881603240966796875p661 {+ 1232917598549691 661 (1.21875e+199)}
; 1.284552871669366158613456718740053474903106689453125p514 % 1.2737627010750844913644641565042547881603240966796875p661 == 1.284552871669366158613456718740053474903106689453125p514
; [HW: 1.284552871669366158613456718740053474903106689453125p514] 

; mpf : + 1281512206817362 514
; mpfd: + 1281512206817362 514 (6.88922e+154) class: Pos. norm. non-zero
; hwf : + 1281512206817362 514 (6.88922e+154) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000000001 #b0100100011011000011101001111110111001101100001010010)))
(assert (= y (fp #b0 #b11010010100 #b0100011000010101010011111111011111111011011010111011)))
(assert (= r (fp #b0 #b11000000001 #x48d874fdcd852)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
