(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9988157382222428992690765880979597568511962890625p578 {+ 4498266186469480 578 (1.97747e+174)}
; Y = 1.1134676535343028813684895794722251594066619873046875p239 {+ 511012882175691 239 (9.83664e+071)}
; 1.9988157382222428992690765880979597568511962890625p578 % 1.1134676535343028813684895794722251594066619873046875p239 == 1.074922277825853367261288440204225480556488037109375p238
; [HW: 1.074922277825853367261288440204225480556488037109375p238] 

; mpf : + 337419942498262 238
; mpfd: + 337419942498262 238 (4.74806e+071) class: Pos. norm. non-zero
; hwf : + 337419942498262 238 (4.74806e+071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001000001 #b1111111110110010011000110110001001100101000001101000)))
(assert (= y (fp #b0 #b10011101110 #b0001110100001100001101110101010100010101011011001011)))
(assert (= r (fp #b0 #b10011101101 #x132e1b3d00fd6)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
