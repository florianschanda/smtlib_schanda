(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.39086244709563455757006522617302834987640380859375p990 {+ 1760287971093020 990 (1.45539e+298)}
; Y = 1.3096039879181378129402446575113572180271148681640625p-916 {+ 1394332404620545 -916 (2.36409e-276)}
; 1.39086244709563455757006522617302834987640380859375p990 % 1.3096039879181378129402446575113572180271148681640625p-916 == 1.1331582739045682473033593851141631603240966796875p-916
; [HW: 1.1331582739045682473033593851141631603240966796875p-916] 

; mpf : + 599691552737912 -916
; mpfd: + 599691552737912 -916 (2.04557e-276) class: Pos. norm. non-zero
; hwf : + 599691552737912 -916 (2.04557e-276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011101 #b0110010000001111100011111011001110000010101000011100)))
(assert (= y (fp #b0 #b00001101011 #b0100111101000010001101001111101011010001110100000001)))
(assert (= r (fp #b1 #b00001101000 #x695c5ed9a9448)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
