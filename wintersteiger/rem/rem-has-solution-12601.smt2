(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7602532406962947408857189657283015549182891845703125p832 {+ 3423876211507045 832 (5.04117e+250)}
; Y = -1.7057465205362738469574424016172997653484344482421875p-374 {- 3178399766905187 -374 (-4.43298e-113)}
; 1.7602532406962947408857189657283015549182891845703125p832 % -1.7057465205362738469574424016172997653484344482421875p-374 == 1.008722796709851099450361289200372993946075439453125p-374
; [HW: 1.008722796709851099450361289200372993946075439453125p-374] 

; mpf : + 39283984012114 -374
; mpfd: + 39283984012114 -374 (2.62152e-113) class: Pos. norm. non-zero
; hwf : + 39283984012114 -374 (2.62152e-113) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100111111 #b1100001010011111111101001101010101110111111101100101)))
(assert (= y (fp #b1 #b01010001001 #b1011010010101011110011011101000011111000000101100011)))
(assert (= r (fp #b1 #b01010001000 #x64e04b24bdc22)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
