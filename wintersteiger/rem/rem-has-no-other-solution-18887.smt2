(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8226083560840271591274586171493865549564361572265625p-181 {+ 3704698685931881 -181 (5.94654e-055)}
; Y = -1.9969663654439882005675599430105648934841156005859375p314 {- 4489937351914463 314 (-6.66483e+094)}
; 1.8226083560840271591274586171493865549564361572265625p-181 % -1.9969663654439882005675599430105648934841156005859375p314 == 1.8226083560840271591274586171493865549564361572265625p-181
; [HW: 1.8226083560840271591274586171493865549564361572265625p-181] 

; mpf : + 3704698685931881 -181
; mpfd: + 3704698685931881 -181 (5.94654e-055) class: Pos. norm. non-zero
; hwf : + 3704698685931881 -181 (5.94654e-055) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001010 #b1101001010010110011101100001001011001100000101101001)))
(assert (= y (fp #b1 #b10100111001 #b1111111100111001001100000000111011001011001111011111)))
(assert (= r (fp #b0 #b01101001010 #xd2967612cc169)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
