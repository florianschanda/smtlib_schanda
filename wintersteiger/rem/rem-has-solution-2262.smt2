(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9175760863694539803958605261868797242641448974609375p239 {- 4132395320657551 239 (-1.69403e+072)}
; Y = -1.710681452067978280950910630053840577602386474609375p61 {- 3200624722712470 61 (-3.94456e+018)}
; -1.9175760863694539803958605261868797242641448974609375p239 % -1.710681452067978280950910630053840577602386474609375p61 == -1.67619116655960898043531415169127285480499267578125p61
; [HW: -1.67619116655960898043531415169127285480499267578125p61] 

; mpf : - 3045294285749076 61
; mpfd: - 3045294285749076 61 (-3.86503e+018) class: Neg. norm. non-zero
; hwf : - 3045294285749076 61 (-3.86503e+018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011101110 #b1110101011100110010001000011001010001100011010001111)))
(assert (= y (fp #b1 #b10000111100 #b1011010111101111001110000011101010000001011110010110)))
(assert (= r (fp #b0 #b10000110111 #x1a8b5f0938840)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
