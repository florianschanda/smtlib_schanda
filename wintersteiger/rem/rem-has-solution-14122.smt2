(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4496064094578711145544502869597636163234710693359375p40 {+ 2024847258097855 40 (1.59386e+012)}
; Y = -1.7580938596447055477511867138673551380634307861328125p675 {- 3414151223807757 675 (-2.75606e+203)}
; 1.4496064094578711145544502869597636163234710693359375p40 % -1.7580938596447055477511867138673551380634307861328125p675 == 1.4496064094578711145544502869597636163234710693359375p40
; [HW: 1.4496064094578711145544502869597636163234710693359375p40] 

; mpf : + 2024847258097855 40
; mpfd: + 2024847258097855 40 (1.59386e+012) class: Pos. norm. non-zero
; hwf : + 2024847258097855 40 (1.59386e+012) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000100111 #b0111001100011001011001111101100010110001100010111111)))
(assert (= y (fp #b1 #b11010100010 #b1100001000010010011100000110111001111000111100001101)))
(assert (= r (fp #b0 #b10000100111 #x731967d8b18bf)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
