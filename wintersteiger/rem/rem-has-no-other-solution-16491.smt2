(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.435078230806777543904217964154668152332305908203125p-595 {- 1959418158138418 -595 (-1.1067e-179)}
; Y = 1.400598100034156079374270120752044022083282470703125p830 {+ 1804133454039154 830 (1.00279e+250)}
; -1.435078230806777543904217964154668152332305908203125p-595 % 1.400598100034156079374270120752044022083282470703125p830 == -1.435078230806777543904217964154668152332305908203125p-595
; [HW: -1.435078230806777543904217964154668152332305908203125p-595] 

; mpf : - 1959418158138418 -595
; mpfd: - 1959418158138418 -595 (-1.1067e-179) class: Neg. norm. non-zero
; hwf : - 1959418158138418 -595 (-1.1067e-179) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110101100 #b0110111101100001010010010111010010000100010000110010)))
(assert (= y (fp #b0 #b11100111101 #b0110011010001101100110001101101001111100100001110010)))
(assert (= r (fp #b1 #b00110101100 #x6f61497484432)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
