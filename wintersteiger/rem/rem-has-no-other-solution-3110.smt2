(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.63673423010700691548890972626395523548126220703125p-965 {- 2867596041443956 -965 (-5.24847e-291)}
; Y = 1.331242787035439079090792802162468433380126953125p-527 {+ 1491784892261968 -527 (3.03005e-159)}
; -1.63673423010700691548890972626395523548126220703125p-965 % 1.331242787035439079090792802162468433380126953125p-527 == -1.63673423010700691548890972626395523548126220703125p-965
; [HW: -1.63673423010700691548890972626395523548126220703125p-965] 

; mpf : - 2867596041443956 -965
; mpfd: - 2867596041443956 -965 (-5.24847e-291) class: Neg. norm. non-zero
; hwf : - 2867596041443956 -965 (-5.24847e-291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111010 #b1010001100000001000000111011011010001101101001110100)))
(assert (= y (fp #b0 #b00111110000 #b0101010011001100010100111100100101011010011001010000)))
(assert (= r (fp #b1 #b00000111010 #xa30103b68da74)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
