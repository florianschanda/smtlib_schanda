(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0802862305798670572443143100827001035213470458984375p60 {+ 361577038122471 60 (1.24549e+018)}
; Y = -1.767646996523266178513722479692660272121429443359375p-701 {- 3457174727494262 -701 (-1.68023e-211)}
; 1.0802862305798670572443143100827001035213470458984375p60 % -1.767646996523266178513722479692660272121429443359375p-701 == 1.732282729625502337711395739461295306682586669921875p-701
; [HW: 1.732282729625502337711395739461295306682586669921875p-701] 

; mpf : + 3297908228271262 -701
; mpfd: + 3297908228271262 -701 (1.64661e-211) class: Pos. norm. non-zero
; hwf : + 3297908228271262 -701 (1.64661e-211) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10000111011 #b0001010010001101101000110110111010101000110111100111)))
(assert (= y (fp #b1 #b00101000010 #b1100010010000100100000110111100011110000101001110110)))
(assert (= r (fp #b1 #b00100111101 #x21b43e38bbb00)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
