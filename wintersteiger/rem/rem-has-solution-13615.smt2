(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5343810504540804640072337861056439578533172607421875p-830 {- 2406638299698851 -830 (-2.14307e-250)}
; Y = -1.8515020781432316443471108868834562599658966064453125p73 {- 3834824441831061 73 (-1.74869e+022)}
; -1.5343810504540804640072337861056439578533172607421875p-830 % -1.8515020781432316443471108868834562599658966064453125p73 == -1.5343810504540804640072337861056439578533172607421875p-830
; [HW: -1.5343810504540804640072337861056439578533172607421875p-830] 

; mpf : - 2406638299698851 -830
; mpfd: - 2406638299698851 -830 (-2.14307e-250) class: Neg. norm. non-zero
; hwf : - 2406638299698851 -830 (-2.14307e-250) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00011000001 #b1000100011001101001100100100111101001101011010100011)))
(assert (= y (fp #b1 #b10001001000 #b1101100111111100000010100100101000011001111010010101)))
(assert (= r (fp #b1 #b00011000001 #x88cd324f4d6a3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
