(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2973027809736967785880779047147370874881744384765625p-539 {+ 1338932693609353 -539 (7.20898e-163)}
; Y = 1.2772758269837323208406587582430802285671234130859375p572 {+ 1248739311082783 572 (1.97443e+172)}
; 1.2973027809736967785880779047147370874881744384765625p-539 % 1.2772758269837323208406587582430802285671234130859375p572 == 1.2973027809736967785880779047147370874881744384765625p-539
; [HW: 1.2973027809736967785880779047147370874881744384765625p-539] 

; mpf : + 1338932693609353 -539
; mpfd: + 1338932693609353 -539 (7.20898e-163) class: Pos. norm. non-zero
; hwf : + 1338932693609353 -539 (7.20898e-163) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111100100 #b0100110000011100000010001111100101001010101110001001)))
(assert (= y (fp #b0 #b11000111011 #b0100011011111011100011000111000011011101110100011111)))
(assert (= r (fp #b0 #b00111100100 #x4c1c08f94ab89)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
