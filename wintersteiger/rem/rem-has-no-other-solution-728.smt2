(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1154818916194570999067536831717006862163543701171875p991 {+ 520084204065427 991 (2.33447e+298)}
; Y = -1.0766783078874138102065671773743815720081329345703125p802 {- 345328398829157 802 (-2.87172e+241)}
; 1.1154818916194570999067536831717006862163543701171875p991 % -1.0766783078874138102065671773743815720081329345703125p802 == 1.625288968704634129380792728625237941741943359375p799
; [HW: 1.625288968704634129380792728625237941741943359375p799] 

; mpf : + 2816051166457072 799
; mpfd: + 2816051166457072 799 (5.41873e+240) class: Pos. norm. non-zero
; hwf : + 2816051166457072 799 (5.41873e+240) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011110 #b0001110110010000001110001010001111001001001010010011)))
(assert (= y (fp #b1 #b11100100001 #b0001001110100001001100001000100010110000011001100101)))
(assert (= r (fp #b0 #b11100011110 #xa012f01722cf0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
