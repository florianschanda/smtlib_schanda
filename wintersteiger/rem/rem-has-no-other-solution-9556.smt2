(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.16652361450452790592180463136173784732818603515625p-791 {+ 749955688230980 -791 (8.95709e-239)}
; Y = -1.475016814349551008689331865753047168254852294921875p-711 {- 2139285548099358 -711 (-1.36921e-214)}
; 1.16652361450452790592180463136173784732818603515625p-791 % -1.475016814349551008689331865753047168254852294921875p-711 == 1.16652361450452790592180463136173784732818603515625p-791
; [HW: 1.16652361450452790592180463136173784732818603515625p-791] 

; mpf : + 749955688230980 -791
; mpfd: + 749955688230980 -791 (8.95709e-239) class: Pos. norm. non-zero
; hwf : + 749955688230980 -791 (8.95709e-239) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011101000 #b0010101010100001010010101010011001001111000001000100)))
(assert (= y (fp #b1 #b00100111000 #b0111100110011010101100111011001010101110011100011110)))
(assert (= r (fp #b0 #b00011101000 #x2aa14aa64f044)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
