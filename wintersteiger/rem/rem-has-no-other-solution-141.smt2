(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9516483334035210628343293137731961905956268310546875p778 {- 4285843079703851 778 (-3.10269e+234)}
; Y = -1.8362784702698367045314853385207243263721466064453125p894 {- 3766263407085205 894 (-2.42524e+269)}
; -1.9516483334035210628343293137731961905956268310546875p778 % -1.8362784702698367045314853385207243263721466064453125p894 == -1.9516483334035210628343293137731961905956268310546875p778
; [HW: -1.9516483334035210628343293137731961905956268310546875p778] 

; mpf : - 4285843079703851 778
; mpfd: - 4285843079703851 778 (-3.10269e+234) class: Neg. norm. non-zero
; hwf : - 4285843079703851 778 (-3.10269e+234) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100001001 #b1111001110011111001110011010010101000010110100101011)))
(assert (= y (fp #b1 #b11101111101 #b1101011000010110010110001000100000101000011010010101)))
(assert (= r (fp #b1 #b11100001001 #xf39f39a542d2b)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
