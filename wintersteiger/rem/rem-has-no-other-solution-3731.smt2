(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8138434290407996485328112612478435039520263671875p847 {+ 3665224963766072 847 (1.70218e+255)}
; Y = -1.3616771464992931672810527743422426283359527587890625p780 {- 1628849062202641 780 (-8.65906e+234)}
; 1.8138434290407996485328112612478435039520263671875p847 % -1.3616771464992931672810527743422426283359527587890625p780 == 1.2296162716387015745311828140984289348125457763671875p780
; [HW: 1.2296162716387015745311828140984289348125457763671875p780] 

; mpf : + 1034099755390259 780
; mpfd: + 1034099755390259 780 (7.81927e+234) class: Pos. norm. non-zero
; hwf : + 1034099755390259 780 (7.81927e+234) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101001110 #b1101000001011000000010101111111111001011011100111000)))
(assert (= y (fp #b1 #b11100001011 #b0101110010010110110111111001101111101100110100010001)))
(assert (= r (fp #b1 #b11100001000 #x0e75ee94dbef0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
