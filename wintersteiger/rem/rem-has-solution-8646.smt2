(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.256644855236598079528675953042693436145782470703125p-613 {+ 1155825674410098 -613 (3.69679e-185)}
; Y = 1.94124688715707716113456626771949231624603271484375p237 {+ 4238999130264252 237 (4.28736e+071)}
; 1.256644855236598079528675953042693436145782470703125p-613 % 1.94124688715707716113456626771949231624603271484375p237 == 1.256644855236598079528675953042693436145782470703125p-613
; [HW: 1.256644855236598079528675953042693436145782470703125p-613] 

; mpf : + 1155825674410098 -613
; mpfd: + 1155825674410098 -613 (3.69679e-185) class: Pos. norm. non-zero
; hwf : + 1155825674410098 -613 (3.69679e-185) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110011010 #b0100000110110011011110100010101111101101100001110010)))
(assert (= y (fp #b0 #b10011101100 #b1111000011110101100011100101010111001101001010111100)))
(assert (= r (fp #b0 #b00110011010 #x41b37a2bed872)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
