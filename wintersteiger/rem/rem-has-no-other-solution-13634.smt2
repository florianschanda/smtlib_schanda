(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4387090340892465523126020343624986708164215087890625p541 {+ 1975769842448401 541 (1.03562e+163)}
; Y = 1.90082198195534868290224039810709655284881591796875p739 {+ 4056941542261260 739 (5.49678e+222)}
; 1.4387090340892465523126020343624986708164215087890625p541 % 1.90082198195534868290224039810709655284881591796875p739 == 1.4387090340892465523126020343624986708164215087890625p541
; [HW: 1.4387090340892465523126020343624986708164215087890625p541] 

; mpf : + 1975769842448401 541
; mpfd: + 1975769842448401 541 (1.03562e+163) class: Pos. norm. non-zero
; hwf : + 1975769842448401 541 (1.03562e+163) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000011100 #b0111000001001111001111000011100111011111100000010001)))
(assert (= y (fp #b0 #b11011100010 #b1110011010011100010001001111100000000100001000001100)))
(assert (= r (fp #b0 #b11000011100 #x704f3c39df811)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
