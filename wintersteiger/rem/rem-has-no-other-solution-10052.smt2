(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2835123852787322373814049569773487746715545654296875p-974 {+ 1276826272696219 -974 (8.03867e-294)}
; Y = 1.7559106752430191367153611281537450850009918212890625p-335 {+ 3404319035349841 -335 (2.50873e-101)}
; 1.2835123852787322373814049569773487746715545654296875p-974 % 1.7559106752430191367153611281537450850009918212890625p-335 == 1.2835123852787322373814049569773487746715545654296875p-974
; [HW: 1.2835123852787322373814049569773487746715545654296875p-974] 

; mpf : + 1276826272696219 -974
; mpfd: + 1276826272696219 -974 (8.03867e-294) class: Pos. norm. non-zero
; hwf : + 1276826272696219 -974 (8.03867e-294) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110001 #b0100100010010100010001001000011011001000011110011011)))
(assert (= y (fp #b0 #b01010110000 #b1100000110000011010111001010110011011101101101010001)))
(assert (= r (fp #b0 #b00000110001 #x48944486c879b)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
