(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.0848563614049222536550587392412126064300537109375p675 {- 382159077603224 675 (-1.70067e+203)}
; Y = 1.061739838175627337335527045070193707942962646484375p678 {+ 278051512201670 678 (1.33154e+204)}
; -1.0848563614049222536550587392412126064300537109375p675 % 1.061739838175627337335527045070193707942962646484375p678 == -1.0848563614049222536550587392412126064300537109375p675
; [HW: -1.0848563614049222536550587392412126064300537109375p675] 

; mpf : - 382159077603224 675
; mpfd: - 382159077603224 675 (-1.70067e+203) class: Neg. norm. non-zero
; hwf : - 382159077603224 675 (-1.70067e+203) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100010 #b0001010110111001001001011000000100010111011110011000)))
(assert (= y (fp #b0 #b11010100101 #b0000111111001110001011101001100111010011000111000110)))
(assert (= r (fp #b1 #b11010100010 #x15b9258117798)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
