(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.5683293361340477911625157503294758498668670654296875p-841 {- 2559527786437019 -841 (-1.06957e-253)}
; Y = -1.2744928542645042046643766298075206577777862548828125p869 {- 1236205916181485 869 (-5.01653e+261)}
; -1.5683293361340477911625157503294758498668670654296875p-841 % -1.2744928542645042046643766298075206577777862548828125p869 == -1.5683293361340477911625157503294758498668670654296875p-841
; [HW: -1.5683293361340477911625157503294758498668670654296875p-841] 

; mpf : - 2559527786437019 -841
; mpfd: - 2559527786437019 -841 (-1.06957e-253) class: Neg. norm. non-zero
; hwf : - 2559527786437019 -841 (-1.06957e-253) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010110110 #b1001000101111110000010000000100000001101100110011011)))
(assert (= y (fp #b1 #b11101100100 #b0100011001000101001010011110100000001101001111101101)))
(assert (= r (fp #b1 #b00010110110 #x917e08080d99b)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
