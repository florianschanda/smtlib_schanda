(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.905732572221081166929934624931775033473968505859375p-426 {+ 4079056874752182 -426 (1.09972e-128)}
; Y = -1.3388821689180987473122286246507428586483001708984375p148 {- 1526189609662055 148 (-4.77729e+044)}
; 1.905732572221081166929934624931775033473968505859375p-426 % -1.3388821689180987473122286246507428586483001708984375p148 == 1.905732572221081166929934624931775033473968505859375p-426
; [HW: 1.905732572221081166929934624931775033473968505859375p-426] 

; mpf : + 4079056874752182 -426
; mpfd: + 4079056874752182 -426 (1.09972e-128) class: Pos. norm. non-zero
; hwf : + 4079056874752182 -426 (1.09972e-128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010101 #b1110011111011110000101110000000010011100100010110110)))
(assert (= y (fp #b1 #b10010010011 #b0101011011000000111110110101100010110011011001100111)))
(assert (= r (fp #b0 #b01001010101 #xe7de17009c8b6)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
