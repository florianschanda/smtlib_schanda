(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.2431956134525972146320782485418021678924560546875p-832 {- 1095255674123256 -832 (-4.34093e-251)}
; Y = -1.326949484756804853446965353214181959629058837890625p-546 {- 1472449577719722 -546 (-5.76072e-165)}
; -1.2431956134525972146320782485418021678924560546875p-832 % -1.326949484756804853446965353214181959629058837890625p-546 == -1.2431956134525972146320782485418021678924560546875p-832
; [HW: -1.2431956134525972146320782485418021678924560546875p-832] 

; mpf : - 1095255674123256 -832
; mpfd: - 1095255674123256 -832 (-4.34093e-251) class: Neg. norm. non-zero
; hwf : - 1095255674123256 -832 (-4.34093e-251) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010111111 #b0011111001000010000100010101011001001111001111111000)))
(assert (= y (fp #b1 #b00111011101 #b0101001110110010111101100010000001111001011110101010)))
(assert (= r (fp #b1 #b00010111111 #x3e4211564f3f8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
