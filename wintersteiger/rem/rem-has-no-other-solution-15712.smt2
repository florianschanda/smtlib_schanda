(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0513566821088848879384158863103948533535003662109375p-584 {+ 231289934408559 -584 (1.66048e-176)}
; Y = 1.4702841859353179554403823203756473958492279052734375p-887 {+ 2117971684536535 -887 (1.42494e-267)}
; 1.0513566821088848879384158863103948533535003662109375p-584 % 1.4702841859353179554403823203756473958492279052734375p-887 == 1.21289755457800207949503601412288844585418701171875p-888
; [HW: 1.21289755457800207949503601412288844585418701171875p-888] 

; mpf : + 958805347465580 -888
; mpfd: + 958805347465580 -888 (5.87744e-268) class: Pos. norm. non-zero
; hwf : + 958805347465580 -888 (5.87744e-268) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00110110111 #b0000110100100101101101100010011000010110101101101111)))
(assert (= y (fp #b0 #b00010001000 #b0111100001100100100010110101111001101011000011010111)))
(assert (= r (fp #b0 #b00010000111 #x368074424f96c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
