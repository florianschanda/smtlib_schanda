(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.5715946059334073847679746904759667813777923583984375p-564 {- 2574233254288679 -564 (-2.60269e-170)}
; Y = 1.65533804791886485219265523483045399188995361328125p771 {+ 2951380188409108 771 (2.05595e+232)}
; -1.5715946059334073847679746904759667813777923583984375p-564 % 1.65533804791886485219265523483045399188995361328125p771 == -1.5715946059334073847679746904759667813777923583984375p-564
; [HW: -1.5715946059334073847679746904759667813777923583984375p-564] 

; mpf : - 2574233254288679 -564
; mpfd: - 2574233254288679 -564 (-2.60269e-170) class: Neg. norm. non-zero
; hwf : - 2574233254288679 -564 (-2.60269e-170) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111001011 #b1001001001010100000001100010101100001101110100100111)))
(assert (= y (fp #b0 #b11100000010 #b1010011111000100001110111111101110100010110100010100)))
(assert (= r (fp #b1 #b00111001011 #x9254062b0dd27)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
