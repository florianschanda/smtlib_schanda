(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.77157117274200093248737175599671900272369384765625p-654 {+ 3474847646050692 -654 (2.36996e-197)}
; Y = -1.8414991002615657134100501934881322085857391357421875p-742 {- 3789775034370595 -742 (-7.96003e-224)}
; 1.77157117274200093248737175599671900272369384765625p-654 % -1.8414991002615657134100501934881322085857391357421875p-742 == 1.745949210612760982286317812395282089710235595703125p-742
; [HW: 1.745949210612760982286317812395282089710235595703125p-742] 

; mpf : + 3359456586952946 -742
; mpfd: + 3359456586952946 -742 (7.54701e-224) class: Pos. norm. non-zero
; hwf : + 3359456586952946 -742 (7.54701e-224) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101110001 #b1100010110000101101100000011100101110110100110000100)))
(assert (= y (fp #b1 #b00100011001 #b1101011101101100011111000010101100111100101000100011)))
(assert (= r (fp #b1 #b00100010101 #x875f5232d9310)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
