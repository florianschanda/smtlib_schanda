(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.9628504564469597681863888283260166645050048828125p384 {- 4336292956868040 384 (-7.73402e+115)}
; Y = 1.9213363470083739681371071128523908555507659912109375p302 {+ 4149330029069807 302 (1.56553e+091)}
; -1.9628504564469597681863888283260166645050048828125p384 % 1.9213363470083739681371071128523908555507659912109375p302 == -1.695377260263402519058217876590788364410400390625p299
; [HW: -1.695377260263402519058217876590788364410400390625p299] 

; mpf : - 3131700770204176 299
; mpfd: - 3131700770204176 299 (-1.72677e+090) class: Neg. norm. non-zero
; hwf : - 3131700770204176 299 (-1.72677e+090) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111111 #b1111011001111101010111100001010101100000110111001000)))
(assert (= y (fp #b0 #b10100101101 #b1110101111011100101100101110011100000100010111101111)))
(assert (= r (fp #b1 #b10100101010 #xb2043e7f36a10)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
