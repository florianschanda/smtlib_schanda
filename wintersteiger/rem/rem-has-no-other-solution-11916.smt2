(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3079786560612010060111742859589867293834686279296875p214 {- 1387012560675291 214 (-3.44366e+064)}
; Y = -1.77292386076927588334228858002461493015289306640625p822 {- 3480939611346276 822 (-4.95846e+247)}
; -1.3079786560612010060111742859589867293834686279296875p214 % -1.77292386076927588334228858002461493015289306640625p822 == -1.3079786560612010060111742859589867293834686279296875p214
; [HW: -1.3079786560612010060111742859589867293834686279296875p214] 

; mpf : - 1387012560675291 214
; mpfd: - 1387012560675291 214 (-3.44366e+064) class: Neg. norm. non-zero
; hwf : - 1387012560675291 214 (-3.44366e+064) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011010101 #b0100111011010111101100000110111110100110000111011011)))
(assert (= y (fp #b1 #b11100110101 #b1100010111011110010101101001000001001101010101100100)))
(assert (= r (fp #b1 #b10011010101 #x4ed7b06fa61db)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
