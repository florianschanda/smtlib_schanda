(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.097680741260680381543579642311669886112213134765625p995 {- 439914949942874 995 (-3.67554e+299)}
; Y = 1.1216152358984496917315709652029909193515777587890625p664 {+ 547706331074833 664 (8.58541e+199)}
; -1.097680741260680381543579642311669886112213134765625p995 % 1.1216152358984496917315709652029909193515777587890625p664 == -1.034337654623490809768782128230668604373931884765625p664
; [HW: -1.034337654623490809768782128230668604373931884765625p664] 

; mpf : - 154643048567130 664
; mpfd: - 154643048567130 664 (-7.91734e+199) class: Neg. norm. non-zero
; hwf : - 154643048567130 664 (-7.91734e+199) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111100010 #b0001100100000001100110101110010100101001111001011010)))
(assert (= y (fp #b0 #b11010010111 #b0001111100100010001011010001010011100001000100010001)))
(assert (= r (fp #b0 #b11010010011 #x657d2d53ffb70)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
