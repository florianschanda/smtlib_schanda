(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.355972174015315889761268408619798719882965087890625p101 {+ 1603156150249642 101 (3.4378e+030)}
; Y = -1.473616031105899448760965242399834096431732177734375p934 {- 2132976981205222 934 (-2.13993e+281)}
; 1.355972174015315889761268408619798719882965087890625p101 % -1.473616031105899448760965242399834096431732177734375p934 == 1.355972174015315889761268408619798719882965087890625p101
; [HW: 1.355972174015315889761268408619798719882965087890625p101] 

; mpf : + 1603156150249642 101
; mpfd: + 1603156150249642 101 (3.4378e+030) class: Pos. norm. non-zero
; hwf : + 1603156150249642 101 (3.4378e+030) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001100100 #b0101101100100000111111100000110110101110100010101010)))
(assert (= y (fp #b1 #b11110100101 #b0111100100111110111001100111010001110110000011100110)))
(assert (= r (fp #b0 #b10001100100 #x5b20fe0dae8aa)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
