(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.86180954658590369632520378218032419681549072265625p-867 {+ 3881245152868612 -867 (1.89203e-261)}
; Y = -1.1964380264806198095328682029503397643566131591796875p961 {- 884678222859515 961 (-2.33193e+289)}
; 1.86180954658590369632520378218032419681549072265625p-867 % -1.1964380264806198095328682029503397643566131591796875p961 == 1.86180954658590369632520378218032419681549072265625p-867
; [HW: 1.86180954658590369632520378218032419681549072265625p-867] 

; mpf : + 3881245152868612 -867
; mpfd: + 3881245152868612 -867 (1.89203e-261) class: Pos. norm. non-zero
; hwf : + 3881245152868612 -867 (1.89203e-261) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010011100 #b1101110010011111100011001110100111110111100100000100)))
(assert (= y (fp #b1 #b11111000000 #b0011001001001001110000110011001101101100110011111011)))
(assert (= r (fp #b0 #b00010011100 #xdc9f8ce9f7904)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
