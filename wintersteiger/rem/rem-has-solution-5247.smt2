(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5778438118533582024127781551214866340160369873046875p-406 {+ 2602377175741131 -406 (9.54741e-123)}
; Y = -1.0242950314572656367317904368974268436431884765625p-151 {- 109415094617896 -151 (-3.58836e-046)}
; 1.5778438118533582024127781551214866340160369873046875p-406 % -1.0242950314572656367317904368974268436431884765625p-151 == 1.5778438118533582024127781551214866340160369873046875p-406
; [HW: 1.5778438118533582024127781551214866340160369873046875p-406] 

; mpf : + 2602377175741131 -406
; mpfd: + 2602377175741131 -406 (9.54741e-123) class: Pos. norm. non-zero
; hwf : + 2602377175741131 -406 (9.54741e-123) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001101001 #b1001001111101101100100100111001000011011001011001011)))
(assert (= y (fp #b1 #b01101101000 #b0000011000111000001100101111110110010000011100101000)))
(assert (= r (fp #b0 #b01001101001 #x93ed92721b2cb)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
