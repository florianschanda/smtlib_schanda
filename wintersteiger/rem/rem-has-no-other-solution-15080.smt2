(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.2279918939936333988072192369145341217517852783203125p545 {- 1026784208833221 545 (-1.41431e+164)}
; Y = 1.675888845955959549627323212916962802410125732421875p305 {+ 3043932754791134 305 (1.09243e+092)}
; -1.2279918939936333988072192369145341217517852783203125p545 % 1.675888845955959549627323212916962802410125732421875p305 == -1.04559638537661125923250438063405454158782958984375p304
; [HW: -1.04559638537661125923250438063405454158782958984375p304] 

; mpf : - 205347864191548 304
; mpfd: - 205347864191548 304 (-3.40787e+091) class: Neg. norm. non-zero
; hwf : - 205347864191548 304 (-3.40787e+091) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100000 #b0011101001011101101011010100000001110100101011000101)))
(assert (= y (fp #b0 #b10100110000 #b1010110100000111000011010010100100011100101011011110)))
(assert (= r (fp #b1 #b10100101111 #x0bac34680223c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
