(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.18448714255224185620818388997577130794525146484375p277 {+ 830856226452924 277 (2.87633e+083)}
; Y = 1.4588514016020519559191370717599056661128997802734375p-549 {+ 2066483001273431 -549 (7.91669e-166)}
; 1.18448714255224185620818388997577130794525146484375p277 % 1.4588514016020519559191370717599056661128997802734375p-549 == 1.7233636285411098043596211937256157398223876953125p-550
; [HW: 1.7233636285411098043596211937256157398223876953125p-550] 

; mpf : + 3257740167951112 -550
; mpfd: + 3257740167951112 -550 (4.67605e-166) class: Pos. norm. non-zero
; hwf : + 3257740167951112 -550 (4.67605e-166) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100010100 #b0010111100111010100011001010001111001011010110111100)))
(assert (= y (fp #b0 #b00111011010 #b0111010101110111010010010001001110011010110001010111)))
(assert (= r (fp #b1 #b00111011001 #x31c0364f825a6)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
