(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0550566503029974452232409021235071122646331787109375p744 {+ 247953109788847 744 (9.76321e+223)}
; Y = -1.4470528554502937179648824894684366881847381591796875p-812 {- 2013347073220859 -812 (-5.29819e-245)}
; 1.0550566503029974452232409021235071122646331787109375p744 % -1.4470528554502937179648824894684366881847381591796875p-812 == 1.4223290332801703517162650314276106655597686767578125p-812
; [HW: 1.4223290332801703517162650314276106655597686767578125p-812] 

; mpf : + 1902000876908317 -812
; mpfd: + 1902000876908317 -812 (5.20767e-245) class: Pos. norm. non-zero
; hwf : + 1902000876908317 -812 (5.20767e-245) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011100111 #b0000111000011000001100010101000001111010100010101111)))
(assert (= y (fp #b1 #b00011010011 #b0111001001110010000011100101000110111110000011111011)))
(assert (= r (fp #b1 #b00011001101 #x951339e9c7780)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
