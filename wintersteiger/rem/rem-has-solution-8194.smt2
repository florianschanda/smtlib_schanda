(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3501978566357080158155667959363199770450592041015625p526 {+ 1577150936650521 526 (2.96603e+158)}
; Y = -1.3692655275438603279525295874918811023235321044921875p854 {- 1663024092247299 854 (-1.64477e+257)}
; 1.3501978566357080158155667959363199770450592041015625p526 % -1.3692655275438603279525295874918811023235321044921875p854 == 1.3501978566357080158155667959363199770450592041015625p526
; [HW: 1.3501978566357080158155667959363199770450592041015625p526] 

; mpf : + 1577150936650521 526
; mpfd: + 1577150936650521 526 (2.96603e+158) class: Pos. norm. non-zero
; hwf : + 1577150936650521 526 (2.96603e+158) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000001101 #b0101100110100110100100010001010101100001001100011001)))
(assert (= y (fp #b1 #b11101010101 #b0101111010001000001011111000010001010111010100000011)))
(assert (= r (fp #b0 #b11000001101 #x59a6911561319)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
