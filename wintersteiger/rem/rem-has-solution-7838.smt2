(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.9540970616481361243899073087959550321102142333984375p473 {+ 4296871171313831 473 (4.76578e+142)}
; Y = -1.694067375156414367864954328979365527629852294921875p-669 {- 3125801572124446 -669 (-6.91614e-202)}
; 1.9540970616481361243899073087959550321102142333984375p473 % -1.694067375156414367864954328979365527629852294921875p-669 == 1.466585905970184011692936110193841159343719482421875p-669
; [HW: 1.466585905970184011692936110193841159343719482421875p-669] 

; mpf : + 2101316112263646 -669
; mpfd: + 2101316112263646 -669 (5.98743e-202) class: Pos. norm. non-zero
; hwf : + 2101316112263646 -669 (5.98743e-202) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111011000 #b1111010000111111101101000111110011111101000010100111)))
(assert (= y (fp #b1 #b00101100010 #b1011000110101110011001100100010110000100011100011110)))
(assert (= r (fp #b1 #b00101011111 #xd1e1cdf4cea00)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
