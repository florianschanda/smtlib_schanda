(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3022814647124392184451835419167764484882354736328125p954 {- 1361354691839949 954 (-1.98299e+287)}
; Y = -1.2677754527552524965727798189618624746799468994140625p769 {- 1205953429247521 769 (-3.93649e+231)}
; -1.3022814647124392184451835419167764484882354736328125p954 % -1.2677754527552524965727798189618624746799468994140625p769 == -1.95610379041448556591831220430321991443634033203125p768
; [HW: -1.95610379041448556591831220430321991443634033203125p768] 

; mpf : - 4305908674238196 768
; mpfd: - 4305908674238196 768 (-3.03689e+231) class: Neg. norm. non-zero
; hwf : - 4305908674238196 768 (-3.03689e+231) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110111001 #b0100110101100010010100010110110100100000011111001101)))
(assert (= y (fp #b1 #b11100000000 #b0100010010001100111011101001110001000001011000100001)))
(assert (= r (fp #b0 #b11011111110 #x28ad4ad232a9c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
