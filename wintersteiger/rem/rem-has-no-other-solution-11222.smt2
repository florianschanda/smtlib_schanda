(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1994949096038844960077085488592274487018585205078125p-308 {+ 898445200554365 -308 (2.30017e-093)}
; Y = -1.1705017519067018039180538835353218019008636474609375p-117 {- 767871626353039 -117 (-7.0447e-036)}
; 1.1994949096038844960077085488592274487018585205078125p-308 % -1.1705017519067018039180538835353218019008636474609375p-117 == 1.1994949096038844960077085488592274487018585205078125p-308
; [HW: 1.1994949096038844960077085488592274487018585205078125p-308] 

; mpf : + 898445200554365 -308
; mpfd: + 898445200554365 -308 (2.30017e-093) class: Pos. norm. non-zero
; hwf : + 898445200554365 -308 (2.30017e-093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011001011 #b0011001100010010000110010011000001110111100101111101)))
(assert (= y (fp #b1 #b01110001010 #b0010101110100110000000001011100001011001100110001111)))
(assert (= r (fp #b0 #b01011001011 #x331219307797d)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
