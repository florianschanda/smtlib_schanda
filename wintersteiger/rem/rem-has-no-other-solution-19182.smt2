(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.80686536667846819881333431112580001354217529296875p984 {+ 3633798564711308 984 (2.95421e+296)}
; Y = 1.441158400689838803288012059056200087070465087890625p-317 {+ 1986800808958122 -317 (5.39763e-096)}
; 1.80686536667846819881333431112580001354217529296875p984 % 1.441158400689838803288012059056200087070465087890625p-317 == 1.075478645536282140682260433095507323741912841796875p-317
; [HW: 1.075478645536282140682260433095507323741912841796875p-317] 

; mpf : + 339925599911630 -317
; mpfd: + 339925599911630 -317 (4.02803e-096) class: Pos. norm. non-zero
; hwf : + 339925599911630 -317 (4.02803e-096) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111010111 #b1100111010001110101110101000101000101000101110001100)))
(assert (= y (fp #b0 #b01011000010 #b0111000011101111110000011100011101010001100010101010)))
(assert (= r (fp #b1 #b01011000000 #x7674c0f4c6770)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
