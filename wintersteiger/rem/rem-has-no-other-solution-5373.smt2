(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.35413938538158884483664223807863891124725341796875p396 {- 1594902004041740 396 (-2.18545e+119)}
; Y = 1.892776590811367842803747407742775976657867431640625p-675 {+ 4020708321703178 -675 (1.2074e-203)}
; -1.35413938538158884483664223807863891124725341796875p396 % 1.892776590811367842803747407742775976657867431640625p-675 == -1.095830940700945888011119677685201168060302734375p-676
; [HW: -1.095830940700945888011119677685201168060302734375p-676] 

; mpf : - 431584188831344 -676
; mpfd: - 431584188831344 -676 (-3.49516e-204) class: Neg. norm. non-zero
; hwf : - 431584188831344 -676 (-3.49516e-204) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110001011 #b0101101010101000111000001111011001110000100000001100)))
(assert (= y (fp #b0 #b00101011100 #b1110010010001101000000011011010000101011010100001010)))
(assert (= r (fp #b1 #b00101011011 #x1888606441670)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
