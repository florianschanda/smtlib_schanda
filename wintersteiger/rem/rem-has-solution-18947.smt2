(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6831675709300106813515185422147624194622039794921875p304 {+ 3076713217872003 304 (5.48588e+091)}
; Y = 1.3907695176345178378340960989589802920818328857421875p-573 {+ 1759869454006563 -573 (4.4985e-173)}
; 1.6831675709300106813515185422147624194622039794921875p304 % 1.3907695176345178378340960989589802920818328857421875p-573 == 1.00598701535297863074447377584874629974365234375p-578
; [HW: 1.00598701535297863074447377584874629974365234375p-578] 

; mpf : + 26963120112736 -578
; mpfd: + 26963120112736 -578 (1.01685e-174) class: Pos. norm. non-zero
; hwf : + 26963120112736 -578 (1.01685e-174) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101111 #b1010111011100100000100011110011011010101000010000011)))
(assert (= y (fp #b0 #b00111000010 #b0110010000001001011110001001101010000011100100100011)))
(assert (= r (fp #b0 #b00110111101 #x01885d7324460)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
