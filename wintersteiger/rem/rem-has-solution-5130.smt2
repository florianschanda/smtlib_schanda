(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1297349808686310002059371981886215507984161376953125p303 {+ 584274411496885 303 (1.84105e+091)}
; Y = -1.7512912748635856008405653483350761234760284423828125p-123 {- 3383515105522349 -123 (-1.64691e-037)}
; 1.1297349808686310002059371981886215507984161376953125p303 % -1.7512912748635856008405653483350761234760284423828125p-123 == 1.4945563848565022180281403052504174411296844482421875p-123
; [HW: 1.4945563848565022180281403052504174411296844482421875p-123] 

; mpf : + 2227283950553443 -123
; mpfd: + 2227283950553443 -123 (1.40547e-037) class: Pos. norm. non-zero
; hwf : + 2227283950553443 -123 (1.40547e-037) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101110 #b0010000100110110010011111100101111111010010110110101)))
(assert (= y (fp #b1 #b01110000100 #b1100000001010100100111111111111101001111001010101101)))
(assert (= r (fp #b1 #b01110000010 #x06e582d14a528)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
