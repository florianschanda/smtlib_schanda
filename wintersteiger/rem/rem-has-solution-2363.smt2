(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 0.9715312968029277129744514240883290767669677734375p-1022 {+ 4375387986260440 -1023 (2.16173e-308)}
; Y = -1.9828745075149962762139921323978342115879058837890625p464 {- 4426473265796497 464 (-9.44524e+139)}
; 0.9715312968029277129744514240883290767669677734375p-1022 % -1.9828745075149962762139921323978342115879058837890625p464 == 0.9715312968029277129744514240883290767669677734375p-1022
; [HW: 0.9715312968029277129744514240883290767669677734375p-1022] 

; mpf : + 4375387986260440 -1023
; mpfd: + 4375387986260440 -1023 (2.16173e-308) class: Pos. denorm.
; hwf : + 4375387986260440 -1023 (2.16173e-308) class: Pos. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000000000 #b1111100010110110010001100110101011001111000111011000)))
(assert (= y (fp #b1 #b10111001111 #b1111101110011101101010011110100111011001010110010001)))
(assert (= r (fp #b0 #b00000000000 #xf8b6466acf1d8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
