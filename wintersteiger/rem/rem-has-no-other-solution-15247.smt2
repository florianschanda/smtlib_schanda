(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.54447869458808906273361571948044002056121826171875p949 {- 2452114046058092 949 (-7.34933e+285)}
; Y = 1.2064696630896738493987641049898229539394378662109375p302 {+ 929856697753967 302 (9.83049e+090)}
; -1.54447869458808906273361571948044002056121826171875p949 % 1.2064696630896738493987641049898229539394378662109375p302 == -1.609992010299400089223809118266217410564422607421875p301
; [HW: -1.609992010299400089223809118266217410564422607421875p301] 

; mpf : - 2747159790283358 301
; mpfd: - 2747159790283358 301 (-6.55922e+090) class: Neg. norm. non-zero
; hwf : - 2747159790283358 301 (-6.55922e+090) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11110110100 #b1000101101100010111101001010101010011111111001101100)))
(assert (= y (fp #b0 #b10100101101 #b0011010011011011001100100010001010010110000101101111)))
(assert (= r (fp #b0 #b10100101011 #x9b1be91c3b100)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
