(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0728781272495615528583812192664481699466705322265625p197 {+ 328213906724585 197 (2.15506e+059)}
; Y = -1.7843287287319256062545491658966057002544403076171875p-309 {- 3532302570453075 -309 (-1.71083e-093)}
; 1.0728781272495615528583812192664481699466705322265625p197 % -1.7843287287319256062545491658966057002544403076171875p-309 == 1.30142593423649000072828130214475095272064208984375p-309
; [HW: 1.30142593423649000072828130214475095272064208984375p-309] 

; mpf : + 1357501725107260 -309
; mpfd: + 1357501725107260 -309 (1.24782e-093) class: Pos. norm. non-zero
; hwf : + 1357501725107260 -309 (1.24782e-093) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011000100 #b0001001010101000001001000001010100100001011011101001)))
(assert (= y (fp #b1 #b01011001010 #b1100100011001001110001000111111100110111100001010011)))
(assert (= r (fp #b1 #b01011001000 #xee7e11f60505c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
