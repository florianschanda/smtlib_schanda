(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.5584195023029085991339570682612247765064239501953125p266 {+ 2514897862487797 266 (1.84784e+080)}
; Y = 1.864880304759177764850619496428407728672027587890625p-531 {+ 3895074618233514 -531 (2.65291e-160)}
; 1.5584195023029085991339570682612247765064239501953125p266 % 1.864880304759177764850619496428407728672027587890625p-531 == 1.37998653195969467333270586095750331878662109375p-533
; [HW: 1.37998653195969467333270586095750331878662109375p-533] 

; mpf : + 1711307203739488 -533
; mpfd: + 1711307203739488 -533 (4.9078e-161) class: Pos. norm. non-zero
; hwf : + 1711307203739488 -533 (4.9078e-161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001001 #b1000111011110100100101001001101111010110111011110101)))
(assert (= y (fp #b0 #b00111101100 #b1101110101101000110010111010111111100101001010101010)))
(assert (= r (fp #b0 #b00111101010 #x6146cc1faff60)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
