(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8357280242834670413998310323222540318965911865234375p-357 {+ 3763784418746103 -357 (6.25316e-108)}
; Y = -1.888554204912614498113043737248517572879791259765625p331 {- 4001692386142938 331 (-8.26148e+099)}
; 1.8357280242834670413998310323222540318965911865234375p-357 % -1.888554204912614498113043737248517572879791259765625p331 == 1.8357280242834670413998310323222540318965911865234375p-357
; [HW: 1.8357280242834670413998310323222540318965911865234375p-357] 

; mpf : + 3763784418746103 -357
; mpfd: + 3763784418746103 -357 (6.25316e-108) class: Pos. norm. non-zero
; hwf : + 3763784418746103 -357 (6.25316e-108) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011010 #b1101010111110010010001011001010010100101111011110111)))
(assert (= y (fp #b1 #b10101001010 #b1110001101111000010010011101001011010010101011011010)))
(assert (= r (fp #b0 #b01010011010 #xd5f24594a5ef7)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
