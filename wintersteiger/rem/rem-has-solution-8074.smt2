(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.246476163528325908913529929122887551784515380859375p530 {+ 1110029958221878 530 (4.38109e+159)}
; Y = 1.2706446920374332432146502469549886882305145263671875p363 {+ 1218875334209587 363 (2.38733e+109)}
; 1.246476163528325908913529929122887551784515380859375p530 % 1.2706446920374332432146502469549886882305145263671875p363 == 1.1316268779283473744357024770579300820827484130859375p363
; [HW: 1.1316268779283473744357024770579300820827484130859375p363] 

; mpf : + 592794758390047 363
; mpfd: + 592794758390047 363 (2.12614e+109) class: Pos. norm. non-zero
; hwf : + 592794758390047 363 (2.12614e+109) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11000010001 #b0011111100011001000011111101010110011001000000110110)))
(assert (= y (fp #b0 #b10101101010 #b0100010101001000111110000111010100100011000000110011)))
(assert (= r (fp #b1 #b10101100111 #x1cb55f29478a0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
