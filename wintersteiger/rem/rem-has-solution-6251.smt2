(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9586712903657268469714836101047694683074951171875p1008 {- 4317471666061880 1008 (-5.37276e+303)}
; Y = -1.4464799451098786509106730591156519949436187744140625p-451 {- 2010766914425249 -451 (-2.48762e-136)}
; -1.9586712903657268469714836101047694683074951171875p1008 % -1.4464799451098786509106730591156519949436187744140625p-451 == -1.0568376555417875461984067442244850099086761474609375p-451
; [HW: -1.0568376555417875461984067442244850099086761474609375p-451] 

; mpf : - 255974044318607 -451
; mpfd: - 255974044318607 -451 (-1.81752e-136) class: Neg. norm. non-zero
; hwf : - 255974044318607 -451 (-1.81752e-136) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111101111 #b1111010101101011011110110100111110111100001000111000)))
(assert (= y (fp #b1 #b01000111100 #b0111001001001100100000100111101010010001000110100001)))
(assert (= r (fp #b0 #b01000111010 #x8efe636b55848)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
