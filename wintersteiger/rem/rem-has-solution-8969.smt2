(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.1706168608489573301767450175248086452484130859375p-360 {- 768390030942488 -360 (-4.98444e-109)}
; Y = 1.306612252235501703268027995363809168338775634765625p-802 {+ 1380858824915034 -802 (4.89881e-242)}
; -1.1706168608489573301767450175248086452484130859375p-360 % 1.306612252235501703268027995363809168338775634765625p-802 == -1.267207237424431642835997990914620459079742431640625p-802
; [HW: -1.267207237424431642835997990914620459079742431640625p-802] 

; mpf : - 1203394414895370 -802
; mpfd: - 1203394414895370 -802 (-4.75107e-242) class: Neg. norm. non-zero
; hwf : - 1203394414895370 -802 (-4.75107e-242) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010111 #b0010101110101101100010111110110101111110000100011000)))
(assert (= y (fp #b0 #b00011011101 #b0100111001111110001000111111101111100111100001011010)))
(assert (= r (fp #b0 #b00011011000 #x42ce4e3d2ea00)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
