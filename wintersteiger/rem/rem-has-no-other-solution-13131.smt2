(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.0503436644422528001285854770685546100139617919921875p974 {- 226727708422595 974 (-1.67705e+293)}
; Y = 1.9046966189908844935274601084529422223567962646484375p-145 {+ 4074391356170695 -145 (4.27048e-044)}
; -1.0503436644422528001285854770685546100139617919921875p974 % 1.9046966189908844935274601084529422223567962646484375p-145 == -1.62757338350082658706696747685782611370086669921875p-145
; [HW: -1.62757338350082658706696747685782611370086669921875p-145] 

; mpf : - 2826339256081964 -145
; mpfd: - 2826339256081964 -145 (-3.64915e-044) class: Neg. norm. non-zero
; hwf : - 2826339256081964 -145 (-3.64915e-044) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111001101 #b0000110011100011010100101000100001010111000111000011)))
(assert (= y (fp #b0 #b01101101110 #b1110011110011010001100101001011101011110000111000111)))
(assert (= r (fp #b0 #b01101101100 #x1bc6318590e6c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
