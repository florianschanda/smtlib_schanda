(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.593147727026323678956032381393015384674072265625p-940 {+ 2671299882411408 -940 (1.71419e-283)}
; Y = -1.5958777506317096683829959147260524332523345947265625p110 {- 2683594815703337 110 (-2.07157e+033)}
; 1.593147727026323678956032381393015384674072265625p-940 % -1.5958777506317096683829959147260524332523345947265625p110 == 1.593147727026323678956032381393015384674072265625p-940
; [HW: 1.593147727026323678956032381393015384674072265625p-940] 

; mpf : + 2671299882411408 -940
; mpfd: + 2671299882411408 -940 (1.71419e-283) class: Pos. norm. non-zero
; hwf : + 2671299882411408 -940 (1.71419e-283) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010011 #b1001011111011000100001111000100101000110010110010000)))
(assert (= y (fp #b1 #b10001101101 #b1001100010001011011100011011101101100000100100101001)))
(assert (= r (fp #b0 #b00001010011 #x97d8878946590)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
