(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.765395374810676987209490107488818466663360595703125p-118 {+ 3447034324788466 -118 (5.31254e-036)}
; Y = -1.453337090348399751604802077054046094417572021484375p657 {- 2041648751166278 657 (-8.69108e+197)}
; 1.765395374810676987209490107488818466663360595703125p-118 % -1.453337090348399751604802077054046094417572021484375p657 == 1.765395374810676987209490107488818466663360595703125p-118
; [HW: 1.765395374810676987209490107488818466663360595703125p-118] 

; mpf : + 3447034324788466 -118
; mpfd: + 3447034324788466 -118 (5.31254e-036) class: Pos. norm. non-zero
; hwf : + 3447034324788466 -118 (5.31254e-036) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110001001 #b1100001111110000111100111000011101010010010011110010)))
(assert (= y (fp #b1 #b11010010000 #b0111010000001101111001100100100100011100001101000110)))
(assert (= r (fp #b0 #b01110001001 #xc3f0f387524f2)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
