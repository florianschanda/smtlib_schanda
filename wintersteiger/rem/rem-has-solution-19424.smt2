(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8047936877288199841729010586277581751346588134765625p-325 {+ 3624468552165641 -325 (2.64046e-098)}
; Y = -1.59126581377456677302006937679834663867950439453125p-288 {- 2662824498592052 -288 (-3.19966e-087)}
; 1.8047936877288199841729010586277581751346588134765625p-325 % -1.59126581377456677302006937679834663867950439453125p-288 == 1.8047936877288199841729010586277581751346588134765625p-325
; [HW: 1.8047936877288199841729010586277581751346588134765625p-325] 

; mpf : + 3624468552165641 -325
; mpfd: + 3624468552165641 -325 (2.64046e-098) class: Pos. norm. non-zero
; hwf : + 3624468552165641 -325 (2.64046e-098) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010111010 #b1100111000000110111101011000100011010010100100001001)))
(assert (= y (fp #b1 #b01011011111 #b1001011101011101001100100100010101100111100100110100)))
(assert (= r (fp #b0 #b01010111010 #xce06f588d2909)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
