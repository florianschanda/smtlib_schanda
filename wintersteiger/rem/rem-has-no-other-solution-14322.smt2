(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.4068887013684021614068342387326993048191070556640625p-928 {- 1832463803864001 -928 (-6.20046e-280)}
; Y = -1.588482065597680570334659932996146380901336669921875p-328 {- 2650287611339934 -328 (-2.90498e-099)}
; -1.4068887013684021614068342387326993048191070556640625p-928 % -1.588482065597680570334659932996146380901336669921875p-328 == -1.4068887013684021614068342387326993048191070556640625p-928
; [HW: -1.4068887013684021614068342387326993048191070556640625p-928] 

; mpf : - 1832463803864001 -928
; mpfd: - 1832463803864001 -928 (-6.20046e-280) class: Neg. norm. non-zero
; hwf : - 1832463803864001 -928 (-6.20046e-280) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001011111 #b0110100000101001110110111010000101111101001111000001)))
(assert (= y (fp #b1 #b01010110111 #b1001011010100110110000101011101000000110010010011110)))
(assert (= r (fp #b1 #b00001011111 #x6829dba17d3c1)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
