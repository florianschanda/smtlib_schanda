(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5423735676428893537348585596191696822643280029296875p20 {- 2442633397132123 20 (-1.6173e+006)}
; Y = -1.5331972630736279139540556570864282548427581787109375p-400 {- 2401306995293359 -400 (-5.93745e-121)}
; -1.5423735676428893537348585596191696822643280029296875p20 % -1.5331972630736279139540556570864282548427581787109375p-400 == -1.0165824971995700565230436041019856929779052734375p-403
; [HW: -1.0165824971995700565230436041019856929779052734375p-403] 

; mpf : - 74680928208856 -403
; mpfd: - 74680928208856 -403 (-4.92101e-122) class: Neg. norm. non-zero
; hwf : - 74680928208856 -403 (-4.92101e-122) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10000010011 #b1000101011011000111111100111111100111101101101011011)))
(assert (= y (fp #b1 #b01001101111 #b1000100001111111100111011010011100110111110010101111)))
(assert (= r (fp #b1 #b01001101100 #x043ec023287d8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
