(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.2267589266519827173596013381029479205608367919921875p988 {+ 1021231417572803 988 (3.20919e+297)}
; Y = 1.5184447292535392382006875777733512222766876220703125p-592 {+ 2334867489478437 -592 (9.36789e-179)}
; 1.2267589266519827173596013381029479205608367919921875p988 % 1.5184447292535392382006875777733512222766876220703125p-592 == 1.2560632667407247708979411981999874114990234375p-595
; [HW: 1.2560632667407247708979411981999874114990234375p-595] 

; mpf : + 1153206432676800 -595
; mpfd: + 1153206432676800 -595 (9.68644e-180) class: Pos. norm. non-zero
; hwf : + 1153206432676800 -595 (9.68644e-180) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11111011011 #b0011101000001100110111110111111000001011110111000011)))
(assert (= y (fp #b0 #b00110101111 #b1000010010111000110010110011010011101101011100100101)))
(assert (= r (fp #b0 #b00110101100 #x418d5cbc5bbc0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
