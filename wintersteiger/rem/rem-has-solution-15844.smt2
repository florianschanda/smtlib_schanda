(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8392133645183743606565940353902988135814666748046875p-424 {+ 3779480995729291 -424 (4.24535e-128)}
; Y = -1.8003680385023075327666219891398213803768157958984375p409 {- 3604537199958247 409 (-2.38029e+123)}
; 1.8392133645183743606565940353902988135814666748046875p-424 % -1.8003680385023075327666219891398213803768157958984375p409 == 1.8392133645183743606565940353902988135814666748046875p-424
; [HW: 1.8392133645183743606565940353902988135814666748046875p-424] 

; mpf : + 3779480995729291 -424
; mpfd: + 3779480995729291 -424 (4.24535e-128) class: Pos. norm. non-zero
; hwf : + 3779480995729291 -424 (4.24535e-128) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001010111 #b1101011011010110101011111110001011111000111110001011)))
(assert (= y (fp #b1 #b10110011000 #b1100110011100100111010110111011000100001100011100111)))
(assert (= r (fp #b0 #b01001010111 #xd6d6afe2f8f8b)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
