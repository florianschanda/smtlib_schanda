(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.142325657956364981515662293531931936740875244140625p-461 {- 640977780137546 -461 (-1.9185e-139)}
; Y = 1.6118405291118886868417803270858712494373321533203125p660 {+ 2755484778918469 660 (7.71115e+198)}
; -1.142325657956364981515662293531931936740875244140625p-461 % 1.6118405291118886868417803270858712494373321533203125p660 == -1.142325657956364981515662293531931936740875244140625p-461
; [HW: -1.142325657956364981515662293531931936740875244140625p-461] 

; mpf : - 640977780137546 -461
; mpfd: - 640977780137546 -461 (-1.9185e-139) class: Neg. norm. non-zero
; hwf : - 640977780137546 -461 (-1.9185e-139) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110010 #b0010010001101111011101000100111001001101111001001010)))
(assert (= y (fp #b0 #b11010010011 #b1001110010100001100101001011011011100111001001000101)))
(assert (= r (fp #b1 #b01000110010 #x246f744e4de4a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
