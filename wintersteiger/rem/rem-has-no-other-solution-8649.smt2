(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.647076286889914253919187103747390210628509521484375p736 {- 2914172524517702 736 (-5.95375e+221)}
; Y = -1.0256120783510171978747393950470723211765289306640625p-106 {- 115346546517825 -106 (-1.26416e-032)}
; -1.647076286889914253919187103747390210628509521484375p736 % -1.0256120783510171978747393950470723211765289306640625p-106 == -1.27241873350961753885712823830544948577880859375p-111
; [HW: -1.27241873350961753885712823830544948577880859375p-111] 

; mpf : - 1226864906722656 -111
; mpfd: - 1226864906722656 -111 (-4.90118e-034) class: Neg. norm. non-zero
; hwf : - 1226864906722656 -111 (-4.90118e-034) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011111 #b1010010110100110110010101010001000110101100101000110)))
(assert (= y (fp #b1 #b01110010101 #b0000011010001110100000110101111011100110011101000001)))
(assert (= r (fp #b1 #b01110010000 #x45bd3bef3dd60)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
