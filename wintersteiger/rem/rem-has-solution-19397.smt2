(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8787303387857197112253970772144384682178497314453125p706 {+ 3957449626314517 706 (6.32472e+212)}
; Y = 1.641304957885416637708431153441779315471649169921875p-767 {+ 2888180769363614 -767 (2.11438e-231)}
; 1.8787303387857197112253970772144384682178497314453125p706 % 1.641304957885416637708431153441779315471649169921875p-767 == 1.621107523377013581722394519601948559284210205078125p-767
; [HW: 1.621107523377013581722394519601948559284210205078125p-767] 

; mpf : + 2797219610837730 -767
; mpfd: + 2797219610837730 -767 (2.08836e-231) class: Pos. norm. non-zero
; hwf : + 2797219610837730 -767 (2.08836e-231) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011000001 #b1110000011110100011110001011001100010110011100010101)))
(assert (= y (fp #b0 #b00100000000 #b1010010000101100100011111100110011100001011010011110)))
(assert (= r (fp #b1 #b00011111010 #x4aea2e2b4ef00)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
