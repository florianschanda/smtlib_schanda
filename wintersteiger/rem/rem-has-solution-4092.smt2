(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2619099676257141684487805832759477198123931884765625p-535 {+ 1179537632603785 -535 (1.12197e-161)}
; Y = 1.347853799300912758241111077950336039066314697265625p895 {+ 1566594240911002 895 (3.56032e+269)}
; 1.2619099676257141684487805832759477198123931884765625p-535 % 1.347853799300912758241111077950336039066314697265625p895 == 1.2619099676257141684487805832759477198123931884765625p-535
; [HW: 1.2619099676257141684487805832759477198123931884765625p-535] 

; mpf : + 1179537632603785 -535
; mpfd: + 1179537632603785 -535 (1.12197e-161) class: Pos. norm. non-zero
; hwf : + 1179537632603785 -535 (1.12197e-161) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00111101000 #b0100001100001100100010000001100101110010111010001001)))
(assert (= y (fp #b0 #b11101111110 #b0101100100001100111100100101001111001001011010011010)))
(assert (= r (fp #b0 #b00111101000 #x430c881972e89)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
