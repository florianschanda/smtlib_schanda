(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.486175025296001539487633635872043669223785400390625p866 {+ 2189537662759914 866 (7.31217e+260)}
; Y = 1.1607012691607982990404934753314591944217681884765625p-871 {+ 723734175910537 -871 (7.37215e-263)}
; 1.486175025296001539487633635872043669223785400390625p866 % 1.1607012691607982990404934753314591944217681884765625p-871 == 1.155837919404648861387840952374972403049468994140625p-872
; [HW: 1.155837919404648861387840952374972403049468994140625p-872] 

; mpf : + 701831595760970 -872
; mpfd: + 701831595760970 -872 (3.67063e-263) class: Pos. norm. non-zero
; hwf : + 701831595760970 -872 (3.67063e-263) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100001 #b0111110001110101111101110110100111000111001111101010)))
(assert (= y (fp #b0 #b00010011000 #b0010100100100011101101111110011101111000101010001001)))
(assert (= r (fp #b0 #b00010010111 #x27e4fe6f51d4a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
