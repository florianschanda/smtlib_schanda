(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9065677085023946535358163600903935730457305908203125p466 {+ 4082817994197509 466 (3.63271e+140)}
; Y = 1.8849955865274019561894647267763502895832061767578125p470 {+ 3985665793709341 470 (5.74656e+141)}
; 1.9065677085023946535358163600903935730457305908203125p466 % 1.8849955865274019561894647267763502895832061767578125p470 == 1.9065677085023946535358163600903935730457305908203125p466
; [HW: 1.9065677085023946535358163600903935730457305908203125p466] 

; mpf : + 4082817994197509 466
; mpfd: + 4082817994197509 466 (3.63271e+140) class: Pos. norm. non-zero
; hwf : + 4082817994197509 466 (3.63271e+140) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10111010001 #b1110100000010100110100100100001110100000101000000101)))
(assert (= y (fp #b0 #b10111010101 #b1110001010001111000100100001110100111101010100011101)))
(assert (= r (fp #b0 #b10111010001 #xe814d243a0a05)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
