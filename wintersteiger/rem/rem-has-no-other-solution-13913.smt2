(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.6746381535922250094472474302165210247039794921875p-67 {+ 3038300137127864 -67 (1.13478e-020)}
; Y = 1.4837410210728252391021442235796712338924407958984375p-512 {+ 2178575882247399 -512 (1.10662e-154)}
; 1.6746381535922250094472474302165210247039794921875p-67 % 1.4837410210728252391021442235796712338924407958984375p-512 == 1.4123997214517647336151640047319233417510986328125p-513
; [HW: 1.4123997214517647336151640047319233417510986328125p-513] 

; mpf : + 1857283231857864 -513
; mpfd: + 1857283231857864 -513 (5.26708e-155) class: Pos. norm. non-zero
; hwf : + 1857283231857864 -513 (5.26708e-155) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01110111100 #b1010110010110101000101100000011001001111111110111000)))
(assert (= y (fp #b0 #b00111111111 #b0111101111010110011100111001100100111101110011100111)))
(assert (= r (fp #b0 #b00111111110 #x6993073483cc8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
