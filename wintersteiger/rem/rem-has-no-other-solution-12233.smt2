(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2945774073769713563564209835021756589412689208984375p-158 {+ 1326658702094695 -158 (3.54314e-048)}
; Y = 1.602607907235656714561855551437474787235260009765625p-312 {+ 2713904746477018 -312 (1.92074e-094)}
; 1.2945774073769713563564209835021756589412689208984375p-158 % 1.602607907235656714561855551437474787235260009765625p-312 == 1.04495020499644564182517569861374795436859130859375p-313
; [HW: 1.04495020499644564182517569861374795436859130859375p-313] 

; mpf : + 202437726472220 -313
; mpfd: + 202437726472220 -313 (6.26191e-095) class: Pos. norm. non-zero
; hwf : + 202437726472220 -313 (6.26191e-095) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101100001 #b0100101101101001011011001100101011010011000101100111)))
(assert (= y (fp #b0 #b01011000111 #b1001101001000100100000110000010111100011010111011010)))
(assert (= r (fp #b0 #b01011000110 #x0b81db4c6881c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
