(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.6190550673968002737268534474424086511135101318359375p-399 {+ 2787976170850047 -399 (1.25399e-120)}
; Y = 1.479321914207492483228634227998554706573486328125p-410 {+ 2158673994215376 -410 (5.59454e-124)}
; 1.6190550673968002737268534474424086511135101318359375p-399 % 1.479321914207492483228634227998554706573486328125p-410 == 1.32873657931261135445311083458364009857177734375p-411
; [HW: 1.32873657931261135445311083458364009857177734375p-411] 

; mpf : + 1480497936095328 -411
; mpfd: + 1480497936095328 -411 (2.51253e-124) class: Pos. norm. non-zero
; hwf : + 1480497936095328 -411 (2.51253e-124) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001110000 #b1001111001111010011001001001010011100100011011111111)))
(assert (= y (fp #b0 #b01001100101 #b0111101010110100110101110100100111000110111111010000)))
(assert (= r (fp #b0 #b01001100100 #x5428149925860)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
