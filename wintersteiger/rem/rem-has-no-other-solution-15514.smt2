(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3156910891676611985445788377546705305576324462890625p409 {+ 1421746271539665 409 (1.73949e+123)}
; Y = -1.5178555658365551206401278250268660485744476318359375p-378 {- 2332214133333247 -378 (-2.46543e-114)}
; 1.3156910891676611985445788377546705305576324462890625p409 % -1.5178555658365551206401278250268660485744476318359375p-378 == 1.134603862024482712200779133127070963382720947265625p-378
; [HW: 1.134603862024482712200779133127070963382720947265625p-378] 

; mpf : + 606201902856090 -378
; mpfd: + 606201902856090 -378 (1.84292e-114) class: Pos. norm. non-zero
; hwf : + 606201902856090 -378 (1.84292e-114) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011000 #b0101000011010001001000011001011110011101000111010001)))
(assert (= y (fp #b1 #b01010000101 #b1000010010010010001011101010111101010001110011111111)))
(assert (= r (fp #b1 #b01010000011 #x8873227809594)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
