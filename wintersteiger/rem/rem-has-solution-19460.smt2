(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5411093342951927009920609634718857705593109130859375p270 {- 2436939796298527 270 (-2.9237e+081)}
; Y = -1.920485262720681429726710121030919253826141357421875p-423 {- 4145497086188894 -423 (-8.8659e-128)}
; -1.5411093342951927009920609634718857705593109130859375p270 % -1.920485262720681429726710121030919253826141357421875p-423 == -1.7689849699352730993950899573974311351776123046875p-425
; [HW: -1.7689849699352730993950899573974311351776123046875p-425] 

; mpf : - 3463200424054008 -425
; mpfd: - 3463200424054008 -425 (-2.04163e-128) class: Neg. norm. non-zero
; hwf : - 3463200424054008 -425 (-2.04163e-128) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10100001101 #b1000101010000110001001000010111001011011101100011111)))
(assert (= y (fp #b1 #b01001011000 #b1110101110100100111011000001001111010101110101011110)))
(assert (= r (fp #b1 #b01001010110 #xc4dc32f0fccf8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
