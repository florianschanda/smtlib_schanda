(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.6113474200446213924209359902306459844112396240234375p-419 {+ 2753264013106871 -419 (1.1902e-126)}
; Y = -1.289428290795025855430822048219852149486541748046875p-13 {- 1303469142574958 -13 (-0.000157401)}
; 1.6113474200446213924209359902306459844112396240234375p-419 % -1.289428290795025855430822048219852149486541748046875p-13 == 1.6113474200446213924209359902306459844112396240234375p-419
; [HW: 1.6113474200446213924209359902306459844112396240234375p-419] 

; mpf : + 2753264013106871 -419
; mpfd: + 2753264013106871 -419 (1.1902e-126) class: Pos. norm. non-zero
; hwf : + 2753264013106871 -419 (1.1902e-126) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001011100 #b1001110010000001010000111011011110010101111010110111)))
(assert (= y (fp #b1 #b01111110010 #b0100101000010111111110001111001110000000011101101110)))
(assert (= r (fp #b0 #b01001011100 #x9c8143b795eb7)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
