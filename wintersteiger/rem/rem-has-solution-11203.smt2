(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.956828859344560189725825694040395319461822509765625p638 {- 4309174094401498 638 (-2.23198e+192)}
; Y = 1.9487574707457755440742630526074208319187164306640625p-57 {+ 4272823791715649 -57 (1.35222e-017)}
; -1.956828859344560189725825694040395319461822509765625p638 % 1.9487574707457755440742630526074208319187164306640625p-57 == -1.751282832498944674881613536854274570941925048828125p-58
; [HW: -1.751282832498944674881613536854274570941925048828125p-58] 

; mpf : - 3383477084492098 -58
; mpfd: - 3383477084492098 -58 (-6.07598e-018) class: Neg. norm. non-zero
; hwf : - 3383477084492098 -58 (-6.07598e-018) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001111101 #b1111010011110010101111000111001011000000111111011010)))
(assert (= y (fp #b0 #b01111000110 #b1111001011100001110001010000010010110000010101000001)))
(assert (= r (fp #b1 #b01111000101 #xc054125ba1142)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
