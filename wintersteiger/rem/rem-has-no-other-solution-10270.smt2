(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8765727778751841725579652120359241962432861328125p214 {+ 3947732835801800 214 (4.94065e+064)}
; Y = 1.7686940204238361662447687194799073040485382080078125p566 {+ 3461890103942717 566 (4.27199e+170)}
; 1.8765727778751841725579652120359241962432861328125p214 % 1.7686940204238361662447687194799073040485382080078125p566 == 1.8765727778751841725579652120359241962432861328125p214
; [HW: 1.8765727778751841725579652120359241962432861328125p214] 

; mpf : + 3947732835801800 214
; mpfd: + 3947732835801800 214 (4.94065e+064) class: Pos. norm. non-zero
; hwf : + 3947732835801800 214 (4.94065e+064) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011010101 #b1110000001100111000100101101010110001001101011001000)))
(assert (= y (fp #b0 #b11000110101 #b1100010011001001001000011001111001011001111000111101)))
(assert (= r (fp #b0 #b10011010101 #xe06712d589ac8)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
