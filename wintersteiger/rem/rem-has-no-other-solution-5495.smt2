(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0827802855688390959443268002360127866268157958984375p-281 {+ 372809263241447 -281 (2.78684e-085)}
; Y = 1.9385570371890405994008688139729201793670654296875p620 {+ 4226885122950520 620 (8.43482e+186)}
; 1.0827802855688390959443268002360127866268157958984375p-281 % 1.9385570371890405994008688139729201793670654296875p620 == 1.0827802855688390959443268002360127866268157958984375p-281
; [HW: 1.0827802855688390959443268002360127866268157958984375p-281] 

; mpf : + 372809263241447 -281
; mpfd: + 372809263241447 -281 (2.78684e-085) class: Pos. norm. non-zero
; hwf : + 372809263241447 -281 (2.78684e-085) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011100110 #b0001010100110001000101101011101101000101100011100111)))
(assert (= y (fp #b0 #b11001101011 #b1111000001000101010001100010010000101000010101111000)))
(assert (= r (fp #b0 #b01011100110 #x153116bb458e7)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
