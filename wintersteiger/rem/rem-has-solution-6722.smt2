(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.1187140018253438622508610933437012135982513427734375p-620 {- 534640334384279 -620 (-2.57112e-187)}
; Y = 1.0771452281979196907713003383832983672618865966796875p417 {+ 347431220965563 417 (3.64571e+125)}
; -1.1187140018253438622508610933437012135982513427734375p-620 % 1.0771452281979196907713003383832983672618865966796875p417 == -1.1187140018253438622508610933437012135982513427734375p-620
; [HW: -1.1187140018253438622508610933437012135982513427734375p-620] 

; mpf : - 534640334384279 -620
; mpfd: - 534640334384279 -620 (-2.57112e-187) class: Neg. norm. non-zero
; hwf : - 534640334384279 -620 (-2.57112e-187) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00110010011 #b0001111001100100000010100111001101101010110010010111)))
(assert (= y (fp #b0 #b10110100000 #b0001001110111111110010100010100000100111000010111011)))
(assert (= r (fp #b1 #b00110010011 #x1e640a736ac97)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
