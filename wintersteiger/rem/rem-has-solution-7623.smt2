(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.72345151502507487606408176361583173274993896484375p-983 {+ 3258135973487548 -983 (2.10821e-296)}
; Y = 1.2932060924767558862669147856649942696094512939453125p803 {+ 1320482848821077 803 (6.89849e+241)}
; 1.72345151502507487606408176361583173274993896484375p-983 % 1.2932060924767558862669147856649942696094512939453125p803 == 1.72345151502507487606408176361583173274993896484375p-983
; [HW: 1.72345151502507487606408176361583173274993896484375p-983] 

; mpf : + 3258135973487548 -983
; mpfd: + 3258135973487548 -983 (2.10821e-296) class: Pos. norm. non-zero
; hwf : + 3258135973487548 -983 (2.10821e-296) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000101000 #b1011100100110100000111100101010101000110001110111100)))
(assert (= y (fp #b0 #b11100100010 #b0100101100001111100011011111001000101100111101010101)))
(assert (= r (fp #b0 #b00000101000 #xb9341e55463bc)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
