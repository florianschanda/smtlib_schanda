(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7314118565734231136588050503632985055446624755859375p-401 {- 3293986164718431 -401 (-3.35253e-121)}
; Y = 1.2815934705281109007302120517124421894550323486328125p142 {+ 1268184248940365 142 (7.14512e+042)}
; -1.7314118565734231136588050503632985055446624755859375p-401 % 1.2815934705281109007302120517124421894550323486328125p142 == -1.7314118565734231136588050503632985055446624755859375p-401
; [HW: -1.7314118565734231136588050503632985055446624755859375p-401] 

; mpf : - 3293986164718431 -401
; mpfd: - 3293986164718431 -401 (-3.35253e-121) class: Neg. norm. non-zero
; hwf : - 3293986164718431 -401 (-3.35253e-121) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01001101110 #b1011101100111101110011101011001111100011101101011111)))
(assert (= y (fp #b0 #b10010001101 #b0100100000010110100000100111101010101111011101001101)))
(assert (= r (fp #b1 #b01001101110 #xbb3dceb3e3b5f)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
