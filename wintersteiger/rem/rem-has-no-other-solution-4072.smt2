(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.299132776336820338514144168584607541561126708984375p383 {- 1347174260044806 383 (-2.55942e+115)}
; Y = 1.283015963128125491721220896579325199127197265625p869 {+ 1274590586083728 869 (5.05008e+261)}
; -1.299132776336820338514144168584607541561126708984375p383 % 1.283015963128125491721220896579325199127197265625p869 == -1.299132776336820338514144168584607541561126708984375p383
; [HW: -1.299132776336820338514144168584607541561126708984375p383] 

; mpf : - 1347174260044806 383
; mpfd: - 1347174260044806 383 (-2.55942e+115) class: Neg. norm. non-zero
; hwf : - 1347174260044806 383 (-2.55942e+115) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10101111110 #b0100110010010011111101110011001110000111010000000110)))
(assert (= y (fp #b0 #b11101100100 #b0100100001110011101110111111000111100001100110010000)))
(assert (= r (fp #b1 #b10101111110 #x4c93f73387406)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
