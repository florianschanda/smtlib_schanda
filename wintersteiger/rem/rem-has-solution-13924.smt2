(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.462502300917023045911946610431186854839324951171875p866 {+ 2082925190067902 866 (7.1957e+260)}
; Y = -1.5857743484260613531233730100211687386035919189453125p475 {- 2638093137294805 475 (-1.547e+143)}
; 1.462502300917023045911946610431186854839324951171875p866 % -1.5857743484260613531233730100211687386035919189453125p475 == 1.231444722205296660177964440663345158100128173828125p475
; [HW: 1.231444722205296660177964440663345158100128173828125p475] 

; mpf : + 1042334364680642 475
; mpfd: + 1042334364680642 475 (1.20133e+143) class: Pos. norm. non-zero
; hwf : + 1042334364680642 475 (1.20133e+143) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101100001 #b0111011001100110100011010000000011000011011010111110)))
(assert (= y (fp #b1 #b10111011010 #b1001010111110101010011101100010101010011010111010101)))
(assert (= r (fp #b1 #b10111011000 #x6ad562b27d04c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
