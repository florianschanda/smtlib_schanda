(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.0976134925573319822689200009335763752460479736328125p782 {+ 439612088707533 782 (2.79194e+235)}
; Y = 1.2391482547351249099421011123922653496265411376953125p-608 {+ 1077027990911413 -608 (1.1665e-183)}
; 1.0976134925573319822689200009335763752460479736328125p782 % 1.2391482547351249099421011123922653496265411376953125p-608 == 1.4412119105554239695266005583107471466064453125p-611
; [HW: 1.4412119105554239695266005583107471466064453125p-611] 

; mpf : + 1987041795968832 -611
; mpfd: + 1987041795968832 -611 (1.6959e-184) class: Pos. norm. non-zero
; hwf : + 1987041795968832 -611 (1.6959e-184) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11100001101 #b0001100011111101001100101010011000101110100111001101)))
(assert (= y (fp #b0 #b00110011111 #b0011110100111000110100011110110011111011100110110101)))
(assert (= r (fp #b0 #b00110011100 #x70f3438670f40)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
