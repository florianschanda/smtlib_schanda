(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9951139974501554963381977358949370682239532470703125p-811 {+ 4481595028107685 -811 (1.46097e-244)}
; Y = -1.01023280013193694770734509802423417568206787109375p-617 {- 46084434861148 -617 (-1.85744e-186)}
; 1.9951139974501554963381977358949370682239532470703125p-811 % -1.01023280013193694770734509802423417568206787109375p-617 == 1.9951139974501554963381977358949370682239532470703125p-811
; [HW: 1.9951139974501554963381977358949370682239532470703125p-811] 

; mpf : + 4481595028107685 -811
; mpfd: + 4481595028107685 -811 (1.46097e-244) class: Pos. norm. non-zero
; hwf : + 4481595028107685 -811 (1.46097e-244) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010100 #b1111111010111111110010100111101011010111000110100101)))
(assert (= y (fp #b1 #b00110010110 #b0000001010011110100111011110010111101001110001011100)))
(assert (= r (fp #b0 #b00011010100 #xfebfca7ad71a5)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
