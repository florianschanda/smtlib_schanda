(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1731617544304684397360460934578441083431243896484375p834 {+ 779851212727879 834 (1.34392e+251)}
; Y = 1.63591301905372343838962478912435472011566162109375p-494 {+ 2863897635650396 -494 (3.19847e-149)}
; 1.1731617544304684397360460934578441083431243896484375p834 % 1.63591301905372343838962478912435472011566162109375p-494 == 1.57277702152544662794753094203770160675048828125p-496
; [HW: 1.57277702152544662794753094203770160675048828125p-496] 

; mpf : + 2579558380708384 -496
; mpfd: + 2579558380708384 -496 (7.68757e-150) class: Pos. norm. non-zero
; hwf : + 2579558380708384 -496 (7.68757e-150) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101000001 #b0010110001010100010101000010100000110010011001000111)))
(assert (= y (fp #b0 #b01000010001 #b1010001011001011001100100001001111101111101101011100)))
(assert (= r (fp #b0 #b01000001111 #x92a183cf5a220)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
