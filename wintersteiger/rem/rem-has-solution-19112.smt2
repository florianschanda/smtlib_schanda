(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.0326335245673810003808057444985024631023406982421875p-967 {+ 146968329081443 -967 (8.27829e-292)}
; Y = 1.3212315572485966441718119313009083271026611328125p-350 {+ 1446698321524424 -350 (5.76077e-106)}
; 1.0326335245673810003808057444985024631023406982421875p-967 % 1.3212315572485966441718119313009083271026611328125p-350 == 1.0326335245673810003808057444985024631023406982421875p-967
; [HW: 1.0326335245673810003808057444985024631023406982421875p-967] 

; mpf : + 146968329081443 -967
; mpfd: + 146968329081443 -967 (8.27829e-292) class: Pos. norm. non-zero
; hwf : + 146968329081443 -967 (8.27829e-292) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000111000 #b0000100001011010101010111011000011000101001001100011)))
(assert (= y (fp #b0 #b01010100001 #b0101001000111100001110110011100011010011011011001000)))
(assert (= r (fp #b0 #b00000111000 #x085aabb0c5263)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
