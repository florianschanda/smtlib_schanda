(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.76395990982134076574538994464091956615447998046875p545 {- 3440569565197388 545 (-2.03159e+164)}
; Y = 1.9771420837384259261426677767303772270679473876953125p807 {+ 4400656724212405 807 (1.6875e+243)}
; -1.76395990982134076574538994464091956615447998046875p545 % 1.9771420837384259261426677767303772270679473876953125p807 == -1.76395990982134076574538994464091956615447998046875p545
; [HW: -1.76395990982134076574538994464091956615447998046875p545] 

; mpf : - 3440569565197388 545
; mpfd: - 3440569565197388 545 (-2.03159e+164) class: Neg. norm. non-zero
; hwf : - 3440569565197388 545 (-2.03159e+164) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11000100000 #b1100001110010010111000000110110000100011010001001100)))
(assert (= y (fp #b0 #b11100100110 #b1111101000100101111110111100110100110011101010110101)))
(assert (= r (fp #b1 #b11000100000 #xc392e06c2344c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
