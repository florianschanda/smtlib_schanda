(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -0.2908151888230643411503706374787725508213043212890625p-1022 {- 1309715176017233 -1023 (-6.47085e-309)}
; Y = -1.98449489268548884268739129765890538692474365234375p-1011 {- 4433770831846524 -1011 (-9.04325e-305)}
; -0.2908151888230643411503706374787725508213043212890625p-1022 % -1.98449489268548884268739129765890538692474365234375p-1011 == -0.2908151888230643411503706374787725508213043212890625p-1022
; [HW: -0.2908151888230643411503706374787725508213043212890625p-1022] 

; mpf : - 1309715176017233 -1023
; mpfd: - 1309715176017233 -1023 (-6.47085e-309) class: Neg. denorm.
; hwf : - 1309715176017233 -1023 (-6.47085e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000000000 #b0100101001110010110111010011110100101100110101010001)))
(assert (= y (fp #b1 #b00000001100 #b1111110000000111110110110111011100101001110001111100)))
(assert (= r (fp #b1 #b00000000000 #x4a72dd3d2cd51)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
