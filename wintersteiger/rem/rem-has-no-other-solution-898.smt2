(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.3872271173839816338357877611997537314891815185546875p439 {+ 1743915901558251 439 (1.96932e+132)}
; Y = -1.014857757926586945274038953357376158237457275390625p529 {- 66913393061738 529 (-1.7835e+159)}
; 1.3872271173839816338357877611997537314891815185546875p439 % -1.014857757926586945274038953357376158237457275390625p529 == 1.3872271173839816338357877611997537314891815185546875p439
; [HW: 1.3872271173839816338357877611997537314891815185546875p439] 

; mpf : + 1743915901558251 439
; mpfd: + 1743915901558251 439 (1.96932e+132) class: Pos. norm. non-zero
; hwf : + 1743915901558251 439 (1.96932e+132) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110110110 #b0110001100100001010100001111110101001001110111101011)))
(assert (= y (fp #b1 #b11000010000 #b0000001111001101101101111101000001100010111101101010)))
(assert (= r (fp #b0 #b10110110110 #x632150fd49deb)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
