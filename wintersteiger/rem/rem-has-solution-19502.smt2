(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.9255837010137193399117450098856352269649505615234375p-936 {+ 4168458410985591 -936 (3.31502e-282)}
; Y = -1.2939798042644328202044334830134175717830657958984375p-214 {- 1323967336939751 -214 (-4.91483e-065)}
; 1.9255837010137193399117450098856352269649505615234375p-936 % -1.2939798042644328202044334830134175717830657958984375p-214 == 1.9255837010137193399117450098856352269649505615234375p-936
; [HW: 1.9255837010137193399117450098856352269649505615234375p-936] 

; mpf : + 4168458410985591 -936
; mpfd: + 4168458410985591 -936 (3.31502e-282) class: Pos. norm. non-zero
; hwf : + 4168458410985591 -936 (3.31502e-282) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001010111 #b1110110011110011000011011010110110010000100001110111)))
(assert (= y (fp #b1 #b01100101001 #b0100101101000010010000101010110100000000000011100111)))
(assert (= r (fp #b0 #b00001010111 #xecf30dad90877)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
