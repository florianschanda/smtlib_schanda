(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.073618879121079228156077078892849385738372802734375p-554 {- 331549956577126 -554 (-1.82068e-167)}
; Y = -1.3509128109495025515940369587042368948459625244140625p758 {- 1580370804631713 758 (-2.04816e+228)}
; -1.073618879121079228156077078892849385738372802734375p-554 % -1.3509128109495025515940369587042368948459625244140625p758 == -1.073618879121079228156077078892849385738372802734375p-554
; [HW: -1.073618879121079228156077078892849385738372802734375p-554] 

; mpf : - 331549956577126 -554
; mpfd: - 331549956577126 -554 (-1.82068e-167) class: Neg. norm. non-zero
; hwf : - 331549956577126 -554 (-1.82068e-167) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00111010101 #b0001001011011000101011111101011000110001011101100110)))
(assert (= y (fp #b1 #b11011110101 #b0101100111010101011011000000011011000110100010100001)))
(assert (= r (fp #b1 #b00111010101 #x12d8afd631766)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
