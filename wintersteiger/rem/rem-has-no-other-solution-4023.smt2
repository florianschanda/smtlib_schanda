(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.1458777394729897647351890555000863969326019287109375p-661 {+ 656974933132207 -661 (1.1976e-199)}
; Y = -1.8994350784345195304325670804246328771114349365234375p-903 {- 4050695484081655 -903 (-2.80891e-272)}
; 1.1458777394729897647351890555000863969326019287109375p-661 % -1.8994350784345195304325670804246328771114349365234375p-903 == 1.418126050815040617436579850618727505207061767578125p-903
; [HW: 1.418126050815040617436579850618727505207061767578125p-903] 

; mpf : + 1883072326644514 -903
; mpfd: + 1883072326644514 -903 (2.09715e-272) class: Pos. norm. non-zero
; hwf : + 1883072326644514 -903 (2.09715e-272) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101010 #b0010010101011000001111100101100001000000001110101111)))
(assert (= y (fp #b1 #b00001111000 #b1110011001000001011000001001011011000000010111110111)))
(assert (= r (fp #b1 #b00001110110 #xecdc461394b54)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
