(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.84243013578456160672658370458520948886871337890625p811 {- 3793968045605028 811 (-2.51604e+244)}
; Y = -1.377435488003244667964963809936307370662689208984375p1017 {- 1699818323127814 1017 (-1.93454e+306)}
; -1.84243013578456160672658370458520948886871337890625p811 % -1.377435488003244667964963809936307370662689208984375p1017 == -1.84243013578456160672658370458520948886871337890625p811
; [HW: -1.84243013578456160672658370458520948886871337890625p811] 

; mpf : - 3793968045605028 811
; mpfd: - 3793968045605028 811 (-2.51604e+244) class: Neg. norm. non-zero
; hwf : - 3793968045605028 811 (-2.51604e+244) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11100101010 #b1101011110101001100000000101101001011100000010100100)))
(assert (= y (fp #b1 #b11111111000 #b0110000010011111100111001011010101010010111000000110)))
(assert (= r (fp #b1 #b11100101010 #xd7a9805a5c0a4)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
