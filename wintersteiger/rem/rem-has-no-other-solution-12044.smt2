(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.9603569655012211825351187144406139850616455078125p137 {- 4325063271973960 137 (-3.41542e+041)}
; Y = 1.614374692109480147195199606358073651790618896484375p410 {+ 2766897634450118 410 (4.26877e+123)}
; -1.9603569655012211825351187144406139850616455078125p137 % 1.614374692109480147195199606358073651790618896484375p410 == -1.9603569655012211825351187144406139850616455078125p137
; [HW: -1.9603569655012211825351187144406139850616455078125p137] 

; mpf : - 4325063271973960 137
; mpfd: - 4325063271973960 137 (-3.41542e+041) class: Neg. norm. non-zero
; hwf : - 4325063271973960 137 (-3.41542e+041) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010001000 #b1111010111011001111101000011111101010000010001001000)))
(assert (= y (fp #b0 #b10110011001 #b1001110101000111101010001110101000011001101011000110)))
(assert (= r (fp #b1 #b10010001000 #xf5d9f43f50448)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
