(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.8941821581738660373872562558972276747226715087890625p236 {+ 4027038434353169 236 (2.09171e+071)}
; Y = 1.924790719117688286843304013018496334552764892578125p718 {+ 4164887138014114 718 (2.65412e+216)}
; 1.8941821581738660373872562558972276747226715087890625p236 % 1.924790719117688286843304013018496334552764892578125p718 == 1.8941821581738660373872562558972276747226715087890625p236
; [HW: 1.8941821581738660373872562558972276747226715087890625p236] 

; mpf : + 4027038434353169 236
; mpfd: + 4027038434353169 236 (2.09171e+071) class: Pos. norm. non-zero
; hwf : + 4027038434353169 236 (2.09171e+071) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101011 #b1110010011101001000111110011011000000110000000010001)))
(assert (= y (fp #b0 #b11011001101 #b1110110010111111000101011010011001000001001110100010)))
(assert (= r (fp #b0 #b10011101011 #xe4e91f3606011)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
