(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.399210353269943585274859287892468273639678955078125p609 {+ 1797883598228962 609 (2.9727e+183)}
; Y = -1.051245938822299219594924579723738133907318115234375p-711 {- 230791190984358 -711 (-9.75837e-215)}
; 1.399210353269943585274859287892468273639678955078125p609 % -1.051245938822299219594924579723738133907318115234375p-711 == 1.357790484395419383645275956951081752777099609375p-712
; [HW: 1.357790484395419383645275956951081752777099609375p-712] 

; mpf : + 1611345092199920 -712
; mpfd: + 1611345092199920 -712 (6.30196e-215) class: Pos. norm. non-zero
; hwf : + 1611345092199920 -712 (6.30196e-215) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11001100000 #b0110011000110010101001100101001110000100110111100010)))
(assert (= y (fp #b1 #b00100111000 #b0000110100011110011101000010111101001011011010100110)))
(assert (= r (fp #b1 #b00100110110 #x7d49804294eb8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
