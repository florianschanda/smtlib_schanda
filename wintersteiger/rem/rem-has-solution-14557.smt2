(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1624932647242103289642045638174749910831451416015625p-257 {+ 731804606462169 -257 (5.01974e-078)}
; Y = -1.52377866255164651221321037155576050281524658203125p-552 {- 2358889389492212 -552 (-1.03363e-166)}
; 1.1624932647242103289642045638174749910831451416015625p-257 % -1.52377866255164651221321037155576050281524658203125p-552 == 1.45833276888933038861750901560299098491668701171875p-552
; [HW: 1.45833276888933038861750901560299098491668701171875p-552] 

; mpf : + 2064147287181676 -552
; mpfd: + 2064147287181676 -552 (9.89234e-167) class: Pos. norm. non-zero
; hwf : + 2064147287181676 -552 (9.89234e-167) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011111110 #b0010100110011001001010001001100111001111100011011001)))
(assert (= y (fp #b1 #b00111010111 #b1000011000010110010110111100001000000000011111110100)))
(assert (= r (fp #b1 #b00111010011 #x0c10fe4efe880)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
