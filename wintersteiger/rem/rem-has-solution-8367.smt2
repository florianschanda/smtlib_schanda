(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.682096132021606127437962641124613583087921142578125p729 {- 3071887886003362 729 (-4.75026e+219)}
; Y = 1.96163010508609492177356514730490744113922119140625p-254 {+ 4330796982933988 -254 (6.77639e-077)}
; -1.682096132021606127437962641124613583087921142578125p729 % 1.96163010508609492177356514730490744113922119140625p-254 == -1.27728495905804972920805084868334233760833740234375p-254
; [HW: -1.27728495905804972920805084868334233760833740234375p-254] 

; mpf : - 1248780438289276 -254
; mpfd: - 1248780438289276 -254 (-4.41234e-077) class: Neg. norm. non-zero
; hwf : - 1248780438289276 -254 (-4.41234e-077) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011011000 #b1010111010011101110110100010001111000010110010100010)))
(assert (= y (fp #b0 #b01100000001 #b1111011000101101011000111111110000110001100111100100)))
(assert (= r (fp #b0 #b01100000000 #x5e627caabbcd0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
