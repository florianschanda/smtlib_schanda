(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3352588981016386693312369970954023301601409912109375p-972 {+ 1509871848563183 -972 (3.3451e-293)}
; Y = -1.8208767998824999523321821470744907855987548828125p494 {- 3696900450067912 494 (-9.31319e+148)}
; 1.3352588981016386693312369970954023301601409912109375p-972 % -1.8208767998824999523321821470744907855987548828125p494 == 1.3352588981016386693312369970954023301601409912109375p-972
; [HW: 1.3352588981016386693312369970954023301601409912109375p-972] 

; mpf : + 1509871848563183 -972
; mpfd: + 1509871848563183 -972 (3.3451e-293) class: Pos. norm. non-zero
; hwf : + 1509871848563183 -972 (3.3451e-293) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000110011 #b0101010111010011100001101111001100001010000111101111)))
(assert (= y (fp #b1 #b10111101101 #b1101001000100100111110110110000110001010010111001000)))
(assert (= r (fp #b0 #b00000110011 #x55d386f30a1ef)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
