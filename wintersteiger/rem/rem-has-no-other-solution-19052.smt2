(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.53618045320434593037361992173828184604644775390625p391 {+ 2414742089254436 391 (7.74766e+117)}
; Y = 1.833679055425125881129133631475269794464111328125p533 {+ 3754556683359184 533 (5.15598e+160)}
; 1.53618045320434593037361992173828184604644775390625p391 % 1.833679055425125881129133631475269794464111328125p533 == 1.53618045320434593037361992173828184604644775390625p391
; [HW: 1.53618045320434593037361992173828184604644775390625p391] 

; mpf : + 2414742089254436 391
; mpfd: + 2414742089254436 391 (7.74766e+117) class: Pos. norm. non-zero
; hwf : + 2414742089254436 391 (7.74766e+117) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110000110 #b1000100101000011000111110100011101000100011000100100)))
(assert (= y (fp #b0 #b11000010100 #b1101010101101011111111011001011001101001001111010000)))
(assert (= r (fp #b0 #b10110000110 #x89431f4744624)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
