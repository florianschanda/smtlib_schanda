(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.912084127572728942112689765053801238536834716796875p371 {+ 4107661737067086 371 (9.19677e+111)}
; Y = 1.4549463640813045106625622793217189610004425048828125p333 {+ 2048896275750125 333 (2.54587e+100)}
; 1.912084127572728942112689765053801238536834716796875p371 % 1.4549463640813045106625622793217189610004425048828125p333 == 1.921005328257785027545878620003350079059600830078125p332
; [HW: 1.921005328257785027545878620003350079059600830078125p332] 

; mpf : + 4147839253148002 332
; mpfd: + 4147839253148002 332 (1.68069e+100) class: Pos. norm. non-zero
; hwf : + 4147839253148002 332 (1.68069e+100) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101110010 #b1110100101111110010110000110101100100000001001001110)))
(assert (= y (fp #b0 #b10101001100 #b0111010001110111010111010110101100101001110011101101)))
(assert (= r (fp #b1 #b10101001010 #xfa4f7304090f0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
