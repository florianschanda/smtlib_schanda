(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.4431926782010700005542958024307154119014739990234375p-400 {+ 1995962380399671 -400 (5.5889e-121)}
; Y = -1.5409070545592395973244492779485881328582763671875p673 {- 2436028809355064 673 (-6.03898e+202)}
; 1.4431926782010700005542958024307154119014739990234375p-400 % -1.5409070545592395973244492779485881328582763671875p673 == 1.4431926782010700005542958024307154119014739990234375p-400
; [HW: 1.4431926782010700005542958024307154119014739990234375p-400] 

; mpf : + 1995962380399671 -400
; mpfd: + 1995962380399671 -400 (5.5889e-121) class: Pos. norm. non-zero
; hwf : + 1995962380399671 -400 (5.5889e-121) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01001101111 #b0111000101110101000100110100101010110011010000110111)))
(assert (= y (fp #b1 #b11010100000 #b1000101001111000111000100111110110000001111100111000)))
(assert (= r (fp #b0 #b01001101111 #x7175134ab3437)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
