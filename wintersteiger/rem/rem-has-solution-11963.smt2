(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.837906089213867222298404158209450542926788330078125p-804 {+ 3773593551155042 -804 (1.72269e-242)}
; Y = -1.796149519966496743705874905572272837162017822265625p824 {- 3585538681452314 824 (-2.00937e+248)}
; 1.837906089213867222298404158209450542926788330078125p-804 % -1.796149519966496743705874905572272837162017822265625p824 == 1.837906089213867222298404158209450542926788330078125p-804
; [HW: 1.837906089213867222298404158209450542926788330078125p-804] 

; mpf : + 3773593551155042 -804
; mpfd: + 3773593551155042 -804 (1.72269e-242) class: Pos. norm. non-zero
; hwf : + 3773593551155042 -804 (1.72269e-242) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011011011 #b1101011010000001000000110111001001001010111101100010)))
(assert (= y (fp #b1 #b11100110111 #b1100101111010000011101000111011011111011011100011010)))
(assert (= r (fp #b0 #b00011011011 #xd68103724af62)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
