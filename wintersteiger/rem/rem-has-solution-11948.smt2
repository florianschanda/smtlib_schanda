(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.11693440080977079986723765614442527294158935546875p680 {- 526625723913676 680 (-5.60305e+204)}
; Y = -1.66062162880809882636867769178934395313262939453125p496 {- 2975175321333044 496 (-3.39741e+149)}
; -1.11693440080977079986723765614442527294158935546875p680 % -1.66062162880809882636867769178934395313262939453125p496 == -1.65907850654005972756976916571147739887237548828125p496
; [HW: -1.65907850654005972756976916571147739887237548828125p496] 

; mpf : - 2968225716461716 496
; mpfd: - 2968225716461716 496 (-3.39426e+149) class: Neg. norm. non-zero
; hwf : - 2968225716461716 496 (-3.39426e+149) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010100111 #b0001110111101111011010011011001101000001010111001100)))
(assert (= y (fp #b1 #b10111101111 #b1010100100011110011111111100001011000010110100110100)))
(assert (= r (fp #b0 #b10111100101 #x94852eb328000)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
