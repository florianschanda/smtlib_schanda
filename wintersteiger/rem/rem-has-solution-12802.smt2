(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8769420669942766810578405056730844080448150634765625p-645 {+ 3949395966140937 -645 (1.28559e-194)}
; Y = 1.623735106310764120252088105189613997936248779296875p737 {+ 2809053192359054 737 (1.17388e+222)}
; 1.8769420669942766810578405056730844080448150634765625p-645 % 1.623735106310764120252088105189613997936248779296875p737 == 1.8769420669942766810578405056730844080448150634765625p-645
; [HW: 1.8769420669942766810578405056730844080448150634765625p-645] 

; mpf : + 3949395966140937 -645
; mpfd: + 3949395966140937 -645 (1.28559e-194) class: Pos. norm. non-zero
; hwf : + 3949395966140937 -645 (1.28559e-194) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101111010 #b1110000001111111010001100111101000111010001000001001)))
(assert (= y (fp #b0 #b11011100000 #b1001111110101101000110101001101011111000110010001110)))
(assert (= r (fp #b0 #b00101111010 #xe07f467a3a209)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
