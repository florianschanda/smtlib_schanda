(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.510627466862703105476839482435025274753570556640625p-815 {+ 2299661669488010 -815 (6.91371e-246)}
; Y = 1.39976121158915933762045824551023542881011962890625p-384 {+ 1800364443550116 -384 (3.55251e-116)}
; 1.510627466862703105476839482435025274753570556640625p-815 % 1.39976121158915933762045824551023542881011962890625p-384 == 1.510627466862703105476839482435025274753570556640625p-815
; [HW: 1.510627466862703105476839482435025274753570556640625p-815] 

; mpf : + 2299661669488010 -815
; mpfd: + 2299661669488010 -815 (6.91371e-246) class: Pos. norm. non-zero
; hwf : + 2299661669488010 -815 (6.91371e-246) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00011010000 #b1000001010111000011110110100111010011101010110001010)))
(assert (= y (fp #b0 #b01001111111 #b0110011001010110110000000011000111111100000110100100)))
(assert (= r (fp #b0 #b00011010000 #x82b87b4e9d58a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
