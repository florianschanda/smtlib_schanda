(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.4255653837328987609822661397629417479038238525390625p163 {- 1916576103601265 163 (-1.66677e+049)}
; Y = -1.09356842418878574818563720327802002429962158203125p311 {- 421394720310260 311 (-4.5622e+093)}
; -1.4255653837328987609822661397629417479038238525390625p163 % -1.09356842418878574818563720327802002429962158203125p311 == -1.4255653837328987609822661397629417479038238525390625p163
; [HW: -1.4255653837328987609822661397629417479038238525390625p163] 

; mpf : - 1916576103601265 163
; mpfd: - 1916576103601265 163 (-1.66677e+049) class: Neg. norm. non-zero
; hwf : - 1916576103601265 163 (-1.66677e+049) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10010100010 #b0110110011110001110110100101110101110001010001110001)))
(assert (= y (fp #b1 #b10100110110 #b0001011111110100000110011010100111010100001111110100)))
(assert (= r (fp #b1 #b10010100010 #x6cf1da5d71471)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
