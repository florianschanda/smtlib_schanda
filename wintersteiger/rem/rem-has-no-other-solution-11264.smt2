(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.7876473840053022090756940087885595858097076416015625p853 {+ 3547248465105625 853 (1.07366e+257)}
; Y = 1.5764458872048254800546374099212698638439178466796875p542 {+ 2596081482814907 542 (2.26953e+163)}
; 1.7876473840053022090756940087885595858097076416015625p853 % 1.5764458872048254800546374099212698638439178466796875p542 == 1.172196581929380698738896171562373638153076171875p539
; [HW: 1.172196581929380698738896171562373638153076171875p539] 

; mpf : + 775504462211632 539
; mpfd: + 775504462211632 539 (2.10944e+162) class: Pos. norm. non-zero
; hwf : + 775504462211632 539 (2.10944e+162) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11101010100 #b1100100110100011010000100100101100010101001011011001)))
(assert (= y (fp #b0 #b11000011101 #b1001001110010001111101010010100101110101010110111011)))
(assert (= r (fp #b0 #b11000011010 #x2c15133fdea30)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
