(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.8673392966802218051469708370859734714031219482421875p75 {+ 3906148933332835 75 (7.05461e+022)}
; Y = -1.1929294691750029766552643195609562098979949951171875p-850 {- 868877085485331 -850 (-1.58898e-256)}
; 1.8673392966802218051469708370859734714031219482421875p75 % -1.1929294691750029766552643195609562098979949951171875p-850 == 1.4043876355117443921471931389532983303070068359375p-851
; [HW: 1.4043876355117443921471931389532983303070068359375p-851] 

; mpf : + 1821200004603928 -851
; mpfd: + 1821200004603928 -851 (9.35321e-257) class: Pos. norm. non-zero
; hwf : + 1821200004603928 -851 (9.35321e-257) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10001001010 #b1101111000001001111100101011100111000110111101100011)))
(assert (= y (fp #b1 #b00010101101 #b0011000101100011110100110110000010001010100100010011)))
(assert (= r (fp #b1 #b00010101011 #xf68368174e41c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
