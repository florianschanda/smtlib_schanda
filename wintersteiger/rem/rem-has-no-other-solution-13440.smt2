(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.406417627777958312407236007857136428356170654296875p752 {+ 1830342277017614 752 (3.33174e+226)}
; Y = 1.8502516390760888054245469902525655925273895263671875p-177 {+ 3829192964914227 -177 (9.65876e-054)}
; 1.406417627777958312407236007857136428356170654296875p752 % 1.8502516390760888054245469902525655925273895263671875p-177 == 1.839786015168659361052050371654331684112548828125p-177
; [HW: 1.839786015168659361052050371654331684112548828125p-177] 

; mpf : + 3782059984984528 -177
; mpfd: + 3782059984984528 -177 (9.60413e-054) class: Pos. norm. non-zero
; hwf : + 3782059984984528 -177 (9.60413e-054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b11011101111 #b0110100000001010111111000101001111010011000000001110)))
(assert (= y (fp #b0 #b01101001110 #b1101100110101010000101110110011100110011110000110011)))
(assert (= r (fp #b1 #b01101000111 #x56f0043513180)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
