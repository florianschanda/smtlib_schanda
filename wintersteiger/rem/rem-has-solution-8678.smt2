(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.8715464011738689453778761162539012730121612548828125p981 {- 3925096047562733 981 (-3.82496e+295)}
; Y = 1.8626218643309913058914162320434115827083587646484375p668 {+ 3884903506762695 668 (2.28119e+201)}
; -1.8715464011738689453778761162539012730121612548828125p981 % 1.8626218643309913058914162320434115827083587646484375p668 == -1.6054377781701745231401901037315838038921356201171875p668
; [HW: -1.6054377781701745231401901037315838038921356201171875p668] 

; mpf : - 2726649352163219 668
; mpfd: - 2726649352163219 668 (-1.96621e+201) class: Neg. norm. non-zero
; hwf : - 2726649352163219 668 (-1.96621e+201) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11111010100 #b1101111100011101101010100011100111111100111111101101)))
(assert (= y (fp #b0 #b11010011011 #b1101110011010100110010010101100000011101101111000111)))
(assert (= r (fp #b0 #b11010011001 #x075b43dc730d0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
