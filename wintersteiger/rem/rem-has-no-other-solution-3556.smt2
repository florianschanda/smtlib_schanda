(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.8965032763104050506086650784709490835666656494140625p-179 {+ 4037491821127969 -179 (2.47505e-054)}
; Y = 1.0504209891426283807192021413356997072696685791015625p731 {+ 227075947914393 731 (1.18656e+220)}
; 1.8965032763104050506086650784709490835666656494140625p-179 % 1.0504209891426283807192021413356997072696685791015625p731 == 1.8965032763104050506086650784709490835666656494140625p-179
; [HW: 1.8965032763104050506086650784709490835666656494140625p-179] 

; mpf : + 4037491821127969 -179
; mpfd: + 4037491821127969 -179 (2.47505e-054) class: Pos. norm. non-zero
; hwf : + 4037491821127969 -179 (2.47505e-054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101001100 #b1110010110000001001111010001110010000010100100100001)))
(assert (= y (fp #b0 #b11011011010 #b0000110011101000011000111101001101100110010010011001)))
(assert (= r (fp #b0 #b01101001100 #xe5813d1c82921)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
