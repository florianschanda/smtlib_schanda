(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.7259636809220848530088687766692601144313812255859375p-905 {+ 3269449762885215 -905 (6.38095e-273)}
; Y = 1.8641880290897694383289717734442092478275299072265625p-248 {+ 3891956885786729 -248 (4.12146e-075)}
; 1.7259636809220848530088687766692601144313812255859375p-905 % 1.8641880290897694383289717734442092478275299072265625p-248 == 1.7259636809220848530088687766692601144313812255859375p-905
; [HW: 1.7259636809220848530088687766692601144313812255859375p-905] 

; mpf : + 3269449762885215 -905
; mpfd: + 3269449762885215 -905 (6.38095e-273) class: Pos. norm. non-zero
; hwf : + 3269449762885215 -905 (6.38095e-273) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001110110 #b1011100111011000110000010111101110100100111001011111)))
(assert (= y (fp #b0 #b01100000111 #b1101110100111011011011010011101010001001000001101001)))
(assert (= r (fp #b0 #b00001110110 #xb9d8c17ba4e5f)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
