(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.8399123287134002691090017833630554378032684326171875p-271 {+ 3782628850617555 -271 (4.84918e-082)}
; Y = 1.15342078107904644213022038456983864307403564453125p-36 {+ 690945772498484 -36 (1.67845e-011)}
; 1.8399123287134002691090017833630554378032684326171875p-271 % 1.15342078107904644213022038456983864307403564453125p-36 == 1.8399123287134002691090017833630554378032684326171875p-271
; [HW: 1.8399123287134002691090017833630554378032684326171875p-271] 

; mpf : + 3782628850617555 -271
; mpfd: + 3782628850617555 -271 (4.84918e-082) class: Pos. norm. non-zero
; hwf : + 3782628850617555 -271 (4.84918e-082) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110000 #b1101011100000100011111101000111101010100110011010011)))
(assert (= y (fp #b0 #b01111011011 #b0010011101000110100101011001010101000010111000110100)))
(assert (= r (fp #b0 #b01011110000 #xd7047e8f54cd3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
