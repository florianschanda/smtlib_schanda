(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.08498646134802090301718635600991547107696533203125p-364 {- 382744995658484 -364 (-2.88739e-110)}
; Y = -1.9796167479567292613040763171738944947719573974609375p413 {- 4411801621063823 413 (-4.18764e+124)}
; -1.08498646134802090301718635600991547107696533203125p-364 % -1.9796167479567292613040763171738944947719573974609375p413 == -1.08498646134802090301718635600991547107696533203125p-364
; [HW: -1.08498646134802090301718635600991547107696533203125p-364] 

; mpf : - 382744995658484 -364
; mpfd: - 382744995658484 -364 (-2.88739e-110) class: Neg. norm. non-zero
; hwf : - 382744995658484 -364 (-2.88739e-110) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010010011 #b0001010111000001101011000011100000010111101011110100)))
(assert (= y (fp #b1 #b10110011100 #b1111101011001000001010011100011100010110100010001111)))
(assert (= r (fp #b1 #b01010010011 #x15c1ac3817af4)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
