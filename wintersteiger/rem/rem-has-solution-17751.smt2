(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.0271020740153551376039331444189883768558502197265625p-656 {+ 122056890436521 -656 (3.43508e-198)}
; Y = -1.2212238993534543229912969763972796499729156494140625p392 {- 996303870693665 392 (-1.23184e+118)}
; 1.0271020740153551376039331444189883768558502197265625p-656 % -1.2212238993534543229912969763972796499729156494140625p392 == 1.0271020740153551376039331444189883768558502197265625p-656
; [HW: 1.0271020740153551376039331444189883768558502197265625p-656] 

; mpf : + 122056890436521 -656
; mpfd: + 122056890436521 -656 (3.43508e-198) class: Pos. norm. non-zero
; hwf : + 122056890436521 -656 (3.43508e-198) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00101101111 #b0000011011110000001010010101100110001100101110101001)))
(assert (= y (fp #b1 #b10110000111 #b0011100010100010001000010010010011010001000100100001)))
(assert (= r (fp #b0 #b00101101111 #x06f029598cba9)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
