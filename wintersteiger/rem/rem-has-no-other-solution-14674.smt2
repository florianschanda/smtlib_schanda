(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7171109270354367737354550627060234546661376953125p-900 {- 3229580503780104 -900 (-2.03143e-271)}
; Y = -1.2878537740179563098052994973841123282909393310546875p-669 {- 1296378149404459 -669 (-5.25774e-202)}
; -1.7171109270354367737354550627060234546661376953125p-900 % -1.2878537740179563098052994973841123282909393310546875p-669 == -1.7171109270354367737354550627060234546661376953125p-900
; [HW: -1.7171109270354367737354550627060234546661376953125p-900] 

; mpf : - 3229580503780104 -900
; mpfd: - 3229580503780104 -900 (-2.03143e-271) class: Neg. norm. non-zero
; hwf : - 3229580503780104 -900 (-2.03143e-271) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001111011 #b1011011110010100100101001110101100111000101100001000)))
(assert (= y (fp #b1 #b00101100010 #b0100100110110000110010001111000101101111111100101011)))
(assert (= r (fp #b1 #b00001111011 #xb79494eb38b08)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
