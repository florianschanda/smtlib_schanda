(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.7541620193246283410104524591588415205478668212890625p-742 {- 3396443789207377 -742 (-7.58251e-224)}
; Y = 1.52633556573514450604989178827963769435882568359375p-968 {+ 2370404657716636 -968 (6.11807e-292)}
; -1.7541620193246283410104524591588415205478668212890625p-742 % 1.52633556573514450604989178827963769435882568359375p-968 == -1.585270584192731035955148399807512760162353515625p-969
; [HW: -1.585270584192731035955148399807512760162353515625p-969] 

; mpf : - 2635824384881296 -969
; mpfd: - 2635824384881296 -969 (-3.17715e-292) class: Neg. norm. non-zero
; hwf : - 2635824384881296 -969 (-3.17715e-292) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100011001 #b1100000100010000110000110001100011100010011101010001)))
(assert (= y (fp #b0 #b00000110111 #b1000011010111101111011010111100110001101110110011100)))
(assert (= r (fp #b0 #b00000110110 #x77a78ff0b08a8)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
