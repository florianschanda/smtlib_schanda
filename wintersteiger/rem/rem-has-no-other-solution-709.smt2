(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.5204751584868028135844042481039650738239288330078125p269 {+ 2344011729816765 269 (1.44228e+081)}
; Y = 1.1805248262421683680400974481017328798770904541015625p-177 {+ 813011540195353 -177 (6.16263e-054)}
; 1.5204751584868028135844042481039650738239288330078125p269 % 1.1805248262421683680400974481017328798770904541015625p-177 == 1.0815869396017794290543179158703424036502838134765625p-177
; [HW: 1.0815869396017794290543179158703424036502838134765625p-177] 

; mpf : + 367434910788873 -177
; mpfd: + 367434910788873 -177 (5.64615e-054) class: Pos. norm. non-zero
; hwf : + 367434910788873 -177 (5.64615e-054) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100001100 #b1000010100111101110111000010100000010100110010111101)))
(assert (= y (fp #b0 #b01101001110 #b0010111000110110111000000000000011010011100000011001)))
(assert (= r (fp #b1 #b01101001010 #x953fe4b74b100)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
