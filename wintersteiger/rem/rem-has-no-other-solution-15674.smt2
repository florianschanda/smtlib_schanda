(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.512909327643992885015222782385535538196563720703125p-897 {+ 2309938256852338 -897 (1.43188e-270)}
; Y = -1.5514810121828050970549384146579541265964508056640625p-1 {- 2483649680968385 -1 (-0.775741)}
; 1.512909327643992885015222782385535538196563720703125p-897 % -1.5514810121828050970549384146579541265964508056640625p-1 == 1.512909327643992885015222782385535538196563720703125p-897
; [HW: 1.512909327643992885015222782385535538196563720703125p-897] 

; mpf : + 2309938256852338 -897
; mpfd: + 2309938256852338 -897 (1.43188e-270) class: Pos. norm. non-zero
; hwf : + 2309938256852338 -897 (1.43188e-270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001111110 #b1000001101001110000001101001010000001011010101110010)))
(assert (= y (fp #b1 #b01111111110 #b1000110100101101110111000000111110110000101011000001)))
(assert (= r (fp #b0 #b00001111110 #x834e06940b572)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
