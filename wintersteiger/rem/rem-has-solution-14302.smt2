(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.6634267811227394506801147144869901239871978759765625p878 {- 2987808604251977 878 (-3.35228e+264)}
; Y = 1.0578190408009688905366374456207267940044403076171875p-338 {+ 260393810606163 -338 (1.88918e-102)}
; -1.6634267811227394506801147144869901239871978759765625p878 % 1.0578190408009688905366374456207267940044403076171875p-338 == -1.8174760702004988388580386526882648468017578125p-341
; [HW: -1.8174760702004988388580386526882648468017578125p-341] 

; mpf : - 3681584925139264 -341
; mpfd: - 3681584925139264 -341 (-4.05733e-103) class: Neg. norm. non-zero
; hwf : - 3681584925139264 -341 (-4.05733e-103) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11101101101 #b1010100111010110010101100110100000110110011101001001)))
(assert (= y (fp #b0 #b01010101101 #b0000111011001101001110101000100101010011100001010011)))
(assert (= r (fp #b1 #b01010101010 #xd1461c9ac6140)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
