(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.4520016951394307813671957774204201996326446533203125p-264 {+ 2035634665800773 -264 (4.89833e-080)}
; Y = -1.6212764266623824749302684722351841628551483154296875p-94 {- 2797980283610779 -94 (-8.18535e-029)}
; 1.4520016951394307813671957774204201996326446533203125p-264 % -1.6212764266623824749302684722351841628551483154296875p-94 == 1.4520016951394307813671957774204201996326446533203125p-264
; [HW: 1.4520016951394307813671957774204201996326446533203125p-264] 

; mpf : + 2035634665800773 -264
; mpfd: + 2035634665800773 -264 (4.89833e-080) class: Pos. norm. non-zero
; hwf : + 2035634665800773 -264 (4.89833e-080) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01011110111 #b0111001110110110011000100001001001011100010001000101)))
(assert (= y (fp #b1 #b01110100001 #b1001111100001011111110001100111001001010011010011011)))
(assert (= r (fp #b0 #b01011110111 #x73b662125c445)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
