(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.679608882063346353419319711974821984767913818359375p-490 {- 3060686308018166 -490 (-5.25424e-148)}
; Y = 1.6452717292239220636673735498334281146526336669921875p217 {+ 2906045519285571 217 (3.46535e+065)}
; -1.679608882063346353419319711974821984767913818359375p-490 % 1.6452717292239220636673735498334281146526336669921875p217 == -1.679608882063346353419319711974821984767913818359375p-490
; [HW: -1.679608882063346353419319711974821984767913818359375p-490] 

; mpf : - 3060686308018166 -490
; mpfd: - 3060686308018166 -490 (-5.25424e-148) class: Neg. norm. non-zero
; hwf : - 3060686308018166 -490 (-5.25424e-148) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000010101 #b1010110111111010110110010000001010001000011111110110)))
(assert (= y (fp #b0 #b10011011000 #b1010010100110000100001110010111000001100110101000011)))
(assert (= r (fp #b1 #b01000010101 #xadfad902887f6)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
