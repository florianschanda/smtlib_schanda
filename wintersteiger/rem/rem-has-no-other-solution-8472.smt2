(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.508637875441297904188786560553126037120819091796875p401 {- 2290701346303950 401 (-7.79136e+120)}
; Y = -1.713921446127206760223771198070608079433441162109375p768 {- 3215216358750294 768 (-2.66089e+231)}
; -1.508637875441297904188786560553126037120819091796875p401 % -1.713921446127206760223771198070608079433441162109375p768 == -1.508637875441297904188786560553126037120819091796875p401
; [HW: -1.508637875441297904188786560553126037120819091796875p401] 

; mpf : - 2290701346303950 401
; mpfd: - 2290701346303950 401 (-7.79136e+120) class: Neg. norm. non-zero
; hwf : - 2290701346303950 401 (-7.79136e+120) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110010000 #b1000001000110110000101111000000010000110111111001110)))
(assert (= y (fp #b1 #b11011111111 #b1011011011000011100011100100111100000111100001010110)))
(assert (= r (fp #b1 #b10110010000 #x8236178086fce)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
