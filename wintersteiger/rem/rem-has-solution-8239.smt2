(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.9960519682997028834137154262862168252468109130859375p-719 {- 4485819273276191 -719 (-7.23777e-217)}
; Y = 1.9969486824036801753123882008367218077182769775390625p-868 {+ 4489857714580721 -868 (1.01468e-261)}
; -1.9960519682997028834137154262862168252468109130859375p-719 % 1.9969486824036801753123882008367218077182769775390625p-868 == -1.55138405416006452952615290996618568897247314453125p-869
; [HW: -1.55138405416006452952615290996618568897247314453125p-869] 

; mpf : - 2483213020853300 -869
; mpfd: - 2483213020853300 -869 (-3.94142e-262) class: Neg. norm. non-zero
; hwf : - 2483213020853300 -869 (-3.94142e-262) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00100110000 #b1111111011111101010000110000010011110110101100011111)))
(assert (= y (fp #b0 #b00010011011 #b1111111100111000000001110110001010110110110011110001)))
(assert (= r (fp #b1 #b00010011010 #x8d27816027434)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
