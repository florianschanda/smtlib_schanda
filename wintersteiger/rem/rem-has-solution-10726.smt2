(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.923050654550092275485440040938556194305419921875p241 {- 4157050583875888 241 (-6.79547e+072)}
; Y = 1.6315277001033636761206935261725448071956634521484375p-515 {+ 2844147914859655 -515 (1.52106e-155)}
; -1.923050654550092275485440040938556194305419921875p241 % 1.6315277001033636761206935261725448071956634521484375p-515 == -1.600502818425363127374794203205965459346771240234375p-515
; [HW: -1.600502818425363127374794203205965459346771240234375p-515] 

; mpf : - 2704424269295398 -515
; mpfd: - 2704424269295398 -515 (-1.49214e-155) class: Neg. norm. non-zero
; hwf : - 2704424269295398 -515 (-1.49214e-155) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10011110000 #b1110110001001101000011000011010111011000000100110000)))
(assert (= y (fp #b0 #b00111111100 #b1010000110101011110011001010001001110110010010000111)))
(assert (= r (fp #b0 #b00111110110 #xfc4fc90ad5840)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
