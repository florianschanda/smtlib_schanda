(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.6170963994315024070402841971372254192829132080078125p598 {- 2779155114531389 598 (-1.67754e+180)}
; Y = 1.1684079232061801434383596642874181270599365234375p628 {+ 758441860197592 628 (1.30146e+189)}
; -1.6170963994315024070402841971372254192829132080078125p598 % 1.1684079232061801434383596642874181270599365234375p628 == -1.6170963994315024070402841971372254192829132080078125p598
; [HW: -1.6170963994315024070402841971372254192829132080078125p598] 

; mpf : - 2779155114531389 598
; mpfd: - 2779155114531389 598 (-1.67754e+180) class: Neg. norm. non-zero
; hwf : - 2779155114531389 598 (-1.67754e+180) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001010101 #b1001110111111010000001111001011000001001101000111101)))
(assert (= y (fp #b0 #b11001110011 #b0010101100011100110010000001101010001110110011011000)))
(assert (= r (fp #b1 #b11001010101 #x9dfa079609a3d)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
