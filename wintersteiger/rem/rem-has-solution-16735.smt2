(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0320582768525794481462298790575005114078521728515625p-233 {+ 144377643687417 -233 (7.47679e-071)}
; Y = 1.429158755044982687110177721478976309299468994140625p-444 {+ 1932759209303370 -444 (3.14603e-134)}
; 1.0320582768525794481462298790575005114078521728515625p-233 % 1.429158755044982687110177721478976309299468994140625p-444 == 1.168003250603313336597466332023032009601593017578125p-444
; [HW: 1.168003250603313336597466332023032009601593017578125p-444] 

; mpf : + 756619376814114 -444
; mpfd: + 756619376814114 -444 (2.57114e-134) class: Pos. norm. non-zero
; hwf : + 756619376814114 -444 (2.57114e-134) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01100010110 #b0000100000110100111110001010001010100101110111111001)))
(assert (= y (fp #b0 #b01001000011 #b0110110111011101010110010010000110110101110101001010)))
(assert (= r (fp #b1 #b01001000001 #x0b6c593afd4a0)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
