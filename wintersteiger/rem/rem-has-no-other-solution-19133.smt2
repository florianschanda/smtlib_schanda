(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.3667304535007309684857546017155982553958892822265625p-353 {- 1651607133731305 -353 (-7.44894e-107)}
; Y = 0.3182232325051519428171786785242147743701934814453125p-1022 {+ 1433150031330837 -1023 (7.0807e-309)}
; -1.3667304535007309684857546017155982553958892822265625p-353 % 0.3182232325051519428171786785242147743701934814453125p-1022 == -0.188732720752465610303261200897395610809326171875p-1022
; [HW: -0.188732720752465610303261200897395610809326171875p-1022] 

; mpf : - 849976610853424 -1023
; mpfd: - 849976610853424 -1023 (-4.19944e-309) class: Neg. denorm.
; hwf : - 849976610853424 -1023 (-4.19944e-309) class: Neg. denorm.

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01010011110 #b0101110111100010000011000000100000111011100111101001)))
(assert (= y (fp #b0 #b00000000000 #b0101000101110111000100111110100001101111111000010101)))
(assert (= r (fp #b0 #b00000000000 #x21264a491ebe5)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
