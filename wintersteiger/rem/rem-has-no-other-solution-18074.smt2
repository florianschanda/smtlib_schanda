(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.777408067398850821660971632809378206729888916015625p-476 {- 3501134682652282 -476 (-9.10981e-144)}
; Y = 1.3449658832035067401733385850093327462673187255859375p932 {+ 1553588223050847 932 (4.88278e+280)}
; -1.777408067398850821660971632809378206729888916015625p-476 % 1.3449658832035067401733385850093327462673187255859375p932 == -1.777408067398850821660971632809378206729888916015625p-476
; [HW: -1.777408067398850821660971632809378206729888916015625p-476] 

; mpf : - 3501134682652282 -476
; mpfd: - 3501134682652282 -476 (-9.10981e-144) class: Neg. norm. non-zero
; hwf : - 3501134682652282 -476 (-9.10981e-144) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000100011 #b1100011100000100001101110001000100011111111001111010)))
(assert (= y (fp #b0 #b11110100011 #b0101100001001111101011110010001010011000010001011111)))
(assert (= r (fp #b1 #b01000100011 #xc70437111fe7a)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
