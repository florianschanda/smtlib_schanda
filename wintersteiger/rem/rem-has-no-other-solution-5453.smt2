(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.29837809203835252702674551983363926410675048828125p309 {+ 1343775464119444 309 (1.35416e+093)}
; Y = 1.02209546764098657689601168385706841945648193359375p182 {+ 99509139834524 182 (6.26543e+054)}
; 1.29837809203835252702674551983363926410675048828125p309 % 1.02209546764098657689601168385706841945648193359375p182 == 1.4251549625080173200331046245992183685302734375p178
; [HW: 1.4251549625080173200331046245992183685302734375p178] 

; mpf : + 1914727730725824 178
; mpfd: + 1914727730725824 178 (5.46011e+053) class: Pos. norm. non-zero
; hwf : + 1914727730725824 178 (5.46011e+053) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100110100 #b0100110001100010100000011011001100100101110010010100)))
(assert (= y (fp #b0 #b10010110101 #b0000010110101000000011000110111011101000011010011100)))
(assert (= r (fp #b0 #b10010110001 #x6cd6f4a3b43c0)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
