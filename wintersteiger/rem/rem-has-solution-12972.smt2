(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.1595268757861953989873882164829410612583160400390625p-357 {+ 718445178346289 -357 (3.94978e-108)}
; Y = -1.4295361918500006925825118742068298161029815673828125p-915 {- 1934459033557805 -915 (-5.16118e-276)}
; 1.1595268757861953989873882164829410612583160400390625p-357 % -1.4295361918500006925825118742068298161029815673828125p-915 == 1.783135368176135937545723209041170775890350341796875p-916
; [HW: 1.783135368176135937545723209041170775890350341796875p-916] 

; mpf : + 3526928152298702 -916
; mpfd: + 3526928152298702 -916 (3.21891e-276) class: Pos. norm. non-zero
; hwf : + 3526928152298702 -916 (3.21891e-276) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01010011010 #b0010100011010110110000001101101001010101101100110001)))
(assert (= y (fp #b1 #b00001101100 #b0110110111110110000101010111100001110001101100101101)))
(assert (= r (fp #b1 #b00001101011 #x13709bb63b18c)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
