(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.831938707910885977270254443283192813396453857421875p350 {+ 3746718854942558 350 (4.20155e+105)}
; Y = -1.45080377051829856327458401210606098175048828125p872 {- 2030239692923424 872 (-4.56841e+262)}
; 1.831938707910885977270254443283192813396453857421875p350 % -1.45080377051829856327458401210606098175048828125p872 == 1.831938707910885977270254443283192813396453857421875p350
; [HW: 1.831938707910885977270254443283192813396453857421875p350] 

; mpf : + 3746718854942558 350
; mpfd: + 3746718854942558 350 (4.20155e+105) class: Pos. norm. non-zero
; hwf : + 3746718854942558 350 (4.20155e+105) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10101011101 #b1101010011111001111011110110011011000000111101011110)))
(assert (= y (fp #b1 #b11101100111 #b0111001101100111111000000011101101001010001000100000)))
(assert (= r (fp #b0 #b10101011101 #xd4f9ef66c0f5e)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
