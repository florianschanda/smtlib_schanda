(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.9924143263588167673816542446729727089405059814453125p-133 {+ 4469436790386709 -133 (1.82974e-040)}
; Y = 1.5262357884316741785113435980747453868389129638671875p-882 {+ 2369955300689907 -882 (4.73332e-266)}
; 1.9924143263588167673816542446729727089405059814453125p-133 % 1.5262357884316741785113435980747453868389129638671875p-882 == 1.45998560432528190489165353938005864620208740234375p-883
; [HW: 1.45998560432528190489165353938005864620208740234375p-883] 

; mpf : + 2071590996235132 -883
; mpfd: + 2071590996235132 -883 (2.26393e-266) class: Pos. norm. non-zero
; hwf : + 2071590996235132 -883 (2.26393e-266) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101111010 #b1111111000001110110111011000001111001011000000010101)))
(assert (= y (fp #b0 #b00010001101 #b1000011010110111011000110111110101001100011111110011)))
(assert (= r (fp #b0 #b00010001100 #x75c19dd73537c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
