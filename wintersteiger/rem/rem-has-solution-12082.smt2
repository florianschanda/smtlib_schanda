(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.851242360891907079434304250753484666347503662109375p454 {- 3833654779314774 454 (-8.61155e+136)}
; Y = 1.995819909547237092084515097667463123798370361328125p310 {+ 4484774173565058 310 (4.16313e+093)}
; -1.851242360891907079434304250753484666347503662109375p454 % 1.995819909547237092084515097667463123798370361328125p310 == -1.23718990827927566300559192313812673091888427734375p309
; [HW: -1.23718990827927566300559192313812673091888427734375p309] 

; mpf : - 1068208382542588 309
; mpfd: - 1068208382542588 309 (-1.29034e+093) class: Neg. norm. non-zero
; hwf : - 1068208382542588 309 (-1.29034e+093) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10111000101 #b1101100111101011000001001111010100000000001001010110)))
(assert (= y (fp #b0 #b10100110101 #b1111111011101110000011011011100000110110000010000010)))
(assert (= r (fp #b1 #b10100110100 #x3cb87a53002fc)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
