(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.6235027427978898639793214897508732974529266357421875p-931 {- 2808006720129059 -931 (-8.9439e-281)}
; Y = -1.78409838436935697103535858332179486751556396484375p-51 {- 3531265191667644 -51 (-7.92299e-016)}
; -1.6235027427978898639793214897508732974529266357421875p-931 % -1.78409838436935697103535858332179486751556396484375p-51 == -1.6235027427978898639793214897508732974529266357421875p-931
; [HW: -1.6235027427978898639793214897508732974529266357421875p-931] 

; mpf : - 2808006720129059 -931
; mpfd: - 2808006720129059 -931 (-8.9439e-281) class: Neg. norm. non-zero
; hwf : - 2808006720129059 -931 (-8.9439e-281) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00001011100 #b1001111110011101111000000011000101001000100000100011)))
(assert (= y (fp #b1 #b01111001100 #b1100100010111010101010111111010110110110011110111100)))
(assert (= r (fp #b1 #b00001011100 #x9f9de03148823)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
