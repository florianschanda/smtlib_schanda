(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = 1.2199918802406897189172241269261576235294342041015625p236 {+ 990755349876505 236 (1.34721e+071)}
; Y = 1.2531968137874172075640899493009783327579498291015625p-104 {+ 1140297076224409 -104 (6.17874e-032)}
; 1.2199918802406897189172241269261576235294342041015625p236 % 1.2531968137874172075640899493009783327579498291015625p-104 == 1.359445044735761332077572660637088119983673095703125p-105
; [HW: 1.359445044735761332077572660637088119983673095703125p-105] 

; mpf : + 1618796569532146 -105
; mpfd: + 1618796569532146 -105 (3.35129e-032) class: Pos. norm. non-zero
; hwf : + 1618796569532146 -105 (3.35129e-032) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10011101011 #b0011100001010001011000110100101100000100111100011001)))
(assert (= y (fp #b0 #b01110010111 #b0100000011010001100000011010001010101011000110011001)))
(assert (= r (fp #b1 #b01110010110 #x259e6c1d7cc40)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
