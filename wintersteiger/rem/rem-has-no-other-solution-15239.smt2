(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.549405437794909357052119958098046481609344482421875p748 {- 2474302124928478 748 (-2.29404e+225)}
; Y = -1.41236548754389534821029883460141718387603759765625p828 {- 1857129056043140 828 (-2.52804e+249)}
; -1.549405437794909357052119958098046481609344482421875p748 % -1.41236548754389534821029883460141718387603759765625p828 == -1.549405437794909357052119958098046481609344482421875p748
; [HW: -1.549405437794909357052119958098046481609344482421875p748] 

; mpf : - 2474302124928478 748
; mpfd: - 2474302124928478 748 (-2.29404e+225) class: Neg. norm. non-zero
; hwf : - 2474302124928478 748 (-2.29404e+225) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11011101011 #b1000110010100101110101011011001110010010110111011110)))
(assert (= y (fp #b1 #b11100111011 #b0110100110010000110010001101101100000000000010000100)))
(assert (= r (fp #b1 #b11011101011 #x8ca5d5b392dde)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
