(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.26715658841486966679212855524383485317230224609375p-483 {- 1203166312034780 -483 (-5.07391e-146)}
; Y = 1.7933282759617175106114927984890528023242950439453125p565 {+ 3572832928003669 565 (2.16575e+170)}
; -1.26715658841486966679212855524383485317230224609375p-483 % 1.7933282759617175106114927984890528023242950439453125p565 == -1.26715658841486966679212855524383485317230224609375p-483
; [HW: -1.26715658841486966679212855524383485317230224609375p-483] 

; mpf : - 1203166312034780 -483
; mpfd: - 1203166312034780 -483 (-5.07391e-146) class: Neg. norm. non-zero
; hwf : - 1203166312034780 -483 (-5.07391e-146) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000011100 #b0100010001100100010111111100101000100111000111011100)))
(assert (= y (fp #b0 #b11000110100 #b1100101100010111100011111101100000111111011001010101)))
(assert (= r (fp #b1 #b01000011100 #x44645fca271dc)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
