(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.4175105927909823488874963004491291940212249755859375p410 {+ 1880300550116703 410 (3.74822e+123)}
; Y = 1.256657500157270401786036018165759742259979248046875p272 {+ 1155882622070126 272 (9.53621e+081)}
; 1.4175105927909823488874963004491291940212249755859375p410 % 1.256657500157270401786036018165759742259979248046875p272 == 1.7200427243667260057691237307153642177581787109375p271
; [HW: 1.7200427243667260057691237307153642177581787109375p271] 

; mpf : + 3242784145148824 271
; mpfd: + 3242784145148824 271 (6.52632e+081) class: Pos. norm. non-zero
; hwf : + 3242784145148824 271 (6.52632e+081) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10110011001 #b0110101011100001111110010110010111000101010101011111)))
(assert (= y (fp #b0 #b10100001111 #b0100000110110100010011100101000101110010110101101110)))
(assert (= r (fp #b1 #b10100001101 #x9627c8a409e88)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
