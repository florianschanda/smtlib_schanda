(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2758247515533687188593603423214517533779144287109375p-977 {+ 1242204248315311 -977 (9.98815e-295)}
; Y = -1.187493069938656109485464185127057135105133056640625p-249 {- 844393719910282 -249 (-1.31269e-075)}
; 1.2758247515533687188593603423214517533779144287109375p-977 % -1.187493069938656109485464185127057135105133056640625p-249 == 1.2758247515533687188593603423214517533779144287109375p-977
; [HW: 1.2758247515533687188593603423214517533779144287109375p-977] 

; mpf : + 1242204248315311 -977
; mpfd: + 1242204248315311 -977 (9.98815e-295) class: Pos. norm. non-zero
; hwf : + 1242204248315311 -977 (9.98815e-295) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000101110 #b0100011010011100011100110110111101011001010110101111)))
(assert (= y (fp #b1 #b01100000110 #b0010111111111111100010111011101110011100111110001010)))
(assert (= r (fp #b0 #b00000101110 #x469c736f595af)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
