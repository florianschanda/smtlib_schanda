(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.3583990530324576706533434844459407031536102294921875p-136 {+ 1614085841686915 -136 (1.55937e-041)}
; Y = -1.5689880353826659575844360006158240139484405517578125p586 {- 2562494304127645 586 (-3.97372e+176)}
; 1.3583990530324576706533434844459407031536102294921875p-136 % -1.5689880353826659575844360006158240139484405517578125p586 == 1.3583990530324576706533434844459407031536102294921875p-136
; [HW: 1.3583990530324576706533434844459407031536102294921875p-136] 

; mpf : + 1614085841686915 -136
; mpfd: + 1614085841686915 -136 (1.55937e-041) class: Pos. norm. non-zero
; hwf : + 1614085841686915 -136 (1.55937e-041) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b01101110111 #b0101101111000000000010100101001110110001000110000011)))
(assert (= y (fp #b1 #b11001001001 #b1001000110101001001100110010101111001000101010011101)))
(assert (= r (fp #b0 #b01101110111 #x5bc00a53b1183)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
