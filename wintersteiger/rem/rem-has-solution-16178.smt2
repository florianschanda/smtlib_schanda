(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.0086093551204893259409800521098077297210693359375p-857 {+ 38773088512536 -857 (1.04958e-258)}
; Y = -1.306384448602450287779674908961169421672821044921875p493 {- 1379832888558110 493 (-3.34086e+148)}
; 1.0086093551204893259409800521098077297210693359375p-857 % -1.306384448602450287779674908961169421672821044921875p493 == 1.0086093551204893259409800521098077297210693359375p-857
; [HW: 1.0086093551204893259409800521098077297210693359375p-857] 

; mpf : + 38773088512536 -857
; mpfd: + 38773088512536 -857 (1.04958e-258) class: Pos. norm. non-zero
; hwf : + 38773088512536 -857 (1.04958e-258) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00010100110 #b0000001000110100001110010000001010101110101000011000)))
(assert (= y (fp #b1 #b10111101100 #b0100111001101111001101100001001011000000001000011110)))
(assert (= r (fp #b0 #b00010100110 #x02343902aea18)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
