(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = -1.1852503980210158385233398803393356502056121826171875p-456 {- 834293623497683 -456 (-6.36989e-138)}
; Y = -1.979519746968957161215030282619409263134002685546875p690 {- 4411364767451438 690 (-1.01685e+208)}
; -1.1852503980210158385233398803393356502056121826171875p-456 % -1.979519746968957161215030282619409263134002685546875p690 == -1.1852503980210158385233398803393356502056121826171875p-456
; [HW: -1.1852503980210158385233398803393356502056121826171875p-456] 

; mpf : - 834293623497683 -456
; mpfd: - 834293623497683 -456 (-6.36989e-138) class: Neg. norm. non-zero
; hwf : - 834293623497683 -456 (-6.36989e-138) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01000110111 #b0010111101101100100100011111000100010010001111010011)))
(assert (= y (fp #b1 #b11010110001 #b1111101011000001110011100101111100000100100100101110)))
(assert (= r (fp #b1 #b01000110111 #x2f6c91f1123d3)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
