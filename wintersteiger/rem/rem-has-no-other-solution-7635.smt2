(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.5809574467610858494737158252974040806293487548828125p-145 {- 2616399740751341 -145 (-3.54463e-044)}
; Y = -1.3457895314625580862610831900383345782756805419921875p-217 {- 1557297605043395 -217 (-6.38952e-066)}
; -1.5809574467610858494737158252974040806293487548828125p-145 % -1.3457895314625580862610831900383345782756805419921875p-217 == -1.31440006812505938427193541429005563259124755859375p-219
; [HW: -1.31440006812505938427193541429005563259124755859375p-219] 

; mpf : - 1415932029653276 -219
; mpfd: - 1415932029653276 -219 (-1.56012e-066) class: Neg. norm. non-zero
; hwf : - 1415932029653276 -219 (-1.56012e-066) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101101110 #b1001010010111001101000001001001000110100110111101101)))
(assert (= y (fp #b1 #b01100100110 #b0101100010000101101010011010100011101110010011000011)))
(assert (= r (fp #b1 #b01100100100 #x507c85da7511c)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
