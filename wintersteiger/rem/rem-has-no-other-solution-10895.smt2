(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.4094650822150234237284394112066365778446197509765625p-874 {- 1844066791684809 -874 (-1.11902e-263)}
; Y = 1.4431880422888168080675086457631550729274749755859375p543 {+ 1995941502106975 543 (4.15538e+163)}
; -1.4094650822150234237284394112066365778446197509765625p-874 % 1.4431880422888168080675086457631550729274749755859375p543 == -1.4094650822150234237284394112066365778446197509765625p-874
; [HW: -1.4094650822150234237284394112066365778446197509765625p-874] 

; mpf : - 1844066791684809 -874
; mpfd: - 1844066791684809 -874 (-1.11902e-263) class: Neg. norm. non-zero
; hwf : - 1844066791684809 -874 (-1.11902e-263) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00010010101 #b0110100011010010101101000010000011110111101011001001)))
(assert (= y (fp #b0 #b11000011110 #b0111000101110100110001011000001110011011110101011111)))
(assert (= r (fp #b1 #b00010010101 #x68d2b420f7ac9)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
