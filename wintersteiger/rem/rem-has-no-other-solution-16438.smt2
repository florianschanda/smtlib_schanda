(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.6581715504457787968561888192198239266872406005859375p-177 {- 2964141149333471 -177 (-8.65606e-054)}
; Y = -1.7321151368843483719928144637378863990306854248046875p-659 {- 3297153457664651 -659 (-7.24118e-199)}
; -1.6581715504457787968561888192198239266872406005859375p-177 % -1.7321151368843483719928144637378863990306854248046875p-659 == -1.950153287795624468259347850107587873935699462890625p-660
; [HW: -1.950153287795624468259347850107587873935699462890625p-660] 

; mpf : - 4279109992861226 -660
; mpfd: - 4279109992861226 -660 (-4.07635e-199) class: Neg. norm. non-zero
; hwf : - 4279109992861226 -660 (-4.07635e-199) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01101001110 #b1010100001111101111011100100010001010010011111011111)))
(assert (= y (fp #b1 #b00101101100 #b1011101101101011111001011100100111010011001010001011)))
(assert (= r (fp #b0 #b00101101011 #x839a8ca2616ec)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
