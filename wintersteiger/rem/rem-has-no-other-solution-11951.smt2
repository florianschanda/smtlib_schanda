(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.211501387284208863803769418154843151569366455078125p-263 {- 952517568961506 -263 (-8.17401e-080)}
; Y = 1.9629683115680991445373138049035333096981048583984375p699 {+ 4336823729147687 699 (5.16274e+210)}
; -1.211501387284208863803769418154843151569366455078125p-263 % 1.9629683115680991445373138049035333096981048583984375p699 == -1.211501387284208863803769418154843151569366455078125p-263
; [HW: -1.211501387284208863803769418154843151569366455078125p-263] 

; mpf : - 952517568961506 -263
; mpfd: - 952517568961506 -263 (-8.17401e-080) class: Neg. norm. non-zero
; hwf : - 952517568961506 -263 (-8.17401e-080) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011111000 #b0011011000100100111101000111010101110001101111100010)))
(assert (= y (fp #b0 #b11010111010 #b1111011010000101000101110101110101000100111100100111)))
(assert (= r (fp #b1 #b01011111000 #x3624f47571be2)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
