(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.7922049685705394583834504373953677713871002197265625p-54 {- 3567774001255337 -54 (-9.94874e-017)}
; Y = 1.594748506443687485756299793138168752193450927734375p548 {+ 2678509151998950 548 (1.46937e+165)}
; -1.7922049685705394583834504373953677713871002197265625p-54 % 1.594748506443687485756299793138168752193450927734375p548 == -1.7922049685705394583834504373953677713871002197265625p-54
; [HW: -1.7922049685705394583834504373953677713871002197265625p-54] 

; mpf : - 3567774001255337 -54
; mpfd: - 3567774001255337 -54 (-9.94874e-017) class: Neg. norm. non-zero
; hwf : - 3567774001255337 -54 (-9.94874e-017) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01111001001 #b1100101011001101111100011101111110111101001110101001)))
(assert (= y (fp #b0 #b11000100011 #b1001100001000001011100000010100010000101001111100110)))
(assert (= r (fp #b1 #b01111001001 #xcacdf1dfbd3a9)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
