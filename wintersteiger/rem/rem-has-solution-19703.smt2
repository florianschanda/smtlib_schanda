(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.8368458325038468093026722272043116390705108642578125p-315 {- 3768818579430877 -315 (-2.75185e-095)}
; Y = 1.9683140938585008683503474458120763301849365234375p-271 {+ 4360898992278744 -271 (5.18759e-082)}
; -1.8368458325038468093026722272043116390705108642578125p-315 % 1.9683140938585008683503474458120763301849365234375p-271 == -1.8368458325038468093026722272043116390705108642578125p-315
; [HW: -1.8368458325038468093026722272043116390705108642578125p-315] 

; mpf : - 3768818579430877 -315
; mpfd: - 3768818579430877 -315 (-2.75185e-095) class: Neg. norm. non-zero
; hwf : - 3768818579430877 -315 (-2.75185e-095) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b01011000100 #b1101011000111011100001110100101001100101110111011101)))
(assert (= y (fp #b0 #b01011110000 #b1111011111100011011011101011010101100000110011011000)))
(assert (= r (fp #b1 #b01011000100 #xd63b874a65ddd)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
