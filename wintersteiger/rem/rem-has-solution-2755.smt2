(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.805590003016054101436793644097633659839630126953125p-965 {- 3628054837396498 -965 (-5.78993e-291)}
; Y = -1.794033995525453395458725935895927250385284423828125p729 {- 3576011206367938 729 (-5.06638e+219)}
; -1.805590003016054101436793644097633659839630126953125p-965 % -1.794033995525453395458725935895927250385284423828125p729 == -1.805590003016054101436793644097633659839630126953125p-965
; [HW: -1.805590003016054101436793644097633659839630126953125p-965] 

; mpf : - 3628054837396498 -965
; mpfd: - 3628054837396498 -965 (-5.78993e-291) class: Neg. norm. non-zero
; hwf : - 3628054837396498 -965 (-5.78993e-291) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b00000111010 #b1100111000111011001001010111110011110000010000010010)))
(assert (= y (fp #b1 #b11011011000 #b1100101101000101110011111101101010110001101011000010)))
(assert (= r (fp #b1 #b00000111010 #xce3b257cf0412)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
