(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to positive
; Precision: double (11/53)
; X = -1.9621071185810288195483508388861082494258880615234375p592 {- 4332945260732023 592 (-3.18039e+178)}
; Y = -1.757899790884769775090035182074643671512603759765625p887 {- 3413277215812826 887 (-1.81385e+267)}
; -1.9621071185810288195483508388861082494258880615234375p592 % -1.757899790884769775090035182074643671512603759765625p887 == -1.9621071185810288195483508388861082494258880615234375p592
; [HW: -1.9621071185810288195483508388861082494258880615234375p592] 

; mpf : - 4332945260732023 592
; mpfd: - 4332945260732023 592 (-3.18039e+178) class: Neg. norm. non-zero
; hwf : - 4332945260732023 592 (-3.18039e+178) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11001001111 #b1111011001001100101001101111000110001101111001110111)))
(assert (= y (fp #b1 #b11101110110 #b1100001000000101101110000111111101111110110011011010)))
(assert (= r (fp #b1 #b11001001111 #xf64ca6f18de77)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
