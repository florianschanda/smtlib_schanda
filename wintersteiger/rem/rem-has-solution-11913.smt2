(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: nearest, ties to even
; Precision: double (11/53)
; X = 1.960578049376751952337372131296433508396148681640625p-897 {+ 4326058945233418 -897 (1.85557e-270)}
; Y = 1.58550118131054684766922946437261998653411865234375p-281 {+ 2636862901975164 -281 (4.08073e-085)}
; 1.960578049376751952337372131296433508396148681640625p-897 % 1.58550118131054684766922946437261998653411865234375p-281 == 1.960578049376751952337372131296433508396148681640625p-897
; [HW: 1.960578049376751952337372131296433508396148681640625p-897] 

; mpf : + 4326058945233418 -897
; mpfd: + 4326058945233418 -897 (1.85557e-270) class: Pos. norm. non-zero
; hwf : + 4326058945233418 -897 (1.85557e-270) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00001111110 #b1111010111101000011100010110101101010100001000001010)))
(assert (= y (fp #b0 #b01011100110 #b1001010111100011011001111100100101111111100001111100)))
(assert (= r (fp #b0 #b00001111110 #xf5e8716b5420a)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
