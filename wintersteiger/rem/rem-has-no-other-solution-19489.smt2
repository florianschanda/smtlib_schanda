(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = -1.03633053235633898481182768591679632663726806640625p387 {- 163618171982180 387 (-3.26668e+116)}
; Y = -1.9382893180671285637828304970753379166126251220703125p195 {- 4225679423212837 195 (-9.73347e+058)}
; -1.03633053235633898481182768591679632663726806640625p387 % -1.9382893180671285637828304970753379166126251220703125p195 == -1.870094557351233088837716422858648002147674560546875p195
; [HW: -1.870094557351233088837716422858648002147674560546875p195] 

; mpf : - 3918557524264110 195
; mpfd: - 3918557524264110 195 (-9.39102e+058) class: Neg. norm. non-zero
; hwf : - 3918557524264110 195 (-9.39102e+058) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b10110000010 #b0000100101001100111101010011000001010001000101100100)))
(assert (= y (fp #b1 #b10011000010 #b1111000000110011101110101000111101001000110100100101)))
(assert (= r (fp #b0 #b10010111110 #x175363b088770)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
