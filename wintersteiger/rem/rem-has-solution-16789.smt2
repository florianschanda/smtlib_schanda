(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = 1.2510832823549968839671464593266136944293975830078125p300 {+ 1130778576852925 300 (2.5485e+090)}
; Y = -1.633953409952937807503303702105768024921417236328125p842 {- 2855072340834306 842 (-4.79177e+253)}
; 1.2510832823549968839671464593266136944293975830078125p300 % -1.633953409952937807503303702105768024921417236328125p842 == 1.2510832823549968839671464593266136944293975830078125p300
; [HW: 1.2510832823549968839671464593266136944293975830078125p300] 

; mpf : + 1130778576852925 300
; mpfd: + 1130778576852925 300 (2.5485e+090) class: Pos. norm. non-zero
; hwf : + 1130778576852925 300 (2.5485e+090) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status sat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b10100101011 #b0100000001000110111111100111011001001001011110111101)))
(assert (= y (fp #b1 #b11101001001 #b1010001001001010110001010100101011101111100000000010)))
(assert (= r (fp #b0 #b10100101011 #x4046fe76497bd)))
(assert (= (fp.rem x y) r))
(check-sat)
(exit)
