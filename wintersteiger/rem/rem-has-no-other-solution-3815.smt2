(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to negative
; Precision: double (11/53)
; X = -1.009582291555933597493321940419264137744903564453125p687 {- 43154804680658 687 (-6.48259e+206)}
; Y = 1.2024742173529083810734618964488618075847625732421875p922 {+ 911862809822691 922 (4.26316e+277)}
; -1.009582291555933597493321940419264137744903564453125p687 % 1.2024742173529083810734618964488618075847625732421875p922 == -1.009582291555933597493321940419264137744903564453125p687
; [HW: -1.009582291555933597493321940419264137744903564453125p687] 

; mpf : - 43154804680658 687
; mpfd: - 43154804680658 687 (-6.48259e+206) class: Neg. norm. non-zero
; hwf : - 43154804680658 687 (-6.48259e+206) class: Neg. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b1 #b11010101110 #b0000001001110011111111000010110011011010011111010010)))
(assert (= y (fp #b0 #b11110011001 #b0011001111010101010110011010110111010000010111100011)))
(assert (= r (fp #b1 #b11010101110 #x0273fc2cda7d2)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
