(set-info :smt-lib-version 2.6)
(set-info :category "crafted")
(set-info :source |Christoph M. Wintersteiger (cwinter@microsoft.com). Randomly generated floating-point testcases.|)
; Rounding mode: to zero
; Precision: double (11/53)
; X = 1.3312529107570927333625832034158520400524139404296875p-994 {+ 1491830485451035 -994 (7.95142e-300)}
; Y = 1.2758854023930099597095022545545361936092376708984375p-863 {+ 1242477395414119 -863 (2.07456e-260)}
; 1.3312529107570927333625832034158520400524139404296875p-994 % 1.2758854023930099597095022545545361936092376708984375p-863 == 1.3312529107570927333625832034158520400524139404296875p-994
; [HW: 1.3312529107570927333625832034158520400524139404296875p-994] 

; mpf : + 1491830485451035 -994
; mpfd: + 1491830485451035 -994 (7.95142e-300) class: Pos. norm. non-zero
; hwf : + 1491830485451035 -994 (7.95142e-300) class: Pos. norm. non-zero

(set-logic QF_FP)
(set-info :status unsat)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-fun x () FPN)
(declare-fun y () FPN)
(declare-fun r () FPN)
(assert (= x (fp #b0 #b00000011101 #b0101010011001100111111011010001001101000000100011011)))
(assert (= y (fp #b0 #b00010100000 #b0100011010100000011011001111110010111000110001100111)))
(assert (= r (fp #b0 #b00000011101 #x54ccfda26811b)))
(assert  (not (= (fp.rem x y) r)))
(check-sat)
(exit)
