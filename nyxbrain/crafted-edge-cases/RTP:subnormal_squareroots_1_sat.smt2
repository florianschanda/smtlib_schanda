(set-info :source "Generated by Martin Brain on 2017-09-11 17:04:02+01:00 from revision 3122, file edge-cases.cpp (e9e19ccafc765b17a02ad5b1823da64784bdb15f6a6f20b565946f120425794c01655acf4691d527ae598c5ed453a1d66c9a6ec8728a695adf9acfc5091b43c9  edge-cases.cpp), benchmark subnormal_squareroots_1_sat using cbmc revision 6561 command /home/martin/working-copies/cbmc-subversion/src/cbmc//cbmc --slice-formula --smt2 --fpa --outfile tmp.smt2 --function subnormal_squareroots_1_sat --round-to-plus-inf edge-cases.cpp")
(set-logic QF_ABVFP)
(set-info :status sat)
; SMT 2

; find_symbols
(declare-fun |goto_symex::&92;guard#1| () Bool)
; convert
(define-fun |B0| () Bool |goto_symex::&92;guard#1|)

; find_symbols
(declare-fun |goto_symex::&92;guard#2| () Bool)
; convert
(define-fun |B1| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B2| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B3| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B4| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B5| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B6| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B7| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B8| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B9| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B10| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B11| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; find_symbols
(declare-fun |nondet_symex::nondet0| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::a@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet0|)

; find_symbols
(declare-fun |nondet_symex::nondet1| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::b@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet1|)

; set_to true (equal)
(define-fun |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::a2@1#2| () (_ FloatingPoint 8 24) (fp.mul roundNearestTiesToEven |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::a@1#1| |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::a@1#1|))

; set_to true (equal)
(define-fun |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::b2@1#2| () (_ FloatingPoint 8 24) (fp.mul roundNearestTiesToEven |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::b@1#1| |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::b@1#1|))

; set_to true
(assert (= |goto_symex::&92;guard#1| (not (or (not (fp.gt |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::a@1#1| (fp #b0 #b00000000 #b00000000000000000000000))) (not (fp.gt |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::b@1#1| (fp #b0 #b00000000 #b00000000000000000000000))) (not (not (fp.eq |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::a@1#1| |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::b@1#1|)))))))

; set_to true
(assert (= |goto_symex::&92;guard#2| (fp.eq |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::a2@1#2| |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::b2@1#2|)))

; set_to true (equal)
(define-fun |smtlib_isSubnormal::smtlib_isSubnormal(float)::f@1#1| () (_ FloatingPoint 8 24) |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::a2@1#2|)

; the following is a substitute for a string
(declare-fun string.0 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.0(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.0(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.0(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.0(_ bv3 64)) (_ bv105 8)))
(assert (= (select string.0(_ bv4 64)) (_ bv115 8)))
(assert (= (select string.0(_ bv5 64)) (_ bv83 8)))
(assert (= (select string.0(_ bv6 64)) (_ bv117 8)))
(assert (= (select string.0(_ bv7 64)) (_ bv98 8)))
(assert (= (select string.0(_ bv8 64)) (_ bv110 8)))
(assert (= (select string.0(_ bv9 64)) (_ bv111 8)))
(assert (= (select string.0(_ bv10 64)) (_ bv114 8)))
(assert (= (select string.0(_ bv11 64)) (_ bv109 8)))
(assert (= (select string.0(_ bv12 64)) (_ bv97 8)))
(assert (= (select string.0(_ bv13 64)) (_ bv108 8)))
(assert (= (select string.0(_ bv14 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_isSubnormal(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isSubnormal$1!0@1#2| () Bool ( fp.isSubnormal |smtlib_isSubnormal::smtlib_isSubnormal(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_isSubnormal(float)#return_value!0#1| () Bool |smtlib_isSubnormal(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isSubnormal$1!0@1#2|)

; set_to true (equal)
(define-fun |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::1::1::isSn@1#2| () Bool |smtlib_isSubnormal(float)#return_value!0#1|)

; set_to false
(assert (not (=> (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|) |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::1::1::isSn@1#2|)))

; convert
(define-fun |B12| () Bool (or (not (fp.gt |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::a@1#1| (fp #b0 #b00000000 #b00000000000000000000000))) (not (fp.gt |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::b@1#1| (fp #b0 #b00000000 #b00000000000000000000000))) (not (not (fp.eq |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::a@1#1| |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::b@1#1|)))))

; convert
(define-fun |B13| () Bool (not (fp.eq |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::a2@1#2| |subnormal_squareroots_1_sat::subnormal_squareroots_1_sat(float,float)::1::b2@1#2|)))

(check-sat)


(exit)
; end of SMT2 file
