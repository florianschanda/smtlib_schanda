(set-info :source "Generated by Martin Brain on 2017-07-10 15:36:31+01:00 from revision 2796, file rewrite-rules.cpp (c0b2da853d54cfbdc1ad49f73403e801f6652730d16a6ccd9157a6ef5270fecae2404a0241f938fc6f82c2882bcbe5c51c876f4fa19baeeceee8687cc549c740  rewrite-rules.cpp), benchmark double_divide_simulation_unsat using cbmc revision 6561 command /home/martin/working-copies/cbmc-subversion/src/cbmc//cbmc --slice-formula --smt2 --fpa --outfile tmp.smt2 --function double_divide_simulation_unsat --round-to-zero rewrite-rules.cpp")
(set-logic QF_ABVFP)
(set-info :status unsat)
; SMT 2

; find_symbols
(declare-fun |nondet_symex::nondet0| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::f@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet0|)

; find_symbols
(declare-fun |nondet_symex::nondet1| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::g@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet1|)

; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::df@1#2| () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::f@1#1|))

; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::dg@1#2| () (_ FloatingPoint 11 53) ((_ to_fp 11 53) roundNearestTiesToEven |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::g@1#1|))

; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::sum@1#2| () (_ FloatingPoint 11 53) (fp.div roundNearestTiesToEven |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::df@1#2| |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::dg@1#2|))

; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::out@1#2| () (_ FloatingPoint 8 24) ((_ to_fp 8 24) roundNearestTiesToEven |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::sum@1#2|))

; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::dir@1#2| () (_ FloatingPoint 8 24) ((_ to_fp 8 24) roundNearestTiesToEven (fp.div roundNearestTiesToEven |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::df@1#2| |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::dg@1#2|)))

; set_to true (equal)
(define-fun |smtlib_equal::smtlib_equal(float,float)::f@1#1| () (_ FloatingPoint 8 24) |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::out@1#2|)

; set_to true (equal)
(define-fun |smtlib_equal::smtlib_equal(float,float)::g@1#1| () (_ FloatingPoint 8 24) |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::dir@1#2|)

; the following is a substitute for a string
(declare-fun string.0 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.0(_ bv0 64)) (_ bv61 8)))
(assert (= (select string.0(_ bv1 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_equal(float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_equal$1!0@1#2| () Bool ( = |smtlib_equal::smtlib_equal(float,float)::f@1#1| |smtlib_equal::smtlib_equal(float,float)::g@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_equal(float,float)#return_value!0#1| () Bool |smtlib_equal(float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_equal$1!0@1#2|)

; set_to true (equal)
(define-fun |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::res@1#2| () Bool |smtlib_equal(float,float)#return_value!0#1|)

; set_to false
(assert (not |double_divide_simulation_unsat::double_divide_simulation_unsat(float,float)::1::res@1#2|))

(check-sat)


(exit)
; end of SMT2 file
