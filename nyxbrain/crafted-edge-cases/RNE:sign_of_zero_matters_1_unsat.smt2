(set-info :source "Generated by Martin Brain on 2017-07-11 16:09:33+01:00 from revision 2796, file edge-cases.cpp (4b120bd2a1986fe21b7a39c5fedd26a17da569bd481d1a75242dbf30da5d275efd5ffe0104db4c456209c4349f800bc0f6f63c396c054e124d8bb73d097227e0  edge-cases.cpp), benchmark sign_of_zero_matters_1_unsat using cbmc revision 6561 command /home/martin/working-copies/cbmc-subversion/src/cbmc//cbmc --slice-formula --smt2 --fpa --outfile tmp.smt2 --function sign_of_zero_matters_1_unsat --round-to-nearest edge-cases.cpp")
(set-logic QF_ABVFP)
(set-info :status unsat)
; SMT 2

; find_symbols
(declare-fun |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2| () Bool)
; convert
(define-fun |B0| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B1| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B2| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B3| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B4| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B5| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B6| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B7| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B8| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B9| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B10| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B11| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B12| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B13| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B14| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B15| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B16| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B17| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B18| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B19| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B20| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B21| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B22| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B23| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B24| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B25| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B26| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B27| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B28| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B29| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B30| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B31| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B32| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B33| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B34| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B35| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B36| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; convert
(define-fun |B37| () Bool |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|)

; find_symbols
(declare-fun |nondet_symex::nondet0| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::f@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet0|)

; set_to true (equal)
(define-fun |smtlib_isZero::smtlib_isZero(float)::f@1#1| () (_ FloatingPoint 8 24) |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::f@1#1|)

; the following is a substitute for a string
(declare-fun string.0 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.0(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.0(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.0(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.0(_ bv3 64)) (_ bv105 8)))
(assert (= (select string.0(_ bv4 64)) (_ bv115 8)))
(assert (= (select string.0(_ bv5 64)) (_ bv90 8)))
(assert (= (select string.0(_ bv6 64)) (_ bv101 8)))
(assert (= (select string.0(_ bv7 64)) (_ bv114 8)))
(assert (= (select string.0(_ bv8 64)) (_ bv111 8)))
(assert (= (select string.0(_ bv9 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_isZero(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isZero$1!0@1#2| () Bool ( fp.isZero |smtlib_isZero::smtlib_isZero(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_isZero(float)#return_value!0#1| () Bool |smtlib_isZero(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isZero$1!0@1#2|)

; set_to true
(assert (= |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2| |smtlib_isZero(float)#return_value!0#1|))

; set_to true (equal)
(define-fun |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::div@1#2| () (_ FloatingPoint 8 24) (fp.div roundNearestTiesToEven (fp #b0 #b01111111 #b00000000000000000000000) |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::f@1#1|))

; set_to true (equal)
(define-fun |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::sum@1#2| () (_ FloatingPoint 8 24) (fp.add roundNearestTiesToEven |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::div@1#2| (_ +oo 8 24)))

; set_to true (equal)
(define-fun |smtlib_isPositive::smtlib_isPositive(float)::f@1#1| () (_ FloatingPoint 8 24) |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::f@1#1|)

; the following is a substitute for a string
(declare-fun string.1 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.1(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.1(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.1(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.1(_ bv3 64)) (_ bv105 8)))
(assert (= (select string.1(_ bv4 64)) (_ bv115 8)))
(assert (= (select string.1(_ bv5 64)) (_ bv80 8)))
(assert (= (select string.1(_ bv6 64)) (_ bv111 8)))
(assert (= (select string.1(_ bv7 64)) (_ bv115 8)))
(assert (= (select string.1(_ bv8 64)) (_ bv105 8)))
(assert (= (select string.1(_ bv9 64)) (_ bv116 8)))
(assert (= (select string.1(_ bv10 64)) (_ bv105 8)))
(assert (= (select string.1(_ bv11 64)) (_ bv118 8)))
(assert (= (select string.1(_ bv12 64)) (_ bv101 8)))
(assert (= (select string.1(_ bv13 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_isPositive(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isPositive$1!0@1#2| () Bool ( fp.isPositive |smtlib_isPositive::smtlib_isPositive(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_isPositive(float)#return_value!0#1| () Bool |smtlib_isPositive(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isPositive$1!0@1#2|)

; set_to true (equal)
(define-fun |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::fpos@1#2| () Bool |smtlib_isPositive(float)#return_value!0#1|)

; set_to true (equal)
(define-fun |smtlib_isInfinite::smtlib_isInfinite(float)::f@1#1| () (_ FloatingPoint 8 24) |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::sum@1#2|)

; the following is a substitute for a string
(declare-fun string.2 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.2(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.2(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.2(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.2(_ bv3 64)) (_ bv105 8)))
(assert (= (select string.2(_ bv4 64)) (_ bv115 8)))
(assert (= (select string.2(_ bv5 64)) (_ bv73 8)))
(assert (= (select string.2(_ bv6 64)) (_ bv110 8)))
(assert (= (select string.2(_ bv7 64)) (_ bv102 8)))
(assert (= (select string.2(_ bv8 64)) (_ bv105 8)))
(assert (= (select string.2(_ bv9 64)) (_ bv110 8)))
(assert (= (select string.2(_ bv10 64)) (_ bv105 8)))
(assert (= (select string.2(_ bv11 64)) (_ bv116 8)))
(assert (= (select string.2(_ bv12 64)) (_ bv101 8)))
(assert (= (select string.2(_ bv13 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_isInfinite(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isInfinite$1!0@1#2| () Bool ( fp.isInfinite |smtlib_isInfinite::smtlib_isInfinite(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_isInfinite(float)#return_value!0#1| () Bool |smtlib_isInfinite(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isInfinite$1!0@1#2|)

; set_to true (equal)
(define-fun |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::suminf@1#2| () Bool |smtlib_isInfinite(float)#return_value!0#1|)

; set_to true (equal)
(define-fun |smtlib_isNaN::smtlib_isNaN(float)::f@1#1| () (_ FloatingPoint 8 24) |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::sum@1#2|)

; the following is a substitute for a string
(declare-fun string.3 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.3(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.3(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.3(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.3(_ bv3 64)) (_ bv105 8)))
(assert (= (select string.3(_ bv4 64)) (_ bv115 8)))
(assert (= (select string.3(_ bv5 64)) (_ bv78 8)))
(assert (= (select string.3(_ bv6 64)) (_ bv97 8)))
(assert (= (select string.3(_ bv7 64)) (_ bv78 8)))
(assert (= (select string.3(_ bv8 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_isNaN(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isNaN$1!0@1#2| () Bool ( fp.isNaN |smtlib_isNaN::smtlib_isNaN(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_isNaN(float)#return_value!0#1| () Bool |smtlib_isNaN(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isNaN$1!0@1#2|)

; set_to true (equal)
(define-fun |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::sumnan@1#2| () Bool |smtlib_isNaN(float)#return_value!0#1|)

; convert
(define-fun |B38| () Bool (=> true (=> |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2| (or |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::suminf@1#2| |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::sumnan@1#2|))))

; convert
(define-fun |B39| () Bool (=> true (=> |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2| (= |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::fpos@1#2| |sign_of_zero_matters_1_unsat::sign_of_zero_matters_1_unsat(float)::1::1::suminf@1#2|))))

; set_to true
(assert (or (not |B38|) (not |B39|)))

; convert
(define-fun |B40| () Bool (not |sign_of_zero_matters_1_unsat(float)::$tmp::return_value_smtlib_isZero$2!0@1#2|))

(check-sat)


(exit)
; end of SMT2 file
