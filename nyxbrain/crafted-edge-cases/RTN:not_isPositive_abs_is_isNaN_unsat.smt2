(set-info :source "Generated by Martin Brain on 2017-07-10 15:36:26+01:00 from revision 2796, file rewrite-rules.cpp (c0b2da853d54cfbdc1ad49f73403e801f6652730d16a6ccd9157a6ef5270fecae2404a0241f938fc6f82c2882bcbe5c51c876f4fa19baeeceee8687cc549c740  rewrite-rules.cpp), benchmark not_isPositive_abs_is_isNaN_unsat using cbmc revision 6561 command /home/martin/working-copies/cbmc-subversion/src/cbmc//cbmc --slice-formula --smt2 --fpa --outfile tmp.smt2 --function not_isPositive_abs_is_isNaN_unsat --round-to-minus-inf rewrite-rules.cpp")
(set-logic QF_ABVFP)
(set-info :status unsat)
; SMT 2

; find_symbols
(declare-fun |nondet_symex::nondet0| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |not_isPositive_abs_is_isNaN_unsat::not_isPositive_abs_is_isNaN_unsat(float)::f@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet0|)

; set_to true (equal)
(define-fun |smtlib_abs::smtlib_abs(float)::f@1#1| () (_ FloatingPoint 8 24) |not_isPositive_abs_is_isNaN_unsat::not_isPositive_abs_is_isNaN_unsat(float)::f@1#1|)

; the following is a substitute for a string
(declare-fun string.0 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.0(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.0(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.0(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.0(_ bv3 64)) (_ bv97 8)))
(assert (= (select string.0(_ bv4 64)) (_ bv98 8)))
(assert (= (select string.0(_ bv5 64)) (_ bv115 8)))
(assert (= (select string.0(_ bv6 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_abs(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_abs$1!0@1#2| () (_ FloatingPoint 8 24) ( fp.abs |smtlib_abs::smtlib_abs(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_abs(float)#return_value!0#1| () (_ FloatingPoint 8 24) |smtlib_abs(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_abs$1!0@1#2|)

; set_to true (equal)
(define-fun |not_isPositive_abs_is_isNaN_unsat(float)::$tmp::return_value_smtlib_abs$1!0@1#2| () (_ FloatingPoint 8 24) |smtlib_abs(float)#return_value!0#1|)

; set_to true (equal)
(define-fun |smtlib_isPositive::smtlib_isPositive(float)::f@1#1| () (_ FloatingPoint 8 24) |not_isPositive_abs_is_isNaN_unsat(float)::$tmp::return_value_smtlib_abs$1!0@1#2|)

; the following is a substitute for a string
(declare-fun string.1 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.1(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.1(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.1(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.1(_ bv3 64)) (_ bv105 8)))
(assert (= (select string.1(_ bv4 64)) (_ bv115 8)))
(assert (= (select string.1(_ bv5 64)) (_ bv80 8)))
(assert (= (select string.1(_ bv6 64)) (_ bv111 8)))
(assert (= (select string.1(_ bv7 64)) (_ bv115 8)))
(assert (= (select string.1(_ bv8 64)) (_ bv105 8)))
(assert (= (select string.1(_ bv9 64)) (_ bv116 8)))
(assert (= (select string.1(_ bv10 64)) (_ bv105 8)))
(assert (= (select string.1(_ bv11 64)) (_ bv118 8)))
(assert (= (select string.1(_ bv12 64)) (_ bv101 8)))
(assert (= (select string.1(_ bv13 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_isPositive(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isPositive$1!0@1#2| () Bool ( fp.isPositive |smtlib_isPositive::smtlib_isPositive(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_isPositive(float)#return_value!0#1| () Bool |smtlib_isPositive(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isPositive$1!0@1#2|)

; set_to true (equal)
(define-fun |not_isPositive_abs_is_isNaN_unsat::not_isPositive_abs_is_isNaN_unsat(float)::1::abs@1#2| () Bool |smtlib_isPositive(float)#return_value!0#1|)

; set_to true (equal)
(define-fun |smtlib_isNaN::smtlib_isNaN(float)::f@1#1| () (_ FloatingPoint 8 24) |not_isPositive_abs_is_isNaN_unsat::not_isPositive_abs_is_isNaN_unsat(float)::f@1#1|)

; the following is a substitute for a string
(declare-fun string.2 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.2(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.2(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.2(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.2(_ bv3 64)) (_ bv105 8)))
(assert (= (select string.2(_ bv4 64)) (_ bv115 8)))
(assert (= (select string.2(_ bv5 64)) (_ bv78 8)))
(assert (= (select string.2(_ bv6 64)) (_ bv97 8)))
(assert (= (select string.2(_ bv7 64)) (_ bv78 8)))
(assert (= (select string.2(_ bv8 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_isNaN(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isNaN$1!0@1#2| () Bool ( fp.isNaN |smtlib_isNaN::smtlib_isNaN(float)::f@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_isNaN(float)#return_value!0#1| () Bool |smtlib_isNaN(float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_isNaN$1!0@1#2|)

; set_to true (equal)
(define-fun |not_isPositive_abs_is_isNaN_unsat::not_isPositive_abs_is_isNaN_unsat(float)::1::NaN@1#2| () Bool |smtlib_isNaN(float)#return_value!0#1|)

; set_to false
(assert (not (= (not |not_isPositive_abs_is_isNaN_unsat::not_isPositive_abs_is_isNaN_unsat(float)::1::abs@1#2|) |not_isPositive_abs_is_isNaN_unsat::not_isPositive_abs_is_isNaN_unsat(float)::1::NaN@1#2|)))

(check-sat)


(exit)
; end of SMT2 file
