(set-info :source "Generated by Martin Brain on 2017-09-11 17:03:36+01:00 from revision 3122, file edge-cases.cpp (e9e19ccafc765b17a02ad5b1823da64784bdb15f6a6f20b565946f120425794c01655acf4691d527ae598c5ed453a1d66c9a6ec8728a695adf9acfc5091b43c9  edge-cases.cpp), benchmark the_difference_of_two_squares_6_sat using cbmc revision 6561 command /home/martin/working-copies/cbmc-subversion/src/cbmc//cbmc --slice-formula --smt2 --fpa --outfile tmp.smt2 --function the_difference_of_two_squares_6_sat --round-to-minus-inf edge-cases.cpp")
(set-logic QF_ABVFP)
(set-info :status sat)
; SMT 2

; find_symbols
(declare-fun |nondet_symex::nondet0| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::f@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet0|)

; find_symbols
(declare-fun |nondet_symex::nondet1| () (_ FloatingPoint 8 24))
; set_to true (equal)
(define-fun |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::g@1#1| () (_ FloatingPoint 8 24) |nondet_symex::nondet1|)

; set_to true (equal)
(define-fun |fmaLeft::fmaLeft(float,float)::f@1#1| () (_ FloatingPoint 8 24) |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::f@1#1|)

; set_to true (equal)
(define-fun |fmaLeft::fmaLeft(float,float)::g@1#1| () (_ FloatingPoint 8 24) |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::g@1#1|)

; set_to true (equal)
(define-fun |fmaLeft::fmaLeft(float,float)::1::g2@1#2| () (_ FloatingPoint 8 24) (fp.mul roundNearestTiesToEven |fmaLeft::fmaLeft(float,float)::g@1#1| |fmaLeft::fmaLeft(float,float)::g@1#1|))

; set_to true (equal)
(define-fun |smtlib_fma::smtlib_fma(float,float,float)::f@1#1| () (_ FloatingPoint 8 24) |fmaLeft::fmaLeft(float,float)::f@1#1|)

; set_to true (equal)
(define-fun |smtlib_fma::smtlib_fma(float,float,float)::g@1#1| () (_ FloatingPoint 8 24) |fmaLeft::fmaLeft(float,float)::f@1#1|)

; set_to true (equal)
(define-fun |smtlib_fma::smtlib_fma(float,float,float)::h@1#1| () (_ FloatingPoint 8 24) (fp.neg |fmaLeft::fmaLeft(float,float)::1::g2@1#2|))

; the following is a substitute for a string
(declare-fun string.0 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.0(_ bv0 64)) (_ bv102 8)))
(assert (= (select string.0(_ bv1 64)) (_ bv112 8)))
(assert (= (select string.0(_ bv2 64)) (_ bv46 8)))
(assert (= (select string.0(_ bv3 64)) (_ bv102 8)))
(assert (= (select string.0(_ bv4 64)) (_ bv109 8)))
(assert (= (select string.0(_ bv5 64)) (_ bv97 8)))
(assert (= (select string.0(_ bv6 64)) (_ bv32 8)))
(assert (= (select string.0(_ bv7 64)) (_ bv82 8)))
(assert (= (select string.0(_ bv8 64)) (_ bv78 8)))
(assert (= (select string.0(_ bv9 64)) (_ bv69 8)))
(assert (= (select string.0(_ bv10 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_fma(float,float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_fma$1!0@1#2| () (_ FloatingPoint 8 24) ( fp.fma RNE |smtlib_fma::smtlib_fma(float,float,float)::f@1#1| |smtlib_fma::smtlib_fma(float,float,float)::g@1#1| |smtlib_fma::smtlib_fma(float,float,float)::h@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_fma(float,float,float)#return_value!0#1| () (_ FloatingPoint 8 24) |smtlib_fma(float,float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_fma$1!0@1#2|)

; set_to true (equal)
(define-fun |fmaLeft::fmaLeft(float,float)::1::fma@1#2| () (_ FloatingPoint 8 24) |smtlib_fma(float,float,float)#return_value!0#1|)

; set_to true (equal)
(define-fun |fmaLeft(float,float)#return_value!0#1| () (_ FloatingPoint 8 24) |fmaLeft::fmaLeft(float,float)::1::fma@1#2|)

; set_to true (equal)
(define-fun |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::1::one@1#2| () (_ FloatingPoint 8 24) |fmaLeft(float,float)#return_value!0#1|)

; set_to true (equal)
(define-fun |fmaRight::fmaRight(float,float)::f@1#1| () (_ FloatingPoint 8 24) |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::f@1#1|)

; set_to true (equal)
(define-fun |fmaRight::fmaRight(float,float)::g@1#1| () (_ FloatingPoint 8 24) |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::g@1#1|)

; set_to true (equal)
(define-fun |fmaRight::fmaRight(float,float)::1::f2@1#2| () (_ FloatingPoint 8 24) (fp.mul roundNearestTiesToEven |fmaRight::fmaRight(float,float)::f@1#1| |fmaRight::fmaRight(float,float)::f@1#1|))

; set_to true (equal)
(define-fun |smtlib_fma::smtlib_fma(float,float,float)::f@2#1| () (_ FloatingPoint 8 24) (fp.neg |fmaRight::fmaRight(float,float)::g@1#1|))

; set_to true (equal)
(define-fun |smtlib_fma::smtlib_fma(float,float,float)::g@2#1| () (_ FloatingPoint 8 24) |fmaRight::fmaRight(float,float)::g@1#1|)

; set_to true (equal)
(define-fun |smtlib_fma::smtlib_fma(float,float,float)::h@2#1| () (_ FloatingPoint 8 24) |fmaRight::fmaRight(float,float)::1::f2@1#2|)

; set_to true (equal)
(define-fun |smtlib_fma(float,float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_fma$1!0@2#2| () (_ FloatingPoint 8 24) ( fp.fma RNE |smtlib_fma::smtlib_fma(float,float,float)::f@2#1| |smtlib_fma::smtlib_fma(float,float,float)::g@2#1| |smtlib_fma::smtlib_fma(float,float,float)::h@2#1| ) )

; set_to true (equal)
(define-fun |smtlib_fma(float,float,float)#return_value!0#3| () (_ FloatingPoint 8 24) |smtlib_fma(float,float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_fma$1!0@2#2|)

; set_to true (equal)
(define-fun |fmaRight::fmaRight(float,float)::1::fma@1#2| () (_ FloatingPoint 8 24) |smtlib_fma(float,float,float)#return_value!0#3|)

; set_to true (equal)
(define-fun |fmaRight(float,float)#return_value!0#1| () (_ FloatingPoint 8 24) |fmaRight::fmaRight(float,float)::1::fma@1#2|)

; set_to true (equal)
(define-fun |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::1::two@1#2| () (_ FloatingPoint 8 24) |fmaRight(float,float)#return_value!0#1|)

; set_to true (equal)
(define-fun |smtlib_equal::smtlib_equal(float,float)::f@1#1| () (_ FloatingPoint 8 24) |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::1::one@1#2|)

; set_to true (equal)
(define-fun |smtlib_equal::smtlib_equal(float,float)::g@1#1| () (_ FloatingPoint 8 24) |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::1::two@1#2|)

; the following is a substitute for a string
(declare-fun string.1 () (Array (_ BitVec 64) (_ BitVec 8)))
(assert (= (select string.1(_ bv0 64)) (_ bv61 8)))
(assert (= (select string.1(_ bv1 64)) (_ bv0 8)))
; set_to true (equal)
(define-fun |smtlib_equal(float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_equal$1!0@1#2| () Bool ( = |smtlib_equal::smtlib_equal(float,float)::f@1#1| |smtlib_equal::smtlib_equal(float,float)::g@1#1| ) )

; set_to true (equal)
(define-fun |smtlib_equal(float,float)#return_value!0#1| () Bool |smtlib_equal(float,float)::$tmp::return_value___CPROVER_uninterpreted_smt_escape_float_equal$1!0@1#2|)

; set_to true (equal)
(define-fun |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::1::res@1#2| () Bool |smtlib_equal(float,float)#return_value!0#1|)

; set_to false
(assert (not |the_difference_of_two_squares_6_sat::the_difference_of_two_squares_6_sat(float,float)::1::res@1#2|))

(check-sat)


(exit)
; end of SMT2 file
