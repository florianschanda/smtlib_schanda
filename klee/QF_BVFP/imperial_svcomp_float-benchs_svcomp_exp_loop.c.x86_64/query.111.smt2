(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_exp_loop.c.x86_64/query.111.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun symbolic_0_float_ackermann!0 () (_ BitVec 32))
(assert
 (fp.geq ((_ to_fp 11 53) roundNearestTiesToEven ((_ to_fp 8 24) symbolic_0_float_ackermann!0)) ((_ to_fp 11 53) (_ bv4457293557087583675 64))))
(assert
 (let ((?x8 ((_ to_fp 8 24) symbolic_0_float_ackermann!0)))
 (fp.leq ?x8 ((_ to_fp 8 24) (_ bv1343554297 32)))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.lt ((_ to_fp 8 24) symbolic_0_float_ackermann!0) ((_ to_fp 8 24) (_ bv1065353216 32)))))
(assert
 (not (fp.lt ((_ to_fp 8 24) symbolic_0_float_ackermann!0) ((_ to_fp 8 24) (_ bv1073741824 32)))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1082130432 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1090519040 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1098907648 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1107296256 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1115684864 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1124073472 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1132462080 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1140850688 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1149239296 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1157627904 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1166016512 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1174405120 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1182793728 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1191182336 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1199570944 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1207959552 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1216348160 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1224736768 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1233125376 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1241513984 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1249902592 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1258291200 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1266679808 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1275068416 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1283457024 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1291845632 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1300234240 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1308622848 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1317011456 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1325400064 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1333788672 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1342177280 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(assert
 (not (fp.gt ((_ to_fp 8 24) (_ bv1350565888 32)) ((_ to_fp 8 24) symbolic_0_float_ackermann!0))))
(check-sat)
(exit)
