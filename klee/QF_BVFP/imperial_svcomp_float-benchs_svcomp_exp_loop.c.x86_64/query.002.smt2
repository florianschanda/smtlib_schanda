(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_exp_loop.c.x86_64/query.002.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun symbolic_0_float_ackermann!0 () (_ BitVec 32))
(assert
 (fp.geq ((_ to_fp 11 53) roundNearestTiesToEven ((_ to_fp 8 24) symbolic_0_float_ackermann!0)) ((_ to_fp 11 53) (_ bv4457293557087583675 64))))
(assert
 (let ((?x8 ((_ to_fp 8 24) symbolic_0_float_ackermann!0)))
 (fp.leq ?x8 ((_ to_fp 8 24) (_ bv1343554297 32)))))
(assert
 (let (($x23 (and (not (fp.isNaN ((_ to_fp 8 24) symbolic_0_float_ackermann!0))) (not (fp.lt ((_ to_fp 8 24) symbolic_0_float_ackermann!0) ((_ to_fp 8 24) (_ bv0 32)))))))
(not $x23)))
(check-sat)
(exit)
