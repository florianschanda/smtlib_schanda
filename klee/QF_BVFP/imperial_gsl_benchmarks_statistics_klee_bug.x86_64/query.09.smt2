(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_gsl_benchmarks_statistics_klee_bug.x86_64/query.09.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun data_ackermann!0 () (_ BitVec 64))
(declare-fun data_ackermann!1 () (_ BitVec 64))
(assert
 (let ((?x9 ((_ to_fp 11 53) data_ackermann!0)))
 (fp.geq ?x9 ((_ to_fp 11 53) (_ bv4621819117588971520 64)))))
(assert
 (let ((?x9 ((_ to_fp 11 53) data_ackermann!0)))
 (fp.leq ?x9 ((_ to_fp 11 53) (_ bv4626322717216342016 64)))))
(assert
 (let ((?x24 (ite (fp.gt ((_ to_fp 11 53) (_ bv4625787914760591770 64)) ((_ to_fp 11 53) data_ackermann!0)) (_ bv4625787914760591770 64) data_ackermann!0)))
 (let ((?x27 (ite (fp.gt ((_ to_fp 11 53) data_ackermann!1) ((_ to_fp 11 53) ?x24)) data_ackermann!1 ?x24)))
 (let ((?x30 (ite (fp.gt ((_ to_fp 11 53) (_ bv4625844209755933901 64)) ((_ to_fp 11 53) ?x27)) (_ bv4625844209755933901 64) ?x27)))
 (let (($x36 (fp.gt ((_ to_fp 11 53) (ite (fp.gt ((_ to_fp 11 53) (_ bv4623282787467866931 64)) ((_ to_fp 11 53) ?x30)) (_ bv4623282787467866931 64) ?x30)) ((_ to_fp 11 53) (_ bv4626322717216342016 64)))))
 (or (fp.isNaN ((_ to_fp 11 53) (ite (fp.gt ((_ to_fp 11 53) (_ bv4623282787467866931 64)) ((_ to_fp 11 53) ?x30)) (_ bv4623282787467866931 64) ?x30))) $x36))))))
(assert
 (not (fp.isNaN ((_ to_fp 11 53) data_ackermann!1))))
(assert
 (not false))
(check-sat)
(exit)
