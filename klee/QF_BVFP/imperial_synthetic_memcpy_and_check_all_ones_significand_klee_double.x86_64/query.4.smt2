(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_synthetic_memcpy_and_check_all_ones_significand_klee_double.x86_64/query.4.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun fresh_to_ieee_bv_!1 () (_ BitVec 64))
(declare-fun f_ackermann!0 () (_ BitVec 64))
(assert
 (not (= (_ bv9218868437227405312 64) (bvand fresh_to_ieee_bv_!1 (_ bv9218868437227405312 64)))))
(assert
 (let ((?x13 (fp.add roundNearestTiesToEven ((_ to_fp 11 53) f_ackermann!0) ((_ to_fp 11 53) (_ bv4607182418800017408 64)))))
 (= ?x13 ((_ to_fp 11 53) fresh_to_ieee_bv_!1))))
(assert
 (let ((?x13 (fp.add roundNearestTiesToEven ((_ to_fp 11 53) f_ackermann!0) ((_ to_fp 11 53) (_ bv4607182418800017408 64)))))
(let ((?x28 (bvand (bvxor (_ bv1 32) (ite (fp.isInfinite ?x13) (_ bv1 32) (_ bv0 32))) (bvxor (_ bv1 32) (ite (fp.isNaN ?x13) (_ bv1 32) (_ bv0 32))))))
(not (not (= (_ bv0 32) ?x28))))))
(check-sat)
(exit)
