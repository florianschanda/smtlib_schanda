(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_synthetic_count_klee_bug.x86_64/query.81.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun start_ackermann!0 () (_ BitVec 32))
(declare-fun end_ackermann!1 () (_ BitVec 32))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) start_ackermann!0))))
(assert
 (not (fp.eq ((_ to_fp 8 24) start_ackermann!0) ((_ to_fp 8 24) end_ackermann!1))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) end_ackermann!1))))
(assert
 (not (fp.gt ((_ to_fp 8 24) start_ackermann!0) ((_ to_fp 8 24) end_ackermann!1))))
(assert
 (not (fp.lt ((_ to_fp 8 24) start_ackermann!0) ((_ to_fp 8 24) (_ bv1065353216 32)))))
(assert
 (not (fp.gt ((_ to_fp 8 24) end_ackermann!1) ((_ to_fp 8 24) (_ bv1065353300 32)))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv1 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv2 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv3 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv4 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv5 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv6 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv7 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv8 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv9 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv10 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv11 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv12 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv13 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv14 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv15 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv16 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv17 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv18 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv19 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv20 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv21 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv22 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv23 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv24 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv25 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv26 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv27 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv28 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv29 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv30 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv31 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv32 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv33 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv34 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv35 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv36 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv37 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv38 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv39 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv40 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv41 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv42 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv43 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv44 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv45 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv46 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv47 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv48 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv49 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv50 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv51 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv52 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv53 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv54 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv55 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv56 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv57 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv58 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv59 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv60 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv61 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv62 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv63 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv64 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv65 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv66 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv67 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv68 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv69 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv70 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv71 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv72 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv73 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv74 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv75 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv76 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
 (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv77 32) start_ackermann!0)) ?x12))))
(assert
 (let ((?x12 ((_ to_fp 8 24) end_ackermann!1)))
(not (not (fp.eq ((_ to_fp 8 24) (bvadd (_ bv78 32) start_ackermann!0)) ?x12)))))
(check-sat)
(exit)
