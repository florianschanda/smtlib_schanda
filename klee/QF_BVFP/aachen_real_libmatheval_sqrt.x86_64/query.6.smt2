(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/aachen_real_libmatheval_sqrt.x86_64/query.6.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun y_ackermann!1 () (_ BitVec 64))
(declare-fun x_ackermann!0 () (_ BitVec 64))
(assert
 (let ((?x11 ((_ to_fp 11 53) (_ bv0 64))))
 (let ((?x9 ((_ to_fp 11 53) y_ackermann!1)))
 (fp.geq ?x9 ?x11))))
(assert
 (let ((?x9 ((_ to_fp 11 53) y_ackermann!1)))
 (let ((?x13 ((_ to_fp 11 53) x_ackermann!0)))
 (fp.geq ?x13 ?x9))))
(assert
 (not (fp.isNaN ((_ to_fp 11 53) x_ackermann!0))))
(assert
 (not (fp.isNaN ((_ to_fp 11 53) y_ackermann!1))))
(assert
 (let ((?x25 (ite (fp.isInfinite ((_ to_fp 11 53) x_ackermann!0)) (ite (fp.gt ((_ to_fp 11 53) x_ackermann!0) ((_ to_fp 11 53) (_ bv0 64))) (_ bv1 32) (_ bv4294967295 32)) (_ bv0 32))))
 (= (_ bv0 32) ?x25)))
(assert
 (let ((?x11 ((_ to_fp 11 53) (_ bv0 64))))
 (let ((?x13 ((_ to_fp 11 53) x_ackermann!0)))
 (fp.geq ?x13 ?x11))))
(assert
 (let ((?x31 (ite (fp.isInfinite ((_ to_fp 11 53) y_ackermann!1)) (ite (fp.gt ((_ to_fp 11 53) y_ackermann!1) ((_ to_fp 11 53) (_ bv0 64))) (_ bv1 32) (_ bv4294967295 32)) (_ bv0 32))))
(not (= (_ bv0 32) ?x31))))
(check-sat)
(exit)
