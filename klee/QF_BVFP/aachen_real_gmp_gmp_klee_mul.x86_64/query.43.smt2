(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/aachen_real_gmp_gmp_klee_mul.x86_64/query.43.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun d1_ackermann!0 () (_ BitVec 64))
(declare-fun d2_ackermann!1 () (_ BitVec 64))
(assert
 (let ((?x9 ((_ to_fp 11 53) d1_ackermann!0)))
 (fp.geq ?x9 ((_ to_fp 11 53) (_ bv4607182418800017408 64)))))
(assert
 (let ((?x9 ((_ to_fp 11 53) d1_ackermann!0)))
 (fp.leq ?x9 ((_ to_fp 11 53) (_ bv4611686018427387904 64)))))
(assert
 (let ((?x16 ((_ to_fp 11 53) d2_ackermann!1)))
 (fp.gt ?x16 ((_ to_fp 11 53) (_ bv4607182418800017408 64)))))
(assert
 (let ((?x16 ((_ to_fp 11 53) d2_ackermann!1)))
 (fp.lt ?x16 ((_ to_fp 11 53) (_ bv4611686018427387904 64)))))
(assert
 (let ((?x32 (ite (fp.lt ((_ to_fp 11 53) d1_ackermann!0) ((_ to_fp 11 53) (_ bv0 64))) (_ bv4294967294 32) (_ bv2 32))))
(let ((?x34 ((_ sign_extend 32) ?x32)))
(let ((?x26 (ite (fp.lt ((_ to_fp 11 53) d2_ackermann!1) ((_ to_fp 11 53) (_ bv0 64))) (_ bv4294967294 32) (_ bv2 32))))
(let ((?x28 ((_ sign_extend 32) ?x26)))
(let ((?x37 (bvadd (ite (bvslt (_ bv4294967295 32) ?x26) ?x28 (bvsub (_ bv0 64) ?x28)) (ite (bvslt (_ bv4294967295 32) ?x32) ?x34 (bvsub (_ bv0 64) ?x34)))))
(not (bvult (bvmul (_ bv8 64) (bvadd (_ bv18446744073709551615 64) ?x37)) (_ bv25 64)))))))))
(check-sat)
(exit)
