(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/aachen_real_gmp_gmp_klee_integer.x86_64/query.10.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun d_ackermann!0 () (_ BitVec 64))
(assert
 (fp.lt ((_ to_fp 11 53) d_ackermann!0) ((_ to_fp 11 53) (_ bv4613937818241073152 64))))
(assert
 (fp.gt ((_ to_fp 11 53) d_ackermann!0) ((_ to_fp 11 53) (_ bv4607182418800017408 64))))
(assert
 (let ((?x35 (concat ((_ extract 0 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 63))))
(let ((?x28 ((_ extract 31 0) (bvadd (_ bv3074 64) (bvand (concat (_ bv0 52) ((_ extract 63 52) d_ackermann!0)) (_ bv2047 64))))))
(let ((?x32 (concat (_ bv0 32) (bvand ?x28 (_ bv63 32)))))
(let ((?x41 (concat ((_ extract 1 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 62))))
(let ((?x47 (concat ((_ extract 2 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 61))))
(let ((?x50 (ite (= ?x32 (_ bv61 64)) ?x47 (ite (= ?x32 (_ bv62 64)) ?x41 (ite (= ?x32 (_ bv63 64)) ?x35 (_ bv0 64))))))
(let ((?x53 (concat ((_ extract 3 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 60))))
(let ((?x59 (concat ((_ extract 4 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 59))))
(let ((?x65 (concat ((_ extract 5 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 58))))
(let ((?x68 (ite (= ?x32 (_ bv58 64)) ?x65 (ite (= ?x32 (_ bv59 64)) ?x59 (ite (= ?x32 (_ bv60 64)) ?x53 ?x50)))))
(let ((?x71 (concat ((_ extract 6 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 57))))
(let ((?x77 (concat ((_ extract 7 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 56))))
(let ((?x83 (concat ((_ extract 8 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 55))))
(let ((?x86 (ite (= ?x32 (_ bv55 64)) ?x83 (ite (= ?x32 (_ bv56 64)) ?x77 (ite (= ?x32 (_ bv57 64)) ?x71 ?x68)))))
(let ((?x89 (concat ((_ extract 9 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 54))))
(let ((?x95 (concat ((_ extract 10 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 53))))
(let ((?x100 (concat ((_ extract 11 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 52))))
(let ((?x103 (ite (= ?x32 (_ bv52 64)) ?x100 (ite (= ?x32 (_ bv53 64)) ?x95 (ite (= ?x32 (_ bv54 64)) ?x89 ?x86)))))
(let ((?x106 (concat ((_ extract 12 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 51))))
(let ((?x112 (concat ((_ extract 13 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 50))))
(let ((?x118 (concat ((_ extract 14 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 49))))
(let ((?x121 (ite (= ?x32 (_ bv49 64)) ?x118 (ite (= ?x32 (_ bv50 64)) ?x112 (ite (= ?x32 (_ bv51 64)) ?x106 ?x103)))))
(let ((?x124 (concat ((_ extract 15 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 48))))
(let ((?x130 (concat ((_ extract 16 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 47))))
(let ((?x136 (concat ((_ extract 17 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 46))))
(let ((?x139 (ite (= ?x32 (_ bv46 64)) ?x136 (ite (= ?x32 (_ bv47 64)) ?x130 (ite (= ?x32 (_ bv48 64)) ?x124 ?x121)))))
(let ((?x142 (concat ((_ extract 18 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 45))))
(let ((?x148 (concat ((_ extract 19 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 44))))
(let ((?x154 (concat ((_ extract 20 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 43))))
(let ((?x157 (ite (= ?x32 (_ bv43 64)) ?x154 (ite (= ?x32 (_ bv44 64)) ?x148 (ite (= ?x32 (_ bv45 64)) ?x142 ?x139)))))
(let ((?x160 (concat ((_ extract 21 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 42))))
(let ((?x166 (concat ((_ extract 22 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 41))))
(let ((?x172 (concat ((_ extract 23 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 40))))
(let ((?x175 (ite (= ?x32 (_ bv40 64)) ?x172 (ite (= ?x32 (_ bv41 64)) ?x166 (ite (= ?x32 (_ bv42 64)) ?x160 ?x157)))))
(let ((?x178 (concat ((_ extract 24 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 39))))
(let ((?x184 (concat ((_ extract 25 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 38))))
(let ((?x190 (concat ((_ extract 26 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 37))))
(let ((?x193 (ite (= ?x32 (_ bv37 64)) ?x190 (ite (= ?x32 (_ bv38 64)) ?x184 (ite (= ?x32 (_ bv39 64)) ?x178 ?x175)))))
(let ((?x196 (concat ((_ extract 27 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 36))))
(let ((?x202 (concat ((_ extract 28 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 35))))
(let ((?x208 (concat ((_ extract 29 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 34))))
(let ((?x211 (ite (= ?x32 (_ bv34 64)) ?x208 (ite (= ?x32 (_ bv35 64)) ?x202 (ite (= ?x32 (_ bv36 64)) ?x196 ?x193)))))
(let ((?x214 (concat ((_ extract 30 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 33))))
(let ((?x219 (concat ((_ extract 31 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 32))))
(let ((?x225 (concat ((_ extract 32 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 31))))
(let ((?x228 (ite (= ?x32 (_ bv31 64)) ?x225 (ite (= ?x32 (_ bv32 64)) ?x219 (ite (= ?x32 (_ bv33 64)) ?x214 ?x211)))))
(let ((?x231 (concat ((_ extract 33 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 30))))
(let ((?x237 (concat ((_ extract 34 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 29))))
(let ((?x243 (concat ((_ extract 35 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 28))))
(let ((?x246 (ite (= ?x32 (_ bv28 64)) ?x243 (ite (= ?x32 (_ bv29 64)) ?x237 (ite (= ?x32 (_ bv30 64)) ?x231 ?x228)))))
(let ((?x249 (concat ((_ extract 36 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 27))))
(let ((?x255 (concat ((_ extract 37 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 26))))
(let ((?x261 (concat ((_ extract 38 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 25))))
(let ((?x264 (ite (= ?x32 (_ bv25 64)) ?x261 (ite (= ?x32 (_ bv26 64)) ?x255 (ite (= ?x32 (_ bv27 64)) ?x249 ?x246)))))
(let ((?x267 (concat ((_ extract 39 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 24))))
(let ((?x273 (concat ((_ extract 40 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 23))))
(let ((?x279 (concat ((_ extract 41 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 22))))
(let ((?x282 (ite (= ?x32 (_ bv22 64)) ?x279 (ite (= ?x32 (_ bv23 64)) ?x273 (ite (= ?x32 (_ bv24 64)) ?x267 ?x264)))))
(let ((?x285 (concat ((_ extract 42 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 21))))
(let ((?x291 (concat ((_ extract 43 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 20))))
(let ((?x297 (concat ((_ extract 44 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 19))))
(let ((?x300 (ite (= ?x32 (_ bv19 64)) ?x297 (ite (= ?x32 (_ bv20 64)) ?x291 (ite (= ?x32 (_ bv21 64)) ?x285 ?x282)))))
(let ((?x303 (concat ((_ extract 45 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 18))))
(let ((?x309 (concat ((_ extract 46 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 17))))
(let ((?x315 (concat ((_ extract 47 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 16))))
(let ((?x318 (ite (= ?x32 (_ bv16 64)) ?x315 (ite (= ?x32 (_ bv17 64)) ?x309 (ite (= ?x32 (_ bv18 64)) ?x303 ?x300)))))
(let ((?x321 (concat ((_ extract 48 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 15))))
(let ((?x327 (concat ((_ extract 49 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 14))))
(let ((?x333 (concat ((_ extract 50 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 13))))
(let ((?x336 (ite (= ?x32 (_ bv13 64)) ?x333 (ite (= ?x32 (_ bv14 64)) ?x327 (ite (= ?x32 (_ bv15 64)) ?x321 ?x318)))))
(let ((?x339 (concat ((_ extract 51 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 12))))
(let ((?x344 (concat ((_ extract 52 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 11))))
(let ((?x350 (concat ((_ extract 53 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 10))))
(let ((?x353 (ite (= ?x32 (_ bv10 64)) ?x350 (ite (= ?x32 (_ bv11 64)) ?x344 (ite (= ?x32 (_ bv12 64)) ?x339 ?x336)))))
(let ((?x356 (concat ((_ extract 54 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 9))))
(let ((?x362 (concat ((_ extract 55 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 8))))
(let ((?x368 (concat ((_ extract 56 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 7))))
(let ((?x371 (ite (= ?x32 (_ bv7 64)) ?x368 (ite (= ?x32 (_ bv8 64)) ?x362 (ite (= ?x32 (_ bv9 64)) ?x356 ?x353)))))
(let ((?x374 (concat ((_ extract 57 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 6))))
(let ((?x380 (concat ((_ extract 58 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 5))))
(let ((?x386 (concat ((_ extract 59 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 4))))
(let ((?x389 (ite (= ?x32 (_ bv4 64)) ?x386 (ite (= ?x32 (_ bv5 64)) ?x380 (ite (= ?x32 (_ bv6 64)) ?x374 ?x371)))))
(let ((?x392 (concat ((_ extract 60 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 3))))
(let ((?x398 (concat ((_ extract 61 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 2))))
(let ((?x404 (concat ((_ extract 62 0) (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))) (_ bv0 1))))
(let ((?x407 (ite (= ?x32 (_ bv1 64)) ?x404 (ite (= ?x32 (_ bv2 64)) ?x398 (ite (= ?x32 (_ bv3 64)) ?x392 ?x389)))))
(let ((?x20 (bvor (concat ((_ extract 52 0) d_ackermann!0) (_ bv0 11)) (_ bv9223372036854775808 64))))
(let (($x414 (not (= (_ bv0 64) (ite (bvult ?x32 (_ bv64 64)) (ite (= ?x32 (_ bv0 64)) ?x20 ?x407) (_ bv0 64))))))
(not $x414))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
