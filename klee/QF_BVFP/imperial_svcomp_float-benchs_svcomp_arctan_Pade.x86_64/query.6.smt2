(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_arctan_Pade.x86_64/query.6.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun symbolic_0_double_ackermann!0 () (_ BitVec 64))
(assert
 (let ((?x8 ((_ to_fp 11 53) symbolic_0_double_ackermann!0)))
 (fp.geq ?x8 ((_ to_fp 11 53) (_ bv18442201928238480281 64)))))
(assert
 (let ((?x8 ((_ to_fp 11 53) symbolic_0_double_ackermann!0)))
 (fp.leq ?x8 ((_ to_fp 11 53) (_ bv9218829891383704473 64)))))
(assert
 (not (fp.lt ((_ to_fp 11 53) symbolic_0_double_ackermann!0) ((_ to_fp 11 53) (_ bv0 64)))))
(assert
 (let ((?x20 ((_ to_fp 11 53) (_ bv4607182418800017408 64))))
 (let ((?x8 ((_ to_fp 11 53) symbolic_0_double_ackermann!0)))
 (fp.gt ?x8 ?x20))))
(assert
 (let ((?x8 ((_ to_fp 11 53) symbolic_0_double_ackermann!0)))
(let ((?x20 ((_ to_fp 11 53) (_ bv4607182418800017408 64))))
(let ((?x25 (fp.div roundNearestTiesToEven ?x20 ?x8)))
(let ((?x26 (fp.mul roundNearestTiesToEven ?x25 ?x25)))
(let ((?x32 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x26 ((_ to_fp 11 53) (_ bv4610785298501913805 64))) ((_ to_fp 11 53) (_ bv4613937818241073152 64)))))
(let ((?x34 (fp.sub roundNearestTiesToEven ?x20 (fp.div roundNearestTiesToEven ?x26 ?x32))))
(let ((?x36 (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv4609753056924675352 64)) (fp.mul roundNearestTiesToEven ?x25 ?x34))))
(not (and (fp.geq ?x36 ((_ to_fp 11 53) (_ bv13833126011042021769 64))) (fp.leq ?x36 ((_ to_fp 11 53) (_ bv4609753974187245961 64)))))))))))))
(check-sat)
(exit)
