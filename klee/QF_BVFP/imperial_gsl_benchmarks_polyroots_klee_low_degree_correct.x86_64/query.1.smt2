(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_gsl_benchmarks_polyroots_klee_low_degree_correct.x86_64/query.1.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun a_ackermann!0 () (_ BitVec 64))
(assert
 (let ((?x17 (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv9223372036854775808 64)) ((_ to_fp 11 53) a_ackermann!0)) ((_ to_fp 11 53) (_ bv13830554455654793216 64)))))
(let ((?x18 (fp.add roundNearestTiesToEven ((_ to_fp 11 53) (_ bv0 64)) ?x17)))
(not (or (fp.isNaN ?x18) (fp.eq ?x18 ((_ to_fp 11 53) a_ackermann!0)))))))
(check-sat)
(exit)
