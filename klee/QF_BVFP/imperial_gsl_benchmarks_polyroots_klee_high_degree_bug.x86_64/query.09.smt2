(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_gsl_benchmarks_polyroots_klee_high_degree_bug.x86_64/query.09.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun a_ackermann!0 () (_ BitVec 64))
(assert
 (let ((?x8 ((_ to_fp 11 53) a_ackermann!0)))
 (fp.gt ?x8 ((_ to_fp 11 53) (_ bv13830554455654793221 64)))))
(assert
 (let ((?x8 ((_ to_fp 11 53) a_ackermann!0)))
 (fp.lt ?x8 ((_ to_fp 11 53) (_ bv13830554455654793207 64)))))
(assert
 (let ((?x16 ((_ to_fp 11 53) (_ bv4607182418800017408 64))))
(let ((?x18 ((_ to_fp 11 53) (_ bv0 64))))
(let ((?x23 (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv9223372036854775808 64)) ((_ to_fp 11 53) a_ackermann!0)) ?x16)))
(let ((?x26 (fp.add roundNearestTiesToEven (fp.add roundNearestTiesToEven ?x18 (fp.abs ?x23)) ?x18)))
(let ((?x28 (fp.add roundNearestTiesToEven (fp.add roundNearestTiesToEven ?x26 ?x18) ?x18)))
(let ((?x33 (fp.mul roundNearestTiesToEven (fp.add roundNearestTiesToEven ?x28 ?x16) ((_ to_fp 11 53) (_ bv4606732058837280358 64)))))
(let (($x35 (fp.lt (fp.add roundNearestTiesToEven ?x16 ?x28) (fp.mul roundNearestTiesToEven ?x33 ?x16))))
(not (not $x35))))))))))
(check-sat)
(exit)
