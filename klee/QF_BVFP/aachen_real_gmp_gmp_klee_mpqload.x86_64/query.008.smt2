(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/aachen_real_gmp_gmp_klee_mpqload.x86_64/query.008.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun i_ackermann!0 () (_ BitVec 32))
(declare-fun fresh_to_ieee_bv_!1 () (_ BitVec 64))
(assert
 (or (fp.isNaN ((_ to_fp 11 53) roundNearestTiesToEven i_ackermann!0)) (fp.lt ((_ to_fp 11 53) roundNearestTiesToEven i_ackermann!0) ((_ to_fp 11 53) (_ bv0 64)))))
(assert
 (let ((?x9 ((_ to_fp 11 53) roundNearestTiesToEven i_ackermann!0)))
 (= (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv9223372036854775808 64)) ?x9) ((_ to_fp 11 53) fresh_to_ieee_bv_!1))))
(assert
 (let (($x27 (not (= (_ bv0 64) (bvand (concat (_ bv0 52) ((_ extract 63 52) fresh_to_ieee_bv_!1)) (_ bv2047 64))))))
(not $x27)))
(check-sat)
(exit)
