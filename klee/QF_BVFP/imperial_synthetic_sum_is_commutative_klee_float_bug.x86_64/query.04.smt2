(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_synthetic_sum_is_commutative_klee_float_bug.x86_64/query.04.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun data_ackermann!0 () (_ BitVec 32))
(declare-fun data_ackermann!4 () (_ BitVec 32))
(declare-fun data_ackermann!3 () (_ BitVec 32))
(declare-fun data_ackermann!2 () (_ BitVec 32))
(declare-fun data_ackermann!1 () (_ BitVec 32))
(assert
 (not (fp.gt ((_ to_fp 8 24) data_ackermann!0) ((_ to_fp 8 24) (_ bv0 32)))))
(assert
 (let ((?x14 ((_ to_fp 8 24) (_ bv0 32))))
(let ((?x20 (fp.add roundNearestTiesToEven (fp.add roundNearestTiesToEven ((_ to_fp 8 24) data_ackermann!0) ?x14) ((_ to_fp 8 24) data_ackermann!1))))
(let ((?x24 (fp.add roundNearestTiesToEven (fp.add roundNearestTiesToEven ?x20 ((_ to_fp 8 24) data_ackermann!2)) ((_ to_fp 8 24) data_ackermann!3))))
(let (($x27 (fp.eq (fp.add roundNearestTiesToEven ?x24 ((_ to_fp 8 24) data_ackermann!4)) ?x14)))
(not $x27))))))
(check-sat)
(exit)
