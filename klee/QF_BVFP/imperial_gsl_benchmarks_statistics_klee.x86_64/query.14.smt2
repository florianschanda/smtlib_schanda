(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_gsl_benchmarks_statistics_klee.x86_64/query.14.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun data_ackermann!0 () (_ BitVec 64))
(declare-fun data_ackermann!1 () (_ BitVec 64))
(assert
 (let ((?x9 ((_ to_fp 11 53) data_ackermann!0)))
 (fp.geq ?x9 ((_ to_fp 11 53) (_ bv4621819117588971520 64)))))
(assert
 (let ((?x9 ((_ to_fp 11 53) data_ackermann!0)))
 (fp.leq ?x9 ((_ to_fp 11 53) (_ bv4626322717216342016 64)))))
(assert
 (let ((?x16 ((_ to_fp 11 53) data_ackermann!1)))
 (fp.geq ?x16 ((_ to_fp 11 53) (_ bv4621819117588971520 64)))))
(assert
 (let ((?x16 ((_ to_fp 11 53) data_ackermann!1)))
 (fp.leq ?x16 ((_ to_fp 11 53) (_ bv4626322717216342016 64)))))
(assert
 (let ((?x20 ((_ to_fp 11 53) (_ bv0 64))))
(let ((?x25 (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) data_ackermann!0) ?x20) ((_ to_fp 11 53) (_ bv4607182418800017408 64)))))
(let ((?x26 (fp.add roundNearestTiesToEven ?x20 ?x25)))
(let ((?x32 (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv4625787914760591770 64)) ?x26) ((_ to_fp 11 53) (_ bv4611686018427387904 64)))))
(let ((?x33 (fp.add roundNearestTiesToEven ?x26 ?x32)))
(let ((?x16 ((_ to_fp 11 53) data_ackermann!1)))
(let ((?x37 (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven ?x16 ?x33) ((_ to_fp 11 53) (_ bv4613937818241073152 64)))))
(let ((?x38 (fp.add roundNearestTiesToEven ?x33 ?x37)))
(let ((?x44 (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv4625844209755933901 64)) ?x38) ((_ to_fp 11 53) (_ bv4616189618054758400 64)))))
(let ((?x45 (fp.add roundNearestTiesToEven ?x38 ?x44)))
(let ((?x51 (fp.div roundNearestTiesToEven (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv4623282787467866931 64)) ?x45) ((_ to_fp 11 53) (_ bv4617315517961601024 64)))))
(let ((?x52 (fp.add roundNearestTiesToEven ?x45 ?x51)))
(let ((?x9 ((_ to_fp 11 53) data_ackermann!0)))
(let ((?x53 (fp.sub roundNearestTiesToEven ?x9 ?x52)))
(let ((?x55 (fp.sub roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x53 ?x53) ?x20)))
(let ((?x57 (fp.add roundNearestTiesToEven ?x20 (fp.div roundNearestTiesToEven ?x55 ((_ to_fp 11 53) (_ bv4607182418800017408 64))))))
(let ((?x58 (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv4625787914760591770 64)) ?x52)))
(let ((?x60 (fp.sub roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x58 ?x58) ?x57)))
(let ((?x62 (fp.add roundNearestTiesToEven ?x57 (fp.div roundNearestTiesToEven ?x60 ((_ to_fp 11 53) (_ bv4611686018427387904 64))))))
(let ((?x63 (fp.sub roundNearestTiesToEven ?x16 ?x52)))
(let ((?x65 (fp.sub roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x63 ?x63) ?x62)))
(let ((?x67 (fp.add roundNearestTiesToEven ?x62 (fp.div roundNearestTiesToEven ?x65 ((_ to_fp 11 53) (_ bv4613937818241073152 64))))))
(let ((?x68 (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv4625844209755933901 64)) ?x52)))
(let ((?x70 (fp.sub roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x68 ?x68) ?x67)))
(let ((?x72 (fp.add roundNearestTiesToEven ?x67 (fp.div roundNearestTiesToEven ?x70 ((_ to_fp 11 53) (_ bv4616189618054758400 64))))))
(let ((?x73 (fp.sub roundNearestTiesToEven ((_ to_fp 11 53) (_ bv4623282787467866931 64)) ?x52)))
(let ((?x75 (fp.sub roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x73 ?x73) ?x72)))
(let ((?x77 (fp.add roundNearestTiesToEven ?x72 (fp.div roundNearestTiesToEven ?x75 ((_ to_fp 11 53) (_ bv4617315517961601024 64))))))
(let ((?x80 (fp.mul roundNearestTiesToEven ?x77 ((_ to_fp 11 53) (_ bv4608308318706860032 64)))))
(not (and (not (fp.isNaN ?x80)) (not (fp.lt ?x80 ?x20))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
