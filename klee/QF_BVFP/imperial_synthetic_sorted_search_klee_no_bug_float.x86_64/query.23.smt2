(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_synthetic_sorted_search_klee_no_bug_float.x86_64/query.23.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun data_ackermann!0 () (_ BitVec 32))
(declare-fun data_ackermann!1 () (_ BitVec 32))
(declare-fun data_ackermann!2 () (_ BitVec 32))
(declare-fun data_ackermann!3 () (_ BitVec 32))
(declare-fun elem_ackermann!5 () (_ BitVec 32))
(declare-fun data_ackermann!4 () (_ BitVec 32))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) data_ackermann!0))))
(assert
 (not (fp.lt ((_ to_fp 8 24) data_ackermann!0) ((_ to_fp 8 24) data_ackermann!1))))
(assert
 (not (fp.lt ((_ to_fp 8 24) data_ackermann!2) ((_ to_fp 8 24) data_ackermann!0))))
(assert
 (not (fp.lt ((_ to_fp 8 24) data_ackermann!3) ((_ to_fp 8 24) data_ackermann!2))))
(assert
 (not (fp.eq ((_ to_fp 8 24) data_ackermann!4) ((_ to_fp 8 24) elem_ackermann!5))))
(assert
 (let ((?x26 ((_ to_fp 8 24) elem_ackermann!5)))
 (let ((?x16 ((_ to_fp 8 24) data_ackermann!1)))
 (fp.eq ?x16 ?x26))))
(assert
 (not (fp.eq ((_ to_fp 8 24) data_ackermann!0) ((_ to_fp 8 24) elem_ackermann!5))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) data_ackermann!4))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) data_ackermann!1))))
(assert
 (not (fp.lt ((_ to_fp 8 24) data_ackermann!1) ((_ to_fp 8 24) data_ackermann!4))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) data_ackermann!2))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) data_ackermann!3))))
(assert
 (let ((?x26 ((_ to_fp 8 24) elem_ackermann!5)))
(let ((?x13 ((_ to_fp 8 24) data_ackermann!0)))
(let (($x42 (fp.gt ?x13 ?x26)))
(let ((?x50 ((_ sign_extend 32) (bvsdiv (bvadd (ite $x42 (_ bv0 32) (_ bv2 32)) (ite $x42 (_ bv2 32) (_ bv5 32))) (_ bv2 32)))))
(not (bvult (bvmul (_ bv4 64) ?x50) (_ bv17 64))))))))
(check-sat)
(exit)
