(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.452.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_1_ackermann!7 () (_ BitVec 32))
(declare-fun symbolic_0_float_ackermann!8 () (_ BitVec 32))
(declare-fun symbolic_0_float_3_ackermann!0 () (_ BitVec 32))
(declare-fun symbolic_0_float_2_ackermann!3 () (_ BitVec 32))
(declare-fun symbolic_0_float_5_ackermann!4 () (_ BitVec 32))
(declare-fun symbolic_0_float_4_ackermann!5 () (_ BitVec 32))
(declare-fun symbolic_0_float_7_ackermann!6 () (_ BitVec 32))
(declare-fun symbolic_0_float_6_ackermann!2 () (_ BitVec 32))
(declare-fun symbolic_0_float_8_ackermann!9 () (_ BitVec 32))
(declare-fun symbolic_0_float_9_ackermann!1 () (_ BitVec 32))
(assert
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (fp.geq ?x17 ?x19))))
(assert
 (let ((?x22 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (fp.leq ?x17 ?x22))))
(assert
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x25 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x27 (fp.sub roundNearestTiesToEven ?x25 ?x17)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 ((_ to_fp 8 24) symbolic_0_float_ackermann!8)))
 (let ((?x30 (fp.sub roundNearestTiesToEven ?x29 ?x19)))
 (or (fp.isNaN ?x27) (fp.gt ?x30 ?x27)))))))))
(assert
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 ((_ to_fp 8 24) symbolic_0_float_ackermann!8)))
 (let ((?x30 (fp.sub roundNearestTiesToEven ?x29 ?x19)))
 (not (fp.isNaN ?x30))))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7))))
(assert
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 ((_ to_fp 8 24) symbolic_0_float_ackermann!8)))
 (let ((?x30 (fp.sub roundNearestTiesToEven ?x29 ?x19)))
 (not (fp.lt ?x30 ?x17)))))))
(assert
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (fp.geq ?x39 ?x19))))
(assert
 (let ((?x22 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (fp.leq ?x39 ?x22))))
(assert
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x25 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x42 (fp.sub roundNearestTiesToEven ?x25 ?x39)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x44 ((_ to_fp 8 24) symbolic_0_float_2_ackermann!3)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x44 ?x45)))
 (or (fp.isNaN ?x42) (fp.gt ?x46 ?x42)))))))))))
(assert
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x44 ((_ to_fp 8 24) symbolic_0_float_2_ackermann!3)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x44 ?x45)))
 (not (fp.isNaN ?x46))))))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0))))
(assert
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x44 ((_ to_fp 8 24) symbolic_0_float_2_ackermann!3)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x44 ?x45)))
 (not (fp.lt ?x46 ?x39)))))))))
(assert
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (fp.geq ?x55 ?x19))))
(assert
 (let ((?x22 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (fp.leq ?x55 ?x22))))
(assert
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (let ((?x25 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x58 (fp.sub roundNearestTiesToEven ?x25 ?x55)))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x61 (fp.add roundNearestTiesToEven ?x45 ?x39)))
 (let ((?x60 ((_ to_fp 8 24) symbolic_0_float_4_ackermann!5)))
 (let ((?x62 (fp.sub roundNearestTiesToEven ?x60 ?x61)))
 (or (fp.isNaN ?x58) (fp.gt ?x62 ?x58)))))))))))))
(assert
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x61 (fp.add roundNearestTiesToEven ?x45 ?x39)))
 (let ((?x60 ((_ to_fp 8 24) symbolic_0_float_4_ackermann!5)))
 (let ((?x62 (fp.sub roundNearestTiesToEven ?x60 ?x61)))
 (not (fp.isNaN ?x62))))))))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4))))
(assert
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x61 (fp.add roundNearestTiesToEven ?x45 ?x39)))
 (let ((?x60 ((_ to_fp 8 24) symbolic_0_float_4_ackermann!5)))
 (let ((?x62 (fp.sub roundNearestTiesToEven ?x60 ?x61)))
 (not (fp.lt ?x62 ?x55)))))))))))
(assert
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x71 ((_ to_fp 8 24) symbolic_0_float_7_ackermann!6)))
 (fp.geq ?x71 ?x19))))
(assert
 (let ((?x22 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x71 ((_ to_fp 8 24) symbolic_0_float_7_ackermann!6)))
 (fp.leq ?x71 ?x22))))
(assert
 (let ((?x71 ((_ to_fp 8 24) symbolic_0_float_7_ackermann!6)))
 (let ((?x25 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x74 (fp.sub roundNearestTiesToEven ?x25 ?x71)))
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x61 (fp.add roundNearestTiesToEven ?x45 ?x39)))
 (let ((?x77 (fp.add roundNearestTiesToEven ?x61 ?x55)))
 (let ((?x76 ((_ to_fp 8 24) symbolic_0_float_6_ackermann!2)))
 (let ((?x78 (fp.sub roundNearestTiesToEven ?x76 ?x77)))
 (or (fp.isNaN ?x74) (fp.gt ?x78 ?x74)))))))))))))))
(assert
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x61 (fp.add roundNearestTiesToEven ?x45 ?x39)))
 (let ((?x77 (fp.add roundNearestTiesToEven ?x61 ?x55)))
 (let ((?x76 ((_ to_fp 8 24) symbolic_0_float_6_ackermann!2)))
 (let ((?x78 (fp.sub roundNearestTiesToEven ?x76 ?x77)))
 (not (fp.isNaN ?x78))))))))))))
(assert
 (not (fp.isNaN ((_ to_fp 8 24) symbolic_0_float_7_ackermann!6))))
(assert
 (let ((?x71 ((_ to_fp 8 24) symbolic_0_float_7_ackermann!6)))
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x61 (fp.add roundNearestTiesToEven ?x45 ?x39)))
 (let ((?x77 (fp.add roundNearestTiesToEven ?x61 ?x55)))
 (let ((?x76 ((_ to_fp 8 24) symbolic_0_float_6_ackermann!2)))
 (let ((?x78 (fp.sub roundNearestTiesToEven ?x76 ?x77)))
 (not (fp.lt ?x78 ?x71)))))))))))))
(assert
 (let ((?x89 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x87 ((_ to_fp 8 24) symbolic_0_float_8_ackermann!9)))
 (fp.geq ?x87 ?x89))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x87 ((_ to_fp 8 24) symbolic_0_float_8_ackermann!9)))
 (fp.leq ?x87 ?x92))))
(assert
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x94 ((_ to_fp 8 24) symbolic_0_float_9_ackermann!1)))
 (fp.geq ?x94 ?x19))))
(assert
 (let ((?x22 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x94 ((_ to_fp 8 24) symbolic_0_float_9_ackermann!1)))
 (fp.leq ?x94 ?x22))))
(assert
 (let ((?x94 ((_ to_fp 8 24) symbolic_0_float_9_ackermann!1)))
 (let ((?x25 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x100 (fp.sub roundNearestTiesToEven ?x25 ?x94)))
 (let ((?x71 ((_ to_fp 8 24) symbolic_0_float_7_ackermann!6)))
 (let ((?x55 ((_ to_fp 8 24) symbolic_0_float_5_ackermann!4)))
 (let ((?x39 ((_ to_fp 8 24) symbolic_0_float_3_ackermann!0)))
 (let ((?x17 ((_ to_fp 8 24) symbolic_0_float_1_ackermann!7)))
 (let ((?x19 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x19 ?x17)))
 (let ((?x61 (fp.add roundNearestTiesToEven ?x45 ?x39)))
 (let ((?x77 (fp.add roundNearestTiesToEven ?x61 ?x55)))
 (let ((?x87 ((_ to_fp 8 24) symbolic_0_float_8_ackermann!9)))
 (let ((?x98 (fp.sub roundNearestTiesToEven ?x87 (fp.add roundNearestTiesToEven ?x77 ?x71))))
 (or (or (fp.isNaN ?x98) (fp.isNaN ?x100)) (fp.gt ?x98 ?x100))))))))))))))))
(assert
 (let ((?x89 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 ((_ to_fp 8 24) symbolic_0_float_ackermann!8)))
 (fp.geq ?x29 ?x89))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 ((_ to_fp 8 24) symbolic_0_float_ackermann!8)))
 (fp.leq ?x29 ?x92))))
(assert
 (let ((?x89 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x44 ((_ to_fp 8 24) symbolic_0_float_2_ackermann!3)))
 (fp.geq ?x44 ?x89))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x44 ((_ to_fp 8 24) symbolic_0_float_2_ackermann!3)))
 (fp.leq ?x44 ?x92))))
(assert
 (let ((?x89 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x60 ((_ to_fp 8 24) symbolic_0_float_4_ackermann!5)))
 (fp.geq ?x60 ?x89))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x60 ((_ to_fp 8 24) symbolic_0_float_4_ackermann!5)))
 (fp.leq ?x60 ?x92))))
(assert
 (let ((?x89 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x76 ((_ to_fp 8 24) symbolic_0_float_6_ackermann!2)))
 (fp.geq ?x76 ?x89))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x76 ((_ to_fp 8 24) symbolic_0_float_6_ackermann!2)))
 (fp.leq ?x76 ?x92))))
(assert
 (not false))
(check-sat)
(exit)
