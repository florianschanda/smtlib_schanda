(set-info :smt-lib-version 2.6)
(set-logic QF_BVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (bitvectors replaced with reads from arrays of bitvectors) is available at QF_ABVFP/20170428-Liew-KLEE/imperial_synthetic_memcpy_and_use_as_bitvector_klee.x86_64/query.086.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun shiftAmount_ackermann!1 () (_ BitVec 32))
(declare-fun fresh_to_ieee_bv_!2 () (_ BitVec 32))
(declare-fun f_ackermann!0 () (_ BitVec 32))
(assert
 (bvult shiftAmount_ackermann!1 (_ bv32 32)))
(assert
 (= (fp.add roundNearestTiesToEven ((_ to_fp 8 24) f_ackermann!0) ((_ to_fp 8 24) (_ bv1065353216 32))) ((_ to_fp 8 24) fresh_to_ieee_bv_!2)))
(assert
 (let ((?x25 (ite (= shiftAmount_ackermann!1 (_ bv31 32)) (concat ((_ extract 0 0) fresh_to_ieee_bv_!2) (_ bv0 31)) (_ bv0 32))))
(let ((?x31 (ite (= shiftAmount_ackermann!1 (_ bv30 32)) (concat ((_ extract 1 0) fresh_to_ieee_bv_!2) (_ bv0 30)) ?x25)))
(let ((?x37 (ite (= shiftAmount_ackermann!1 (_ bv29 32)) (concat ((_ extract 2 0) fresh_to_ieee_bv_!2) (_ bv0 29)) ?x31)))
(let ((?x43 (ite (= shiftAmount_ackermann!1 (_ bv28 32)) (concat ((_ extract 3 0) fresh_to_ieee_bv_!2) (_ bv0 28)) ?x37)))
(let ((?x49 (ite (= shiftAmount_ackermann!1 (_ bv27 32)) (concat ((_ extract 4 0) fresh_to_ieee_bv_!2) (_ bv0 27)) ?x43)))
(let ((?x55 (ite (= shiftAmount_ackermann!1 (_ bv26 32)) (concat ((_ extract 5 0) fresh_to_ieee_bv_!2) (_ bv0 26)) ?x49)))
(let ((?x61 (ite (= shiftAmount_ackermann!1 (_ bv25 32)) (concat ((_ extract 6 0) fresh_to_ieee_bv_!2) (_ bv0 25)) ?x55)))
(let ((?x67 (ite (= shiftAmount_ackermann!1 (_ bv24 32)) (concat ((_ extract 7 0) fresh_to_ieee_bv_!2) (_ bv0 24)) ?x61)))
(let ((?x73 (ite (= shiftAmount_ackermann!1 (_ bv23 32)) (concat ((_ extract 8 0) fresh_to_ieee_bv_!2) (_ bv0 23)) ?x67)))
(let ((?x79 (ite (= shiftAmount_ackermann!1 (_ bv22 32)) (concat ((_ extract 9 0) fresh_to_ieee_bv_!2) (_ bv0 22)) ?x73)))
(let ((?x85 (ite (= shiftAmount_ackermann!1 (_ bv21 32)) (concat ((_ extract 10 0) fresh_to_ieee_bv_!2) (_ bv0 21)) ?x79)))
(let ((?x91 (ite (= shiftAmount_ackermann!1 (_ bv20 32)) (concat ((_ extract 11 0) fresh_to_ieee_bv_!2) (_ bv0 20)) ?x85)))
(let ((?x97 (ite (= shiftAmount_ackermann!1 (_ bv19 32)) (concat ((_ extract 12 0) fresh_to_ieee_bv_!2) (_ bv0 19)) ?x91)))
(let ((?x103 (ite (= shiftAmount_ackermann!1 (_ bv18 32)) (concat ((_ extract 13 0) fresh_to_ieee_bv_!2) (_ bv0 18)) ?x97)))
(let ((?x109 (ite (= shiftAmount_ackermann!1 (_ bv17 32)) (concat ((_ extract 14 0) fresh_to_ieee_bv_!2) (_ bv0 17)) ?x103)))
(let ((?x115 (ite (= shiftAmount_ackermann!1 (_ bv16 32)) (concat ((_ extract 15 0) fresh_to_ieee_bv_!2) (_ bv0 16)) ?x109)))
(let ((?x121 (ite (= shiftAmount_ackermann!1 (_ bv15 32)) (concat ((_ extract 16 0) fresh_to_ieee_bv_!2) (_ bv0 15)) ?x115)))
(let ((?x127 (ite (= shiftAmount_ackermann!1 (_ bv14 32)) (concat ((_ extract 17 0) fresh_to_ieee_bv_!2) (_ bv0 14)) ?x121)))
(let ((?x133 (ite (= shiftAmount_ackermann!1 (_ bv13 32)) (concat ((_ extract 18 0) fresh_to_ieee_bv_!2) (_ bv0 13)) ?x127)))
(let ((?x139 (ite (= shiftAmount_ackermann!1 (_ bv12 32)) (concat ((_ extract 19 0) fresh_to_ieee_bv_!2) (_ bv0 12)) ?x133)))
(let ((?x145 (ite (= shiftAmount_ackermann!1 (_ bv11 32)) (concat ((_ extract 20 0) fresh_to_ieee_bv_!2) (_ bv0 11)) ?x139)))
(let ((?x151 (ite (= shiftAmount_ackermann!1 (_ bv10 32)) (concat ((_ extract 21 0) fresh_to_ieee_bv_!2) (_ bv0 10)) ?x145)))
(let ((?x157 (ite (= shiftAmount_ackermann!1 (_ bv9 32)) (concat ((_ extract 22 0) fresh_to_ieee_bv_!2) (_ bv0 9)) ?x151)))
(let ((?x163 (ite (= shiftAmount_ackermann!1 (_ bv8 32)) (concat ((_ extract 23 0) fresh_to_ieee_bv_!2) (_ bv0 8)) ?x157)))
(let ((?x169 (ite (= shiftAmount_ackermann!1 (_ bv7 32)) (concat ((_ extract 24 0) fresh_to_ieee_bv_!2) (_ bv0 7)) ?x163)))
(let ((?x175 (ite (= shiftAmount_ackermann!1 (_ bv6 32)) (concat ((_ extract 25 0) fresh_to_ieee_bv_!2) (_ bv0 6)) ?x169)))
(let ((?x181 (ite (= shiftAmount_ackermann!1 (_ bv5 32)) (concat ((_ extract 26 0) fresh_to_ieee_bv_!2) (_ bv0 5)) ?x175)))
(let ((?x187 (ite (= shiftAmount_ackermann!1 (_ bv4 32)) (concat ((_ extract 27 0) fresh_to_ieee_bv_!2) (_ bv0 4)) ?x181)))
(let ((?x193 (ite (= shiftAmount_ackermann!1 (_ bv3 32)) (concat ((_ extract 28 0) fresh_to_ieee_bv_!2) (_ bv0 3)) ?x187)))
(let ((?x199 (ite (= shiftAmount_ackermann!1 (_ bv2 32)) (concat ((_ extract 29 0) fresh_to_ieee_bv_!2) (_ bv0 2)) ?x193)))
(let ((?x205 (ite (= shiftAmount_ackermann!1 (_ bv1 32)) (concat ((_ extract 30 0) fresh_to_ieee_bv_!2) (_ bv0 1)) ?x199)))
(let (($x10 (bvult shiftAmount_ackermann!1 (_ bv32 32))))
(let ((?x208 (ite $x10 (ite (= shiftAmount_ackermann!1 (_ bv0 32)) fresh_to_ieee_bv_!2 ?x205) (_ bv0 32))))
(not (bvslt (_ bv0 32) ?x208))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
