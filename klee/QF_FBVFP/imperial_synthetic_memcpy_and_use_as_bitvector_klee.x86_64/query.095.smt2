(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_synthetic_memcpy_and_use_as_bitvector_klee.x86_64/query.095.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun shiftAmount10 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun fresh_to_ieee_bv_!0 () (_ BitVec 32))
(declare-fun f1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select shiftAmount10 (_ bv2 32)) (concat (select shiftAmount10 (_ bv1 32)) (select shiftAmount10 (_ bv0 32))))))
 (let ((?x18 (concat (select shiftAmount10 (_ bv3 32)) ?x15)))
 (bvult ?x18 (_ bv32 32)))))
(assert
 (let ((?x27 (concat (select f1 (_ bv2 32)) (concat (select f1 (_ bv1 32)) (select f1 (_ bv0 32))))))
 (let ((?x34 (fp.add roundNearestTiesToEven ((_ to_fp 8 24) (concat (select f1 (_ bv3 32)) ?x27)) ((_ to_fp 8 24) (_ bv1065353216 32)))))
 (= ?x34 ((_ to_fp 8 24) fresh_to_ieee_bv_!0)))))
(assert
 (let ((?x15 (concat (select shiftAmount10 (_ bv2 32)) (concat (select shiftAmount10 (_ bv1 32)) (select shiftAmount10 (_ bv0 32))))))
(let ((?x18 (concat (select shiftAmount10 (_ bv3 32)) ?x15)))
(let ((?x49 (ite (= ?x18 (_ bv30 32)) (concat (_ bv0 30) ((_ extract 31 30) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv31 32)) (concat (_ bv0 31) ((_ extract 31 31) fresh_to_ieee_bv_!0)) (_ bv0 32)))))
(let ((?x61 (ite (= ?x18 (_ bv28 32)) (concat (_ bv0 28) ((_ extract 31 28) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv29 32)) (concat (_ bv0 29) ((_ extract 31 29) fresh_to_ieee_bv_!0)) ?x49))))
(let ((?x73 (ite (= ?x18 (_ bv26 32)) (concat (_ bv0 26) ((_ extract 31 26) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv27 32)) (concat (_ bv0 27) ((_ extract 31 27) fresh_to_ieee_bv_!0)) ?x61))))
(let ((?x85 (ite (= ?x18 (_ bv24 32)) (concat (_ bv0 24) ((_ extract 31 24) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv25 32)) (concat (_ bv0 25) ((_ extract 31 25) fresh_to_ieee_bv_!0)) ?x73))))
(let ((?x97 (ite (= ?x18 (_ bv22 32)) (concat (_ bv0 22) ((_ extract 31 22) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv23 32)) (concat (_ bv0 23) ((_ extract 31 23) fresh_to_ieee_bv_!0)) ?x85))))
(let ((?x109 (ite (= ?x18 (_ bv20 32)) (concat (_ bv0 20) ((_ extract 31 20) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv21 32)) (concat (_ bv0 21) ((_ extract 31 21) fresh_to_ieee_bv_!0)) ?x97))))
(let ((?x121 (ite (= ?x18 (_ bv18 32)) (concat (_ bv0 18) ((_ extract 31 18) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv19 32)) (concat (_ bv0 19) ((_ extract 31 19) fresh_to_ieee_bv_!0)) ?x109))))
(let ((?x133 (ite (= ?x18 (_ bv16 32)) (concat (_ bv0 16) ((_ extract 31 16) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv17 32)) (concat (_ bv0 17) ((_ extract 31 17) fresh_to_ieee_bv_!0)) ?x121))))
(let ((?x145 (ite (= ?x18 (_ bv14 32)) (concat (_ bv0 14) ((_ extract 31 14) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv15 32)) (concat (_ bv0 15) ((_ extract 31 15) fresh_to_ieee_bv_!0)) ?x133))))
(let ((?x157 (ite (= ?x18 (_ bv12 32)) (concat (_ bv0 12) ((_ extract 31 12) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv13 32)) (concat (_ bv0 13) ((_ extract 31 13) fresh_to_ieee_bv_!0)) ?x145))))
(let ((?x169 (ite (= ?x18 (_ bv10 32)) (concat (_ bv0 10) ((_ extract 31 10) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv11 32)) (concat (_ bv0 11) ((_ extract 31 11) fresh_to_ieee_bv_!0)) ?x157))))
(let ((?x181 (ite (= ?x18 (_ bv8 32)) (concat (_ bv0 8) ((_ extract 31 8) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv9 32)) (concat (_ bv0 9) ((_ extract 31 9) fresh_to_ieee_bv_!0)) ?x169))))
(let ((?x193 (ite (= ?x18 (_ bv6 32)) (concat (_ bv0 6) ((_ extract 31 6) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv7 32)) (concat (_ bv0 7) ((_ extract 31 7) fresh_to_ieee_bv_!0)) ?x181))))
(let ((?x204 (ite (= ?x18 (_ bv4 32)) (concat (_ bv0 4) ((_ extract 31 4) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv5 32)) (concat (_ bv0 5) ((_ extract 31 5) fresh_to_ieee_bv_!0)) ?x193))))
(let ((?x214 (ite (= ?x18 (_ bv2 32)) (concat (_ bv0 2) ((_ extract 31 2) fresh_to_ieee_bv_!0)) (ite (= ?x18 (_ bv3 32)) (concat (_ bv0 3) ((_ extract 31 3) fresh_to_ieee_bv_!0)) ?x204))))
(let ((?x221 (ite (= ?x18 (_ bv0 32)) fresh_to_ieee_bv_!0 (ite (= ?x18 (_ bv1 32)) (concat (_ bv0 1) ((_ extract 31 1) fresh_to_ieee_bv_!0)) ?x214))))
(let (($x20 (bvult ?x18 (_ bv32 32))))
(not (bvult (_ bv5 32) (ite $x20 ?x221 (_ bv0 32))))))))))))))))))))))))
(check-sat)
(exit)
