(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/aachen_syn_mod_longdouble.x86_64/query.3.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun f0 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun g1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (not (fp.isNaN ?x43))))))))
(assert
 (let ((?x71 (concat (concat ((_ extract 79 79) (concat (_ bv0 16) (_ bv0 64))) ((_ extract 78 64) (concat (_ bv0 16) (_ bv0 64)))) ((_ extract 62 0) (concat (_ bv0 16) (_ bv0 64))))))
 (let ((?x78 ((_ to_fp 15 64) ?x71)))
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (let (($x76 (fp.gt ?x43 ?x78)))
 (= (_ bv0 32) (ite (fp.isInfinite ?x43) (ite $x76 (_ bv1 32) (_ bv4294967295 32)) (_ bv0 32))))))))))))
(assert
 (let ((?x71 (concat (concat ((_ extract 79 79) (concat (_ bv0 16) (_ bv0 64))) ((_ extract 78 64) (concat (_ bv0 16) (_ bv0 64)))) ((_ extract 62 0) (concat (_ bv0 16) (_ bv0 64))))))
 (let ((?x78 ((_ to_fp 15 64) ?x71)))
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (fp.gt ?x43 ?x78)))))))))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (fp.gt ?x100 ?x43))))))))))))
(assert
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (not (fp.isNaN ?x100))))))))
(assert
 (let ((?x71 (concat (concat ((_ extract 79 79) (concat (_ bv0 16) (_ bv0 64))) ((_ extract 78 64) (concat (_ bv0 16) (_ bv0 64)))) ((_ extract 62 0) (concat (_ bv0 16) (_ bv0 64))))))
 (let ((?x78 ((_ to_fp 15 64) ?x71)))
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (let (($x130 (fp.gt ?x100 ?x78)))
 (= (_ bv0 32) (ite (fp.isInfinite ?x100) (ite $x130 (_ bv1 32) (_ bv4294967295 32)) (_ bv0 32))))))))))))
(assert
 (let ((?x71 (concat (concat ((_ extract 79 79) (concat (_ bv0 16) (_ bv0 64))) ((_ extract 78 64) (concat (_ bv0 16) (_ bv0 64)))) ((_ extract 62 0) (concat (_ bv0 16) (_ bv0 64))))))
 (let ((?x78 ((_ to_fp 15 64) ?x71)))
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (fp.gt ?x100 ?x78)))))))))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (= ((_ extract 63 63) ?x36) (ite (or (fp.isSubnormal ?x43) (fp.isZero ?x43)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (= ((_ extract 63 63) ?x36) (ite (or (fp.isSubnormal ?x43) (fp.isZero ?x43)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (= ((_ extract 63 63) ?x36) (ite (or (fp.isSubnormal ?x43) (fp.isZero ?x43)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x71 (concat (concat ((_ extract 79 79) (concat (_ bv0 16) (_ bv0 64))) ((_ extract 78 64) (concat (_ bv0 16) (_ bv0 64)))) ((_ extract 62 0) (concat (_ bv0 16) (_ bv0 64))))))
 (let ((?x78 ((_ to_fp 15 64) ?x71)))
 (= ((_ extract 63 63) (concat (_ bv0 16) (_ bv0 64))) (ite (or (fp.isSubnormal ?x78) (fp.isZero ?x78)) (_ bv0 1) (_ bv1 1))))))
(assert
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (= ((_ extract 63 63) ?x93) (ite (or (fp.isSubnormal ?x100) (fp.isZero ?x100)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
 (let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
 (let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
 (let ((?x43 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x36) ((_ extract 78 64) ?x36)) ((_ extract 62 0) ?x36)))))
 (= ((_ extract 63 63) ?x36) (ite (or (fp.isSubnormal ?x43) (fp.isZero ?x43)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (= ((_ extract 63 63) ?x93) (ite (or (fp.isSubnormal ?x100) (fp.isZero ?x100)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (= ((_ extract 63 63) ?x93) (ite (or (fp.isSubnormal ?x100) (fp.isZero ?x100)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x79 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x85 (concat (select g1 (_ bv5 32)) (concat (select g1 (_ bv4 32)) (concat (select g1 (_ bv3 32)) ?x79)))))
 (let ((?x91 (concat (select g1 (_ bv8 32)) (concat (select g1 (_ bv7 32)) (concat (select g1 (_ bv6 32)) ?x85)))))
 (let ((?x93 (concat (select g1 (_ bv9 32)) ?x91)))
 (let ((?x100 ((_ to_fp 15 64) (concat (concat ((_ extract 79 79) ?x93) ((_ extract 78 64) ?x93)) ((_ extract 62 0) ?x93)))))
 (= ((_ extract 63 63) ?x93) (ite (or (fp.isSubnormal ?x100) (fp.isZero ?x100)) (_ bv0 1) (_ bv1 1)))))))))
(assert
 (let ((?x71 (concat (concat ((_ extract 79 79) (concat (_ bv0 16) (_ bv0 64))) ((_ extract 78 64) (concat (_ bv0 16) (_ bv0 64)))) ((_ extract 62 0) (concat (_ bv0 16) (_ bv0 64))))))
 (let ((?x78 ((_ to_fp 15 64) ?x71)))
 (= ((_ extract 63 63) (concat (_ bv0 16) (_ bv0 64))) (ite (or (fp.isSubnormal ?x78) (fp.isZero ?x78)) (_ bv0 1) (_ bv1 1))))))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
(let ((?x24 (concat (select f0 (_ bv5 32)) (concat (select f0 (_ bv4 32)) (concat (select f0 (_ bv3 32)) ?x15)))))
(let ((?x33 (concat (select f0 (_ bv8 32)) (concat (select f0 (_ bv7 32)) (concat (select f0 (_ bv6 32)) ?x24)))))
(let ((?x36 (concat (select f0 (_ bv9 32)) ?x33)))
(not (= (concat (_ bv0 16) (_ bv288444596360418433 64)) ?x36)))))))
(check-sat)
(exit)
