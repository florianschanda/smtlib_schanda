(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_filter2_set.x86_64/query.18.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_double_40 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x12 (concat (select symbolic_0_double_40 (_ bv1 32)) (select symbolic_0_double_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_double_40 (_ bv3 32)) (concat (select symbolic_0_double_40 (_ bv2 32)) ?x12))))
 (let ((?x24 (concat (select symbolic_0_double_40 (_ bv5 32)) (concat (select symbolic_0_double_40 (_ bv4 32)) ?x18))))
 (let ((?x30 (concat (select symbolic_0_double_40 (_ bv7 32)) (concat (select symbolic_0_double_40 (_ bv6 32)) ?x24))))
 (fp.geq ((_ to_fp 11 53) ?x30) ((_ to_fp 11 53) (_ bv13827942367870918328 64))))))))
(assert
 (let ((?x12 (concat (select symbolic_0_double_40 (_ bv1 32)) (select symbolic_0_double_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_double_40 (_ bv3 32)) (concat (select symbolic_0_double_40 (_ bv2 32)) ?x12))))
 (let ((?x24 (concat (select symbolic_0_double_40 (_ bv5 32)) (concat (select symbolic_0_double_40 (_ bv4 32)) ?x18))))
 (let ((?x30 (concat (select symbolic_0_double_40 (_ bv7 32)) (concat (select symbolic_0_double_40 (_ bv6 32)) ?x24))))
 (fp.leq ((_ to_fp 11 53) ?x30) ((_ to_fp 11 53) (_ bv13827762223885823508 64))))))))
(assert
 (not false))
(check-sat)
(exit)
