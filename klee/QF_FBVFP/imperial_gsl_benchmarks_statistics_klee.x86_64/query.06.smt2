(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_gsl_benchmarks_statistics_klee.x86_64/query.06.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun data0 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select data0 (_ bv2 32)) (concat (select data0 (_ bv1 32)) (select data0 (_ bv0 32))))))
 (let ((?x24 (concat (select data0 (_ bv5 32)) (concat (select data0 (_ bv4 32)) (concat (select data0 (_ bv3 32)) ?x15)))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select data0 (_ bv7 32)) (concat (select data0 (_ bv6 32)) ?x24)))))
 (fp.geq ?x31 ((_ to_fp 11 53) (_ bv4621819117588971520 64)))))))
(assert
 (let ((?x15 (concat (select data0 (_ bv2 32)) (concat (select data0 (_ bv1 32)) (select data0 (_ bv0 32))))))
 (let ((?x24 (concat (select data0 (_ bv5 32)) (concat (select data0 (_ bv4 32)) (concat (select data0 (_ bv3 32)) ?x15)))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select data0 (_ bv7 32)) (concat (select data0 (_ bv6 32)) ?x24)))))
 (fp.leq ?x31 ((_ to_fp 11 53) (_ bv4626322717216342016 64)))))))
(assert
 (let ((?x45 (concat (select data0 (_ bv18 32)) (concat (select data0 (_ bv17 32)) (select data0 (_ bv16 32))))))
 (let ((?x54 (concat (select data0 (_ bv21 32)) (concat (select data0 (_ bv20 32)) (concat (select data0 (_ bv19 32)) ?x45)))))
 (let ((?x61 ((_ to_fp 11 53) (concat (select data0 (_ bv23 32)) (concat (select data0 (_ bv22 32)) ?x54)))))
 (fp.geq ?x61 ((_ to_fp 11 53) (_ bv4621819117588971520 64)))))))
(assert
 (let ((?x45 (concat (select data0 (_ bv18 32)) (concat (select data0 (_ bv17 32)) (select data0 (_ bv16 32))))))
 (let ((?x54 (concat (select data0 (_ bv21 32)) (concat (select data0 (_ bv20 32)) (concat (select data0 (_ bv19 32)) ?x45)))))
 (let ((?x61 ((_ to_fp 11 53) (concat (select data0 (_ bv23 32)) (concat (select data0 (_ bv22 32)) ?x54)))))
 (fp.leq ?x61 ((_ to_fp 11 53) (_ bv4626322717216342016 64)))))))
(assert
 (not false))
(check-sat)
(exit)
