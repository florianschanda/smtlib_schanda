(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_bary_diverge.x86_64/query.27.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun symbolic_0_float_10 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x12 (concat (select symbolic_0_float_10 (_ bv1 32)) (select symbolic_0_float_10 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_10 (_ bv3 32)) (concat (select symbolic_0_float_10 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ((_ to_fp 8 24) (_ bv3212836864 32)))))))
(assert
 (let ((?x12 (concat (select symbolic_0_float_10 (_ bv1 32)) (select symbolic_0_float_10 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_10 (_ bv3 32)) (concat (select symbolic_0_float_10 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ((_ to_fp 8 24) (_ bv1065353216 32)))))))
(assert
 (let ((?x12 (concat (select symbolic_0_float_10 (_ bv1 32)) (select symbolic_0_float_10 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_10 (_ bv3 32)) (concat (select symbolic_0_float_10 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x36 (fp.mul roundNearestTiesToEven ?x19 ((_ to_fp 8 24) (_ bv1045220557 32)))))
(let ((?x33 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x19 ((_ to_fp 8 24) (_ bv1056964608 32))) (fp.mul roundNearestTiesToEven ?x19 ((_ to_fp 8 24) (_ bv1050253722 32))))))
(let ((?x37 (fp.add roundNearestTiesToEven ?x33 ?x36)))
(let ((?x40 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x37 ((_ to_fp 8 24) (_ bv1056964608 32))) (fp.mul roundNearestTiesToEven ?x37 ((_ to_fp 8 24) (_ bv1050253722 32))))))
(let ((?x41 (fp.add roundNearestTiesToEven ?x40 ?x36)))
(not (and (fp.geq ?x41 ((_ to_fp 8 24) (_ bv3231711232 32))) (fp.leq ?x41 ((_ to_fp 8 24) (_ bv1084227584 32))))))))))))))
(check-sat)
(exit)
