(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_synthetic_prefix_sum_klee_bug_double.x86_64/query.16.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun data_in0 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select data_in0 (_ bv10 32)) (concat (select data_in0 (_ bv9 32)) (select data_in0 (_ bv8 32))))))
 (let ((?x21 (concat (select data_in0 (_ bv12 32)) (concat (select data_in0 (_ bv11 32)) ?x15))))
 (let ((?x27 (concat (select data_in0 (_ bv14 32)) (concat (select data_in0 (_ bv13 32)) ?x21))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select data_in0 (_ bv15 32)) ?x27))))
 (not (fp.isNaN ?x31)))))))
(assert
 (let ((?x35 ((_ to_fp 11 53) (_ bv0 64))))
 (let ((?x15 (concat (select data_in0 (_ bv10 32)) (concat (select data_in0 (_ bv9 32)) (select data_in0 (_ bv8 32))))))
 (let ((?x21 (concat (select data_in0 (_ bv12 32)) (concat (select data_in0 (_ bv11 32)) ?x15))))
 (let ((?x27 (concat (select data_in0 (_ bv14 32)) (concat (select data_in0 (_ bv13 32)) ?x21))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select data_in0 (_ bv15 32)) ?x27))))
 (not (fp.lt ?x31 ?x35))))))))
(assert
 (let ((?x45 (concat (select data_in0 (_ bv18 32)) (concat (select data_in0 (_ bv17 32)) (select data_in0 (_ bv16 32))))))
 (let ((?x51 (concat (select data_in0 (_ bv20 32)) (concat (select data_in0 (_ bv19 32)) ?x45))))
 (let ((?x57 (concat (select data_in0 (_ bv22 32)) (concat (select data_in0 (_ bv21 32)) ?x51))))
 (let ((?x61 ((_ to_fp 11 53) (concat (select data_in0 (_ bv23 32)) ?x57))))
 (not (fp.isNaN ?x61)))))))
(assert
 (let ((?x35 ((_ to_fp 11 53) (_ bv0 64))))
 (let ((?x45 (concat (select data_in0 (_ bv18 32)) (concat (select data_in0 (_ bv17 32)) (select data_in0 (_ bv16 32))))))
 (let ((?x51 (concat (select data_in0 (_ bv20 32)) (concat (select data_in0 (_ bv19 32)) ?x45))))
 (let ((?x57 (concat (select data_in0 (_ bv22 32)) (concat (select data_in0 (_ bv21 32)) ?x51))))
 (let ((?x61 ((_ to_fp 11 53) (concat (select data_in0 (_ bv23 32)) ?x57))))
 (not (fp.lt ?x61 ?x35))))))))
(assert
 (let ((?x73 (concat (select data_in0 (_ bv26 32)) (concat (select data_in0 (_ bv25 32)) (select data_in0 (_ bv24 32))))))
 (let ((?x79 (concat (select data_in0 (_ bv28 32)) (concat (select data_in0 (_ bv27 32)) ?x73))))
 (let ((?x85 (concat (select data_in0 (_ bv30 32)) (concat (select data_in0 (_ bv29 32)) ?x79))))
 (let ((?x89 ((_ to_fp 11 53) (concat (select data_in0 (_ bv31 32)) ?x85))))
 (not (fp.isNaN ?x89)))))))
(assert
 (let ((?x35 ((_ to_fp 11 53) (_ bv0 64))))
 (let ((?x73 (concat (select data_in0 (_ bv26 32)) (concat (select data_in0 (_ bv25 32)) (select data_in0 (_ bv24 32))))))
 (let ((?x79 (concat (select data_in0 (_ bv28 32)) (concat (select data_in0 (_ bv27 32)) ?x73))))
 (let ((?x85 (concat (select data_in0 (_ bv30 32)) (concat (select data_in0 (_ bv29 32)) ?x79))))
 (let ((?x89 ((_ to_fp 11 53) (concat (select data_in0 (_ bv31 32)) ?x85))))
 (not (fp.lt ?x89 ?x35))))))))
(assert
 (let ((?x101 (concat (select data_in0 (_ bv2 32)) (concat (select data_in0 (_ bv1 32)) (select data_in0 (_ bv0 32))))))
 (let ((?x107 (concat (select data_in0 (_ bv4 32)) (concat (select data_in0 (_ bv3 32)) ?x101))))
 (let ((?x113 (concat (select data_in0 (_ bv6 32)) (concat (select data_in0 (_ bv5 32)) ?x107))))
 (let ((?x117 ((_ to_fp 11 53) (concat (select data_in0 (_ bv7 32)) ?x113))))
 (not (fp.isNaN ?x117)))))))
(assert
 (let ((?x101 (concat (select data_in0 (_ bv2 32)) (concat (select data_in0 (_ bv1 32)) (select data_in0 (_ bv0 32))))))
 (let ((?x107 (concat (select data_in0 (_ bv4 32)) (concat (select data_in0 (_ bv3 32)) ?x101))))
 (let ((?x113 (concat (select data_in0 (_ bv6 32)) (concat (select data_in0 (_ bv5 32)) ?x107))))
 (let ((?x117 ((_ to_fp 11 53) (concat (select data_in0 (_ bv7 32)) ?x113))))
 (not (fp.lt ?x117 ?x117)))))))
(assert
 (let ((?x15 (concat (select data_in0 (_ bv10 32)) (concat (select data_in0 (_ bv9 32)) (select data_in0 (_ bv8 32))))))
 (let ((?x21 (concat (select data_in0 (_ bv12 32)) (concat (select data_in0 (_ bv11 32)) ?x15))))
 (let ((?x27 (concat (select data_in0 (_ bv14 32)) (concat (select data_in0 (_ bv13 32)) ?x21))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select data_in0 (_ bv15 32)) ?x27))))
 (let ((?x101 (concat (select data_in0 (_ bv2 32)) (concat (select data_in0 (_ bv1 32)) (select data_in0 (_ bv0 32))))))
 (let ((?x107 (concat (select data_in0 (_ bv4 32)) (concat (select data_in0 (_ bv3 32)) ?x101))))
 (let ((?x113 (concat (select data_in0 (_ bv6 32)) (concat (select data_in0 (_ bv5 32)) ?x107))))
 (let ((?x117 ((_ to_fp 11 53) (concat (select data_in0 (_ bv7 32)) ?x113))))
 (let ((?x123 (fp.add roundNearestTiesToEven ?x117 ?x31)))
 (not (fp.isNaN ?x123))))))))))))
(assert
 (let ((?x15 (concat (select data_in0 (_ bv10 32)) (concat (select data_in0 (_ bv9 32)) (select data_in0 (_ bv8 32))))))
 (let ((?x21 (concat (select data_in0 (_ bv12 32)) (concat (select data_in0 (_ bv11 32)) ?x15))))
 (let ((?x27 (concat (select data_in0 (_ bv14 32)) (concat (select data_in0 (_ bv13 32)) ?x21))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select data_in0 (_ bv15 32)) ?x27))))
 (let ((?x101 (concat (select data_in0 (_ bv2 32)) (concat (select data_in0 (_ bv1 32)) (select data_in0 (_ bv0 32))))))
 (let ((?x107 (concat (select data_in0 (_ bv4 32)) (concat (select data_in0 (_ bv3 32)) ?x101))))
 (let ((?x113 (concat (select data_in0 (_ bv6 32)) (concat (select data_in0 (_ bv5 32)) ?x107))))
 (let ((?x117 ((_ to_fp 11 53) (concat (select data_in0 (_ bv7 32)) ?x113))))
 (let ((?x123 (fp.add roundNearestTiesToEven ?x117 ?x31)))
 (not (fp.lt ?x123 ?x31))))))))))))
(assert
 (let ((?x73 (concat (select data_in0 (_ bv26 32)) (concat (select data_in0 (_ bv25 32)) (select data_in0 (_ bv24 32))))))
(let ((?x79 (concat (select data_in0 (_ bv28 32)) (concat (select data_in0 (_ bv27 32)) ?x73))))
(let ((?x85 (concat (select data_in0 (_ bv30 32)) (concat (select data_in0 (_ bv29 32)) ?x79))))
(let ((?x89 ((_ to_fp 11 53) (concat (select data_in0 (_ bv31 32)) ?x85))))
(let ((?x15 (concat (select data_in0 (_ bv10 32)) (concat (select data_in0 (_ bv9 32)) (select data_in0 (_ bv8 32))))))
(let ((?x21 (concat (select data_in0 (_ bv12 32)) (concat (select data_in0 (_ bv11 32)) ?x15))))
(let ((?x27 (concat (select data_in0 (_ bv14 32)) (concat (select data_in0 (_ bv13 32)) ?x21))))
(let ((?x31 ((_ to_fp 11 53) (concat (select data_in0 (_ bv15 32)) ?x27))))
(let ((?x101 (concat (select data_in0 (_ bv2 32)) (concat (select data_in0 (_ bv1 32)) (select data_in0 (_ bv0 32))))))
(let ((?x107 (concat (select data_in0 (_ bv4 32)) (concat (select data_in0 (_ bv3 32)) ?x101))))
(let ((?x113 (concat (select data_in0 (_ bv6 32)) (concat (select data_in0 (_ bv5 32)) ?x107))))
(let ((?x117 ((_ to_fp 11 53) (concat (select data_in0 (_ bv7 32)) ?x113))))
(let ((?x123 (fp.add roundNearestTiesToEven ?x117 ?x31)))
(let ((?x45 (concat (select data_in0 (_ bv18 32)) (concat (select data_in0 (_ bv17 32)) (select data_in0 (_ bv16 32))))))
(let ((?x51 (concat (select data_in0 (_ bv20 32)) (concat (select data_in0 (_ bv19 32)) ?x45))))
(let ((?x57 (concat (select data_in0 (_ bv22 32)) (concat (select data_in0 (_ bv21 32)) ?x51))))
(let ((?x61 ((_ to_fp 11 53) (concat (select data_in0 (_ bv23 32)) ?x57))))
(let ((?x129 (fp.add roundNearestTiesToEven ?x89 (fp.add roundNearestTiesToEven ?x61 ?x123))))
(not (and (not (fp.isNaN ?x129)) (not (fp.lt ?x129 ?x89)))))))))))))))))))))))
(check-sat)
(exit)
