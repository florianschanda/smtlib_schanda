(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.511.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun symbolic_0_float_40 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_53 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_32 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float1 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_74 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_65 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_96 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_87 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_18 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_29 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x59 (fp.sub roundNearestTiesToEven ?x49 ?x58)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x59)) (fp.gt ?x46 ?x59))))))))))))))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x58)) (fp.lt ?x46 ?x58))))))))))))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (fp.geq ?x76 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (fp.leq ?x76 ?x80))))))
(assert
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (let ((?x91 (fp.sub roundNearestTiesToEven ?x90 ?x19)))
 (not (fp.isNaN ?x91))))))))))
(assert
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x49 ?x76)))
 (not (fp.isNaN ?x94))))))))
(assert
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x49 ?x76)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (let ((?x91 (fp.sub roundNearestTiesToEven ?x90 ?x19)))
 (not (fp.gt ?x91 ?x94)))))))))))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x102 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
 (let ((?x106 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x102))))
 (let ((?x107 ((_ to_fp 8 24) ?x106)))
 (fp.geq ?x107 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x102 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
 (let ((?x106 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x102))))
 (let ((?x107 ((_ to_fp 8 24) ?x106)))
 (fp.leq ?x107 ?x80))))))
(assert
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x119 (fp.sub roundNearestTiesToEven ?x19 ?x76)))
 (let ((?x113 (concat (select symbolic_0_float_87 (_ bv1 32)) (select symbolic_0_float_87 (_ bv0 32)))))
 (let ((?x117 (concat (select symbolic_0_float_87 (_ bv3 32)) (concat (select symbolic_0_float_87 (_ bv2 32)) ?x113))))
 (let ((?x118 ((_ to_fp 8 24) ?x117)))
 (let ((?x120 (fp.sub roundNearestTiesToEven ?x118 ?x119)))
 (not (fp.isNaN ?x120))))))))))))))
(assert
 (let ((?x102 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
 (let ((?x106 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x102))))
 (let ((?x107 ((_ to_fp 8 24) ?x106)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x123 (fp.sub roundNearestTiesToEven ?x49 ?x107)))
 (not (fp.isNaN ?x123))))))))
(assert
 (let ((?x102 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
 (let ((?x106 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x102))))
 (let ((?x107 ((_ to_fp 8 24) ?x106)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x123 (fp.sub roundNearestTiesToEven ?x49 ?x107)))
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x119 (fp.sub roundNearestTiesToEven ?x19 ?x76)))
 (let ((?x113 (concat (select symbolic_0_float_87 (_ bv1 32)) (select symbolic_0_float_87 (_ bv0 32)))))
 (let ((?x117 (concat (select symbolic_0_float_87 (_ bv3 32)) (concat (select symbolic_0_float_87 (_ bv2 32)) ?x113))))
 (let ((?x118 ((_ to_fp 8 24) ?x117)))
 (let ((?x120 (fp.sub roundNearestTiesToEven ?x118 ?x119)))
 (not (fp.gt ?x120 ?x123)))))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x135 (concat (select symbolic_0_float_18 (_ bv1 32)) (select symbolic_0_float_18 (_ bv0 32)))))
 (let ((?x139 (concat (select symbolic_0_float_18 (_ bv3 32)) (concat (select symbolic_0_float_18 (_ bv2 32)) ?x135))))
 (let ((?x140 ((_ to_fp 8 24) ?x139)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x141 (fp.sub roundNearestTiesToEven ?x49 ?x140)))
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x130 (fp.sub roundNearestTiesToEven ?x34 ?x77)))
 (or (or (fp.isNaN ?x130) (fp.isNaN ?x141)) (fp.gt ?x130 ?x141)))))))))))))
(assert
 (let ((?x135 (concat (select symbolic_0_float_18 (_ bv1 32)) (select symbolic_0_float_18 (_ bv0 32)))))
 (let ((?x139 (concat (select symbolic_0_float_18 (_ bv3 32)) (concat (select symbolic_0_float_18 (_ bv2 32)) ?x135))))
 (let ((?x140 ((_ to_fp 8 24) ?x139)))
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x130 (fp.sub roundNearestTiesToEven ?x34 ?x77)))
 (or (or (fp.isNaN ?x130) (fp.isNaN ?x140)) (fp.lt ?x130 ?x140)))))))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x80))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x155 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x155))))
 (let ((?x160 ((_ to_fp 8 24) ?x159)))
 (let ((?x161 (fp.sub roundNearestTiesToEven ?x160 ?x34)))
 (not (fp.isNaN ?x161))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (not (fp.isNaN ?x164))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x155 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x155))))
 (let ((?x160 ((_ to_fp 8 24) ?x159)))
 (let ((?x161 (fp.sub roundNearestTiesToEven ?x160 ?x34)))
 (not (fp.gt ?x161 ?x164)))))))))))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.geq ?x58 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.leq ?x58 ?x80))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (fp.geq ?x90 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (fp.leq ?x90 ?x24))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x113 (concat (select symbolic_0_float_87 (_ bv1 32)) (select symbolic_0_float_87 (_ bv0 32)))))
 (let ((?x117 (concat (select symbolic_0_float_87 (_ bv3 32)) (concat (select symbolic_0_float_87 (_ bv2 32)) ?x113))))
 (let ((?x118 ((_ to_fp 8 24) ?x117)))
 (fp.geq ?x118 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x113 (concat (select symbolic_0_float_87 (_ bv1 32)) (select symbolic_0_float_87 (_ bv0 32)))))
 (let ((?x117 (concat (select symbolic_0_float_87 (_ bv3 32)) (concat (select symbolic_0_float_87 (_ bv2 32)) ?x113))))
 (let ((?x118 ((_ to_fp 8 24) ?x117)))
 (fp.leq ?x118 ?x24))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x135 (concat (select symbolic_0_float_18 (_ bv1 32)) (select symbolic_0_float_18 (_ bv0 32)))))
 (let ((?x139 (concat (select symbolic_0_float_18 (_ bv3 32)) (concat (select symbolic_0_float_18 (_ bv2 32)) ?x135))))
 (let ((?x140 ((_ to_fp 8 24) ?x139)))
 (fp.geq ?x140 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x135 (concat (select symbolic_0_float_18 (_ bv1 32)) (select symbolic_0_float_18 (_ bv0 32)))))
 (let ((?x139 (concat (select symbolic_0_float_18 (_ bv3 32)) (concat (select symbolic_0_float_18 (_ bv2 32)) ?x135))))
 (let ((?x140 ((_ to_fp 8 24) ?x139)))
 (fp.leq ?x140 ?x80))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x155 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x155))))
 (let ((?x160 ((_ to_fp 8 24) ?x159)))
 (fp.geq ?x160 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x155 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x155))))
 (let ((?x160 ((_ to_fp 8 24) ?x159)))
 (fp.leq ?x160 ?x24))))))
(assert
 (let ((?x102 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
(let ((?x106 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x102))))
(let ((?x107 ((_ to_fp 8 24) ?x106)))
(let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
(let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
(let ((?x76 ((_ to_fp 8 24) ?x75)))
(let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x119 (fp.sub roundNearestTiesToEven ?x19 ?x76)))
(let ((?x179 (fp.sub roundNearestTiesToEven ?x119 ?x107)))
(not (and (fp.geq ?x179 ((_ to_fp 8 24) (_ bv3271622656 32))) (fp.leq ?x179 ((_ to_fp 8 24) (_ bv1124139008 32)))))))))))))))))
(check-sat)
(exit)
