(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.356.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_60 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_72 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_41 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_83 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_94 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_56 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_25 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_38 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_17 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float9 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x49 (fp.sub roundNearestTiesToEven ?x39 ?x48)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x36 (fp.sub roundNearestTiesToEven ?x19 ?x34)))
 (or (or (fp.isNaN ?x36) (fp.isNaN ?x49)) (fp.gt ?x36 ?x49)))))))))))))))
(assert
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x36 (fp.sub roundNearestTiesToEven ?x19 ?x34)))
 (or (or (fp.isNaN ?x36) (fp.isNaN ?x48)) (fp.lt ?x36 ?x48)))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x61 (concat (select symbolic_0_float_83 (_ bv1 32)) (select symbolic_0_float_83 (_ bv0 32)))))
 (let ((?x65 (concat (select symbolic_0_float_83 (_ bv3 32)) (concat (select symbolic_0_float_83 (_ bv2 32)) ?x61))))
 (let ((?x66 ((_ to_fp 8 24) ?x65)))
 (fp.geq ?x66 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x61 (concat (select symbolic_0_float_83 (_ bv1 32)) (select symbolic_0_float_83 (_ bv0 32)))))
 (let ((?x65 (concat (select symbolic_0_float_83 (_ bv3 32)) (concat (select symbolic_0_float_83 (_ bv2 32)) ?x61))))
 (let ((?x66 ((_ to_fp 8 24) ?x65)))
 (fp.leq ?x66 ?x24))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x72 (concat (select symbolic_0_float_94 (_ bv1 32)) (select symbolic_0_float_94 (_ bv0 32)))))
 (let ((?x76 (concat (select symbolic_0_float_94 (_ bv3 32)) (concat (select symbolic_0_float_94 (_ bv2 32)) ?x72))))
 (let ((?x77 ((_ to_fp 8 24) ?x76)))
 (fp.geq ?x77 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x72 (concat (select symbolic_0_float_94 (_ bv1 32)) (select symbolic_0_float_94 (_ bv0 32)))))
 (let ((?x76 (concat (select symbolic_0_float_94 (_ bv3 32)) (concat (select symbolic_0_float_94 (_ bv2 32)) ?x72))))
 (let ((?x77 ((_ to_fp 8 24) ?x76)))
 (fp.leq ?x77 ?x81))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x99 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x103 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x99))))
 (let ((?x104 ((_ to_fp 8 24) ?x103)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x105 (fp.sub roundNearestTiesToEven ?x39 ?x104)))
 (let ((?x88 (concat (select symbolic_0_float_25 (_ bv1 32)) (select symbolic_0_float_25 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_25 (_ bv3 32)) (concat (select symbolic_0_float_25 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x34 ?x93)))
 (or (or (fp.isNaN ?x94) (fp.isNaN ?x105)) (fp.gt ?x94 ?x105)))))))))))))))
(assert
 (let ((?x99 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x103 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x99))))
 (let ((?x104 ((_ to_fp 8 24) ?x103)))
 (let ((?x88 (concat (select symbolic_0_float_25 (_ bv1 32)) (select symbolic_0_float_25 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_25 (_ bv3 32)) (concat (select symbolic_0_float_25 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x34 ?x93)))
 (or (or (fp.isNaN ?x94) (fp.isNaN ?x104)) (fp.lt ?x94 ?x104)))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (fp.geq ?x48 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (fp.leq ?x48 ?x81))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x88 (concat (select symbolic_0_float_25 (_ bv1 32)) (select symbolic_0_float_25 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_25 (_ bv3 32)) (concat (select symbolic_0_float_25 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (fp.geq ?x93 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x88 (concat (select symbolic_0_float_25 (_ bv1 32)) (select symbolic_0_float_25 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_25 (_ bv3 32)) (concat (select symbolic_0_float_25 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (fp.leq ?x93 ?x24))))))
(assert
 (let ((?x133 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x39 ?x138)))
 (let ((?x121 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x125 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x121))))
 (let ((?x126 ((_ to_fp 8 24) ?x125)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x88 (concat (select symbolic_0_float_25 (_ bv1 32)) (select symbolic_0_float_25 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_25 (_ bv3 32)) (concat (select symbolic_0_float_25 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x128 (fp.sub roundNearestTiesToEven ?x93 (fp.sub roundNearestTiesToEven ?x78 ?x126))))
 (or (or (fp.isNaN ?x128) (fp.isNaN ?x139)) (fp.gt ?x128 ?x139))))))))))))))))
(assert
 (let ((?x133 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (let ((?x121 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x125 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x121))))
 (let ((?x126 ((_ to_fp 8 24) ?x125)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x88 (concat (select symbolic_0_float_25 (_ bv1 32)) (select symbolic_0_float_25 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_25 (_ bv3 32)) (concat (select symbolic_0_float_25 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x128 (fp.sub roundNearestTiesToEven ?x93 (fp.sub roundNearestTiesToEven ?x78 ?x126))))
 (or (or (fp.isNaN ?x128) (fp.isNaN ?x138)) (fp.lt ?x128 ?x138))))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x99 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x103 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x99))))
 (let ((?x104 ((_ to_fp 8 24) ?x103)))
 (fp.geq ?x104 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x99 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x103 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x99))))
 (let ((?x104 ((_ to_fp 8 24) ?x103)))
 (fp.leq ?x104 ?x81))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x121 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x125 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x121))))
 (let ((?x126 ((_ to_fp 8 24) ?x125)))
 (fp.geq ?x126 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x121 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x125 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x121))))
 (let ((?x126 ((_ to_fp 8 24) ?x125)))
 (fp.leq ?x126 ?x81))))))
(assert
 (let ((?x121 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x125 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x121))))
 (let ((?x126 ((_ to_fp 8 24) ?x125)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x152 (fp.sub roundNearestTiesToEven ?x39 ?x126)))
 (not (fp.isNaN ?x152))))))))
(assert
 (let ((?x121 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x125 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x121))))
 (let ((?x126 ((_ to_fp 8 24) ?x125)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x152 (fp.sub roundNearestTiesToEven ?x39 ?x126)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x163 ?x78)))
 (not (fp.gt ?x164 ?x152)))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x133 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (fp.geq ?x138 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x133 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (fp.leq ?x138 ?x81))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (fp.geq ?x163 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (fp.leq ?x163 ?x24))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x163 ?x78)))
 (not (fp.isNaN ?x164))))))))
(assert
 (let ((?x72 (concat (select symbolic_0_float_94 (_ bv1 32)) (select symbolic_0_float_94 (_ bv0 32)))))
(let ((?x76 (concat (select symbolic_0_float_94 (_ bv3 32)) (concat (select symbolic_0_float_94 (_ bv2 32)) ?x72))))
(let ((?x77 ((_ to_fp 8 24) ?x76)))
(let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
(let ((?x176 (fp.sub roundNearestTiesToEven ?x39 ?x77)))
(let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x61 (concat (select symbolic_0_float_83 (_ bv1 32)) (select symbolic_0_float_83 (_ bv0 32)))))
(let ((?x65 (concat (select symbolic_0_float_83 (_ bv3 32)) (concat (select symbolic_0_float_83 (_ bv2 32)) ?x61))))
(let ((?x66 ((_ to_fp 8 24) ?x65)))
(let ((?x173 (fp.sub roundNearestTiesToEven ?x66 ?x19)))
(let (($x182 (and (and (not (fp.isNaN ?x173)) (not (fp.isNaN ?x176))) (not (fp.gt ?x173 ?x176)))))
(not $x182)))))))))))))))
(check-sat)
(exit)
