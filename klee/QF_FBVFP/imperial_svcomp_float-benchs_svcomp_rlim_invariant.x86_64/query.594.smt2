(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.594.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun symbolic_0_float_80 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_93 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_72 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_41 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_55 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_24 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_66 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_38 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_17 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float9 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x59 (fp.sub roundNearestTiesToEven ?x49 ?x58)))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x59)) (fp.gt ?x46 ?x59))))))))))))))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x58)) (fp.lt ?x46 ?x58))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x84 (concat (select symbolic_0_float_55 (_ bv1 32)) (select symbolic_0_float_55 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_55 (_ bv3 32)) (concat (select symbolic_0_float_55 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x90 (fp.sub roundNearestTiesToEven ?x49 ?x89)))
 (let ((?x73 (concat (select symbolic_0_float_24 (_ bv1 32)) (select symbolic_0_float_24 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_24 (_ bv3 32)) (concat (select symbolic_0_float_24 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x79 (fp.sub roundNearestTiesToEven ?x34 ?x78)))
 (or (or (fp.isNaN ?x79) (fp.isNaN ?x90)) (fp.gt ?x79 ?x90)))))))))))))))
(assert
 (let ((?x84 (concat (select symbolic_0_float_55 (_ bv1 32)) (select symbolic_0_float_55 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_55 (_ bv3 32)) (concat (select symbolic_0_float_55 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (let ((?x73 (concat (select symbolic_0_float_24 (_ bv1 32)) (select symbolic_0_float_24 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_24 (_ bv3 32)) (concat (select symbolic_0_float_24 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x79 (fp.sub roundNearestTiesToEven ?x34 ?x78)))
 (or (or (fp.isNaN ?x79) (fp.isNaN ?x89)) (fp.lt ?x79 ?x89)))))))))))))
(assert
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x99))))))
(assert
 (let ((?x102 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x102))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x104 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x109 (concat (select symbolic_0_float_66 (_ bv1 32)) (select symbolic_0_float_66 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float_66 (_ bv3 32)) (concat (select symbolic_0_float_66 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (let ((?x115 (fp.sub roundNearestTiesToEven ?x114 ?x34)))
 (or (fp.isNaN ?x104) (fp.gt ?x115 ?x104)))))))))))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x109 (concat (select symbolic_0_float_66 (_ bv1 32)) (select symbolic_0_float_66 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float_66 (_ bv3 32)) (concat (select symbolic_0_float_66 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (let ((?x115 (fp.sub roundNearestTiesToEven ?x114 ?x34)))
 (not (fp.isNaN ?x115))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (not (fp.isNaN ?x43))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x109 (concat (select symbolic_0_float_66 (_ bv1 32)) (select symbolic_0_float_66 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float_66 (_ bv3 32)) (concat (select symbolic_0_float_66 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (let ((?x115 (fp.sub roundNearestTiesToEven ?x114 ?x34)))
 (not (fp.lt ?x115 ?x43)))))))))))))
(assert
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.geq ?x58 ?x99))))))
(assert
 (let ((?x102 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.leq ?x58 ?x102))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x73 (concat (select symbolic_0_float_24 (_ bv1 32)) (select symbolic_0_float_24 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_24 (_ bv3 32)) (concat (select symbolic_0_float_24 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (fp.geq ?x78 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x73 (concat (select symbolic_0_float_24 (_ bv1 32)) (select symbolic_0_float_24 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_24 (_ bv3 32)) (concat (select symbolic_0_float_24 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (fp.leq ?x78 ?x24))))))
(assert
 (let ((?x143 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x147 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x143))))
 (let ((?x148 ((_ to_fp 8 24) ?x147)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x149 (fp.sub roundNearestTiesToEven ?x49 ?x148)))
 (let ((?x131 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x73 (concat (select symbolic_0_float_24 (_ bv1 32)) (select symbolic_0_float_24 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_24 (_ bv3 32)) (concat (select symbolic_0_float_24 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (let ((?x138 (fp.sub roundNearestTiesToEven ?x78 (fp.sub roundNearestTiesToEven ?x99 ?x136))))
 (or (or (fp.isNaN ?x138) (fp.isNaN ?x149)) (fp.gt ?x138 ?x149))))))))))))))))
(assert
 (let ((?x143 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x147 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x143))))
 (let ((?x148 ((_ to_fp 8 24) ?x147)))
 (let ((?x131 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x73 (concat (select symbolic_0_float_24 (_ bv1 32)) (select symbolic_0_float_24 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_24 (_ bv3 32)) (concat (select symbolic_0_float_24 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (let ((?x138 (fp.sub roundNearestTiesToEven ?x78 (fp.sub roundNearestTiesToEven ?x99 ?x136))))
 (or (or (fp.isNaN ?x138) (fp.isNaN ?x148)) (fp.lt ?x138 ?x148))))))))))))))
(assert
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x84 (concat (select symbolic_0_float_55 (_ bv1 32)) (select symbolic_0_float_55 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_55 (_ bv3 32)) (concat (select symbolic_0_float_55 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (fp.geq ?x89 ?x99))))))
(assert
 (let ((?x102 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x84 (concat (select symbolic_0_float_55 (_ bv1 32)) (select symbolic_0_float_55 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_55 (_ bv3 32)) (concat (select symbolic_0_float_55 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (fp.leq ?x89 ?x102))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x109 (concat (select symbolic_0_float_66 (_ bv1 32)) (select symbolic_0_float_66 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float_66 (_ bv3 32)) (concat (select symbolic_0_float_66 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (fp.geq ?x114 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x109 (concat (select symbolic_0_float_66 (_ bv1 32)) (select symbolic_0_float_66 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float_66 (_ bv3 32)) (concat (select symbolic_0_float_66 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (fp.leq ?x114 ?x24))))))
(assert
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x131 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (fp.geq ?x136 ?x99))))))
(assert
 (let ((?x102 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x131 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (fp.leq ?x136 ?x102))))))
(assert
 (let ((?x131 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x49 ?x136)))
 (not (fp.isNaN ?x164))))))))
(assert
 (let ((?x131 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x49 ?x136)))
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x170 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x174 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x170))))
 (let ((?x175 ((_ to_fp 8 24) ?x174)))
 (let ((?x176 (fp.sub roundNearestTiesToEven ?x175 ?x99)))
 (not (fp.gt ?x176 ?x164)))))))))))))
(assert
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x143 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x147 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x143))))
 (let ((?x148 ((_ to_fp 8 24) ?x147)))
 (fp.geq ?x148 ?x99))))))
(assert
 (let ((?x102 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x143 (concat (select symbolic_0_float_38 (_ bv1 32)) (select symbolic_0_float_38 (_ bv0 32)))))
 (let ((?x147 (concat (select symbolic_0_float_38 (_ bv3 32)) (concat (select symbolic_0_float_38 (_ bv2 32)) ?x143))))
 (let ((?x148 ((_ to_fp 8 24) ?x147)))
 (fp.leq ?x148 ?x102))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x170 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x174 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x170))))
 (let ((?x175 ((_ to_fp 8 24) ?x174)))
 (fp.geq ?x175 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x170 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x174 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x170))))
 (let ((?x175 ((_ to_fp 8 24) ?x174)))
 (fp.leq ?x175 ?x24))))))
(assert
 (let ((?x99 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x170 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x174 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x170))))
 (let ((?x175 ((_ to_fp 8 24) ?x174)))
 (let ((?x176 (fp.sub roundNearestTiesToEven ?x175 ?x99)))
 (not (fp.isNaN ?x176))))))))
(assert
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(not (and (fp.geq ?x19 ((_ to_fp 8 24) (_ bv3271622656 32))) (fp.leq ?x19 ((_ to_fp 8 24) (_ bv1124139008 32)))))))))
(check-sat)
(exit)
