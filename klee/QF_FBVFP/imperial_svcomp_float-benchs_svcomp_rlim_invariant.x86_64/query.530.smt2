(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.530.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_60 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_72 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_41 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_83 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_94 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_57 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_36 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_15 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float8 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_29 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x49 (fp.sub roundNearestTiesToEven ?x39 ?x48)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x36 (fp.sub roundNearestTiesToEven ?x19 ?x34)))
 (or (or (fp.isNaN ?x36) (fp.isNaN ?x49)) (fp.gt ?x36 ?x49)))))))))))))))
(assert
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x36 (fp.sub roundNearestTiesToEven ?x19 ?x34)))
 (or (or (fp.isNaN ?x36) (fp.isNaN ?x48)) (fp.lt ?x36 ?x48)))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x61 (concat (select symbolic_0_float_83 (_ bv1 32)) (select symbolic_0_float_83 (_ bv0 32)))))
 (let ((?x65 (concat (select symbolic_0_float_83 (_ bv3 32)) (concat (select symbolic_0_float_83 (_ bv2 32)) ?x61))))
 (let ((?x66 ((_ to_fp 8 24) ?x65)))
 (fp.geq ?x66 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x61 (concat (select symbolic_0_float_83 (_ bv1 32)) (select symbolic_0_float_83 (_ bv0 32)))))
 (let ((?x65 (concat (select symbolic_0_float_83 (_ bv3 32)) (concat (select symbolic_0_float_83 (_ bv2 32)) ?x61))))
 (let ((?x66 ((_ to_fp 8 24) ?x65)))
 (fp.leq ?x66 ?x24))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x72 (concat (select symbolic_0_float_94 (_ bv1 32)) (select symbolic_0_float_94 (_ bv0 32)))))
 (let ((?x76 (concat (select symbolic_0_float_94 (_ bv3 32)) (concat (select symbolic_0_float_94 (_ bv2 32)) ?x72))))
 (let ((?x77 ((_ to_fp 8 24) ?x76)))
 (fp.geq ?x77 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x72 (concat (select symbolic_0_float_94 (_ bv1 32)) (select symbolic_0_float_94 (_ bv0 32)))))
 (let ((?x76 (concat (select symbolic_0_float_94 (_ bv3 32)) (concat (select symbolic_0_float_94 (_ bv2 32)) ?x72))))
 (let ((?x77 ((_ to_fp 8 24) ?x76)))
 (fp.leq ?x77 ?x81))))))
(assert
 (let ((?x72 (concat (select symbolic_0_float_94 (_ bv1 32)) (select symbolic_0_float_94 (_ bv0 32)))))
 (let ((?x76 (concat (select symbolic_0_float_94 (_ bv3 32)) (concat (select symbolic_0_float_94 (_ bv2 32)) ?x72))))
 (let ((?x77 ((_ to_fp 8 24) ?x76)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x85 (fp.sub roundNearestTiesToEven ?x39 ?x77)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x61 (concat (select symbolic_0_float_83 (_ bv1 32)) (select symbolic_0_float_83 (_ bv0 32)))))
 (let ((?x65 (concat (select symbolic_0_float_83 (_ bv3 32)) (concat (select symbolic_0_float_83 (_ bv2 32)) ?x61))))
 (let ((?x66 ((_ to_fp 8 24) ?x65)))
 (let ((?x83 (fp.sub roundNearestTiesToEven ?x66 ?x19)))
 (or (or (fp.isNaN ?x83) (fp.isNaN ?x85)) (fp.gt ?x83 ?x85)))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x117 (concat (select symbolic_0_float_57 (_ bv1 32)) (select symbolic_0_float_57 (_ bv0 32)))))
 (let ((?x121 (concat (select symbolic_0_float_57 (_ bv3 32)) (concat (select symbolic_0_float_57 (_ bv2 32)) ?x117))))
 (let ((?x122 ((_ to_fp 8 24) ?x121)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x123 (fp.sub roundNearestTiesToEven ?x39 ?x122)))
 (let ((?x105 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x109 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x105))))
 (let ((?x110 ((_ to_fp 8 24) ?x109)))
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x101 (fp.sub roundNearestTiesToEven ?x78 ?x100)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x112 (fp.sub roundNearestTiesToEven ?x34 (fp.add roundNearestTiesToEven ?x101 ?x110))))
 (or (or (fp.isNaN ?x112) (fp.isNaN ?x123)) (fp.gt ?x112 ?x123))))))))))))))))))))
(assert
 (let ((?x117 (concat (select symbolic_0_float_57 (_ bv1 32)) (select symbolic_0_float_57 (_ bv0 32)))))
 (let ((?x121 (concat (select symbolic_0_float_57 (_ bv3 32)) (concat (select symbolic_0_float_57 (_ bv2 32)) ?x117))))
 (let ((?x122 ((_ to_fp 8 24) ?x121)))
 (let ((?x105 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x109 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x105))))
 (let ((?x110 ((_ to_fp 8 24) ?x109)))
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x101 (fp.sub roundNearestTiesToEven ?x78 ?x100)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x112 (fp.sub roundNearestTiesToEven ?x34 (fp.add roundNearestTiesToEven ?x101 ?x110))))
 (or (or (fp.isNaN ?x112) (fp.isNaN ?x122)) (fp.lt ?x112 ?x122))))))))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (fp.geq ?x48 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x43 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (fp.leq ?x48 ?x81))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (fp.geq ?x100 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (fp.leq ?x100 ?x81))))))
(assert
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x136 (fp.sub roundNearestTiesToEven ?x39 ?x100)))
 (not (fp.isNaN ?x136))))))))
(assert
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x136 (fp.sub roundNearestTiesToEven ?x39 ?x100)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x142 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x146 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x142))))
 (let ((?x147 ((_ to_fp 8 24) ?x146)))
 (let ((?x148 (fp.sub roundNearestTiesToEven ?x147 ?x78)))
 (not (fp.gt ?x148 ?x136)))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x105 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x109 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x105))))
 (let ((?x110 ((_ to_fp 8 24) ?x109)))
 (fp.geq ?x110 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x105 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x109 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x105))))
 (let ((?x110 ((_ to_fp 8 24) ?x109)))
 (fp.leq ?x110 ?x81))))))
(assert
 (let ((?x105 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x109 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x105))))
 (let ((?x110 ((_ to_fp 8 24) ?x109)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x153 (fp.sub roundNearestTiesToEven ?x39 ?x110)))
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x101 (fp.sub roundNearestTiesToEven ?x78 ?x100)))
 (let ((?x158 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x163 ?x101)))
 (or (fp.isNaN ?x153) (fp.gt ?x164 ?x153)))))))))))))))))
(assert
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x101 (fp.sub roundNearestTiesToEven ?x78 ?x100)))
 (let ((?x158 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x163 ?x101)))
 (not (fp.isNaN ?x164))))))))))))
(assert
 (let ((?x105 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x109 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x105))))
 (let ((?x110 ((_ to_fp 8 24) ?x109)))
 (not (fp.isNaN ?x110))))))
(assert
 (let ((?x105 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x109 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x105))))
 (let ((?x110 ((_ to_fp 8 24) ?x109)))
 (let ((?x95 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x99 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x95))))
 (let ((?x100 ((_ to_fp 8 24) ?x99)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x101 (fp.sub roundNearestTiesToEven ?x78 ?x100)))
 (let ((?x158 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (let ((?x164 (fp.sub roundNearestTiesToEven ?x163 ?x101)))
 (not (fp.lt ?x164 ?x110)))))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x117 (concat (select symbolic_0_float_57 (_ bv1 32)) (select symbolic_0_float_57 (_ bv0 32)))))
 (let ((?x121 (concat (select symbolic_0_float_57 (_ bv3 32)) (concat (select symbolic_0_float_57 (_ bv2 32)) ?x117))))
 (let ((?x122 ((_ to_fp 8 24) ?x121)))
 (fp.geq ?x122 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x117 (concat (select symbolic_0_float_57 (_ bv1 32)) (select symbolic_0_float_57 (_ bv0 32)))))
 (let ((?x121 (concat (select symbolic_0_float_57 (_ bv3 32)) (concat (select symbolic_0_float_57 (_ bv2 32)) ?x117))))
 (let ((?x122 ((_ to_fp 8 24) ?x121)))
 (fp.leq ?x122 ?x81))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x142 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x146 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x142))))
 (let ((?x147 ((_ to_fp 8 24) ?x146)))
 (fp.geq ?x147 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x142 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x146 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x142))))
 (let ((?x147 ((_ to_fp 8 24) ?x146)))
 (fp.leq ?x147 ?x24))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x142 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x146 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x142))))
 (let ((?x147 ((_ to_fp 8 24) ?x146)))
 (let ((?x148 (fp.sub roundNearestTiesToEven ?x147 ?x78)))
 (not (fp.isNaN ?x148))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x158 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (fp.geq ?x163 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x158 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x162 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x158))))
 (let ((?x163 ((_ to_fp 8 24) ?x162)))
 (fp.leq ?x163 ?x24))))))
(assert
 (let ((?x72 (concat (select symbolic_0_float_94 (_ bv1 32)) (select symbolic_0_float_94 (_ bv0 32)))))
(let ((?x76 (concat (select symbolic_0_float_94 (_ bv3 32)) (concat (select symbolic_0_float_94 (_ bv2 32)) ?x72))))
(let ((?x77 ((_ to_fp 8 24) ?x76)))
(let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x61 (concat (select symbolic_0_float_83 (_ bv1 32)) (select symbolic_0_float_83 (_ bv0 32)))))
(let ((?x65 (concat (select symbolic_0_float_83 (_ bv3 32)) (concat (select symbolic_0_float_83 (_ bv2 32)) ?x61))))
(let ((?x66 ((_ to_fp 8 24) ?x65)))
(let ((?x83 (fp.sub roundNearestTiesToEven ?x66 ?x19)))
(let (($x187 (and (and (not (fp.isNaN ?x83)) (not (fp.isNaN ?x77))) (not (fp.lt ?x83 ?x77)))))
(not $x187)))))))))))))
(check-sat)
(exit)
