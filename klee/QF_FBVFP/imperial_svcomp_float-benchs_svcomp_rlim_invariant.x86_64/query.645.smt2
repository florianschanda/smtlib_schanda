(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.645.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_80 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_93 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_72 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_41 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_56 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_35 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_14 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_67 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float8 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_29 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x59 (fp.sub roundNearestTiesToEven ?x49 ?x58)))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x59)) (fp.gt ?x46 ?x59))))))))))))))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_80 (_ bv1 32)) (select symbolic_0_float_80 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_80 (_ bv3 32)) (concat (select symbolic_0_float_80 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x58)) (fp.lt ?x46 ?x58))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x96 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x100 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x96))))
 (let ((?x101 ((_ to_fp 8 24) ?x100)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x102 (fp.sub roundNearestTiesToEven ?x49 ?x101)))
 (let ((?x84 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x80 (fp.sub roundNearestTiesToEven ?x70 ?x79)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x91 (fp.sub roundNearestTiesToEven ?x34 (fp.sub roundNearestTiesToEven ?x80 ?x89))))
 (or (or (fp.isNaN ?x91) (fp.isNaN ?x102)) (fp.gt ?x91 ?x102))))))))))))))))))))
(assert
 (let ((?x96 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x100 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x96))))
 (let ((?x101 ((_ to_fp 8 24) ?x100)))
 (let ((?x84 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x80 (fp.sub roundNearestTiesToEven ?x70 ?x79)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x91 (fp.sub roundNearestTiesToEven ?x34 (fp.sub roundNearestTiesToEven ?x80 ?x89))))
 (or (or (fp.isNaN ?x91) (fp.isNaN ?x101)) (fp.lt ?x91 ?x101))))))))))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x70))))))
(assert
 (let ((?x113 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x113))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x115 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x120 (concat (select symbolic_0_float_67 (_ bv1 32)) (select symbolic_0_float_67 (_ bv0 32)))))
 (let ((?x124 (concat (select symbolic_0_float_67 (_ bv3 32)) (concat (select symbolic_0_float_67 (_ bv2 32)) ?x120))))
 (let ((?x125 ((_ to_fp 8 24) ?x124)))
 (let ((?x126 (fp.sub roundNearestTiesToEven ?x125 ?x34)))
 (or (fp.isNaN ?x115) (fp.gt ?x126 ?x115)))))))))))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x120 (concat (select symbolic_0_float_67 (_ bv1 32)) (select symbolic_0_float_67 (_ bv0 32)))))
 (let ((?x124 (concat (select symbolic_0_float_67 (_ bv3 32)) (concat (select symbolic_0_float_67 (_ bv2 32)) ?x120))))
 (let ((?x125 ((_ to_fp 8 24) ?x124)))
 (let ((?x126 (fp.sub roundNearestTiesToEven ?x125 ?x34)))
 (not (fp.isNaN ?x126))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (not (fp.isNaN ?x43))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_72 (_ bv1 32)) (select symbolic_0_float_72 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_72 (_ bv3 32)) (concat (select symbolic_0_float_72 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_41 (_ bv1 32)) (select symbolic_0_float_41 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_41 (_ bv3 32)) (concat (select symbolic_0_float_41 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x120 (concat (select symbolic_0_float_67 (_ bv1 32)) (select symbolic_0_float_67 (_ bv0 32)))))
 (let ((?x124 (concat (select symbolic_0_float_67 (_ bv3 32)) (concat (select symbolic_0_float_67 (_ bv2 32)) ?x120))))
 (let ((?x125 ((_ to_fp 8 24) ?x124)))
 (let ((?x126 (fp.sub roundNearestTiesToEven ?x125 ?x34)))
 (not (fp.lt ?x126 ?x43)))))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.geq ?x58 ?x70))))))
(assert
 (let ((?x113 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x53 (concat (select symbolic_0_float_93 (_ bv1 32)) (select symbolic_0_float_93 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_93 (_ bv3 32)) (concat (select symbolic_0_float_93 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.leq ?x58 ?x113))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (fp.geq ?x79 ?x70))))))
(assert
 (let ((?x113 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (fp.leq ?x79 ?x113))))))
(assert
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x49 ?x79)))
 (not (fp.isNaN ?x139))))))))
(assert
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x49 ?x79)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x145 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x149 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x145))))
 (let ((?x150 ((_ to_fp 8 24) ?x149)))
 (let ((?x151 (fp.sub roundNearestTiesToEven ?x150 ?x70)))
 (not (fp.gt ?x151 ?x139)))))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x84 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (fp.geq ?x89 ?x70))))))
(assert
 (let ((?x113 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x84 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (fp.leq ?x89 ?x113))))))
(assert
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x80 (fp.sub roundNearestTiesToEven ?x70 ?x79)))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x163 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x159))))
 (let ((?x164 ((_ to_fp 8 24) ?x163)))
 (let ((?x165 (fp.sub roundNearestTiesToEven ?x164 ?x80)))
 (not (fp.isNaN ?x165))))))))))))
(assert
 (let ((?x84 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x168 (fp.sub roundNearestTiesToEven ?x49 ?x89)))
 (not (fp.isNaN ?x168))))))))
(assert
 (let ((?x84 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x168 (fp.sub roundNearestTiesToEven ?x49 ?x89)))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x80 (fp.sub roundNearestTiesToEven ?x70 ?x79)))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x163 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x159))))
 (let ((?x164 ((_ to_fp 8 24) ?x163)))
 (let ((?x165 (fp.sub roundNearestTiesToEven ?x164 ?x80)))
 (not (fp.gt ?x165 ?x168)))))))))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x96 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x100 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x96))))
 (let ((?x101 ((_ to_fp 8 24) ?x100)))
 (fp.geq ?x101 ?x70))))))
(assert
 (let ((?x113 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x96 (concat (select symbolic_0_float_56 (_ bv1 32)) (select symbolic_0_float_56 (_ bv0 32)))))
 (let ((?x100 (concat (select symbolic_0_float_56 (_ bv3 32)) (concat (select symbolic_0_float_56 (_ bv2 32)) ?x96))))
 (let ((?x101 ((_ to_fp 8 24) ?x100)))
 (fp.leq ?x101 ?x113))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x120 (concat (select symbolic_0_float_67 (_ bv1 32)) (select symbolic_0_float_67 (_ bv0 32)))))
 (let ((?x124 (concat (select symbolic_0_float_67 (_ bv3 32)) (concat (select symbolic_0_float_67 (_ bv2 32)) ?x120))))
 (let ((?x125 ((_ to_fp 8 24) ?x124)))
 (fp.geq ?x125 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x120 (concat (select symbolic_0_float_67 (_ bv1 32)) (select symbolic_0_float_67 (_ bv0 32)))))
 (let ((?x124 (concat (select symbolic_0_float_67 (_ bv3 32)) (concat (select symbolic_0_float_67 (_ bv2 32)) ?x120))))
 (let ((?x125 ((_ to_fp 8 24) ?x124)))
 (fp.leq ?x125 ?x24))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x145 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x149 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x145))))
 (let ((?x150 ((_ to_fp 8 24) ?x149)))
 (fp.geq ?x150 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x145 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x149 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x145))))
 (let ((?x150 ((_ to_fp 8 24) ?x149)))
 (fp.leq ?x150 ?x24))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x145 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x149 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x145))))
 (let ((?x150 ((_ to_fp 8 24) ?x149)))
 (let ((?x151 (fp.sub roundNearestTiesToEven ?x150 ?x70)))
 (not (fp.isNaN ?x151))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x163 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x159))))
 (let ((?x164 ((_ to_fp 8 24) ?x163)))
 (fp.geq ?x164 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x159 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x163 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x159))))
 (let ((?x164 ((_ to_fp 8 24) ?x163)))
 (fp.leq ?x164 ?x24))))))
(assert
 (not false))
(check-sat)
(exit)
