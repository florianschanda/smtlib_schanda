(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.641.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_40 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_53 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_32 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_11 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_74 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_65 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_86 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_97 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float8 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_29 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x61 (fp.sub roundNearestTiesToEven ?x51 ?x60)))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x48 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x37 ?x46))))
 (or (or (fp.isNaN ?x48) (fp.isNaN ?x61)) (fp.gt ?x48 ?x61))))))))))))))))))))
(assert
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x48 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x37 ?x46))))
 (or (or (fp.isNaN ?x48) (fp.isNaN ?x60)) (fp.lt ?x48 ?x60))))))))))))))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x73 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (fp.geq ?x78 ?x26))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x73 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (fp.leq ?x78 ?x81))))))
(assert
 (let ((?x73 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x83 (fp.sub roundNearestTiesToEven ?x51 ?x78)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x88 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x93 ?x19)))
 (or (fp.isNaN ?x83) (fp.gt ?x94 ?x83)))))))))))))))
(assert
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x88 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x93 ?x19)))
 (not (fp.isNaN ?x94))))))))))
(assert
 (let ((?x73 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (not (fp.isNaN ?x78))))))
(assert
 (let ((?x73 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x88 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x93 ?x19)))
 (not (fp.lt ?x94 ?x78)))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x106 (concat (select symbolic_0_float_86 (_ bv1 32)) (select symbolic_0_float_86 (_ bv0 32)))))
 (let ((?x110 (concat (select symbolic_0_float_86 (_ bv3 32)) (concat (select symbolic_0_float_86 (_ bv2 32)) ?x106))))
 (let ((?x111 ((_ to_fp 8 24) ?x110)))
 (fp.geq ?x111 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x106 (concat (select symbolic_0_float_86 (_ bv1 32)) (select symbolic_0_float_86 (_ bv0 32)))))
 (let ((?x110 (concat (select symbolic_0_float_86 (_ bv3 32)) (concat (select symbolic_0_float_86 (_ bv2 32)) ?x106))))
 (let ((?x111 ((_ to_fp 8 24) ?x110)))
 (fp.leq ?x111 ?x24))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x117 (concat (select symbolic_0_float_97 (_ bv1 32)) (select symbolic_0_float_97 (_ bv0 32)))))
 (let ((?x121 (concat (select symbolic_0_float_97 (_ bv3 32)) (concat (select symbolic_0_float_97 (_ bv2 32)) ?x117))))
 (let ((?x122 ((_ to_fp 8 24) ?x121)))
 (fp.geq ?x122 ?x26))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x117 (concat (select symbolic_0_float_97 (_ bv1 32)) (select symbolic_0_float_97 (_ bv0 32)))))
 (let ((?x121 (concat (select symbolic_0_float_97 (_ bv3 32)) (concat (select symbolic_0_float_97 (_ bv2 32)) ?x117))))
 (let ((?x122 ((_ to_fp 8 24) ?x121)))
 (fp.leq ?x122 ?x81))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (fp.geq ?x35 ?x26))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (fp.leq ?x35 ?x81))))))
(assert
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x127 (fp.sub roundNearestTiesToEven ?x51 ?x35)))
 (not (fp.isNaN ?x127))))))))
(assert
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x127 (fp.sub roundNearestTiesToEven ?x51 ?x35)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x133 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x138 ?x26)))
 (not (fp.gt ?x139 ?x127)))))))))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (fp.geq ?x46 ?x26))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (fp.leq ?x46 ?x81))))))
(assert
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x147 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x151 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x147))))
 (let ((?x152 ((_ to_fp 8 24) ?x151)))
 (let ((?x153 (fp.sub roundNearestTiesToEven ?x152 ?x37)))
 (not (fp.isNaN ?x153))))))))))))
(assert
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x156 (fp.sub roundNearestTiesToEven ?x51 ?x46)))
 (not (fp.isNaN ?x156))))))))
(assert
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x156 (fp.sub roundNearestTiesToEven ?x51 ?x46)))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x147 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x151 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x147))))
 (let ((?x152 ((_ to_fp 8 24) ?x151)))
 (let ((?x153 (fp.sub roundNearestTiesToEven ?x152 ?x37)))
 (not (fp.gt ?x153 ?x156)))))))))))))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (fp.geq ?x60 ?x26))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (fp.leq ?x60 ?x81))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x88 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (fp.geq ?x93 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x88 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (fp.leq ?x93 ?x24))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x133 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (fp.geq ?x138 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x133 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (fp.leq ?x138 ?x24))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x133 (concat (select symbolic_0_float8 (_ bv1 32)) (select symbolic_0_float8 (_ bv0 32)))))
 (let ((?x137 (concat (select symbolic_0_float8 (_ bv3 32)) (concat (select symbolic_0_float8 (_ bv2 32)) ?x133))))
 (let ((?x138 ((_ to_fp 8 24) ?x137)))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x138 ?x26)))
 (not (fp.isNaN ?x139))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x147 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x151 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x147))))
 (let ((?x152 ((_ to_fp 8 24) ?x151)))
 (fp.geq ?x152 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x147 (concat (select symbolic_0_float_29 (_ bv1 32)) (select symbolic_0_float_29 (_ bv0 32)))))
 (let ((?x151 (concat (select symbolic_0_float_29 (_ bv3 32)) (concat (select symbolic_0_float_29 (_ bv2 32)) ?x147))))
 (let ((?x152 ((_ to_fp 8 24) ?x151)))
 (fp.leq ?x152 ?x24))))))
(assert
 (let ((?x117 (concat (select symbolic_0_float_97 (_ bv1 32)) (select symbolic_0_float_97 (_ bv0 32)))))
(let ((?x121 (concat (select symbolic_0_float_97 (_ bv3 32)) (concat (select symbolic_0_float_97 (_ bv2 32)) ?x117))))
(let ((?x122 ((_ to_fp 8 24) ?x121)))
(let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
(let ((?x174 (fp.sub roundNearestTiesToEven ?x51 ?x122)))
(let ((?x73 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
(let ((?x77 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x73))))
(let ((?x78 ((_ to_fp 8 24) ?x77)))
(let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x106 (concat (select symbolic_0_float_86 (_ bv1 32)) (select symbolic_0_float_86 (_ bv0 32)))))
(let ((?x110 (concat (select symbolic_0_float_86 (_ bv3 32)) (concat (select symbolic_0_float_86 (_ bv2 32)) ?x106))))
(let ((?x111 ((_ to_fp 8 24) ?x110)))
(let ((?x172 (fp.sub roundNearestTiesToEven ?x111 (fp.add roundNearestTiesToEven ?x19 ?x78))))
(not (or (or (fp.isNaN ?x172) (fp.isNaN ?x174)) (fp.gt ?x172 ?x174)))))))))))))))))))
(check-sat)
(exit)
