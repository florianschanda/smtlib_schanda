(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.222.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_60 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_74 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_53 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_32 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float1 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_15 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_26 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_47 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x69 (fp.sub roundNearestTiesToEven ?x59 ?x68)))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x56 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x45 ?x54))))
 (or (or (fp.isNaN ?x56) (fp.isNaN ?x69)) (fp.gt ?x56 ?x69))))))))))))))))))))))
(assert
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x56 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x45 ?x54))))
 (or (or (fp.isNaN ?x56) (fp.isNaN ?x68)) (fp.lt ?x56 ?x68))))))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x86 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x92 (fp.sub roundNearestTiesToEven ?x59 ?x91)))
 (let ((?x80 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x81 (fp.sub roundNearestTiesToEven ?x34 ?x80)))
 (or (or (fp.isNaN ?x81) (fp.isNaN ?x92)) (fp.gt ?x81 ?x92)))))))))))))
(assert
 (let ((?x86 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (let ((?x80 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x81 (fp.sub roundNearestTiesToEven ?x34 ?x80)))
 (or (or (fp.isNaN ?x81) (fp.isNaN ?x91)) (fp.lt ?x81 ?x91)))))))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x80))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x103))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x105 (fp.sub roundNearestTiesToEven ?x59 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x110 (concat (select symbolic_0_float_26 (_ bv1 32)) (select symbolic_0_float_26 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_26 (_ bv3 32)) (concat (select symbolic_0_float_26 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (let ((?x116 (fp.sub roundNearestTiesToEven ?x115 ?x34)))
 (or (fp.isNaN ?x105) (fp.gt ?x116 ?x105)))))))))))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x110 (concat (select symbolic_0_float_26 (_ bv1 32)) (select symbolic_0_float_26 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_26 (_ bv3 32)) (concat (select symbolic_0_float_26 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (let ((?x116 (fp.sub roundNearestTiesToEven ?x115 ?x34)))
 (not (fp.isNaN ?x116))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (not (fp.isNaN ?x43))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x110 (concat (select symbolic_0_float_26 (_ bv1 32)) (select symbolic_0_float_26 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_26 (_ bv3 32)) (concat (select symbolic_0_float_26 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (let ((?x116 (fp.sub roundNearestTiesToEven ?x115 ?x34)))
 (not (fp.lt ?x116 ?x43)))))))))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (fp.geq ?x54 ?x80))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (fp.leq ?x54 ?x103))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x130 (concat (select symbolic_0_float_47 (_ bv1 32)) (select symbolic_0_float_47 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_47 (_ bv3 32)) (concat (select symbolic_0_float_47 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (let ((?x136 (fp.sub roundNearestTiesToEven ?x135 ?x45)))
 (not (fp.isNaN ?x136))))))))))))))
(assert
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x59 ?x54)))
 (not (fp.isNaN ?x139))))))))
(assert
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x59 ?x54)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x130 (concat (select symbolic_0_float_47 (_ bv1 32)) (select symbolic_0_float_47 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_47 (_ bv3 32)) (concat (select symbolic_0_float_47 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (let ((?x136 (fp.sub roundNearestTiesToEven ?x135 ?x45)))
 (not (fp.gt ?x136 ?x139)))))))))))))))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (fp.geq ?x68 ?x80))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (fp.leq ?x68 ?x103))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x86 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (fp.geq ?x91 ?x80))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x86 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (fp.leq ?x91 ?x103))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x110 (concat (select symbolic_0_float_26 (_ bv1 32)) (select symbolic_0_float_26 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_26 (_ bv3 32)) (concat (select symbolic_0_float_26 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (fp.geq ?x115 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x110 (concat (select symbolic_0_float_26 (_ bv1 32)) (select symbolic_0_float_26 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_26 (_ bv3 32)) (concat (select symbolic_0_float_26 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (fp.leq ?x115 ?x24))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x130 (concat (select symbolic_0_float_47 (_ bv1 32)) (select symbolic_0_float_47 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_47 (_ bv3 32)) (concat (select symbolic_0_float_47 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (fp.geq ?x135 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x130 (concat (select symbolic_0_float_47 (_ bv1 32)) (select symbolic_0_float_47 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_47 (_ bv3 32)) (concat (select symbolic_0_float_47 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (fp.leq ?x135 ?x24))))))
(assert
 (not false))
(check-sat)
(exit)
