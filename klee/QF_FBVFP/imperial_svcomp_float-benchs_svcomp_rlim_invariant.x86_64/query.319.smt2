(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.319.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_60 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_73 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_52 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_21 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_84 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_95 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_37 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_16 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_48 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float9 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x59 (fp.sub roundNearestTiesToEven ?x49 ?x58)))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x59)) (fp.gt ?x46 ?x59))))))))))))))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x58)) (fp.lt ?x46 ?x58))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x71 (concat (select symbolic_0_float_84 (_ bv1 32)) (select symbolic_0_float_84 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_84 (_ bv3 32)) (concat (select symbolic_0_float_84 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (fp.geq ?x76 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x71 (concat (select symbolic_0_float_84 (_ bv1 32)) (select symbolic_0_float_84 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_84 (_ bv3 32)) (concat (select symbolic_0_float_84 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (fp.leq ?x76 ?x24))))))
(assert
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x82 (concat (select symbolic_0_float_95 (_ bv1 32)) (select symbolic_0_float_95 (_ bv0 32)))))
 (let ((?x86 (concat (select symbolic_0_float_95 (_ bv3 32)) (concat (select symbolic_0_float_95 (_ bv2 32)) ?x82))))
 (let ((?x87 ((_ to_fp 8 24) ?x86)))
 (fp.geq ?x87 ?x88))))))
(assert
 (let ((?x91 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x82 (concat (select symbolic_0_float_95 (_ bv1 32)) (select symbolic_0_float_95 (_ bv0 32)))))
 (let ((?x86 (concat (select symbolic_0_float_95 (_ bv3 32)) (concat (select symbolic_0_float_95 (_ bv2 32)) ?x82))))
 (let ((?x87 ((_ to_fp 8 24) ?x86)))
 (fp.leq ?x87 ?x91))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x110 (concat (select symbolic_0_float_37 (_ bv1 32)) (select symbolic_0_float_37 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_37 (_ bv3 32)) (concat (select symbolic_0_float_37 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x116 (fp.sub roundNearestTiesToEven ?x49 ?x115)))
 (let ((?x98 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x102 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x98))))
 (let ((?x103 ((_ to_fp 8 24) ?x102)))
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x105 (fp.sub roundNearestTiesToEven ?x34 (fp.sub roundNearestTiesToEven ?x88 ?x103))))
 (or (or (fp.isNaN ?x105) (fp.isNaN ?x116)) (fp.gt ?x105 ?x116))))))))))))))))
(assert
 (let ((?x110 (concat (select symbolic_0_float_37 (_ bv1 32)) (select symbolic_0_float_37 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_37 (_ bv3 32)) (concat (select symbolic_0_float_37 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (let ((?x98 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x102 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x98))))
 (let ((?x103 ((_ to_fp 8 24) ?x102)))
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x105 (fp.sub roundNearestTiesToEven ?x34 (fp.sub roundNearestTiesToEven ?x88 ?x103))))
 (or (or (fp.isNaN ?x105) (fp.isNaN ?x115)) (fp.lt ?x105 ?x115))))))))))))))
(assert
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x88))))))
(assert
 (let ((?x91 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x91))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x130 (concat (select symbolic_0_float_48 (_ bv1 32)) (select symbolic_0_float_48 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_48 (_ bv3 32)) (concat (select symbolic_0_float_48 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (let ((?x136 (fp.sub roundNearestTiesToEven ?x135 ?x34)))
 (not (fp.isNaN ?x136))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (not (fp.isNaN ?x139))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x139 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x130 (concat (select symbolic_0_float_48 (_ bv1 32)) (select symbolic_0_float_48 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_48 (_ bv3 32)) (concat (select symbolic_0_float_48 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (let ((?x136 (fp.sub roundNearestTiesToEven ?x135 ?x34)))
 (not (fp.gt ?x136 ?x139)))))))))))))))
(assert
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.geq ?x58 ?x88))))))
(assert
 (let ((?x91 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.leq ?x58 ?x91))))))
(assert
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x98 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x102 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x98))))
 (let ((?x103 ((_ to_fp 8 24) ?x102)))
 (fp.geq ?x103 ?x88))))))
(assert
 (let ((?x91 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x98 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x102 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x98))))
 (let ((?x103 ((_ to_fp 8 24) ?x102)))
 (fp.leq ?x103 ?x91))))))
(assert
 (let ((?x98 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x102 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x98))))
 (let ((?x103 ((_ to_fp 8 24) ?x102)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x148 (fp.sub roundNearestTiesToEven ?x49 ?x103)))
 (not (fp.isNaN ?x148))))))))
(assert
 (let ((?x98 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x102 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x98))))
 (let ((?x103 ((_ to_fp 8 24) ?x102)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x148 (fp.sub roundNearestTiesToEven ?x49 ?x103)))
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x154 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x154))))
 (let ((?x159 ((_ to_fp 8 24) ?x158)))
 (let ((?x160 (fp.sub roundNearestTiesToEven ?x159 ?x88)))
 (not (fp.gt ?x160 ?x148)))))))))))))
(assert
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x110 (concat (select symbolic_0_float_37 (_ bv1 32)) (select symbolic_0_float_37 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_37 (_ bv3 32)) (concat (select symbolic_0_float_37 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (fp.geq ?x115 ?x88))))))
(assert
 (let ((?x91 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x110 (concat (select symbolic_0_float_37 (_ bv1 32)) (select symbolic_0_float_37 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_37 (_ bv3 32)) (concat (select symbolic_0_float_37 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (fp.leq ?x115 ?x91))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x130 (concat (select symbolic_0_float_48 (_ bv1 32)) (select symbolic_0_float_48 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_48 (_ bv3 32)) (concat (select symbolic_0_float_48 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (fp.geq ?x135 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x130 (concat (select symbolic_0_float_48 (_ bv1 32)) (select symbolic_0_float_48 (_ bv0 32)))))
 (let ((?x134 (concat (select symbolic_0_float_48 (_ bv3 32)) (concat (select symbolic_0_float_48 (_ bv2 32)) ?x130))))
 (let ((?x135 ((_ to_fp 8 24) ?x134)))
 (fp.leq ?x135 ?x24))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x154 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x154))))
 (let ((?x159 ((_ to_fp 8 24) ?x158)))
 (fp.geq ?x159 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x154 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x154))))
 (let ((?x159 ((_ to_fp 8 24) ?x158)))
 (fp.leq ?x159 ?x24))))))
(assert
 (let ((?x88 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x154 (concat (select symbolic_0_float9 (_ bv1 32)) (select symbolic_0_float9 (_ bv0 32)))))
 (let ((?x158 (concat (select symbolic_0_float9 (_ bv3 32)) (concat (select symbolic_0_float9 (_ bv2 32)) ?x154))))
 (let ((?x159 ((_ to_fp 8 24) ?x158)))
 (let ((?x160 (fp.sub roundNearestTiesToEven ?x159 ?x88)))
 (not (fp.isNaN ?x160))))))))
(assert
 (let ((?x82 (concat (select symbolic_0_float_95 (_ bv1 32)) (select symbolic_0_float_95 (_ bv0 32)))))
(let ((?x86 (concat (select symbolic_0_float_95 (_ bv3 32)) (concat (select symbolic_0_float_95 (_ bv2 32)) ?x82))))
(let ((?x87 ((_ to_fp 8 24) ?x86)))
(let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
(let ((?x173 (fp.sub roundNearestTiesToEven ?x49 ?x87)))
(let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x71 (concat (select symbolic_0_float_84 (_ bv1 32)) (select symbolic_0_float_84 (_ bv0 32)))))
(let ((?x75 (concat (select symbolic_0_float_84 (_ bv3 32)) (concat (select symbolic_0_float_84 (_ bv2 32)) ?x71))))
(let ((?x76 ((_ to_fp 8 24) ?x75)))
(let ((?x171 (fp.sub roundNearestTiesToEven ?x76 ?x19)))
(not (or (or (fp.isNaN ?x171) (fp.isNaN ?x173)) (fp.gt ?x171 ?x173))))))))))))))))
(check-sat)
(exit)
