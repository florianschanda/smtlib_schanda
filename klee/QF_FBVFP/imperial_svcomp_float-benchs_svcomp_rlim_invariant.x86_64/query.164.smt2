(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.164.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_40 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_52 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_21 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_63 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_74 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_36 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_15 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float7 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x43 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x49 (fp.sub roundNearestTiesToEven ?x39 ?x48)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x36 (fp.sub roundNearestTiesToEven ?x19 ?x34)))
 (or (or (fp.isNaN ?x36) (fp.isNaN ?x49)) (fp.gt ?x36 ?x49)))))))))))))))
(assert
 (let ((?x43 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x36 (fp.sub roundNearestTiesToEven ?x19 ?x34)))
 (or (or (fp.isNaN ?x36) (fp.isNaN ?x48)) (fp.lt ?x36 ?x48)))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x61 (concat (select symbolic_0_float_63 (_ bv1 32)) (select symbolic_0_float_63 (_ bv0 32)))))
 (let ((?x65 (concat (select symbolic_0_float_63 (_ bv3 32)) (concat (select symbolic_0_float_63 (_ bv2 32)) ?x61))))
 (let ((?x66 ((_ to_fp 8 24) ?x65)))
 (fp.geq ?x66 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x61 (concat (select symbolic_0_float_63 (_ bv1 32)) (select symbolic_0_float_63 (_ bv0 32)))))
 (let ((?x65 (concat (select symbolic_0_float_63 (_ bv3 32)) (concat (select symbolic_0_float_63 (_ bv2 32)) ?x61))))
 (let ((?x66 ((_ to_fp 8 24) ?x65)))
 (fp.leq ?x66 ?x24))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x72 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x76 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x72))))
 (let ((?x77 ((_ to_fp 8 24) ?x76)))
 (fp.geq ?x77 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x72 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x76 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x72))))
 (let ((?x77 ((_ to_fp 8 24) ?x76)))
 (fp.leq ?x77 ?x81))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x100 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x104 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x100))))
 (let ((?x105 ((_ to_fp 8 24) ?x104)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x106 (fp.sub roundNearestTiesToEven ?x39 ?x105)))
 (let ((?x88 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x95 (fp.sub roundNearestTiesToEven ?x34 (fp.sub roundNearestTiesToEven ?x78 ?x93))))
 (or (or (fp.isNaN ?x95) (fp.isNaN ?x106)) (fp.gt ?x95 ?x106))))))))))))))))
(assert
 (let ((?x100 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x104 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x100))))
 (let ((?x105 ((_ to_fp 8 24) ?x104)))
 (let ((?x88 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x95 (fp.sub roundNearestTiesToEven ?x34 (fp.sub roundNearestTiesToEven ?x78 ?x93))))
 (or (or (fp.isNaN ?x95) (fp.isNaN ?x105)) (fp.lt ?x95 ?x105))))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x43 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (fp.geq ?x48 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x43 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x47 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x43))))
 (let ((?x48 ((_ to_fp 8 24) ?x47)))
 (fp.leq ?x48 ?x81))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x88 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (fp.geq ?x93 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x88 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (fp.leq ?x93 ?x81))))))
(assert
 (let ((?x88 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x119 (fp.sub roundNearestTiesToEven ?x39 ?x93)))
 (not (fp.isNaN ?x119))))))))
(assert
 (let ((?x88 (concat (select symbolic_0_float_15 (_ bv1 32)) (select symbolic_0_float_15 (_ bv0 32)))))
 (let ((?x92 (concat (select symbolic_0_float_15 (_ bv3 32)) (concat (select symbolic_0_float_15 (_ bv2 32)) ?x88))))
 (let ((?x93 ((_ to_fp 8 24) ?x92)))
 (let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x119 (fp.sub roundNearestTiesToEven ?x39 ?x93)))
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x125 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (let ((?x131 (fp.sub roundNearestTiesToEven ?x130 ?x78)))
 (not (fp.gt ?x131 ?x119)))))))))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x100 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x104 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x100))))
 (let ((?x105 ((_ to_fp 8 24) ?x104)))
 (fp.geq ?x105 ?x78))))))
(assert
 (let ((?x81 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x100 (concat (select symbolic_0_float_36 (_ bv1 32)) (select symbolic_0_float_36 (_ bv0 32)))))
 (let ((?x104 (concat (select symbolic_0_float_36 (_ bv3 32)) (concat (select symbolic_0_float_36 (_ bv2 32)) ?x100))))
 (let ((?x105 ((_ to_fp 8 24) ?x104)))
 (fp.leq ?x105 ?x81))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x125 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (fp.geq ?x130 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x125 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (fp.leq ?x130 ?x24))))))
(assert
 (let ((?x78 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x125 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (let ((?x131 (fp.sub roundNearestTiesToEven ?x130 ?x78)))
 (not (fp.isNaN ?x131))))))))
(assert
 (let ((?x72 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
(let ((?x76 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x72))))
(let ((?x77 ((_ to_fp 8 24) ?x76)))
(let ((?x39 ((_ to_fp 8 24) (_ bv2147483648 32))))
(let ((?x143 (fp.sub roundNearestTiesToEven ?x39 ?x77)))
(let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x61 (concat (select symbolic_0_float_63 (_ bv1 32)) (select symbolic_0_float_63 (_ bv0 32)))))
(let ((?x65 (concat (select symbolic_0_float_63 (_ bv3 32)) (concat (select symbolic_0_float_63 (_ bv2 32)) ?x61))))
(let ((?x66 ((_ to_fp 8 24) ?x65)))
(let ((?x140 (fp.sub roundNearestTiesToEven ?x66 ?x19)))
(let (($x149 (and (and (not (fp.isNaN ?x140)) (not (fp.isNaN ?x143))) (not (fp.gt ?x140 ?x143)))))
(not $x149)))))))))))))))
(check-sat)
(exit)
