(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_synthetic_memcpy_and_use_as_bitvector_klee.x86_64/query.086.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun shiftAmount0 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun fresh_to_ieee_bv_!0 () (_ BitVec 32))
(declare-fun f1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select shiftAmount0 (_ bv2 32)) (concat (select shiftAmount0 (_ bv1 32)) (select shiftAmount0 (_ bv0 32))))))
 (let ((?x18 (concat (select shiftAmount0 (_ bv3 32)) ?x15)))
 (bvult ?x18 (_ bv32 32)))))
(assert
 (let ((?x26 (concat (select f1 (_ bv2 32)) (concat (select f1 (_ bv1 32)) (select f1 (_ bv0 32))))))
 (let ((?x33 (fp.add roundNearestTiesToEven ((_ to_fp 8 24) (concat (select f1 (_ bv3 32)) ?x26)) ((_ to_fp 8 24) (_ bv1065353216 32)))))
 (= ?x33 ((_ to_fp 8 24) fresh_to_ieee_bv_!0)))))
(assert
 (let ((?x15 (concat (select shiftAmount0 (_ bv2 32)) (concat (select shiftAmount0 (_ bv1 32)) (select shiftAmount0 (_ bv0 32))))))
(let ((?x18 (concat (select shiftAmount0 (_ bv3 32)) ?x15)))
(let ((?x48 (ite (= ?x18 (_ bv30 32)) (concat ((_ extract 1 0) fresh_to_ieee_bv_!0) (_ bv0 30)) (ite (= ?x18 (_ bv31 32)) (concat ((_ extract 0 0) fresh_to_ieee_bv_!0) (_ bv0 31)) (_ bv0 32)))))
(let ((?x60 (ite (= ?x18 (_ bv28 32)) (concat ((_ extract 3 0) fresh_to_ieee_bv_!0) (_ bv0 28)) (ite (= ?x18 (_ bv29 32)) (concat ((_ extract 2 0) fresh_to_ieee_bv_!0) (_ bv0 29)) ?x48))))
(let ((?x72 (ite (= ?x18 (_ bv26 32)) (concat ((_ extract 5 0) fresh_to_ieee_bv_!0) (_ bv0 26)) (ite (= ?x18 (_ bv27 32)) (concat ((_ extract 4 0) fresh_to_ieee_bv_!0) (_ bv0 27)) ?x60))))
(let ((?x84 (ite (= ?x18 (_ bv24 32)) (concat ((_ extract 7 0) fresh_to_ieee_bv_!0) (_ bv0 24)) (ite (= ?x18 (_ bv25 32)) (concat ((_ extract 6 0) fresh_to_ieee_bv_!0) (_ bv0 25)) ?x72))))
(let ((?x96 (ite (= ?x18 (_ bv22 32)) (concat ((_ extract 9 0) fresh_to_ieee_bv_!0) (_ bv0 22)) (ite (= ?x18 (_ bv23 32)) (concat ((_ extract 8 0) fresh_to_ieee_bv_!0) (_ bv0 23)) ?x84))))
(let ((?x108 (ite (= ?x18 (_ bv20 32)) (concat ((_ extract 11 0) fresh_to_ieee_bv_!0) (_ bv0 20)) (ite (= ?x18 (_ bv21 32)) (concat ((_ extract 10 0) fresh_to_ieee_bv_!0) (_ bv0 21)) ?x96))))
(let ((?x120 (ite (= ?x18 (_ bv18 32)) (concat ((_ extract 13 0) fresh_to_ieee_bv_!0) (_ bv0 18)) (ite (= ?x18 (_ bv19 32)) (concat ((_ extract 12 0) fresh_to_ieee_bv_!0) (_ bv0 19)) ?x108))))
(let ((?x132 (ite (= ?x18 (_ bv16 32)) (concat ((_ extract 15 0) fresh_to_ieee_bv_!0) (_ bv0 16)) (ite (= ?x18 (_ bv17 32)) (concat ((_ extract 14 0) fresh_to_ieee_bv_!0) (_ bv0 17)) ?x120))))
(let ((?x144 (ite (= ?x18 (_ bv14 32)) (concat ((_ extract 17 0) fresh_to_ieee_bv_!0) (_ bv0 14)) (ite (= ?x18 (_ bv15 32)) (concat ((_ extract 16 0) fresh_to_ieee_bv_!0) (_ bv0 15)) ?x132))))
(let ((?x156 (ite (= ?x18 (_ bv12 32)) (concat ((_ extract 19 0) fresh_to_ieee_bv_!0) (_ bv0 12)) (ite (= ?x18 (_ bv13 32)) (concat ((_ extract 18 0) fresh_to_ieee_bv_!0) (_ bv0 13)) ?x144))))
(let ((?x168 (ite (= ?x18 (_ bv10 32)) (concat ((_ extract 21 0) fresh_to_ieee_bv_!0) (_ bv0 10)) (ite (= ?x18 (_ bv11 32)) (concat ((_ extract 20 0) fresh_to_ieee_bv_!0) (_ bv0 11)) ?x156))))
(let ((?x180 (ite (= ?x18 (_ bv8 32)) (concat ((_ extract 23 0) fresh_to_ieee_bv_!0) (_ bv0 8)) (ite (= ?x18 (_ bv9 32)) (concat ((_ extract 22 0) fresh_to_ieee_bv_!0) (_ bv0 9)) ?x168))))
(let ((?x192 (ite (= ?x18 (_ bv6 32)) (concat ((_ extract 25 0) fresh_to_ieee_bv_!0) (_ bv0 6)) (ite (= ?x18 (_ bv7 32)) (concat ((_ extract 24 0) fresh_to_ieee_bv_!0) (_ bv0 7)) ?x180))))
(let ((?x204 (ite (= ?x18 (_ bv4 32)) (concat ((_ extract 27 0) fresh_to_ieee_bv_!0) (_ bv0 4)) (ite (= ?x18 (_ bv5 32)) (concat ((_ extract 26 0) fresh_to_ieee_bv_!0) (_ bv0 5)) ?x192))))
(let ((?x214 (ite (= ?x18 (_ bv2 32)) (concat ((_ extract 29 0) fresh_to_ieee_bv_!0) (_ bv0 2)) (ite (= ?x18 (_ bv3 32)) (concat ((_ extract 28 0) fresh_to_ieee_bv_!0) (_ bv0 3)) ?x204))))
(let ((?x221 (ite (= ?x18 (_ bv0 32)) fresh_to_ieee_bv_!0 (ite (= ?x18 (_ bv1 32)) (concat ((_ extract 30 0) fresh_to_ieee_bv_!0) (_ bv0 1)) ?x214))))
(let (($x20 (bvult ?x18 (_ bv32 32))))
(not (bvslt (_ bv0 32) (ite $x20 ?x221 (_ bv0 32))))))))))))))))))))))))
(check-sat)
(exit)
