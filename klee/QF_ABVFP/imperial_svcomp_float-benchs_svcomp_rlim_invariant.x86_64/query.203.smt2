(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.203.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_40 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_53 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_32 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_11 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_64 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_75 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float6 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_27 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x61 (fp.sub roundNearestTiesToEven ?x51 ?x60)))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x48 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x37 ?x46))))
 (or (or (fp.isNaN ?x48) (fp.isNaN ?x61)) (fp.gt ?x48 ?x61))))))))))))))))))))
(assert
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x48 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x37 ?x46))))
 (or (or (fp.isNaN ?x48) (fp.isNaN ?x60)) (fp.lt ?x48 ?x60))))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x73 (concat (select symbolic_0_float_64 (_ bv1 32)) (select symbolic_0_float_64 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_64 (_ bv3 32)) (concat (select symbolic_0_float_64 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (fp.geq ?x78 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x73 (concat (select symbolic_0_float_64 (_ bv1 32)) (select symbolic_0_float_64 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_64 (_ bv3 32)) (concat (select symbolic_0_float_64 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (fp.leq ?x78 ?x24))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x84 (concat (select symbolic_0_float_75 (_ bv1 32)) (select symbolic_0_float_75 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_75 (_ bv3 32)) (concat (select symbolic_0_float_75 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (fp.geq ?x89 ?x26))))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x84 (concat (select symbolic_0_float_75 (_ bv1 32)) (select symbolic_0_float_75 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_75 (_ bv3 32)) (concat (select symbolic_0_float_75 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (fp.leq ?x89 ?x92))))))
(assert
 (let ((?x84 (concat (select symbolic_0_float_75 (_ bv1 32)) (select symbolic_0_float_75 (_ bv0 32)))))
 (let ((?x88 (concat (select symbolic_0_float_75 (_ bv3 32)) (concat (select symbolic_0_float_75 (_ bv2 32)) ?x84))))
 (let ((?x89 ((_ to_fp 8 24) ?x88)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x96 (fp.sub roundNearestTiesToEven ?x51 ?x89)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x73 (concat (select symbolic_0_float_64 (_ bv1 32)) (select symbolic_0_float_64 (_ bv0 32)))))
 (let ((?x77 (concat (select symbolic_0_float_64 (_ bv3 32)) (concat (select symbolic_0_float_64 (_ bv2 32)) ?x73))))
 (let ((?x78 ((_ to_fp 8 24) ?x77)))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x78 ?x19)))
 (or (or (fp.isNaN ?x94) (fp.isNaN ?x96)) (fp.gt ?x94 ?x96)))))))))))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (fp.geq ?x35 ?x26))))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (fp.leq ?x35 ?x92))))))
(assert
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x103 (fp.sub roundNearestTiesToEven ?x51 ?x35)))
 (not (fp.isNaN ?x103))))))))
(assert
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x103 (fp.sub roundNearestTiesToEven ?x51 ?x35)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x109 (concat (select symbolic_0_float6 (_ bv1 32)) (select symbolic_0_float6 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float6 (_ bv3 32)) (concat (select symbolic_0_float6 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (let ((?x115 (fp.sub roundNearestTiesToEven ?x114 ?x26)))
 (not (fp.gt ?x115 ?x103)))))))))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (fp.geq ?x46 ?x26))))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (fp.leq ?x46 ?x92))))))
(assert
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x51 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x120 (fp.sub roundNearestTiesToEven ?x51 ?x46)))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x125 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (let ((?x131 (fp.sub roundNearestTiesToEven ?x130 ?x37)))
 (or (fp.isNaN ?x120) (fp.gt ?x131 ?x120)))))))))))))))))
(assert
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x125 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (let ((?x131 (fp.sub roundNearestTiesToEven ?x130 ?x37)))
 (not (fp.isNaN ?x131))))))))))))
(assert
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (not (fp.isNaN ?x46))))))
(assert
 (let ((?x41 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x45 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x41))))
 (let ((?x46 ((_ to_fp 8 24) ?x45)))
 (let ((?x30 (concat (select symbolic_0_float_11 (_ bv1 32)) (select symbolic_0_float_11 (_ bv0 32)))))
 (let ((?x34 (concat (select symbolic_0_float_11 (_ bv3 32)) (concat (select symbolic_0_float_11 (_ bv2 32)) ?x30))))
 (let ((?x35 ((_ to_fp 8 24) ?x34)))
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ?x26 ?x35)))
 (let ((?x125 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (let ((?x131 (fp.sub roundNearestTiesToEven ?x130 ?x37)))
 (not (fp.lt ?x131 ?x46)))))))))))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (fp.geq ?x60 ?x26))))))
(assert
 (let ((?x92 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x55 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x59 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x55))))
 (let ((?x60 ((_ to_fp 8 24) ?x59)))
 (fp.leq ?x60 ?x92))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x109 (concat (select symbolic_0_float6 (_ bv1 32)) (select symbolic_0_float6 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float6 (_ bv3 32)) (concat (select symbolic_0_float6 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (fp.geq ?x114 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x109 (concat (select symbolic_0_float6 (_ bv1 32)) (select symbolic_0_float6 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float6 (_ bv3 32)) (concat (select symbolic_0_float6 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (fp.leq ?x114 ?x24))))))
(assert
 (let ((?x26 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x109 (concat (select symbolic_0_float6 (_ bv1 32)) (select symbolic_0_float6 (_ bv0 32)))))
 (let ((?x113 (concat (select symbolic_0_float6 (_ bv3 32)) (concat (select symbolic_0_float6 (_ bv2 32)) ?x109))))
 (let ((?x114 ((_ to_fp 8 24) ?x113)))
 (let ((?x115 (fp.sub roundNearestTiesToEven ?x114 ?x26)))
 (not (fp.isNaN ?x115))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x125 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (fp.geq ?x130 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x125 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x129 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x125))))
 (let ((?x130 ((_ to_fp 8 24) ?x129)))
 (fp.leq ?x130 ?x24))))))
(assert
 (not false))
(check-sat)
(exit)
