(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.212.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_40 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_53 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_32 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float1 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_74 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_65 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_16 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_27 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x59 (fp.sub roundNearestTiesToEven ?x49 ?x58)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x59)) (fp.gt ?x46 ?x59))))))))))))))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.add roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x58)) (fp.lt ?x46 ?x58))))))))))))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (fp.geq ?x76 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (fp.leq ?x76 ?x80))))))
(assert
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (let ((?x91 (fp.sub roundNearestTiesToEven ?x90 ?x19)))
 (not (fp.isNaN ?x91))))))))))
(assert
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x49 ?x76)))
 (not (fp.isNaN ?x94))))))))
(assert
 (let ((?x71 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x75 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x71))))
 (let ((?x76 ((_ to_fp 8 24) ?x75)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x94 (fp.sub roundNearestTiesToEven ?x49 ?x76)))
 (let ((?x12 (concat (select symbolic_0_float_40 (_ bv1 32)) (select symbolic_0_float_40 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_40 (_ bv3 32)) (concat (select symbolic_0_float_40 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (let ((?x91 (fp.sub roundNearestTiesToEven ?x90 ?x19)))
 (not (fp.gt ?x91 ?x94)))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x106 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x110 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x106))))
 (let ((?x111 ((_ to_fp 8 24) ?x110)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x112 (fp.sub roundNearestTiesToEven ?x49 ?x111)))
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x101 (fp.sub roundNearestTiesToEven ?x34 ?x77)))
 (or (or (fp.isNaN ?x101) (fp.isNaN ?x112)) (fp.gt ?x101 ?x112)))))))))))))
(assert
 (let ((?x106 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x110 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x106))))
 (let ((?x111 ((_ to_fp 8 24) ?x110)))
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x101 (fp.sub roundNearestTiesToEven ?x34 ?x77)))
 (or (or (fp.isNaN ?x101) (fp.isNaN ?x111)) (fp.lt ?x101 ?x111)))))))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x80))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x123 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x128 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x132 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x128))))
 (let ((?x133 ((_ to_fp 8 24) ?x132)))
 (let ((?x134 (fp.sub roundNearestTiesToEven ?x133 ?x34)))
 (or (fp.isNaN ?x123) (fp.gt ?x134 ?x123)))))))))))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x128 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x132 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x128))))
 (let ((?x133 ((_ to_fp 8 24) ?x132)))
 (let ((?x134 (fp.sub roundNearestTiesToEven ?x133 ?x34)))
 (not (fp.isNaN ?x134))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (not (fp.isNaN ?x43))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x128 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x132 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x128))))
 (let ((?x133 ((_ to_fp 8 24) ?x132)))
 (let ((?x134 (fp.sub roundNearestTiesToEven ?x133 ?x34)))
 (not (fp.lt ?x134 ?x43)))))))))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.geq ?x58 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.leq ?x58 ?x80))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (fp.geq ?x90 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x85 (concat (select symbolic_0_float_65 (_ bv1 32)) (select symbolic_0_float_65 (_ bv0 32)))))
 (let ((?x89 (concat (select symbolic_0_float_65 (_ bv3 32)) (concat (select symbolic_0_float_65 (_ bv2 32)) ?x85))))
 (let ((?x90 ((_ to_fp 8 24) ?x89)))
 (fp.leq ?x90 ?x24))))))
(assert
 (let ((?x77 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x106 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x110 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x106))))
 (let ((?x111 ((_ to_fp 8 24) ?x110)))
 (fp.geq ?x111 ?x77))))))
(assert
 (let ((?x80 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x106 (concat (select symbolic_0_float_16 (_ bv1 32)) (select symbolic_0_float_16 (_ bv0 32)))))
 (let ((?x110 (concat (select symbolic_0_float_16 (_ bv3 32)) (concat (select symbolic_0_float_16 (_ bv2 32)) ?x106))))
 (let ((?x111 ((_ to_fp 8 24) ?x110)))
 (fp.leq ?x111 ?x80))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x128 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x132 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x128))))
 (let ((?x133 ((_ to_fp 8 24) ?x132)))
 (fp.geq ?x133 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x128 (concat (select symbolic_0_float_27 (_ bv1 32)) (select symbolic_0_float_27 (_ bv0 32)))))
 (let ((?x132 (concat (select symbolic_0_float_27 (_ bv3 32)) (concat (select symbolic_0_float_27 (_ bv2 32)) ?x128))))
 (let ((?x133 ((_ to_fp 8 24) ?x132)))
 (fp.leq ?x133 ?x24))))))
(assert
 (not false))
(check-sat)
(exit)
