(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.620.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun symbolic_0_float_60 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_74 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_53 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_32 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float1 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_85 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_96 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_17 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_28 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_49 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x69 (fp.sub roundNearestTiesToEven ?x59 ?x68)))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x56 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x45 ?x54))))
 (or (or (fp.isNaN ?x56) (fp.isNaN ?x69)) (fp.gt ?x56 ?x69))))))))))))))))))))))
(assert
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x56 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x45 ?x54))))
 (or (or (fp.isNaN ?x56) (fp.isNaN ?x68)) (fp.lt ?x56 ?x68))))))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x81 (concat (select symbolic_0_float_85 (_ bv1 32)) (select symbolic_0_float_85 (_ bv0 32)))))
 (let ((?x85 (concat (select symbolic_0_float_85 (_ bv3 32)) (concat (select symbolic_0_float_85 (_ bv2 32)) ?x81))))
 (let ((?x86 ((_ to_fp 8 24) ?x85)))
 (fp.geq ?x86 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x81 (concat (select symbolic_0_float_85 (_ bv1 32)) (select symbolic_0_float_85 (_ bv0 32)))))
 (let ((?x85 (concat (select symbolic_0_float_85 (_ bv3 32)) (concat (select symbolic_0_float_85 (_ bv2 32)) ?x81))))
 (let ((?x86 ((_ to_fp 8 24) ?x85)))
 (fp.leq ?x86 ?x24))))))
(assert
 (let ((?x98 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x92 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
 (let ((?x96 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x92))))
 (let ((?x97 ((_ to_fp 8 24) ?x96)))
 (fp.geq ?x97 ?x98))))))
(assert
 (let ((?x101 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x92 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
 (let ((?x96 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x92))))
 (let ((?x97 ((_ to_fp 8 24) ?x96)))
 (fp.leq ?x97 ?x101))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x110 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x116 (fp.sub roundNearestTiesToEven ?x59 ?x115)))
 (let ((?x98 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x105 (fp.sub roundNearestTiesToEven ?x34 ?x98)))
 (or (or (fp.isNaN ?x105) (fp.isNaN ?x116)) (fp.gt ?x105 ?x116)))))))))))))
(assert
 (let ((?x110 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (let ((?x98 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x105 (fp.sub roundNearestTiesToEven ?x34 ?x98)))
 (or (or (fp.isNaN ?x105) (fp.isNaN ?x115)) (fp.lt ?x105 ?x115)))))))))))
(assert
 (let ((?x98 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x98))))))
(assert
 (let ((?x101 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x101))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x127 (fp.sub roundNearestTiesToEven ?x59 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x132 (concat (select symbolic_0_float_28 (_ bv1 32)) (select symbolic_0_float_28 (_ bv0 32)))))
 (let ((?x136 (concat (select symbolic_0_float_28 (_ bv3 32)) (concat (select symbolic_0_float_28 (_ bv2 32)) ?x132))))
 (let ((?x137 ((_ to_fp 8 24) ?x136)))
 (let ((?x138 (fp.sub roundNearestTiesToEven ?x137 ?x34)))
 (or (fp.isNaN ?x127) (fp.gt ?x138 ?x127)))))))))))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x132 (concat (select symbolic_0_float_28 (_ bv1 32)) (select symbolic_0_float_28 (_ bv0 32)))))
 (let ((?x136 (concat (select symbolic_0_float_28 (_ bv3 32)) (concat (select symbolic_0_float_28 (_ bv2 32)) ?x132))))
 (let ((?x137 ((_ to_fp 8 24) ?x136)))
 (let ((?x138 (fp.sub roundNearestTiesToEven ?x137 ?x34)))
 (not (fp.isNaN ?x138))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (not (fp.isNaN ?x43))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x132 (concat (select symbolic_0_float_28 (_ bv1 32)) (select symbolic_0_float_28 (_ bv0 32)))))
 (let ((?x136 (concat (select symbolic_0_float_28 (_ bv3 32)) (concat (select symbolic_0_float_28 (_ bv2 32)) ?x132))))
 (let ((?x137 ((_ to_fp 8 24) ?x136)))
 (let ((?x138 (fp.sub roundNearestTiesToEven ?x137 ?x34)))
 (not (fp.lt ?x138 ?x43)))))))))))))
(assert
 (let ((?x98 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (fp.geq ?x54 ?x98))))))
(assert
 (let ((?x101 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (fp.leq ?x54 ?x101))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x152 (concat (select symbolic_0_float_49 (_ bv1 32)) (select symbolic_0_float_49 (_ bv0 32)))))
 (let ((?x156 (concat (select symbolic_0_float_49 (_ bv3 32)) (concat (select symbolic_0_float_49 (_ bv2 32)) ?x152))))
 (let ((?x157 ((_ to_fp 8 24) ?x156)))
 (let ((?x158 (fp.sub roundNearestTiesToEven ?x157 ?x45)))
 (not (fp.isNaN ?x158))))))))))))))
(assert
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x161 (fp.sub roundNearestTiesToEven ?x59 ?x54)))
 (not (fp.isNaN ?x161))))))))
(assert
 (let ((?x49 (concat (select symbolic_0_float_53 (_ bv1 32)) (select symbolic_0_float_53 (_ bv0 32)))))
 (let ((?x53 (concat (select symbolic_0_float_53 (_ bv3 32)) (concat (select symbolic_0_float_53 (_ bv2 32)) ?x49))))
 (let ((?x54 ((_ to_fp 8 24) ?x53)))
 (let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x161 (fp.sub roundNearestTiesToEven ?x59 ?x54)))
 (let ((?x38 (concat (select symbolic_0_float_32 (_ bv1 32)) (select symbolic_0_float_32 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_32 (_ bv3 32)) (concat (select symbolic_0_float_32 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float1 (_ bv1 32)) (select symbolic_0_float1 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float1 (_ bv3 32)) (concat (select symbolic_0_float1 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x45 (fp.add roundNearestTiesToEven ?x34 ?x43)))
 (let ((?x152 (concat (select symbolic_0_float_49 (_ bv1 32)) (select symbolic_0_float_49 (_ bv0 32)))))
 (let ((?x156 (concat (select symbolic_0_float_49 (_ bv3 32)) (concat (select symbolic_0_float_49 (_ bv2 32)) ?x152))))
 (let ((?x157 ((_ to_fp 8 24) ?x156)))
 (let ((?x158 (fp.sub roundNearestTiesToEven ?x157 ?x45)))
 (not (fp.gt ?x158 ?x161)))))))))))))))))))
(assert
 (let ((?x98 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (fp.geq ?x68 ?x98))))))
(assert
 (let ((?x101 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x63 (concat (select symbolic_0_float_74 (_ bv1 32)) (select symbolic_0_float_74 (_ bv0 32)))))
 (let ((?x67 (concat (select symbolic_0_float_74 (_ bv3 32)) (concat (select symbolic_0_float_74 (_ bv2 32)) ?x63))))
 (let ((?x68 ((_ to_fp 8 24) ?x67)))
 (fp.leq ?x68 ?x101))))))
(assert
 (let ((?x98 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x110 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (fp.geq ?x115 ?x98))))))
(assert
 (let ((?x101 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x110 (concat (select symbolic_0_float_17 (_ bv1 32)) (select symbolic_0_float_17 (_ bv0 32)))))
 (let ((?x114 (concat (select symbolic_0_float_17 (_ bv3 32)) (concat (select symbolic_0_float_17 (_ bv2 32)) ?x110))))
 (let ((?x115 ((_ to_fp 8 24) ?x114)))
 (fp.leq ?x115 ?x101))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x132 (concat (select symbolic_0_float_28 (_ bv1 32)) (select symbolic_0_float_28 (_ bv0 32)))))
 (let ((?x136 (concat (select symbolic_0_float_28 (_ bv3 32)) (concat (select symbolic_0_float_28 (_ bv2 32)) ?x132))))
 (let ((?x137 ((_ to_fp 8 24) ?x136)))
 (fp.geq ?x137 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x132 (concat (select symbolic_0_float_28 (_ bv1 32)) (select symbolic_0_float_28 (_ bv0 32)))))
 (let ((?x136 (concat (select symbolic_0_float_28 (_ bv3 32)) (concat (select symbolic_0_float_28 (_ bv2 32)) ?x132))))
 (let ((?x137 ((_ to_fp 8 24) ?x136)))
 (fp.leq ?x137 ?x24))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x152 (concat (select symbolic_0_float_49 (_ bv1 32)) (select symbolic_0_float_49 (_ bv0 32)))))
 (let ((?x156 (concat (select symbolic_0_float_49 (_ bv3 32)) (concat (select symbolic_0_float_49 (_ bv2 32)) ?x152))))
 (let ((?x157 ((_ to_fp 8 24) ?x156)))
 (fp.geq ?x157 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x152 (concat (select symbolic_0_float_49 (_ bv1 32)) (select symbolic_0_float_49 (_ bv0 32)))))
 (let ((?x156 (concat (select symbolic_0_float_49 (_ bv3 32)) (concat (select symbolic_0_float_49 (_ bv2 32)) ?x152))))
 (let ((?x157 ((_ to_fp 8 24) ?x156)))
 (fp.leq ?x157 ?x24))))))
(assert
 (let ((?x92 (concat (select symbolic_0_float_96 (_ bv1 32)) (select symbolic_0_float_96 (_ bv0 32)))))
(let ((?x96 (concat (select symbolic_0_float_96 (_ bv3 32)) (concat (select symbolic_0_float_96 (_ bv2 32)) ?x92))))
(let ((?x97 ((_ to_fp 8 24) ?x96)))
(let ((?x59 ((_ to_fp 8 24) (_ bv2147483648 32))))
(let ((?x176 (fp.sub roundNearestTiesToEven ?x59 ?x97)))
(let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(let ((?x81 (concat (select symbolic_0_float_85 (_ bv1 32)) (select symbolic_0_float_85 (_ bv0 32)))))
(let ((?x85 (concat (select symbolic_0_float_85 (_ bv3 32)) (concat (select symbolic_0_float_85 (_ bv2 32)) ?x81))))
(let ((?x86 ((_ to_fp 8 24) ?x85)))
(let ((?x174 (fp.sub roundNearestTiesToEven ?x86 ?x19)))
(not (or (or (fp.isNaN ?x174) (fp.isNaN ?x176)) (fp.gt ?x174 ?x176))))))))))))))))
(check-sat)
(exit)
