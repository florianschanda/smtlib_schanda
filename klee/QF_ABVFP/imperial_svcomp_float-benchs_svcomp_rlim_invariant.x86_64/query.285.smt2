(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_svcomp_float-benchs_svcomp_rlim_invariant.x86_64/query.285.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun symbolic_0_float_60 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_73 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_52 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_21 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_35 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_14 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float_46 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun symbolic_0_float7 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.geq ?x19 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (fp.leq ?x19 ?x24))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x59 (fp.sub roundNearestTiesToEven ?x49 ?x58)))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x59)) (fp.gt ?x46 ?x59))))))))))))))))))
(assert
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
 (let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
 (let ((?x19 ((_ to_fp 8 24) ?x18)))
 (let ((?x46 (fp.sub roundNearestTiesToEven ?x19 (fp.sub roundNearestTiesToEven ?x34 ?x43))))
 (or (or (fp.isNaN ?x46) (fp.isNaN ?x58)) (fp.lt ?x46 ?x58))))))))))))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.geq ?x34 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (fp.leq ?x34 ?x24))))))
(assert
 (let ((?x86 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x92 (fp.sub roundNearestTiesToEven ?x49 ?x91)))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x81 (fp.sub roundNearestTiesToEven ?x34 (fp.add roundNearestTiesToEven ?x70 ?x79))))
 (or (or (fp.isNaN ?x81) (fp.isNaN ?x92)) (fp.gt ?x81 ?x92))))))))))))))))
(assert
 (let ((?x86 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x81 (fp.sub roundNearestTiesToEven ?x34 (fp.add roundNearestTiesToEven ?x70 ?x79))))
 (or (or (fp.isNaN ?x81) (fp.isNaN ?x91)) (fp.lt ?x81 ?x91))))))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.geq ?x43 ?x70))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (fp.leq ?x43 ?x103))))))
(assert
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x108 (concat (select symbolic_0_float_46 (_ bv1 32)) (select symbolic_0_float_46 (_ bv0 32)))))
 (let ((?x112 (concat (select symbolic_0_float_46 (_ bv3 32)) (concat (select symbolic_0_float_46 (_ bv2 32)) ?x108))))
 (let ((?x113 ((_ to_fp 8 24) ?x112)))
 (let ((?x114 (fp.sub roundNearestTiesToEven ?x113 ?x34)))
 (not (fp.isNaN ?x114))))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x117 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (not (fp.isNaN ?x117))))))))
(assert
 (let ((?x38 (concat (select symbolic_0_float_52 (_ bv1 32)) (select symbolic_0_float_52 (_ bv0 32)))))
 (let ((?x42 (concat (select symbolic_0_float_52 (_ bv3 32)) (concat (select symbolic_0_float_52 (_ bv2 32)) ?x38))))
 (let ((?x43 ((_ to_fp 8 24) ?x42)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x117 (fp.sub roundNearestTiesToEven ?x49 ?x43)))
 (let ((?x29 (concat (select symbolic_0_float_21 (_ bv1 32)) (select symbolic_0_float_21 (_ bv0 32)))))
 (let ((?x33 (concat (select symbolic_0_float_21 (_ bv3 32)) (concat (select symbolic_0_float_21 (_ bv2 32)) ?x29))))
 (let ((?x34 ((_ to_fp 8 24) ?x33)))
 (let ((?x108 (concat (select symbolic_0_float_46 (_ bv1 32)) (select symbolic_0_float_46 (_ bv0 32)))))
 (let ((?x112 (concat (select symbolic_0_float_46 (_ bv3 32)) (concat (select symbolic_0_float_46 (_ bv2 32)) ?x108))))
 (let ((?x113 ((_ to_fp 8 24) ?x112)))
 (let ((?x114 (fp.sub roundNearestTiesToEven ?x113 ?x34)))
 (not (fp.gt ?x114 ?x117)))))))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.geq ?x58 ?x70))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x53 (concat (select symbolic_0_float_73 (_ bv1 32)) (select symbolic_0_float_73 (_ bv0 32)))))
 (let ((?x57 (concat (select symbolic_0_float_73 (_ bv3 32)) (concat (select symbolic_0_float_73 (_ bv2 32)) ?x53))))
 (let ((?x58 ((_ to_fp 8 24) ?x57)))
 (fp.leq ?x58 ?x103))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (fp.geq ?x79 ?x70))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (fp.leq ?x79 ?x103))))))
(assert
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x49 ((_ to_fp 8 24) (_ bv2147483648 32))))
 (let ((?x126 (fp.sub roundNearestTiesToEven ?x49 ?x79)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x131 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (let ((?x137 (fp.sub roundNearestTiesToEven ?x136 ?x70)))
 (or (fp.isNaN ?x126) (fp.gt ?x137 ?x126)))))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x131 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (let ((?x137 (fp.sub roundNearestTiesToEven ?x136 ?x70)))
 (not (fp.isNaN ?x137))))))))
(assert
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (not (fp.isNaN ?x79))))))
(assert
 (let ((?x74 (concat (select symbolic_0_float_14 (_ bv1 32)) (select symbolic_0_float_14 (_ bv0 32)))))
 (let ((?x78 (concat (select symbolic_0_float_14 (_ bv3 32)) (concat (select symbolic_0_float_14 (_ bv2 32)) ?x74))))
 (let ((?x79 ((_ to_fp 8 24) ?x78)))
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x131 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (let ((?x137 (fp.sub roundNearestTiesToEven ?x136 ?x70)))
 (not (fp.lt ?x137 ?x79)))))))))))
(assert
 (let ((?x70 ((_ to_fp 8 24) (_ bv0 32))))
 (let ((?x86 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (fp.geq ?x91 ?x70))))))
(assert
 (let ((?x103 ((_ to_fp 8 24) (_ bv1098907648 32))))
 (let ((?x86 (concat (select symbolic_0_float_35 (_ bv1 32)) (select symbolic_0_float_35 (_ bv0 32)))))
 (let ((?x90 (concat (select symbolic_0_float_35 (_ bv3 32)) (concat (select symbolic_0_float_35 (_ bv2 32)) ?x86))))
 (let ((?x91 ((_ to_fp 8 24) ?x90)))
 (fp.leq ?x91 ?x103))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x108 (concat (select symbolic_0_float_46 (_ bv1 32)) (select symbolic_0_float_46 (_ bv0 32)))))
 (let ((?x112 (concat (select symbolic_0_float_46 (_ bv3 32)) (concat (select symbolic_0_float_46 (_ bv2 32)) ?x108))))
 (let ((?x113 ((_ to_fp 8 24) ?x112)))
 (fp.geq ?x113 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x108 (concat (select symbolic_0_float_46 (_ bv1 32)) (select symbolic_0_float_46 (_ bv0 32)))))
 (let ((?x112 (concat (select symbolic_0_float_46 (_ bv3 32)) (concat (select symbolic_0_float_46 (_ bv2 32)) ?x108))))
 (let ((?x113 ((_ to_fp 8 24) ?x112)))
 (fp.leq ?x113 ?x24))))))
(assert
 (let ((?x21 ((_ to_fp 8 24) (_ bv3271557120 32))))
 (let ((?x131 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (fp.geq ?x136 ?x21))))))
(assert
 (let ((?x24 ((_ to_fp 8 24) (_ bv1124073472 32))))
 (let ((?x131 (concat (select symbolic_0_float7 (_ bv1 32)) (select symbolic_0_float7 (_ bv0 32)))))
 (let ((?x135 (concat (select symbolic_0_float7 (_ bv3 32)) (concat (select symbolic_0_float7 (_ bv2 32)) ?x131))))
 (let ((?x136 ((_ to_fp 8 24) ?x135)))
 (fp.leq ?x136 ?x24))))))
(assert
 (let ((?x12 (concat (select symbolic_0_float_60 (_ bv1 32)) (select symbolic_0_float_60 (_ bv0 32)))))
(let ((?x18 (concat (select symbolic_0_float_60 (_ bv3 32)) (concat (select symbolic_0_float_60 (_ bv2 32)) ?x12))))
(let ((?x19 ((_ to_fp 8 24) ?x18)))
(not (and (fp.geq ?x19 ((_ to_fp 8 24) (_ bv3271622656 32))) (fp.leq ?x19 ((_ to_fp 8 24) (_ bv1124139008 32)))))))))
(check-sat)
(exit)
