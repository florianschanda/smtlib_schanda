(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/aachen_real_numerical_recipes_gaussj.x86_64/query.14.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun sym_f0 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select sym_f0 (_ bv2 32)) (concat (select sym_f0 (_ bv1 32)) (select sym_f0 (_ bv0 32))))))
 (let ((?x19 ((_ to_fp 8 24) (concat (select sym_f0 (_ bv3 32)) ?x15))))
 (fp.gt ?x19 ((_ to_fp 8 24) (_ bv1065353216 32))))))
(assert
 (let ((?x15 (concat (select sym_f0 (_ bv2 32)) (concat (select sym_f0 (_ bv1 32)) (select sym_f0 (_ bv0 32))))))
 (let ((?x19 ((_ to_fp 8 24) (concat (select sym_f0 (_ bv3 32)) ?x15))))
 (fp.lt ?x19 ((_ to_fp 8 24) (_ bv1120403456 32))))))
(assert
 (let ((?x15 (concat (select sym_f0 (_ bv2 32)) (concat (select sym_f0 (_ bv1 32)) (select sym_f0 (_ bv0 32))))))
 (let ((?x19 ((_ to_fp 8 24) (concat (select sym_f0 (_ bv3 32)) ?x15))))
 (let ((?x26 (fp.abs ?x19)))
 (or (fp.isNaN ?x26) (fp.lt ?x26 ((_ to_fp 8 24) (_ bv1082130432 32))))))))
(assert
 (let ((?x15 (concat (select sym_f0 (_ bv2 32)) (concat (select sym_f0 (_ bv1 32)) (select sym_f0 (_ bv0 32))))))
 (let ((?x19 ((_ to_fp 8 24) (concat (select sym_f0 (_ bv3 32)) ?x15))))
 (let ((?x37 (fp.sub roundNearestTiesToEven ((_ to_fp 8 24) (_ bv0 32)) (fp.mul roundNearestTiesToEven ?x19 ((_ to_fp 8 24) (_ bv1056964608 32))))))
 (let ((?x38 (fp.abs ?x37)))
 (or (fp.isNaN ?x38) (fp.lt ?x38 ((_ to_fp 8 24) (_ bv1069547520 32)))))))))
(assert
 (let ((?x15 (concat (select sym_f0 (_ bv2 32)) (concat (select sym_f0 (_ bv1 32)) (select sym_f0 (_ bv0 32))))))
(let ((?x19 ((_ to_fp 8 24) (concat (select sym_f0 (_ bv3 32)) ?x15))))
(let ((?x49 (fp.sub roundNearestTiesToEven ((_ to_fp 8 24) (_ bv1079194419 32)) (fp.mul roundNearestTiesToEven ?x19 ((_ to_fp 8 24) (_ bv1048576000 32))))))
(not (not (fp.eq ?x49 ((_ to_fp 8 24) (_ bv0 32)))))))))
(check-sat)
(exit)
