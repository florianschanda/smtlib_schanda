(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_synthetic_fadd_to_exact_zero_klee_float.x86_64/query.03.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun f0 () (Array (_ BitVec 32) (_ BitVec 8)))
(declare-fun g1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x18 (concat (select f0 (_ bv3 32)) ?x15)))
 (not (fp.isNaN ((_ to_fp 8 24) ?x18))))))
(assert
 (let ((?x27 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x29 (concat (select g1 (_ bv3 32)) ?x27)))
 (not (fp.isNaN ((_ to_fp 8 24) ?x29))))))
(assert
 (let ((?x27 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
 (let ((?x29 (concat (select g1 (_ bv3 32)) ?x27)))
 (let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
 (let ((?x18 (concat (select f0 (_ bv3 32)) ?x15)))
 (fp.eq (fp.abs ((_ to_fp 8 24) ?x18)) (fp.abs ((_ to_fp 8 24) ?x29))))))))
(assert
 (let ((?x27 (concat (select g1 (_ bv2 32)) (concat (select g1 (_ bv1 32)) (select g1 (_ bv0 32))))))
(let ((?x29 (concat (select g1 (_ bv3 32)) ?x27)))
(let ((?x38 (concat (_ bv0 31) ((_ extract 31 31) ?x29))))
(let ((?x15 (concat (select f0 (_ bv2 32)) (concat (select f0 (_ bv1 32)) (select f0 (_ bv0 32))))))
(let ((?x18 (concat (select f0 (_ bv3 32)) ?x15)))
(let ((?x41 (concat (_ bv0 31) ((_ extract 31 31) ?x18))))
(let (($x46 (= (_ bv0 32) (bvor (bvand (bvxor (_ bv1 32) ?x38) ?x41) (bvand (bvxor (_ bv1 32) ?x41) ?x38)))))
(not $x46)))))))))
(check-sat)
(exit)
