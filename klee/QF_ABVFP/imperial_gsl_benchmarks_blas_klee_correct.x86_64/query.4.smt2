(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_gsl_benchmarks_blas_klee_correct.x86_64/query.4.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun a0 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x15 (concat (select a0 (_ bv2 32)) (concat (select a0 (_ bv1 32)) (select a0 (_ bv0 32))))))
 (let ((?x24 (concat (select a0 (_ bv5 32)) (concat (select a0 (_ bv4 32)) (concat (select a0 (_ bv3 32)) ?x15)))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select a0 (_ bv7 32)) (concat (select a0 (_ bv6 32)) ?x24)))))
 (not (fp.isNaN ?x31))))))
(assert
 (let ((?x15 (concat (select a0 (_ bv2 32)) (concat (select a0 (_ bv1 32)) (select a0 (_ bv0 32))))))
 (let ((?x24 (concat (select a0 (_ bv5 32)) (concat (select a0 (_ bv4 32)) (concat (select a0 (_ bv3 32)) ?x15)))))
 (let ((?x31 ((_ to_fp 11 53) (concat (select a0 (_ bv7 32)) (concat (select a0 (_ bv6 32)) ?x24)))))
 (let ((?x37 (fp.mul roundNearestTiesToEven ?x31 ((_ to_fp 11 53) (_ bv4607182418800017408 64)))))
 (not (fp.eq ?x37 ((_ to_fp 11 53) (_ bv0 64)))))))))
(assert
 (let ((?x15 (concat (select a0 (_ bv2 32)) (concat (select a0 (_ bv1 32)) (select a0 (_ bv0 32))))))
(let ((?x24 (concat (select a0 (_ bv5 32)) (concat (select a0 (_ bv4 32)) (concat (select a0 (_ bv3 32)) ?x15)))))
(let ((?x31 ((_ to_fp 11 53) (concat (select a0 (_ bv7 32)) (concat (select a0 (_ bv6 32)) ?x24)))))
(let ((?x53 (fp.add roundNearestTiesToEven (fp.mul roundNearestTiesToEven ?x31 ((_ to_fp 11 53) (_ bv4652104065864433664 64))) ((_ to_fp 11 53) (_ bv4638321995473517281 64)))))
(let ((?x37 (fp.mul roundNearestTiesToEven ?x31 ((_ to_fp 11 53) (_ bv4607182418800017408 64)))))
(let ((?x45 (fp.add roundNearestTiesToEven ((_ to_fp 11 53) (_ bv0 64)) (fp.mul roundNearestTiesToEven ?x37 ((_ to_fp 11 53) (_ bv4652104065864433664 64))))))
(let ((?x51 (fp.add roundNearestTiesToEven (fp.add roundNearestTiesToEven ?x45 ((_ to_fp 11 53) (_ bv4638321995473517281 64))) ((_ to_fp 11 53) (_ bv4638919777955306537 64)))))
(not (fp.eq ?x51 (fp.add roundNearestTiesToEven ?x53 ((_ to_fp 11 53) (_ bv4638919777955306537 64)))))))))))))
(check-sat)
(exit)
