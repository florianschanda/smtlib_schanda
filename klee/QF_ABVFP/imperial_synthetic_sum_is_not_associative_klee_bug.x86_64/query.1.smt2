(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by: Daniel Liew, Daniel Schemmel, Cristian Cadar, Alastair Donaldson, and Rafael ZÃ¤hl
Generated on: 2017-4-28
Generator: KLEE
Application: Branch satisfiability check for symbolic execution of C programs
Target solver: Z3 or MathSAT5
Corresponding query: An equisatisfiable query (arrays replaced with bitvectors) is available at QF_BVFP/20170428-Liew-KLEE/imperial_synthetic_sum_is_not_associative_klee_bug.x86_64/query.1.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun data0 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert
 (let ((?x69 (concat (select data0 (_ bv2 32)) (concat (select data0 (_ bv1 32)) (select data0 (_ bv0 32))))))
(let ((?x57 (concat (select data0 (_ bv6 32)) (concat (select data0 (_ bv5 32)) (select data0 (_ bv4 32))))))
(let ((?x44 (concat (select data0 (_ bv10 32)) (concat (select data0 (_ bv9 32)) (select data0 (_ bv8 32))))))
(let ((?x31 (concat (select data0 (_ bv14 32)) (concat (select data0 (_ bv13 32)) (select data0 (_ bv12 32))))))
(let ((?x16 (concat (select data0 (_ bv18 32)) (concat (select data0 (_ bv17 32)) (select data0 (_ bv16 32))))))
(let ((?x23 (fp.add roundNearestTiesToEven ((_ to_fp 8 24) (concat (select data0 (_ bv19 32)) ?x16)) ((_ to_fp 8 24) (_ bv0 32)))))
(let ((?x36 (fp.add roundNearestTiesToEven ?x23 ((_ to_fp 8 24) (concat (select data0 (_ bv15 32)) ?x31)))))
(let ((?x49 (fp.add roundNearestTiesToEven ?x36 ((_ to_fp 8 24) (concat (select data0 (_ bv11 32)) ?x44)))))
(let ((?x62 (fp.add roundNearestTiesToEven ?x49 ((_ to_fp 8 24) (concat (select data0 (_ bv7 32)) ?x57)))))
(let ((?x74 (fp.add roundNearestTiesToEven ?x62 ((_ to_fp 8 24) (concat (select data0 (_ bv3 32)) ?x69)))))
(let ((?x77 (fp.add roundNearestTiesToEven ((_ to_fp 8 24) (concat (select data0 (_ bv3 32)) ?x69)) ((_ to_fp 8 24) (_ bv0 32)))))
(let ((?x78 (fp.add roundNearestTiesToEven ?x77 ((_ to_fp 8 24) (concat (select data0 (_ bv7 32)) ?x57)))))
(let ((?x79 (fp.add roundNearestTiesToEven ?x78 ((_ to_fp 8 24) (concat (select data0 (_ bv11 32)) ?x44)))))
(let ((?x80 (fp.add roundNearestTiesToEven ?x79 ((_ to_fp 8 24) (concat (select data0 (_ bv15 32)) ?x31)))))
(let ((?x81 (fp.add roundNearestTiesToEven ?x80 ((_ to_fp 8 24) (concat (select data0 (_ bv19 32)) ?x16)))))
(let (($x85 (= (_ bv0 32) (bvand (ite (fp.isNaN ?x74) (_ bv1 32) (_ bv0 32)) (ite (fp.isNaN ?x81) (_ bv1 32) (_ bv0 32))))))
(not (or (not $x85) (fp.eq ?x81 ?x74))))))))))))))))))))
(check-sat)
(exit)
