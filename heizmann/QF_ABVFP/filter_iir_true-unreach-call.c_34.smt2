(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements 
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by 
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2017 [5,6].

This script might _not_ contain all SMT commands that are used by 
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2017-05-01, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)


[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Wen Chen, Daniel Dietsch, Marius Greitschus, 
Alexander Nutz, Betim Musa, Claus Schätzle, Christian Schilling, 
Frank Schüssele, Andreas Podelski:
Ultimate Automizer with an On-Demand Construction of Floyd-Hoare 
Automata - (Competition Contribution). TACAS (2) 2017: 394-398
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model 
Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Software Verification with Validation of Results - 
(Report on SV-COMP 2017). TACAS (2) 2017: 331-349
[6] https://sv-comp.sosy-lab.org/2017/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun v_~b1_4_const_-685417032 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun v_~D1_11_const_-2106658660 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun v_iir4_~x1~6_2_const_-1767341126 () (_ FloatingPoint 11 53))
(declare-fun v_iir4_~t1~6_2_const_-1346101722 () (_ FloatingPoint 11 53))
(declare-fun |v_iir4_#t~mem0_3_const_-1900045828| () (_ FloatingPoint 11 53))
(declare-fun v_~A1_5_const_-684433926 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun v_iir4_~y1~6_2_const_-1803691303 () (_ FloatingPoint 11 53))
(declare-fun v_~D1_9_const_-684246883 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun v_~b2_4_const_-685420037 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun v_~D2_9_const_-684245796 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun v_iir4_~t2~6_2_const_-1342703961 () (_ FloatingPoint 11 53))
(assert (let ((v_~b1_4 v_~b1_4_const_-685417032) (v_~D1_11 v_~D1_11_const_-2106658660) (v_iir4_~x1~6_2 v_iir4_~x1~6_2_const_-1767341126) (v_iir4_~t1~6_2 v_iir4_~t1~6_2_const_-1346101722) (|v_iir4_#t~mem0_3| |v_iir4_#t~mem0_3_const_-1900045828|) (v_~A1_5 v_~A1_5_const_-684433926) (v_iir4_~y1~6_2 v_iir4_~y1~6_2_const_-1803691303) (v_~D1_9 v_~D1_9_const_-684246883) (v_~b2_4 v_~b2_4_const_-685420037) (v_~D2_9 v_~D2_9_const_-684245796) (v_iir4_~t2~6_2 v_iir4_~t2~6_2_const_-1342703961)) (and (= v_iir4_~x1~6_2 (fp.mul RNE ((_ to_fp 11 53) RNE 0.0117749388721091) |v_iir4_#t~mem0_3|)) (= v_iir4_~t1~6_2 (fp.sub RNE (fp.add RNE v_iir4_~x1~6_2 (fp.mul RNE (select v_~b1_4 (_ bv0 32)) (select v_~D1_11 (_ bv0 32)))) (fp.mul RNE (select v_~b1_4 (_ bv1 32)) (select v_~D1_11 (_ bv1 32))))) (= v_iir4_~y1~6_2 (fp.add RNE (fp.sub RNE (fp.mul RNE (select v_~A1_5 (_ bv0 32)) v_iir4_~t1~6_2) (fp.mul RNE (select v_~A1_5 (_ bv1 32)) (select v_~D1_11 (_ bv0 32)))) (fp.mul RNE (select v_~A1_5 (_ bv2 32)) (select v_~D1_11 (_ bv1 32))))) (= v_~D1_9 (store (store v_~D1_11 (_ bv1 32) (select v_~D1_11 (_ bv0 32))) (_ bv0 32) v_iir4_~t1~6_2)) (= v_iir4_~t2~6_2 (fp.sub RNE (fp.add RNE v_iir4_~y1~6_2 (fp.mul RNE (select v_~b2_4 (_ bv0 32)) (select v_~D2_9 (_ bv0 32)))) (fp.mul RNE (select v_~b2_4 (_ bv1 32)) (select v_~D2_9 (_ bv1 32))))))))
(check-sat)
(exit)
