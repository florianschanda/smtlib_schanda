(set-info :smt-lib-version 2.6)
(set-logic QF_ABVFP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements 
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by 
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2017 [5,6].

This script might _not_ contain all SMT commands that are used by 
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2017-05-01, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)


[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Wen Chen, Daniel Dietsch, Marius Greitschus, 
Alexander Nutz, Betim Musa, Claus Schätzle, Christian Schilling, 
Frank Schüssele, Andreas Podelski:
Ultimate Automizer with an On-Demand Construction of Floyd-Hoare 
Automata - (Competition Contribution). TACAS (2) 2017: 394-398
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model 
Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Software Verification with Validation of Results - 
(Report on SV-COMP 2017). TACAS (2) 2017: 331-349
[6] https://sv-comp.sosy-lab.org/2017/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun v_~T_1_const_313316912 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun v_~T_363_const_-2089468879 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(assert (let ((v_~T_1 v_~T_1_const_313316912) (v_~T_363 v_~T_363_const_-2089468879)) (= v_~T_1 (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store (store v_~T_363 (_ bv0 32) (_ +zero 11 53)) (_ bv1 32) ((_ to_fp 11 53) RNE 0.01745240643728)) (_ bv2 32) ((_ to_fp 11 53) RNE 0.03489949670250)) (_ bv3 32) ((_ to_fp 11 53) RNE 0.05233595624294)) (_ bv4 32) ((_ to_fp 11 53) RNE 0.06975647374413)) (_ bv5 32) ((_ to_fp 11 53) RNE 0.08715574274766)) (_ bv6 32) ((_ to_fp 11 53) RNE 0.10452846326765)) (_ bv7 32) ((_ to_fp 11 53) RNE 0.12186934340515)) (_ bv8 32) ((_ to_fp 11 53) RNE 0.13917310096007)) (_ bv9 32) ((_ to_fp 11 53) RNE 0.15643446504023)) (_ bv10 32) ((_ to_fp 11 53) RNE 0.17364817766693)) (_ bv11 32) ((_ to_fp 11 53) RNE 0.19080899537654)) (_ bv12 32) ((_ to_fp 11 53) RNE 0.20791169081776)) (_ bv13 32) ((_ to_fp 11 53) RNE 0.22495105434386)) (_ bv14 32) ((_ to_fp 11 53) RNE 0.24192189559967)) (_ bv15 32) ((_ to_fp 11 53) RNE 0.25881904510252)) (_ bv16 32) ((_ to_fp 11 53) RNE 0.27563735581700)) (_ bv17 32) ((_ to_fp 11 53) RNE 0.29237170472274)) (_ bv18 32) ((_ to_fp 11 53) RNE 0.30901699437495)) (_ bv19 32) ((_ to_fp 11 53) RNE 0.32556815445716)) (_ bv20 32) ((_ to_fp 11 53) RNE 0.34202014332567)) (_ bv21 32) ((_ to_fp 11 53) RNE 0.35836794954530)) (_ bv22 32) ((_ to_fp 11 53) RNE 0.37460659341591)) (_ bv23 32) ((_ to_fp 11 53) RNE 0.39073112848927)) (_ bv24 32) ((_ to_fp 11 53) RNE 0.40673664307580)) (_ bv25 32) ((_ to_fp 11 53) RNE 0.42261826174070)) (_ bv26 32) ((_ to_fp 11 53) RNE 0.43837114678908)) (_ bv27 32) ((_ to_fp 11 53) RNE 0.45399049973955)) (_ bv28 32) ((_ to_fp 11 53) RNE 0.46947156278589)) (_ bv29 32) ((_ to_fp 11 53) RNE 0.48480962024634)) (_ bv30 32) ((_ to_fp 11 53) RNE 0.50000000000000)) (_ bv31 32) ((_ to_fp 11 53) RNE 0.51503807491005)) (_ bv32 32) ((_ to_fp 11 53) RNE 0.52991926423320)) (_ bv33 32) ((_ to_fp 11 53) RNE 0.54463903501503)) (_ bv34 32) ((_ to_fp 11 53) RNE 0.55919290347075)) (_ bv35 32) ((_ to_fp 11 53) RNE 0.57357643635105)) (_ bv36 32) ((_ to_fp 11 53) RNE 0.58778525229247)) (_ bv37 32) ((_ to_fp 11 53) RNE 0.60181502315205)) (_ bv38 32) ((_ to_fp 11 53) RNE 0.61566147532566)) (_ bv39 32) ((_ to_fp 11 53) RNE 0.62932039104984)) (_ bv40 32) ((_ to_fp 11 53) RNE 0.64278760968654)) (_ bv41 32) ((_ to_fp 11 53) RNE 0.65605902899051)) (_ bv42 32) ((_ to_fp 11 53) RNE 0.66913060635886)) (_ bv43 32) ((_ to_fp 11 53) RNE 0.68199836006250)) (_ bv44 32) ((_ to_fp 11 53) RNE 0.69465837045900)) (_ bv45 32) ((_ to_fp 11 53) RNE 0.70710678118655)) (_ bv46 32) ((_ to_fp 11 53) RNE 0.71933980033865)) (_ bv47 32) ((_ to_fp 11 53) RNE 0.73135370161917)) (_ bv48 32) ((_ to_fp 11 53) RNE 0.74314482547739)) (_ bv49 32) ((_ to_fp 11 53) RNE 0.75470958022277)) (_ bv50 32) ((_ to_fp 11 53) RNE 0.76604444311898)) (_ bv51 32) ((_ to_fp 11 53) RNE 0.77714596145697)) (_ bv52 32) ((_ to_fp 11 53) RNE 0.78801075360672)) (_ bv53 32) ((_ to_fp 11 53) RNE 0.79863551004729)) (_ bv54 32) ((_ to_fp 11 53) RNE 0.80901699437495)) (_ bv55 32) ((_ to_fp 11 53) RNE 0.81915204428899)) (_ bv56 32) ((_ to_fp 11 53) RNE 0.82903757255504)) (_ bv57 32) ((_ to_fp 11 53) RNE 0.83867056794542)) (_ bv58 32) ((_ to_fp 11 53) RNE 0.84804809615643)) (_ bv59 32) ((_ to_fp 11 53) RNE 0.85716730070211)) (_ bv60 32) ((_ to_fp 11 53) RNE 0.86602540378444)) (_ bv61 32) ((_ to_fp 11 53) RNE 0.87461970713940)) (_ bv62 32) ((_ to_fp 11 53) RNE 0.88294759285893)) (_ bv63 32) ((_ to_fp 11 53) RNE 0.89100652418837)) (_ bv64 32) ((_ to_fp 11 53) RNE 0.89879404629917)) (_ bv65 32) ((_ to_fp 11 53) RNE 0.90630778703665)) (_ bv66 32) ((_ to_fp 11 53) RNE 0.91354545764260)) (_ bv67 32) ((_ to_fp 11 53) RNE 0.92050485345244)) (_ bv68 32) ((_ to_fp 11 53) RNE 0.92718385456679)) (_ bv69 32) ((_ to_fp 11 53) RNE 0.93358042649720)) (_ bv70 32) ((_ to_fp 11 53) RNE 0.93969262078591)) (_ bv71 32) ((_ to_fp 11 53) RNE 0.94551857559932)) (_ bv72 32) ((_ to_fp 11 53) RNE 0.95105651629515)) (_ bv73 32) ((_ to_fp 11 53) RNE 0.95630475596304)) (_ bv74 32) ((_ to_fp 11 53) RNE 0.96126169593832)) (_ bv75 32) ((_ to_fp 11 53) RNE 0.96592582628907)) (_ bv76 32) ((_ to_fp 11 53) RNE 0.97029572627600)) (_ bv77 32) ((_ to_fp 11 53) RNE 0.97437006478524)) (_ bv78 32) ((_ to_fp 11 53) RNE 0.97814760073381)) (_ bv79 32) ((_ to_fp 11 53) RNE 0.98162718344766)) (_ bv80 32) ((_ to_fp 11 53) RNE 0.98480775301221)) (_ bv81 32) ((_ to_fp 11 53) RNE 0.98768834059514)) (_ bv82 32) ((_ to_fp 11 53) RNE 0.99026806874157)) (_ bv83 32) ((_ to_fp 11 53) RNE 0.99254615164132)) (_ bv84 32) ((_ to_fp 11 53) RNE 0.99452189536827)) (_ bv85 32) ((_ to_fp 11 53) RNE 0.99619469809175)) (_ bv86 32) ((_ to_fp 11 53) RNE 0.99756405025982)) (_ bv87 32) ((_ to_fp 11 53) RNE 0.99862953475457)) (_ bv88 32) ((_ to_fp 11 53) RNE 0.99939082701910)) (_ bv89 32) ((_ to_fp 11 53) RNE 0.99984769515639)) (_ bv90 32) ((_ to_fp 11 53) RNE 1.00000000000000)) (_ bv91 32) ((_ to_fp 11 53) RNE 0.99984769515639)) (_ bv92 32) ((_ to_fp 11 53) RNE 0.99939082701910)) (_ bv93 32) ((_ to_fp 11 53) RNE 0.99862953475457)) (_ bv94 32) ((_ to_fp 11 53) RNE 0.99756405025982)) (_ bv95 32) ((_ to_fp 11 53) RNE 0.99619469809175)) (_ bv96 32) ((_ to_fp 11 53) RNE 0.99452189536827)) (_ bv97 32) ((_ to_fp 11 53) RNE 0.99254615164132)) (_ bv98 32) ((_ to_fp 11 53) RNE 0.99026806874157)) (_ bv99 32) ((_ to_fp 11 53) RNE 0.98768834059514)) (_ bv100 32) ((_ to_fp 11 53) RNE 0.98480775301221)) (_ bv101 32) ((_ to_fp 11 53) RNE 0.98162718344766)) (_ bv102 32) ((_ to_fp 11 53) RNE 0.97814760073381)) (_ bv103 32) ((_ to_fp 11 53) RNE 0.97437006478524)) (_ bv104 32) ((_ to_fp 11 53) RNE 0.97029572627600)) (_ bv105 32) ((_ to_fp 11 53) RNE 0.96592582628907)) (_ bv106 32) ((_ to_fp 11 53) RNE 0.96126169593832)) (_ bv107 32) ((_ to_fp 11 53) RNE 0.95630475596304)) (_ bv108 32) ((_ to_fp 11 53) RNE 0.95105651629515)) (_ bv109 32) ((_ to_fp 11 53) RNE 0.94551857559932)) (_ bv110 32) ((_ to_fp 11 53) RNE 0.93969262078591)) (_ bv111 32) ((_ to_fp 11 53) RNE 0.93358042649720)) (_ bv112 32) ((_ to_fp 11 53) RNE 0.92718385456679)) (_ bv113 32) ((_ to_fp 11 53) RNE 0.92050485345244)) (_ bv114 32) ((_ to_fp 11 53) RNE 0.91354545764260)) (_ bv115 32) ((_ to_fp 11 53) RNE 0.90630778703665)) (_ bv116 32) ((_ to_fp 11 53) RNE 0.89879404629917)) (_ bv117 32) ((_ to_fp 11 53) RNE 0.89100652418837)) (_ bv118 32) ((_ to_fp 11 53) RNE 0.88294759285893)) (_ bv119 32) ((_ to_fp 11 53) RNE 0.87461970713940)) (_ bv120 32) ((_ to_fp 11 53) RNE 0.86602540378444)) (_ bv121 32) ((_ to_fp 11 53) RNE 0.85716730070211)) (_ bv122 32) ((_ to_fp 11 53) RNE 0.84804809615643)) (_ bv123 32) ((_ to_fp 11 53) RNE 0.83867056794542)) (_ bv124 32) ((_ to_fp 11 53) RNE 0.82903757255504)) (_ bv125 32) ((_ to_fp 11 53) RNE 0.81915204428899)) (_ bv126 32) ((_ to_fp 11 53) RNE 0.80901699437495)) (_ bv127 32) ((_ to_fp 11 53) RNE 0.79863551004729)) (_ bv128 32) ((_ to_fp 11 53) RNE 0.78801075360672)) (_ bv129 32) ((_ to_fp 11 53) RNE 0.77714596145697)) (_ bv130 32) ((_ to_fp 11 53) RNE 0.76604444311898)) (_ bv131 32) ((_ to_fp 11 53) RNE 0.75470958022277)) (_ bv132 32) ((_ to_fp 11 53) RNE 0.74314482547739)) (_ bv133 32) ((_ to_fp 11 53) RNE 0.73135370161917)) (_ bv134 32) ((_ to_fp 11 53) RNE 0.71933980033865)) (_ bv135 32) ((_ to_fp 11 53) RNE 0.70710678118655)) (_ bv136 32) ((_ to_fp 11 53) RNE 0.69465837045900)) (_ bv137 32) ((_ to_fp 11 53) RNE 0.68199836006250)) (_ bv138 32) ((_ to_fp 11 53) RNE 0.66913060635886)) (_ bv139 32) ((_ to_fp 11 53) RNE 0.65605902899051)) (_ bv140 32) ((_ to_fp 11 53) RNE 0.64278760968654)) (_ bv141 32) ((_ to_fp 11 53) RNE 0.62932039104984)) (_ bv142 32) ((_ to_fp 11 53) RNE 0.61566147532566)) (_ bv143 32) ((_ to_fp 11 53) RNE 0.60181502315205)) (_ bv144 32) ((_ to_fp 11 53) RNE 0.58778525229247)) (_ bv145 32) ((_ to_fp 11 53) RNE 0.57357643635105)) (_ bv146 32) ((_ to_fp 11 53) RNE 0.55919290347075)) (_ bv147 32) ((_ to_fp 11 53) RNE 0.54463903501503)) (_ bv148 32) ((_ to_fp 11 53) RNE 0.52991926423320)) (_ bv149 32) ((_ to_fp 11 53) RNE 0.51503807491005)) (_ bv150 32) ((_ to_fp 11 53) RNE 0.50000000000000)) (_ bv151 32) ((_ to_fp 11 53) RNE 0.48480962024634)) (_ bv152 32) ((_ to_fp 11 53) RNE 0.46947156278589)) (_ bv153 32) ((_ to_fp 11 53) RNE 0.45399049973955)) (_ bv154 32) ((_ to_fp 11 53) RNE 0.43837114678908)) (_ bv155 32) ((_ to_fp 11 53) RNE 0.42261826174070)) (_ bv156 32) ((_ to_fp 11 53) RNE 0.40673664307580)) (_ bv157 32) ((_ to_fp 11 53) RNE 0.39073112848927)) (_ bv158 32) ((_ to_fp 11 53) RNE 0.37460659341591)) (_ bv159 32) ((_ to_fp 11 53) RNE 0.35836794954530)) (_ bv160 32) ((_ to_fp 11 53) RNE 0.34202014332567)) (_ bv161 32) ((_ to_fp 11 53) RNE 0.32556815445716)) (_ bv162 32) ((_ to_fp 11 53) RNE 0.30901699437495)) (_ bv163 32) ((_ to_fp 11 53) RNE 0.29237170472274)) (_ bv164 32) ((_ to_fp 11 53) RNE 0.27563735581700)) (_ bv165 32) ((_ to_fp 11 53) RNE 0.25881904510252)) (_ bv166 32) ((_ to_fp 11 53) RNE 0.24192189559967)) (_ bv167 32) ((_ to_fp 11 53) RNE 0.22495105434387)) (_ bv168 32) ((_ to_fp 11 53) RNE 0.20791169081776)) (_ bv169 32) ((_ to_fp 11 53) RNE 0.19080899537654)) (_ bv170 32) ((_ to_fp 11 53) RNE 0.17364817766693)) (_ bv171 32) ((_ to_fp 11 53) RNE 0.15643446504023)) (_ bv172 32) ((_ to_fp 11 53) RNE 0.13917310096007)) (_ bv173 32) ((_ to_fp 11 53) RNE 0.12186934340515)) (_ bv174 32) ((_ to_fp 11 53) RNE 0.10452846326765)) (_ bv175 32) ((_ to_fp 11 53) RNE 0.08715574274766)) (_ bv176 32) ((_ to_fp 11 53) RNE 0.06975647374413)) (_ bv177 32) ((_ to_fp 11 53) RNE 0.05233595624294)) (_ bv178 32) ((_ to_fp 11 53) RNE 0.03489949670250)) (_ bv179 32) ((_ to_fp 11 53) RNE 0.01745240643728)) (_ bv180 32) (_ +zero 11 53)) (_ bv181 32) (fp.neg ((_ to_fp 11 53) RNE 0.01745240643728))) (_ bv182 32) (fp.neg ((_ to_fp 11 53) RNE 0.03489949670250))) (_ bv183 32) (fp.neg ((_ to_fp 11 53) RNE 0.05233595624294))) (_ bv184 32) (fp.neg ((_ to_fp 11 53) RNE 0.06975647374412))) (_ bv185 32) (fp.neg ((_ to_fp 11 53) RNE 0.08715574274766))) (_ bv186 32) (fp.neg ((_ to_fp 11 53) RNE 0.10452846326765))) (_ bv187 32) (fp.neg ((_ to_fp 11 53) RNE 0.12186934340515))) (_ bv188 32) (fp.neg ((_ to_fp 11 53) RNE 0.13917310096007))) (_ bv189 32) (fp.neg ((_ to_fp 11 53) RNE 0.15643446504023))) (_ bv190 32) (fp.neg ((_ to_fp 11 53) RNE 0.17364817766693))) (_ bv191 32) (fp.neg ((_ to_fp 11 53) RNE 0.19080899537654))) (_ bv192 32) (fp.neg ((_ to_fp 11 53) RNE 0.20791169081776))) (_ bv193 32) (fp.neg ((_ to_fp 11 53) RNE 0.22495105434386))) (_ bv194 32) (fp.neg ((_ to_fp 11 53) RNE 0.24192189559967))) (_ bv195 32) (fp.neg ((_ to_fp 11 53) RNE 0.25881904510252))) (_ bv196 32) (fp.neg ((_ to_fp 11 53) RNE 0.27563735581700))) (_ bv197 32) (fp.neg ((_ to_fp 11 53) RNE 0.29237170472274))) (_ bv198 32) (fp.neg ((_ to_fp 11 53) RNE 0.30901699437495))) (_ bv199 32) (fp.neg ((_ to_fp 11 53) RNE 0.32556815445716))) (_ bv200 32) (fp.neg ((_ to_fp 11 53) RNE 0.34202014332567))) (_ bv201 32) (fp.neg ((_ to_fp 11 53) RNE 0.35836794954530))) (_ bv202 32) (fp.neg ((_ to_fp 11 53) RNE 0.37460659341591))) (_ bv203 32) (fp.neg ((_ to_fp 11 53) RNE 0.39073112848927))) (_ bv204 32) (fp.neg ((_ to_fp 11 53) RNE 0.40673664307580))) (_ bv205 32) (fp.neg ((_ to_fp 11 53) RNE 0.42261826174070))) (_ bv206 32) (fp.neg ((_ to_fp 11 53) RNE 0.43837114678908))) (_ bv207 32) (fp.neg ((_ to_fp 11 53) RNE 0.45399049973955))) (_ bv208 32) (fp.neg ((_ to_fp 11 53) RNE 0.46947156278589))) (_ bv209 32) (fp.neg ((_ to_fp 11 53) RNE 0.48480962024634))) (_ bv210 32) (fp.neg ((_ to_fp 11 53) RNE 0.50000000000000))) (_ bv211 32) (fp.neg ((_ to_fp 11 53) RNE 0.51503807491005))) (_ bv212 32) (fp.neg ((_ to_fp 11 53) RNE 0.52991926423320))) (_ bv213 32) (fp.neg ((_ to_fp 11 53) RNE 0.54463903501503))) (_ bv214 32) (fp.neg ((_ to_fp 11 53) RNE 0.55919290347075))) (_ bv215 32) (fp.neg ((_ to_fp 11 53) RNE 0.57357643635105))) (_ bv216 32) (fp.neg ((_ to_fp 11 53) RNE 0.58778525229247))) (_ bv217 32) (fp.neg ((_ to_fp 11 53) RNE 0.60181502315205))) (_ bv218 32) (fp.neg ((_ to_fp 11 53) RNE 0.61566147532566))) (_ bv219 32) (fp.neg ((_ to_fp 11 53) RNE 0.62932039104984))) (_ bv220 32) (fp.neg ((_ to_fp 11 53) RNE 0.64278760968654))) (_ bv221 32) (fp.neg ((_ to_fp 11 53) RNE 0.65605902899051))) (_ bv222 32) (fp.neg ((_ to_fp 11 53) RNE 0.66913060635886))) (_ bv223 32) (fp.neg ((_ to_fp 11 53) RNE 0.68199836006250))) (_ bv224 32) (fp.neg ((_ to_fp 11 53) RNE 0.69465837045900))) (_ bv225 32) (fp.neg ((_ to_fp 11 53) RNE 0.70710678118655))) (_ bv226 32) (fp.neg ((_ to_fp 11 53) RNE 0.71933980033865))) (_ bv227 32) (fp.neg ((_ to_fp 11 53) RNE 0.73135370161917))) (_ bv228 32) (fp.neg ((_ to_fp 11 53) RNE 0.74314482547739))) (_ bv229 32) (fp.neg ((_ to_fp 11 53) RNE 0.75470958022277))) (_ bv230 32) (fp.neg ((_ to_fp 11 53) RNE 0.76604444311898))) (_ bv231 32) (fp.neg ((_ to_fp 11 53) RNE 0.77714596145697))) (_ bv232 32) (fp.neg ((_ to_fp 11 53) RNE 0.78801075360672))) (_ bv233 32) (fp.neg ((_ to_fp 11 53) RNE 0.79863551004729))) (_ bv234 32) (fp.neg ((_ to_fp 11 53) RNE 0.80901699437495))) (_ bv235 32) (fp.neg ((_ to_fp 11 53) RNE 0.81915204428899))) (_ bv236 32) (fp.neg ((_ to_fp 11 53) RNE 0.82903757255504))) (_ bv237 32) (fp.neg ((_ to_fp 11 53) RNE 0.83867056794542))) (_ bv238 32) (fp.neg ((_ to_fp 11 53) RNE 0.84804809615643))) (_ bv239 32) (fp.neg ((_ to_fp 11 53) RNE 0.85716730070211))) (_ bv240 32) (fp.neg ((_ to_fp 11 53) RNE 0.86602540378444))) (_ bv241 32) (fp.neg ((_ to_fp 11 53) RNE 0.87461970713940))) (_ bv242 32) (fp.neg ((_ to_fp 11 53) RNE 0.88294759285893))) (_ bv243 32) (fp.neg ((_ to_fp 11 53) RNE 0.89100652418837))) (_ bv244 32) (fp.neg ((_ to_fp 11 53) RNE 0.89879404629917))) (_ bv245 32) (fp.neg ((_ to_fp 11 53) RNE 0.90630778703665))) (_ bv246 32) (fp.neg ((_ to_fp 11 53) RNE 0.91354545764260))) (_ bv247 32) (fp.neg ((_ to_fp 11 53) RNE 0.92050485345244))) (_ bv248 32) (fp.neg ((_ to_fp 11 53) RNE 0.92718385456679))) (_ bv249 32) (fp.neg ((_ to_fp 11 53) RNE 0.93358042649720))) (_ bv250 32) (fp.neg ((_ to_fp 11 53) RNE 0.93969262078591))) (_ bv251 32) (fp.neg ((_ to_fp 11 53) RNE 0.94551857559932))) (_ bv252 32) (fp.neg ((_ to_fp 11 53) RNE 0.95105651629515))) (_ bv253 32) (fp.neg ((_ to_fp 11 53) RNE 0.95630475596304))) (_ bv254 32) (fp.neg ((_ to_fp 11 53) RNE 0.96126169593832))) (_ bv255 32) (fp.neg ((_ to_fp 11 53) RNE 0.96592582628907))) (_ bv256 32) (fp.neg ((_ to_fp 11 53) RNE 0.97029572627600))) (_ bv257 32) (fp.neg ((_ to_fp 11 53) RNE 0.97437006478524))) (_ bv258 32) (fp.neg ((_ to_fp 11 53) RNE 0.97814760073381))) (_ bv259 32) (fp.neg ((_ to_fp 11 53) RNE 0.98162718344766))) (_ bv260 32) (fp.neg ((_ to_fp 11 53) RNE 0.98480775301221))) (_ bv261 32) (fp.neg ((_ to_fp 11 53) RNE 0.98768834059514))) (_ bv262 32) (fp.neg ((_ to_fp 11 53) RNE 0.99026806874157))) (_ bv263 32) (fp.neg ((_ to_fp 11 53) RNE 0.99254615164132))) (_ bv264 32) (fp.neg ((_ to_fp 11 53) RNE 0.99452189536827))) (_ bv265 32) (fp.neg ((_ to_fp 11 53) RNE 0.99619469809175))) (_ bv266 32) (fp.neg ((_ to_fp 11 53) RNE 0.99756405025982))) (_ bv267 32) (fp.neg ((_ to_fp 11 53) RNE 0.99862953475457))) (_ bv268 32) (fp.neg ((_ to_fp 11 53) RNE 0.99939082701910))) (_ bv269 32) (fp.neg ((_ to_fp 11 53) RNE 0.99984769515639))) (_ bv270 32) (fp.neg ((_ to_fp 11 53) RNE 1.00000000000000))) (_ bv271 32) (fp.neg ((_ to_fp 11 53) RNE 0.99984769515639))) (_ bv272 32) (fp.neg ((_ to_fp 11 53) RNE 0.99939082701910))) (_ bv273 32) (fp.neg ((_ to_fp 11 53) RNE 0.99862953475457))) (_ bv274 32) (fp.neg ((_ to_fp 11 53) RNE 0.99756405025982))) (_ bv275 32) (fp.neg ((_ to_fp 11 53) RNE 0.99619469809175))) (_ bv276 32) (fp.neg ((_ to_fp 11 53) RNE 0.99452189536827))) (_ bv277 32) (fp.neg ((_ to_fp 11 53) RNE 0.99254615164132))) (_ bv278 32) (fp.neg ((_ to_fp 11 53) RNE 0.99026806874157))) (_ bv279 32) (fp.neg ((_ to_fp 11 53) RNE 0.98768834059514))) (_ bv280 32) (fp.neg ((_ to_fp 11 53) RNE 0.98480775301221))) (_ bv281 32) (fp.neg ((_ to_fp 11 53) RNE 0.98162718344766))) (_ bv282 32) (fp.neg ((_ to_fp 11 53) RNE 0.97814760073381))) (_ bv283 32) (fp.neg ((_ to_fp 11 53) RNE 0.97437006478524))) (_ bv284 32) (fp.neg ((_ to_fp 11 53) RNE 0.97029572627600))) (_ bv285 32) (fp.neg ((_ to_fp 11 53) RNE 0.96592582628907))) (_ bv286 32) (fp.neg ((_ to_fp 11 53) RNE 0.96126169593832))) (_ bv287 32) (fp.neg ((_ to_fp 11 53) RNE 0.95630475596304))) (_ bv288 32) (fp.neg ((_ to_fp 11 53) RNE 0.95105651629515))) (_ bv289 32) (fp.neg ((_ to_fp 11 53) RNE 0.94551857559932))) (_ bv290 32) (fp.neg ((_ to_fp 11 53) RNE 0.93969262078591))) (_ bv291 32) (fp.neg ((_ to_fp 11 53) RNE 0.93358042649720))) (_ bv292 32) (fp.neg ((_ to_fp 11 53) RNE 0.92718385456679))) (_ bv293 32) (fp.neg ((_ to_fp 11 53) RNE 0.92050485345244))) (_ bv294 32) (fp.neg ((_ to_fp 11 53) RNE 0.91354545764260))) (_ bv295 32) (fp.neg ((_ to_fp 11 53) RNE 0.90630778703665))) (_ bv296 32) (fp.neg ((_ to_fp 11 53) RNE 0.89879404629917))) (_ bv297 32) (fp.neg ((_ to_fp 11 53) RNE 0.89100652418837))) (_ bv298 32) (fp.neg ((_ to_fp 11 53) RNE 0.88294759285893))) (_ bv299 32) (fp.neg ((_ to_fp 11 53) RNE 0.87461970713940))) (_ bv300 32) (fp.neg ((_ to_fp 11 53) RNE 0.86602540378444))) (_ bv301 32) (fp.neg ((_ to_fp 11 53) RNE 0.85716730070211))) (_ bv302 32) (fp.neg ((_ to_fp 11 53) RNE 0.84804809615643))) (_ bv303 32) (fp.neg ((_ to_fp 11 53) RNE 0.83867056794542))) (_ bv304 32) (fp.neg ((_ to_fp 11 53) RNE 0.82903757255504))) (_ bv305 32) (fp.neg ((_ to_fp 11 53) RNE 0.81915204428899))) (_ bv306 32) (fp.neg ((_ to_fp 11 53) RNE 0.80901699437495))) (_ bv307 32) (fp.neg ((_ to_fp 11 53) RNE 0.79863551004729))) (_ bv308 32) (fp.neg ((_ to_fp 11 53) RNE 0.78801075360672))) (_ bv309 32) (fp.neg ((_ to_fp 11 53) RNE 0.77714596145697))) (_ bv310 32) (fp.neg ((_ to_fp 11 53) RNE 0.76604444311898))) (_ bv311 32) (fp.neg ((_ to_fp 11 53) RNE 0.75470958022277))) (_ bv312 32) (fp.neg ((_ to_fp 11 53) RNE 0.74314482547739))) (_ bv313 32) (fp.neg ((_ to_fp 11 53) RNE 0.73135370161917))) (_ bv314 32) (fp.neg ((_ to_fp 11 53) RNE 0.71933980033865))) (_ bv315 32) (fp.neg ((_ to_fp 11 53) RNE 0.70710678118655))) (_ bv316 32) (fp.neg ((_ to_fp 11 53) RNE 0.69465837045900))) (_ bv317 32) (fp.neg ((_ to_fp 11 53) RNE 0.68199836006250))) (_ bv318 32) (fp.neg ((_ to_fp 11 53) RNE 0.66913060635886))) (_ bv319 32) (fp.neg ((_ to_fp 11 53) RNE 0.65605902899051))) (_ bv320 32) (fp.neg ((_ to_fp 11 53) RNE 0.64278760968654))) (_ bv321 32) (fp.neg ((_ to_fp 11 53) RNE 0.62932039104984))) (_ bv322 32) (fp.neg ((_ to_fp 11 53) RNE 0.61566147532566))) (_ bv323 32) (fp.neg ((_ to_fp 11 53) RNE 0.60181502315205))) (_ bv324 32) (fp.neg ((_ to_fp 11 53) RNE 0.58778525229247))) (_ bv325 32) (fp.neg ((_ to_fp 11 53) RNE 0.57357643635105))) (_ bv326 32) (fp.neg ((_ to_fp 11 53) RNE 0.55919290347075))) (_ bv327 32) (fp.neg ((_ to_fp 11 53) RNE 0.54463903501503))) (_ bv328 32) (fp.neg ((_ to_fp 11 53) RNE 0.52991926423321))) (_ bv329 32) (fp.neg ((_ to_fp 11 53) RNE 0.51503807491005))) (_ bv330 32) (fp.neg ((_ to_fp 11 53) RNE 0.50000000000000))) (_ bv331 32) (fp.neg ((_ to_fp 11 53) RNE 0.48480962024634))) (_ bv332 32) (fp.neg ((_ to_fp 11 53) RNE 0.46947156278589))) (_ bv333 32) (fp.neg ((_ to_fp 11 53) RNE 0.45399049973955))) (_ bv334 32) (fp.neg ((_ to_fp 11 53) RNE 0.43837114678908))) (_ bv335 32) (fp.neg ((_ to_fp 11 53) RNE 0.42261826174070))) (_ bv336 32) (fp.neg ((_ to_fp 11 53) RNE 0.40673664307580))) (_ bv337 32) (fp.neg ((_ to_fp 11 53) RNE 0.39073112848927))) (_ bv338 32) (fp.neg ((_ to_fp 11 53) RNE 0.37460659341591))) (_ bv339 32) (fp.neg ((_ to_fp 11 53) RNE 0.35836794954530))) (_ bv340 32) (fp.neg ((_ to_fp 11 53) RNE 0.34202014332567))) (_ bv341 32) (fp.neg ((_ to_fp 11 53) RNE 0.32556815445716))) (_ bv342 32) (fp.neg ((_ to_fp 11 53) RNE 0.30901699437495))) (_ bv343 32) (fp.neg ((_ to_fp 11 53) RNE 0.29237170472274))) (_ bv344 32) (fp.neg ((_ to_fp 11 53) RNE 0.27563735581700))) (_ bv345 32) (fp.neg ((_ to_fp 11 53) RNE 0.25881904510252))) (_ bv346 32) (fp.neg ((_ to_fp 11 53) RNE 0.24192189559967))) (_ bv347 32) (fp.neg ((_ to_fp 11 53) RNE 0.22495105434387))) (_ bv348 32) (fp.neg ((_ to_fp 11 53) RNE 0.20791169081776))) (_ bv349 32) (fp.neg ((_ to_fp 11 53) RNE 0.19080899537654))) (_ bv350 32) (fp.neg ((_ to_fp 11 53) RNE 0.17364817766693))) (_ bv351 32) (fp.neg ((_ to_fp 11 53) RNE 0.15643446504023))) (_ bv352 32) (fp.neg ((_ to_fp 11 53) RNE 0.13917310096007))) (_ bv353 32) (fp.neg ((_ to_fp 11 53) RNE 0.12186934340515))) (_ bv354 32) (fp.neg ((_ to_fp 11 53) RNE 0.10452846326765))) (_ bv355 32) (fp.neg ((_ to_fp 11 53) RNE 0.08715574274766))) (_ bv356 32) (fp.neg ((_ to_fp 11 53) RNE 0.06975647374413))) (_ bv357 32) (fp.neg ((_ to_fp 11 53) RNE 0.05233595624294))) (_ bv358 32) (fp.neg ((_ to_fp 11 53) RNE 0.03489949670250))) (_ bv359 32) (fp.neg ((_ to_fp 11 53) RNE 0.01745240643728))) (_ bv360 32) ((_ to_fp 11 53) RNE (_ bv0 32))) (_ bv361 32) ((_ to_fp 11 53) RNE (_ bv0 32))))))
(check-sat)
(exit)
