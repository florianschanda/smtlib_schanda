(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements 
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by 
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2017 [5,6].

This script might _not_ contain all SMT commands that are used by 
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2017-05-01, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)


[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Wen Chen, Daniel Dietsch, Marius Greitschus, 
Alexander Nutz, Betim Musa, Claus Schätzle, Christian Schilling, 
Frank Schüssele, Andreas Podelski:
Ultimate Automizer with an On-Demand Construction of Floyd-Hoare 
Automata - (Competition Contribution). TACAS (2) 2017: 394-398
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model 
Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Software Verification with Validation of Results - 
(Report on SV-COMP 2017). TACAS (2) 2017: 331-349
[6] https://sv-comp.sosy-lab.org/2017/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun v_mcos_~z~6_3_const_-1370124464 () (_ FloatingPoint 11 53))
(declare-fun v_~C6_2_const_-1185911185 () (_ FloatingPoint 11 53))
(declare-fun v_~C5_2_const_-1185912274 () (_ FloatingPoint 11 53))
(declare-fun v_~C4_2_const_-1185912339 () (_ FloatingPoint 11 53))
(declare-fun v_~C3_2_const_-1185913428 () (_ FloatingPoint 11 53))
(declare-fun v_~C2_2_const_-1185914525 () (_ FloatingPoint 11 53))
(declare-fun v_~C1_2_const_-1185899230 () (_ FloatingPoint 11 53))
(declare-fun v_mcos_~r~6_2_const_-1446751313 () (_ FloatingPoint 11 53))
(declare-fun v_mcos_~hz~6_4_const_-53211403 () (_ FloatingPoint 11 53))
(declare-fun v_mcos_~zr~6_3_const_-552628334 () (_ FloatingPoint 11 53))
(assert (let ((v_mcos_~z~6_3 v_mcos_~z~6_3_const_-1370124464) (v_~C6_2 v_~C6_2_const_-1185911185) (v_~C5_2 v_~C5_2_const_-1185912274) (v_~C4_2 v_~C4_2_const_-1185912339) (v_~C3_2 v_~C3_2_const_-1185913428) (v_~C2_2 v_~C2_2_const_-1185914525) (v_~C1_2 v_~C1_2_const_-1185899230) (v_mcos_~r~6_2 v_mcos_~r~6_2_const_-1446751313) (v_mcos_~hz~6_4 v_mcos_~hz~6_4_const_-53211403) (v_mcos_~zr~6_3 v_mcos_~zr~6_3_const_-552628334)) (and (= v_mcos_~hz~6_4 (fp.mul RNE ((_ to_fp 11 53) RNE 0.5) v_mcos_~z~6_3)) (= v_mcos_~r~6_2 (fp.mul RNE v_mcos_~z~6_3 (fp.add RNE v_~C1_2 (fp.mul RNE v_mcos_~z~6_3 (fp.add RNE v_~C2_2 (fp.mul RNE v_mcos_~z~6_3 (fp.add RNE v_~C3_2 (fp.mul RNE v_mcos_~z~6_3 (fp.add RNE v_~C4_2 (fp.mul RNE v_mcos_~z~6_3 (fp.add RNE v_~C5_2 (fp.mul RNE v_mcos_~z~6_3 v_~C6_2)))))))))))) (= v_mcos_~zr~6_3 (fp.mul RNE v_mcos_~z~6_3 v_mcos_~r~6_2)))))
(check-sat)
(exit)
