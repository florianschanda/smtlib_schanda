(set-info :smt-lib-version 2.6)
(set-logic QF_FP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements 
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by 
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2017 [5,6].

This script might _not_ contain all SMT commands that are used by 
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2017-05-01, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)


[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Wen Chen, Daniel Dietsch, Marius Greitschus, 
Alexander Nutz, Betim Musa, Claus Schätzle, Christian Schilling, 
Frank Schüssele, Andreas Podelski:
Ultimate Automizer with an On-Demand Construction of Floyd-Hoare 
Automata - (Competition Contribution). TACAS (2) 2017: 394-398
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model 
Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Software Verification with Validation of Results - 
(Report on SV-COMP 2017). TACAS (2) 2017: 331-349
[6] https://sv-comp.sosy-lab.org/2017/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat)
(declare-fun v_blur_~xm2_1_const_-323170572 () (_ FloatingPoint 11 53))
(declare-fun v_blur_~xm1_1_const_-323171701 () (_ FloatingPoint 11 53))
(declare-fun v_blur_~x_1_const_1628357871 () (_ FloatingPoint 11 53))
(declare-fun v_blur_~xnp1_1_const_-1001146964 () (_ FloatingPoint 11 53))
(declare-fun v_blur_~xnp2_1_const_-1001145875 () (_ FloatingPoint 11 53))
(declare-fun |v_blur_#res_1_const_1897861962| () (_ FloatingPoint 11 53))
(declare-fun |v_blur_#in~xm2_1_const_-393663490| () (_ FloatingPoint 11 53))
(declare-fun |v_blur_#in~xm1_1_const_-393664579| () (_ FloatingPoint 11 53))
(declare-fun |v_blur_#in~x_1_const_1023023889| () (_ FloatingPoint 11 53))
(declare-fun |v_blur_#in~xnp1_1_const_1242954618| () (_ FloatingPoint 11 53))
(declare-fun |v_blur_#in~xnp2_1_const_1242955707| () (_ FloatingPoint 11 53))
(assert (let ((v_blur_~xm2_1 v_blur_~xm2_1_const_-323170572) (v_blur_~xm1_1 v_blur_~xm1_1_const_-323171701) (v_blur_~x_1 v_blur_~x_1_const_1628357871) (v_blur_~xnp1_1 v_blur_~xnp1_1_const_-1001146964) (v_blur_~xnp2_1 v_blur_~xnp2_1_const_-1001145875) (|v_blur_#res_1| |v_blur_#res_1_const_1897861962|) (|v_blur_#in~xm2_1| |v_blur_#in~xm2_1_const_-393663490|) (|v_blur_#in~xm1_1| |v_blur_#in~xm1_1_const_-393664579|) (|v_blur_#in~x_1| |v_blur_#in~x_1_const_1023023889|) (|v_blur_#in~xnp1_1| |v_blur_#in~xnp1_1_const_1242954618|) (|v_blur_#in~xnp2_1| |v_blur_#in~xnp2_1_const_1242955707|)) (and (= v_blur_~xm2_1 |v_blur_#in~xm2_1|) (= v_blur_~xm1_1 |v_blur_#in~xm1_1|) (= v_blur_~x_1 |v_blur_#in~x_1|) (= v_blur_~xnp1_1 |v_blur_#in~xnp1_1|) (= v_blur_~xnp2_1 |v_blur_#in~xnp2_1|) (= |v_blur_#res_1| (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE ((_ to_fp 11 53) RNE 0.0544) v_blur_~xm2_1) (fp.mul RNE ((_ to_fp 11 53) RNE 0.244) v_blur_~xm1_1)) (fp.mul RNE ((_ to_fp 11 53) RNE 0.403) v_blur_~x_1)) (fp.mul RNE ((_ to_fp 11 53) RNE 0.244) v_blur_~xnp1_1)) (fp.mul RNE ((_ to_fp 11 53) RNE 0.0544) v_blur_~xnp2_1))))))
(check-sat)
(exit)
