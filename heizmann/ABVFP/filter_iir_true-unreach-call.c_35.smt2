(set-info :smt-lib-version 2.6)
(set-logic ABVFP)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements 
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by 
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2017 [5,6].

This script might _not_ contain all SMT commands that are used by 
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2017-05-01, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)


[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Wen Chen, Daniel Dietsch, Marius Greitschus, 
Alexander Nutz, Betim Musa, Claus Schätzle, Christian Schilling, 
Frank Schüssele, Andreas Podelski:
Ultimate Automizer with an On-Demand Construction of Floyd-Hoare 
Automata - (Competition Contribution). TACAS (2) 2017: 394-398
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model 
Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Software Verification with Validation of Results - 
(Report on SV-COMP 2017). TACAS (2) 2017: 331-349
[6] https://sv-comp.sosy-lab.org/2017/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun v_~D2_10_const_-2106694534 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(declare-fun |v_#memory_int_16_const_-1292263460| () (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 8))))
(declare-fun |v_#memory_int_17_const_-1292263457| () (Array (_ BitVec 32) (Array (_ BitVec 32) (_ BitVec 8))))
(declare-fun v_iir4_~y.base_2_const_1757302040 () (_ BitVec 32))
(declare-fun v_iir4_~t2~6_3_const_-1342703968 () (_ FloatingPoint 11 53))
(declare-fun v_iir4_~y.offset_2_const_925300638 () (_ BitVec 32))
(declare-fun v_~A2_5_const_-684433859 () (Array (_ BitVec 32) (_ FloatingPoint 11 53)))
(assert (let ((v_~D2_10 v_~D2_10_const_-2106694534) (|v_#memory_int_16| |v_#memory_int_16_const_-1292263460|) (|v_#memory_int_17| |v_#memory_int_17_const_-1292263457|) (v_iir4_~y.base_2 v_iir4_~y.base_2_const_1757302040) (v_iir4_~t2~6_3 v_iir4_~t2~6_3_const_-1342703968) (v_iir4_~y.offset_2 v_iir4_~y.offset_2_const_925300638) (v_~A2_5 v_~A2_5_const_-684433859)) (exists ((|q#valueAsBitvector| (_ BitVec 64))) (and (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) v_iir4_~y.offset_2 ((_ extract 7 0) |q#valueAsBitvector|)))) (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) (bvadd v_iir4_~y.offset_2 (_ bv1 32)) ((_ extract 15 8) |q#valueAsBitvector|)))) (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) (bvadd v_iir4_~y.offset_2 (_ bv2 32)) ((_ extract 23 16) |q#valueAsBitvector|)))) (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) (bvadd v_iir4_~y.offset_2 (_ bv3 32)) ((_ extract 31 24) |q#valueAsBitvector|)))) (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) (bvadd v_iir4_~y.offset_2 (_ bv4 32)) ((_ extract 39 32) |q#valueAsBitvector|)))) (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) (bvadd v_iir4_~y.offset_2 (_ bv5 32)) ((_ extract 47 40) |q#valueAsBitvector|)))) (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) (bvadd v_iir4_~y.offset_2 (_ bv6 32)) ((_ extract 55 48) |q#valueAsBitvector|)))) (= |v_#memory_int_16| (store |v_#memory_int_17| v_iir4_~y.base_2 (store (select |v_#memory_int_17| v_iir4_~y.base_2) (bvadd v_iir4_~y.offset_2 (_ bv7 32)) ((_ extract 63 56) |q#valueAsBitvector|)))) (= (fp ((_ extract 63 63) |q#valueAsBitvector|) ((_ extract 62 52) |q#valueAsBitvector|) ((_ extract 51 0) |q#valueAsBitvector|)) (fp.add RNE (fp.sub RNE (fp.mul RNE (select v_~A2_5 (_ bv0 32)) v_iir4_~t2~6_3) (fp.mul RNE (select v_~A2_5 (_ bv1 32)) (select v_~D2_10 (_ bv0 32)))) (fp.mul RNE (select v_~A2_5 (_ bv2 32)) (select v_~D2_10 (_ bv1 32)))))))))
(check-sat)
(exit)
