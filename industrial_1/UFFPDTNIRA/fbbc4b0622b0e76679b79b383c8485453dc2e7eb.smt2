(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFFPDTNIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(define-fun spoon_1 ((kitten_1 Float32)) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_2 (potato_2 potato_2) Bool)
(declare-const cat_3 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_4 ((kitten_2 potato_6)) Int (get_potato_6_a kitten_2))
(define-fun spoon_5 ((kitten_3 potato_7)) Bool (get_potato_7_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_8)) Real (get_potato_8_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_9)) potato_2 (get_potato_9_a kitten_5))
(declare-fun spoon_8 (Int) Int)
(define-fun spoon_9 ((kitten_6 Float32)) Bool (and (fp.isInfinite kitten_6) (fp.isPositive kitten_6)))
(define-fun spoon_10 ((kitten_7 Float32)) Bool (and (fp.isInfinite kitten_7) (fp.isNegative kitten_7)))
(define-fun spoon_11 ((kitten_8 Float32)) Bool (and (fp.isZero kitten_8) (fp.isPositive kitten_8)))
(define-fun spoon_12 ((kitten_9 Float32)) Bool (and (fp.isZero kitten_9) (fp.isNegative kitten_9)))
(declare-const cat_13 Int)
(define-fun spoon_14 ((kitten_10 Int)) Bool (and (<= (- cat_13) kitten_10) (<= kitten_10 cat_13)))
(define-fun spoon_15 ((kitten_11 Int)) Bool (and (<= (- 16777216) kitten_11) (<= kitten_11 16777216)))
(define-fun spoon_16 ((kitten_12 Float32) (kitten_13 Float32)) Bool (or (and (fp.isPositive kitten_12) (fp.isPositive kitten_13)) (and (fp.isNegative kitten_12) (fp.isNegative kitten_13))))
(define-fun spoon_17 ((kitten_14 Float32) (kitten_15 Float32)) Bool (or (and (fp.isPositive kitten_14) (fp.isNegative kitten_15)) (and (fp.isNegative kitten_14) (fp.isPositive kitten_15))))
(define-fun spoon_18 ((kitten_16 Float32) (kitten_17 Float32) (kitten_18 Float32)) Bool (and (=> (spoon_16 kitten_17 kitten_18) (fp.isPositive kitten_16)) (=> (spoon_17 kitten_17 kitten_18) (fp.isNegative kitten_16))))
(define-fun spoon_19 ((kitten_19 Real)) Real (* kitten_19 kitten_19))
(declare-fun spoon_20 (Real) Real)
(define-fun spoon_21 ((kitten_20 Float32) (kitten_21 Real)) Bool (or (and (fp.isPositive kitten_20) (< 0.0 kitten_21)) (and (fp.isNegative kitten_20) (< kitten_21 0.0))))
(declare-fun spoon_22 (Float32) Bool)
(declare-datatypes () ((potato_10 (mk_potato_10 (get_potato_10_a Float32)))))
(declare-sort potato_11 0)
(declare-fun spoon_23 (potato_11 potato_11) Bool)
(declare-fun spoon_24 (Float32) potato_5)
(declare-fun spoon_25 (potato_5) Bool)
(declare-fun spoon_26 (potato_5) Float32)
(declare-const cat_27 potato_11)
(declare-datatypes () ((potato_12 (mk_potato_12 (get_potato_12_a potato_11)))))
(define-fun spoon_28 ((kitten_22 potato_12)) potato_11 (get_potato_12_a kitten_22))
(declare-sort potato_13 0)
(define-fun spoon_29 ((kitten_23 Float32)) Bool (and (spoon_1 kitten_23) (and (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) kitten_23) (fp.leq kitten_23 (fp #b0 #b10001011 #b00000000000000000000000)))))
(declare-fun spoon_30 (potato_13 potato_13) Bool)
(declare-fun spoon_31 (Float32) potato_5)
(declare-fun spoon_32 (potato_5) Bool)
(declare-fun spoon_33 (potato_5) Float32)
(declare-const cat_34 potato_13)
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_13)))))
(define-fun spoon_35 ((kitten_24 potato_14)) potato_13 (get_potato_14_a kitten_24))
(declare-fun spoon_36 (potato_13) Float32)
(declare-fun spoon_37 (Float32) potato_13)
(assert (forall ((kitten_25 potato_13)) (! (= (spoon_37 (spoon_36 kitten_25)) kitten_25) :pattern ((spoon_36 kitten_25)))))
(assert (forall ((kitten_26 potato_13)) (! (spoon_29 (spoon_36 kitten_26)) :pattern ((spoon_36 kitten_26)))))
(assert (forall ((kitten_27 Float32)) (! (=> (spoon_29 kitten_27) (= (spoon_36 (spoon_37 kitten_27)) kitten_27)) :pattern ((spoon_36 (spoon_37 kitten_27))))))
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_13) (get_potato_15_b potato_13)))))
(declare-datatypes () ((potato_16 (mk_potato_16 (get_potato_16_a potato_15)))))
(define-fun spoon_38 ((kitten_28 potato_16)) potato_15 (get_potato_16_a kitten_28))
(declare-datatypes () ((potato_17 (mk_potato_17 (get_potato_17_a potato_15)))))
(define-fun spoon_39 ((kitten_29 potato_17)) potato_15 (get_potato_17_a kitten_29))
(define-fun spoon_40 ((kitten_30 potato_17) (kitten_31 potato_17)) Bool (ite (and (= (spoon_36 (get_potato_15_a (get_potato_17_a kitten_30))) (spoon_36 (get_potato_15_a (get_potato_17_a kitten_31)))) (= (spoon_36 (get_potato_15_b (get_potato_17_a kitten_30))) (spoon_36 (get_potato_15_b (get_potato_17_a kitten_31))))) true false))
(declare-const cat_41 Int)
(declare-fun spoon_42 (potato_17) Int)
(declare-const cat_43 Int)
(declare-fun spoon_44 (potato_17) Int)
(assert (<= 0 cat_41))
(assert (forall ((kitten_32 potato_17)) (<= 0 (spoon_42 kitten_32))))
(assert (<= 0 cat_43))
(assert (forall ((kitten_33 potato_17)) (<= 0 (spoon_44 kitten_33))))
(declare-const cat_45 Int)
(declare-const cat_46 Int)
(declare-const cat_47 Int)
(assert (<= 0 cat_45))
(assert (< cat_45 cat_46))
(assert (<= 0 cat_47))
(declare-const cat_48 Int)
(declare-const cat_49 Int)
(declare-const cat_50 Int)
(assert (<= 0 cat_48))
(assert (< cat_48 cat_49))
(assert (<= 0 cat_50))
(declare-fun spoon_51 (potato_17 potato_17) Bool)
(declare-const cat_52 potato_17)
(declare-datatypes () ((potato_18 (mk_potato_18 (get_potato_18_a potato_17)))))
(define-fun spoon_53 ((kitten_34 potato_18)) potato_17 (get_potato_18_a kitten_34))
(declare-sort potato_19 0)
(define-fun spoon_54 ((kitten_35 Float32)) Bool (and (spoon_1 kitten_35) (and (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) kitten_35) (fp.leq kitten_35 (fp #b0 #b10001100 #b01101010100000000000000)))))
(declare-fun spoon_55 (potato_19 potato_19) Bool)
(declare-fun spoon_56 (Float32) potato_5)
(declare-fun spoon_57 (potato_5) Bool)
(declare-fun spoon_58 (potato_5) Float32)
(declare-const cat_59 potato_19)
(declare-datatypes () ((potato_20 (mk_potato_20 (get_potato_20_a potato_19)))))
(define-fun spoon_60 ((kitten_36 potato_20)) potato_19 (get_potato_20_a kitten_36))
(define-fun spoon_61 ((kitten_37 Float32) (kitten_38 Bool) (kitten_39 Bool) (kitten_40 Bool)) Bool (=> (or (= kitten_38 true) (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) (fp #b0 #b10001100 #b01101010100000000000000))) (spoon_54 kitten_37)))
(declare-sort potato_21 0)
(define-fun spoon_62 ((kitten_41 Float32)) Bool (and (spoon_1 kitten_41) (and (fp.leq (fp.neg (fp #b0 #b10001100 #b00000000000000000000000)) kitten_41) (fp.leq kitten_41 (fp #b0 #b10001100 #b00000000000000000000000)))))
(declare-fun spoon_63 (potato_21 potato_21) Bool)
(declare-fun spoon_64 (Float32) potato_5)
(declare-fun spoon_65 (potato_5) Bool)
(declare-fun spoon_66 (potato_5) Float32)
(declare-const cat_67 potato_21)
(declare-datatypes () ((potato_22 (mk_potato_22 (get_potato_22_a potato_21)))))
(define-fun spoon_68 ((kitten_42 potato_22)) potato_21 (get_potato_22_a kitten_42))
(declare-fun spoon_69 (potato_21) Float32)
(declare-fun spoon_70 (Float32) potato_21)
(assert (forall ((kitten_43 potato_21)) (! (= (spoon_70 (spoon_69 kitten_43)) kitten_43) :pattern ((spoon_69 kitten_43)))))
(assert (forall ((kitten_44 potato_21)) (! (spoon_62 (spoon_69 kitten_44)) :pattern ((spoon_69 kitten_44)))))
(assert (forall ((kitten_45 Float32)) (! (=> (spoon_62 kitten_45) (= (spoon_69 (spoon_70 kitten_45)) kitten_45)) :pattern ((spoon_69 (spoon_70 kitten_45))))))
(declare-sort potato_23 0)
(define-fun spoon_71 ((kitten_46 Float32)) Bool (and (spoon_1 kitten_46) (and (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) kitten_46) (fp.leq kitten_46 (fp #b0 #b01111111 #b00000000000000000000000)))))
(declare-fun spoon_72 (potato_23 potato_23) Bool)
(declare-fun spoon_73 (Float32) potato_5)
(declare-fun spoon_74 (potato_5) Bool)
(declare-fun spoon_75 (potato_5) Float32)
(declare-const cat_76 potato_23)
(declare-datatypes () ((potato_24 (mk_potato_24 (get_potato_24_a potato_23)))))
(define-fun spoon_77 ((kitten_47 potato_24)) potato_23 (get_potato_24_a kitten_47))
(define-fun spoon_78 ((kitten_48 Float32) (kitten_49 Bool) (kitten_50 Bool) (kitten_51 Bool)) Bool (=> (or (= kitten_49 true) (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) (fp #b0 #b01111111 #b00000000000000000000000))) (spoon_71 kitten_48)))
(declare-fun spoon_79 (potato_17 potato_17) Float32)
(declare-fun spoon_80 (Float32 potato_17 potato_17) Bool)
(assert (forall ((kitten_52 potato_17) (kitten_53 potato_17)) (! (spoon_61 (spoon_79 kitten_52 kitten_53) true false true) :pattern ((spoon_79 kitten_52 kitten_53)))))
(declare-const cat_81 potato_17)
(declare-const cat_82 Int)
(declare-const cat_83 potato_17)
(declare-const cat_84 Int)
(declare-const cat_85 potato_17)
(declare-const cat_86 Int)
(declare-const cat_87 potato_17)
(declare-const cat_88 Int)
(declare-const cat_89 Int)
(declare-const cat_90 Int)
(declare-const cat_91 Int)
(declare-sort potato_25 0)
(define-fun spoon_92 ((kitten_54 Float32)) Bool (and (spoon_1 kitten_54) (and (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) kitten_54) (fp.leq kitten_54 (fp #b0 #b10011010 #b00000000000000000000000)))))
(declare-fun spoon_93 (potato_25 potato_25) Bool)
(declare-fun spoon_94 (Float32) potato_5)
(declare-fun spoon_95 (potato_5) Bool)
(declare-fun spoon_96 (potato_5) Float32)
(declare-const cat_97 potato_25)
(declare-datatypes () ((potato_26 (mk_potato_26 (get_potato_26_a potato_25)))))
(define-fun spoon_98 ((kitten_55 potato_26)) potato_25 (get_potato_26_a kitten_55))
(define-fun spoon_99 ((kitten_56 Float32) (kitten_57 Bool) (kitten_58 Bool) (kitten_59 Bool)) Bool (=> (or (= kitten_57 true) (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000))) (spoon_92 kitten_56)))
(declare-sort potato_27 0)
(define-fun spoon_100 ((kitten_60 Float32)) Bool (and (spoon_1 kitten_60) (and (fp.leq (fp.neg (fp #b0 #b10110110 #b00000000000000000000000)) kitten_60) (fp.leq kitten_60 (fp #b0 #b10110110 #b00000000000000000000000)))))
(declare-fun spoon_101 (potato_27 potato_27) Bool)
(declare-fun spoon_102 (Float32) potato_5)
(declare-fun spoon_103 (potato_5) Bool)
(declare-fun spoon_104 (potato_5) Float32)
(declare-const cat_105 potato_27)
(declare-datatypes () ((potato_28 (mk_potato_28 (get_potato_28_a potato_27)))))
(define-fun spoon_106 ((kitten_61 potato_28)) potato_27 (get_potato_28_a kitten_61))
(define-fun spoon_107 ((kitten_62 Float32) (kitten_63 Bool) (kitten_64 Bool) (kitten_65 Bool)) Bool (=> (or (= kitten_63 true) (fp.leq (fp.neg (fp #b0 #b10110110 #b00000000000000000000000)) (fp #b0 #b10110110 #b00000000000000000000000))) (spoon_100 kitten_62)))
(declare-datatypes () ((potato_29 (mk_potato_29 (get_potato_29_a potato_21) (get_potato_29_b potato_21)))))
(declare-datatypes () ((potato_30 (mk_potato_30 (get_potato_30_a potato_29)))))
(define-fun spoon_108 ((kitten_66 potato_30)) potato_29 (get_potato_30_a kitten_66))
(declare-datatypes () ((potato_31 (mk_potato_31 (get_potato_31_a potato_29)))))
(define-fun spoon_109 ((kitten_67 potato_31)) potato_29 (get_potato_31_a kitten_67))
(define-fun spoon_110 ((kitten_68 potato_31) (kitten_69 potato_31)) Bool (ite (and (= (spoon_69 (get_potato_29_a (get_potato_31_a kitten_68))) (spoon_69 (get_potato_29_a (get_potato_31_a kitten_69)))) (= (spoon_69 (get_potato_29_b (get_potato_31_a kitten_68))) (spoon_69 (get_potato_29_b (get_potato_31_a kitten_69))))) true false))
(declare-const cat_111 Int)
(declare-fun spoon_112 (potato_31) Int)
(declare-const cat_113 Int)
(declare-fun spoon_114 (potato_31) Int)
(assert (<= 0 cat_111))
(assert (forall ((kitten_70 potato_31)) (<= 0 (spoon_112 kitten_70))))
(assert (<= 0 cat_113))
(assert (forall ((kitten_71 potato_31)) (<= 0 (spoon_114 kitten_71))))
(declare-const cat_115 Int)
(declare-const cat_116 Int)
(declare-const cat_117 Int)
(assert (<= 0 cat_115))
(assert (< cat_115 cat_116))
(assert (<= 0 cat_117))
(declare-const cat_118 Int)
(declare-const cat_119 Int)
(declare-const cat_120 Int)
(assert (<= 0 cat_118))
(assert (< cat_118 cat_119))
(assert (<= 0 cat_120))
(declare-fun spoon_121 (potato_31 potato_31) Bool)
(declare-const cat_122 potato_31)
(declare-datatypes () ((potato_32 (mk_potato_32 (get_potato_32_a potato_31)))))
(define-fun spoon_123 ((kitten_72 potato_32)) potato_31 (get_potato_32_a kitten_72))
(declare-fun spoon_124 (potato_31 potato_31) Float32)
(declare-fun spoon_125 (Float32 potato_31 potato_31) Bool)
(assert (forall ((kitten_73 potato_31) (kitten_74 potato_31)) (! (spoon_99 (spoon_124 kitten_73 kitten_74) true false true) :pattern ((spoon_124 kitten_73 kitten_74)))))
(assert (forall ((kitten_75 potato_31) (kitten_76 potato_31)) (! (= (spoon_124 kitten_75 kitten_76) (fp.add RNE (fp.mul RNE (spoon_69 (get_potato_29_a (get_potato_31_a kitten_75))) (spoon_69 (get_potato_29_a (get_potato_31_a kitten_76)))) (fp.mul RNE (spoon_69 (get_potato_29_b (get_potato_31_a kitten_75))) (spoon_69 (get_potato_29_b (get_potato_31_a kitten_76)))))) :pattern ((spoon_124 kitten_75 kitten_76)))))
(declare-const cat_126 Int)
(declare-const cat_127 Int)
(declare-const cat_128 Int)
(declare-const cat_129 Int)
(declare-const cat_130 Int)
(declare-const cat_131 Int)
(declare-const cat_132 Int)
(declare-const cat_133 Int)
(declare-const cat_134 Int)
(declare-const cat_135 Int)
(declare-const cat_136 Int)
(declare-const cat_137 Int)
(declare-const cat_138 Int)
(declare-const cat_139 Int)
(declare-const cat_140 Int)
(define-fun spoon_141 ((kitten_77 Float32) (kitten_78 Bool) (kitten_79 Bool) (kitten_80 Bool)) Bool (=> (or (= kitten_78 true) (fp.leq (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)) (fp #b0 #b11111110 #b11111111111111111111111))) (spoon_1 kitten_77)))
(define-fun spoon_142 ((kitten_81 Float32) (kitten_82 Bool) (kitten_83 Bool) (kitten_84 Bool)) Bool (=> (or (= kitten_82 true) (fp.leq (fp.neg (fp #b0 #b10001100 #b00000000000000000000000)) (fp #b0 #b10001100 #b00000000000000000000000))) (spoon_62 kitten_81)))
(define-fun spoon_143 ((kitten_85 Float32) (kitten_86 Bool) (kitten_87 Bool) (kitten_88 Bool)) Bool (=> (or (= kitten_86 true) (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (fp #b0 #b10001011 #b00000000000000000000000))) (spoon_29 kitten_85)))
(declare-const cat_144 Float32)
(declare-const cat_145 Float32)
(declare-const cat_146 Float32)
(declare-const cat_147 potato_21)
(declare-const cat_148 potato_21)
(declare-const cat_149 potato_21)
(declare-const cat_150 potato_21)
(declare-const cat_151 potato_21)
(declare-const cat_152 potato_21)
(declare-const cat_153 Float32)
(declare-const cat_154 Float32)
(declare-const cat_155 Float32)
(declare-const cat_156 Float32)
(declare-const cat_157 Float32)
(declare-const cat_158 Float32)
(declare-const cat_159 Float32)
(declare-const cat_160 Float32)
(declare-const cat_161 Float32)
(declare-const cat_162 Float32)
(declare-const cat_163 potato_21)
(declare-const cat_164 potato_21)
(declare-const cat_165 potato_29)
(declare-const cat_166 potato_31)
(declare-const cat_167 potato_21)
(declare-const cat_168 potato_21)
(declare-const cat_169 potato_29)
(declare-const cat_170 potato_31)
(declare-const cat_171 potato_21)
(declare-const cat_172 potato_21)
(declare-const cat_173 potato_29)
(declare-const cat_174 potato_31)
(declare-const cat_175 Float32)
(declare-const cat_176 Float32)
(declare-const cat_177 Float32)
(declare-const cat_178 Float32)
(declare-const cat_179 Float32)
(declare-const cat_180 Float32)
(declare-const cat_181 Float32)
(declare-const cat_182 potato_30)
(declare-const cat_183 potato_29)
(declare-const cat_184 potato_30)
(declare-const cat_185 potato_29)
(declare-const cat_186 potato_30)
(declare-const cat_187 potato_29)
(declare-const cat_188 potato_10)
(declare-const cat_189 Float32)
(declare-const cat_190 potato_10)
(declare-const cat_191 Float32)
(declare-const cat_192 potato_10)
(declare-const cat_193 Float32)
(declare-const cat_194 potato_10)
(declare-const cat_195 Float32)
(declare-const cat_196 potato_10)
(declare-const cat_197 Float32)
(declare-const cat_198 potato_10)
(declare-const cat_199 Float32)
(declare-const cat_200 potato_10)
(declare-const cat_201 Float32)
(declare-const cat_202 potato_10)
(declare-const cat_203 Float32)
(declare-const cat_204 potato_10)
(declare-const cat_205 Float32)
(declare-const cat_206 potato_10)
(declare-const cat_207 Float32)
(declare-const cat_208 potato_10)
(declare-const cat_209 Float32)
(declare-const cat_210 potato_10)
(declare-const cat_211 Float32)
(declare-const cat_212 potato_10)
(declare-const cat_213 Float32)
(declare-const cat_214 potato_10)
(declare-const cat_215 Float32)
(declare-const cat_216 potato_10)
(declare-const cat_217 Float32)
(declare-const cat_218 potato_10)
(declare-const cat_219 Float32)
(declare-const cat_220 potato_10)
(declare-const cat_221 Float32)
(declare-const cat_222 potato_10)
(declare-const cat_223 Float32)
(declare-const cat_224 potato_10)
(declare-const cat_225 Float32)
(declare-const cat_226 potato_10)
(declare-const cat_227 Float32)
(declare-const cat_228 potato_10)
(declare-const cat_229 Float32)
(declare-const cat_230 potato_10)
(declare-const cat_231 Float32)
(declare-const cat_232 potato_10)
(declare-const cat_233 Float32)
(declare-const cat_234 potato_10)
(declare-const cat_235 Float32)
(declare-const cat_236 potato_10)
(declare-const cat_237 Float32)
(declare-const cat_238 potato_10)
(declare-const cat_239 Float32)
(declare-const cat_240 potato_10)
(declare-const cat_241 Float32)
(declare-const cat_242 potato_10)
(declare-const cat_243 Float32)
(declare-const cat_244 potato_10)
(declare-const cat_245 Float32)
(declare-const cat_246 potato_10)
(declare-const cat_247 Float32)
(declare-const cat_248 potato_10)
(declare-const cat_249 Float32)
(declare-const cat_250 potato_10)
(declare-const cat_251 Float32)
(define-fun spoon_252 () potato_10 (mk_potato_10 cat_160))
(define-fun spoon_253 () potato_10 (mk_potato_10 cat_158))
(define-fun spoon_254 () potato_10 (mk_potato_10 cat_144))
(assert (=> (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) (fp #b0 #b01111111 #b00000000000000000000000)) (spoon_71 cat_144)))
(assert (=> (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) (fp #b0 #b01111111 #b00000000000000000000000)) (spoon_71 cat_145)))
(assert (=> (fp.leq (fp #b0 #b00000000 #b00000000000000000000000) (fp #b0 #b10001100 #b01101010100000000000000)) (spoon_54 cat_146)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000)) (spoon_92 cat_153)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000)) (spoon_92 cat_154)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000)) (spoon_92 cat_155)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000)) (spoon_92 cat_156)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000)) (spoon_92 cat_157)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10110110 #b00000000000000000000000)) (fp #b0 #b10110110 #b00000000000000000000000)) (spoon_100 cat_158)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10110110 #b00000000000000000000000)) (fp #b0 #b10110110 #b00000000000000000000000)) (spoon_100 cat_159)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10110110 #b00000000000000000000000)) (fp #b0 #b10110110 #b00000000000000000000000)) (spoon_100 cat_160)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10110110 #b00000000000000000000000)) (fp #b0 #b10110110 #b00000000000000000000000)) (spoon_100 cat_161)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10110110 #b00000000000000000000000)) (fp #b0 #b10110110 #b00000000000000000000000)) (spoon_100 cat_162)))
(assert (= (spoon_69 cat_163) (fp.sub RNE (spoon_36 (get_potato_15_b (get_potato_17_a cat_83))) (spoon_36 (get_potato_15_b (get_potato_17_a cat_81))))))
(assert (= (spoon_69 cat_164) (fp.sub RNE (spoon_36 (get_potato_15_a (get_potato_17_a cat_83))) (spoon_36 (get_potato_15_a (get_potato_17_a cat_81))))))
(assert (= cat_165 (mk_potato_29 cat_164 cat_163)))
(assert (= cat_166 (mk_potato_31 cat_165)))
(assert (= cat_182 (mk_potato_30 (mk_potato_29 cat_147 cat_148))))
(assert (= cat_183 (get_potato_31_a cat_166)))
(assert (= (spoon_69 cat_167) (fp.sub RNE (spoon_36 (get_potato_15_b (get_potato_17_a cat_87))) (spoon_36 (get_potato_15_b (get_potato_17_a cat_85))))))
(assert (= (spoon_69 cat_168) (fp.sub RNE (spoon_36 (get_potato_15_a (get_potato_17_a cat_87))) (spoon_36 (get_potato_15_a (get_potato_17_a cat_85))))))
(assert (= cat_169 (mk_potato_29 cat_168 cat_167)))
(assert (= cat_170 (mk_potato_31 cat_169)))
(assert (= cat_184 (mk_potato_30 (mk_potato_29 cat_149 cat_150))))
(assert (= cat_185 (get_potato_31_a cat_170)))
(assert (= (spoon_69 cat_171) (fp.sub RNE (spoon_36 (get_potato_15_b (get_potato_17_a cat_81))) (spoon_36 (get_potato_15_b (get_potato_17_a cat_85))))))
(assert (= (spoon_69 cat_172) (fp.sub RNE (spoon_36 (get_potato_15_a (get_potato_17_a cat_81))) (spoon_36 (get_potato_15_a (get_potato_17_a cat_85))))))
(assert (= cat_173 (mk_potato_29 cat_172 cat_171)))
(assert (= cat_174 (mk_potato_31 cat_173)))
(assert (= cat_186 (mk_potato_30 (mk_potato_29 cat_151 cat_152))))
(assert (= cat_187 (get_potato_31_a cat_174)))
(assert (and (= cat_175 (spoon_124 (mk_potato_31 cat_183) (mk_potato_31 cat_183))) (and (spoon_92 cat_175) (= cat_175 (fp.add RNE (fp.mul RNE (spoon_69 (get_potato_29_a cat_183)) (spoon_69 (get_potato_29_a cat_183))) (fp.mul RNE (spoon_69 (get_potato_29_b cat_183)) (spoon_69 (get_potato_29_b cat_183))))))))
(assert (= cat_188 (mk_potato_10 cat_153)))
(assert (= cat_189 cat_175))
(assert (and (= cat_176 (spoon_124 (mk_potato_31 cat_183) (mk_potato_31 cat_185))) (and (spoon_92 cat_176) (= cat_176 (fp.add RNE (fp.mul RNE (spoon_69 (get_potato_29_a cat_183)) (spoon_69 (get_potato_29_a cat_185))) (fp.mul RNE (spoon_69 (get_potato_29_b cat_183)) (spoon_69 (get_potato_29_b cat_185))))))))
(assert (= cat_190 (mk_potato_10 cat_154)))
(assert (= cat_191 cat_176))
(assert (and (= cat_177 (spoon_124 (mk_potato_31 cat_185) (mk_potato_31 cat_185))) (and (spoon_92 cat_177) (= cat_177 (fp.add RNE (fp.mul RNE (spoon_69 (get_potato_29_a cat_185)) (spoon_69 (get_potato_29_a cat_185))) (fp.mul RNE (spoon_69 (get_potato_29_b cat_185)) (spoon_69 (get_potato_29_b cat_185))))))))
(assert (= cat_192 (mk_potato_10 cat_155)))
(assert (= cat_193 cat_177))
(assert (and (= cat_178 (spoon_124 (mk_potato_31 cat_183) (mk_potato_31 cat_187))) (and (spoon_92 cat_178) (= cat_178 (fp.add RNE (fp.mul RNE (spoon_69 (get_potato_29_a cat_183)) (spoon_69 (get_potato_29_a cat_187))) (fp.mul RNE (spoon_69 (get_potato_29_b cat_183)) (spoon_69 (get_potato_29_b cat_187))))))))
(assert (= cat_194 (mk_potato_10 cat_156)))
(assert (= cat_195 cat_178))
(assert (and (= cat_179 (spoon_124 (mk_potato_31 cat_185) (mk_potato_31 cat_187))) (and (spoon_92 cat_179) (= cat_179 (fp.add RNE (fp.mul RNE (spoon_69 (get_potato_29_a cat_185)) (spoon_69 (get_potato_29_a cat_187))) (fp.mul RNE (spoon_69 (get_potato_29_b cat_185)) (spoon_69 (get_potato_29_b cat_187))))))))
(assert (= cat_196 (mk_potato_10 cat_157)))
(assert (= cat_197 cat_179))
(assert (= cat_198 (mk_potato_10 cat_162)))
(assert (= cat_199 (fp.sub RNE (fp.mul RNE cat_189 cat_193) (fp.mul RNE cat_191 cat_191))))
(assert (= cat_200 (mk_potato_10 cat_159)))
(assert (= cat_201 cat_199))
(assert (= cat_202 (mk_potato_10 cat_161)))
(assert (= cat_203 cat_199))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_204 spoon_253)))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_205 (fp #b0 #b00000000 #b00000000000000000000000))))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_206 (mk_potato_10 cat_201))))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_207 (fp #b0 #b01111111 #b00000000000000000000000))))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_208 spoon_252)))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_209 cat_197)))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_210 (mk_potato_10 cat_203))))
(assert (=> (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_211 cat_193)))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_212 spoon_253)))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_213 (fp.sub RNE (fp.mul RNE cat_191 cat_197) (fp.mul RNE cat_193 cat_195)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_214 spoon_252)))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_215 (fp.sub RNE (fp.mul RNE cat_189 cat_197) (fp.mul RNE cat_191 cat_195)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_216 (mk_potato_10 cat_213)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_217 (fp #b0 #b00000000 #b00000000000000000000000)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_218 (mk_potato_10 cat_215)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_219 cat_197))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_220 (mk_potato_10 cat_203)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_221 cat_193))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_201 cat_213) (= cat_222 (mk_potato_10 cat_213))))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_201 cat_213) (= cat_223 cat_201)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_201 cat_213) (= cat_224 (mk_potato_10 cat_215))))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_201 cat_213) (= cat_225 (fp.add RNE cat_197 cat_191))))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_201 cat_213) (= cat_226 (mk_potato_10 cat_203))))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_201 cat_213) (= cat_227 cat_193)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_201 cat_213)) (= cat_227 cat_203)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_201 cat_213)) (= cat_225 cat_215)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_201 cat_213)) (= cat_223 cat_213)))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_221 cat_227))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_219 cat_225))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (=> (not (fp.lt cat_213 (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_217 cat_223))))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_211 cat_221)))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_209 cat_219)))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_207 cat_201)))
(assert (=> (not (fp.lt cat_199 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_205 cat_217)))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_228 (mk_potato_10 cat_209))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_229 (fp #b0 #b00000000 #b00000000000000000000000))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_230 (mk_potato_10 cat_205)))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_231 (fp #b0 #b00000000 #b00000000000000000000000)))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_237 cat_207))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_189 (fp.neg cat_195)) (= cat_232 (mk_potato_10 cat_205))))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_189 (fp.neg cat_195)) (= cat_233 cat_207)))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_189 (fp.neg cat_195)) (= cat_237 cat_207)))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.neg cat_195))) (= cat_234 (mk_potato_10 cat_205))))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.neg cat_195))) (= cat_235 (fp.neg cat_195))))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.neg cat_195))) (= cat_236 (mk_potato_10 cat_207))))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.neg cat_195))) (= cat_237 cat_189)))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.neg cat_195))) (= cat_233 cat_235)))))
(assert (=> (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000)) (=> (not (fp.lt (fp.neg cat_195) (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_231 cat_233))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (= cat_238 (mk_potato_10 cat_209)))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (= cat_239 cat_211))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_240 (mk_potato_10 cat_205))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_241 (fp #b0 #b00000000 #b00000000000000000000000))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000)) (= cat_247 cat_207)))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191)) (= cat_242 (mk_potato_10 cat_205)))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191)) (= cat_243 cat_207))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191)) (= cat_247 cat_207))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191))) (= cat_244 (mk_potato_10 cat_205)))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191))) (= cat_245 (fp.add RNE (fp.neg cat_195) cat_191)))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191))) (= cat_246 (mk_potato_10 cat_207)))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191))) (= cat_247 cat_189))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_189 (fp.add RNE (fp.neg cat_195) cat_191))) (= cat_243 cat_245))))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (fp.lt cat_211 cat_209) (=> (not (fp.lt (fp.add RNE (fp.neg cat_195) cat_191) (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_241 cat_243)))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_211 cat_209)) (= cat_239 cat_209))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_211 cat_209)) (= cat_247 cat_207))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (=> (not (fp.lt cat_211 cat_209)) (= cat_241 cat_205))))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_229 cat_239)))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_237 cat_247)))
(assert (=> (not (fp.lt cat_209 (fp #b0 #b00000000 #b00000000000000000000000))) (= cat_231 cat_241)))
(assert (=> (fp.lt cat_237 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_248 spoon_254)))
(assert (=> (fp.lt cat_237 (fp #b0 #b01101011 #b00001100011011110111101)) (= cat_249 (fp #b0 #b00000000 #b00000000000000000000000))))
(assert (=> (not (fp.lt cat_237 (fp #b0 #b01101011 #b00001100011011110111101))) (and (= cat_180 (fp.div RNE cat_231 cat_237)) (spoon_1 (fp.div RNE cat_231 cat_237)))))
(assert (=> (not (fp.lt cat_237 (fp #b0 #b01101011 #b00001100011011110111101))) (and (= cat_181 cat_180) (spoon_1 cat_180))))
(assert (=> (not (fp.lt cat_237 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_250 spoon_254)))
(assert (=> (not (fp.lt cat_237 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_251 cat_181)))
(assert (=> (not (fp.lt cat_237 (fp #b0 #b01101011 #b00001100011011110111101))) (= cat_249 cat_251)))
(assert (not (fp.lt cat_211 (fp #b0 #b01101011 #b00001100011011110111101))))
(assert (not (spoon_1 (fp.div RNE cat_229 cat_211))))
(check-sat)
(exit)
