;; This file has been translated by CVC4 from an earlier
;; version of SMTLIB to 2.6 using the script
;; translate_benchmarks.py in repo smtlib_schanda.

(set-info :smt-lib-version 2.6)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)
(set-logic UFFPDTNIRA)

(define-fun spoon_1 ((kitten_1 (_ FloatingPoint 8 24))) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(define-fun spoon_2 ((kitten_2 (_ FloatingPoint 8 24))) Bool (or (fp.isZero kitten_2) (and (fp.isNormal kitten_2) (= kitten_2 (fp.roundToIntegral roundNearestTiesToEven kitten_2)))))
(define-fun spoon_3 ((kitten_3 (_ FloatingPoint 11 53))) Bool (not (or (fp.isInfinite kitten_3) (fp.isNaN kitten_3))))
(define-fun spoon_4 ((kitten_4 (_ FloatingPoint 11 53))) Bool (or (fp.isZero kitten_4) (and (fp.isNormal kitten_4) (= kitten_4 (fp.roundToIntegral roundNearestTiesToEven kitten_4)))))
(declare-datatypes ((potato_1 0)) (((mk_potato_1))))

(declare-sort potato_2 0)
(declare-fun spoon_5 (potato_2 potato_2) Bool)
(declare-fun cat_6 () potato_2)
(declare-sort potato_3 0)
(declare-datatypes ((potato_4 0)) (((mk_potato_4 (get_potato_4_a potato_3)))))

(declare-sort potato_5 0)
(declare-datatypes ((potato_6 0)) (((mk_potato_6 (get_potato_6_a Int)))))

(declare-datatypes ((potato_7 0)) (((mk_potato_7 (get_potato_7_a Bool)))))

(declare-datatypes ((potato_8 0)) (((mk_potato_8 (get_potato_8_a Real)))))

(declare-datatypes ((potato_9 0)) (((mk_potato_9 (get_potato_9_a potato_2)))))

(define-fun spoon_7 ((kitten_5 potato_6)) Int (get_potato_6_a kitten_5))
(define-fun spoon_8 ((kitten_6 potato_7)) Bool (get_potato_7_a kitten_6))
(define-fun spoon_9 ((kitten_7 potato_8)) Real (get_potato_8_a kitten_7))
(define-fun spoon_10 ((kitten_8 potato_9)) potato_2 (get_potato_9_a kitten_8))
(declare-fun spoon_11 (Int) Int)
(define-fun spoon_12 ((kitten_9 (_ FloatingPoint 8 24))) Bool (and (fp.isInfinite kitten_9) (fp.isPositive kitten_9)))
(define-fun spoon_13 ((kitten_10 (_ FloatingPoint 8 24))) Bool (and (fp.isInfinite kitten_10) (fp.isNegative kitten_10)))
(define-fun spoon_14 ((kitten_11 (_ FloatingPoint 8 24))) Bool (and (fp.isZero kitten_11) (fp.isPositive kitten_11)))
(define-fun spoon_15 ((kitten_12 (_ FloatingPoint 8 24))) Bool (and (fp.isZero kitten_12) (fp.isNegative kitten_12)))
(declare-fun cat_16 () Int)
(define-fun spoon_17 ((kitten_13 Int)) Bool (and (<= (- cat_16) kitten_13) (<= kitten_13 cat_16)))
(define-fun spoon_18 ((kitten_14 Int)) Bool (and (<= (- 16777216) kitten_14) (<= kitten_14 16777216)))
(define-fun spoon_19 ((kitten_15 (_ FloatingPoint 8 24)) (kitten_16 (_ FloatingPoint 8 24))) Bool (or (and (fp.isPositive kitten_15) (fp.isPositive kitten_16)) (and (fp.isNegative kitten_15) (fp.isNegative kitten_16))))
(define-fun spoon_20 ((kitten_17 (_ FloatingPoint 8 24)) (kitten_18 (_ FloatingPoint 8 24))) Bool (or (and (fp.isPositive kitten_17) (fp.isNegative kitten_18)) (and (fp.isNegative kitten_17) (fp.isPositive kitten_18))))
(define-fun spoon_21 ((kitten_19 (_ FloatingPoint 8 24)) (kitten_20 (_ FloatingPoint 8 24)) (kitten_21 (_ FloatingPoint 8 24))) Bool (and (=> (spoon_19 kitten_20 kitten_21) (fp.isPositive kitten_19)) (=> (spoon_20 kitten_20 kitten_21) (fp.isNegative kitten_19))))
(define-fun spoon_22 ((kitten_22 Real)) Real (* kitten_22 kitten_22))
(declare-fun spoon_23 (Real) Real)
(define-fun spoon_24 ((kitten_23 (_ FloatingPoint 8 24)) (kitten_24 Real)) Bool (let ((_let_0 (/ 0 1))) (or (and (fp.isPositive kitten_23) (< _let_0 kitten_24)) (and (fp.isNegative kitten_23) (< kitten_24 _let_0)))))
(declare-datatypes ((potato_10 0)) (((mk_potato_10 (get_potato_10_a (_ FloatingPoint 8 24))))))

(define-fun spoon_25 ((kitten_25 (_ FloatingPoint 11 53))) Bool (and (fp.isInfinite kitten_25) (fp.isPositive kitten_25)))
(define-fun spoon_26 ((kitten_26 (_ FloatingPoint 11 53))) Bool (and (fp.isInfinite kitten_26) (fp.isNegative kitten_26)))
(define-fun spoon_27 ((kitten_27 (_ FloatingPoint 11 53))) Bool (and (fp.isZero kitten_27) (fp.isPositive kitten_27)))
(define-fun spoon_28 ((kitten_28 (_ FloatingPoint 11 53))) Bool (and (fp.isZero kitten_28) (fp.isNegative kitten_28)))
(declare-fun cat_29 () Int)
(define-fun spoon_30 ((kitten_29 Int)) Bool (and (<= (- cat_29) kitten_29) (<= kitten_29 cat_29)))
(define-fun spoon_31 ((kitten_30 Int)) Bool (and (<= (- 9007199254740992) kitten_30) (<= kitten_30 9007199254740992)))
(define-fun spoon_32 ((kitten_31 (_ FloatingPoint 11 53)) (kitten_32 (_ FloatingPoint 11 53))) Bool (or (and (fp.isPositive kitten_31) (fp.isPositive kitten_32)) (and (fp.isNegative kitten_31) (fp.isNegative kitten_32))))
(define-fun spoon_33 ((kitten_33 (_ FloatingPoint 11 53)) (kitten_34 (_ FloatingPoint 11 53))) Bool (or (and (fp.isPositive kitten_33) (fp.isNegative kitten_34)) (and (fp.isNegative kitten_33) (fp.isPositive kitten_34))))
(define-fun spoon_34 ((kitten_35 (_ FloatingPoint 11 53)) (kitten_36 (_ FloatingPoint 11 53)) (kitten_37 (_ FloatingPoint 11 53))) Bool (and (=> (spoon_32 kitten_36 kitten_37) (fp.isPositive kitten_35)) (=> (spoon_33 kitten_36 kitten_37) (fp.isNegative kitten_35))))
(define-fun spoon_35 ((kitten_38 (_ FloatingPoint 11 53)) (kitten_39 Real)) Bool (let ((_let_0 (/ 0 1))) (or (and (fp.isPositive kitten_38) (< _let_0 kitten_39)) (and (fp.isNegative kitten_38) (< kitten_39 _let_0)))))
(declare-datatypes ((potato_11 0)) (((mk_potato_11 (get_potato_11_a (_ FloatingPoint 11 53))))))

(define-fun spoon_36 ((kitten_40 Int)) Bool (or (= kitten_40 0) (= kitten_40 1)))
(declare-fun spoon_37 (Bool) potato_5)
(declare-fun spoon_38 (potato_5) Bool)
(declare-fun spoon_39 (potato_5) Bool)
(declare-sort potato_12 0)
(define-fun spoon_40 ((kitten_41 (_ FloatingPoint 8 24))) Bool (let ((_let_0 (fp (_ bv0 1) (_ bv139 8) (_ bv0 23)))) (and (spoon_1 kitten_41) (and (fp.leq (fp.neg _let_0) kitten_41) (fp.leq kitten_41 _let_0)))))
(declare-fun spoon_41 (potato_12 potato_12) Bool)
(declare-fun spoon_42 ((_ FloatingPoint 8 24)) potato_5)
(declare-fun spoon_43 (potato_5) Bool)
(declare-fun spoon_44 (potato_5) (_ FloatingPoint 8 24))
(declare-fun cat_45 () potato_12)
(declare-datatypes ((potato_13 0)) (((mk_potato_13 (get_potato_13_a potato_12)))))

(define-fun spoon_46 ((kitten_42 potato_13)) potato_12 (get_potato_13_a kitten_42))
(declare-fun spoon_47 (potato_12) (_ FloatingPoint 8 24))
(declare-fun spoon_48 ((_ FloatingPoint 8 24)) potato_12)
(assert (forall ((kitten_43 potato_12)) (! (= (spoon_48 (spoon_47 kitten_43)) kitten_43) :pattern ((spoon_47 kitten_43)))))
(assert (forall ((kitten_44 potato_12)) (! (spoon_40 (spoon_47 kitten_44)) :pattern ((spoon_47 kitten_44)))))
(assert (forall ((kitten_45 (_ FloatingPoint 8 24))) (! (=> (spoon_40 kitten_45) (= (spoon_47 (spoon_48 kitten_45)) kitten_45)) :pattern ((spoon_47 (spoon_48 kitten_45))))))
(declare-datatypes ((potato_14 0)) (((mk_potato_14 (get_potato_14_a potato_12) (get_potato_14_b potato_12)))))

(define-fun spoon_49 ((kitten_46 potato_14)) potato_12 (get_potato_14_a kitten_46))
(define-fun spoon_50 ((kitten_47 potato_14)) potato_12 (get_potato_14_b kitten_47))
(declare-datatypes ((potato_15 0)) (((mk_potato_15 (get_potato_15_a potato_14)))))

(define-fun spoon_51 ((kitten_48 potato_15)) potato_14 (get_potato_15_a kitten_48))
(declare-datatypes ((potato_16 0)) (((mk_potato_16 (get_potato_16_a potato_14)))))

(define-fun spoon_52 ((kitten_49 potato_16)) potato_14 (get_potato_16_a kitten_49))
(define-fun spoon_53 ((kitten_50 potato_16) (kitten_51 potato_16)) Bool (let ((_let_0 (get_potato_16_a kitten_50))) (let ((_let_1 (get_potato_16_a kitten_51))) (ite (and (= (spoon_47 (get_potato_14_a _let_0)) (spoon_47 (get_potato_14_a _let_1))) (= (spoon_47 (get_potato_14_b _let_0)) (spoon_47 (get_potato_14_b _let_1)))) true false))))
(declare-fun cat_54 () Int)
(declare-fun spoon_55 (potato_16) Int)
(declare-fun cat_56 () Int)
(declare-fun spoon_57 (potato_16) Int)
(assert (<= 0 cat_54))
(assert (forall ((kitten_52 potato_16)) (<= 0 (spoon_55 kitten_52)) ))
(assert (<= 0 cat_56))
(assert (forall ((kitten_53 potato_16)) (<= 0 (spoon_57 kitten_53)) ))
(declare-fun cat_58 () Int)
(declare-fun cat_59 () Int)
(declare-fun cat_60 () Int)
(assert (<= 0 cat_58))
(assert (< cat_58 cat_59))
(assert (<= 0 cat_60))
(declare-fun cat_61 () Int)
(declare-fun cat_62 () Int)
(declare-fun cat_63 () Int)
(assert (<= 0 cat_61))
(assert (< cat_61 cat_62))
(assert (<= 0 cat_63))
(declare-fun spoon_64 (potato_16 potato_16) Bool)
(declare-fun cat_65 () potato_16)
(declare-datatypes ((potato_17 0)) (((mk_potato_17 (get_potato_17_a potato_16)))))

(define-fun spoon_66 ((kitten_54 potato_17)) potato_16 (get_potato_17_a kitten_54))
(declare-fun cat_67 () potato_16)
(declare-fun cat_68 () Int)
(declare-fun cat_69 () potato_16)
(declare-fun cat_70 () Int)
(declare-fun cat_71 () Int)
(declare-sort potato_18 0)
(declare-fun spoon_72 (potato_18 potato_18) Bool)
(declare-fun spoon_73 ((_ FloatingPoint 11 53)) potato_5)
(declare-fun spoon_74 (potato_5) Bool)
(declare-fun spoon_75 (potato_5) (_ FloatingPoint 11 53))
(declare-fun cat_76 () potato_18)
(declare-datatypes ((potato_19 0)) (((mk_potato_19 (get_potato_19_a potato_18)))))

(define-fun spoon_77 ((kitten_55 potato_19)) potato_18 (get_potato_19_a kitten_55))
(declare-sort potato_20 0)
(define-fun spoon_78 ((kitten_56 (_ FloatingPoint 11 53))) Bool (let ((_let_0 (fp (_ bv0 1) (_ bv1036 11) (_ bv0 52)))) (and (spoon_3 kitten_56) (and (fp.leq (fp.neg _let_0) kitten_56) (fp.leq kitten_56 _let_0)))))
(declare-fun spoon_79 (potato_20 potato_20) Bool)
(declare-fun spoon_80 ((_ FloatingPoint 11 53)) potato_5)
(declare-fun spoon_81 (potato_5) Bool)
(declare-fun spoon_82 (potato_5) (_ FloatingPoint 11 53))
(declare-fun cat_83 () potato_20)
(declare-datatypes ((potato_21 0)) (((mk_potato_21 (get_potato_21_a potato_20)))))

(define-fun spoon_84 ((kitten_57 potato_21)) potato_20 (get_potato_21_a kitten_57))
(define-fun spoon_85 ((kitten_58 (_ FloatingPoint 11 53)) (kitten_59 Bool) (kitten_60 Bool) (kitten_61 Bool) (kitten_62 Bool)) Bool (let ((_let_0 (fp (_ bv0 1) (_ bv1036 11) (_ bv0 52)))) (=> (or (= kitten_59 true) (fp.leq (fp.neg _let_0) _let_0)) (spoon_78 kitten_58))))
(declare-sort potato_22 0)
(define-fun spoon_86 ((kitten_63 (_ FloatingPoint 11 53))) Bool (and (spoon_3 kitten_63) (and (fp.leq (fp (_ bv0 1) (_ bv0 11) (_ bv0 52)) kitten_63) (fp.leq kitten_63 (fp (_ bv0 1) (_ bv1023 11) (_ bv0 52))))))
(declare-fun spoon_87 (potato_22 potato_22) Bool)
(declare-fun spoon_88 ((_ FloatingPoint 11 53)) potato_5)
(declare-fun spoon_89 (potato_5) Bool)
(declare-fun spoon_90 (potato_5) (_ FloatingPoint 11 53))
(declare-fun cat_91 () potato_22)
(declare-datatypes ((potato_23 0)) (((mk_potato_23 (get_potato_23_a potato_22)))))

(define-fun spoon_92 ((kitten_64 potato_23)) potato_22 (get_potato_23_a kitten_64))
(define-fun spoon_93 ((kitten_65 (_ FloatingPoint 11 53)) (kitten_66 Bool) (kitten_67 Bool) (kitten_68 Bool) (kitten_69 Bool)) Bool (=> (or (= kitten_66 true) (fp.leq (fp (_ bv0 1) (_ bv0 11) (_ bv0 52)) (fp (_ bv0 1) (_ bv1023 11) (_ bv0 52)))) (spoon_86 kitten_65)))
(declare-fun cat_94 () Int)
(declare-fun cat_95 () Int)
(declare-fun cat_96 () Int)
(declare-fun cat_97 () Int)
(define-fun spoon_98 ((kitten_70 (_ FloatingPoint 8 24)) (kitten_71 Bool) (kitten_72 Bool) (kitten_73 Bool) (kitten_74 Bool)) Bool (let ((_let_0 (fp (_ bv0 1) (_ bv139 8) (_ bv0 23)))) (=> (or (= kitten_71 true) (fp.leq (fp.neg _let_0) _let_0)) (spoon_40 kitten_70))))
(declare-fun cat_99 () (_ FloatingPoint 11 53))
(declare-fun cat_100 () (_ FloatingPoint 11 53))
(declare-fun cat_101 () (_ FloatingPoint 11 53))
(declare-fun cat_102 () potato_12)
(declare-fun cat_103 () potato_12)
(declare-fun cat_104 () (_ FloatingPoint 11 53))
(declare-fun cat_105 () (_ FloatingPoint 11 53))
(declare-fun cat_106 () (_ FloatingPoint 8 24))
(declare-fun cat_107 () potato_12)
(declare-fun cat_108 () potato_12)
(declare-fun cat_109 () potato_12)
(declare-fun cat_110 () potato_12)
(declare-fun cat_111 () potato_12)
(declare-fun cat_112 () potato_12)
(declare-fun cat_113 () (_ FloatingPoint 11 53))
(declare-fun cat_114 () (_ FloatingPoint 11 53))
(declare-fun cat_115 () (_ FloatingPoint 8 24))
(declare-fun cat_116 () potato_12)
(declare-fun cat_117 () potato_12)
(declare-fun cat_118 () potato_12)
(declare-fun cat_119 () potato_12)
(declare-fun cat_120 () potato_12)
(declare-fun cat_121 () potato_12)
(declare-fun cat_122 () (_ FloatingPoint 11 53))
(declare-fun cat_123 () (_ FloatingPoint 11 53))
(declare-fun cat_124 () (_ FloatingPoint 11 53))
(declare-fun cat_125 () (_ FloatingPoint 11 53))
(declare-fun cat_126 () (_ FloatingPoint 11 53))
(declare-fun cat_127 () potato_15)
(declare-fun cat_128 () potato_14)
(declare-fun cat_129 () potato_11)
(declare-fun cat_130 () (_ FloatingPoint 11 53))
(declare-fun cat_131 () potato_15)
(declare-fun cat_132 () potato_14)
(declare-fun cat_133 () potato_15)
(declare-fun cat_134 () potato_14)
(declare-fun cat_135 () potato_11)
(declare-fun cat_136 () (_ FloatingPoint 11 53))
(define-fun spoon_137 () potato_15 (mk_potato_15 (mk_potato_14 cat_102 cat_103)))
(define-fun spoon_138 () potato_11 (mk_potato_11 cat_101))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1036 11) (_ bv0 52)))) (=> (fp.leq (fp.neg _let_0) _let_0) (spoon_78 cat_99))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1036 11) (_ bv0 52)))) (=> (fp.leq (fp.neg _let_0) _let_0) (spoon_78 cat_100))))
(assert (=> (fp.leq (fp (_ bv0 1) (_ bv0 11) (_ bv0 52)) (fp (_ bv0 1) (_ bv1023 11) (_ bv0 52))) (spoon_86 cat_101)))
(assert (= cat_123 cat_99))
(assert (= cat_124 ((_ to_fp 11 53) roundNearestTiesToEven (fp.add roundNearestTiesToEven (spoon_47 (get_potato_14_a (get_potato_16_a cat_67))) (spoon_47 (get_potato_14_a (get_potato_16_a cat_69)))))))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (fp.lt (fp (_ bv0 1) (_ bv0 8) (_ bv0 23)) (spoon_47 (get_potato_14_a (get_potato_16_a cat_69))))))
(assert (let ((_let_0 (fp.div roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (fp.sub roundNearestTiesToEven (fp (_ bv0 1) (_ bv139 8) (_ bv0 23)) (spoon_47 (get_potato_14_a (get_potato_16_a cat_67))))) ((_ to_fp 11 53) roundNearestTiesToEven (spoon_47 (get_potato_14_a (get_potato_16_a cat_69))))))) (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (and (= cat_104 _let_0) (spoon_3 _let_0)))))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (and (= cat_105 cat_104) (spoon_3 cat_104))))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= (mk_potato_11 cat_125) spoon_138)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= cat_126 cat_105)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= (spoon_47 cat_107) ((_ to_fp 8 24) roundNearestTiesToEven (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (spoon_47 (get_potato_14_b (get_potato_16_a cat_69)))) cat_126)))))
(assert (let ((_let_0 (fp.sub roundNearestTiesToEven (fp (_ bv0 1) (_ bv139 8) (_ bv0 23)) (spoon_47 (get_potato_14_a (get_potato_16_a cat_67)))))) (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (and (= cat_106 _let_0) (spoon_1 _let_0)))))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= (spoon_47 cat_108) cat_106)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= cat_108 cat_109)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= cat_107 cat_110)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= cat_111 cat_109)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= cat_112 cat_110)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= cat_127 spoon_137)))
(assert (=> (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124) (= cat_128 (mk_potato_14 cat_111 cat_112))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (fp.lt (spoon_47 (get_potato_14_a (get_potato_16_a cat_69))) (fp (_ bv0 1) (_ bv0 8) (_ bv0 23)))))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (let ((_let_1 (fp.div roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (fp.sub roundNearestTiesToEven (fp.neg (fp (_ bv0 1) (_ bv139 8) (_ bv0 23))) (spoon_47 (get_potato_14_a (get_potato_16_a cat_67))))) ((_ to_fp 11 53) roundNearestTiesToEven (spoon_47 (get_potato_14_a (get_potato_16_a cat_69))))))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (and (= cat_113 _let_1) (spoon_3 _let_1)))))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (and (= cat_114 cat_113) (spoon_3 cat_113))))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_129 spoon_138)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_130 cat_114)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= (spoon_47 cat_116) ((_ to_fp 8 24) roundNearestTiesToEven (fp.mul roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (spoon_47 (get_potato_14_b (get_potato_16_a cat_69)))) cat_130)))))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (let ((_let_1 (fp.sub roundNearestTiesToEven (fp.neg (fp (_ bv0 1) (_ bv139 8) (_ bv0 23))) (spoon_47 (get_potato_14_a (get_potato_16_a cat_67)))))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (and (= cat_115 _let_1) (spoon_1 _let_1)))))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= (spoon_47 cat_117) cat_115)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_117 cat_118)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_116 cat_119)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_120 cat_118)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_121 cat_119)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_131 spoon_137)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (fp.lt cat_124 (fp.neg _let_0)) (= cat_132 (mk_potato_14 cat_120 cat_121))))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (not (fp.lt cat_124 (fp.neg _let_0))) (= cat_133 spoon_137)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (not (fp.lt cat_124 (fp.neg _let_0))) (= cat_134 (get_potato_16_a cat_69))))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (not (fp.lt cat_124 (fp.neg _let_0))) (= cat_132 cat_134)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (not (fp.lt cat_124 (fp.neg _let_0))) (= cat_130 cat_101)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (not (fp.lt cat_124 (fp.neg _let_0))) (= cat_132 cat_134)))))
(assert (let ((_let_0 (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))) (=> (not (fp.lt _let_0 cat_124)) (=> (not (fp.lt cat_124 (fp.neg _let_0))) (= cat_130 cat_122)))))
(assert (=> (not (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124)) (= cat_128 cat_132)))
(assert (=> (not (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_124)) (= cat_126 cat_130)))
(assert (spoon_40 (fp.add roundNearestTiesToEven (spoon_47 (get_potato_14_a (get_potato_16_a cat_67))) (spoon_47 (get_potato_14_a cat_128)))))
(assert (= cat_135 (mk_potato_11 cat_100)))
(assert (= cat_136 ((_ to_fp 11 53) roundNearestTiesToEven (fp.add roundNearestTiesToEven (spoon_47 (get_potato_14_b (get_potato_16_a cat_67))) (spoon_47 (get_potato_14_b cat_128))))))
(assert (not (fp.lt (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)) cat_136)))
(assert (fp.lt cat_136 (fp.neg (fp (_ bv0 1) (_ bv1035 11) (_ bv0 52)))))
(assert (not (fp.lt (spoon_47 (get_potato_14_b cat_128)) (fp (_ bv0 1) (_ bv0 8) (_ bv0 23)))))
(check-sat)
(exit)
