(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFFPDTNIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(define-fun spoon_1 ((kitten_1 Float32)) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(define-fun spoon_2 ((kitten_2 Float64)) Bool (not (or (fp.isInfinite kitten_2) (fp.isNaN kitten_2))))
(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_3 (potato_2 potato_2) Bool)
(declare-const cat_4 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_5 ((kitten_3 potato_6)) Int (get_potato_6_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_7)) Bool (get_potato_7_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_8)) Real (get_potato_8_a kitten_5))
(define-fun spoon_8 ((kitten_6 potato_9)) potato_2 (get_potato_9_a kitten_6))
(declare-fun spoon_9 (Int) Int)
(define-fun spoon_10 ((kitten_7 Float32)) Bool (and (fp.isInfinite kitten_7) (fp.isPositive kitten_7)))
(define-fun spoon_11 ((kitten_8 Float32)) Bool (and (fp.isInfinite kitten_8) (fp.isNegative kitten_8)))
(define-fun spoon_12 ((kitten_9 Float32)) Bool (and (fp.isZero kitten_9) (fp.isPositive kitten_9)))
(define-fun spoon_13 ((kitten_10 Float32)) Bool (and (fp.isZero kitten_10) (fp.isNegative kitten_10)))
(declare-const cat_14 Int)
(define-fun spoon_15 ((kitten_11 Int)) Bool (and (<= (- cat_14) kitten_11) (<= kitten_11 cat_14)))
(define-fun spoon_16 ((kitten_12 Int)) Bool (and (<= (- 16777216) kitten_12) (<= kitten_12 16777216)))
(define-fun spoon_17 ((kitten_13 Float32) (kitten_14 Float32)) Bool (or (and (fp.isPositive kitten_13) (fp.isPositive kitten_14)) (and (fp.isNegative kitten_13) (fp.isNegative kitten_14))))
(define-fun spoon_18 ((kitten_15 Float32) (kitten_16 Float32)) Bool (or (and (fp.isPositive kitten_15) (fp.isNegative kitten_16)) (and (fp.isNegative kitten_15) (fp.isPositive kitten_16))))
(define-fun spoon_19 ((kitten_17 Float32) (kitten_18 Float32) (kitten_19 Float32)) Bool (and (=> (spoon_17 kitten_18 kitten_19) (fp.isPositive kitten_17)) (=> (spoon_18 kitten_18 kitten_19) (fp.isNegative kitten_17))))
(define-fun spoon_20 ((kitten_20 Real)) Real (* kitten_20 kitten_20))
(declare-fun spoon_21 (Real) Real)
(define-fun spoon_22 ((kitten_21 Float32) (kitten_22 Real)) Bool (or (and (fp.isPositive kitten_21) (< 0.0 kitten_22)) (and (fp.isNegative kitten_21) (< kitten_22 0.0))))
(declare-fun spoon_23 (Float32) Bool)
(declare-datatypes () ((potato_10 (mk_potato_10 (get_potato_10_a Float32)))))
(define-fun spoon_24 ((kitten_23 Float64)) Bool (and (fp.isInfinite kitten_23) (fp.isPositive kitten_23)))
(define-fun spoon_25 ((kitten_24 Float64)) Bool (and (fp.isInfinite kitten_24) (fp.isNegative kitten_24)))
(define-fun spoon_26 ((kitten_25 Float64)) Bool (and (fp.isZero kitten_25) (fp.isPositive kitten_25)))
(define-fun spoon_27 ((kitten_26 Float64)) Bool (and (fp.isZero kitten_26) (fp.isNegative kitten_26)))
(declare-const cat_28 Int)
(define-fun spoon_29 ((kitten_27 Int)) Bool (and (<= (- cat_28) kitten_27) (<= kitten_27 cat_28)))
(define-fun spoon_30 ((kitten_28 Int)) Bool (and (<= (- 9007199254740992) kitten_28) (<= kitten_28 9007199254740992)))
(define-fun spoon_31 ((kitten_29 Float64) (kitten_30 Float64)) Bool (or (and (fp.isPositive kitten_29) (fp.isPositive kitten_30)) (and (fp.isNegative kitten_29) (fp.isNegative kitten_30))))
(define-fun spoon_32 ((kitten_31 Float64) (kitten_32 Float64)) Bool (or (and (fp.isPositive kitten_31) (fp.isNegative kitten_32)) (and (fp.isNegative kitten_31) (fp.isPositive kitten_32))))
(define-fun spoon_33 ((kitten_33 Float64) (kitten_34 Float64) (kitten_35 Float64)) Bool (and (=> (spoon_31 kitten_34 kitten_35) (fp.isPositive kitten_33)) (=> (spoon_32 kitten_34 kitten_35) (fp.isNegative kitten_33))))
(define-fun spoon_34 ((kitten_36 Float64) (kitten_37 Real)) Bool (or (and (fp.isPositive kitten_36) (< 0.0 kitten_37)) (and (fp.isNegative kitten_36) (< kitten_37 0.0))))
(declare-fun spoon_35 (Float64) Bool)
(declare-datatypes () ((potato_11 (mk_potato_11 (get_potato_11_a Float64)))))
(define-fun spoon_36 ((kitten_38 Bool)) Int (ite (= kitten_38 true) 1 0))
(define-fun spoon_37 ((kitten_39 Int)) Bool (ite (= kitten_39 0) false true))
(define-fun spoon_38 ((kitten_40 Int)) Bool (or (= kitten_40 0) (= kitten_40 1)))
(declare-fun spoon_39 (Bool) potato_5)
(declare-fun spoon_40 (potato_5) Bool)
(declare-fun spoon_41 (potato_5) Bool)
(declare-sort potato_12 0)
(define-fun spoon_42 ((kitten_41 Float32)) Bool (and (spoon_1 kitten_41) (and (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) kitten_41) (fp.leq kitten_41 (fp #b0 #b10001011 #b00000000000000000000000)))))
(declare-fun spoon_43 (potato_12 potato_12) Bool)
(declare-fun spoon_44 (Float32) potato_5)
(declare-fun spoon_45 (potato_5) Bool)
(declare-fun spoon_46 (potato_5) Float32)
(declare-const cat_47 potato_12)
(declare-datatypes () ((potato_13 (mk_potato_13 (get_potato_13_a potato_12)))))
(define-fun spoon_48 ((kitten_42 potato_13)) potato_12 (get_potato_13_a kitten_42))
(declare-fun spoon_49 (potato_12) Float32)
(declare-fun spoon_50 (Float32) potato_12)
(assert (forall ((kitten_43 potato_12)) (! (= (spoon_50 (spoon_49 kitten_43)) kitten_43) :pattern ((spoon_49 kitten_43)))))
(assert (forall ((kitten_44 potato_12)) (! (spoon_42 (spoon_49 kitten_44)) :pattern ((spoon_49 kitten_44)))))
(assert (forall ((kitten_45 Float32)) (! (=> (spoon_42 kitten_45) (= (spoon_49 (spoon_50 kitten_45)) kitten_45)) :pattern ((spoon_49 (spoon_50 kitten_45))))))
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_12) (get_potato_14_b potato_12)))))
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_14)))))
(define-fun spoon_51 ((kitten_46 potato_15)) potato_14 (get_potato_15_a kitten_46))
(declare-datatypes () ((potato_16 (mk_potato_16 (get_potato_16_a potato_14)))))
(define-fun spoon_52 ((kitten_47 potato_16)) potato_14 (get_potato_16_a kitten_47))
(define-fun spoon_53 ((kitten_48 potato_16) (kitten_49 potato_16)) Bool (ite (and (= (spoon_49 (get_potato_14_a (get_potato_16_a kitten_48))) (spoon_49 (get_potato_14_a (get_potato_16_a kitten_49)))) (= (spoon_49 (get_potato_14_b (get_potato_16_a kitten_48))) (spoon_49 (get_potato_14_b (get_potato_16_a kitten_49))))) true false))
(declare-const cat_54 Int)
(declare-fun spoon_55 (potato_16) Int)
(declare-const cat_56 Int)
(declare-fun spoon_57 (potato_16) Int)
(assert (<= 0 cat_54))
(assert (forall ((kitten_50 potato_16)) (<= 0 (spoon_55 kitten_50))))
(assert (<= 0 cat_56))
(assert (forall ((kitten_51 potato_16)) (<= 0 (spoon_57 kitten_51))))
(declare-const cat_58 Int)
(declare-const cat_59 Int)
(declare-const cat_60 Int)
(assert (<= 0 cat_58))
(assert (< cat_58 cat_59))
(assert (<= 0 cat_60))
(declare-const cat_61 Int)
(declare-const cat_62 Int)
(declare-const cat_63 Int)
(assert (<= 0 cat_61))
(assert (< cat_61 cat_62))
(assert (<= 0 cat_63))
(declare-fun spoon_64 (potato_16 potato_16) Bool)
(declare-const cat_65 potato_16)
(declare-datatypes () ((potato_17 (mk_potato_17 (get_potato_17_a potato_16)))))
(define-fun spoon_66 ((kitten_52 potato_17)) potato_16 (get_potato_17_a kitten_52))
(declare-const cat_67 potato_16)
(declare-const cat_68 Int)
(declare-const cat_69 potato_16)
(declare-const cat_70 Int)
(declare-const cat_71 Int)
(declare-sort potato_18 0)
(declare-fun spoon_72 (potato_18 potato_18) Bool)
(declare-fun spoon_73 (Float64) potato_5)
(declare-fun spoon_74 (potato_5) Bool)
(declare-fun spoon_75 (potato_5) Float64)
(declare-const cat_76 potato_18)
(declare-datatypes () ((potato_19 (mk_potato_19 (get_potato_19_a potato_18)))))
(define-fun spoon_77 ((kitten_53 potato_19)) potato_18 (get_potato_19_a kitten_53))
(declare-sort potato_20 0)
(define-fun spoon_78 ((kitten_54 Float64)) Bool (and (spoon_2 kitten_54) (and (fp.leq (fp.neg (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000)) kitten_54) (fp.leq kitten_54 (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000)))))
(declare-fun spoon_79 (potato_20 potato_20) Bool)
(declare-fun spoon_80 (Float64) potato_5)
(declare-fun spoon_81 (potato_5) Bool)
(declare-fun spoon_82 (potato_5) Float64)
(declare-const cat_83 potato_20)
(declare-datatypes () ((potato_21 (mk_potato_21 (get_potato_21_a potato_20)))))
(define-fun spoon_84 ((kitten_55 potato_21)) potato_20 (get_potato_21_a kitten_55))
(define-fun spoon_85 ((kitten_56 Float64) (kitten_57 Bool) (kitten_58 Bool) (kitten_59 Bool)) Bool (=> (or (= kitten_57 true) (fp.leq (fp.neg (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000)) (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000))) (spoon_78 kitten_56)))
(declare-sort potato_22 0)
(define-fun spoon_86 ((kitten_60 Float64)) Bool (and (spoon_2 kitten_60) (and (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) kitten_60) (fp.leq kitten_60 (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000)))))
(declare-fun spoon_87 (potato_22 potato_22) Bool)
(declare-fun spoon_88 (Float64) potato_5)
(declare-fun spoon_89 (potato_5) Bool)
(declare-fun spoon_90 (potato_5) Float64)
(declare-const cat_91 potato_22)
(declare-datatypes () ((potato_23 (mk_potato_23 (get_potato_23_a potato_22)))))
(define-fun spoon_92 ((kitten_61 potato_23)) potato_22 (get_potato_23_a kitten_61))
(define-fun spoon_93 ((kitten_62 Float64) (kitten_63 Bool) (kitten_64 Bool) (kitten_65 Bool)) Bool (=> (or (= kitten_63 true) (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000))) (spoon_86 kitten_62)))
(declare-const cat_94 Int)
(declare-const cat_95 Int)
(declare-const cat_96 Int)
(declare-const cat_97 Int)
(define-fun spoon_98 ((kitten_66 Float32) (kitten_67 Bool) (kitten_68 Bool) (kitten_69 Bool)) Bool (=> (or (= kitten_67 true) (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (fp #b0 #b10001011 #b00000000000000000000000))) (spoon_42 kitten_66)))
(declare-const cat_99 Float64)
(declare-const cat_100 Float64)
(declare-const cat_101 Float64)
(declare-const cat_102 potato_12)
(declare-const cat_103 potato_12)
(declare-const cat_104 Float64)
(declare-const cat_105 Float64)
(declare-const cat_106 Float32)
(declare-const cat_107 potato_12)
(declare-const cat_108 potato_12)
(declare-const cat_109 potato_12)
(declare-const cat_110 potato_12)
(declare-const cat_111 potato_12)
(declare-const cat_112 potato_12)
(declare-const cat_113 Float64)
(declare-const cat_114 Float64)
(declare-const cat_115 Float32)
(declare-const cat_116 potato_12)
(declare-const cat_117 potato_12)
(declare-const cat_118 potato_12)
(declare-const cat_119 potato_12)
(declare-const cat_120 potato_12)
(declare-const cat_121 potato_12)
(declare-const cat_122 Float64)
(declare-const cat_123 Float64)
(declare-const cat_124 Float64)
(declare-const cat_125 Float64)
(declare-const cat_126 Float64)
(declare-const cat_127 Float64)
(declare-const cat_128 potato_15)
(declare-const cat_129 potato_14)
(declare-const cat_130 potato_11)
(declare-const cat_131 Float64)
(declare-const cat_132 potato_15)
(declare-const cat_133 potato_14)
(declare-const cat_134 potato_15)
(declare-const cat_135 potato_14)
(declare-const cat_136 potato_11)
(declare-const cat_137 Float64)
(define-fun spoon_138 () potato_15 (mk_potato_15 (mk_potato_14 cat_102 cat_103)))
(define-fun spoon_139 () potato_11 (mk_potato_11 cat_101))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000)) (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000)) (spoon_78 cat_99)))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000)) (fp #b0 #b10000001100 #b0000000000000000000000000000000000000000000000000000)) (spoon_78 cat_100)))
(assert (=> (fp.leq (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000) (fp #b0 #b01111111111 #b0000000000000000000000000000000000000000000000000000)) (spoon_86 cat_101)))
(assert (= cat_124 cat_99))
(assert (= cat_125 ((_ to_fp 11 53) RNE (fp.add RNE (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))) (spoon_49 (get_potato_14_a (get_potato_16_a cat_69)))))))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (fp.lt (fp #b0 #b00000000 #b00000000000000000000000) (spoon_49 (get_potato_14_a (get_potato_16_a cat_69))))))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (and (= cat_104 (fp.div RNE ((_ to_fp 11 53) RNE (fp.sub RNE (fp #b0 #b10001011 #b00000000000000000000000) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))))) ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_a (get_potato_16_a cat_69)))))) (spoon_2 (fp.div RNE ((_ to_fp 11 53) RNE (fp.sub RNE (fp #b0 #b10001011 #b00000000000000000000000) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))))) ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_a (get_potato_16_a cat_69)))))))))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (and (= cat_105 cat_104) (spoon_2 cat_104))))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= (mk_potato_11 cat_126) spoon_139)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= cat_127 cat_105)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= (spoon_49 cat_107) ((_ to_fp 8 24) RNE (fp.mul RNE ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_b (get_potato_16_a cat_69)))) cat_127)))))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (and (= cat_106 (fp.sub RNE (fp #b0 #b10001011 #b00000000000000000000000) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))))) (spoon_1 (fp.sub RNE (fp #b0 #b10001011 #b00000000000000000000000) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))))))))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= (spoon_49 cat_108) cat_106)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= cat_108 cat_109)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= cat_107 cat_110)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= cat_111 cat_109)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= cat_112 cat_110)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= cat_128 spoon_138)))
(assert (=> (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125) (= cat_129 (mk_potato_14 cat_111 cat_112))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (fp.lt (spoon_49 (get_potato_14_a (get_potato_16_a cat_69))) (fp #b0 #b00000000 #b00000000000000000000000)))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (and (= cat_113 (fp.div RNE ((_ to_fp 11 53) RNE (fp.sub RNE (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))))) ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_a (get_potato_16_a cat_69)))))) (spoon_2 (fp.div RNE ((_ to_fp 11 53) RNE (fp.sub RNE (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))))) ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_a (get_potato_16_a cat_69))))))))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (and (= cat_114 cat_113) (spoon_2 cat_113)))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_130 spoon_139))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_131 cat_114))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= (spoon_49 cat_116) ((_ to_fp 8 24) RNE (fp.mul RNE ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_b (get_potato_16_a cat_69)))) cat_131))))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (and (= cat_115 (fp.sub RNE (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))))) (spoon_1 (fp.sub RNE (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (spoon_49 (get_potato_14_a (get_potato_16_a cat_67)))))))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= (spoon_49 cat_117) cat_115))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_117 cat_118))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_116 cat_119))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_120 cat_118))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_121 cat_119))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_132 spoon_138))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))) (= cat_133 (mk_potato_14 cat_120 cat_121)))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (not (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000)))) (= cat_134 spoon_138))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (not (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000)))) (= cat_135 (get_potato_16_a cat_69)))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (not (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000)))) (= cat_133 cat_135))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (not (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000)))) (= cat_131 cat_101))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (not (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000)))) (= cat_133 cat_135))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (=> (not (fp.lt cat_125 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000)))) (= cat_131 cat_123))))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (= cat_129 cat_133)))
(assert (=> (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_125)) (= cat_127 cat_131)))
(assert (spoon_42 (fp.add RNE (spoon_49 (get_potato_14_a (get_potato_16_a cat_67))) (spoon_49 (get_potato_14_a cat_129)))))
(assert (= cat_136 (mk_potato_11 cat_100)))
(assert (= cat_137 ((_ to_fp 11 53) RNE (fp.add RNE (spoon_49 (get_potato_14_b (get_potato_16_a cat_67))) (spoon_49 (get_potato_14_b cat_129))))))
(assert (not (fp.lt (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000) cat_137)))
(assert (fp.lt cat_137 (fp.neg (fp #b0 #b10000001011 #b0000000000000000000000000000000000000000000000000000))))
(assert (fp.lt (spoon_49 (get_potato_14_b cat_129)) (fp #b0 #b00000000 #b00000000000000000000000)))
(assert (and (= cat_122 (fp.div RNE ((_ to_fp 11 53) RNE (fp.sub RNE (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (spoon_49 (get_potato_14_b (get_potato_16_a cat_67))))) ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_b cat_129))))) (spoon_2 (fp.div RNE ((_ to_fp 11 53) RNE (fp.sub RNE (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (spoon_49 (get_potato_14_b (get_potato_16_a cat_67))))) ((_ to_fp 11 53) RNE (spoon_49 (get_potato_14_b cat_129)))))))
(assert (not (spoon_86 cat_122)))
(check-sat)
(exit)
