(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFFPDTNIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(define-fun spoon_1 ((kitten_1 Float32)) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(define-fun spoon_2 ((kitten_2 Float32)) Bool (or (fp.isZero kitten_2) (and (fp.isNormal kitten_2) (= kitten_2 (fp.roundToIntegral RNE kitten_2)))))
(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_3 (potato_2 potato_2) Bool)
(declare-const cat_4 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_5 ((kitten_3 potato_6)) Int (get_potato_6_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_7)) Bool (get_potato_7_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_8)) Real (get_potato_8_a kitten_5))
(define-fun spoon_8 ((kitten_6 potato_9)) potato_2 (get_potato_9_a kitten_6))
(declare-fun spoon_9 (Int) Int)
(define-fun spoon_10 ((kitten_7 Float32)) Bool (and (fp.isInfinite kitten_7) (fp.isPositive kitten_7)))
(define-fun spoon_11 ((kitten_8 Float32)) Bool (and (fp.isInfinite kitten_8) (fp.isNegative kitten_8)))
(define-fun spoon_12 ((kitten_9 Float32)) Bool (and (fp.isZero kitten_9) (fp.isPositive kitten_9)))
(define-fun spoon_13 ((kitten_10 Float32)) Bool (and (fp.isZero kitten_10) (fp.isNegative kitten_10)))
(declare-const cat_14 Int)
(define-fun spoon_15 ((kitten_11 Int)) Bool (and (<= (- cat_14) kitten_11) (<= kitten_11 cat_14)))
(define-fun spoon_16 ((kitten_12 Int)) Bool (and (<= (- 16777216) kitten_12) (<= kitten_12 16777216)))
(define-fun spoon_17 ((kitten_13 Float32) (kitten_14 Float32)) Bool (or (and (fp.isPositive kitten_13) (fp.isPositive kitten_14)) (and (fp.isNegative kitten_13) (fp.isNegative kitten_14))))
(define-fun spoon_18 ((kitten_15 Float32) (kitten_16 Float32)) Bool (or (and (fp.isPositive kitten_15) (fp.isNegative kitten_16)) (and (fp.isNegative kitten_15) (fp.isPositive kitten_16))))
(define-fun spoon_19 ((kitten_17 Float32) (kitten_18 Float32) (kitten_19 Float32)) Bool (and (=> (spoon_17 kitten_18 kitten_19) (fp.isPositive kitten_17)) (=> (spoon_18 kitten_18 kitten_19) (fp.isNegative kitten_17))))
(define-fun spoon_20 ((kitten_20 Real)) Real (* kitten_20 kitten_20))
(declare-fun spoon_21 (Real) Real)
(define-fun spoon_22 ((kitten_21 Float32) (kitten_22 Real)) Bool (or (and (fp.isPositive kitten_21) (< 0.0 kitten_22)) (and (fp.isNegative kitten_21) (< kitten_22 0.0))))
(declare-datatypes () ((potato_10 (mk_potato_10 (get_potato_10_a Float32)))))
(define-fun spoon_23 ((kitten_23 Int)) Bool (or (= kitten_23 0) (= kitten_23 1)))
(declare-fun spoon_24 (Bool) potato_5)
(declare-fun spoon_25 (potato_5) Bool)
(declare-fun spoon_26 (potato_5) Bool)
(declare-sort potato_11 0)
(declare-fun spoon_27 (potato_11 potato_11) Bool)
(declare-fun spoon_28 (Float32) potato_5)
(declare-fun spoon_29 (potato_5) Bool)
(declare-fun spoon_30 (potato_5) Float32)
(declare-const cat_31 potato_11)
(declare-datatypes () ((potato_12 (mk_potato_12 (get_potato_12_a potato_11)))))
(define-fun spoon_32 ((kitten_24 potato_12)) potato_11 (get_potato_12_a kitten_24))
(declare-sort potato_13 0)
(define-fun spoon_33 ((kitten_25 Float32)) Bool (and (spoon_1 kitten_25) (and (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) kitten_25) (fp.leq kitten_25 (fp #b0 #b10001011 #b00000000000000000000000)))))
(declare-fun spoon_34 (potato_13 potato_13) Bool)
(declare-fun spoon_35 (Float32) potato_5)
(declare-fun spoon_36 (potato_5) Bool)
(declare-fun spoon_37 (potato_5) Float32)
(declare-const cat_38 potato_13)
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_13)))))
(define-fun spoon_39 ((kitten_26 potato_14)) potato_13 (get_potato_14_a kitten_26))
(declare-fun spoon_40 (potato_13) Float32)
(declare-fun spoon_41 (Float32) potato_13)
(assert (forall ((kitten_27 potato_13)) (! (= (spoon_41 (spoon_40 kitten_27)) kitten_27) :pattern ((spoon_40 kitten_27)))))
(assert (forall ((kitten_28 potato_13)) (! (spoon_33 (spoon_40 kitten_28)) :pattern ((spoon_40 kitten_28)))))
(assert (forall ((kitten_29 Float32)) (! (=> (spoon_33 kitten_29) (= (spoon_40 (spoon_41 kitten_29)) kitten_29)) :pattern ((spoon_40 (spoon_41 kitten_29))))))
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_13) (get_potato_15_b potato_13)))))
(define-fun spoon_42 ((kitten_30 potato_15)) potato_13 (get_potato_15_a kitten_30))
(define-fun spoon_43 ((kitten_31 potato_15)) potato_13 (get_potato_15_b kitten_31))
(declare-datatypes () ((potato_16 (mk_potato_16 (get_potato_16_a potato_15)))))
(define-fun spoon_44 ((kitten_32 potato_16)) potato_15 (get_potato_16_a kitten_32))
(declare-datatypes () ((potato_17 (mk_potato_17 (get_potato_17_a potato_15)))))
(define-fun spoon_45 ((kitten_33 potato_17)) potato_15 (get_potato_17_a kitten_33))
(define-fun spoon_46 ((kitten_34 potato_17) (kitten_35 potato_17)) Bool (ite (and (= (spoon_40 (get_potato_15_a (get_potato_17_a kitten_34))) (spoon_40 (get_potato_15_a (get_potato_17_a kitten_35)))) (= (spoon_40 (get_potato_15_b (get_potato_17_a kitten_34))) (spoon_40 (get_potato_15_b (get_potato_17_a kitten_35))))) true false))
(declare-const cat_47 Int)
(declare-fun spoon_48 (potato_17) Int)
(declare-const cat_49 Int)
(declare-fun spoon_50 (potato_17) Int)
(assert (<= 0 cat_47))
(assert (forall ((kitten_36 potato_17)) (<= 0 (spoon_48 kitten_36))))
(assert (<= 0 cat_49))
(assert (forall ((kitten_37 potato_17)) (<= 0 (spoon_50 kitten_37))))
(declare-const cat_51 Int)
(declare-const cat_52 Int)
(declare-const cat_53 Int)
(assert (<= 0 cat_51))
(assert (< cat_51 cat_52))
(assert (<= 0 cat_53))
(declare-const cat_54 Int)
(declare-const cat_55 Int)
(declare-const cat_56 Int)
(assert (<= 0 cat_54))
(assert (< cat_54 cat_55))
(assert (<= 0 cat_56))
(declare-fun spoon_57 (potato_17 potato_17) Bool)
(declare-const cat_58 potato_17)
(declare-datatypes () ((potato_18 (mk_potato_18 (get_potato_18_a potato_17)))))
(define-fun spoon_59 ((kitten_38 potato_18)) potato_17 (get_potato_18_a kitten_38))
(declare-const cat_60 potato_17)
(declare-const cat_61 Int)
(declare-const cat_62 potato_17)
(declare-const cat_63 Int)
(declare-sort potato_19 0)
(define-fun spoon_64 ((kitten_39 Float32)) Bool (and (spoon_1 kitten_39) (and (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) kitten_39) (fp.leq kitten_39 (fp #b0 #b10011010 #b00000000000000000000000)))))
(declare-fun spoon_65 (potato_19 potato_19) Bool)
(declare-fun spoon_66 (Float32) potato_5)
(declare-fun spoon_67 (potato_5) Bool)
(declare-fun spoon_68 (potato_5) Float32)
(declare-const cat_69 potato_19)
(declare-datatypes () ((potato_20 (mk_potato_20 (get_potato_20_a potato_19)))))
(define-fun spoon_70 ((kitten_40 potato_20)) potato_19 (get_potato_20_a kitten_40))
(define-fun spoon_71 ((kitten_41 Float32) (kitten_42 Bool) (kitten_43 Bool) (kitten_44 Bool) (kitten_45 Bool)) Bool (=> (or (= kitten_42 true) (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000))) (spoon_64 kitten_41)))
(declare-const cat_72 Int)
(declare-const cat_73 Int)
(declare-const cat_74 Int)
(define-fun spoon_75 ((kitten_46 Float32) (kitten_47 Bool) (kitten_48 Bool) (kitten_49 Bool) (kitten_50 Bool)) Bool (=> (or (= kitten_47 true) (fp.leq (fp.neg (fp #b0 #b11111110 #b11111111111111111111111)) (fp #b0 #b11111110 #b11111111111111111111111))) (spoon_1 kitten_46)))
(define-fun spoon_76 ((kitten_51 Float32) (kitten_52 Bool) (kitten_53 Bool) (kitten_54 Bool) (kitten_55 Bool)) Bool (=> (or (= kitten_52 true) (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (fp #b0 #b10001011 #b00000000000000000000000))) (spoon_33 kitten_51)))
(declare-const cat_77 Float32)
(declare-const cat_78 Float32)
(declare-const cat_79 Float32)
(declare-const cat_80 Float32)
(declare-const cat_81 Float32)
(declare-const cat_82 Float32)
(declare-const cat_83 Float32)
(declare-const cat_84 Float32)
(declare-const cat_85 Float32)
(declare-const cat_86 Float32)
(declare-const cat_87 Float32)
(declare-const cat_88 Float32)
(declare-const cat_89 Float32)
(declare-const cat_90 Float32)
(declare-const cat_91 Float32)
(declare-const cat_92 Float32)
(declare-const cat_93 Float32)
(declare-const cat_94 Float32)
(declare-const cat_95 Float32)
(declare-const cat_96 Float32)
(declare-const cat_97 Float32)
(declare-const cat_98 Float32)
(declare-const cat_99 Float32)
(declare-const cat_100 Float32)
(define-fun spoon_101 () potato_10 (mk_potato_10 cat_78))
(define-fun spoon_102 () potato_10 (mk_potato_10 cat_77))
(assert (spoon_64 cat_77))
(assert (spoon_64 cat_78))
(assert (and (fp.eq cat_77 (fp.sub RNE (fp.mul RNE (fp #b0 #b10000000 #b00000000000000000000000) (spoon_40 (get_potato_15_a (get_potato_17_a cat_62)))) (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))) (fp.eq cat_78 (fp.sub RNE (fp.mul RNE (fp #b0 #b10000000 #b00000000000000000000000) (spoon_40 (get_potato_15_b (get_potato_17_a cat_62)))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60)))))))
(assert (=> (fp.leq (fp.neg (fp #b0 #b10011010 #b00000000000000000000000)) (fp #b0 #b10011010 #b00000000000000000000000)) (spoon_64 cat_79)))
(assert (not (and (fp.leq (fp.neg (fp #b0 #b01110101 #b00000110001001001101111)) (fp.sub RNE (spoon_40 (get_potato_15_a (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))) (fp.leq (fp.sub RNE (spoon_40 (get_potato_15_a (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_a (get_potato_17_a cat_60)))) (fp #b0 #b01110101 #b00000110001001001101111)))))
(assert (not (and (fp.leq (fp.neg (fp #b0 #b01110101 #b00000110001001001101111)) (fp.sub RNE (spoon_40 (get_potato_15_b (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60))))) (fp.leq (fp.sub RNE (spoon_40 (get_potato_15_b (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60)))) (fp #b0 #b01110101 #b00000110001001001101111)))))
(assert (and (= cat_80 (fp.div RNE (fp.sub RNE (spoon_40 (get_potato_15_b (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60)))) (fp.sub RNE (spoon_40 (get_potato_15_a (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_a (get_potato_17_a cat_60)))))) (spoon_1 (fp.div RNE (fp.sub RNE (spoon_40 (get_potato_15_b (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60)))) (fp.sub RNE (spoon_40 (get_potato_15_a (get_potato_17_a cat_62))) (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))))))
(assert (and (= cat_81 cat_80) (spoon_1 cat_80)))
(assert (= (mk_potato_10 cat_89) (mk_potato_10 cat_79)))
(assert (= cat_90 cat_81))
(assert (=> (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000))) (= (mk_potato_10 cat_91) spoon_102)))
(assert (=> (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000))) (= cat_92 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))))
(assert (=> (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000))) (and (= cat_82 (fp.add RNE (fp.mul RNE cat_90 (fp.sub RNE cat_92 (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60))))) (spoon_1 (fp.add RNE (fp.mul RNE cat_90 (fp.sub RNE cat_92 (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60))))))))
(assert (=> (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000))) (= (mk_potato_10 cat_93) spoon_101)))
(assert (=> (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000))) (= cat_94 cat_82)))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77) (= (mk_potato_10 cat_95) spoon_102))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77) (= cat_96 (fp #b0 #b10001011 #b00000000000000000000000)))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77) (and (= cat_83 (fp.add RNE (fp.mul RNE cat_90 (fp.sub RNE cat_96 (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60))))) (spoon_1 (fp.add RNE (fp.mul RNE cat_90 (fp.sub RNE cat_96 (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))) (spoon_40 (get_potato_15_b (get_potato_17_a cat_60)))))))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77) (= (mk_potato_10 cat_97) spoon_101))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77) (= cat_98 cat_83))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (not (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77)) (= cat_98 cat_78))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (not (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77)) (= cat_96 cat_77))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (not (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77)) (= cat_98 cat_88))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (=> (not (fp.lt (fp #b0 #b10001011 #b00000000000000000000000) cat_77)) (= cat_96 cat_87))))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (= cat_94 cat_98)))
(assert (=> (not (fp.lt cat_77 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)))) (= cat_92 cat_96)))
(assert (fp.lt cat_94 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000))))
(assert (= cat_94 cat_99))
(assert (= cat_100 (fp.neg (fp #b0 #b10001011 #b00000000000000000000000))))
(assert (and (= cat_84 (fp.div RNE (fp.sub RNE cat_100 (spoon_40 (get_potato_15_b (get_potato_17_a cat_60)))) cat_90)) (spoon_1 (fp.div RNE (fp.sub RNE cat_100 (spoon_40 (get_potato_15_b (get_potato_17_a cat_60)))) cat_90))))
(assert (= cat_85 (fp.add RNE cat_84 (spoon_40 (get_potato_15_a (get_potato_17_a cat_60))))))
(assert (and (= cat_86 cat_85) (spoon_1 cat_85)))
(assert (not (spoon_64 cat_86)))
(check-sat)
(exit)
