;; This file has been translated by CVC4 from an earlier
;; version of SMTLIB to 2.6 using the script
;; translate_benchmarks.py in repo smtlib_schanda.

(set-info :smt-lib-version 2.6)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)
(set-logic AUFFPDTNIRA)

(define-fun spoon_1 ((kitten_1 (_ FloatingPoint 8 24))) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(define-fun spoon_2 ((kitten_2 (_ FloatingPoint 8 24))) Bool (or (fp.isZero kitten_2) (and (fp.isNormal kitten_2) (= kitten_2 (fp.roundToIntegral roundNearestTiesToEven kitten_2)))))
(declare-datatypes ((potato_1 0)) (((mk_potato_1))))

(declare-sort potato_2 0)
(declare-fun spoon_3 (potato_2 potato_2) Bool)
(declare-fun cat_4 () potato_2)
(declare-sort potato_3 0)
(declare-datatypes ((potato_4 0)) (((mk_potato_4 (get_potato_4_a potato_3)))))

(declare-sort potato_5 0)
(declare-datatypes ((potato_6 0)) (((mk_potato_6 (get_potato_6_a Int)))))

(declare-datatypes ((potato_7 0)) (((mk_potato_7 (get_potato_7_a Bool)))))

(declare-datatypes ((potato_8 0)) (((mk_potato_8 (get_potato_8_a Real)))))

(declare-datatypes ((potato_9 0)) (((mk_potato_9 (get_potato_9_a potato_2)))))

(define-fun spoon_5 ((kitten_3 potato_6)) Int (get_potato_6_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_7)) Bool (get_potato_7_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_8)) Real (get_potato_8_a kitten_5))
(define-fun spoon_8 ((kitten_6 potato_9)) potato_2 (get_potato_9_a kitten_6))
(declare-sort potato_10 0)
(declare-fun spoon_9 (potato_10) Int)
(assert (forall ((kitten_7 potato_10)) (let ((_let_0 (spoon_9 kitten_7))) (and (<= 3 _let_0) (<= _let_0 30))) ))
(define-fun spoon_10 ((kitten_8 Int)) Bool (and (<= 3 kitten_8) (<= kitten_8 30)))
(declare-fun spoon_11 (Int) potato_5)
(declare-fun spoon_12 (potato_5) Bool)
(declare-fun spoon_13 (potato_5) Int)
(declare-fun spoon_14 (potato_10 potato_10) Bool)
(declare-fun cat_15 () potato_10)
(declare-datatypes ((potato_11 0)) (((mk_potato_11 (get_potato_11_a potato_10)))))

(define-fun spoon_16 ((kitten_9 potato_11)) potato_10 (get_potato_11_a kitten_9))
(define-fun spoon_17 ((kitten_10 potato_10)) Int (spoon_9 kitten_10))
(declare-fun spoon_18 (Int) potato_10)
(assert (forall ((kitten_11 potato_10)) (! (= (spoon_18 (spoon_17 kitten_11)) kitten_11) :pattern ((spoon_17 kitten_11)))))
(assert (forall ((kitten_12 potato_10)) (! (spoon_10 (spoon_17 kitten_12)) :pattern ((spoon_17 kitten_12)))))
(assert (forall ((kitten_13 Int)) (! (=> (spoon_10 kitten_13) (= (spoon_17 (spoon_18 kitten_13)) kitten_13)) :pattern ((spoon_17 (spoon_18 kitten_13))))))
(declare-fun spoon_19 (Int) Int)
(define-fun spoon_20 ((kitten_14 (_ FloatingPoint 8 24))) Bool (and (fp.isInfinite kitten_14) (fp.isPositive kitten_14)))
(define-fun spoon_21 ((kitten_15 (_ FloatingPoint 8 24))) Bool (and (fp.isInfinite kitten_15) (fp.isNegative kitten_15)))
(define-fun spoon_22 ((kitten_16 (_ FloatingPoint 8 24))) Bool (and (fp.isZero kitten_16) (fp.isPositive kitten_16)))
(define-fun spoon_23 ((kitten_17 (_ FloatingPoint 8 24))) Bool (and (fp.isZero kitten_17) (fp.isNegative kitten_17)))
(declare-fun cat_24 () Int)
(define-fun spoon_25 ((kitten_18 Int)) Bool (and (<= (- cat_24) kitten_18) (<= kitten_18 cat_24)))
(define-fun spoon_26 ((kitten_19 Int)) Bool (and (<= (- 16777216) kitten_19) (<= kitten_19 16777216)))
(define-fun spoon_27 ((kitten_20 (_ FloatingPoint 8 24)) (kitten_21 (_ FloatingPoint 8 24))) Bool (or (and (fp.isPositive kitten_20) (fp.isPositive kitten_21)) (and (fp.isNegative kitten_20) (fp.isNegative kitten_21))))
(define-fun spoon_28 ((kitten_22 (_ FloatingPoint 8 24)) (kitten_23 (_ FloatingPoint 8 24))) Bool (or (and (fp.isPositive kitten_22) (fp.isNegative kitten_23)) (and (fp.isNegative kitten_22) (fp.isPositive kitten_23))))
(define-fun spoon_29 ((kitten_24 (_ FloatingPoint 8 24)) (kitten_25 (_ FloatingPoint 8 24)) (kitten_26 (_ FloatingPoint 8 24))) Bool (and (=> (spoon_27 kitten_25 kitten_26) (fp.isPositive kitten_24)) (=> (spoon_28 kitten_25 kitten_26) (fp.isNegative kitten_24))))
(define-fun spoon_30 ((kitten_27 Real)) Real (* kitten_27 kitten_27))
(declare-fun spoon_31 (Real) Real)
(define-fun spoon_32 ((kitten_28 (_ FloatingPoint 8 24)) (kitten_29 Real)) Bool (let ((_let_0 (/ 0 1))) (or (and (fp.isPositive kitten_28) (< _let_0 kitten_29)) (and (fp.isNegative kitten_28) (< kitten_29 _let_0)))))
(declare-datatypes ((potato_12 0)) (((mk_potato_12 (get_potato_12_a (_ FloatingPoint 8 24))))))

(declare-sort potato_13 0)
(define-fun spoon_33 ((kitten_30 (_ FloatingPoint 8 24))) Bool (let ((_let_0 (fp (_ bv0 1) (_ bv139 8) (_ bv0 23)))) (and (spoon_1 kitten_30) (and (fp.leq (fp.neg _let_0) kitten_30) (fp.leq kitten_30 _let_0)))))
(declare-fun spoon_34 (potato_13 potato_13) Bool)
(declare-fun spoon_35 ((_ FloatingPoint 8 24)) potato_5)
(declare-fun spoon_36 (potato_5) Bool)
(declare-fun spoon_37 (potato_5) (_ FloatingPoint 8 24))
(declare-fun cat_38 () potato_13)
(declare-datatypes ((potato_14 0)) (((mk_potato_14 (get_potato_14_a potato_13)))))

(define-fun spoon_39 ((kitten_31 potato_14)) potato_13 (get_potato_14_a kitten_31))
(declare-fun spoon_40 (potato_13) (_ FloatingPoint 8 24))
(declare-fun spoon_41 ((_ FloatingPoint 8 24)) potato_13)
(assert (forall ((kitten_32 potato_13)) (! (= (spoon_41 (spoon_40 kitten_32)) kitten_32) :pattern ((spoon_40 kitten_32)))))
(assert (forall ((kitten_33 potato_13)) (! (spoon_33 (spoon_40 kitten_33)) :pattern ((spoon_40 kitten_33)))))
(assert (forall ((kitten_34 (_ FloatingPoint 8 24))) (! (=> (spoon_33 kitten_34) (= (spoon_40 (spoon_41 kitten_34)) kitten_34)) :pattern ((spoon_40 (spoon_41 kitten_34))))))
(declare-datatypes ((potato_15 0)) (((mk_potato_15 (get_potato_15_a potato_13) (get_potato_15_b potato_13)))))

(define-fun spoon_42 ((kitten_35 potato_15)) potato_13 (get_potato_15_a kitten_35))
(define-fun spoon_43 ((kitten_36 potato_15)) potato_13 (get_potato_15_b kitten_36))
(declare-datatypes ((potato_16 0)) (((mk_potato_16 (get_potato_16_a potato_15)))))

(define-fun spoon_44 ((kitten_37 potato_16)) potato_15 (get_potato_16_a kitten_37))
(declare-datatypes ((potato_17 0)) (((mk_potato_17 (get_potato_17_a potato_15)))))

(define-fun spoon_45 ((kitten_38 potato_17)) potato_15 (get_potato_17_a kitten_38))
(define-fun spoon_46 ((kitten_39 potato_17) (kitten_40 potato_17)) Bool (let ((_let_0 (get_potato_17_a kitten_39))) (let ((_let_1 (get_potato_17_a kitten_40))) (ite (and (= (spoon_40 (get_potato_15_a _let_0)) (spoon_40 (get_potato_15_a _let_1))) (= (spoon_40 (get_potato_15_b _let_0)) (spoon_40 (get_potato_15_b _let_1)))) true false))))
(declare-fun cat_47 () Int)
(declare-fun spoon_48 (potato_17) Int)
(declare-fun cat_49 () Int)
(declare-fun spoon_50 (potato_17) Int)
(assert (<= 0 cat_47))
(assert (forall ((kitten_41 potato_17)) (<= 0 (spoon_48 kitten_41)) ))
(assert (<= 0 cat_49))
(assert (forall ((kitten_42 potato_17)) (<= 0 (spoon_50 kitten_42)) ))
(declare-fun cat_51 () Int)
(declare-fun cat_52 () Int)
(declare-fun cat_53 () Int)
(assert (<= 0 cat_51))
(assert (< cat_51 cat_52))
(assert (<= 0 cat_53))
(declare-fun cat_54 () Int)
(declare-fun cat_55 () Int)
(declare-fun cat_56 () Int)
(assert (<= 0 cat_54))
(assert (< cat_54 cat_55))
(assert (<= 0 cat_56))
(declare-fun spoon_57 (potato_17 potato_17) Bool)
(declare-fun cat_58 () potato_17)
(declare-datatypes ((potato_18 0)) (((mk_potato_18 (get_potato_18_a potato_17)))))

(define-fun spoon_59 ((kitten_43 potato_18)) potato_17 (get_potato_18_a kitten_43))
(declare-datatypes ((potato_19 0)) (((mk_potato_19 (get_potato_19_a (Array Int potato_17))))))

(declare-fun spoon_60 ((Array Int potato_17) Int Int) (Array Int potato_17))
(assert (forall ((kitten_44 (Array Int potato_17))) (forall ((kitten_45 Int)) (! (= (spoon_60 kitten_44 kitten_45 kitten_45) kitten_44) :pattern ((spoon_60 kitten_44 kitten_45 kitten_45)))) ))
(assert (forall ((kitten_46 (Array Int potato_17))) (forall ((kitten_47 Int)) (forall ((kitten_48 Int)) (forall ((kitten_49 Int)) (! (= (select (spoon_60 kitten_46 kitten_47 kitten_48) kitten_49) (select kitten_46 (- kitten_49 (- kitten_48 kitten_47)))) :pattern ((select (spoon_60 kitten_46 kitten_47 kitten_48) kitten_49)))) ) ) ))
(define-fun spoon_61 ((kitten_50 (Array Int potato_17)) (kitten_51 Int) (kitten_52 Int) (kitten_53 (Array Int potato_17)) (kitten_54 Int) (kitten_55 Int)) Bool (ite (and (ite (<= kitten_51 kitten_52) (and (<= kitten_54 kitten_55) (= (- kitten_52 kitten_51) (- kitten_55 kitten_54))) (< kitten_55 kitten_54)) (forall ((kitten_56 Int)) (=> (and (<= kitten_51 kitten_56) (<= kitten_56 kitten_52)) (= (spoon_46 (select kitten_50 kitten_56) (select kitten_53 (+ (- kitten_54 kitten_51) kitten_56))) true)) )) true false))
(assert (forall ((kitten_57 (Array Int potato_17)) (kitten_58 (Array Int potato_17))) (forall ((kitten_59 Int) (kitten_60 Int) (kitten_61 Int) (kitten_62 Int)) (=> (= (spoon_61 kitten_58 kitten_61 kitten_62 kitten_57 kitten_59 kitten_60) true) (and (ite (<= kitten_59 kitten_60) (and (<= kitten_61 kitten_62) (= (- kitten_60 kitten_59) (- kitten_62 kitten_61))) (< kitten_62 kitten_61)) (forall ((kitten_63 Int)) (=> (and (<= kitten_59 kitten_63) (<= kitten_63 kitten_60)) (= (spoon_46 (select kitten_57 kitten_63) (select kitten_58 (+ (- kitten_61 kitten_59) kitten_63))) true)) ))) ) ))
(declare-fun cat_62 () (Array Int potato_17))
(declare-fun cat_63 () Int)
(declare-fun spoon_64 ((Array Int potato_17)) Int)
(declare-fun cat_65 () Int)
(declare-fun spoon_66 ((Array Int potato_17)) Int)
(declare-fun cat_67 () Int)
(declare-fun spoon_68 ((Array Int potato_17)) Int)
(assert (<= 0 cat_63))
(assert (forall ((kitten_64 (Array Int potato_17))) (<= 0 (spoon_64 kitten_64)) ))
(assert (<= 0 cat_65))
(assert (forall ((kitten_65 (Array Int potato_17))) (<= 0 (spoon_66 kitten_65)) ))
(assert (<= 0 cat_67))
(assert (forall ((kitten_66 (Array Int potato_17))) (<= 0 (spoon_68 kitten_66)) ))
(declare-fun spoon_69 ((Array Int potato_17) (Array Int potato_17)) Bool)
(declare-datatypes ((potato_20 0)) (((mk_potato_20 (get_potato_20_a potato_10) (get_potato_20_b (Array Int potato_17))))))

(define-fun spoon_70 ((kitten_67 potato_20)) potato_10 (get_potato_20_a kitten_67))
(define-fun spoon_71 ((kitten_68 potato_20)) (Array Int potato_17) (get_potato_20_b kitten_68))
(declare-datatypes ((potato_21 0)) (((mk_potato_21 (get_potato_21_a potato_20)))))

(define-fun spoon_72 ((kitten_69 potato_21)) potato_20 (get_potato_21_a kitten_69))
(declare-datatypes ((potato_22 0)) (((mk_potato_22 (get_potato_22_a potato_20)))))

(define-fun spoon_73 ((kitten_70 potato_22)) potato_20 (get_potato_22_a kitten_70))
(define-fun spoon_74 ((kitten_71 potato_22) (kitten_72 potato_22)) Bool (let ((_let_0 (get_potato_22_a kitten_71))) (let ((_let_1 (get_potato_22_a kitten_72))) (ite (and (= (spoon_17 (get_potato_20_a _let_0)) (spoon_17 (get_potato_20_a _let_1))) (= (spoon_61 (get_potato_20_b _let_0) 1 30 (get_potato_20_b _let_1) 1 30) true)) true false))))
(declare-fun cat_75 () Int)
(declare-fun spoon_76 (potato_22) Int)
(declare-fun cat_77 () Int)
(declare-fun spoon_78 (potato_22) Int)
(assert (<= 0 cat_75))
(assert (forall ((kitten_73 potato_22)) (<= 0 (spoon_76 kitten_73)) ))
(assert (<= 0 cat_77))
(assert (forall ((kitten_74 potato_22)) (<= 0 (spoon_78 kitten_74)) ))
(declare-fun cat_79 () Int)
(declare-fun cat_80 () Int)
(declare-fun cat_81 () Int)
(assert (<= 0 cat_79))
(assert (< cat_79 cat_80))
(assert (<= 0 cat_81))
(declare-fun cat_82 () Int)
(declare-fun cat_83 () Int)
(declare-fun cat_84 () Int)
(assert (<= 0 cat_82))
(assert (< cat_82 cat_83))
(assert (<= 0 cat_84))
(declare-fun spoon_85 (potato_22 potato_22) Bool)
(declare-fun cat_86 () potato_22)
(declare-datatypes ((potato_23 0)) (((mk_potato_23 (get_potato_23_a potato_22)))))

(define-fun spoon_87 ((kitten_75 potato_23)) potato_22 (get_potato_23_a kitten_75))
(declare-sort potato_24 0)
(declare-fun spoon_88 (potato_24) Int)
(assert (forall ((kitten_76 potato_24)) (let ((_let_0 (spoon_88 kitten_76))) (and (<= 0 _let_0) (<= _let_0 150000))) ))
(define-fun spoon_89 ((kitten_77 Int)) Bool (and (<= 0 kitten_77) (<= kitten_77 150000)))
(declare-fun spoon_90 (Int) potato_5)
(declare-fun spoon_91 (potato_5) Bool)
(declare-fun spoon_92 (potato_5) Int)
(declare-fun spoon_93 (potato_24 potato_24) Bool)
(declare-fun cat_94 () potato_24)
(declare-datatypes ((potato_25 0)) (((mk_potato_25 (get_potato_25_a potato_24)))))

(define-fun spoon_95 ((kitten_78 potato_25)) potato_24 (get_potato_25_a kitten_78))
(define-fun spoon_96 ((kitten_79 potato_24)) Int (spoon_88 kitten_79))
(declare-fun spoon_97 (Int) potato_24)
(assert (forall ((kitten_80 potato_24)) (! (= (spoon_97 (spoon_96 kitten_80)) kitten_80) :pattern ((spoon_96 kitten_80)))))
(assert (forall ((kitten_81 potato_24)) (! (spoon_89 (spoon_96 kitten_81)) :pattern ((spoon_96 kitten_81)))))
(assert (forall ((kitten_82 Int)) (! (=> (spoon_89 kitten_82) (= (spoon_96 (spoon_97 kitten_82)) kitten_82)) :pattern ((spoon_96 (spoon_97 kitten_82))))))
(declare-datatypes ((potato_26 0)) (((mk_potato_26 (get_potato_26_a potato_24) (get_potato_26_b potato_24)))))

(define-fun spoon_98 ((kitten_83 potato_26)) potato_24 (get_potato_26_a kitten_83))
(define-fun spoon_99 ((kitten_84 potato_26)) potato_24 (get_potato_26_b kitten_84))
(declare-datatypes ((potato_27 0)) (((mk_potato_27 (get_potato_27_a potato_26)))))

(define-fun spoon_100 ((kitten_85 potato_27)) potato_26 (get_potato_27_a kitten_85))
(declare-datatypes ((potato_28 0)) (((mk_potato_28 (get_potato_28_a potato_26)))))

(define-fun spoon_101 ((kitten_86 potato_28)) potato_26 (get_potato_28_a kitten_86))
(define-fun spoon_102 ((kitten_87 potato_28) (kitten_88 potato_28)) Bool (let ((_let_0 (get_potato_28_a kitten_87))) (let ((_let_1 (get_potato_28_a kitten_88))) (ite (and (= (spoon_96 (get_potato_26_a _let_0)) (spoon_96 (get_potato_26_a _let_1))) (= (spoon_96 (get_potato_26_b _let_0)) (spoon_96 (get_potato_26_b _let_1)))) true false))))
(declare-fun cat_103 () Int)
(declare-fun spoon_104 (potato_28) Int)
(declare-fun cat_105 () Int)
(declare-fun spoon_106 (potato_28) Int)
(assert (<= 0 cat_103))
(assert (forall ((kitten_89 potato_28)) (<= 0 (spoon_104 kitten_89)) ))
(assert (<= 0 cat_105))
(assert (forall ((kitten_90 potato_28)) (<= 0 (spoon_106 kitten_90)) ))
(declare-fun cat_107 () Int)
(declare-fun cat_108 () Int)
(declare-fun cat_109 () Int)
(assert (<= 0 cat_107))
(assert (< cat_107 cat_108))
(assert (<= 0 cat_109))
(declare-fun cat_110 () Int)
(declare-fun cat_111 () Int)
(declare-fun cat_112 () Int)
(assert (<= 0 cat_110))
(assert (< cat_110 cat_111))
(assert (<= 0 cat_112))
(declare-fun spoon_113 (potato_28 potato_28) Bool)
(declare-fun cat_114 () potato_28)
(declare-datatypes ((potato_29 0)) (((mk_potato_29 (get_potato_29_a potato_28)))))

(define-fun spoon_115 ((kitten_91 potato_29)) potato_28 (get_potato_29_a kitten_91))
(declare-datatypes ((potato_30 0)) (((mk_potato_30 (get_potato_30_a potato_22) (get_potato_30_b potato_28)))))

(define-fun spoon_116 ((kitten_92 potato_30)) potato_22 (get_potato_30_a kitten_92))
(define-fun spoon_117 ((kitten_93 potato_30)) potato_28 (get_potato_30_b kitten_93))
(declare-datatypes ((potato_31 0)) (((mk_potato_31 (get_potato_31_a potato_30)))))

(define-fun spoon_118 ((kitten_94 potato_31)) potato_30 (get_potato_31_a kitten_94))
(declare-datatypes ((potato_32 0)) (((mk_potato_32 (get_potato_32_a potato_30)))))

(define-fun spoon_119 ((kitten_95 potato_32)) potato_30 (get_potato_32_a kitten_95))
(define-fun spoon_120 ((kitten_96 potato_32) (kitten_97 potato_32)) Bool (let ((_let_0 (get_potato_32_a kitten_96))) (let ((_let_1 (get_potato_32_a kitten_97))) (ite (and (= (spoon_74 (get_potato_30_a _let_0) (get_potato_30_a _let_1)) true) (= (spoon_102 (get_potato_30_b _let_0) (get_potato_30_b _let_1)) true)) true false))))
(declare-fun cat_121 () Int)
(declare-fun spoon_122 (potato_32) Int)
(declare-fun cat_123 () Int)
(declare-fun spoon_124 (potato_32) Int)
(assert (<= 0 cat_121))
(assert (forall ((kitten_98 potato_32)) (<= 0 (spoon_122 kitten_98)) ))
(assert (<= 0 cat_123))
(assert (forall ((kitten_99 potato_32)) (<= 0 (spoon_124 kitten_99)) ))
(declare-fun cat_125 () Int)
(declare-fun cat_126 () Int)
(declare-fun cat_127 () Int)
(assert (<= 0 cat_125))
(assert (< cat_125 cat_126))
(assert (<= 0 cat_127))
(declare-fun cat_128 () Int)
(declare-fun cat_129 () Int)
(declare-fun cat_130 () Int)
(assert (<= 0 cat_128))
(assert (< cat_128 cat_129))
(assert (<= 0 cat_130))
(declare-fun spoon_131 (potato_32 potato_32) Bool)
(declare-fun cat_132 () potato_32)
(declare-datatypes ((potato_33 0)) (((mk_potato_33 (get_potato_33_a potato_32)))))

(define-fun spoon_133 ((kitten_100 potato_33)) potato_32 (get_potato_33_a kitten_100))
(define-fun spoon_134 ((kitten_101 Int) (kitten_102 Bool) (kitten_103 Bool) (kitten_104 Bool) (kitten_105 Bool)) Bool (=> (or (= kitten_102 true) (<= 0 150000)) (spoon_89 kitten_101)))
(declare-fun cat_135 () Int)
(declare-fun cat_136 () Int)
(declare-fun cat_137 () potato_32)
(declare-fun cat_138 () Int)
(declare-fun cat_139 () Int)
(define-fun spoon_140 ((kitten_106 (_ FloatingPoint 8 24)) (kitten_107 Bool) (kitten_108 Bool) (kitten_109 Bool) (kitten_110 Bool)) Bool (let ((_let_0 (fp (_ bv0 1) (_ bv139 8) (_ bv0 23)))) (=> (or (= kitten_107 true) (fp.leq (fp.neg _let_0) _let_0)) (spoon_33 kitten_106))))
(define-fun spoon_141 ((kitten_111 Int) (kitten_112 Bool) (kitten_113 Bool) (kitten_114 Bool) (kitten_115 Bool)) Bool (=> (or (= kitten_112 true) (<= 3 30)) (spoon_10 kitten_111)))
(declare-fun cat_142 () potato_24)
(assert (= (spoon_88 cat_142) 150000))
(declare-fun cat_143 () Int)
(declare-fun cat_144 () potato_24)
(declare-fun cat_145 () potato_24)
(declare-fun cat_146 () potato_24)
(declare-fun cat_147 () potato_24)
(declare-fun cat_148 () potato_24)
(declare-fun cat_149 () potato_10)
(declare-fun cat_150 () (Array Int potato_17))
(declare-fun cat_151 () potato_24)
(declare-fun cat_152 () potato_24)
(declare-fun cat_153 () potato_10)
(declare-fun cat_154 () (Array Int potato_17))
(declare-fun cat_155 () potato_24)
(declare-fun cat_156 () potato_24)
(declare-fun cat_157 () potato_30)
(declare-fun cat_158 () potato_31)
(declare-fun cat_159 () potato_30)
(declare-fun cat_160 () potato_31)
(declare-fun cat_161 () potato_30)
(assert (spoon_89 cat_135))
(assert (= cat_157 (get_potato_32_a cat_137)))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (<= 149000 _let_0) (= cat_158 (mk_potato_31 cat_157))))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (<= 149000 _let_0) (= cat_159 (mk_potato_30 (get_potato_30_a cat_157) (mk_potato_28 (mk_potato_26 (get_potato_26_a (get_potato_28_a (get_potato_30_b cat_157))) cat_142))))))))
(assert (let ((_let_0 (+ (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))) 1000))) (=> (< (- cat_135 1000) (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137)))))) (=> (not (<= 149000 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (and (= cat_143 _let_0) (spoon_89 _let_0))))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= (spoon_96 cat_144) cat_143)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= (get_potato_26_a (get_potato_28_a (get_potato_30_b cat_157))) cat_145)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_144 cat_146)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_147 cat_145)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_148 cat_146)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= (get_potato_30_a cat_157) (mk_potato_22 (mk_potato_20 cat_149 cat_150)))))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_151 cat_147)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_152 cat_148)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_153 cat_149)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_154 cat_150)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_155 cat_151)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_156 cat_152)))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_160 (mk_potato_31 cat_157))))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_161 (mk_potato_30 (mk_potato_22 (mk_potato_20 cat_153 cat_154)) (mk_potato_28 (mk_potato_26 cat_155 cat_156))))))))
(assert (let ((_let_0 (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (=> (< (- cat_135 1000) _let_0) (=> (not (<= 149000 _let_0)) (= cat_159 cat_161)))))
(assert (=> (not (< (- cat_135 1000) (spoon_96 (get_potato_26_b (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))))) (= cat_159 cat_157)))
(assert (< cat_135 (spoon_96 (get_potato_26_a (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137)))))))
(assert (not (<= (- (spoon_96 (get_potato_26_a (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))) 1000) cat_135)))
(assert (not (spoon_89 (- (spoon_96 (get_potato_26_a (get_potato_28_a (get_potato_30_b (get_potato_32_a cat_137))))) 1000))))
(check-sat)
(exit)
