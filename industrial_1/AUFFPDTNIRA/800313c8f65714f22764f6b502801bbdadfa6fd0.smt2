(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFFPDTNIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(define-fun spoon_1 ((kitten_1 Float32)) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_2 (potato_2 potato_2) Bool)
(declare-const cat_3 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_4 ((kitten_2 potato_6)) Int (get_potato_6_a kitten_2))
(define-fun spoon_5 ((kitten_3 potato_7)) Bool (get_potato_7_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_8)) Real (get_potato_8_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_9)) potato_2 (get_potato_9_a kitten_5))
(define-fun spoon_8 ((kitten_6 Bool)) Int (ite (= kitten_6 true) 1 0))
(define-fun spoon_9 ((kitten_7 Int)) Bool (ite (= kitten_7 0) false true))
(define-fun spoon_10 ((kitten_8 Int)) Bool (or (= kitten_8 0) (= kitten_8 1)))
(declare-fun spoon_11 (Bool) potato_5)
(declare-fun spoon_12 (potato_5) Bool)
(declare-fun spoon_13 (potato_5) Bool)
(declare-sort potato_10 0)
(define-fun spoon_14 ((kitten_9 Int)) Bool (and (<= 0 kitten_9) (<= kitten_9 150000)))
(declare-fun spoon_15 (Int) potato_5)
(declare-fun spoon_16 (potato_5) Bool)
(declare-fun spoon_17 (potato_5) Int)
(declare-fun spoon_18 (potato_10 potato_10) Bool)
(declare-const cat_19 potato_10)
(declare-datatypes () ((potato_11 (mk_potato_11 (get_potato_11_a potato_10)))))
(define-fun spoon_20 ((kitten_10 potato_11)) potato_10 (get_potato_11_a kitten_10))
(define-fun spoon_21 ((kitten_11 Int) (kitten_12 Bool) (kitten_13 Bool) (kitten_14 Bool)) Bool (=> (or (= kitten_12 true) (<= 0 150000)) (spoon_14 kitten_11)))
(declare-fun spoon_22 (potato_10) Int)
(declare-fun spoon_23 (Int) potato_10)
(assert (forall ((kitten_15 potato_10)) (! (= (spoon_23 (spoon_22 kitten_15)) kitten_15) :pattern ((spoon_22 kitten_15)))))
(assert (forall ((kitten_16 potato_10)) (! (spoon_14 (spoon_22 kitten_16)) :pattern ((spoon_22 kitten_16)))))
(assert (forall ((kitten_17 Int)) (! (=> (spoon_14 kitten_17) (= (spoon_22 (spoon_23 kitten_17)) kitten_17)) :pattern ((spoon_22 (spoon_23 kitten_17))))))
(declare-datatypes () ((potato_12 (mk_potato_12 (get_potato_12_a potato_10) (get_potato_12_b potato_10)))))
(define-fun spoon_24 ((kitten_18 potato_12)) potato_10 (get_potato_12_a kitten_18))
(define-fun spoon_25 ((kitten_19 potato_12)) potato_10 (get_potato_12_b kitten_19))
(declare-datatypes () ((potato_13 (mk_potato_13 (get_potato_13_a potato_12)))))
(define-fun spoon_26 ((kitten_20 potato_13)) potato_12 (get_potato_13_a kitten_20))
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_12)))))
(define-fun spoon_27 ((kitten_21 potato_14)) potato_12 (get_potato_14_a kitten_21))
(define-fun spoon_28 ((kitten_22 potato_14) (kitten_23 potato_14)) Bool (ite (and (= (spoon_22 (get_potato_12_a (get_potato_14_a kitten_22))) (spoon_22 (get_potato_12_a (get_potato_14_a kitten_23)))) (= (spoon_22 (get_potato_12_b (get_potato_14_a kitten_22))) (spoon_22 (get_potato_12_b (get_potato_14_a kitten_23))))) true false))
(declare-const cat_29 Int)
(declare-fun spoon_30 (potato_14) Int)
(declare-const cat_31 Int)
(declare-fun spoon_32 (potato_14) Int)
(assert (<= 0 cat_29))
(assert (forall ((kitten_24 potato_14)) (<= 0 (spoon_30 kitten_24))))
(assert (<= 0 cat_31))
(assert (forall ((kitten_25 potato_14)) (<= 0 (spoon_32 kitten_25))))
(declare-const cat_33 Int)
(declare-const cat_34 Int)
(declare-const cat_35 Int)
(assert (<= 0 cat_33))
(assert (< cat_33 cat_34))
(assert (<= 0 cat_35))
(declare-const cat_36 Int)
(declare-const cat_37 Int)
(declare-const cat_38 Int)
(assert (<= 0 cat_36))
(assert (< cat_36 cat_37))
(assert (<= 0 cat_38))
(declare-fun spoon_39 (potato_14 potato_14) Bool)
(declare-const cat_40 potato_14)
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_14)))))
(define-fun spoon_41 ((kitten_26 potato_15)) potato_14 (get_potato_15_a kitten_26))
(declare-sort potato_16 0)
(define-fun spoon_42 ((kitten_27 Int)) Bool (and (<= 3 kitten_27) (<= kitten_27 30)))
(declare-fun spoon_43 (Int) potato_5)
(declare-fun spoon_44 (potato_5) Bool)
(declare-fun spoon_45 (potato_5) Int)
(declare-fun spoon_46 (potato_16 potato_16) Bool)
(declare-const cat_47 potato_16)
(declare-datatypes () ((potato_17 (mk_potato_17 (get_potato_17_a potato_16)))))
(define-fun spoon_48 ((kitten_28 potato_17)) potato_16 (get_potato_17_a kitten_28))
(declare-fun spoon_49 (potato_16) Int)
(declare-fun spoon_50 (Int) potato_16)
(assert (forall ((kitten_29 potato_16)) (! (= (spoon_50 (spoon_49 kitten_29)) kitten_29) :pattern ((spoon_49 kitten_29)))))
(assert (forall ((kitten_30 potato_16)) (! (spoon_42 (spoon_49 kitten_30)) :pattern ((spoon_49 kitten_30)))))
(assert (forall ((kitten_31 Int)) (! (=> (spoon_42 kitten_31) (= (spoon_49 (spoon_50 kitten_31)) kitten_31)) :pattern ((spoon_49 (spoon_50 kitten_31))))))
(declare-fun spoon_51 (Int) Int)
(define-fun spoon_52 ((kitten_32 Float32)) Bool (and (fp.isInfinite kitten_32) (fp.isPositive kitten_32)))
(define-fun spoon_53 ((kitten_33 Float32)) Bool (and (fp.isInfinite kitten_33) (fp.isNegative kitten_33)))
(define-fun spoon_54 ((kitten_34 Float32)) Bool (and (fp.isZero kitten_34) (fp.isPositive kitten_34)))
(define-fun spoon_55 ((kitten_35 Float32)) Bool (and (fp.isZero kitten_35) (fp.isNegative kitten_35)))
(declare-fun spoon_56 (RoundingMode Int) Float32)
(declare-fun spoon_57 (RoundingMode Float32) Int)
(declare-const cat_58 Int)
(define-fun spoon_59 ((kitten_36 Int)) Bool (and (<= (- cat_58) kitten_36) (<= kitten_36 cat_58)))
(define-fun spoon_60 ((kitten_37 Int)) Bool (and (<= (- 16777216) kitten_37) (<= kitten_37 16777216)))
(define-fun spoon_61 ((kitten_38 Float32) (kitten_39 Float32)) Bool (or (and (fp.isPositive kitten_38) (fp.isPositive kitten_39)) (and (fp.isNegative kitten_38) (fp.isNegative kitten_39))))
(define-fun spoon_62 ((kitten_40 Float32) (kitten_41 Float32)) Bool (or (and (fp.isPositive kitten_40) (fp.isNegative kitten_41)) (and (fp.isNegative kitten_40) (fp.isPositive kitten_41))))
(define-fun spoon_63 ((kitten_42 Float32) (kitten_43 Float32) (kitten_44 Float32)) Bool (and (=> (spoon_61 kitten_43 kitten_44) (fp.isPositive kitten_42)) (=> (spoon_62 kitten_43 kitten_44) (fp.isNegative kitten_42))))
(define-fun spoon_64 ((kitten_45 Real)) Real (* kitten_45 kitten_45))
(declare-fun spoon_65 (Real) Real)
(define-fun spoon_66 ((kitten_46 Float32) (kitten_47 Real)) Bool (or (and (fp.isPositive kitten_46) (< 0.0 kitten_47)) (and (fp.isNegative kitten_46) (< kitten_47 0.0))))
(declare-fun spoon_67 (Float32) Bool)
(declare-datatypes () ((potato_18 (mk_potato_18 (get_potato_18_a Float32)))))
(declare-sort potato_19 0)
(define-fun spoon_68 ((kitten_48 Float32)) Bool (and (spoon_1 kitten_48) (and (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) kitten_48) (fp.leq kitten_48 (fp #b0 #b10001011 #b00000000000000000000000)))))
(declare-fun spoon_69 (potato_19 potato_19) Bool)
(declare-fun spoon_70 (Float32) potato_5)
(declare-fun spoon_71 (potato_5) Bool)
(declare-fun spoon_72 (potato_5) Float32)
(declare-const cat_73 potato_19)
(declare-datatypes () ((potato_20 (mk_potato_20 (get_potato_20_a potato_19)))))
(define-fun spoon_74 ((kitten_49 potato_20)) potato_19 (get_potato_20_a kitten_49))
(declare-fun spoon_75 (potato_19) Float32)
(declare-fun spoon_76 (Float32) potato_19)
(assert (forall ((kitten_50 potato_19)) (! (= (spoon_76 (spoon_75 kitten_50)) kitten_50) :pattern ((spoon_75 kitten_50)))))
(assert (forall ((kitten_51 potato_19)) (! (spoon_68 (spoon_75 kitten_51)) :pattern ((spoon_75 kitten_51)))))
(assert (forall ((kitten_52 Float32)) (! (=> (spoon_68 kitten_52) (= (spoon_75 (spoon_76 kitten_52)) kitten_52)) :pattern ((spoon_75 (spoon_76 kitten_52))))))
(declare-datatypes () ((potato_21 (mk_potato_21 (get_potato_21_a potato_19) (get_potato_21_b potato_19)))))
(declare-datatypes () ((potato_22 (mk_potato_22 (get_potato_22_a potato_21)))))
(define-fun spoon_77 ((kitten_53 potato_22)) potato_21 (get_potato_22_a kitten_53))
(declare-datatypes () ((potato_23 (mk_potato_23 (get_potato_23_a potato_21)))))
(define-fun spoon_78 ((kitten_54 potato_23)) potato_21 (get_potato_23_a kitten_54))
(define-fun spoon_79 ((kitten_55 potato_23) (kitten_56 potato_23)) Bool (ite (and (= (spoon_75 (get_potato_21_a (get_potato_23_a kitten_55))) (spoon_75 (get_potato_21_a (get_potato_23_a kitten_56)))) (= (spoon_75 (get_potato_21_b (get_potato_23_a kitten_55))) (spoon_75 (get_potato_21_b (get_potato_23_a kitten_56))))) true false))
(declare-const cat_80 Int)
(declare-fun spoon_81 (potato_23) Int)
(declare-const cat_82 Int)
(declare-fun spoon_83 (potato_23) Int)
(assert (<= 0 cat_80))
(assert (forall ((kitten_57 potato_23)) (<= 0 (spoon_81 kitten_57))))
(assert (<= 0 cat_82))
(assert (forall ((kitten_58 potato_23)) (<= 0 (spoon_83 kitten_58))))
(declare-const cat_84 Int)
(declare-const cat_85 Int)
(declare-const cat_86 Int)
(assert (<= 0 cat_84))
(assert (< cat_84 cat_85))
(assert (<= 0 cat_86))
(declare-const cat_87 Int)
(declare-const cat_88 Int)
(declare-const cat_89 Int)
(assert (<= 0 cat_87))
(assert (< cat_87 cat_88))
(assert (<= 0 cat_89))
(declare-fun spoon_90 (potato_23 potato_23) Bool)
(declare-const cat_91 potato_23)
(declare-datatypes () ((potato_24 (mk_potato_24 (get_potato_24_a potato_23)))))
(define-fun spoon_92 ((kitten_59 potato_24)) potato_23 (get_potato_24_a kitten_59))
(declare-datatypes () ((potato_25 (mk_potato_25 (get_potato_25_a (Array Int potato_23))))))
(declare-fun spoon_93 ((Array Int potato_23) Int Int) (Array Int potato_23))
(assert (forall ((kitten_60 (Array Int potato_23))) (forall ((kitten_61 Int)) (! (= (spoon_93 kitten_60 kitten_61 kitten_61) kitten_60) :pattern ((spoon_93 kitten_60 kitten_61 kitten_61))))))
(assert (forall ((kitten_62 (Array Int potato_23))) (forall ((kitten_63 Int)) (forall ((kitten_64 Int)) (forall ((kitten_65 Int)) (! (= (select (spoon_93 kitten_62 kitten_63 kitten_64) kitten_65) (select kitten_62 (- kitten_65 (- kitten_64 kitten_63)))) :pattern ((select (spoon_93 kitten_62 kitten_63 kitten_64) kitten_65))))))))
(declare-fun spoon_94 ((Array Int potato_23) Int Int (Array Int potato_23) Int Int) (Array Int potato_23))
(assert (forall ((kitten_66 (Array Int potato_23)) (kitten_67 (Array Int potato_23))) (forall ((kitten_68 Int) (kitten_69 Int) (kitten_70 Int) (kitten_71 Int)) (forall ((kitten_72 Int)) (! (and (=> (and (<= kitten_68 kitten_72) (<= kitten_72 kitten_69)) (= (select (spoon_94 kitten_66 kitten_68 kitten_69 kitten_67 kitten_70 kitten_71) kitten_72) (select kitten_66 kitten_72))) (=> (< kitten_69 kitten_72) (= (select (spoon_94 kitten_66 kitten_68 kitten_69 kitten_67 kitten_70 kitten_71) kitten_72) (select kitten_67 (+ (- kitten_72 kitten_69) (- kitten_70 1)))))) :pattern ((select (spoon_94 kitten_66 kitten_68 kitten_69 kitten_67 kitten_70 kitten_71) kitten_72)))))))
(declare-fun spoon_95 (potato_23 Int) (Array Int potato_23))
(assert (forall ((kitten_73 potato_23)) (forall ((kitten_74 Int)) (! (= (select (spoon_95 kitten_73 kitten_74) kitten_74) kitten_73) :pattern ((select (spoon_95 kitten_73 kitten_74) kitten_74))))))
(define-fun spoon_96 ((kitten_75 (Array Int potato_23)) (kitten_76 Int) (kitten_77 Int) (kitten_78 (Array Int potato_23)) (kitten_79 Int) (kitten_80 Int)) Bool (ite (and (ite (<= kitten_76 kitten_77) (and (<= kitten_79 kitten_80) (= (- kitten_77 kitten_76) (- kitten_80 kitten_79))) (< kitten_80 kitten_79)) (forall ((kitten_81 Int)) (=> (and (<= kitten_76 kitten_81) (<= kitten_81 kitten_77)) (= (spoon_79 (select kitten_75 kitten_81) (select kitten_78 (+ (- kitten_79 kitten_76) kitten_81))) true)))) true false))
(assert (forall ((kitten_82 (Array Int potato_23)) (kitten_83 (Array Int potato_23))) (forall ((kitten_84 Int) (kitten_85 Int) (kitten_86 Int) (kitten_87 Int)) (=> (= (spoon_96 kitten_83 kitten_86 kitten_87 kitten_82 kitten_84 kitten_85) true) (and (ite (<= kitten_84 kitten_85) (and (<= kitten_86 kitten_87) (= (- kitten_85 kitten_84) (- kitten_87 kitten_86))) (< kitten_87 kitten_86)) (forall ((kitten_88 Int)) (=> (and (<= kitten_84 kitten_88) (<= kitten_88 kitten_85)) (= (spoon_79 (select kitten_82 kitten_88) (select kitten_83 (+ (- kitten_86 kitten_84) kitten_88))) true))))))))
(declare-const cat_97 (Array Int potato_23))
(declare-const cat_98 Int)
(declare-fun spoon_99 ((Array Int potato_23)) Int)
(declare-const cat_100 Int)
(declare-fun spoon_101 ((Array Int potato_23)) Int)
(declare-const cat_102 Int)
(declare-fun spoon_103 ((Array Int potato_23)) Int)
(assert (<= 0 cat_98))
(assert (forall ((kitten_89 (Array Int potato_23))) (<= 0 (spoon_99 kitten_89))))
(assert (<= 0 cat_100))
(assert (forall ((kitten_90 (Array Int potato_23))) (<= 0 (spoon_101 kitten_90))))
(assert (<= 0 cat_102))
(assert (forall ((kitten_91 (Array Int potato_23))) (<= 0 (spoon_103 kitten_91))))
(declare-fun spoon_104 ((Array Int potato_23) (Array Int potato_23)) Bool)
(declare-datatypes () ((potato_26 (mk_potato_26 (get_potato_26_a potato_16) (get_potato_26_b (Array Int potato_23))))))
(define-fun spoon_105 ((kitten_92 potato_26)) potato_16 (get_potato_26_a kitten_92))
(define-fun spoon_106 ((kitten_93 potato_26)) (Array Int potato_23) (get_potato_26_b kitten_93))
(declare-datatypes () ((potato_27 (mk_potato_27 (get_potato_27_a potato_26)))))
(define-fun spoon_107 ((kitten_94 potato_27)) potato_26 (get_potato_27_a kitten_94))
(declare-datatypes () ((potato_28 (mk_potato_28 (get_potato_28_a potato_26)))))
(define-fun spoon_108 ((kitten_95 potato_28)) potato_26 (get_potato_28_a kitten_95))
(define-fun spoon_109 ((kitten_96 potato_28) (kitten_97 potato_28)) Bool (ite (and (= (spoon_49 (get_potato_26_a (get_potato_28_a kitten_96))) (spoon_49 (get_potato_26_a (get_potato_28_a kitten_97)))) (= (spoon_96 (get_potato_26_b (get_potato_28_a kitten_96)) 1 30 (get_potato_26_b (get_potato_28_a kitten_97)) 1 30) true)) true false))
(declare-const cat_110 Int)
(declare-fun spoon_111 (potato_28) Int)
(declare-const cat_112 Int)
(declare-fun spoon_113 (potato_28) Int)
(assert (<= 0 cat_110))
(assert (forall ((kitten_98 potato_28)) (<= 0 (spoon_111 kitten_98))))
(assert (<= 0 cat_112))
(assert (forall ((kitten_99 potato_28)) (<= 0 (spoon_113 kitten_99))))
(declare-const cat_114 Int)
(declare-const cat_115 Int)
(declare-const cat_116 Int)
(assert (<= 0 cat_114))
(assert (< cat_114 cat_115))
(assert (<= 0 cat_116))
(declare-const cat_117 Int)
(declare-const cat_118 Int)
(declare-const cat_119 Int)
(assert (<= 0 cat_117))
(assert (< cat_117 cat_118))
(assert (<= 0 cat_119))
(declare-fun spoon_120 (potato_28 potato_28) Bool)
(declare-const cat_121 potato_28)
(declare-datatypes () ((potato_29 (mk_potato_29 (get_potato_29_a potato_28)))))
(define-fun spoon_122 ((kitten_100 potato_29)) potato_28 (get_potato_29_a kitten_100))
(declare-datatypes () ((potato_30 (mk_potato_30 (get_potato_30_a potato_28) (get_potato_30_b potato_14)))))
(define-fun spoon_123 ((kitten_101 potato_30)) potato_28 (get_potato_30_a kitten_101))
(define-fun spoon_124 ((kitten_102 potato_30)) potato_14 (get_potato_30_b kitten_102))
(declare-datatypes () ((potato_31 (mk_potato_31 (get_potato_31_a potato_30)))))
(define-fun spoon_125 ((kitten_103 potato_31)) potato_30 (get_potato_31_a kitten_103))
(declare-datatypes () ((potato_32 (mk_potato_32 (get_potato_32_a potato_30)))))
(define-fun spoon_126 ((kitten_104 potato_32)) potato_30 (get_potato_32_a kitten_104))
(define-fun spoon_127 ((kitten_105 potato_32) (kitten_106 potato_32)) Bool (ite (and (= (spoon_109 (get_potato_30_a (get_potato_32_a kitten_105)) (get_potato_30_a (get_potato_32_a kitten_106))) true) (= (spoon_28 (get_potato_30_b (get_potato_32_a kitten_105)) (get_potato_30_b (get_potato_32_a kitten_106))) true)) true false))
(declare-const cat_128 Int)
(declare-fun spoon_129 (potato_32) Int)
(declare-const cat_130 Int)
(declare-fun spoon_131 (potato_32) Int)
(assert (<= 0 cat_128))
(assert (forall ((kitten_107 potato_32)) (<= 0 (spoon_129 kitten_107))))
(assert (<= 0 cat_130))
(assert (forall ((kitten_108 potato_32)) (<= 0 (spoon_131 kitten_108))))
(declare-const cat_132 Int)
(declare-const cat_133 Int)
(declare-const cat_134 Int)
(assert (<= 0 cat_132))
(assert (< cat_132 cat_133))
(assert (<= 0 cat_134))
(declare-const cat_135 Int)
(declare-const cat_136 Int)
(declare-const cat_137 Int)
(assert (<= 0 cat_135))
(assert (< cat_135 cat_136))
(assert (<= 0 cat_137))
(declare-fun spoon_138 (potato_32 potato_32) Bool)
(declare-const cat_139 potato_32)
(declare-datatypes () ((potato_33 (mk_potato_33 (get_potato_33_a potato_32)))))
(define-fun spoon_140 ((kitten_109 potato_33)) potato_32 (get_potato_33_a kitten_109))
(declare-sort potato_34 0)
(define-fun spoon_141 ((kitten_110 Int)) Bool (and (<= 1 kitten_110) (<= kitten_110 32)))
(declare-fun spoon_142 (Int) potato_5)
(declare-fun spoon_143 (potato_5) Bool)
(declare-fun spoon_144 (potato_5) Int)
(declare-fun spoon_145 (potato_34 potato_34) Bool)
(declare-const cat_146 potato_34)
(declare-datatypes () ((potato_35 (mk_potato_35 (get_potato_35_a potato_34)))))
(define-fun spoon_147 ((kitten_111 potato_35)) potato_34 (get_potato_35_a kitten_111))
(define-fun spoon_148 ((kitten_112 Int) (kitten_113 Bool) (kitten_114 Bool) (kitten_115 Bool)) Bool (=> (or (= kitten_113 true) (<= 1 32)) (spoon_141 kitten_112)))
(declare-fun spoon_149 (potato_34) Int)
(declare-fun spoon_150 (Int) potato_34)
(assert (forall ((kitten_116 potato_34)) (! (= (spoon_150 (spoon_149 kitten_116)) kitten_116) :pattern ((spoon_149 kitten_116)))))
(assert (forall ((kitten_117 potato_34)) (! (spoon_141 (spoon_149 kitten_117)) :pattern ((spoon_149 kitten_117)))))
(assert (forall ((kitten_118 Int)) (! (=> (spoon_141 kitten_118) (= (spoon_149 (spoon_150 kitten_118)) kitten_118)) :pattern ((spoon_149 (spoon_150 kitten_118))))))
(declare-datatypes () ((potato_36 (mk_potato_36 (get_potato_36_a (Array Int potato_32))))))
(declare-fun spoon_151 ((Array Int potato_32) Int Int) (Array Int potato_32))
(assert (forall ((kitten_119 (Array Int potato_32))) (forall ((kitten_120 Int)) (! (= (spoon_151 kitten_119 kitten_120 kitten_120) kitten_119) :pattern ((spoon_151 kitten_119 kitten_120 kitten_120))))))
(assert (forall ((kitten_121 (Array Int potato_32))) (forall ((kitten_122 Int)) (forall ((kitten_123 Int)) (forall ((kitten_124 Int)) (! (= (select (spoon_151 kitten_121 kitten_122 kitten_123) kitten_124) (select kitten_121 (- kitten_124 (- kitten_123 kitten_122)))) :pattern ((select (spoon_151 kitten_121 kitten_122 kitten_123) kitten_124))))))))
(declare-fun spoon_152 ((Array Int potato_32) Int Int (Array Int potato_32) Int Int) (Array Int potato_32))
(assert (forall ((kitten_125 (Array Int potato_32)) (kitten_126 (Array Int potato_32))) (forall ((kitten_127 Int) (kitten_128 Int) (kitten_129 Int) (kitten_130 Int)) (forall ((kitten_131 Int)) (! (and (=> (and (<= kitten_127 kitten_131) (<= kitten_131 kitten_128)) (= (select (spoon_152 kitten_125 kitten_127 kitten_128 kitten_126 kitten_129 kitten_130) kitten_131) (select kitten_125 kitten_131))) (=> (< kitten_128 kitten_131) (= (select (spoon_152 kitten_125 kitten_127 kitten_128 kitten_126 kitten_129 kitten_130) kitten_131) (select kitten_126 (+ (- kitten_131 kitten_128) (- kitten_129 1)))))) :pattern ((select (spoon_152 kitten_125 kitten_127 kitten_128 kitten_126 kitten_129 kitten_130) kitten_131)))))))
(declare-fun spoon_153 (potato_32 Int) (Array Int potato_32))
(assert (forall ((kitten_132 potato_32)) (forall ((kitten_133 Int)) (! (= (select (spoon_153 kitten_132 kitten_133) kitten_133) kitten_132) :pattern ((select (spoon_153 kitten_132 kitten_133) kitten_133))))))
(define-fun spoon_154 ((kitten_134 (Array Int potato_32)) (kitten_135 Int) (kitten_136 Int) (kitten_137 (Array Int potato_32)) (kitten_138 Int) (kitten_139 Int)) Bool (ite (and (ite (<= kitten_135 kitten_136) (and (<= kitten_138 kitten_139) (= (- kitten_136 kitten_135) (- kitten_139 kitten_138))) (< kitten_139 kitten_138)) (forall ((kitten_140 Int)) (=> (and (<= kitten_135 kitten_140) (<= kitten_140 kitten_136)) (= (spoon_127 (select kitten_134 kitten_140) (select kitten_137 (+ (- kitten_138 kitten_135) kitten_140))) true)))) true false))
(assert (forall ((kitten_141 (Array Int potato_32)) (kitten_142 (Array Int potato_32))) (forall ((kitten_143 Int) (kitten_144 Int) (kitten_145 Int) (kitten_146 Int)) (=> (= (spoon_154 kitten_142 kitten_145 kitten_146 kitten_141 kitten_143 kitten_144) true) (and (ite (<= kitten_143 kitten_144) (and (<= kitten_145 kitten_146) (= (- kitten_144 kitten_143) (- kitten_146 kitten_145))) (< kitten_146 kitten_145)) (forall ((kitten_147 Int)) (=> (and (<= kitten_143 kitten_147) (<= kitten_147 kitten_144)) (= (spoon_127 (select kitten_141 kitten_147) (select kitten_142 (+ (- kitten_145 kitten_143) kitten_147))) true))))))))
(declare-const cat_155 (Array Int potato_32))
(declare-const cat_156 Int)
(declare-fun spoon_157 ((Array Int potato_32)) Int)
(declare-const cat_158 Int)
(declare-fun spoon_159 ((Array Int potato_32)) Int)
(declare-const cat_160 Int)
(declare-fun spoon_161 ((Array Int potato_32)) Int)
(assert (<= 0 cat_156))
(assert (forall ((kitten_148 (Array Int potato_32))) (<= 0 (spoon_157 kitten_148))))
(assert (<= 0 cat_158))
(assert (forall ((kitten_149 (Array Int potato_32))) (<= 0 (spoon_159 kitten_149))))
(assert (<= 0 cat_160))
(assert (forall ((kitten_150 (Array Int potato_32))) (<= 0 (spoon_161 kitten_150))))
(declare-fun spoon_162 ((Array Int potato_32) (Array Int potato_32)) Bool)
(declare-datatypes () ((potato_37 (mk_potato_37 (get_potato_37_a potato_34) (get_potato_37_b (Array Int potato_32))))))
(define-fun spoon_163 ((kitten_151 potato_37)) potato_34 (get_potato_37_a kitten_151))
(define-fun spoon_164 ((kitten_152 potato_37)) (Array Int potato_32) (get_potato_37_b kitten_152))
(declare-datatypes () ((potato_38 (mk_potato_38 (get_potato_38_a potato_37)))))
(define-fun spoon_165 ((kitten_153 potato_38)) potato_37 (get_potato_38_a kitten_153))
(declare-datatypes () ((potato_39 (mk_potato_39 (get_potato_39_a potato_37)))))
(define-fun spoon_166 ((kitten_154 potato_39)) potato_37 (get_potato_39_a kitten_154))
(define-fun spoon_167 ((kitten_155 potato_39) (kitten_156 potato_39)) Bool (ite (and (= (spoon_149 (get_potato_37_a (get_potato_39_a kitten_155))) (spoon_149 (get_potato_37_a (get_potato_39_a kitten_156)))) (= (spoon_154 (get_potato_37_b (get_potato_39_a kitten_155)) 1 32 (get_potato_37_b (get_potato_39_a kitten_156)) 1 32) true)) true false))
(declare-const cat_168 Int)
(declare-fun spoon_169 (potato_39) Int)
(declare-const cat_170 Int)
(declare-fun spoon_171 (potato_39) Int)
(assert (<= 0 cat_168))
(assert (forall ((kitten_157 potato_39)) (<= 0 (spoon_169 kitten_157))))
(assert (<= 0 cat_170))
(assert (forall ((kitten_158 potato_39)) (<= 0 (spoon_171 kitten_158))))
(declare-const cat_172 Int)
(declare-const cat_173 Int)
(declare-const cat_174 Int)
(assert (<= 0 cat_172))
(assert (< cat_172 cat_173))
(assert (<= 0 cat_174))
(declare-const cat_175 Int)
(declare-const cat_176 Int)
(declare-const cat_177 Int)
(assert (<= 0 cat_175))
(assert (< cat_175 cat_176))
(assert (<= 0 cat_177))
(declare-fun spoon_178 (potato_39 potato_39) Bool)
(declare-const cat_179 potato_39)
(declare-datatypes () ((potato_40 (mk_potato_40 (get_potato_40_a potato_39)))))
(define-fun spoon_180 ((kitten_159 potato_40)) potato_39 (get_potato_40_a kitten_159))
(declare-const cat_181 Int)
(declare-const cat_182 Int)
(declare-const cat_183 potato_39)
(declare-const cat_184 Int)
(declare-const cat_185 Int)
(declare-fun spoon_186 (Int potato_32) potato_32)
(declare-fun spoon_187 (potato_32 Int potato_32) Bool)
(assert true)
(declare-const cat_188 Int)
(declare-const cat_189 Int)
(declare-const cat_190 Int)
(define-fun spoon_191 ((kitten_160 Float32) (kitten_161 Bool) (kitten_162 Bool) (kitten_163 Bool)) Bool (=> (or (= kitten_161 true) (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (fp #b0 #b10001011 #b00000000000000000000000))) (spoon_68 kitten_160)))
(define-fun spoon_192 ((kitten_164 Int) (kitten_165 Bool) (kitten_166 Bool) (kitten_167 Bool)) Bool (=> (or (= kitten_165 true) (<= 3 30)) (spoon_42 kitten_164)))
(declare-const cat_193 potato_34)
(declare-const cat_194 (Array Int potato_32))
(declare-const cat_195 potato_34)
(declare-const cat_196 (Array Int potato_32))
(declare-const cat_197 potato_34)
(declare-const cat_198 (Array Int potato_32))
(assert (spoon_14 cat_181))
(assert (= cat_195 cat_193))
(assert (= cat_196 cat_194))
(assert (= (mk_potato_37 cat_197 cat_198) (get_potato_39_a cat_183)))
(assert (= (spoon_149 cat_197) cat_188))
(assert (spoon_141 cat_188))
(assert (<= 1 cat_188))
(assert (not (<= cat_188 32)))
(check-sat)
(exit)
