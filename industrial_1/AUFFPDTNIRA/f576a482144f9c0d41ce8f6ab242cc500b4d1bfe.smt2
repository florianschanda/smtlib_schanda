(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFFPDTNIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(define-fun spoon_1 ((kitten_1 Float32)) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_2 (potato_2 potato_2) Bool)
(declare-const cat_3 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_4 ((kitten_2 potato_6)) Int (get_potato_6_a kitten_2))
(define-fun spoon_5 ((kitten_3 potato_7)) Bool (get_potato_7_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_8)) Real (get_potato_8_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_9)) potato_2 (get_potato_9_a kitten_5))
(define-fun spoon_8 ((kitten_6 Bool)) Int (ite (= kitten_6 true) 1 0))
(define-fun spoon_9 ((kitten_7 Int)) Bool (ite (= kitten_7 0) false true))
(define-fun spoon_10 ((kitten_8 Int)) Bool (or (= kitten_8 0) (= kitten_8 1)))
(declare-fun spoon_11 (Bool) potato_5)
(declare-fun spoon_12 (potato_5) Bool)
(declare-fun spoon_13 (potato_5) Bool)
(declare-fun spoon_14 (Int) Int)
(define-fun spoon_15 ((kitten_9 Float32)) Bool (and (fp.isInfinite kitten_9) (fp.isPositive kitten_9)))
(define-fun spoon_16 ((kitten_10 Float32)) Bool (and (fp.isInfinite kitten_10) (fp.isNegative kitten_10)))
(define-fun spoon_17 ((kitten_11 Float32)) Bool (and (fp.isZero kitten_11) (fp.isPositive kitten_11)))
(define-fun spoon_18 ((kitten_12 Float32)) Bool (and (fp.isZero kitten_12) (fp.isNegative kitten_12)))
(declare-const cat_19 Int)
(define-fun spoon_20 ((kitten_13 Int)) Bool (and (<= (- cat_19) kitten_13) (<= kitten_13 cat_19)))
(define-fun spoon_21 ((kitten_14 Int)) Bool (and (<= (- 16777216) kitten_14) (<= kitten_14 16777216)))
(define-fun spoon_22 ((kitten_15 Float32) (kitten_16 Float32)) Bool (or (and (fp.isPositive kitten_15) (fp.isPositive kitten_16)) (and (fp.isNegative kitten_15) (fp.isNegative kitten_16))))
(define-fun spoon_23 ((kitten_17 Float32) (kitten_18 Float32)) Bool (or (and (fp.isPositive kitten_17) (fp.isNegative kitten_18)) (and (fp.isNegative kitten_17) (fp.isPositive kitten_18))))
(define-fun spoon_24 ((kitten_19 Float32) (kitten_20 Float32) (kitten_21 Float32)) Bool (and (=> (spoon_22 kitten_20 kitten_21) (fp.isPositive kitten_19)) (=> (spoon_23 kitten_20 kitten_21) (fp.isNegative kitten_19))))
(define-fun spoon_25 ((kitten_22 Real)) Real (* kitten_22 kitten_22))
(declare-fun spoon_26 (Real) Real)
(define-fun spoon_27 ((kitten_23 Float32) (kitten_24 Real)) Bool (or (and (fp.isPositive kitten_23) (< 0.0 kitten_24)) (and (fp.isNegative kitten_23) (< kitten_24 0.0))))
(declare-fun spoon_28 (Float32) Bool)
(declare-datatypes () ((potato_10 (mk_potato_10 (get_potato_10_a Float32)))))
(declare-sort potato_11 0)
(define-fun spoon_29 ((kitten_25 Float32)) Bool (and (spoon_1 kitten_25) (and (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) kitten_25) (fp.leq kitten_25 (fp #b0 #b10001011 #b00000000000000000000000)))))
(declare-fun spoon_30 (potato_11 potato_11) Bool)
(declare-fun spoon_31 (Float32) potato_5)
(declare-fun spoon_32 (potato_5) Bool)
(declare-fun spoon_33 (potato_5) Float32)
(declare-const cat_34 potato_11)
(declare-datatypes () ((potato_12 (mk_potato_12 (get_potato_12_a potato_11)))))
(define-fun spoon_35 ((kitten_26 potato_12)) potato_11 (get_potato_12_a kitten_26))
(declare-fun spoon_36 (potato_11) Float32)
(declare-fun spoon_37 (Float32) potato_11)
(assert (forall ((kitten_27 potato_11)) (! (= (spoon_37 (spoon_36 kitten_27)) kitten_27) :pattern ((spoon_36 kitten_27)))))
(assert (forall ((kitten_28 potato_11)) (! (spoon_29 (spoon_36 kitten_28)) :pattern ((spoon_36 kitten_28)))))
(assert (forall ((kitten_29 Float32)) (! (=> (spoon_29 kitten_29) (= (spoon_36 (spoon_37 kitten_29)) kitten_29)) :pattern ((spoon_36 (spoon_37 kitten_29))))))
(declare-datatypes () ((potato_13 (mk_potato_13 (get_potato_13_a potato_11) (get_potato_13_b potato_11)))))
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_13)))))
(define-fun spoon_38 ((kitten_30 potato_14)) potato_13 (get_potato_14_a kitten_30))
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_13)))))
(define-fun spoon_39 ((kitten_31 potato_15)) potato_13 (get_potato_15_a kitten_31))
(define-fun spoon_40 ((kitten_32 potato_15) (kitten_33 potato_15)) Bool (ite (and (= (spoon_36 (get_potato_13_a (get_potato_15_a kitten_32))) (spoon_36 (get_potato_13_a (get_potato_15_a kitten_33)))) (= (spoon_36 (get_potato_13_b (get_potato_15_a kitten_32))) (spoon_36 (get_potato_13_b (get_potato_15_a kitten_33))))) true false))
(declare-const cat_41 Int)
(declare-fun spoon_42 (potato_15) Int)
(declare-const cat_43 Int)
(declare-fun spoon_44 (potato_15) Int)
(assert (<= 0 cat_41))
(assert (forall ((kitten_34 potato_15)) (<= 0 (spoon_42 kitten_34))))
(assert (<= 0 cat_43))
(assert (forall ((kitten_35 potato_15)) (<= 0 (spoon_44 kitten_35))))
(declare-const cat_45 Int)
(declare-const cat_46 Int)
(declare-const cat_47 Int)
(assert (<= 0 cat_45))
(assert (< cat_45 cat_46))
(assert (<= 0 cat_47))
(declare-const cat_48 Int)
(declare-const cat_49 Int)
(declare-const cat_50 Int)
(assert (<= 0 cat_48))
(assert (< cat_48 cat_49))
(assert (<= 0 cat_50))
(declare-fun spoon_51 (potato_15 potato_15) Bool)
(declare-const cat_52 potato_15)
(declare-datatypes () ((potato_16 (mk_potato_16 (get_potato_16_a potato_15)))))
(define-fun spoon_53 ((kitten_36 potato_16)) potato_15 (get_potato_16_a kitten_36))
(declare-datatypes () ((potato_17 (mk_potato_17 (get_potato_17_a (Array Int potato_15))))))
(declare-fun spoon_54 ((Array Int potato_15) Int Int) (Array Int potato_15))
(assert (forall ((kitten_37 (Array Int potato_15))) (forall ((kitten_38 Int)) (! (= (spoon_54 kitten_37 kitten_38 kitten_38) kitten_37) :pattern ((spoon_54 kitten_37 kitten_38 kitten_38))))))
(assert (forall ((kitten_39 (Array Int potato_15))) (forall ((kitten_40 Int)) (forall ((kitten_41 Int)) (forall ((kitten_42 Int)) (! (= (select (spoon_54 kitten_39 kitten_40 kitten_41) kitten_42) (select kitten_39 (- kitten_42 (- kitten_41 kitten_40)))) :pattern ((select (spoon_54 kitten_39 kitten_40 kitten_41) kitten_42))))))))
(declare-fun spoon_55 ((Array Int potato_15) Int Int (Array Int potato_15) Int Int) (Array Int potato_15))
(assert (forall ((kitten_43 (Array Int potato_15)) (kitten_44 (Array Int potato_15))) (forall ((kitten_45 Int) (kitten_46 Int) (kitten_47 Int) (kitten_48 Int)) (forall ((kitten_49 Int)) (! (and (=> (and (<= kitten_45 kitten_49) (<= kitten_49 kitten_46)) (= (select (spoon_55 kitten_43 kitten_45 kitten_46 kitten_44 kitten_47 kitten_48) kitten_49) (select kitten_43 kitten_49))) (=> (< kitten_46 kitten_49) (= (select (spoon_55 kitten_43 kitten_45 kitten_46 kitten_44 kitten_47 kitten_48) kitten_49) (select kitten_44 (+ (- kitten_49 kitten_46) (- kitten_47 1)))))) :pattern ((select (spoon_55 kitten_43 kitten_45 kitten_46 kitten_44 kitten_47 kitten_48) kitten_49)))))))
(declare-fun spoon_56 (potato_15 Int) (Array Int potato_15))
(assert (forall ((kitten_50 potato_15)) (forall ((kitten_51 Int)) (! (= (select (spoon_56 kitten_50 kitten_51) kitten_51) kitten_50) :pattern ((select (spoon_56 kitten_50 kitten_51) kitten_51))))))
(define-fun spoon_57 ((kitten_52 (Array Int potato_15)) (kitten_53 Int) (kitten_54 Int) (kitten_55 (Array Int potato_15)) (kitten_56 Int) (kitten_57 Int)) Bool (ite (and (ite (<= kitten_53 kitten_54) (and (<= kitten_56 kitten_57) (= (- kitten_54 kitten_53) (- kitten_57 kitten_56))) (< kitten_57 kitten_56)) (forall ((kitten_58 Int)) (=> (and (<= kitten_53 kitten_58) (<= kitten_58 kitten_54)) (= (spoon_40 (select kitten_52 kitten_58) (select kitten_55 (+ (- kitten_56 kitten_53) kitten_58))) true)))) true false))
(assert (forall ((kitten_59 (Array Int potato_15)) (kitten_60 (Array Int potato_15))) (forall ((kitten_61 Int) (kitten_62 Int) (kitten_63 Int) (kitten_64 Int)) (=> (= (spoon_57 kitten_60 kitten_63 kitten_64 kitten_59 kitten_61 kitten_62) true) (and (ite (<= kitten_61 kitten_62) (and (<= kitten_63 kitten_64) (= (- kitten_62 kitten_61) (- kitten_64 kitten_63))) (< kitten_64 kitten_63)) (forall ((kitten_65 Int)) (=> (and (<= kitten_61 kitten_65) (<= kitten_65 kitten_62)) (= (spoon_40 (select kitten_59 kitten_65) (select kitten_60 (+ (- kitten_63 kitten_61) kitten_65))) true))))))))
(declare-sort potato_18 0)
(define-fun spoon_58 ((kitten_66 Int)) Bool (and (<= 1 kitten_66) (<= kitten_66 100)))
(declare-fun spoon_59 (Int) potato_5)
(declare-fun spoon_60 (potato_5) Bool)
(declare-fun spoon_61 (potato_5) Int)
(declare-fun spoon_62 (potato_18 potato_18) Bool)
(declare-const cat_63 potato_18)
(declare-datatypes () ((potato_19 (mk_potato_19 (get_potato_19_a potato_18)))))
(define-fun spoon_64 ((kitten_67 potato_19)) potato_18 (get_potato_19_a kitten_67))
(declare-sort potato_20 0)
(define-fun spoon_65 ((kitten_68 Int)) Bool (and (<= 3 kitten_68) (<= kitten_68 100)))
(declare-fun spoon_66 (Int) potato_5)
(declare-fun spoon_67 (potato_5) Bool)
(declare-fun spoon_68 (potato_5) Int)
(declare-fun spoon_69 (potato_20 potato_20) Bool)
(declare-const cat_70 potato_20)
(declare-datatypes () ((potato_21 (mk_potato_21 (get_potato_21_a potato_20)))))
(define-fun spoon_71 ((kitten_69 potato_21)) potato_20 (get_potato_21_a kitten_69))
(declare-fun spoon_72 (potato_20) Int)
(declare-fun spoon_73 (Int) potato_20)
(assert (forall ((kitten_70 potato_20)) (! (= (spoon_73 (spoon_72 kitten_70)) kitten_70) :pattern ((spoon_72 kitten_70)))))
(assert (forall ((kitten_71 potato_20)) (! (spoon_65 (spoon_72 kitten_71)) :pattern ((spoon_72 kitten_71)))))
(assert (forall ((kitten_72 Int)) (! (=> (spoon_65 kitten_72) (= (spoon_72 (spoon_73 kitten_72)) kitten_72)) :pattern ((spoon_72 (spoon_73 kitten_72))))))
(declare-const cat_74 (Array Int potato_15))
(declare-const cat_75 Int)
(declare-fun spoon_76 ((Array Int potato_15)) Int)
(declare-const cat_77 Int)
(declare-fun spoon_78 ((Array Int potato_15)) Int)
(declare-const cat_79 Int)
(declare-fun spoon_80 ((Array Int potato_15)) Int)
(assert (<= 0 cat_75))
(assert (forall ((kitten_73 (Array Int potato_15))) (<= 0 (spoon_76 kitten_73))))
(assert (<= 0 cat_77))
(assert (forall ((kitten_74 (Array Int potato_15))) (<= 0 (spoon_78 kitten_74))))
(assert (<= 0 cat_79))
(assert (forall ((kitten_75 (Array Int potato_15))) (<= 0 (spoon_80 kitten_75))))
(declare-fun spoon_81 ((Array Int potato_15) (Array Int potato_15)) Bool)
(declare-datatypes () ((potato_22 (mk_potato_22 (get_potato_22_a potato_20) (get_potato_22_b (Array Int potato_15))))))
(define-fun spoon_82 ((kitten_76 potato_22)) potato_20 (get_potato_22_a kitten_76))
(define-fun spoon_83 ((kitten_77 potato_22)) (Array Int potato_15) (get_potato_22_b kitten_77))
(declare-datatypes () ((potato_23 (mk_potato_23 (get_potato_23_a potato_22)))))
(define-fun spoon_84 ((kitten_78 potato_23)) potato_22 (get_potato_23_a kitten_78))
(declare-datatypes () ((potato_24 (mk_potato_24 (get_potato_24_a potato_22)))))
(define-fun spoon_85 ((kitten_79 potato_24)) potato_22 (get_potato_24_a kitten_79))
(define-fun spoon_86 ((kitten_80 potato_24) (kitten_81 potato_24)) Bool (ite (and (= (spoon_72 (get_potato_22_a (get_potato_24_a kitten_80))) (spoon_72 (get_potato_22_a (get_potato_24_a kitten_81)))) (= (spoon_57 (get_potato_22_b (get_potato_24_a kitten_80)) 1 100 (get_potato_22_b (get_potato_24_a kitten_81)) 1 100) true)) true false))
(declare-const cat_87 Int)
(declare-fun spoon_88 (potato_24) Int)
(declare-const cat_89 Int)
(declare-fun spoon_90 (potato_24) Int)
(assert (<= 0 cat_87))
(assert (forall ((kitten_82 potato_24)) (<= 0 (spoon_88 kitten_82))))
(assert (<= 0 cat_89))
(assert (forall ((kitten_83 potato_24)) (<= 0 (spoon_90 kitten_83))))
(declare-const cat_91 Int)
(declare-const cat_92 Int)
(declare-const cat_93 Int)
(assert (<= 0 cat_91))
(assert (< cat_91 cat_92))
(assert (<= 0 cat_93))
(declare-const cat_94 Int)
(declare-const cat_95 Int)
(declare-const cat_96 Int)
(assert (<= 0 cat_94))
(assert (< cat_94 cat_95))
(assert (<= 0 cat_96))
(declare-fun spoon_97 (potato_24 potato_24) Bool)
(declare-const cat_98 potato_24)
(declare-datatypes () ((potato_25 (mk_potato_25 (get_potato_25_a potato_24)))))
(define-fun spoon_99 ((kitten_84 potato_25)) potato_24 (get_potato_25_a kitten_84))
(declare-fun spoon_100 (potato_15 potato_24) Bool)
(declare-fun spoon_101 (Bool potato_15 potato_24) Bool)
(assert true)
(declare-const cat_102 potato_24)
(declare-const cat_103 Int)
(declare-const cat_104 potato_24)
(declare-const cat_105 Int)
(declare-const cat_106 Int)
(declare-const cat_107 Int)
(declare-const cat_108 Int)
(define-fun spoon_109 ((kitten_85 Float32) (kitten_86 Bool) (kitten_87 Bool) (kitten_88 Bool)) Bool (=> (or (= kitten_86 true) (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (fp #b0 #b10001011 #b00000000000000000000000))) (spoon_29 kitten_85)))
(define-fun spoon_110 ((kitten_89 Int) (kitten_90 Bool) (kitten_91 Bool) (kitten_92 Bool)) Bool (=> (or (= kitten_90 true) (<= 1 100)) (spoon_58 kitten_89)))
(define-fun spoon_111 ((kitten_93 Int) (kitten_94 Bool) (kitten_95 Bool) (kitten_96 Bool)) Bool (=> (or (= kitten_94 true) (<= 3 100)) (spoon_65 kitten_93)))
(declare-const cat_112 Bool)
(declare-const cat_113 Int)
(declare-const cat_114 Bool)
(declare-const cat_115 Bool)
(declare-const cat_116 Bool)
(declare-const cat_117 Bool)
(declare-const cat_118 Int)
(declare-const cat_119 Int)
(declare-const cat_120 Bool)
(declare-const cat_121 Int)
(declare-const cat_122 Bool)
(declare-const cat_123 Bool)
(declare-const cat_124 Bool)
(declare-const cat_125 Int)
(declare-const cat_126 Bool)
(declare-const cat_127 Int)
(declare-const cat_128 Bool)
(declare-const cat_129 Int)
(declare-const cat_130 Bool)
(declare-const cat_131 Int)
(assert (= cat_116 cat_112))
(assert (= cat_117 (spoon_9 0)))
(assert (= cat_118 cat_113))
(assert (= cat_119 1))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_114 cat_117)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (and (<= 1 cat_121) (<= cat_121 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102)))))))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_115 (spoon_100 (select (get_potato_22_b (get_potato_24_a cat_102)) cat_121) cat_104))))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_122 cat_120)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_123 cat_115)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (or (= cat_123 true) (and (not (= cat_123 true)) (= cat_121 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))))))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_121 cat_125)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_123 cat_124)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_127 cat_121)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_126 cat_123)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= (mk_potato_6 cat_129) (mk_potato_6 cat_125))))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= (mk_potato_7 cat_128) (mk_potato_7 cat_124))))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_131 cat_127)))
(assert (=> (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102))))) (= cat_130 cat_126)))
(assert (=> (not (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102)))))) (= cat_119 cat_129)))
(assert (=> (not (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102)))))) (= cat_117 cat_128)))
(assert (=> (not (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102)))))) (= cat_131 cat_119)))
(assert (=> (not (and (<= 1 cat_119) (<= cat_119 (spoon_72 (get_potato_22_a (get_potato_24_a cat_102)))))) (= cat_130 cat_117)))
(assert (not (= cat_128 true)))
(assert (<= 1 (spoon_72 (get_potato_22_a (get_potato_24_a cat_104)))))
(assert (not (<= 1 1)))
(check-sat)
(exit)
