(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFFPDTNIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(define-fun spoon_1 ((kitten_1 Float32)) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_2 (potato_2 potato_2) Bool)
(declare-const cat_3 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_4 ((kitten_2 potato_6)) Int (get_potato_6_a kitten_2))
(define-fun spoon_5 ((kitten_3 potato_7)) Bool (get_potato_7_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_8)) Real (get_potato_8_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_9)) potato_2 (get_potato_9_a kitten_5))
(declare-sort potato_10 0)
(define-fun spoon_8 ((kitten_6 Int)) Bool (and (<= 0 kitten_6) (<= kitten_6 150000)))
(declare-fun spoon_9 (Int) potato_5)
(declare-fun spoon_10 (potato_5) Bool)
(declare-fun spoon_11 (potato_5) Int)
(declare-fun spoon_12 (potato_10 potato_10) Bool)
(declare-const cat_13 potato_10)
(declare-datatypes () ((potato_11 (mk_potato_11 (get_potato_11_a potato_10)))))
(define-fun spoon_14 ((kitten_7 potato_11)) potato_10 (get_potato_11_a kitten_7))
(define-fun spoon_15 ((kitten_8 Int) (kitten_9 Bool) (kitten_10 Bool) (kitten_11 Bool)) Bool (=> (or (= kitten_9 true) (<= 0 150000)) (spoon_8 kitten_8)))
(declare-fun spoon_16 (potato_10) Int)
(declare-fun spoon_17 (Int) potato_10)
(assert (forall ((kitten_12 potato_10)) (! (= (spoon_17 (spoon_16 kitten_12)) kitten_12) :pattern ((spoon_16 kitten_12)))))
(assert (forall ((kitten_13 potato_10)) (! (spoon_8 (spoon_16 kitten_13)) :pattern ((spoon_16 kitten_13)))))
(assert (forall ((kitten_14 Int)) (! (=> (spoon_8 kitten_14) (= (spoon_16 (spoon_17 kitten_14)) kitten_14)) :pattern ((spoon_16 (spoon_17 kitten_14))))))
(declare-datatypes () ((potato_12 (mk_potato_12 (get_potato_12_a potato_10) (get_potato_12_b potato_10)))))
(define-fun spoon_18 ((kitten_15 potato_12)) potato_10 (get_potato_12_a kitten_15))
(define-fun spoon_19 ((kitten_16 potato_12)) potato_10 (get_potato_12_b kitten_16))
(declare-datatypes () ((potato_13 (mk_potato_13 (get_potato_13_a potato_12)))))
(define-fun spoon_20 ((kitten_17 potato_13)) potato_12 (get_potato_13_a kitten_17))
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_12)))))
(define-fun spoon_21 ((kitten_18 potato_14)) potato_12 (get_potato_14_a kitten_18))
(define-fun spoon_22 ((kitten_19 potato_14) (kitten_20 potato_14)) Bool (ite (and (= (spoon_16 (get_potato_12_a (get_potato_14_a kitten_19))) (spoon_16 (get_potato_12_a (get_potato_14_a kitten_20)))) (= (spoon_16 (get_potato_12_b (get_potato_14_a kitten_19))) (spoon_16 (get_potato_12_b (get_potato_14_a kitten_20))))) true false))
(declare-const cat_23 Int)
(declare-fun spoon_24 (potato_14) Int)
(declare-const cat_25 Int)
(declare-fun spoon_26 (potato_14) Int)
(assert (<= 0 cat_23))
(assert (forall ((kitten_21 potato_14)) (<= 0 (spoon_24 kitten_21))))
(assert (<= 0 cat_25))
(assert (forall ((kitten_22 potato_14)) (<= 0 (spoon_26 kitten_22))))
(declare-const cat_27 Int)
(declare-const cat_28 Int)
(declare-const cat_29 Int)
(assert (<= 0 cat_27))
(assert (< cat_27 cat_28))
(assert (<= 0 cat_29))
(declare-const cat_30 Int)
(declare-const cat_31 Int)
(declare-const cat_32 Int)
(assert (<= 0 cat_30))
(assert (< cat_30 cat_31))
(assert (<= 0 cat_32))
(declare-fun spoon_33 (potato_14 potato_14) Bool)
(declare-const cat_34 potato_14)
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_14)))))
(define-fun spoon_35 ((kitten_23 potato_15)) potato_14 (get_potato_15_a kitten_23))
(declare-sort potato_16 0)
(define-fun spoon_36 ((kitten_24 Int)) Bool (and (<= 3 kitten_24) (<= kitten_24 30)))
(declare-fun spoon_37 (Int) potato_5)
(declare-fun spoon_38 (potato_5) Bool)
(declare-fun spoon_39 (potato_5) Int)
(declare-fun spoon_40 (potato_16 potato_16) Bool)
(declare-const cat_41 potato_16)
(declare-datatypes () ((potato_17 (mk_potato_17 (get_potato_17_a potato_16)))))
(define-fun spoon_42 ((kitten_25 potato_17)) potato_16 (get_potato_17_a kitten_25))
(declare-fun spoon_43 (potato_16) Int)
(declare-fun spoon_44 (Int) potato_16)
(assert (forall ((kitten_26 potato_16)) (! (= (spoon_44 (spoon_43 kitten_26)) kitten_26) :pattern ((spoon_43 kitten_26)))))
(assert (forall ((kitten_27 potato_16)) (! (spoon_36 (spoon_43 kitten_27)) :pattern ((spoon_43 kitten_27)))))
(assert (forall ((kitten_28 Int)) (! (=> (spoon_36 kitten_28) (= (spoon_43 (spoon_44 kitten_28)) kitten_28)) :pattern ((spoon_43 (spoon_44 kitten_28))))))
(declare-fun spoon_45 (Int) Int)
(define-fun spoon_46 ((kitten_29 Float32)) Bool (and (fp.isInfinite kitten_29) (fp.isPositive kitten_29)))
(define-fun spoon_47 ((kitten_30 Float32)) Bool (and (fp.isInfinite kitten_30) (fp.isNegative kitten_30)))
(define-fun spoon_48 ((kitten_31 Float32)) Bool (and (fp.isZero kitten_31) (fp.isPositive kitten_31)))
(define-fun spoon_49 ((kitten_32 Float32)) Bool (and (fp.isZero kitten_32) (fp.isNegative kitten_32)))
(declare-const cat_50 Int)
(define-fun spoon_51 ((kitten_33 Int)) Bool (and (<= (- cat_50) kitten_33) (<= kitten_33 cat_50)))
(define-fun spoon_52 ((kitten_34 Int)) Bool (and (<= (- 16777216) kitten_34) (<= kitten_34 16777216)))
(define-fun spoon_53 ((kitten_35 Float32) (kitten_36 Float32)) Bool (or (and (fp.isPositive kitten_35) (fp.isPositive kitten_36)) (and (fp.isNegative kitten_35) (fp.isNegative kitten_36))))
(define-fun spoon_54 ((kitten_37 Float32) (kitten_38 Float32)) Bool (or (and (fp.isPositive kitten_37) (fp.isNegative kitten_38)) (and (fp.isNegative kitten_37) (fp.isPositive kitten_38))))
(define-fun spoon_55 ((kitten_39 Float32) (kitten_40 Float32) (kitten_41 Float32)) Bool (and (=> (spoon_53 kitten_40 kitten_41) (fp.isPositive kitten_39)) (=> (spoon_54 kitten_40 kitten_41) (fp.isNegative kitten_39))))
(define-fun spoon_56 ((kitten_42 Real)) Real (* kitten_42 kitten_42))
(declare-fun spoon_57 (Real) Real)
(define-fun spoon_58 ((kitten_43 Float32) (kitten_44 Real)) Bool (or (and (fp.isPositive kitten_43) (< 0.0 kitten_44)) (and (fp.isNegative kitten_43) (< kitten_44 0.0))))
(declare-fun spoon_59 (Float32) Bool)
(declare-datatypes () ((potato_18 (mk_potato_18 (get_potato_18_a Float32)))))
(declare-sort potato_19 0)
(define-fun spoon_60 ((kitten_45 Float32)) Bool (and (spoon_1 kitten_45) (and (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) kitten_45) (fp.leq kitten_45 (fp #b0 #b10001011 #b00000000000000000000000)))))
(declare-fun spoon_61 (potato_19 potato_19) Bool)
(declare-fun spoon_62 (Float32) potato_5)
(declare-fun spoon_63 (potato_5) Bool)
(declare-fun spoon_64 (potato_5) Float32)
(declare-const cat_65 potato_19)
(declare-datatypes () ((potato_20 (mk_potato_20 (get_potato_20_a potato_19)))))
(define-fun spoon_66 ((kitten_46 potato_20)) potato_19 (get_potato_20_a kitten_46))
(declare-fun spoon_67 (potato_19) Float32)
(declare-fun spoon_68 (Float32) potato_19)
(assert (forall ((kitten_47 potato_19)) (! (= (spoon_68 (spoon_67 kitten_47)) kitten_47) :pattern ((spoon_67 kitten_47)))))
(assert (forall ((kitten_48 potato_19)) (! (spoon_60 (spoon_67 kitten_48)) :pattern ((spoon_67 kitten_48)))))
(assert (forall ((kitten_49 Float32)) (! (=> (spoon_60 kitten_49) (= (spoon_67 (spoon_68 kitten_49)) kitten_49)) :pattern ((spoon_67 (spoon_68 kitten_49))))))
(declare-datatypes () ((potato_21 (mk_potato_21 (get_potato_21_a potato_19) (get_potato_21_b potato_19)))))
(declare-datatypes () ((potato_22 (mk_potato_22 (get_potato_22_a potato_21)))))
(define-fun spoon_69 ((kitten_50 potato_22)) potato_21 (get_potato_22_a kitten_50))
(declare-datatypes () ((potato_23 (mk_potato_23 (get_potato_23_a potato_21)))))
(define-fun spoon_70 ((kitten_51 potato_23)) potato_21 (get_potato_23_a kitten_51))
(define-fun spoon_71 ((kitten_52 potato_23) (kitten_53 potato_23)) Bool (ite (and (= (spoon_67 (get_potato_21_a (get_potato_23_a kitten_52))) (spoon_67 (get_potato_21_a (get_potato_23_a kitten_53)))) (= (spoon_67 (get_potato_21_b (get_potato_23_a kitten_52))) (spoon_67 (get_potato_21_b (get_potato_23_a kitten_53))))) true false))
(declare-const cat_72 Int)
(declare-fun spoon_73 (potato_23) Int)
(declare-const cat_74 Int)
(declare-fun spoon_75 (potato_23) Int)
(assert (<= 0 cat_72))
(assert (forall ((kitten_54 potato_23)) (<= 0 (spoon_73 kitten_54))))
(assert (<= 0 cat_74))
(assert (forall ((kitten_55 potato_23)) (<= 0 (spoon_75 kitten_55))))
(declare-const cat_76 Int)
(declare-const cat_77 Int)
(declare-const cat_78 Int)
(assert (<= 0 cat_76))
(assert (< cat_76 cat_77))
(assert (<= 0 cat_78))
(declare-const cat_79 Int)
(declare-const cat_80 Int)
(declare-const cat_81 Int)
(assert (<= 0 cat_79))
(assert (< cat_79 cat_80))
(assert (<= 0 cat_81))
(declare-fun spoon_82 (potato_23 potato_23) Bool)
(declare-const cat_83 potato_23)
(declare-datatypes () ((potato_24 (mk_potato_24 (get_potato_24_a potato_23)))))
(define-fun spoon_84 ((kitten_56 potato_24)) potato_23 (get_potato_24_a kitten_56))
(declare-datatypes () ((potato_25 (mk_potato_25 (get_potato_25_a (Array Int potato_23))))))
(declare-fun spoon_85 ((Array Int potato_23) Int Int) (Array Int potato_23))
(assert (forall ((kitten_57 (Array Int potato_23))) (forall ((kitten_58 Int)) (! (= (spoon_85 kitten_57 kitten_58 kitten_58) kitten_57) :pattern ((spoon_85 kitten_57 kitten_58 kitten_58))))))
(assert (forall ((kitten_59 (Array Int potato_23))) (forall ((kitten_60 Int)) (forall ((kitten_61 Int)) (forall ((kitten_62 Int)) (! (= (select (spoon_85 kitten_59 kitten_60 kitten_61) kitten_62) (select kitten_59 (- kitten_62 (- kitten_61 kitten_60)))) :pattern ((select (spoon_85 kitten_59 kitten_60 kitten_61) kitten_62))))))))
(declare-fun spoon_86 ((Array Int potato_23) Int Int (Array Int potato_23) Int Int) (Array Int potato_23))
(assert (forall ((kitten_63 (Array Int potato_23)) (kitten_64 (Array Int potato_23))) (forall ((kitten_65 Int) (kitten_66 Int) (kitten_67 Int) (kitten_68 Int)) (forall ((kitten_69 Int)) (! (and (=> (and (<= kitten_65 kitten_69) (<= kitten_69 kitten_66)) (= (select (spoon_86 kitten_63 kitten_65 kitten_66 kitten_64 kitten_67 kitten_68) kitten_69) (select kitten_63 kitten_69))) (=> (< kitten_66 kitten_69) (= (select (spoon_86 kitten_63 kitten_65 kitten_66 kitten_64 kitten_67 kitten_68) kitten_69) (select kitten_64 (+ (- kitten_69 kitten_66) (- kitten_67 1)))))) :pattern ((select (spoon_86 kitten_63 kitten_65 kitten_66 kitten_64 kitten_67 kitten_68) kitten_69)))))))
(declare-fun spoon_87 (potato_23 Int) (Array Int potato_23))
(assert (forall ((kitten_70 potato_23)) (forall ((kitten_71 Int)) (! (= (select (spoon_87 kitten_70 kitten_71) kitten_71) kitten_70) :pattern ((select (spoon_87 kitten_70 kitten_71) kitten_71))))))
(define-fun spoon_88 ((kitten_72 (Array Int potato_23)) (kitten_73 Int) (kitten_74 Int) (kitten_75 (Array Int potato_23)) (kitten_76 Int) (kitten_77 Int)) Bool (ite (and (ite (<= kitten_73 kitten_74) (and (<= kitten_76 kitten_77) (= (- kitten_74 kitten_73) (- kitten_77 kitten_76))) (< kitten_77 kitten_76)) (forall ((kitten_78 Int)) (=> (and (<= kitten_73 kitten_78) (<= kitten_78 kitten_74)) (= (spoon_71 (select kitten_72 kitten_78) (select kitten_75 (+ (- kitten_76 kitten_73) kitten_78))) true)))) true false))
(assert (forall ((kitten_79 (Array Int potato_23)) (kitten_80 (Array Int potato_23))) (forall ((kitten_81 Int) (kitten_82 Int) (kitten_83 Int) (kitten_84 Int)) (=> (= (spoon_88 kitten_80 kitten_83 kitten_84 kitten_79 kitten_81 kitten_82) true) (and (ite (<= kitten_81 kitten_82) (and (<= kitten_83 kitten_84) (= (- kitten_82 kitten_81) (- kitten_84 kitten_83))) (< kitten_84 kitten_83)) (forall ((kitten_85 Int)) (=> (and (<= kitten_81 kitten_85) (<= kitten_85 kitten_82)) (= (spoon_71 (select kitten_79 kitten_85) (select kitten_80 (+ (- kitten_83 kitten_81) kitten_85))) true))))))))
(declare-const cat_89 (Array Int potato_23))
(declare-const cat_90 Int)
(declare-fun spoon_91 ((Array Int potato_23)) Int)
(declare-const cat_92 Int)
(declare-fun spoon_93 ((Array Int potato_23)) Int)
(declare-const cat_94 Int)
(declare-fun spoon_95 ((Array Int potato_23)) Int)
(assert (<= 0 cat_90))
(assert (forall ((kitten_86 (Array Int potato_23))) (<= 0 (spoon_91 kitten_86))))
(assert (<= 0 cat_92))
(assert (forall ((kitten_87 (Array Int potato_23))) (<= 0 (spoon_93 kitten_87))))
(assert (<= 0 cat_94))
(assert (forall ((kitten_88 (Array Int potato_23))) (<= 0 (spoon_95 kitten_88))))
(declare-fun spoon_96 ((Array Int potato_23) (Array Int potato_23)) Bool)
(declare-datatypes () ((potato_26 (mk_potato_26 (get_potato_26_a potato_16) (get_potato_26_b (Array Int potato_23))))))
(define-fun spoon_97 ((kitten_89 potato_26)) potato_16 (get_potato_26_a kitten_89))
(define-fun spoon_98 ((kitten_90 potato_26)) (Array Int potato_23) (get_potato_26_b kitten_90))
(declare-datatypes () ((potato_27 (mk_potato_27 (get_potato_27_a potato_26)))))
(define-fun spoon_99 ((kitten_91 potato_27)) potato_26 (get_potato_27_a kitten_91))
(declare-datatypes () ((potato_28 (mk_potato_28 (get_potato_28_a potato_26)))))
(define-fun spoon_100 ((kitten_92 potato_28)) potato_26 (get_potato_28_a kitten_92))
(define-fun spoon_101 ((kitten_93 potato_28) (kitten_94 potato_28)) Bool (ite (and (= (spoon_43 (get_potato_26_a (get_potato_28_a kitten_93))) (spoon_43 (get_potato_26_a (get_potato_28_a kitten_94)))) (= (spoon_88 (get_potato_26_b (get_potato_28_a kitten_93)) 1 30 (get_potato_26_b (get_potato_28_a kitten_94)) 1 30) true)) true false))
(declare-const cat_102 Int)
(declare-fun spoon_103 (potato_28) Int)
(declare-const cat_104 Int)
(declare-fun spoon_105 (potato_28) Int)
(assert (<= 0 cat_102))
(assert (forall ((kitten_95 potato_28)) (<= 0 (spoon_103 kitten_95))))
(assert (<= 0 cat_104))
(assert (forall ((kitten_96 potato_28)) (<= 0 (spoon_105 kitten_96))))
(declare-const cat_106 Int)
(declare-const cat_107 Int)
(declare-const cat_108 Int)
(assert (<= 0 cat_106))
(assert (< cat_106 cat_107))
(assert (<= 0 cat_108))
(declare-const cat_109 Int)
(declare-const cat_110 Int)
(declare-const cat_111 Int)
(assert (<= 0 cat_109))
(assert (< cat_109 cat_110))
(assert (<= 0 cat_111))
(declare-fun spoon_112 (potato_28 potato_28) Bool)
(declare-const cat_113 potato_28)
(declare-datatypes () ((potato_29 (mk_potato_29 (get_potato_29_a potato_28)))))
(define-fun spoon_114 ((kitten_97 potato_29)) potato_28 (get_potato_29_a kitten_97))
(declare-datatypes () ((potato_30 (mk_potato_30 (get_potato_30_a potato_28) (get_potato_30_b potato_14)))))
(define-fun spoon_115 ((kitten_98 potato_30)) potato_28 (get_potato_30_a kitten_98))
(define-fun spoon_116 ((kitten_99 potato_30)) potato_14 (get_potato_30_b kitten_99))
(declare-datatypes () ((potato_31 (mk_potato_31 (get_potato_31_a potato_30)))))
(define-fun spoon_117 ((kitten_100 potato_31)) potato_30 (get_potato_31_a kitten_100))
(declare-datatypes () ((potato_32 (mk_potato_32 (get_potato_32_a potato_30)))))
(define-fun spoon_118 ((kitten_101 potato_32)) potato_30 (get_potato_32_a kitten_101))
(define-fun spoon_119 ((kitten_102 potato_32) (kitten_103 potato_32)) Bool (ite (and (= (spoon_101 (get_potato_30_a (get_potato_32_a kitten_102)) (get_potato_30_a (get_potato_32_a kitten_103))) true) (= (spoon_22 (get_potato_30_b (get_potato_32_a kitten_102)) (get_potato_30_b (get_potato_32_a kitten_103))) true)) true false))
(declare-const cat_120 Int)
(declare-fun spoon_121 (potato_32) Int)
(declare-const cat_122 Int)
(declare-fun spoon_123 (potato_32) Int)
(assert (<= 0 cat_120))
(assert (forall ((kitten_104 potato_32)) (<= 0 (spoon_121 kitten_104))))
(assert (<= 0 cat_122))
(assert (forall ((kitten_105 potato_32)) (<= 0 (spoon_123 kitten_105))))
(declare-const cat_124 Int)
(declare-const cat_125 Int)
(declare-const cat_126 Int)
(assert (<= 0 cat_124))
(assert (< cat_124 cat_125))
(assert (<= 0 cat_126))
(declare-const cat_127 Int)
(declare-const cat_128 Int)
(declare-const cat_129 Int)
(assert (<= 0 cat_127))
(assert (< cat_127 cat_128))
(assert (<= 0 cat_129))
(declare-fun spoon_130 (potato_32 potato_32) Bool)
(declare-const cat_131 potato_32)
(declare-datatypes () ((potato_33 (mk_potato_33 (get_potato_33_a potato_32)))))
(define-fun spoon_132 ((kitten_106 potato_33)) potato_32 (get_potato_33_a kitten_106))
(declare-const cat_133 Int)
(declare-const cat_134 Int)
(declare-const cat_135 potato_32)
(declare-const cat_136 Int)
(declare-const cat_137 Int)
(define-fun spoon_138 ((kitten_107 Float32) (kitten_108 Bool) (kitten_109 Bool) (kitten_110 Bool)) Bool (=> (or (= kitten_108 true) (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (fp #b0 #b10001011 #b00000000000000000000000))) (spoon_60 kitten_107)))
(define-fun spoon_139 ((kitten_111 Int) (kitten_112 Bool) (kitten_113 Bool) (kitten_114 Bool)) Bool (=> (or (= kitten_112 true) (<= 3 30)) (spoon_36 kitten_111)))
(declare-const cat_140 potato_16)
(declare-const cat_141 (Array Int potato_23))
(declare-const cat_142 potato_10)
(declare-const cat_143 potato_10)
(declare-const cat_144 potato_31)
(declare-const cat_145 potato_30)
(assert (spoon_8 cat_133))
(assert (= cat_144 (mk_potato_31 (mk_potato_30 (mk_potato_28 (mk_potato_26 cat_140 cat_141)) (mk_potato_14 (mk_potato_12 cat_142 cat_143))))))
(assert (= cat_145 (get_potato_32_a cat_135)))
(assert (< (- cat_133 1000) (spoon_16 (get_potato_12_b (get_potato_14_a (get_potato_30_b (get_potato_32_a cat_135)))))))
(assert (not (<= 149000 (spoon_16 (get_potato_12_b (get_potato_14_a (get_potato_30_b (get_potato_32_a cat_135))))))))
(assert (not (spoon_8 (+ (spoon_16 (get_potato_12_b (get_potato_14_a (get_potato_30_b (get_potato_32_a cat_135))))) 1000))))
(check-sat)
(exit)
