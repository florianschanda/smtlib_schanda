(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFFPDTNIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(define-fun spoon_1 ((kitten_1 Float32)) Bool (not (or (fp.isInfinite kitten_1) (fp.isNaN kitten_1))))
(define-fun spoon_2 ((kitten_2 Float32)) Bool (or (fp.isZero kitten_2) (and (fp.isNormal kitten_2) (= kitten_2 (fp.roundToIntegral RNE kitten_2)))))
(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_3 (potato_2 potato_2) Bool)
(declare-const cat_4 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_5 ((kitten_3 potato_6)) Int (get_potato_6_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_7)) Bool (get_potato_7_a kitten_4))
(define-fun spoon_7 ((kitten_5 potato_8)) Real (get_potato_8_a kitten_5))
(define-fun spoon_8 ((kitten_6 potato_9)) potato_2 (get_potato_9_a kitten_6))
(define-fun spoon_9 ((kitten_7 Int)) Bool (or (= kitten_7 0) (= kitten_7 1)))
(declare-fun spoon_10 (Bool) potato_5)
(declare-fun spoon_11 (potato_5) Bool)
(declare-fun spoon_12 (potato_5) Bool)
(declare-sort potato_10 0)
(declare-fun spoon_13 (potato_10) Int)
(assert (forall ((kitten_8 potato_10)) (and (<= 3 (spoon_13 kitten_8)) (<= (spoon_13 kitten_8) 100))))
(define-fun spoon_14 ((kitten_9 Int)) Bool (and (<= 3 kitten_9) (<= kitten_9 100)))
(declare-fun spoon_15 (Int) potato_5)
(declare-fun spoon_16 (potato_5) Bool)
(declare-fun spoon_17 (potato_5) Int)
(declare-fun spoon_18 (potato_10 potato_10) Bool)
(declare-const cat_19 potato_10)
(declare-datatypes () ((potato_11 (mk_potato_11 (get_potato_11_a potato_10)))))
(define-fun spoon_20 ((kitten_10 potato_11)) potato_10 (get_potato_11_a kitten_10))
(define-fun spoon_21 ((kitten_11 potato_10)) Int (spoon_13 kitten_11))
(declare-fun spoon_22 (Int) potato_10)
(assert (forall ((kitten_12 potato_10)) (! (= (spoon_22 (spoon_21 kitten_12)) kitten_12) :pattern ((spoon_21 kitten_12)))))
(assert (forall ((kitten_13 potato_10)) (! (spoon_14 (spoon_21 kitten_13)) :pattern ((spoon_21 kitten_13)))))
(assert (forall ((kitten_14 Int)) (! (=> (spoon_14 kitten_14) (= (spoon_21 (spoon_22 kitten_14)) kitten_14)) :pattern ((spoon_21 (spoon_22 kitten_14))))))
(declare-fun spoon_23 (Int) Int)
(define-fun spoon_24 ((kitten_15 Float32)) Bool (and (fp.isInfinite kitten_15) (fp.isPositive kitten_15)))
(define-fun spoon_25 ((kitten_16 Float32)) Bool (and (fp.isInfinite kitten_16) (fp.isNegative kitten_16)))
(define-fun spoon_26 ((kitten_17 Float32)) Bool (and (fp.isZero kitten_17) (fp.isPositive kitten_17)))
(define-fun spoon_27 ((kitten_18 Float32)) Bool (and (fp.isZero kitten_18) (fp.isNegative kitten_18)))
(declare-const cat_28 Int)
(define-fun spoon_29 ((kitten_19 Int)) Bool (and (<= (- cat_28) kitten_19) (<= kitten_19 cat_28)))
(define-fun spoon_30 ((kitten_20 Int)) Bool (and (<= (- 16777216) kitten_20) (<= kitten_20 16777216)))
(define-fun spoon_31 ((kitten_21 Float32) (kitten_22 Float32)) Bool (or (and (fp.isPositive kitten_21) (fp.isPositive kitten_22)) (and (fp.isNegative kitten_21) (fp.isNegative kitten_22))))
(define-fun spoon_32 ((kitten_23 Float32) (kitten_24 Float32)) Bool (or (and (fp.isPositive kitten_23) (fp.isNegative kitten_24)) (and (fp.isNegative kitten_23) (fp.isPositive kitten_24))))
(define-fun spoon_33 ((kitten_25 Float32) (kitten_26 Float32) (kitten_27 Float32)) Bool (and (=> (spoon_31 kitten_26 kitten_27) (fp.isPositive kitten_25)) (=> (spoon_32 kitten_26 kitten_27) (fp.isNegative kitten_25))))
(define-fun spoon_34 ((kitten_28 Real)) Real (* kitten_28 kitten_28))
(declare-fun spoon_35 (Real) Real)
(define-fun spoon_36 ((kitten_29 Float32) (kitten_30 Real)) Bool (or (and (fp.isPositive kitten_29) (< 0.0 kitten_30)) (and (fp.isNegative kitten_29) (< kitten_30 0.0))))
(declare-datatypes () ((potato_12 (mk_potato_12 (get_potato_12_a Float32)))))
(declare-sort potato_13 0)
(define-fun spoon_37 ((kitten_31 Float32)) Bool (and (spoon_1 kitten_31) (and (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) kitten_31) (fp.leq kitten_31 (fp #b0 #b10001011 #b00000000000000000000000)))))
(declare-fun spoon_38 (potato_13 potato_13) Bool)
(declare-fun spoon_39 (Float32) potato_5)
(declare-fun spoon_40 (potato_5) Bool)
(declare-fun spoon_41 (potato_5) Float32)
(declare-const cat_42 potato_13)
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_13)))))
(define-fun spoon_43 ((kitten_32 potato_14)) potato_13 (get_potato_14_a kitten_32))
(declare-fun spoon_44 (potato_13) Float32)
(declare-fun spoon_45 (Float32) potato_13)
(assert (forall ((kitten_33 potato_13)) (! (= (spoon_45 (spoon_44 kitten_33)) kitten_33) :pattern ((spoon_44 kitten_33)))))
(assert (forall ((kitten_34 potato_13)) (! (spoon_37 (spoon_44 kitten_34)) :pattern ((spoon_44 kitten_34)))))
(assert (forall ((kitten_35 Float32)) (! (=> (spoon_37 kitten_35) (= (spoon_44 (spoon_45 kitten_35)) kitten_35)) :pattern ((spoon_44 (spoon_45 kitten_35))))))
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_13) (get_potato_15_b potato_13)))))
(define-fun spoon_46 ((kitten_36 potato_15)) potato_13 (get_potato_15_a kitten_36))
(define-fun spoon_47 ((kitten_37 potato_15)) potato_13 (get_potato_15_b kitten_37))
(declare-datatypes () ((potato_16 (mk_potato_16 (get_potato_16_a potato_15)))))
(define-fun spoon_48 ((kitten_38 potato_16)) potato_15 (get_potato_16_a kitten_38))
(declare-datatypes () ((potato_17 (mk_potato_17 (get_potato_17_a potato_15)))))
(define-fun spoon_49 ((kitten_39 potato_17)) potato_15 (get_potato_17_a kitten_39))
(define-fun spoon_50 ((kitten_40 potato_17) (kitten_41 potato_17)) Bool (ite (and (= (spoon_44 (get_potato_15_a (get_potato_17_a kitten_40))) (spoon_44 (get_potato_15_a (get_potato_17_a kitten_41)))) (= (spoon_44 (get_potato_15_b (get_potato_17_a kitten_40))) (spoon_44 (get_potato_15_b (get_potato_17_a kitten_41))))) true false))
(declare-const cat_51 Int)
(declare-fun spoon_52 (potato_17) Int)
(declare-const cat_53 Int)
(declare-fun spoon_54 (potato_17) Int)
(assert (<= 0 cat_51))
(assert (forall ((kitten_42 potato_17)) (<= 0 (spoon_52 kitten_42))))
(assert (<= 0 cat_53))
(assert (forall ((kitten_43 potato_17)) (<= 0 (spoon_54 kitten_43))))
(declare-const cat_55 Int)
(declare-const cat_56 Int)
(declare-const cat_57 Int)
(assert (<= 0 cat_55))
(assert (< cat_55 cat_56))
(assert (<= 0 cat_57))
(declare-const cat_58 Int)
(declare-const cat_59 Int)
(declare-const cat_60 Int)
(assert (<= 0 cat_58))
(assert (< cat_58 cat_59))
(assert (<= 0 cat_60))
(declare-fun spoon_61 (potato_17 potato_17) Bool)
(declare-const cat_62 potato_17)
(declare-datatypes () ((potato_18 (mk_potato_18 (get_potato_18_a potato_17)))))
(define-fun spoon_63 ((kitten_44 potato_18)) potato_17 (get_potato_18_a kitten_44))
(declare-datatypes () ((potato_19 (mk_potato_19 (get_potato_19_a (Array Int potato_17))))))
(declare-fun spoon_64 ((Array Int potato_17) Int Int) (Array Int potato_17))
(assert (forall ((kitten_45 (Array Int potato_17))) (forall ((kitten_46 Int)) (! (= (spoon_64 kitten_45 kitten_46 kitten_46) kitten_45) :pattern ((spoon_64 kitten_45 kitten_46 kitten_46))))))
(assert (forall ((kitten_47 (Array Int potato_17))) (forall ((kitten_48 Int)) (forall ((kitten_49 Int)) (forall ((kitten_50 Int)) (! (= (select (spoon_64 kitten_47 kitten_48 kitten_49) kitten_50) (select kitten_47 (- kitten_50 (- kitten_49 kitten_48)))) :pattern ((select (spoon_64 kitten_47 kitten_48 kitten_49) kitten_50))))))))
(define-fun spoon_65 ((kitten_51 (Array Int potato_17)) (kitten_52 Int) (kitten_53 Int) (kitten_54 (Array Int potato_17)) (kitten_55 Int) (kitten_56 Int)) Bool (ite (and (ite (<= kitten_52 kitten_53) (and (<= kitten_55 kitten_56) (= (- kitten_53 kitten_52) (- kitten_56 kitten_55))) (< kitten_56 kitten_55)) (forall ((kitten_57 Int)) (=> (and (<= kitten_52 kitten_57) (<= kitten_57 kitten_53)) (= (spoon_50 (select kitten_51 kitten_57) (select kitten_54 (+ (- kitten_55 kitten_52) kitten_57))) true)))) true false))
(assert (forall ((kitten_58 (Array Int potato_17)) (kitten_59 (Array Int potato_17))) (forall ((kitten_60 Int) (kitten_61 Int) (kitten_62 Int) (kitten_63 Int)) (=> (= (spoon_65 kitten_59 kitten_62 kitten_63 kitten_58 kitten_60 kitten_61) true) (and (ite (<= kitten_60 kitten_61) (and (<= kitten_62 kitten_63) (= (- kitten_61 kitten_60) (- kitten_63 kitten_62))) (< kitten_63 kitten_62)) (forall ((kitten_64 Int)) (=> (and (<= kitten_60 kitten_64) (<= kitten_64 kitten_61)) (= (spoon_50 (select kitten_58 kitten_64) (select kitten_59 (+ (- kitten_62 kitten_60) kitten_64))) true))))))))
(declare-const cat_66 (Array Int potato_17))
(declare-const cat_67 Int)
(declare-fun spoon_68 ((Array Int potato_17)) Int)
(declare-const cat_69 Int)
(declare-fun spoon_70 ((Array Int potato_17)) Int)
(declare-const cat_71 Int)
(declare-fun spoon_72 ((Array Int potato_17)) Int)
(assert (<= 0 cat_67))
(assert (forall ((kitten_65 (Array Int potato_17))) (<= 0 (spoon_68 kitten_65))))
(assert (<= 0 cat_69))
(assert (forall ((kitten_66 (Array Int potato_17))) (<= 0 (spoon_70 kitten_66))))
(assert (<= 0 cat_71))
(assert (forall ((kitten_67 (Array Int potato_17))) (<= 0 (spoon_72 kitten_67))))
(declare-fun spoon_73 ((Array Int potato_17) (Array Int potato_17)) Bool)
(declare-datatypes () ((potato_20 (mk_potato_20 (get_potato_20_a potato_10) (get_potato_20_b (Array Int potato_17))))))
(define-fun spoon_74 ((kitten_68 potato_20)) potato_10 (get_potato_20_a kitten_68))
(define-fun spoon_75 ((kitten_69 potato_20)) (Array Int potato_17) (get_potato_20_b kitten_69))
(declare-datatypes () ((potato_21 (mk_potato_21 (get_potato_21_a potato_20)))))
(define-fun spoon_76 ((kitten_70 potato_21)) potato_20 (get_potato_21_a kitten_70))
(declare-datatypes () ((potato_22 (mk_potato_22 (get_potato_22_a potato_20)))))
(define-fun spoon_77 ((kitten_71 potato_22)) potato_20 (get_potato_22_a kitten_71))
(define-fun spoon_78 ((kitten_72 potato_22) (kitten_73 potato_22)) Bool (ite (and (= (spoon_21 (get_potato_20_a (get_potato_22_a kitten_72))) (spoon_21 (get_potato_20_a (get_potato_22_a kitten_73)))) (= (spoon_65 (get_potato_20_b (get_potato_22_a kitten_72)) 1 100 (get_potato_20_b (get_potato_22_a kitten_73)) 1 100) true)) true false))
(declare-const cat_79 Int)
(declare-fun spoon_80 (potato_22) Int)
(declare-const cat_81 Int)
(declare-fun spoon_82 (potato_22) Int)
(assert (<= 0 cat_79))
(assert (forall ((kitten_74 potato_22)) (<= 0 (spoon_80 kitten_74))))
(assert (<= 0 cat_81))
(assert (forall ((kitten_75 potato_22)) (<= 0 (spoon_82 kitten_75))))
(declare-const cat_83 Int)
(declare-const cat_84 Int)
(declare-const cat_85 Int)
(assert (<= 0 cat_83))
(assert (< cat_83 cat_84))
(assert (<= 0 cat_85))
(declare-const cat_86 Int)
(declare-const cat_87 Int)
(declare-const cat_88 Int)
(assert (<= 0 cat_86))
(assert (< cat_86 cat_87))
(assert (<= 0 cat_88))
(declare-fun spoon_89 (potato_22 potato_22) Bool)
(declare-const cat_90 potato_22)
(declare-datatypes () ((potato_23 (mk_potato_23 (get_potato_23_a potato_22)))))
(define-fun spoon_91 ((kitten_76 potato_23)) potato_22 (get_potato_23_a kitten_76))
(declare-fun spoon_92 (potato_17 potato_22) Bool)
(declare-fun spoon_93 (Bool potato_17 potato_22) Bool)
(assert true)
(declare-sort potato_24 0)
(declare-fun spoon_94 (potato_24) Int)
(assert (forall ((kitten_77 potato_24)) (and (<= 1 (spoon_94 kitten_77)) (<= (spoon_94 kitten_77) 100))))
(define-fun spoon_95 ((kitten_78 Int)) Bool (and (<= 1 kitten_78) (<= kitten_78 100)))
(declare-fun spoon_96 (Int) potato_5)
(declare-fun spoon_97 (potato_5) Bool)
(declare-fun spoon_98 (potato_5) Int)
(declare-fun spoon_99 (potato_24 potato_24) Bool)
(declare-const cat_100 potato_24)
(declare-datatypes () ((potato_25 (mk_potato_25 (get_potato_25_a potato_24)))))
(define-fun spoon_101 ((kitten_79 potato_25)) potato_24 (get_potato_25_a kitten_79))
(declare-const cat_102 potato_22)
(declare-const cat_103 Int)
(declare-const cat_104 potato_22)
(declare-const cat_105 Int)
(declare-const cat_106 Int)
(declare-const cat_107 Int)
(declare-const cat_108 Int)
(define-fun spoon_109 ((kitten_80 Float32) (kitten_81 Bool) (kitten_82 Bool) (kitten_83 Bool) (kitten_84 Bool)) Bool (=> (or (= kitten_81 true) (fp.leq (fp.neg (fp #b0 #b10001011 #b00000000000000000000000)) (fp #b0 #b10001011 #b00000000000000000000000))) (spoon_37 kitten_80)))
(define-fun spoon_110 ((kitten_85 Int) (kitten_86 Bool) (kitten_87 Bool) (kitten_88 Bool) (kitten_89 Bool)) Bool (=> (or (= kitten_86 true) (<= 1 100)) (spoon_95 kitten_85)))
(define-fun spoon_111 ((kitten_90 Int) (kitten_91 Bool) (kitten_92 Bool) (kitten_93 Bool) (kitten_94 Bool)) Bool (=> (or (= kitten_91 true) (<= 3 100)) (spoon_14 kitten_90)))
(declare-const cat_112 Bool)
(declare-const cat_113 Bool)
(declare-const cat_114 Bool)
(declare-const cat_115 Int)
(declare-const cat_116 Bool)
(declare-const cat_117 Int)
(declare-const cat_118 Bool)
(declare-const cat_119 Bool)
(declare-const cat_120 Bool)
(declare-const cat_121 Int)
(declare-const cat_122 Bool)
(declare-const cat_123 Int)
(declare-const cat_124 Bool)
(declare-const cat_125 Int)
(declare-const cat_126 Bool)
(declare-const cat_127 Int)
(assert (= cat_114 (distinct 0 0)))
(assert (= cat_115 1))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_112 cat_114)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (and (<= 1 cat_117) (<= cat_117 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102)))))))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_113 (spoon_92 (select (get_potato_20_b (get_potato_22_a cat_102)) cat_117) cat_104))))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_118 cat_116)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_119 cat_113)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (or (= cat_119 true) (and (not (= cat_119 true)) (= cat_117 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))))))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_117 cat_121)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_119 cat_120)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_123 cat_117)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_122 cat_119)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= (mk_potato_6 cat_125) (mk_potato_6 cat_121))))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= (mk_potato_7 cat_124) (mk_potato_7 cat_120))))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_127 cat_123)))
(assert (=> (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102))))) (= cat_126 cat_122)))
(assert (=> (not (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102)))))) (= cat_115 cat_125)))
(assert (=> (not (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102)))))) (= cat_114 cat_124)))
(assert (=> (not (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102)))))) (= cat_127 cat_115)))
(assert (=> (not (and (<= 1 cat_115) (<= cat_115 (spoon_21 (get_potato_20_a (get_potato_22_a cat_102)))))) (= cat_126 cat_114)))
(assert (not (= cat_124 true)))
(assert (<= 1 (spoon_21 (get_potato_20_a (get_potato_22_a cat_104)))))
(assert (not (<= 1 1)))
(check-sat)
(exit)
