(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated from industrial code by Florian Schanda using SPARK 2014 and an SMTLIB Obfuscation Script|)
(set-info :category industrial)
(set-info :status unsat)

(declare-datatypes () ((potato_1 (mk_potato_1))))
(declare-sort potato_2 0)
(declare-fun spoon_1 (potato_2 potato_2) Bool)
(declare-const cat_2 potato_2)
(declare-sort potato_3 0)
(declare-datatypes () ((potato_4 (mk_potato_4 (get_potato_4_a potato_3)))))
(declare-sort potato_5 0)
(declare-datatypes () ((potato_6 (mk_potato_6 (get_potato_6_a Int)))))
(declare-datatypes () ((potato_7 (mk_potato_7 (get_potato_7_a Bool)))))
(declare-datatypes () ((potato_8 (mk_potato_8 (get_potato_8_a Real)))))
(declare-datatypes () ((potato_9 (mk_potato_9 (get_potato_9_a potato_2)))))
(define-fun spoon_3 ((kitten_1 potato_6)) Int (get_potato_6_a kitten_1))
(define-fun spoon_4 ((kitten_2 potato_7)) Bool (get_potato_7_a kitten_2))
(define-fun spoon_5 ((kitten_3 potato_8)) Real (get_potato_8_a kitten_3))
(define-fun spoon_6 ((kitten_4 potato_9)) potato_2 (get_potato_9_a kitten_4))
(define-fun spoon_7 ((kitten_5 Bool)) Int (ite (= kitten_5 true) 1 0))
(define-fun spoon_8 ((kitten_6 Int)) Bool (ite (= kitten_6 0) false true))
(define-fun spoon_9 ((kitten_7 Int)) Bool (or (= kitten_7 0) (= kitten_7 1)))
(declare-fun spoon_10 (Bool) potato_5)
(declare-fun spoon_11 (potato_5) Bool)
(declare-fun spoon_12 (potato_5) Bool)
(declare-sort potato_10 0)
(define-fun spoon_13 ((kitten_8 Int)) Bool (and (<= 0 kitten_8) (<= kitten_8 999)))
(declare-fun spoon_14 (Int) potato_5)
(declare-fun spoon_15 (potato_5) Bool)
(declare-fun spoon_16 (potato_5) Int)
(declare-fun spoon_17 (potato_10 potato_10) Bool)
(declare-const cat_18 potato_10)
(declare-datatypes () ((potato_11 (mk_potato_11 (get_potato_11_a potato_10)))))
(define-fun spoon_19 ((kitten_9 potato_11)) potato_10 (get_potato_11_a kitten_9))
(declare-fun spoon_20 (potato_10) Int)
(declare-fun spoon_21 (Int) potato_10)
(assert (forall ((kitten_10 potato_10)) (! (= (spoon_21 (spoon_20 kitten_10)) kitten_10) :pattern ((spoon_20 kitten_10)))))
(assert (forall ((kitten_11 potato_10)) (! (spoon_13 (spoon_20 kitten_11)) :pattern ((spoon_20 kitten_11)))))
(assert (forall ((kitten_12 Int)) (! (=> (spoon_13 kitten_12) (= (spoon_20 (spoon_21 kitten_12)) kitten_12)) :pattern ((spoon_20 (spoon_21 kitten_12))))))
(declare-datatypes () ((potato_12 (mk_potato_12 (get_potato_12_a Bool) (get_potato_12_b potato_10)))))
(define-fun spoon_22 ((kitten_13 potato_12)) Bool (get_potato_12_a kitten_13))
(define-fun spoon_23 ((kitten_14 potato_12)) potato_10 (get_potato_12_b kitten_14))
(declare-datatypes () ((potato_13 (mk_potato_13 (get_potato_13_a potato_12)))))
(define-fun spoon_24 ((kitten_15 potato_13)) potato_12 (get_potato_13_a kitten_15))
(declare-datatypes () ((potato_14 (mk_potato_14 (get_potato_14_a potato_12)))))
(define-fun spoon_25 ((kitten_16 potato_14)) potato_12 (get_potato_14_a kitten_16))
(define-fun spoon_26 ((kitten_17 potato_14) (kitten_18 potato_14)) Bool (ite (and (= (get_potato_12_a (get_potato_14_a kitten_17)) (get_potato_12_a (get_potato_14_a kitten_18))) (= (spoon_20 (get_potato_12_b (get_potato_14_a kitten_17))) (spoon_20 (get_potato_12_b (get_potato_14_a kitten_18))))) true false))
(declare-const cat_27 Int)
(declare-fun spoon_28 (potato_14) Int)
(declare-const cat_29 Int)
(declare-fun spoon_30 (potato_14) Int)
(assert (<= 0 cat_27))
(assert (forall ((kitten_19 potato_14)) (<= 0 (spoon_28 kitten_19))))
(assert (<= 0 cat_29))
(assert (forall ((kitten_20 potato_14)) (<= 0 (spoon_30 kitten_20))))
(declare-const cat_31 Int)
(declare-const cat_32 Int)
(declare-const cat_33 Int)
(assert (<= 0 cat_31))
(assert (< cat_31 cat_32))
(assert (<= 0 cat_33))
(declare-const cat_34 Int)
(declare-const cat_35 Int)
(declare-const cat_36 Int)
(assert (<= 0 cat_34))
(assert (< cat_34 cat_35))
(assert (<= 0 cat_36))
(declare-fun spoon_37 (potato_14 potato_14) Bool)
(declare-const cat_38 potato_14)
(declare-datatypes () ((potato_15 (mk_potato_15 (get_potato_15_a potato_14)))))
(define-fun spoon_39 ((kitten_21 potato_15)) potato_14 (get_potato_15_a kitten_21))
(declare-const cat_40 potato_14)
(declare-const cat_41 Int)
(declare-datatypes () ((potato_16 (mk_potato_16 (get_potato_16_a (Array Int Bool))))))
(declare-fun spoon_42 ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((kitten_22 (Array Int Bool))) (forall ((kitten_23 Int)) (! (= (spoon_42 kitten_22 kitten_23 kitten_23) kitten_22) :pattern ((spoon_42 kitten_22 kitten_23 kitten_23))))))
(assert (forall ((kitten_24 (Array Int Bool))) (forall ((kitten_25 Int)) (forall ((kitten_26 Int)) (forall ((kitten_27 Int)) (! (= (select (spoon_42 kitten_24 kitten_25 kitten_26) kitten_27) (select kitten_24 (- kitten_27 (- kitten_26 kitten_25)))) :pattern ((select (spoon_42 kitten_24 kitten_25 kitten_26) kitten_27))))))))
(declare-fun spoon_43 ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((kitten_28 (Array Int Bool)) (kitten_29 (Array Int Bool))) (forall ((kitten_30 Int) (kitten_31 Int) (kitten_32 Int) (kitten_33 Int)) (forall ((kitten_34 Int)) (! (and (=> (and (<= kitten_30 kitten_34) (<= kitten_34 kitten_31)) (= (select (spoon_43 kitten_28 kitten_30 kitten_31 kitten_29 kitten_32 kitten_33) kitten_34) (select kitten_28 kitten_34))) (=> (< kitten_31 kitten_34) (= (select (spoon_43 kitten_28 kitten_30 kitten_31 kitten_29 kitten_32 kitten_33) kitten_34) (select kitten_29 (+ (- kitten_34 kitten_31) (- kitten_32 1)))))) :pattern ((select (spoon_43 kitten_28 kitten_30 kitten_31 kitten_29 kitten_32 kitten_33) kitten_34)))))))
(declare-fun spoon_44 (Bool Int) (Array Int Bool))
(assert (forall ((kitten_35 Bool)) (forall ((kitten_36 Int)) (! (= (select (spoon_44 kitten_35 kitten_36) kitten_36) kitten_35) :pattern ((select (spoon_44 kitten_35 kitten_36) kitten_36))))))
(define-fun spoon_45 ((kitten_37 (Array Int Bool)) (kitten_38 Int) (kitten_39 Int) (kitten_40 (Array Int Bool)) (kitten_41 Int) (kitten_42 Int)) Bool (ite (and (ite (<= kitten_38 kitten_39) (and (<= kitten_41 kitten_42) (= (- kitten_39 kitten_38) (- kitten_42 kitten_41))) (< kitten_42 kitten_41)) (forall ((kitten_43 Int)) (=> (and (<= kitten_38 kitten_43) (<= kitten_43 kitten_39)) (= (select kitten_37 kitten_43) (select kitten_40 (+ (- kitten_41 kitten_38) kitten_43)))))) true false))
(assert (forall ((kitten_44 (Array Int Bool)) (kitten_45 (Array Int Bool))) (forall ((kitten_46 Int) (kitten_47 Int) (kitten_48 Int) (kitten_49 Int)) (=> (= (spoon_45 kitten_45 kitten_48 kitten_49 kitten_44 kitten_46 kitten_47) true) (and (ite (<= kitten_46 kitten_47) (and (<= kitten_48 kitten_49) (= (- kitten_47 kitten_46) (- kitten_49 kitten_48))) (< kitten_49 kitten_48)) (forall ((kitten_50 Int)) (=> (and (<= kitten_46 kitten_50) (<= kitten_50 kitten_47)) (= (select kitten_44 kitten_50) (select kitten_45 (+ (- kitten_48 kitten_46) kitten_50))))))))))
(declare-fun spoon_46 ((Array Int Bool) Int Int (Array Int Bool) Int Int) Int)
(assert (forall ((kitten_51 (Array Int Bool)) (kitten_52 (Array Int Bool))) (forall ((kitten_53 Int) (kitten_54 Int) (kitten_55 Int) (kitten_56 Int)) (! (= (= (spoon_46 kitten_51 kitten_53 kitten_54 kitten_52 kitten_55 kitten_56) 0) (= (spoon_45 kitten_51 kitten_53 kitten_54 kitten_52 kitten_55 kitten_56) true)) :pattern ((spoon_46 kitten_51 kitten_53 kitten_54 kitten_52 kitten_55 kitten_56))))))
(assert (forall ((kitten_57 (Array Int Bool)) (kitten_58 (Array Int Bool))) (forall ((kitten_59 Int) (kitten_60 Int) (kitten_61 Int) (kitten_62 Int)) (! (= (< (spoon_46 kitten_57 kitten_59 kitten_60 kitten_58 kitten_61 kitten_62) 0) (exists ((kitten_63 Int) (kitten_64 Int)) (and (<= kitten_63 kitten_60) (and (< kitten_64 kitten_62) (and (= (spoon_45 kitten_57 kitten_59 kitten_63 kitten_58 kitten_61 kitten_64) true) (or (= kitten_63 kitten_60) (and (< kitten_63 kitten_60) (< (spoon_7 (select kitten_57 (+ kitten_63 1))) (spoon_7 (select kitten_58 (+ kitten_64 1))))))))))) :pattern ((spoon_46 kitten_57 kitten_59 kitten_60 kitten_58 kitten_61 kitten_62))))))
(assert (forall ((kitten_65 (Array Int Bool)) (kitten_66 (Array Int Bool))) (forall ((kitten_67 Int) (kitten_68 Int) (kitten_69 Int) (kitten_70 Int)) (! (= (< 0 (spoon_46 kitten_65 kitten_67 kitten_68 kitten_66 kitten_69 kitten_70)) (exists ((kitten_71 Int) (kitten_72 Int)) (and (<= kitten_71 kitten_70) (and (< kitten_72 kitten_68) (and (= (spoon_45 kitten_65 kitten_67 kitten_72 kitten_66 kitten_69 kitten_71) true) (or (= kitten_71 kitten_70) (and (< kitten_71 kitten_70) (< (spoon_7 (select kitten_66 (+ kitten_71 1))) (spoon_7 (select kitten_65 (+ kitten_72 1))))))))))) :pattern ((spoon_46 kitten_65 kitten_67 kitten_68 kitten_66 kitten_69 kitten_70))))))
(declare-fun spoon_47 ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun spoon_48 ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun spoon_49 ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun spoon_50 ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((kitten_73 (Array Int Bool)) (kitten_74 (Array Int Bool))) (forall ((kitten_75 Int) (kitten_76 Int) (kitten_77 Int) (kitten_78 Int)) (forall ((kitten_79 Int)) (! (=> (and (<= kitten_75 kitten_79) (<= kitten_79 kitten_76)) (= (select (spoon_49 kitten_73 kitten_75 kitten_76 kitten_74 kitten_77 kitten_78) kitten_79) (or (select kitten_73 kitten_79) (select kitten_74 (+ (- kitten_79 kitten_75) kitten_77))))) :pattern ((select (spoon_49 kitten_73 kitten_75 kitten_76 kitten_74 kitten_77 kitten_78) kitten_79)))))))
(assert (forall ((kitten_80 (Array Int Bool)) (kitten_81 (Array Int Bool))) (forall ((kitten_82 Int) (kitten_83 Int) (kitten_84 Int) (kitten_85 Int)) (forall ((kitten_86 Int)) (! (=> (and (<= kitten_82 kitten_86) (<= kitten_86 kitten_83)) (= (select (spoon_48 kitten_80 kitten_82 kitten_83 kitten_81 kitten_84 kitten_85) kitten_86) (and (select kitten_80 kitten_86) (select kitten_81 (+ (- kitten_86 kitten_82) kitten_84))))) :pattern ((select (spoon_48 kitten_80 kitten_82 kitten_83 kitten_81 kitten_84 kitten_85) kitten_86)))))))
(assert (forall ((kitten_87 (Array Int Bool)) (kitten_88 (Array Int Bool))) (forall ((kitten_89 Int) (kitten_90 Int) (kitten_91 Int) (kitten_92 Int)) (forall ((kitten_93 Int)) (! (=> (and (<= kitten_89 kitten_93) (<= kitten_93 kitten_90)) (= (select (spoon_47 kitten_87 kitten_89 kitten_90 kitten_88 kitten_91 kitten_92) kitten_93) (xor (select kitten_87 kitten_93) (select kitten_88 (+ (- kitten_93 kitten_89) kitten_91))))) :pattern ((select (spoon_47 kitten_87 kitten_89 kitten_90 kitten_88 kitten_91 kitten_92) kitten_93)))))))
(assert (forall ((kitten_94 (Array Int Bool))) (forall ((kitten_95 Int) (kitten_96 Int)) (forall ((kitten_97 Int)) (! (=> (and (<= kitten_95 kitten_97) (<= kitten_97 kitten_96)) (= (select (spoon_50 kitten_94 kitten_95 kitten_96) kitten_97) (not (select kitten_94 kitten_97)))) :pattern ((select (spoon_50 kitten_94 kitten_95 kitten_96) kitten_97)))))))
(declare-const cat_51 (Array Int Bool))
(declare-const cat_52 Int)
(declare-const cat_53 Int)
(declare-const cat_54 Int)
(define-fun spoon_55 ((kitten_98 Int) (kitten_99 Bool) (kitten_100 Bool) (kitten_101 Bool)) Bool (=> (or (= kitten_99 true) (<= 0 999)) (spoon_13 kitten_98)))
(assert (= cat_40 (mk_potato_14 (mk_potato_12 (spoon_8 0) (spoon_21 999)))))
(declare-const cat_56 Bool)
(declare-const cat_57 potato_10)
(declare-const cat_58 Int)
(declare-const cat_59 potato_10)
(declare-const cat_60 Bool)
(declare-const cat_61 potato_10)
(declare-const cat_62 Bool)
(declare-const cat_63 potato_10)
(declare-const cat_64 Bool)
(declare-const cat_65 potato_10)
(declare-const cat_66 Bool)
(declare-const cat_67 potato_10)
(declare-const cat_68 Int)
(declare-const cat_69 Int)
(declare-const cat_70 Bool)
(declare-const cat_71 potato_10)
(declare-const cat_72 Int)
(declare-const cat_73 Bool)
(declare-const cat_74 potato_10)
(declare-const cat_75 Int)
(declare-const cat_76 Int)
(assert (= (spoon_20 cat_59) 999))
(assert (= (spoon_8 0) cat_60))
(assert (= cat_59 cat_61))
(assert (= cat_62 cat_60))
(assert (= cat_63 cat_61))
(assert (= (mk_potato_14 (mk_potato_12 cat_62 cat_63)) cat_40))
(assert (= cat_64 cat_56))
(assert (= cat_65 cat_57))
(assert (= (mk_potato_12 cat_66 cat_67) (get_potato_14_a cat_40)))
(assert (= cat_68 cat_58))
(assert (= cat_69 0))
(assert (<= 0 cat_69))
(assert (<= cat_69 999))
(assert (not (= cat_70 true)))
(assert (and (=> (<= 0 999) (spoon_13 cat_72)) (and (<= 0 cat_72) (<= cat_72 999))))
(assert (not (= (select cat_51 cat_72) true)))
(assert (= (mk_potato_12 cat_73 cat_74) (mk_potato_12 cat_70 cat_71)))
(assert (not (= cat_72 999)))
(assert (= cat_75 cat_72))
(assert (= cat_76 (+ cat_72 1)))
(assert (not (not (= cat_73 true))))
(check-sat)
(exit)
