;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun id (Int) Int)

(declare-fun id__function_guard (Int Int) Bool)

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-const first Int)

(declare-const last Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-const dummy1 integer)

(declare-datatypes ((index_type__ref 0))
(((mk_index_type__ref (index_type__content integer)))))
(define-fun index_type__ref___projection ((a index_type__ref)) integer
  (index_type__content a))

(declare-const first_index Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const last_index Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_invariant1 ((temp___expr_141 Int)
  (temp___is_init_138 Bool) (temp___skip_constant_139 Bool)
  (temp___do_toplevel_140 Bool)) Bool (=>
                                      (or (= temp___is_init_138 true)
                                      (<= first last)) (dynamic_property
                                      first last temp___expr_141)))

;; first__def_axiom
  (assert (= first first_index))

;; last__def_axiom
  (assert (= last last_index))

(declare-const fst Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const lst Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ((t1b__ref 0)) (((mk_t1b__ref (t1b__content integer)))))
(define-fun t1b__ref___projection ((a t1b__ref)) integer (t1b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const one Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

;; first_index__def_axiom
  (assert (= first_index one))

(declare-const lst1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

;; last_index__def_axiom
  (assert (= last_index lst1))

(declare-const g Int)

(declare-const i Int)

(declare-const result Int)

(declare-const g1 Int)

(declare-const result1 Int)

(declare-const i1 Int)

(declare-const g2 Int)

(declare-const i2 Int)

(declare-const result2 Int)

(declare-const g3 Int)

(declare-const result3 Int)

(declare-const i3 Int)

;; H
  (assert (dynamic_property first last fst))

;; H
  (assert (dynamic_property first last lst))

;; H
  (assert (<= fst lst))

;; H
  (assert (= result g))

;; H
  (assert (= g1 0))

;; H
  (assert (in_range1 g1))

;; H
  (assert (= result1 i))

;; H
  (assert (= i1 fst))

;; H
  (assert (<= fst i1))

;; H
  (assert (<= i1 lst))

;; H
  (assert
  (forall ((j Int)) (=> (and (<= first j) (<= j (- fst 2))) (= (id j) j))))

;; H
  (assert
  (and
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 g2))
  (=> (<= fst lst) (dynamic_property1 fst lst i2)))
  (and (<= fst i2) (<= i2 lst))))

;; H
  (assert (= result2 g2))

;; H
  (assert (= g3 (+ g2 1)))

;; H
  (assert (not (= i2 lst)))

;; H
  (assert (= result3 i2))

;; H
  (assert (= i3 (+ i2 1)))

(declare-const j Int)

;; H
  (assert (<= first j))

;; H
  (assert (<= j (- fst 2)))

(assert
;; WP_parameter_def
 ;; File "use_quantif.ads", line 7, characters 0-0
  (not (= (id j) j)))
(check-sat)
(exit)
