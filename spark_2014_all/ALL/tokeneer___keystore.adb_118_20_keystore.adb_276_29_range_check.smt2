;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant1 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-sort descriptioni 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 150)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (descriptioni descriptioni) Bool)

(declare-const dummy4 descriptioni)

(declare-datatypes ()
((descriptioni__ref
 (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni
  (descriptioni__content a))

(declare-const nodescription (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___133 Int))
  (forall ((temp___134 Int))
  (= (select (audittypes__nodescription__aggregate_def temp___133) temp___134)
  (of_rep temp___133)))))

(declare-const nouser (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-fun temp___String_Literal_135 (tuple0) (Array Int character))

;; temp___String_Literal_135__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 1)) 78)
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 3)) 85))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 4)) 115))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 6)) 114))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 13)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 15)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 16)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 17)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 18)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 20)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 22)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 23)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 24)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 26)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 27)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 28)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 29)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 30)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 31)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 32)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 33)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 34)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 35)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 36)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 37)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 38)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 39)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 40)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 41)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 42)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 43)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 44)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 45)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 46)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 47)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 48)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 49)) 32))
     (= (to_rep (select (temp___String_Literal_135 us_void_param) 50)) 32)) :pattern (
  (temp___String_Literal_135 us_void_param)) )))

(declare-sort unsigned32t 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (unsigned32t unsigned32t) Bool)

(declare-const dummy5 unsigned32t)

(declare-datatypes ()
((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t
  (unsigned32t__content a))

(define-fun dynamic_invariant2 ((temp___expr_259 Int)
  (temp___is_init_256 Bool) (temp___skip_constant_257 Bool)
  (temp___do_toplevel_258 Bool)) Bool (=>
                                      (or (= temp___is_init_256 true)
                                      (<= 0 4294967295)) (in_range5
                                      temp___expr_259)))

(declare-fun to_rep2 (unsigned32t) Int)

(declare-fun of_rep2 (Int) unsigned32t)

;; inversion_axiom
  (assert
  (forall ((x unsigned32t))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x unsigned32t)) (! (in_range5
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort algorithmt 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (algorithmt algorithmt) Bool)

(declare-const dummy6 algorithmt)

(declare-datatypes ()
((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt
  (algorithmt__content a))

(define-fun dynamic_invariant3 ((temp___expr_742 Int)
  (temp___is_init_739 Bool) (temp___skip_constant_740 Bool)
  (temp___do_toplevel_741 Bool)) Bool (=>
                                      (or (= temp___is_init_739 true)
                                      (<= 0 10)) (in_range6 temp___expr_742)))

(declare-fun valid_numberlogentries (us_private) Bool)

(declare-fun valid_numberlogentries__function_guard (Bool us_private) Bool)

(declare-sort rawcertificatei 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 4096)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (rawcertificatei rawcertificatei) Bool)

(declare-const dummy7 rawcertificatei)

(declare-datatypes ()
((rawcertificatei__ref
 (mk_rawcertificatei__ref (rawcertificatei__content rawcertificatei)))))
(define-fun rawcertificatei__ref___projection ((a rawcertificatei__ref)) rawcertificatei
  (rawcertificatei__content a))

(declare-fun to_rep3 (rawcertificatei) Int)

(declare-fun of_rep3 (Int) rawcertificatei)

;; inversion_axiom
  (assert
  (forall ((x rawcertificatei))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x rawcertificatei)) (! (in_range7
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-const dummy8 (Array Int character))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int character)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq8 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__certtypes__rawdatat__rawdata (Array Int character))(rec__certtypes__rawdatat__datalength rawcertificatei)))))
(define-fun us_split_fields_RawData__projection ((a us_split_fields)) (Array Int character)
  (rec__certtypes__rawdatat__rawdata a))

(define-fun us_split_fields_DataLength__projection ((a us_split_fields)) rawcertificatei
  (rec__certtypes__rawdatat__datalength a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (bool_eq
                           (rec__certtypes__rawdatat__rawdata
                           (us_split_fields1 a)) 1 4096
                           (rec__certtypes__rawdatat__rawdata
                           (us_split_fields1 b)) 1 4096) true)
                        (= (to_rep3
                           (rec__certtypes__rawdatat__datalength
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__certtypes__rawdatat__datalength
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-const certtypes__rawdatat__rawdata__first__bit Int)

(declare-const certtypes__rawdatat__rawdata__last__bit Int)

(declare-const certtypes__rawdatat__rawdata__position Int)

;; certtypes__rawdatat__rawdata__first__bit_axiom
  (assert (<= 0 certtypes__rawdatat__rawdata__first__bit))

;; certtypes__rawdatat__rawdata__last__bit_axiom
  (assert
  (< certtypes__rawdatat__rawdata__first__bit certtypes__rawdatat__rawdata__last__bit))

;; certtypes__rawdatat__rawdata__position_axiom
  (assert (<= 0 certtypes__rawdatat__rawdata__position))

(declare-const certtypes__rawdatat__datalength__first__bit Int)

(declare-const certtypes__rawdatat__datalength__last__bit Int)

(declare-const certtypes__rawdatat__datalength__position Int)

;; certtypes__rawdatat__datalength__first__bit_axiom
  (assert (<= 0 certtypes__rawdatat__datalength__first__bit))

;; certtypes__rawdatat__datalength__last__bit_axiom
  (assert
  (< certtypes__rawdatat__datalength__first__bit certtypes__rawdatat__datalength__last__bit))

;; certtypes__rawdatat__datalength__position_axiom
  (assert (<= 0 certtypes__rawdatat__datalength__position))

(declare-fun user_eq9 (us_rep us_rep) Bool)

(declare-const dummy9 us_rep)

(declare-datatypes ()
((rawdatat__ref (mk_rawdatat__ref (rawdatat__content us_rep)))))
(define-fun rawdatat__ref___projection ((a rawdatat__ref)) us_rep (rawdatat__content
                                                                  a))

(declare-sort returnvaluet 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq10 (returnvaluet returnvaluet) Bool)

(declare-const dummy10 returnvaluet)

(declare-datatypes ()
((returnvaluet__ref
 (mk_returnvaluet__ref (returnvaluet__content returnvaluet)))))
(define-fun returnvaluet__ref___projection ((a returnvaluet__ref)) returnvaluet
  (returnvaluet__content a))

(define-fun dynamic_invariant4 ((temp___expr_1038 Int)
  (temp___is_init_1035 Bool) (temp___skip_constant_1036 Bool)
  (temp___do_toplevel_1037 Bool)) Bool (=>
                                       (or (= temp___is_init_1035 true)
                                       (<= 0 28)) (in_range8
                                       temp___expr_1038)))

(declare-fun to_rep4 (returnvaluet) Int)

(declare-fun of_rep4 (Int) returnvaluet)

;; inversion_axiom
  (assert
  (forall ((x returnvaluet))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x returnvaluet)) (! (in_range8
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort bytet 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq11 (bytet bytet) Bool)

(declare-const dummy11 bytet)

(declare-datatypes () ((bytet__ref (mk_bytet__ref (bytet__content bytet)))))
(define-fun bytet__ref___projection ((a bytet__ref)) bytet (bytet__content a))

(declare-fun to_rep5 (bytet) Int)

(declare-fun of_rep5 (Int) bytet)

;; inversion_axiom
  (assert
  (forall ((x bytet))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x bytet)) (! (in_range9 (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range9 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int bytet))))))
(declare-fun slide1 ((Array Int bytet) Int Int) (Array Int bytet))

;; slide_eq
  (assert
  (forall ((a (Array Int bytet)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bytet)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int bytet) Int Int (Array Int bytet) Int
  Int) (Array Int bytet))

;; concat_def
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (bytet Int) (Array Int bytet))

;; singleton_def
  (assert
  (forall ((v bytet))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int bytet)) (a__first Int) (a__last Int)
  (b (Array Int bytet)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_141 Int))
                           (=>
                           (and (<= a__first temp___idx_141)
                           (<= temp___idx_141 a__last))
                           (= (to_rep5 (select a temp___idx_141)) (to_rep5
                                                                  (select b (+ (- b__first a__first) temp___idx_141)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_141 Int))
  (=> (and (<= a__first temp___idx_141) (<= temp___idx_141 a__last))
  (= (to_rep5 (select a temp___idx_141)) (to_rep5
                                         (select b (+ (- b__first a__first) temp___idx_141)))))))))))

(declare-fun compare1 ((Array Int bytet) Int Int (Array Int bytet) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare1 a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare1 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep5 (select a (+ i 1))) (to_rep5 (select b (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare1 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep5 (select b (+ i 1))) (to_rep5 (select a (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

(declare-const dummy12 (Array Int bytet))

(declare-const value__size3 Int)

(declare-fun object__size3 ((Array Int bytet)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int bytet)) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 ((Array Int bytet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int bytet))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int bytet))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int bytet))) (<= 0 (object__alignment3 a))))

(declare-fun user_eq12 ((Array Int bytet) (Array Int bytet)) Bool)

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__keystore__interfac__digestt__digestid unsigned32t)(rec__keystore__interfac__digestt__signreturn returnvaluet)(rec__keystore__interfac__digestt__verifyreturn returnvaluet)(rec__keystore__interfac__digestt__pad (Array Int bytet))))))
(define-fun us_split_fields_DigestID__projection ((a us_split_fields2)) unsigned32t
  (rec__keystore__interfac__digestt__digestid a))

(define-fun us_split_fields_SignReturn__projection ((a us_split_fields2)) returnvaluet
  (rec__keystore__interfac__digestt__signreturn a))

(define-fun us_split_fields_VerifyReturn__projection ((a us_split_fields2)) returnvaluet
  (rec__keystore__interfac__digestt__verifyreturn a))

(define-fun us_split_fields_Pad__2__projection ((a us_split_fields2)) (Array Int bytet)
  (rec__keystore__interfac__digestt__pad a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___12__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                   a))

(define-fun bool_eq4 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (and
                         (= (to_rep2
                            (rec__keystore__interfac__digestt__digestid
                            (us_split_fields3 a))) (to_rep2
                                                   (rec__keystore__interfac__digestt__digestid
                                                   (us_split_fields3 b))))
                         (= (to_rep4
                            (rec__keystore__interfac__digestt__signreturn
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__keystore__interfac__digestt__signreturn
                                                   (us_split_fields3 b)))))
                         (= (to_rep4
                            (rec__keystore__interfac__digestt__verifyreturn
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__keystore__interfac__digestt__verifyreturn
                                                   (us_split_fields3 b)))))
                         (= (bool_eq3
                            (rec__keystore__interfac__digestt__pad
                            (us_split_fields3 a)) 1 20
                            (rec__keystore__interfac__digestt__pad
                            (us_split_fields3 b)) 1 20) true))
                    true false))

(declare-const value__size4 Int)

(declare-fun object__size4 (us_rep1) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))

(declare-const keystore__interfac__digestt__digestid__first__bit Int)

(declare-const keystore__interfac__digestt__digestid__last__bit Int)

(declare-const keystore__interfac__digestt__digestid__position Int)

;; keystore__interfac__digestt__digestid__first__bit_axiom
  (assert (<= 0 keystore__interfac__digestt__digestid__first__bit))

;; keystore__interfac__digestt__digestid__last__bit_axiom
  (assert
  (< keystore__interfac__digestt__digestid__first__bit keystore__interfac__digestt__digestid__last__bit))

;; keystore__interfac__digestt__digestid__position_axiom
  (assert (<= 0 keystore__interfac__digestt__digestid__position))

(declare-const keystore__interfac__digestt__signreturn__first__bit Int)

(declare-const keystore__interfac__digestt__signreturn__last__bit Int)

(declare-const keystore__interfac__digestt__signreturn__position Int)

;; keystore__interfac__digestt__signreturn__first__bit_axiom
  (assert (<= 0 keystore__interfac__digestt__signreturn__first__bit))

;; keystore__interfac__digestt__signreturn__last__bit_axiom
  (assert
  (< keystore__interfac__digestt__signreturn__first__bit keystore__interfac__digestt__signreturn__last__bit))

;; keystore__interfac__digestt__signreturn__position_axiom
  (assert (<= 0 keystore__interfac__digestt__signreturn__position))

(declare-const keystore__interfac__digestt__verifyreturn__first__bit Int)

(declare-const keystore__interfac__digestt__verifyreturn__last__bit Int)

(declare-const keystore__interfac__digestt__verifyreturn__position Int)

;; keystore__interfac__digestt__verifyreturn__first__bit_axiom
  (assert (<= 0 keystore__interfac__digestt__verifyreturn__first__bit))

;; keystore__interfac__digestt__verifyreturn__last__bit_axiom
  (assert
  (< keystore__interfac__digestt__verifyreturn__first__bit keystore__interfac__digestt__verifyreturn__last__bit))

;; keystore__interfac__digestt__verifyreturn__position_axiom
  (assert (<= 0 keystore__interfac__digestt__verifyreturn__position))

(declare-const keystore__interfac__digestt__pad__first__bit Int)

(declare-const keystore__interfac__digestt__pad__last__bit Int)

(declare-const keystore__interfac__digestt__pad__position Int)

;; keystore__interfac__digestt__pad__first__bit_axiom
  (assert (<= 0 keystore__interfac__digestt__pad__first__bit))

;; keystore__interfac__digestt__pad__last__bit_axiom
  (assert
  (< keystore__interfac__digestt__pad__first__bit keystore__interfac__digestt__pad__last__bit))

;; keystore__interfac__digestt__pad__position_axiom
  (assert (<= 0 keystore__interfac__digestt__pad__position))

(declare-fun user_eq13 (us_rep1 us_rep1) Bool)

(declare-const dummy13 us_rep1)

(declare-datatypes ()
((digestt__ref (mk_digestt__ref (digestt__content us_rep1)))))
(define-fun digestt__ref___projection ((a digestt__ref)) us_rep1 (digestt__content
                                                                 a))

(declare-const nulldigest us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-fun temp___153 (Int) (Array Int bytet))

;; def_axiom
  (assert
  (forall ((temp___155 Int))
  (forall ((temp___156 Int))
  (= (select (temp___153 temp___155) temp___156) (of_rep5 temp___155)))))

(declare-datatypes ()
((map__ref2 (mk_map__ref2 (map__content2 (Array Int Bool))))))
(declare-fun slide2 ((Array Int Bool) Int Int) (Array Int Bool))

;; slide_eq
  (assert
  (forall ((a (Array Int Bool)))
  (forall ((first2 Int))
  (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int Bool)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide2 a old_first new_first) i)) ))))))

(declare-fun concat3 ((Array Int Bool) Int Int (Array Int Bool) Int
  Int) (Array Int Bool))

;; concat_def
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat3 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton3 (Bool Int) (Array Int Bool))

;; singleton_def
  (assert
  (forall ((v Bool))
  (forall ((i Int))
  (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i)) ))))

(define-fun bool_eq5 ((a (Array Int Bool)) (a__first Int) (a__last Int)
  (b (Array Int Bool)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_157 Int))
                           (=>
                           (and (<= a__first temp___idx_157)
                           (<= temp___idx_157 a__last))
                           (= (select a temp___idx_157) (select b (+ (- b__first a__first) temp___idx_157))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq5 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_157 Int))
  (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last))
  (= (select a temp___idx_157) (select b (+ (- b__first a__first) temp___idx_157))))))))))

(declare-fun compare2 ((Array Int Bool) Int Int (Array Int Bool) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare2 a a_first a_last b b_first b_last) 0)
     (= (bool_eq5 a a_first a_last b b_first b_last) true)) :pattern (
  (compare2 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare2 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq5 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_int1 (select a (+ i 1))) (to_int1 (select b (+ j 1))))))))))) :pattern (
  (compare2 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare2 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq5 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_int1 (select b (+ i 1))) (to_int1 (select a (+ j 1))))))))))) :pattern (
  (compare2 a a_first a_last b b_first b_last)) ))))

(declare-fun xorb ((Array Int Bool) Int Int (Array Int Bool) Int
  Int) (Array Int Bool))

(declare-fun andb ((Array Int Bool) Int Int (Array Int Bool) Int
  Int) (Array Int Bool))

(declare-fun orb ((Array Int Bool) Int Int (Array Int Bool) Int
  Int) (Array Int Bool))

(declare-fun notb ((Array Int Bool) Int Int) (Array Int Bool))

;; op_def
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (=> (and (<= a_first i) (<= i a_last))
     (= (select (orb a a_first a_last b b_first b_last) i) (or (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select
  (orb a a_first a_last b b_first b_last) i)) )))))

;; op_def
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (=> (and (<= a_first i) (<= i a_last))
     (= (select (andb a a_first a_last b b_first b_last) i) (and (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select
  (andb a a_first a_last b b_first b_last) i)) )))))

;; op_def
  (assert
  (forall ((a (Array Int Bool)) (b (Array Int Bool)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (=> (and (<= a_first i) (<= i a_last))
     (= (select (xorb a a_first a_last b b_first b_last) i) (xor (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select
  (xorb a a_first a_last b b_first b_last) i)) )))))

;; notb_def
  (assert
  (forall ((a (Array Int Bool)))
  (forall ((a_first Int) (a_last Int))
  (forall ((i Int))
  (! (=> (and (<= a_first i) (<= i a_last))
     (= (select (notb a a_first a_last) i) (not (select a i)))) :pattern ((select
  (notb a a_first a_last) i)) )))))

(declare-const issystem (Array Int Bool))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-fun keystore__issystem__aggregate_def (Bool Bool Bool Bool Bool Bool
  Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool
  Bool Bool Bool Bool Bool Bool Bool Bool) (Array Int Bool))

;; def_axiom
  (assert
  (forall ((temp___159 Bool) (temp___160 Bool) (temp___161 Bool)
  (temp___162 Bool) (temp___163 Bool) (temp___164 Bool) (temp___165 Bool)
  (temp___166 Bool) (temp___167 Bool) (temp___168 Bool) (temp___169 Bool)
  (temp___170 Bool) (temp___171 Bool) (temp___172 Bool) (temp___173 Bool)
  (temp___174 Bool) (temp___175 Bool) (temp___176 Bool) (temp___177 Bool)
  (temp___178 Bool) (temp___179 Bool) (temp___180 Bool) (temp___181 Bool)
  (temp___182 Bool) (temp___183 Bool) (temp___184 Bool) (temp___185 Bool)
  (temp___186 Bool) (temp___187 Bool))
  (let ((temp___158 (keystore__issystem__aggregate_def temp___159 temp___160
                    temp___161 temp___162 temp___163 temp___164 temp___165
                    temp___166 temp___167 temp___168 temp___169 temp___170
                    temp___171 temp___172 temp___173 temp___174 temp___175
                    temp___176 temp___177 temp___178 temp___179 temp___180
                    temp___181 temp___182 temp___183 temp___184 temp___185
                    temp___186 temp___187)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and (= (select temp___158 0) temp___159)
  (= (select temp___158 1) temp___160)) (= (select temp___158 2) temp___161))
  (= (select temp___158 3) temp___162)) (= (select temp___158 4) temp___163))
  (= (select temp___158 5) temp___164)) (= (select temp___158 6) temp___165))
  (= (select temp___158 7) temp___166)) (= (select temp___158 8) temp___167))
  (= (select temp___158 9) temp___168))
  (= (select temp___158 10) temp___169))
  (= (select temp___158 11) temp___170))
  (= (select temp___158 12) temp___171))
  (= (select temp___158 13) temp___172))
  (= (select temp___158 14) temp___173))
  (= (select temp___158 15) temp___174))
  (= (select temp___158 16) temp___175))
  (= (select temp___158 17) temp___176))
  (= (select temp___158 18) temp___177))
  (= (select temp___158 19) temp___178))
  (= (select temp___158 20) temp___179))
  (= (select temp___158 21) temp___180))
  (= (select temp___158 22) temp___181))
  (= (select temp___158 23) temp___182))
  (= (select temp___158 24) temp___183))
  (= (select temp___158 25) temp___184))
  (= (select temp___158 26) temp___185))
  (= (select temp___158 27) temp___186))
  (= (select temp___158 28) temp___187)))))

(declare-const mechanism Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const rawcertdata us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-fun getblock ((Array Int character) Int Int) (Array Int character))

(declare-fun getblock__function_guard ((Array Int character)
  (Array Int character) Int Int) Bool)

;; getblock__post_axiom
  (assert true)

(declare-const r29b Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq14 (integer integer) Bool)

(declare-const dummy14 integer)

(declare-datatypes () ((t30b__ref (mk_t30b__ref (t30b__content integer)))))
(define-fun t30b__ref___projection ((a t30b__ref)) integer (t30b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const c32b Int)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-const thestring us_t)

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq15 (integer integer) Bool)

(declare-const dummy15 integer)

(declare-datatypes () ((t38b__ref (mk_t38b__ref (t38b__content integer)))))
(define-fun t38b__ref___projection ((a t38b__ref)) integer (t38b__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property2 range_first range_last low)
                   (dynamic_property2 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size5 Int)

(declare-fun object__size5 ((Array Int character)) Int)

(declare-const value__component__size3 Int)

(declare-fun object__component__size3 ((Array Int character)) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size5 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment5 a))))

(define-fun bool_eq6 ((x us_t1)
  (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq16 (us_t1 us_t1) Bool)

(declare-const dummy16 us_t1)

(declare-datatypes () ((t39b__ref (mk_t39b__ref (t39b__content us_t1)))))
(define-fun t39b__ref___projection ((a t39b__ref)) us_t1 (t39b__content a))

(declare-const c44b Int)

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-const attr__ATTRIBUTE_ADDRESS22 Int)

(declare-const attr__ATTRIBUTE_ADDRESS23 Int)

(declare-const thestring1 us_t)

(declare-const attr__ATTRIBUTE_ADDRESS24 Int)

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq17 (integer integer) Bool)

(declare-const dummy17 integer)

(declare-datatypes () ((t50b__ref (mk_t50b__ref (t50b__content integer)))))
(define-fun t50b__ref___projection ((a t50b__ref)) integer (t50b__content a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first4 (mk2 f l))) f)
     (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property4 range_first range_last low)
                   (dynamic_property4 range_first range_last high))))))

(declare-datatypes ()
((us_t2 (mk___t2 (elts2 (Array Int character))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))

(define-fun of_array2 ((a (Array Int character)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-const value__size6 Int)

(declare-fun object__size6 ((Array Int character)) Int)

(declare-const value__component__size4 Int)

(declare-fun object__component__size4 ((Array Int character)) Int)

(declare-const value__alignment6 Int)

(declare-fun object__alignment6 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size6 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment6 a))))

(define-fun bool_eq7 ((x us_t2)
  (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x)))
                  (to_rep1 (last4 (rt2 x))) (elts2 y)
                  (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))

(declare-fun user_eq18 (us_t2 us_t2) Bool)

(declare-const dummy18 us_t2)

(declare-datatypes () ((t51b__ref (mk_t51b__ref (t51b__content us_t2)))))
(define-fun t51b__ref___projection ((a t51b__ref)) us_t2 (t51b__content a))

(declare-const c56b Int)

(declare-const attr__ATTRIBUTE_ADDRESS25 Int)

(declare-const attr__ATTRIBUTE_ADDRESS26 Int)

(declare-const attr__ATTRIBUTE_ADDRESS27 Int)

(declare-const thestring2 us_t)

(declare-const attr__ATTRIBUTE_ADDRESS28 Int)

(define-fun dynamic_property6 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq19 (integer integer) Bool)

(declare-const dummy19 integer)

(declare-datatypes () ((t62b__ref (mk_t62b__ref (t62b__content integer)))))
(define-fun t62b__ref___projection ((a t62b__ref)) integer (t62b__content a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first6 (mk3 f l))) f)
     (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property6 range_first range_last low)
                   (dynamic_property6 range_first range_last high))))))

(declare-datatypes ()
((us_t3 (mk___t3 (elts3 (Array Int character))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))

(define-fun of_array3 ((a (Array Int character)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-const value__size7 Int)

(declare-fun object__size7 ((Array Int character)) Int)

(declare-const value__component__size5 Int)

(declare-fun object__component__size5 ((Array Int character)) Int)

(declare-const value__alignment7 Int)

(declare-fun object__alignment7 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size7 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment7 a))))

(define-fun bool_eq8 ((x us_t3)
  (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x)))
                  (to_rep1 (last6 (rt3 x))) (elts3 y)
                  (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))

(declare-fun user_eq20 (us_t3 us_t3) Bool)

(declare-const dummy20 us_t3)

(declare-datatypes () ((t63b__ref (mk_t63b__ref (t63b__content us_t3)))))
(define-fun t63b__ref___projection ((a t63b__ref)) us_t3 (t63b__content a))

(declare-fun temp___String_Literal_1218 (tuple0) (Array Int character))

;; temp___String_Literal_1218__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 1)) 68)
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 2)) 105))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 3)) 103))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 4)) 101))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 5)) 115))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 6)) 116))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 7)) 73))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 8)) 110))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 9)) 105))
     (= (to_rep (select (temp___String_Literal_1218 us_void_param) 10)) 116)) :pattern (
  (temp___String_Literal_1218 us_void_param)) )))

(declare-fun temp___String_Literal_1228 (tuple0) (Array Int character))

;; temp___String_Literal_1228__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 2)) 114))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 3)) 121))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 4)) 112))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 5)) 116))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 6)) 111))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 8)) 76))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 9)) 105))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 10)) 98))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 11)) 114))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 12)) 97))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 13)) 114))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 14)) 121))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 15)) 32))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 16)) 69))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 17)) 114))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 18)) 114))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 19)) 111))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 20)) 114))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 22)) 105))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 23)) 110))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 24)) 32))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 25)) 68))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 26)) 105))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 27)) 103))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 29)) 115))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 30)) 116))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 31)) 73))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 32)) 110))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 33)) 105))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 34)) 116))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 35)) 32))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 36)) 58))
     (= (to_rep (select (temp___String_Literal_1228 us_void_param) 37)) 32)) :pattern (
  (temp___String_Literal_1228 us_void_param)) )))

(declare-fun temp___String_Literal_1231 (tuple0) (Array Int character))

;; temp___String_Literal_1231__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 1)) 68)
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 2)) 105))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 3)) 103))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 4)) 101))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 5)) 115))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 6)) 116))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 7)) 85))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 8)) 112))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 9)) 100))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 10)) 97))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 11)) 116))
     (= (to_rep (select (temp___String_Literal_1231 us_void_param) 12)) 101)) :pattern (
  (temp___String_Literal_1231 us_void_param)) )))

(declare-fun temp___String_Literal_1241 (tuple0) (Array Int character))

;; temp___String_Literal_1241__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 2)) 114))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 3)) 121))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 4)) 112))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 5)) 116))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 6)) 111))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 8)) 76))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 9)) 105))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 10)) 98))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 11)) 114))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 12)) 97))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 13)) 114))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 14)) 121))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 15)) 32))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 16)) 69))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 17)) 114))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 18)) 114))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 19)) 111))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 20)) 114))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 22)) 105))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 23)) 110))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 24)) 32))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 25)) 68))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 26)) 105))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 27)) 103))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 29)) 115))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 30)) 116))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 31)) 85))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 32)) 112))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 33)) 100))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 34)) 97))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 35)) 116))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 36)) 101))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 37)) 32))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 38)) 58))
     (= (to_rep (select (temp___String_Literal_1241 us_void_param) 39)) 32)) :pattern (
  (temp___String_Literal_1241 us_void_param)) )))

(declare-fun temp___String_Literal_1244 (tuple0) (Array Int character))

;; temp___String_Literal_1244__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 1)) 68)
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 2)) 105))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 3)) 103))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 4)) 101))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 5)) 115))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 6)) 116))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 7)) 70))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 8)) 105))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 9)) 110))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 10)) 97))
     (= (to_rep (select (temp___String_Literal_1244 us_void_param) 11)) 108)) :pattern (
  (temp___String_Literal_1244 us_void_param)) )))

(declare-fun temp___String_Literal_1254 (tuple0) (Array Int character))

;; temp___String_Literal_1254__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 1)) 67)
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 2)) 114))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 3)) 121))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 4)) 112))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 5)) 116))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 6)) 111))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 8)) 76))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 9)) 105))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 10)) 98))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 11)) 114))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 12)) 97))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 13)) 114))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 14)) 121))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 15)) 32))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 16)) 69))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 17)) 114))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 18)) 114))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 19)) 111))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 20)) 114))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 22)) 105))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 23)) 110))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 24)) 32))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 25)) 68))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 26)) 105))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 27)) 103))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 28)) 101))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 29)) 115))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 30)) 116))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 31)) 70))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 32)) 105))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 33)) 110))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 34)) 97))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 35)) 108))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 36)) 32))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 37)) 58))
     (= (to_rep (select (temp___String_Literal_1254 us_void_param) 38)) 32)) :pattern (
  (temp___String_Literal_1254 us_void_param)) )))

(define-fun dynamic_invariant5 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant6 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

;; issystem__def_axiom
  (assert
  (= issystem (keystore__issystem__aggregate_def (of_int 0) (of_int 1)
              (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0)
              (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1)
              (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0)
              (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1)
              (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1)
              (of_int 1) (of_int 1))))

(define-fun dynamic_invariant7 ((temp___expr_271 Int)
  (temp___is_init_268 Bool) (temp___skip_constant_269 Bool)
  (temp___do_toplevel_270 Bool)) Bool (=>
                                      (or (= temp___is_init_268 true)
                                      (<= 0 255)) (in_range9
                                      temp___expr_271)))

(define-fun dynamic_invariant8 ((temp___expr_880 Int)
  (temp___is_init_877 Bool) (temp___skip_constant_878 Bool)
  (temp___do_toplevel_879 Bool)) Bool (=>
                                      (or (= temp___is_init_877 true)
                                      (<= 1 4096)) (in_range7
                                      temp___expr_880)))

(define-fun dynamic_invariant9 ((temp___expr_217 Int)
  (temp___is_init_214 Bool) (temp___skip_constant_215 Bool)
  (temp___do_toplevel_216 Bool)) Bool (=>
                                      (or (= temp___is_init_214 true)
                                      (<= 1 150)) (in_range4
                                      temp___expr_217)))

;; nodescription__def_axiom
  (assert (= nodescription (audittypes__nodescription__aggregate_def 32)))

;; nouser__def_axiom
  (assert (= nouser (temp___String_Literal_135 Tuple0)))

;; valid_numberlogentries__post_axiom
  (assert true)

;; nulldigest__def_axiom
  (assert
  (= nulldigest (mk___rep1
                (mk___split_fields1 (of_rep2 0) (of_rep4 3) (of_rep4 3)
                (temp___153 0)))))

(declare-const filestate us_private)

(declare-const state us_private)

(declare-const thedigest__split_fields unsigned32t)

(declare-const thedigest__split_fields1 returnvaluet)

(declare-const thedigest__split_fields2 returnvaluet)

(declare-const thedigest__split_fields3 (Array Int bytet))

(declare-const success Bool)

(declare-const retvalini Int)

(declare-const retvalupd Int)

(declare-const retvalfin Int)

(declare-const loopmax Int)

(declare-const bytesleft Int)

(declare-const block (Array Int character))

(declare-const size Int)

(declare-const j Int)

(declare-const c34b (Array Int character))

(declare-const result__ (Array Int character))

(declare-const result__1 (Array Int character))

(declare-const o returnvaluet)

(declare-const o1 returnvaluet)

(declare-const o2 unsigned32t)

(declare-const o3 unsigned32t)

(declare-const o4 returnvaluet)

(declare-const o5 returnvaluet)

(declare-const o6 (Array Int bytet))

(declare-const temp___1260 unsigned32t)

(declare-const temp___12601 returnvaluet)

(declare-const temp___12602 returnvaluet)

(declare-const temp___12603 (Array Int bytet))

(declare-const temp___1214 Int)

(declare-const temp___1213 Int)

(declare-const temp___1212 Int)

(declare-const temp___1211 (Array Int character))

(declare-const temp___1215 Int)

(declare-const temp___1210 Int)

(declare-const o7 (Array Int character))

(declare-const o8 Int)

(declare-const o9 Int)

(declare-const o10 Int)

(declare-const o11 Int)

(declare-const o12 Int)

(declare-const o13 Int)

(declare-const o14 Int)

(declare-const keystore__digest__B36b__thestring__assume us_t)

(declare-const o15 Int)

(declare-const temp___1222 us_t1)

(declare-const temp___1224 Int)

(declare-const o16 (Array Int character))

(declare-const temp___1225 us_t1)

(declare-const temp___1226 us_t1)

(declare-const o17 (Array Int character))

(declare-const temp___1221 us_t)

(declare-const o18 (Array Int character))

(declare-const o19 Int)

(declare-const o20 Int)

(declare-const o21 Int)

(declare-const o22 Int)

(declare-const o23 Int)

(declare-const o24 Int)

(declare-const keystore__digest__B48b__thestring__assume us_t)

(declare-const o25 Int)

(declare-const filestate1 us_private)

(declare-const state1 us_private)

(declare-const loopmax1 Int)

(declare-const bytesleft1 Int)

(declare-const block1 (Array Int character))

(declare-const j1 Int)

(declare-const c34b1 (Array Int character))

(declare-const result__2 (Array Int character))

(declare-const result int__ref)

(declare-const retvalupd1 Int)

(declare-const result1 int__ref)

(declare-const retvalfin1 Int)

(declare-const result2 int__ref)

(declare-const size1 Int)

(declare-const result3 us_split_fields__ref1)

(declare-const thedigest__split_fields4 us_split_fields2)

(declare-const retvalini1 Int)

(declare-const result4 int__ref)

(declare-const loopmax2 Int)

(declare-const result5 int__ref)

(declare-const bytesleft2 Int)

(declare-const result6 int__ref)

(declare-const j2 Int)

(declare-const retvalupd2 Int)

(declare-const bytesleft3 Int)

(declare-const block2 (Array Int character))

(declare-const size2 Int)

(declare-const j3 Int)

(declare-const result7 int__ref)

(declare-const size3 Int)

(declare-const result8 map__ref)

(declare-const block3 (Array Int character))

(declare-const retvalupd3 Int)

(declare-const result9 int__ref)

(declare-const bytesleft4 Int)

(declare-const bytesleft5 int__ref)

(declare-const bytesleft6 Int)

(declare-const retvalupd4 int__ref)

(declare-const bytesleft7 int__ref)

(declare-const block4 map__ref)

(declare-const size4 int__ref)

(declare-const j4 int__ref)

(declare-const retvalupd5 Int)

(declare-const bytesleft8 Int)

(declare-const block5 (Array Int character))

(declare-const size5 Int)

(declare-const j5 Int)

(declare-const retvalupd6 int__ref)

(declare-const bytesleft9 int__ref)

(declare-const block6 map__ref)

(declare-const size6 int__ref)

(declare-const j6 int__ref)

(declare-const retvalupd7 Int)

(declare-const bytesleft10 Int)

(declare-const block7 (Array Int character))

(declare-const size7 Int)

(declare-const j7 Int)

(declare-const thedigest__split_fields5 us_split_fields2)

(declare-const retvalfin2 Int)

(declare-const thedigest__split_fields6 us_split_fields__ref1)

(declare-const retvalfin3 int__ref)

(declare-const thedigest__split_fields7 us_split_fields2)

(declare-const retvalfin4 Int)

(declare-const thedigest__split_fields8 us_split_fields__ref1)

(declare-const retvalupd8 int__ref)

(declare-const retvalfin5 int__ref)

(declare-const loopmax3 int__ref)

(declare-const bytesleft11 int__ref)

(declare-const block8 map__ref)

(declare-const size8 int__ref)

(declare-const j8 int__ref)

(declare-const thedigest__split_fields9 us_split_fields2)

(declare-const retvalupd9 Int)

(declare-const retvalfin6 Int)

(declare-const loopmax4 Int)

(declare-const bytesleft12 Int)

(declare-const block9 (Array Int character))

(declare-const size9 Int)

(declare-const j9 Int)

(declare-const result10 bool__ref)

(declare-const success1 Bool)

(declare-const result11 map__ref)

(declare-const result__3 (Array Int character))

(declare-const result12 Bool)

(declare-const result13 map__ref)

(declare-const result__4 (Array Int character))

(declare-const result14 map__ref)

(declare-const result__5 (Array Int character))

(declare-const result__6 map__ref)

(declare-const result__7 (Array Int character))

(declare-const result15 map__ref)

(declare-const c34b2 (Array Int character))

(declare-const filestate2 us_private)

(declare-const state2 us_private)

(declare-const filestate3 us_private__ref)

(declare-const state3 us_private__ref)

(declare-const c34b3 map__ref)

(declare-const result__8 map__ref)

(declare-const filestate4 us_private)

(declare-const state4 us_private)

(declare-const c34b4 (Array Int character))

(declare-const result__9 (Array Int character))

(declare-const result16 map__ref)

(declare-const result__10 (Array Int character))

(declare-const result17 Bool)

(define-fun result__11 () map__ref (mk_map__ref result__))

(define-fun c34b5 () map__ref (mk_map__ref c34b))

(define-fun j10 () int__ref (mk_int__ref j))

(define-fun block10 () map__ref (mk_map__ref block))

(define-fun bytesleft13 () int__ref (mk_int__ref bytesleft))

(define-fun loopmax5 () int__ref (mk_int__ref loopmax))

;; H
  (assert
  (= (keystore__issystem__aggregate_def (of_int 0) (of_int 1) (of_int 1)
     (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0)
     (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0)
     (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1)
     (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1)
     (of_int 1) (of_int 1)) issystem))

;; H
  (assert (= (audittypes__nodescription__aggregate_def 32) nodescription))

;; H
  (assert (= (temp___String_Literal_135 Tuple0) nouser))

;; H
  (assert (= (to_rep4 o) 3))

;; H
  (assert (= (to_rep4 o1) 3))

;; H
  (assert (= (to_rep2 o2) 0))

;; H
  (assert (= o2 o3))

;; H
  (assert (= o1 o4))

;; H
  (assert (= o o5))

;; H
  (assert (= (temp___153 0) o6))

;; H
  (assert (= temp___1260 o3))

;; H
  (assert (= temp___12601 o4))

;; H
  (assert (= temp___12602 o5))

;; H
  (assert (= temp___12603 o6))

;; H
  (assert
  (= (mk___rep1
     (mk___split_fields1 temp___1260 temp___12601 temp___12602 temp___12603))
  nulldigest))

;; H
  (assert (in_range6 mechanism))

;; H
  (assert (=> (<= 0 28) (in_range8 retvalini)))

;; H
  (assert (= result (mk_int__ref retvalupd)))

;; H
  (assert (= retvalupd1 0))

;; H
  (assert (in_range8 retvalupd1))

;; H
  (assert (= result1 (mk_int__ref retvalfin)))

;; H
  (assert (= retvalfin1 0))

;; H
  (assert (in_range8 retvalfin1))

;; H
  (assert (=> (<= 1 2147483647) (in_range2 loopmax)))

;; H
  (assert (=> (<= 1 2147483647) (in_range2 bytesleft)))

;; H
  (assert (= result2 (mk_int__ref size)))

;; H
  (assert (= size1 100))

;; H
  (assert (in_range5 size1))

;; H
  (assert
  (= result3 (mk___split_fields__ref1
             (mk___split_fields1 thedigest__split_fields
             thedigest__split_fields1 thedigest__split_fields2
             thedigest__split_fields3))))

;; H
  (assert (= thedigest__split_fields4 (us_split_fields3 nulldigest)))

;; H
  (assert (in_range8 retvalini1))

;; H
  (assert (=> (= retvalini1 0) (= result4 loopmax5)))

;; H
  (assert
  (=> (= retvalini1 0)
  (= loopmax2 (+ (div1
                 (- (to_rep3
                    (rec__certtypes__rawdatat__datalength
                    (us_split_fields1 rawcertdata))) 1)
                 100) 1))))

;; H
  (assert (=> (= retvalini1 0) (= result5 bytesleft13)))

;; H
  (assert
  (=> (= retvalini1 0)
  (= bytesleft2 (to_rep3
                (rec__certtypes__rawdatat__datalength
                (us_split_fields1 rawcertdata))))))

;; H
  (assert (=> (= retvalini1 0) (= loopmax2 r29b)))

;; H
  (assert (=> (= retvalini1 0) (in_range2 r29b)))

;; H
  (assert (=> (= retvalini1 0) (= result6 j10)))

;; H
  (assert (=> (= retvalini1 0) (= j2 1)))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1214 j2))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1213 size1))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1212 retvalupd1))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1211 block))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1215 loopmax2))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1210 bytesleft2))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= loopmax2 (+ (div1
                 (- (to_rep3
                    (rec__certtypes__rawdatat__datalength
                    (us_split_fields1 rawcertdata))) 1)
                 100) 1))
  (= loopmax2 temp___1215)) (and (<= 1 j3) (<= j3 loopmax2)))
  (= bytesleft3 (- (to_rep3
                   (rec__certtypes__rawdatat__datalength
                   (us_split_fields1 rawcertdata))) (* (- j3 1) 100))))
  (and
  (<= 1 (to_rep3
        (rec__certtypes__rawdatat__datalength (us_split_fields1 rawcertdata))))
  (<= (to_rep3
      (rec__certtypes__rawdatat__datalength (us_split_fields1 rawcertdata))) 4096)))
  (and (<= 1 size2) (<= size2 100))) (= retvalini1 0)) (= retvalfin1 0)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b))
  (and
  (and
  (and
  (and (=> (<= 1 2147483647) (in_range2 bytesleft3))
  (=> (<= 0 28) (in_range8 retvalupd2)))
  (=> (<= 0 4294967295) (in_range5 size2)))
  (=> (<= 1 r29b) (dynamic_property1 1 r29b j3)))
  (and (<= 1 j3) (<= j3 r29b))))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b))
  (=> (< bytesleft3 100) (= result7 (mk_int__ref size2))))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b))
  (=> (< bytesleft3 100) (= size3 bytesleft3)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b))
  (=> (not (< bytesleft3 100)) (= size3 size2)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b))
  (= o7 (getblock
        (rec__certtypes__rawdatat__rawdata (us_split_fields1 rawcertdata))
        j3 size3)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= result8 (mk_map__ref block2)))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block3 o7))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (in_range8 retvalupd3))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b))
  (or
  (and
  (and (= bytesleft5 (mk_int__ref bytesleft3)) (= bytesleft6 bytesleft3))
  (=> (= retvalupd3 0) (= j3 loopmax2)))
  (and (not (=> (= retvalupd3 0) (= j3 loopmax2)))
  (and
  (and (= bytesleft5 (mk_int__ref bytesleft4)) (= bytesleft6 bytesleft4))
  (and
  (and (and (= o8 (- bytesleft3 100)) (in_range2 (- bytesleft3 100)))
  (and (= result9 (mk_int__ref bytesleft3)) (= bytesleft4 o8))) (= j3
  r29b))))))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= j4 (mk_int__ref j3)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= size4 (mk_int__ref size3)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= block4 (mk_map__ref block3)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft7 bytesleft5))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd4 (mk_int__ref retvalupd3)))))

;; H
  (assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= j5 j3))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= size5 size3))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block5 block3))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft8 bytesleft6))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd5 retvalupd3))))

;; H
  (assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= j6 j4))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= size6 size4))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block6 block4))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft9 bytesleft7))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd6 retvalupd4))))

;; H
  (assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= j7 j5))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= size7 size5))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block7 block5))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft10 bytesleft8))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd7 retvalupd5))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b))) (= j6 (mk_int__ref j2)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b))) (= size6 (mk_int__ref size1)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b))) (= block6 block10))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b)))
  (= bytesleft9 (mk_int__ref bytesleft2)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b)))
  (= retvalupd6 (mk_int__ref retvalupd1)))))

;; H
  (assert
  (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= j7 j2))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b))) (= size7 size1))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b))) (= block7 block1))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b))) (= bytesleft10 bytesleft2))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (and (<= 1 j2) (<= j2 r29b))) (= retvalupd7 retvalupd1))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (= (int__content retvalupd6) 0) (in_range8 retvalfin2))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (= (int__content retvalupd6) 0)
  (= retvalfin3 (mk_int__ref retvalfin2)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (= (int__content retvalupd6) 0)
  (= thedigest__split_fields6 (mk___split_fields__ref1
                              thedigest__split_fields5)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (= (int__content retvalupd6) 0) (= retvalfin4 retvalfin2))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (= (int__content retvalupd6) 0)
  (= thedigest__split_fields7 thedigest__split_fields5))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (= (int__content retvalupd6) 0))
  (= retvalfin3 (mk_int__ref retvalfin1)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (= (int__content retvalupd6) 0))
  (= thedigest__split_fields6 (mk___split_fields__ref1
                              thedigest__split_fields4)))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (= (int__content retvalupd6) 0)) (= retvalfin4 retvalfin1))))

;; H
  (assert
  (=> (= retvalini1 0)
  (=> (not (= (int__content retvalupd6) 0))
  (= thedigest__split_fields7 thedigest__split_fields4))))

;; H
  (assert (=> (= retvalini1 0) (= j8 j6)))

;; H
  (assert (=> (= retvalini1 0) (= size8 size6)))

;; H
  (assert (=> (= retvalini1 0) (= block8 block6)))

;; H
  (assert (=> (= retvalini1 0) (= bytesleft11 bytesleft9)))

;; H
  (assert (=> (= retvalini1 0) (= loopmax3 (mk_int__ref loopmax2))))

;; H
  (assert (=> (= retvalini1 0) (= retvalfin5 retvalfin3)))

;; H
  (assert (=> (= retvalini1 0) (= retvalupd8 retvalupd6)))

;; H
  (assert
  (=> (= retvalini1 0) (= thedigest__split_fields8 thedigest__split_fields6)))

;; H
  (assert (=> (= retvalini1 0) (= j9 j7)))

;; H
  (assert (=> (= retvalini1 0) (= size9 size7)))

;; H
  (assert (=> (= retvalini1 0) (= block9 block7)))

;; H
  (assert (=> (= retvalini1 0) (= bytesleft12 bytesleft10)))

;; H
  (assert (=> (= retvalini1 0) (= loopmax4 loopmax2)))

;; H
  (assert (=> (= retvalini1 0) (= retvalfin6 retvalfin4)))

;; H
  (assert (=> (= retvalini1 0) (= retvalupd9 retvalupd7)))

;; H
  (assert
  (=> (= retvalini1 0) (= thedigest__split_fields9 thedigest__split_fields7)))

;; H
  (assert (=> (not (= retvalini1 0)) (= j8 j10)))

;; H
  (assert (=> (not (= retvalini1 0)) (= size8 (mk_int__ref size1))))

;; H
  (assert (=> (not (= retvalini1 0)) (= block8 block10)))

;; H
  (assert (=> (not (= retvalini1 0)) (= bytesleft11 bytesleft13)))

;; H
  (assert (=> (not (= retvalini1 0)) (= loopmax3 loopmax5)))

;; H
  (assert
  (=> (not (= retvalini1 0)) (= retvalfin5 (mk_int__ref retvalfin1))))

;; H
  (assert
  (=> (not (= retvalini1 0)) (= retvalupd8 (mk_int__ref retvalupd1))))

;; H
  (assert
  (=> (not (= retvalini1 0))
  (= thedigest__split_fields8 (mk___split_fields__ref1
                              thedigest__split_fields4))))

;; H
  (assert (=> (not (= retvalini1 0)) (= j9 j1)))

;; H
  (assert (=> (not (= retvalini1 0)) (= size9 size1)))

;; H
  (assert (=> (not (= retvalini1 0)) (= block9 block1)))

;; H
  (assert (=> (not (= retvalini1 0)) (= bytesleft12 bytesleft1)))

;; H
  (assert (=> (not (= retvalini1 0)) (= loopmax4 loopmax1)))

;; H
  (assert (=> (not (= retvalini1 0)) (= retvalfin6 retvalfin1)))

;; H
  (assert (=> (not (= retvalini1 0)) (= retvalupd9 retvalupd1)))

;; H
  (assert
  (=> (not (= retvalini1 0))
  (= thedigest__split_fields9 thedigest__split_fields4)))

;; H
  (assert (= result10 (mk_bool__ref success)))

;; H
  (assert
  (= success1 (ite (= retvalini1 0)
              (ite (= (int__content retvalupd8) 0)
              (ite (= (int__content retvalfin5) 0) true false) false) false)))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= retvalini1 c32b)))

;; H
  (assert (=> (= (select issystem retvalini1) true) (in_range8 c32b)))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= result11 result__11)))

;; H
  (assert
  (=> (= (select issystem retvalini1) true) (= result__3 nodescription)))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE8 c32b)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE8 c32b))))))
  (= o9 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE8 c32b)))))
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE8 c32b)))))) 1)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE8 c32b)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE8 c32b))))))) (=
  o9 0))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (<= 1 37) (= o10 (+ (- 37 1) 1)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true) (=> (not (<= 1 37)) (= o10 0))))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= o11 (+ o10 o9))))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= o12 (+ 1 o11))))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= o13 (- o12 1))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (and (= o14 o13) (in_range2 o13))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (= keystore__digest__B36b__thestring__assume (mk___t
                                               (concat1
                                               (temp___String_Literal_1228
                                               Tuple0) 1 37
                                               (elts
                                               (to_string
                                               (attr__ATTRIBUTE_IMAGE8 c32b)))
                                               (to_rep1
                                               (first
                                               (rt
                                               (to_string
                                               (attr__ATTRIBUTE_IMAGE8 c32b)))))
                                               (to_rep1
                                               (last
                                               (rt
                                               (to_string
                                               (attr__ATTRIBUTE_IMAGE8 c32b))))))
                                               (mk 1 o14)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (= keystore__digest__B36b__thestring__assume thestring)))

;; H
  (assert
  (=> (= (select issystem retvalini1) true) (dynamic_invariant1 thestring
  true false true)))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (and (= o15 (length thestring)) (in_range1 (length thestring)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (= result12 (ite (<= o15 150) true false))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true)
  (= (ite (<= (to_rep1 (first (rt thestring))) (to_rep1
                                               (last (rt thestring))))
     (+ (- (to_rep1 (last (rt thestring))) (to_rep1 (first (rt thestring)))) 1)
     0) (ite (<= 1 (length thestring)) (+ (- (length thestring) 1) 1) 0)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true)
  (= temp___1222 (mk___t1
                 (slide (elts thestring) (to_rep1 (first (rt thestring))) 1)
                 (mk1 1 (length thestring)))))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true)
  (and (= temp___1224 (length thestring)) (in_range1 (length thestring))))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true)
  (=> (<= 1 temp___1224)
  (and (and (<= 1 1) (<= 1 150))
  (and (<= 1 temp___1224) (<= temp___1224 150)))))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true) (= o16 result__3))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true) (= temp___1225 (mk___t1 o16 (mk1 1 temp___1224))))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true)
  (= (ite (<= (to_rep1 (first2 (rt1 temp___1222))) (to_rep1
                                                   (last2 (rt1 temp___1222))))
     (+ (- (to_rep1 (last2 (rt1 temp___1222))) (to_rep1
                                               (first2 (rt1 temp___1222)))) 1)
     0) (ite (<= (to_rep1 (first2 (rt1 temp___1225))) (to_rep1
                                                      (last2
                                                      (rt1 temp___1225))))
        (+ (- (to_rep1 (last2 (rt1 temp___1225))) (to_rep1
                                                  (first2 (rt1 temp___1225)))) 1)
        0)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true) (= temp___1226 temp___1222))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true)
  (forall ((temp___1227 Int))
  (ite (and (<= 1 temp___1227) (<= temp___1227 (length thestring)))
  (= (select o17 temp___1227) (select (elts1 temp___1226) temp___1227))
  (= (select o17 temp___1227) (select result__3 temp___1227)))))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true) (= result13 (mk_map__ref result__3)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true) (= result__4 o17))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true) (= result__6 (mk_map__ref result__4)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (= result12 true) (= result__7 result__4))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (not (= result12 true))
  (=> (<= 1 150)
  (and
  (and (<= (to_rep1 (first (rt thestring))) 1)
  (<= 1 (to_rep1 (last (rt thestring)))))
  (and (<= (to_rep1 (first (rt thestring))) 150)
  (<= 150 (to_rep1 (last (rt thestring))))))))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (not (= result12 true)) (= temp___1221 thestring))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (not (= result12 true)) (= o18 (elts temp___1221)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (not (= result12 true)) (= result14 (mk_map__ref result__3)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (not (= result12 true)) (= result__5 o18))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (not (= result12 true)) (= result__6 (mk_map__ref result__5)))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (=> (not (= result12 true)) (= result__7 result__5))))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= result15 c34b5)))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (= c34b2 (map__content result__6))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (= (valid_numberlogentries state2) true)))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= result__8 result__6)))

;; H
  (assert
  (=> (= (select issystem retvalini1) true) (= c34b3 (mk_map__ref c34b2))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (= state3 (mk___private__ref state2))))

;; H
  (assert
  (=> (= (select issystem retvalini1) true)
  (= filestate3 (mk___private__ref filestate2))))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= result__9 result__7)))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= c34b4 c34b2)))

;; H
  (assert (=> (= (select issystem retvalini1) true) (= state4 state2)))

;; H
  (assert
  (=> (= (select issystem retvalini1) true) (= filestate4 filestate2)))

;; H
  (assert
  (=> (not (= (select issystem retvalini1) true)) (= result__8 result__11)))

;; H
  (assert (=> (not (= (select issystem retvalini1) true)) (= c34b3 c34b5)))

;; H
  (assert
  (=> (not (= (select issystem retvalini1) true))
  (= state3 (mk___private__ref state))))

;; H
  (assert
  (=> (not (= (select issystem retvalini1) true))
  (= filestate3 (mk___private__ref filestate))))

;; H
  (assert
  (=> (not (= (select issystem retvalini1) true)) (= result__9 result__2)))

;; H
  (assert (=> (not (= (select issystem retvalini1) true)) (= c34b4 c34b1)))

;; H
  (assert (=> (not (= (select issystem retvalini1) true)) (= state4 state1)))

;; H
  (assert
  (=> (not (= (select issystem retvalini1) true)) (= filestate4 filestate1)))

;; H
  (assert (= (select issystem (int__content retvalupd8)) true))

;; H
  (assert (= (int__content retvalupd8) c44b))

;; H
  (assert (in_range8 c44b))

;; H
  (assert (= result16 (mk_map__ref result__1)))

;; H
  (assert (= result__10 nodescription))

;; H
  (assert
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE8 c44b)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE8 c44b))))))
  (= o19 (+ (- (to_rep1
               (last (rt (to_string (attr__ATTRIBUTE_IMAGE8 c44b)))))
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE8 c44b)))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE8 c44b)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE8 c44b)))))))
  (= o19 0)))

;; H
  (assert (=> (<= 1 39) (= o20 (+ (- 39 1) 1))))

;; H
  (assert (=> (not (<= 1 39)) (= o20 0)))

;; H
  (assert (= o21 (+ o20 o19)))

;; H
  (assert (= o22 (+ 1 o21)))

;; H
  (assert (= o23 (- o22 1)))

;; H
  (assert (and (= o24 o23) (in_range2 o23)))

;; H
  (assert
  (= keystore__digest__B48b__thestring__assume (mk___t
                                               (concat1
                                               (temp___String_Literal_1241
                                               Tuple0) 1 39
                                               (elts
                                               (to_string
                                               (attr__ATTRIBUTE_IMAGE8 c44b)))
                                               (to_rep1
                                               (first
                                               (rt
                                               (to_string
                                               (attr__ATTRIBUTE_IMAGE8 c44b)))))
                                               (to_rep1
                                               (last
                                               (rt
                                               (to_string
                                               (attr__ATTRIBUTE_IMAGE8 c44b))))))
                                               (mk 1 o24))))

;; H
  (assert (= keystore__digest__B48b__thestring__assume thestring1))

;; H
  (assert (dynamic_invariant1 thestring1 true false true))

;; H
  (assert (and (= o25 (length thestring1)) (in_range1 (length thestring1))))

;; H
  (assert (= result17 (ite (<= o25 150) true false)))

;; H
  (assert (not (= result17 true)))

;; H
  (assert (<= 1 150))

(assert
;; WP_parameter_def
 ;; File "keystore.ads", line 100, characters 0-0
  (not (<= (to_rep1 (first (rt thestring1))) 1)))
(check-sat)
(exit)
