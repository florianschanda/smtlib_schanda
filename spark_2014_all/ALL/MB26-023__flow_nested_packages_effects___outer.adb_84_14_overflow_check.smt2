;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun get_deep_state (Int) Int)

(declare-fun get_deep_state__function_guard (Int Int) Bool)

;; get_deep_state__post_axiom
  (assert
  (forall ((outer__inner__nested_in_body__deep_ref Int))
  (! (=> (dynamic_invariant outer__inner__nested_in_body__deep_ref true true
     true) (dynamic_invariant
     (get_deep_state outer__inner__nested_in_body__deep_ref) true false
     true)) :pattern ((get_deep_state outer__inner__nested_in_body__deep_ref)) )))

;; get_deep_state__def_axiom
  (assert
  (forall ((outer__inner__nested_in_body__deep_ref Int))
  (! (=> (dynamic_invariant outer__inner__nested_in_body__deep_ref true true
     true)
     (= (get_deep_state outer__inner__nested_in_body__deep_ref) outer__inner__nested_in_body__deep_ref)) :pattern (
  (get_deep_state outer__inner__nested_in_body__deep_ref)) )))

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun var () Int)

(declare-fun foo () Int)

(declare-fun x () Int)

(declare-fun nested_in_spec_var () Int)

(declare-fun deep_var () Int)

(declare-fun y () Int)

(declare-fun z () Int)

(declare-fun deep_ref () Int)

(declare-fun result () Int)

(declare-fun x1 () Int)

;; H
  (assert (in_range foo))

;; H
  (assert (in_range var))

;; H
  (assert (= result x))

;; H
  (assert (= x1 0))

;; H
  (assert (in_range x1))

;; H
  (assert (in_range nested_in_spec_var))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range y)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range z)))

;; H
  (assert (in_range deep_ref))

;; H
  (assert (in_range deep_var))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range (+ x1 var))))
(check-sat)
(exit)
