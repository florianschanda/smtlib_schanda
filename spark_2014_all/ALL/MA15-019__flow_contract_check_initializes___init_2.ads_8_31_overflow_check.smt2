;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-fun sum_state (Int us_private) Int)

(declare-fun sum_state__function_guard (Int Int us_private) Bool)

;; sum_state__post_axiom
  (assert
  (forall ((init__b Int))
  (forall ((init__state us_private))
  (! (=> (dynamic_invariant init__b true true true) (dynamic_invariant
     (sum_state init__b init__state) true false true)) :pattern ((sum_state
                                                                 init__b
                                                                 init__state)) ))))

(declare-fun sum_all (Int us_private Int) Int)

(declare-fun sum_all__function_guard (Int Int us_private Int) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

;; sum_all__post_axiom
  (assert
  (forall ((init__b Int) (init__a Int))
  (forall ((init__state us_private))
  (! (=>
     (and (dynamic_invariant init__b true true true) (dynamic_invariant
     init__a true true true)) (dynamic_invariant
     (sum_all init__b init__state init__a) true false true)) :pattern (
  (sum_all init__b init__state init__a)) ))))

(declare-const state us_private)

(declare-const a Int)

(declare-const b Int)

(declare-const x Int)

(declare-const y Int)

(declare-const z Int)

(declare-const o Int)

(declare-const result Int)

(declare-const x1 Int)

(declare-const result1 Int)

(declare-const y1 Int)

;; H
  (assert (in_range a))

;; H
  (assert (in_range b))

;; H
  (assert (= (sum_all b state a) 0))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref x)))

;; H
  (assert (= x1 a))

;; H
  (assert (in_range x1))

;; H
  (assert (and (= o (sum_state b state)) (in_range o)))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref y)))

;; H
  (assert (= y1 o))

;; H
  (assert (in_range y1))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range z)))

(assert
;; WP_parameter_def
 ;; File "init.ads", line 7, characters 0-0
  (not (in_range (+ x1 y1))))
(check-sat)
(exit)
