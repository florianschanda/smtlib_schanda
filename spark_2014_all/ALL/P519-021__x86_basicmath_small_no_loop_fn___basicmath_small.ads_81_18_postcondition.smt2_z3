;; produced by z3_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2int x) (- (- 256 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16))
                                            (bv2int x)
                                            (- (- 65536 (bv2int x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-fun nth2 ((_ BitVec 32) Int) Bool)

(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun to_int3 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32))
                                            (bv2int x)
                                            (- (- 4294967296 (bv2int x)))))

(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)

(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))

(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-fun nth3 ((_ BitVec 64) Int) Bool)

(declare-fun lsr3 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun asr3 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun lsl3 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_right4 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_left4 ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun to_int4 ((x (_ BitVec 64))) Int (ite (bvsge x (_ bv0 64))
                                            (bv2int x)
                                            (- (- 18446744073709551616 (bv2int x)))))

(define-fun uint_in_range3 ((i Int)) Bool (and (<= 0 i)
                                          (<= i 18446744073709551615)))

(declare-fun nth_bv3 ((_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun eq_sub_bv3 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

(define-fun eq_sub3 ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth3 a j) (nth3 b j)))))

(declare-datatypes () ((t__ref3 (mk_t__ref3 (t__content3 (_ BitVec 64))))))
(declare-fun power3 ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun bv_min3 ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) x y))

(define-fun bv_max3 ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) y x))

(define-fun to_int5 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort unsigned64 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 64))

(declare-fun user_eq (unsigned64 unsigned64) Bool)

(declare-const dummy unsigned64)

(declare-datatypes ()
((unsigned64__ref (mk_unsigned64__ref (unsigned64__content unsigned64)))))
(define-fun unsigned64__ref___projection ((a unsigned64__ref)) unsigned64
  (unsigned64__content a))

(define-fun dynamic_invariant ((temp___expr_202 (_ BitVec 64))
  (temp___is_init_199 Bool) (temp___skip_constant_200 Bool)
  (temp___do_toplevel_201 Bool)) Bool true)

(declare-sort unsigned16 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 16))

(declare-fun user_eq1 (unsigned16 unsigned16) Bool)

(declare-const dummy1 unsigned16)

(declare-datatypes ()
((unsigned16__ref (mk_unsigned16__ref (unsigned16__content unsigned16)))))
(define-fun unsigned16__ref___projection ((a unsigned16__ref)) unsigned16
  (unsigned16__content a))

(define-fun dynamic_invariant1 ((temp___expr_214 (_ BitVec 16))
  (temp___is_init_211 Bool) (temp___skip_constant_212 Bool)
  (temp___do_toplevel_213 Bool)) Bool true)

(declare-sort unsigned8 0)

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (unsigned8 unsigned8) Bool)

(declare-const dummy2 unsigned8)

(declare-datatypes ()
((unsigned8__ref (mk_unsigned8__ref (unsigned8__content unsigned8)))))
(define-fun unsigned8__ref___projection ((a unsigned8__ref)) unsigned8
  (unsigned8__content a))

(declare-fun to_rep (unsigned8) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) unsigned8)

;; inversion_axiom
  (assert
  (forall ((x unsigned8))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))) )))

(define-fun to_int6 ((x unsigned8)) Int (bv2int (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x unsigned8)) (! (uint_in_range
  (to_int6 x)) :pattern ((to_int6 x)) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array (_ BitVec 64) unsigned8))))))
(declare-fun slide ((Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64)) (Array (_ BitVec 64) unsigned8))

;; slide_eq
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8)))
  (forall ((first (_ BitVec 64)))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8)))
  (forall ((old_first (_ BitVec 64)))
  (forall ((new_first (_ BitVec 64)))
  (forall ((i (_ BitVec 64)))
  (! (= (select (slide a old_first new_first) i) (select a (bvsub i (bvsub new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64) (Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64)) (Array (_ BitVec 64) unsigned8))

;; concat_def
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (forall ((i (_ BitVec 64)))
  (! (and
     (=> (and (bvule a_first i) (bvule i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (bvugt i a_last)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (bvadd (bvsub i a_last) (bvsub b_first #x0000000000000001)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (unsigned8
  (_ BitVec 64)) (Array (_ BitVec 64) unsigned8))

;; singleton_def
  (assert
  (forall ((v unsigned8))
  (forall ((i (_ BitVec 64)))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array (_ BitVec 64) unsigned8))
  (a__first (_ BitVec 64)) (a__last (_ BitVec 64))
  (b (Array (_ BitVec 64) unsigned8)) (b__first (_ BitVec 64))
  (b__last (_ BitVec 64))) Bool (ite (and
                                     (ite (bvule a__first a__last)
                                     (and (bvule b__first b__last)
                                     (= (bvsub a__last a__first) (bvsub b__last b__first)))
                                     (bvugt b__first b__last))
                                     (forall ((temp___idx_132 (_ BitVec 64)))
                                     (=>
                                     (and (bvule a__first temp___idx_132)
                                     (bvule temp___idx_132 a__last))
                                     (= (to_rep (select a temp___idx_132))
                                     (to_rep
                                     (select b (bvadd (bvsub b__first a__first) temp___idx_132)))))))
                                true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a__first (_ BitVec 64)) (a__last (_ BitVec 64))
  (b__first (_ BitVec 64)) (b__last (_ BitVec 64)))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (bvule a__first a__last)
  (and (bvule b__first b__last)
  (= (bvsub a__last a__first) (bvsub b__last b__first)))
  (bvugt b__first b__last))
  (forall ((temp___idx_132 (_ BitVec 64)))
  (=> (and (bvule a__first temp___idx_132) (bvule temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (bvadd (bvsub b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64) (Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64)) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i (_ BitVec 64)) (j (_ BitVec 64)))
     (and (bvule i a_last)
     (and (bvult j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (bvult i a_last)
     (bvult (to_rep (select a (bvadd i #x0000000000000001))) (to_rep
                                                             (select b (bvadd j #x0000000000000001))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i (_ BitVec 64)) (j (_ BitVec 64)))
     (and (bvule i b_last)
     (and (bvult j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (bvult i b_last)
     (bvugt (to_rep (select a (bvadd j #x0000000000000001))) (to_rep
                                                             (select b (bvadd i #x0000000000000001))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-sort unsigned32 0)

(declare-const attr__ATTRIBUTE_MODULUS3 (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 32))

(declare-fun user_eq3 (unsigned32 unsigned32) Bool)

(declare-const dummy3 unsigned32)

(declare-datatypes ()
((unsigned32__ref (mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32
  (unsigned32__content a))

(define-fun dynamic_invariant2 ((temp___expr_208 (_ BitVec 32))
  (temp___is_init_205 Bool) (temp___skip_constant_206 Bool)
  (temp___do_toplevel_207 Bool)) Bool true)

(declare-fun eax ((_ BitVec 64)) (_ BitVec 32))

(declare-fun eax__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; eax__post_axiom
  (assert
  (forall ((x86__rax (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rax true true true)
     (let ((result (eax x86__rax)))
     (and
     (= result ((_ extract 31 0) (bvand x86__rax ((_ int2bv 64) 4294967295))))
     (dynamic_invariant2 result true false true)))) :pattern ((eax x86__rax)) )))

(declare-fun writereg32post ((_ BitVec 64) (_ BitVec 32)) Bool)

(declare-fun writereg32post__function_guard (Bool (_ BitVec 64)
  (_ BitVec 32)) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-fun readreg32 ((_ BitVec 64)) (_ BitVec 32))

(declare-fun readreg32__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

(declare-fun ecx ((_ BitVec 64)) (_ BitVec 32))

(declare-fun ecx__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; ecx__post_axiom
  (assert
  (forall ((x86__rcx (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rcx true true true)
     (let ((result (ecx x86__rcx)))
     (and (= result (readreg32 x86__rcx)) (dynamic_invariant2 result true
     false true)))) :pattern ((ecx x86__rcx)) )))

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-fun edx ((_ BitVec 64)) (_ BitVec 32))

(declare-fun edx__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; edx__post_axiom
  (assert
  (forall ((x86__rdx (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rdx true true true)
     (let ((result (edx x86__rdx)))
     (and (= result (readreg32 x86__rdx)) (dynamic_invariant2 result true
     false true)))) :pattern ((edx x86__rdx)) )))

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(declare-fun writereg16post ((_ BitVec 64) (_ BitVec 64) (_ BitVec 16)) Bool)

(declare-fun writereg16post__function_guard (Bool (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 16)) Bool)

(declare-fun ebx ((_ BitVec 64)) (_ BitVec 32))

(declare-fun ebx__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; ebx__post_axiom
  (assert
  (forall ((x86__rbx (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rbx true true true)
     (let ((result (ebx x86__rbx)))
     (and (= result (readreg32 x86__rbx)) (dynamic_invariant2 result true
     false true)))) :pattern ((ebx x86__rbx)) )))

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-fun esp ((_ BitVec 64)) (_ BitVec 32))

(declare-fun esp__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; esp__post_axiom
  (assert
  (forall ((x86__rsp (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rsp true true true)
     (let ((result (esp x86__rsp)))
     (and (= result (readreg32 x86__rsp)) (dynamic_invariant2 result true
     false true)))) :pattern ((esp x86__rsp)) )))

(declare-const attr__ATTRIBUTE_ADDRESS22 Int)

(declare-const attr__ATTRIBUTE_ADDRESS23 Int)

(declare-fun esi ((_ BitVec 64)) (_ BitVec 32))

(declare-fun esi__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; esi__post_axiom
  (assert
  (forall ((x86__rsi (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rsi true true true)
     (let ((result (esi x86__rsi)))
     (and (= result (readreg32 x86__rsi)) (dynamic_invariant2 result true
     false true)))) :pattern ((esi x86__rsi)) )))

(declare-const attr__ATTRIBUTE_ADDRESS24 Int)

(declare-fun edi ((_ BitVec 64)) (_ BitVec 32))

(declare-fun edi__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; edi__post_axiom
  (assert
  (forall ((x86__rdi (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rdi true true true)
     (let ((result (edi x86__rdi)))
     (and (= result (readreg32 x86__rdi)) (dynamic_invariant2 result true
     false true)))) :pattern ((edi x86__rdi)) )))

(declare-const attr__ATTRIBUTE_ADDRESS25 Int)

(declare-const attr__ATTRIBUTE_ADDRESS26 Int)

(declare-const attr__ATTRIBUTE_ADDRESS27 Int)

(declare-const attr__ATTRIBUTE_ADDRESS28 Int)

(declare-const attr__ATTRIBUTE_ADDRESS29 Int)

(declare-const attr__ATTRIBUTE_ADDRESS30 Int)

(declare-const attr__ATTRIBUTE_ADDRESS31 Int)

(declare-const attr__ATTRIBUTE_ADDRESS32 Int)

(declare-const attr__ATTRIBUTE_ADDRESS33 Int)

(define-fun dynamic_invariant3 ((temp___expr_220 (_ BitVec 8))
  (temp___is_init_217 Bool) (temp___skip_constant_218 Bool)
  (temp___do_toplevel_219 Bool)) Bool true)

(declare-fun readmem8 ((_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) (_ BitVec 8))

(declare-fun readmem8__function_guard ((_ BitVec 8) (_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) Bool)

;; readmem8__post_axiom
  (assert
  (forall ((addr (_ BitVec 64)))
  (forall ((x86__memory (Array (_ BitVec 64) unsigned8)))
  (! (=> (dynamic_invariant addr true true true)
     (let ((result (readmem8 addr x86__memory)))
     (and (= result (to_rep (select x86__memory addr))) (dynamic_invariant3
     result true false true)))) :pattern ((readmem8 addr x86__memory)) ))))

(declare-fun readmem32 ((_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) (_ BitVec 32))

(declare-fun readmem32__function_guard ((_ BitVec 32) (_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) Bool)

;; readmem32__post_axiom
  (assert
  (forall ((addr (_ BitVec 64)))
  (forall ((x86__memory (Array (_ BitVec 64) unsigned8)))
  (! (=> (dynamic_invariant addr true true true)
     (let ((result (readmem32 addr x86__memory)))
     (and
     (and
     (and
     (and
     (= (bvand result ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                               (select x86__memory addr))))
     (= (bvand result ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
     (= (bvand result ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
     (= (bvand result ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216))))
     (dynamic_invariant2 result true false true)))) :pattern ((readmem32 addr
                                                              x86__memory)) ))))

(declare-fun readmem64 ((_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) (_ BitVec 64))

(declare-fun readmem64__function_guard ((_ BitVec 64) (_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) Bool)

;; readmem64__post_axiom
  (assert
  (forall ((addr (_ BitVec 64)))
  (forall ((x86__memory (Array (_ BitVec 64) unsigned8)))
  (! (=> (dynamic_invariant addr true true true)
     (let ((result (readmem64 addr x86__memory)))
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (bvand result ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                               (select x86__memory addr))))
     (= (bvand result ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
     (= (bvand result ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
     (= (bvand result ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
     (= (bvand result ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
     (= (bvand result ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
     (= (bvand result ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
     (= (bvand result ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
     (dynamic_invariant result true false true)))) :pattern ((readmem64 addr
                                                             x86__memory)) ))))

(declare-sort unsigned641 0)

(declare-const attr__ATTRIBUTE_MODULUS4 (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 64))

(declare-fun user_eq4 (unsigned641 unsigned641) Bool)

(declare-const dummy4 unsigned641)

(declare-datatypes ()
((unsigned64__ref1 (mk_unsigned64__ref1 (unsigned64__content1 unsigned641)))))
(define-fun unsigned64__ref___2__projection ((a unsigned64__ref1)) unsigned641
  (unsigned64__content1 a))

(define-fun dynamic_invariant4 ((temp___expr_274 (_ BitVec 64))
  (temp___is_init_271 Bool) (temp___skip_constant_272 Bool)
  (temp___do_toplevel_273 Bool)) Bool true)

(declare-sort unsigned81 0)

(declare-const attr__ATTRIBUTE_MODULUS5 (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))

(declare-fun user_eq5 (unsigned81 unsigned81) Bool)

(declare-const dummy5 unsigned81)

(declare-datatypes ()
((unsigned8__ref1 (mk_unsigned8__ref1 (unsigned8__content1 unsigned81)))))
(define-fun unsigned8__ref___2__projection ((a unsigned8__ref1)) unsigned81
  (unsigned8__content1 a))

(define-fun dynamic_invariant5 ((temp___expr_292 (_ BitVec 8))
  (temp___is_init_289 Bool) (temp___skip_constant_290 Bool)
  (temp___do_toplevel_291 Bool)) Bool true)

(declare-const attr__ATTRIBUTE_ADDRESS34 Int)

(declare-const attr__ATTRIBUTE_ADDRESS35 Int)

(declare-fun inrange64 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun inrange64__function_guard (Bool (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS36 Int)

(declare-const attr__ATTRIBUTE_ADDRESS37 Int)

(declare-const attr__ATTRIBUTE_ADDRESS38 Int)

(declare-const attr__ATTRIBUTE_ADDRESS39 Int)

(declare-const attr__ATTRIBUTE_ADDRESS40 Int)

(declare-const attr__ATTRIBUTE_ADDRESS41 Int)

(declare-const attr__ATTRIBUTE_ADDRESS42 Int)

(declare-const attr__ATTRIBUTE_ADDRESS43 Int)

(declare-const attr__ATTRIBUTE_ADDRESS44 Int)

(declare-const attr__ATTRIBUTE_ADDRESS45 Int)

(declare-const attr__ATTRIBUTE_ADDRESS46 Int)

(declare-const attr__ATTRIBUTE_ADDRESS47 Int)

(declare-const attr__ATTRIBUTE_ADDRESS48 Int)

(declare-const attr__ATTRIBUTE_ADDRESS49 Int)

(declare-const attr__ATTRIBUTE_ADDRESS50 Int)

;; inrange64__post_axiom
  (assert
  (forall ((var (_ BitVec 64)) (bottom (_ BitVec 64))
  (range_size (_ BitVec 64)))
  (! (=>
     (and
     (and (dynamic_invariant var true true true) (dynamic_invariant bottom
     true true true)) (dynamic_invariant range_size true true true))
     (= (= (inrange64 var bottom range_size) true)
     (ite (bvule bottom (bvadd (bvsub ((_ int2bv 64) 18446744073709551615) range_size) ((_ int2bv 64) 1)))
     (and (bvule bottom var)
     (bvule var (bvadd bottom (bvsub range_size ((_ int2bv 64) 1)))))
     (or
     (and (bvule bottom var)
     (bvule var ((_ int2bv 64) 18446744073709551615)))
     (bvule var (bvsub (bvsub range_size (bvsub ((_ int2bv 64) 18446744073709551615) bottom)) ((_ int2bv 64) 2))))))) :pattern (
  (inrange64 var bottom range_size)) )))

(declare-fun readreg16 ((_ BitVec 64)) (_ BitVec 16))

(declare-fun readreg16__function_guard ((_ BitVec 16) (_ BitVec 64)) Bool)

;; readreg16__post_axiom
  (assert
  (forall ((reg (_ BitVec 64)))
  (! (=> (dynamic_invariant reg true true true)
     (let ((result (readreg16 reg)))
     (and (= result ((_ extract 15 0) (bvand reg ((_ int2bv 64) 65535))))
     (dynamic_invariant1 result true false true)))) :pattern ((readreg16 reg)) )))

;; writereg16post__post_axiom
  (assert
  (forall ((regold (_ BitVec 64)) (regnew (_ BitVec 64)))
  (forall ((val__ (_ BitVec 16)))
  (! (=>
     (and
     (and (dynamic_invariant regold true true true) (dynamic_invariant regnew
     true true true)) (dynamic_invariant1 val__ true true true))
     (= (= (writereg16post regold regnew val__) true)
     (and (= (readreg16 regnew) val__)
     (= (bvand regnew ((_ int2bv 64) 18446744073709486080)) (bvand regold ((_ int2bv 64) 18446744073709486080)))))) :pattern (
  (writereg16post regold regnew val__)) ))))

;; readreg32__post_axiom
  (assert
  (forall ((reg (_ BitVec 64)))
  (! (=> (dynamic_invariant reg true true true)
     (let ((result (readreg32 reg)))
     (and
     (= result ((_ extract 31 0) (bvand reg ((_ int2bv 64) 4294967295))))
     (dynamic_invariant2 result true false true)))) :pattern ((readreg32 reg)) )))

;; writereg32post__post_axiom
  (assert
  (forall ((regnew (_ BitVec 64)))
  (forall ((val__ (_ BitVec 32)))
  (! (=>
     (and (dynamic_invariant regnew true true true) (dynamic_invariant2 val__
     true true true))
     (= (= (writereg32post regnew val__) true)
     (and (= (readreg32 regnew) val__)
     (= (bvand regnew ((_ int2bv 64) 18446744069414584320)) ((_ int2bv 64) 0))))) :pattern (
  (writereg32post regnew val__)) ))))

(declare-const ds (_ BitVec 64))

(declare-const fs (_ BitVec 64))

(declare-const gs (_ BitVec 64))

(declare-const ss (_ BitVec 64))

(declare-const stackaddresssize (_ BitVec 16))

(declare-const zeroflag Bool)

(declare-const carryflag Bool)

(declare-const signflag Bool)

(declare-const overflowflag Bool)

(declare-const xmm0 (_ BitVec 64))

(declare-const xmm1 (_ BitVec 64))

(declare-const xmm2 (_ BitVec 64))

(declare-const xmm3 (_ BitVec 64))

(declare-const xmm4 (_ BitVec 64))

(declare-const xmm5 (_ BitVec 64))

(declare-const xmm6 (_ BitVec 64))

(declare-const xmm7 (_ BitVec 64))

(declare-const rax (_ BitVec 64))

(declare-const rcx (_ BitVec 64))

(declare-const rdx (_ BitVec 64))

(declare-const rbx t__ref3)

(declare-const rsp t__ref3)

(declare-const rbp t__ref3)

(declare-const rsi t__ref3)

(declare-const rdi t__ref3)

(declare-const r8 t__ref3)

(declare-const r9 t__ref3)

(declare-const r10 t__ref3)

(declare-const r11 t__ref3)

(declare-const r12 t__ref3)

(declare-const r13 t__ref3)

(declare-const r14 t__ref3)

(declare-const r15 t__ref3)

(declare-const memory map__ref)

(declare-const dummy_var t__ref3)

(declare-const savestackptr t__ref3)

(declare-const ra0 t__ref)

(declare-const ra1 t__ref)

(declare-const ra2 t__ref)

(declare-const ra3 t__ref)

(declare-const ra4 t__ref)

(declare-const ra5 t__ref)

(declare-const ra6 t__ref)

(declare-const ra7 t__ref)

(declare-const saverbx t__ref3)

(declare-const saverbp t__ref3)

(declare-const saver12 t__ref3)

(declare-const saver13 t__ref3)

(declare-const saver14 t__ref3)

(declare-const saver15 t__ref3)

(declare-const o (_ BitVec 64))

(declare-const o1 (_ BitVec 8))

(declare-const o2 (_ BitVec 8))

(declare-const o3 (_ BitVec 8))

(declare-const o4 (_ BitVec 8))

(declare-const o5 (_ BitVec 8))

(declare-const o6 (_ BitVec 8))

(declare-const o7 (_ BitVec 8))

(declare-const o8 (_ BitVec 8))

(declare-const o9 (_ BitVec 8))

(declare-const o10 (_ BitVec 8))

(declare-const o11 (_ BitVec 8))

(declare-const o12 (_ BitVec 8))

(declare-const o13 (_ BitVec 8))

(declare-const o14 (_ BitVec 8))

(declare-const o15 (_ BitVec 8))

(declare-const o16 (_ BitVec 8))

(declare-const o17 (_ BitVec 64))

(declare-const o18 (_ BitVec 64))

(declare-const o19 (_ BitVec 64))

(declare-const o20 (_ BitVec 64))

(declare-const o21 (_ BitVec 64))

(declare-const o22 (_ BitVec 64))

(declare-const o23 (_ BitVec 64))

(declare-const o24 (_ BitVec 64))

(declare-const o25 (_ BitVec 64))

(declare-const o26 (_ BitVec 64))

(declare-const o27 (_ BitVec 32))

(declare-const o28 (_ BitVec 32))

(declare-const o29 (_ BitVec 64))

(declare-const o30 (_ BitVec 32))

(declare-const o31 (_ BitVec 32))

(declare-const o32 (_ BitVec 32))

(declare-const o33 (_ BitVec 32))

(declare-const o34 Bool)

(declare-const o35 (_ BitVec 32))

(declare-const o36 (_ BitVec 32))

(declare-const o37 (_ BitVec 32))

(declare-const o38 Bool)

(declare-const temp___393 (_ BitVec 64))

(declare-const temp___394 (_ BitVec 64))

(declare-const temp___392 (_ BitVec 64))

(declare-const temp___391 Bool)

(declare-const temp___390 Bool)

(declare-const temp___389 (_ BitVec 64))

(declare-const temp___387 Bool)

(declare-const temp___388 (_ BitVec 64))

(declare-const temp___386 (_ BitVec 64))

(declare-const temp___385 (_ BitVec 64))

(declare-const temp___384 Bool)

(declare-const o39 (_ BitVec 64))

(declare-const o40 (_ BitVec 32))

(declare-const o41 (_ BitVec 32))

(declare-const o42 (_ BitVec 32))

(declare-const o43 (_ BitVec 32))

(declare-const o44 (_ BitVec 32))

(declare-const o45 Bool)

(declare-const o46 (_ BitVec 32))

(declare-const o47 (_ BitVec 32))

(declare-const o48 (_ BitVec 32))

(declare-const o49 Bool)

(declare-const o50 (_ BitVec 32))

(declare-const o51 (_ BitVec 32))

(declare-const o52 Bool)

(declare-const o53 (_ BitVec 32))

(declare-const o54 (_ BitVec 32))

(declare-const o55 (_ BitVec 32))

(declare-const o56 (_ BitVec 32))

(declare-const o57 Bool)

(declare-const o58 Bool)

(declare-const o59 Bool)

(declare-const o60 (_ BitVec 64))

(declare-const o61 (_ BitVec 64))

(declare-const o62 (_ BitVec 64))

(declare-const o63 (_ BitVec 64))

(declare-const o64 (_ BitVec 32))

(declare-const o65 (_ BitVec 32))

(declare-const o66 (_ BitVec 64))

(declare-const o67 (_ BitVec 32))

(declare-const o68 (_ BitVec 32))

(declare-const o69 (_ BitVec 32))

(declare-const o70 (_ BitVec 32))

(declare-const o71 Bool)

(declare-const o72 (_ BitVec 32))

(declare-const o73 (_ BitVec 32))

(declare-const o74 (_ BitVec 32))

(declare-const o75 Bool)

(declare-const temp___404 (_ BitVec 64))

(declare-const temp___403 (_ BitVec 64))

(declare-const temp___402 Bool)

(declare-const temp___401 Bool)

(declare-const temp___400 (_ BitVec 64))

(declare-const temp___398 Bool)

(declare-const temp___399 (_ BitVec 64))

(declare-const temp___397 (_ BitVec 64))

(declare-const temp___396 (_ BitVec 64))

(declare-const temp___395 Bool)

(declare-const temp___405 (_ BitVec 64))

(declare-const o76 (_ BitVec 64))

(declare-const o77 (_ BitVec 32))

(declare-const o78 (_ BitVec 32))

(declare-const o79 (_ BitVec 32))

(declare-const o80 (_ BitVec 32))

(declare-const o81 (_ BitVec 32))

(declare-const o82 Bool)

(declare-const o83 (_ BitVec 32))

(declare-const o84 (_ BitVec 32))

(declare-const o85 (_ BitVec 32))

(declare-const o86 Bool)

(declare-const o87 (_ BitVec 32))

(declare-const o88 (_ BitVec 32))

(declare-const o89 Bool)

(declare-const o90 (_ BitVec 32))

(declare-const o91 (_ BitVec 32))

(declare-const o92 (_ BitVec 32))

(declare-const o93 (_ BitVec 32))

(declare-const o94 Bool)

(declare-const o95 Bool)

(declare-const o96 Bool)

(declare-const o97 (_ BitVec 64))

(declare-const o98 (_ BitVec 64))

(declare-const o99 (_ BitVec 64))

(declare-const o100 (_ BitVec 64))

(declare-const o101 (_ BitVec 32))

(declare-const o102 (_ BitVec 32))

(declare-const o103 (_ BitVec 64))

(declare-const o104 (_ BitVec 32))

(declare-const o105 (_ BitVec 32))

(declare-const o106 (_ BitVec 32))

(declare-const o107 (_ BitVec 32))

(declare-const o108 Bool)

(declare-const o109 (_ BitVec 32))

(declare-const o110 (_ BitVec 32))

(declare-const o111 (_ BitVec 32))

(declare-const o112 Bool)

(declare-const temp___415 (_ BitVec 64))

(declare-const temp___414 (_ BitVec 64))

(declare-const temp___413 Bool)

(declare-const temp___412 Bool)

(declare-const temp___411 (_ BitVec 64))

(declare-const temp___409 Bool)

(declare-const temp___410 (_ BitVec 64))

(declare-const temp___408 (_ BitVec 64))

(declare-const temp___407 (_ BitVec 64))

(declare-const temp___416 (_ BitVec 64))

(declare-const temp___406 Bool)

(declare-const o113 (_ BitVec 64))

(declare-const o114 (_ BitVec 32))

(declare-const o115 (_ BitVec 32))

(declare-const o116 (_ BitVec 32))

(declare-const o117 (_ BitVec 32))

(declare-const o118 (_ BitVec 32))

(declare-const o119 Bool)

(declare-const o120 (_ BitVec 32))

(declare-const o121 (_ BitVec 32))

(declare-const o122 (_ BitVec 32))

(declare-const o123 Bool)

(declare-const o124 (_ BitVec 32))

(declare-const o125 (_ BitVec 32))

(declare-const o126 Bool)

(declare-const o127 (_ BitVec 32))

(declare-const o128 (_ BitVec 32))

(declare-const o129 (_ BitVec 32))

(declare-const o130 (_ BitVec 32))

(declare-const o131 Bool)

(declare-const o132 Bool)

(declare-const o133 Bool)

(declare-const o134 (_ BitVec 64))

(declare-const o135 (_ BitVec 64))

(declare-const o136 (_ BitVec 64))

(declare-const o137 (_ BitVec 32))

(declare-const o138 (_ BitVec 32))

(declare-const o139 (_ BitVec 64))

(declare-const o140 (_ BitVec 32))

(declare-const o141 (_ BitVec 32))

(declare-const o142 (_ BitVec 32))

(declare-const o143 (_ BitVec 32))

(declare-const o144 Bool)

(declare-const o145 (_ BitVec 32))

(declare-const o146 (_ BitVec 32))

(declare-const o147 (_ BitVec 32))

(declare-const o148 Bool)

(declare-const temp___426 (_ BitVec 64))

(declare-const temp___425 (_ BitVec 64))

(declare-const temp___424 Bool)

(declare-const temp___423 Bool)

(declare-const temp___422 (_ BitVec 64))

(declare-const temp___427 (_ BitVec 64))

(declare-const temp___420 Bool)

(declare-const temp___421 (_ BitVec 64))

(declare-const temp___419 (_ BitVec 64))

(declare-const temp___418 (_ BitVec 64))

(declare-const temp___417 Bool)

(declare-const o149 (_ BitVec 64))

(declare-const o150 (_ BitVec 32))

(declare-const o151 (_ BitVec 32))

(declare-const o152 (_ BitVec 32))

(declare-const o153 (_ BitVec 32))

(declare-const o154 (_ BitVec 32))

(declare-const o155 Bool)

(declare-const o156 (_ BitVec 32))

(declare-const o157 (_ BitVec 32))

(declare-const o158 (_ BitVec 32))

(declare-const o159 Bool)

(declare-const o160 (_ BitVec 32))

(declare-const o161 (_ BitVec 32))

(declare-const o162 Bool)

(declare-const o163 (_ BitVec 32))

(declare-const o164 (_ BitVec 32))

(declare-const o165 (_ BitVec 32))

(declare-const o166 (_ BitVec 32))

(declare-const o167 Bool)

(declare-const o168 Bool)

(declare-const o169 Bool)

(declare-const o170 (_ BitVec 64))

(declare-const o171 (_ BitVec 32))

(declare-const o172 (_ BitVec 32))

(declare-const o173 (_ BitVec 64))

(declare-const temp___526 (_ BitVec 64))

(declare-const temp___525 (_ BitVec 64))

(declare-const temp___527 (_ BitVec 64))

(declare-const temp___524 (_ BitVec 64))

(declare-const temp___522 (_ BitVec 64))

(declare-const temp___523 (Array (_ BitVec 64) unsigned8))

(declare-const temp___520 Bool)

(declare-const temp___521 (_ BitVec 64))

(declare-const temp___518 (_ BitVec 64))

(declare-const temp___519 (_ BitVec 64))

(declare-const temp___516 Bool)

(declare-const temp___517 (_ BitVec 64))

(declare-const temp___515 (_ BitVec 64))

(declare-const temp___514 (_ BitVec 64))

(declare-const temp___513 (_ BitVec 64))

(declare-const temp___511 Bool)

(declare-const temp___512 (_ BitVec 64))

(declare-const temp___510 (_ BitVec 64))

(declare-const temp___507 (_ BitVec 64))

(declare-const temp___508 (_ BitVec 64))

(declare-const temp___509 (_ BitVec 64))

(declare-const temp___506 Bool)

(declare-const temp___505 (_ BitVec 64))

(declare-const temp___528 (Array (_ BitVec 64) unsigned8))

(declare-const temp___504 (_ BitVec 64))

(declare-const o174 (_ BitVec 64))

(declare-const temp___501 (_ BitVec 64))

(declare-const temp___503 (Array (_ BitVec 64) unsigned8))

(declare-const temp___502 (_ BitVec 64))

(declare-const temp___500 (_ BitVec 64))

(declare-const temp___499 (_ BitVec 64))

(declare-const temp___497 (_ BitVec 64))

(declare-const temp___498 (Array (_ BitVec 64) unsigned8))

(declare-const temp___495 Bool)

(declare-const temp___496 (_ BitVec 64))

(declare-const temp___493 (_ BitVec 64))

(declare-const temp___494 (_ BitVec 64))

(declare-const temp___491 Bool)

(declare-const temp___492 (_ BitVec 64))

(declare-const temp___490 (_ BitVec 64))

(declare-const temp___489 (_ BitVec 64))

(declare-const temp___487 Bool)

(declare-const temp___488 (_ BitVec 64))

(declare-const temp___486 (_ BitVec 64))

(declare-const temp___483 (_ BitVec 64))

(declare-const temp___484 (_ BitVec 64))

(declare-const temp___485 (_ BitVec 64))

(declare-const temp___482 Bool)

(declare-const temp___481 (_ BitVec 64))

(declare-const temp___480 (_ BitVec 64))

(declare-const o175 (_ BitVec 64))

(declare-const temp___477 (_ BitVec 64))

(declare-const temp___476 (_ BitVec 64))

(declare-const temp___478 (_ BitVec 64))

(declare-const temp___475 (_ BitVec 64))

(declare-const temp___473 (_ BitVec 64))

(declare-const temp___474 (Array (_ BitVec 64) unsigned8))

(declare-const temp___471 Bool)

(declare-const temp___472 (_ BitVec 64))

(declare-const temp___479 (Array (_ BitVec 64) unsigned8))

(declare-const temp___469 (_ BitVec 64))

(declare-const temp___470 (_ BitVec 64))

(declare-const temp___467 Bool)

(declare-const temp___468 (_ BitVec 64))

(declare-const temp___466 (_ BitVec 64))

(declare-const temp___464 Bool)

(declare-const temp___465 (_ BitVec 64))

(declare-const temp___463 (_ BitVec 64))

(declare-const temp___460 (_ BitVec 64))

(declare-const temp___461 (_ BitVec 64))

(declare-const temp___462 (_ BitVec 64))

(declare-const temp___459 Bool)

(declare-const temp___458 (_ BitVec 64))

(declare-const o176 (_ BitVec 64))

(declare-const temp___455 (_ BitVec 64))

(declare-const temp___454 (_ BitVec 64))

(declare-const temp___453 (_ BitVec 64))

(declare-const temp___451 (Array (_ BitVec 64) unsigned8))

(declare-const temp___452 (_ BitVec 64))

(declare-const temp___449 Bool)

(declare-const temp___450 (_ BitVec 64))

(declare-const temp___447 Bool)

(declare-const temp___448 (_ BitVec 64))

(declare-const temp___456 (_ BitVec 64))

(declare-const temp___446 (_ BitVec 64))

(declare-const temp___444 Bool)

(declare-const temp___445 (_ BitVec 64))

(declare-const temp___443 (_ BitVec 64))

(declare-const temp___441 (_ BitVec 64))

(declare-const temp___442 (_ BitVec 64))

(declare-const temp___440 Bool)

(declare-const temp___439 (_ BitVec 64))

(declare-const temp___457 (Array (_ BitVec 64) unsigned8))

(declare-const o177 (_ BitVec 64))

(declare-const o178 (_ BitVec 64))

(declare-const o179 (_ BitVec 64))

(declare-const o180 (_ BitVec 64))

(declare-const o181 (_ BitVec 32))

(declare-const o182 (_ BitVec 32))

(declare-const o183 Bool)

(declare-const o184 (_ BitVec 32))

(declare-const o185 Bool)

(declare-const temp___437 (_ BitVec 64))

(declare-const temp___438 (_ BitVec 64))

(declare-const temp___436 (_ BitVec 64))

(declare-const temp___435 Bool)

(declare-const temp___434 Bool)

(declare-const temp___433 (_ BitVec 64))

(declare-const temp___431 Bool)

(declare-const temp___432 (_ BitVec 64))

(declare-const temp___430 (_ BitVec 64))

(declare-const temp___429 (_ BitVec 64))

(declare-const temp___428 Bool)

(declare-const o186 (_ BitVec 64))

(declare-const o187 (_ BitVec 32))

(declare-const o188 (_ BitVec 32))

(declare-const o189 (_ BitVec 32))

(declare-const o190 (_ BitVec 32))

(declare-const o191 (_ BitVec 32))

(declare-const o192 Bool)

(declare-const o193 (_ BitVec 32))

(declare-const o194 (_ BitVec 32))

(declare-const o195 (_ BitVec 32))

(declare-const o196 Bool)

(declare-const o197 (_ BitVec 32))

(declare-const o198 (_ BitVec 32))

(declare-const o199 Bool)

(declare-const o200 (_ BitVec 32))

(declare-const o201 (_ BitVec 32))

(declare-const o202 (_ BitVec 32))

(declare-const o203 (_ BitVec 32))

(declare-const o204 Bool)

(declare-const o205 Bool)

(declare-const o206 Bool)

(declare-const o207 (_ BitVec 64))

(declare-const o208 (_ BitVec 64))

(declare-const o209 (_ BitVec 64))

(declare-const o210 (_ BitVec 64))

(declare-const o211 (_ BitVec 64))

(declare-const o212 (_ BitVec 64))

(declare-const o213 (_ BitVec 64))

(declare-const o214 (_ BitVec 64))

(declare-const o215 (_ BitVec 64))

(declare-const o216 (_ BitVec 64))

(declare-const o217 (_ BitVec 64))

(declare-const o218 (_ BitVec 64))

(declare-const o219 (_ BitVec 32))

(declare-const o220 (_ BitVec 32))

(declare-const o221 (_ BitVec 64))

(declare-const o222 (_ BitVec 32))

(declare-const o223 (_ BitVec 64))

(declare-const o224 (_ BitVec 64))

(declare-const o225 (_ BitVec 64))

(declare-const o226 (_ BitVec 64))

(declare-const o227 (_ BitVec 64))

(declare-const o228 (_ BitVec 64))

(declare-const result t__ref3)

(declare-const savestackptr1 (_ BitVec 64))

(declare-const result1 t__ref)

(declare-const ra01 (_ BitVec 8))

(declare-const result2 t__ref)

(declare-const ra11 (_ BitVec 8))

(declare-const result3 t__ref)

(declare-const ra21 (_ BitVec 8))

(declare-const result4 t__ref)

(declare-const ra31 (_ BitVec 8))

(declare-const result5 t__ref)

(declare-const ra41 (_ BitVec 8))

(declare-const result6 t__ref)

(declare-const ra51 (_ BitVec 8))

(declare-const result7 t__ref)

(declare-const ra61 (_ BitVec 8))

(declare-const result8 t__ref)

(declare-const ra71 (_ BitVec 8))

(declare-const result9 t__ref3)

(declare-const saverbx1 (_ BitVec 64))

(declare-const result10 t__ref3)

(declare-const saverbp1 (_ BitVec 64))

(declare-const result11 t__ref3)

(declare-const saver121 (_ BitVec 64))

(declare-const result12 t__ref3)

(declare-const saver131 (_ BitVec 64))

(declare-const result13 t__ref3)

(declare-const saver141 (_ BitVec 64))

(declare-const result14 t__ref3)

(declare-const saver151 (_ BitVec 64))

(declare-const memory1 (Array (_ BitVec 64) unsigned8))

(declare-const result15 t__ref3)

(declare-const rsp1 (_ BitVec 64))

(declare-const memory2 (Array (_ BitVec 64) unsigned8))

(declare-const result16 t__ref3)

(declare-const rsp2 (_ BitVec 64))

(declare-const rdi1 (_ BitVec 64))

(declare-const memory3 (Array (_ BitVec 64) unsigned8))

(declare-const result17 t__ref3)

(declare-const rsp3 (_ BitVec 64))

(declare-const memory4 (Array (_ BitVec 64) unsigned8))

(declare-const result18 t__ref3)

(declare-const rsp4 (_ BitVec 64))

(declare-const memory5 (Array (_ BitVec 64) unsigned8))

(declare-const result19 t__ref3)

(declare-const rsp5 (_ BitVec 64))

(declare-const memory6 (Array (_ BitVec 64) unsigned8))

(declare-const result20 t__ref3)

(declare-const rsp6 (_ BitVec 64))

(declare-const rbx1 (_ BitVec 64))

(declare-const result21 t__ref3)

(declare-const rsp7 (_ BitVec 64))

(declare-const result22 t__ref3)

(declare-const rsp8 (_ BitVec 64))

(declare-const rsp9 (_ BitVec 64))

(declare-const result23 t__ref3)

(declare-const rsi1 (_ BitVec 64))

(declare-const result24 t__ref3)

(declare-const rdi2 (_ BitVec 64))

(declare-const result25 t__ref3)

(declare-const rbp1 (_ BitVec 64))

(declare-const result26 t__ref3)

(declare-const xmm31 (_ BitVec 64))

(declare-const result27 t__ref3)

(declare-const xmm21 (_ BitVec 64))

(declare-const result28 t__ref3)

(declare-const xmm11 (_ BitVec 64))

(declare-const result29 t__ref3)

(declare-const xmm01 (_ BitVec 64))

(declare-const result30 t__ref3)

(declare-const rsp10 (_ BitVec 64))

(declare-const rsp11 (_ BitVec 64))

(declare-const rdi3 (_ BitVec 64))

(declare-const rax1 (_ BitVec 64))

(declare-const result31 t__ref3)

(declare-const rsp12 (_ BitVec 64))

(declare-const rsp13 (_ BitVec 64))

(declare-const rdi4 (_ BitVec 64))

(declare-const result32 bool__ref)

(declare-const zeroflag1 Bool)

(declare-const result33 bool__ref)

(declare-const signflag1 Bool)

(declare-const result34 bool__ref)

(declare-const carryflag1 Bool)

(declare-const result35 bool__ref)

(declare-const overflowflag1 Bool)

(declare-const zeroflag2 Bool)

(declare-const carryflag2 Bool)

(declare-const signflag2 Bool)

(declare-const overflowflag2 Bool)

(declare-const xmm02 (_ BitVec 64))

(declare-const rax2 (_ BitVec 64))

(declare-const rbx2 (_ BitVec 64))

(declare-const rsp14 (_ BitVec 64))

(declare-const rbp2 (_ BitVec 64))

(declare-const rdi5 (_ BitVec 64))

(declare-const result36 t__ref3)

(declare-const xmm03 (_ BitVec 64))

(declare-const rdi6 (_ BitVec 64))

(declare-const rax3 (_ BitVec 64))

(declare-const rbx3 (_ BitVec 64))

(declare-const result37 t__ref3)

(declare-const rbp3 (_ BitVec 64))

(declare-const result38 t__ref3)

(declare-const rsp15 (_ BitVec 64))

(declare-const rsp16 (_ BitVec 64))

(declare-const result39 bool__ref)

(declare-const zeroflag3 Bool)

(declare-const result40 bool__ref)

(declare-const signflag3 Bool)

(declare-const result41 bool__ref)

(declare-const carryflag3 Bool)

(declare-const result42 Bool)

(declare-const result43 Bool)

(declare-const result44 bool__ref)

(declare-const overflowflag3 Bool)

(declare-const zeroflag4 bool__ref)

(declare-const carryflag4 bool__ref)

(declare-const signflag4 bool__ref)

(declare-const overflowflag4 bool__ref)

(declare-const xmm04 t__ref3)

(declare-const rax4 t__ref3)

(declare-const rbx4 t__ref3)

(declare-const rsp17 t__ref3)

(declare-const rbp4 t__ref3)

(declare-const rdi7 t__ref3)

(declare-const zeroflag5 Bool)

(declare-const carryflag5 Bool)

(declare-const signflag5 Bool)

(declare-const overflowflag5 Bool)

(declare-const xmm05 (_ BitVec 64))

(declare-const rax5 (_ BitVec 64))

(declare-const rbx5 (_ BitVec 64))

(declare-const rsp18 (_ BitVec 64))

(declare-const rbp5 (_ BitVec 64))

(declare-const rdi8 (_ BitVec 64))

(declare-const zeroflag6 bool__ref)

(declare-const carryflag6 bool__ref)

(declare-const signflag6 bool__ref)

(declare-const overflowflag6 bool__ref)

(declare-const xmm06 t__ref3)

(declare-const rax6 t__ref3)

(declare-const rbx6 t__ref3)

(declare-const rsp19 t__ref3)

(declare-const rbp6 t__ref3)

(declare-const rdi9 t__ref3)

(declare-const zeroflag7 Bool)

(declare-const carryflag7 Bool)

(declare-const signflag7 Bool)

(declare-const overflowflag7 Bool)

(declare-const xmm07 (_ BitVec 64))

(declare-const rax7 (_ BitVec 64))

(declare-const rbx7 (_ BitVec 64))

(declare-const rsp20 (_ BitVec 64))

(declare-const rbp7 (_ BitVec 64))

(declare-const rdi10 (_ BitVec 64))

(declare-const zeroflag8 bool__ref)

(declare-const carryflag8 bool__ref)

(declare-const signflag8 bool__ref)

(declare-const overflowflag8 bool__ref)

(declare-const xmm08 t__ref3)

(declare-const rax8 t__ref3)

(declare-const rbx8 t__ref3)

(declare-const rsp21 t__ref3)

(declare-const rbp8 t__ref3)

(declare-const rdi11 t__ref3)

(declare-const zeroflag9 Bool)

(declare-const carryflag9 Bool)

(declare-const signflag9 Bool)

(declare-const overflowflag9 Bool)

(declare-const xmm09 (_ BitVec 64))

(declare-const rax9 (_ BitVec 64))

(declare-const rbx9 (_ BitVec 64))

(declare-const rsp22 (_ BitVec 64))

(declare-const rbp9 (_ BitVec 64))

(declare-const rdi12 (_ BitVec 64))

(declare-const rdi13 (_ BitVec 64))

(declare-const rbx10 (_ BitVec 64))

(declare-const result45 t__ref3)

(declare-const rbp10 (_ BitVec 64))

(declare-const result46 t__ref3)

(declare-const rsp23 (_ BitVec 64))

(declare-const rsp24 (_ BitVec 64))

(declare-const result47 t__ref3)

(declare-const rsi2 (_ BitVec 64))

(declare-const result48 t__ref3)

(declare-const rdi14 (_ BitVec 64))

(declare-const result49 t__ref3)

(declare-const xmm32 (_ BitVec 64))

(declare-const result50 t__ref3)

(declare-const xmm22 (_ BitVec 64))

(declare-const result51 t__ref3)

(declare-const xmm12 (_ BitVec 64))

(declare-const result52 t__ref3)

(declare-const xmm010 (_ BitVec 64))

(declare-const result53 t__ref3)

(declare-const rsp25 (_ BitVec 64))

(declare-const rsp26 (_ BitVec 64))

(declare-const rax10 (_ BitVec 64))

(declare-const rdi15 (_ BitVec 64))

(declare-const result54 t__ref3)

(declare-const rsp27 (_ BitVec 64))

(declare-const rsp28 (_ BitVec 64))

(declare-const rsi3 (_ BitVec 64))

(declare-const result55 bool__ref)

(declare-const zeroflag10 Bool)

(declare-const result56 bool__ref)

(declare-const signflag10 Bool)

(declare-const result57 bool__ref)

(declare-const carryflag10 Bool)

(declare-const result58 bool__ref)

(declare-const overflowflag10 Bool)

(declare-const zeroflag11 Bool)

(declare-const carryflag11 Bool)

(declare-const signflag11 Bool)

(declare-const overflowflag11 Bool)

(declare-const xmm011 (_ BitVec 64))

(declare-const rax11 (_ BitVec 64))

(declare-const rbx11 (_ BitVec 64))

(declare-const rsp29 (_ BitVec 64))

(declare-const rbp11 (_ BitVec 64))

(declare-const rdi16 (_ BitVec 64))

(declare-const result59 t__ref3)

(declare-const xmm012 (_ BitVec 64))

(declare-const rdi17 (_ BitVec 64))

(declare-const rax12 (_ BitVec 64))

(declare-const rbx12 (_ BitVec 64))

(declare-const result60 t__ref3)

(declare-const rbp12 (_ BitVec 64))

(declare-const result61 t__ref3)

(declare-const rsp30 (_ BitVec 64))

(declare-const rsp31 (_ BitVec 64))

(declare-const result62 bool__ref)

(declare-const zeroflag12 Bool)

(declare-const result63 bool__ref)

(declare-const signflag12 Bool)

(declare-const result64 bool__ref)

(declare-const carryflag12 Bool)

(declare-const result65 Bool)

(declare-const result66 Bool)

(declare-const result67 bool__ref)

(declare-const overflowflag12 Bool)

(declare-const zeroflag13 bool__ref)

(declare-const carryflag13 bool__ref)

(declare-const signflag13 bool__ref)

(declare-const overflowflag13 bool__ref)

(declare-const xmm013 t__ref3)

(declare-const rax13 t__ref3)

(declare-const rbx13 t__ref3)

(declare-const rsp32 t__ref3)

(declare-const rbp13 t__ref3)

(declare-const rdi18 t__ref3)

(declare-const zeroflag14 Bool)

(declare-const carryflag14 Bool)

(declare-const signflag14 Bool)

(declare-const overflowflag14 Bool)

(declare-const xmm014 (_ BitVec 64))

(declare-const rax14 (_ BitVec 64))

(declare-const rbx14 (_ BitVec 64))

(declare-const rsp33 (_ BitVec 64))

(declare-const rbp14 (_ BitVec 64))

(declare-const rdi19 (_ BitVec 64))

(declare-const zeroflag15 bool__ref)

(declare-const carryflag15 bool__ref)

(declare-const signflag15 bool__ref)

(declare-const overflowflag15 bool__ref)

(declare-const xmm015 t__ref3)

(declare-const rax15 t__ref3)

(declare-const rbx15 t__ref3)

(declare-const rsp34 t__ref3)

(declare-const rbp15 t__ref3)

(declare-const rdi20 t__ref3)

(declare-const zeroflag16 Bool)

(declare-const carryflag16 Bool)

(declare-const signflag16 Bool)

(declare-const overflowflag16 Bool)

(declare-const xmm016 (_ BitVec 64))

(declare-const rax16 (_ BitVec 64))

(declare-const rbx16 (_ BitVec 64))

(declare-const rsp35 (_ BitVec 64))

(declare-const rbp16 (_ BitVec 64))

(declare-const rdi21 (_ BitVec 64))

(declare-const zeroflag17 bool__ref)

(declare-const carryflag17 bool__ref)

(declare-const signflag17 bool__ref)

(declare-const overflowflag17 bool__ref)

(declare-const xmm017 t__ref3)

(declare-const rax17 t__ref3)

(declare-const rbx17 t__ref3)

(declare-const rsp36 t__ref3)

(declare-const rbp17 t__ref3)

(declare-const rdi22 t__ref3)

(declare-const zeroflag18 Bool)

(declare-const carryflag18 Bool)

(declare-const signflag18 Bool)

(declare-const overflowflag18 Bool)

(declare-const xmm018 (_ BitVec 64))

(declare-const rax18 (_ BitVec 64))

(declare-const rbx18 (_ BitVec 64))

(declare-const rsp37 (_ BitVec 64))

(declare-const rbp18 (_ BitVec 64))

(declare-const rdi23 (_ BitVec 64))

(declare-const zeroflag19 bool__ref)

(declare-const carryflag19 bool__ref)

(declare-const signflag19 bool__ref)

(declare-const overflowflag19 bool__ref)

(declare-const xmm019 t__ref3)

(declare-const rax19 t__ref3)

(declare-const rbx19 t__ref3)

(declare-const rsp38 t__ref3)

(declare-const rbp19 t__ref3)

(declare-const rdi24 t__ref3)

(declare-const zeroflag20 Bool)

(declare-const carryflag20 Bool)

(declare-const signflag20 Bool)

(declare-const overflowflag20 Bool)

(declare-const xmm020 (_ BitVec 64))

(declare-const rax20 (_ BitVec 64))

(declare-const rbx20 (_ BitVec 64))

(declare-const rsp39 (_ BitVec 64))

(declare-const rbp20 (_ BitVec 64))

(declare-const rdi25 (_ BitVec 64))

(declare-const rdi26 (_ BitVec 64))

(declare-const rbx21 (_ BitVec 64))

(declare-const result68 t__ref3)

(declare-const rbp21 (_ BitVec 64))

(declare-const result69 t__ref3)

(declare-const rsp40 (_ BitVec 64))

(declare-const rsp41 (_ BitVec 64))

(declare-const result70 t__ref3)

(declare-const rsi4 (_ BitVec 64))

(declare-const result71 t__ref3)

(declare-const rdi27 (_ BitVec 64))

(declare-const result72 t__ref3)

(declare-const xmm33 (_ BitVec 64))

(declare-const result73 t__ref3)

(declare-const xmm23 (_ BitVec 64))

(declare-const result74 t__ref3)

(declare-const xmm13 (_ BitVec 64))

(declare-const result75 t__ref3)

(declare-const xmm021 (_ BitVec 64))

(declare-const result76 t__ref3)

(declare-const rsp42 (_ BitVec 64))

(declare-const rsp43 (_ BitVec 64))

(declare-const rax21 (_ BitVec 64))

(declare-const rdi28 (_ BitVec 64))

(declare-const result77 t__ref3)

(declare-const rsp44 (_ BitVec 64))

(declare-const rsp45 (_ BitVec 64))

(declare-const rcx1 (_ BitVec 64))

(declare-const result78 bool__ref)

(declare-const zeroflag21 Bool)

(declare-const result79 bool__ref)

(declare-const signflag21 Bool)

(declare-const result80 bool__ref)

(declare-const carryflag21 Bool)

(declare-const result81 bool__ref)

(declare-const overflowflag21 Bool)

(declare-const zeroflag22 Bool)

(declare-const carryflag22 Bool)

(declare-const signflag22 Bool)

(declare-const overflowflag22 Bool)

(declare-const xmm022 (_ BitVec 64))

(declare-const rax22 (_ BitVec 64))

(declare-const rbx22 (_ BitVec 64))

(declare-const rsp46 (_ BitVec 64))

(declare-const rbp22 (_ BitVec 64))

(declare-const rdi29 (_ BitVec 64))

(declare-const result82 t__ref3)

(declare-const xmm023 (_ BitVec 64))

(declare-const rdi30 (_ BitVec 64))

(declare-const rax23 (_ BitVec 64))

(declare-const rbx23 (_ BitVec 64))

(declare-const result83 t__ref3)

(declare-const rbp23 (_ BitVec 64))

(declare-const result84 t__ref3)

(declare-const rsp47 (_ BitVec 64))

(declare-const rsp48 (_ BitVec 64))

(declare-const result85 bool__ref)

(declare-const zeroflag23 Bool)

(declare-const result86 bool__ref)

(declare-const signflag23 Bool)

(declare-const result87 bool__ref)

(declare-const carryflag23 Bool)

(declare-const result88 Bool)

(declare-const result89 Bool)

(declare-const result90 bool__ref)

(declare-const overflowflag23 Bool)

(declare-const zeroflag24 bool__ref)

(declare-const carryflag24 bool__ref)

(declare-const signflag24 bool__ref)

(declare-const overflowflag24 bool__ref)

(declare-const xmm024 t__ref3)

(declare-const rax24 t__ref3)

(declare-const rbx24 t__ref3)

(declare-const rsp49 t__ref3)

(declare-const rbp24 t__ref3)

(declare-const rdi31 t__ref3)

(declare-const zeroflag25 Bool)

(declare-const carryflag25 Bool)

(declare-const signflag25 Bool)

(declare-const overflowflag25 Bool)

(declare-const xmm025 (_ BitVec 64))

(declare-const rax25 (_ BitVec 64))

(declare-const rbx25 (_ BitVec 64))

(declare-const rsp50 (_ BitVec 64))

(declare-const rbp25 (_ BitVec 64))

(declare-const rdi32 (_ BitVec 64))

(declare-const zeroflag26 bool__ref)

(declare-const carryflag26 bool__ref)

(declare-const signflag26 bool__ref)

(declare-const overflowflag26 bool__ref)

(declare-const xmm026 t__ref3)

(declare-const rax26 t__ref3)

(declare-const rbx26 t__ref3)

(declare-const rsp51 t__ref3)

(declare-const rbp26 t__ref3)

(declare-const rdi33 t__ref3)

(declare-const zeroflag27 Bool)

(declare-const carryflag27 Bool)

(declare-const signflag27 Bool)

(declare-const overflowflag27 Bool)

(declare-const xmm027 (_ BitVec 64))

(declare-const rax27 (_ BitVec 64))

(declare-const rbx27 (_ BitVec 64))

(declare-const rsp52 (_ BitVec 64))

(declare-const rbp27 (_ BitVec 64))

(declare-const rdi34 (_ BitVec 64))

(declare-const zeroflag28 bool__ref)

(declare-const carryflag28 bool__ref)

(declare-const signflag28 bool__ref)

(declare-const overflowflag28 bool__ref)

(declare-const xmm028 t__ref3)

(declare-const rax28 t__ref3)

(declare-const rbx28 t__ref3)

(declare-const rsp53 t__ref3)

(declare-const rbp28 t__ref3)

(declare-const rdi35 t__ref3)

(declare-const zeroflag29 Bool)

(declare-const carryflag29 Bool)

(declare-const signflag29 Bool)

(declare-const overflowflag29 Bool)

(declare-const xmm029 (_ BitVec 64))

(declare-const rax29 (_ BitVec 64))

(declare-const rbx29 (_ BitVec 64))

(declare-const rsp54 (_ BitVec 64))

(declare-const rbp29 (_ BitVec 64))

(declare-const rdi36 (_ BitVec 64))

(declare-const zeroflag30 bool__ref)

(declare-const carryflag30 bool__ref)

(declare-const signflag30 bool__ref)

(declare-const overflowflag30 bool__ref)

(declare-const xmm030 t__ref3)

(declare-const rax30 t__ref3)

(declare-const rbx30 t__ref3)

(declare-const rsp55 t__ref3)

(declare-const rbp30 t__ref3)

(declare-const rdi37 t__ref3)

(declare-const zeroflag31 Bool)

(declare-const carryflag31 Bool)

(declare-const signflag31 Bool)

(declare-const overflowflag31 Bool)

(declare-const xmm031 (_ BitVec 64))

(declare-const rax31 (_ BitVec 64))

(declare-const rbx31 (_ BitVec 64))

(declare-const rsp56 (_ BitVec 64))

(declare-const rbp31 (_ BitVec 64))

(declare-const rdi38 (_ BitVec 64))

(declare-const rdi39 (_ BitVec 64))

(declare-const rbx32 (_ BitVec 64))

(declare-const result91 t__ref3)

(declare-const rbp32 (_ BitVec 64))

(declare-const result92 t__ref3)

(declare-const rsp57 (_ BitVec 64))

(declare-const rsp58 (_ BitVec 64))

(declare-const result93 t__ref3)

(declare-const xmm24 (_ BitVec 64))

(declare-const result94 t__ref3)

(declare-const rsi5 (_ BitVec 64))

(declare-const result95 t__ref3)

(declare-const rdi40 (_ BitVec 64))

(declare-const result96 t__ref3)

(declare-const xmm34 (_ BitVec 64))

(declare-const result97 t__ref3)

(declare-const xmm14 (_ BitVec 64))

(declare-const result98 t__ref3)

(declare-const xmm032 (_ BitVec 64))

(declare-const result99 t__ref3)

(declare-const rsp59 (_ BitVec 64))

(declare-const rsp60 (_ BitVec 64))

(declare-const rax32 (_ BitVec 64))

(declare-const rdi41 (_ BitVec 64))

(declare-const result100 t__ref3)

(declare-const rsp61 (_ BitVec 64))

(declare-const rsp62 (_ BitVec 64))

(declare-const rdx1 (_ BitVec 64))

(declare-const result101 bool__ref)

(declare-const zeroflag32 Bool)

(declare-const result102 bool__ref)

(declare-const signflag32 Bool)

(declare-const result103 bool__ref)

(declare-const carryflag32 Bool)

(declare-const result104 bool__ref)

(declare-const overflowflag32 Bool)

(declare-const zeroflag33 Bool)

(declare-const carryflag33 Bool)

(declare-const signflag33 Bool)

(declare-const overflowflag33 Bool)

(declare-const xmm033 (_ BitVec 64))

(declare-const rax33 (_ BitVec 64))

(declare-const rbx33 (_ BitVec 64))

(declare-const rsp63 (_ BitVec 64))

(declare-const rbp33 (_ BitVec 64))

(declare-const rdi42 (_ BitVec 64))

(declare-const result105 t__ref3)

(declare-const xmm034 (_ BitVec 64))

(declare-const rdi43 (_ BitVec 64))

(declare-const rax34 (_ BitVec 64))

(declare-const rbx34 (_ BitVec 64))

(declare-const result106 t__ref3)

(declare-const rbp34 (_ BitVec 64))

(declare-const result107 t__ref3)

(declare-const rsp64 (_ BitVec 64))

(declare-const rsp65 (_ BitVec 64))

(declare-const result108 bool__ref)

(declare-const zeroflag34 Bool)

(declare-const result109 bool__ref)

(declare-const signflag34 Bool)

(declare-const result110 bool__ref)

(declare-const carryflag34 Bool)

(declare-const result111 Bool)

(declare-const result112 Bool)

(declare-const result113 bool__ref)

(declare-const overflowflag34 Bool)

(declare-const zeroflag35 bool__ref)

(declare-const carryflag35 bool__ref)

(declare-const signflag35 bool__ref)

(declare-const overflowflag35 bool__ref)

(declare-const xmm035 t__ref3)

(declare-const rax35 t__ref3)

(declare-const rbx35 t__ref3)

(declare-const rsp66 t__ref3)

(declare-const rbp35 t__ref3)

(declare-const rdi44 t__ref3)

(declare-const zeroflag36 Bool)

(declare-const carryflag36 Bool)

(declare-const signflag36 Bool)

(declare-const overflowflag36 Bool)

(declare-const xmm036 (_ BitVec 64))

(declare-const rax36 (_ BitVec 64))

(declare-const rbx36 (_ BitVec 64))

(declare-const rsp67 (_ BitVec 64))

(declare-const rbp36 (_ BitVec 64))

(declare-const rdi45 (_ BitVec 64))

(declare-const zeroflag37 bool__ref)

(declare-const carryflag37 bool__ref)

(declare-const signflag37 bool__ref)

(declare-const overflowflag37 bool__ref)

(declare-const xmm037 t__ref3)

(declare-const rax37 t__ref3)

(declare-const rbx37 t__ref3)

(declare-const rsp68 t__ref3)

(declare-const rbp37 t__ref3)

(declare-const rdi46 t__ref3)

(declare-const zeroflag38 Bool)

(declare-const carryflag38 Bool)

(declare-const signflag38 Bool)

(declare-const overflowflag38 Bool)

(declare-const xmm038 (_ BitVec 64))

(declare-const rax38 (_ BitVec 64))

(declare-const rbx38 (_ BitVec 64))

(declare-const rsp69 (_ BitVec 64))

(declare-const rbp38 (_ BitVec 64))

(declare-const rdi47 (_ BitVec 64))

(declare-const zeroflag39 bool__ref)

(declare-const carryflag39 bool__ref)

(declare-const signflag39 bool__ref)

(declare-const overflowflag39 bool__ref)

(declare-const xmm039 t__ref3)

(declare-const rax39 t__ref3)

(declare-const rbx39 t__ref3)

(declare-const rsp70 t__ref3)

(declare-const rbp39 t__ref3)

(declare-const rdi48 t__ref3)

(declare-const zeroflag40 Bool)

(declare-const carryflag40 Bool)

(declare-const signflag40 Bool)

(declare-const overflowflag40 Bool)

(declare-const xmm040 (_ BitVec 64))

(declare-const rax40 (_ BitVec 64))

(declare-const rbx40 (_ BitVec 64))

(declare-const rsp71 (_ BitVec 64))

(declare-const rbp40 (_ BitVec 64))

(declare-const rdi49 (_ BitVec 64))

(declare-const zeroflag41 bool__ref)

(declare-const carryflag41 bool__ref)

(declare-const signflag41 bool__ref)

(declare-const overflowflag41 bool__ref)

(declare-const xmm041 t__ref3)

(declare-const rax41 t__ref3)

(declare-const rbx41 t__ref3)

(declare-const rsp72 t__ref3)

(declare-const rbp41 t__ref3)

(declare-const rdi50 t__ref3)

(declare-const zeroflag42 Bool)

(declare-const carryflag42 Bool)

(declare-const signflag42 Bool)

(declare-const overflowflag42 Bool)

(declare-const xmm042 (_ BitVec 64))

(declare-const rax42 (_ BitVec 64))

(declare-const rbx42 (_ BitVec 64))

(declare-const rsp73 (_ BitVec 64))

(declare-const rbp42 (_ BitVec 64))

(declare-const rdi51 (_ BitVec 64))

(declare-const rdi52 (_ BitVec 64))

(declare-const result114 t__ref3)

(declare-const r151 (_ BitVec 64))

(declare-const result115 t__ref3)

(declare-const rsp74 (_ BitVec 64))

(declare-const rsp75 (_ BitVec 64))

(declare-const result116 t__ref3)

(declare-const xmm61 (_ BitVec 64))

(declare-const memory7 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag43 Bool)

(declare-const carryflag43 Bool)

(declare-const signflag43 Bool)

(declare-const overflowflag43 Bool)

(declare-const xmm043 (_ BitVec 64))

(declare-const xmm15 (_ BitVec 64))

(declare-const xmm25 (_ BitVec 64))

(declare-const xmm35 (_ BitVec 64))

(declare-const xmm41 (_ BitVec 64))

(declare-const xmm51 (_ BitVec 64))

(declare-const xmm62 (_ BitVec 64))

(declare-const xmm71 (_ BitVec 64))

(declare-const rax43 (_ BitVec 64))

(declare-const rbx43 (_ BitVec 64))

(declare-const rsp76 (_ BitVec 64))

(declare-const rbp43 (_ BitVec 64))

(declare-const rsi6 (_ BitVec 64))

(declare-const rdi53 (_ BitVec 64))

(declare-const r121 (_ BitVec 64))

(declare-const r131 (_ BitVec 64))

(declare-const r141 (_ BitVec 64))

(declare-const r152 (_ BitVec 64))

(declare-const memory8 (Array (_ BitVec 64) unsigned8))

(declare-const result117 t__ref3)

(declare-const xmm72 (_ BitVec 64))

(declare-const result118 t__ref3)

(declare-const r142 (_ BitVec 64))

(declare-const memory9 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag44 Bool)

(declare-const carryflag44 Bool)

(declare-const signflag44 Bool)

(declare-const overflowflag44 Bool)

(declare-const xmm044 (_ BitVec 64))

(declare-const xmm16 (_ BitVec 64))

(declare-const xmm26 (_ BitVec 64))

(declare-const xmm36 (_ BitVec 64))

(declare-const xmm42 (_ BitVec 64))

(declare-const xmm52 (_ BitVec 64))

(declare-const xmm63 (_ BitVec 64))

(declare-const xmm73 (_ BitVec 64))

(declare-const rax44 (_ BitVec 64))

(declare-const rbx44 (_ BitVec 64))

(declare-const rsp77 (_ BitVec 64))

(declare-const rbp44 (_ BitVec 64))

(declare-const rsi7 (_ BitVec 64))

(declare-const rdi54 (_ BitVec 64))

(declare-const r122 (_ BitVec 64))

(declare-const r132 (_ BitVec 64))

(declare-const r143 (_ BitVec 64))

(declare-const memory10 (Array (_ BitVec 64) unsigned8))

(declare-const result119 t__ref3)

(declare-const xmm74 (_ BitVec 64))

(declare-const result120 t__ref3)

(declare-const r133 (_ BitVec 64))

(declare-const memory11 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag45 Bool)

(declare-const carryflag45 Bool)

(declare-const signflag45 Bool)

(declare-const overflowflag45 Bool)

(declare-const xmm045 (_ BitVec 64))

(declare-const xmm17 (_ BitVec 64))

(declare-const xmm27 (_ BitVec 64))

(declare-const xmm37 (_ BitVec 64))

(declare-const xmm43 (_ BitVec 64))

(declare-const xmm53 (_ BitVec 64))

(declare-const xmm75 (_ BitVec 64))

(declare-const rax45 (_ BitVec 64))

(declare-const rbx45 (_ BitVec 64))

(declare-const rsp78 (_ BitVec 64))

(declare-const rbp45 (_ BitVec 64))

(declare-const rsi8 (_ BitVec 64))

(declare-const rdi55 (_ BitVec 64))

(declare-const r123 (_ BitVec 64))

(declare-const r134 (_ BitVec 64))

(declare-const memory12 (Array (_ BitVec 64) unsigned8))

(declare-const result121 t__ref3)

(declare-const xmm76 (_ BitVec 64))

(declare-const result122 t__ref3)

(declare-const r124 (_ BitVec 64))

(declare-const memory13 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag46 Bool)

(declare-const carryflag46 Bool)

(declare-const signflag46 Bool)

(declare-const overflowflag46 Bool)

(declare-const xmm046 (_ BitVec 64))

(declare-const xmm18 (_ BitVec 64))

(declare-const xmm28 (_ BitVec 64))

(declare-const xmm38 (_ BitVec 64))

(declare-const xmm44 (_ BitVec 64))

(declare-const rax46 (_ BitVec 64))

(declare-const rbx46 (_ BitVec 64))

(declare-const rsp79 (_ BitVec 64))

(declare-const rbp46 (_ BitVec 64))

(declare-const rsi9 (_ BitVec 64))

(declare-const rdi56 (_ BitVec 64))

(declare-const r125 (_ BitVec 64))

(declare-const memory14 (Array (_ BitVec 64) unsigned8))

(declare-const result123 t__ref3)

(declare-const rsi10 (_ BitVec 64))

(declare-const result124 t__ref3)

(declare-const rdi57 (_ BitVec 64))

(declare-const rbx47 (_ BitVec 64))

(declare-const result125 t__ref3)

(declare-const xmm39 (_ BitVec 64))

(declare-const result126 t__ref3)

(declare-const rbp47 (_ BitVec 64))

(declare-const result127 t__ref3)

(declare-const xmm29 (_ BitVec 64))

(declare-const result128 t__ref3)

(declare-const xmm19 (_ BitVec 64))

(declare-const result129 t__ref3)

(declare-const xmm047 (_ BitVec 64))

(declare-const result130 t__ref3)

(declare-const rsp80 (_ BitVec 64))

(declare-const rsp81 (_ BitVec 64))

(declare-const rax47 (_ BitVec 64))

(declare-const rdi58 (_ BitVec 64))

(declare-const result131 t__ref3)

(declare-const rsp82 (_ BitVec 64))

(declare-const rsp83 (_ BitVec 64))

(declare-const rax48 (_ BitVec 64))

(declare-const result132 bool__ref)

(declare-const zeroflag47 Bool)

(declare-const result133 bool__ref)

(declare-const signflag47 Bool)

(declare-const result134 bool__ref)

(declare-const carryflag47 Bool)

(declare-const result135 bool__ref)

(declare-const overflowflag47 Bool)

(declare-const zeroflag48 Bool)

(declare-const carryflag48 Bool)

(declare-const signflag48 Bool)

(declare-const overflowflag48 Bool)

(declare-const xmm048 (_ BitVec 64))

(declare-const rax49 (_ BitVec 64))

(declare-const rbx48 (_ BitVec 64))

(declare-const rsp84 (_ BitVec 64))

(declare-const rbp48 (_ BitVec 64))

(declare-const rdi59 (_ BitVec 64))

(declare-const result136 t__ref3)

(declare-const xmm049 (_ BitVec 64))

(declare-const rdi60 (_ BitVec 64))

(declare-const rax50 (_ BitVec 64))

(declare-const rbx49 (_ BitVec 64))

(declare-const result137 t__ref3)

(declare-const rbp49 (_ BitVec 64))

(declare-const result138 t__ref3)

(declare-const rsp85 (_ BitVec 64))

(declare-const rsp86 (_ BitVec 64))

(declare-const result139 bool__ref)

(declare-const zeroflag49 Bool)

(declare-const result140 bool__ref)

(declare-const signflag49 Bool)

(declare-const result141 bool__ref)

(declare-const carryflag49 Bool)

(declare-const result142 Bool)

(declare-const result143 Bool)

(declare-const result144 bool__ref)

(declare-const overflowflag49 Bool)

(declare-const zeroflag50 bool__ref)

(declare-const carryflag50 bool__ref)

(declare-const signflag50 bool__ref)

(declare-const overflowflag50 bool__ref)

(declare-const xmm050 t__ref3)

(declare-const rax51 t__ref3)

(declare-const rbx50 t__ref3)

(declare-const rsp87 t__ref3)

(declare-const rbp50 t__ref3)

(declare-const rdi61 t__ref3)

(declare-const zeroflag51 Bool)

(declare-const carryflag51 Bool)

(declare-const signflag51 Bool)

(declare-const overflowflag51 Bool)

(declare-const xmm051 (_ BitVec 64))

(declare-const rax52 (_ BitVec 64))

(declare-const rbx51 (_ BitVec 64))

(declare-const rsp88 (_ BitVec 64))

(declare-const rbp51 (_ BitVec 64))

(declare-const rdi62 (_ BitVec 64))

(declare-const zeroflag52 bool__ref)

(declare-const carryflag52 bool__ref)

(declare-const signflag52 bool__ref)

(declare-const overflowflag52 bool__ref)

(declare-const xmm052 t__ref3)

(declare-const rax53 t__ref3)

(declare-const rbx52 t__ref3)

(declare-const rsp89 t__ref3)

(declare-const rbp52 t__ref3)

(declare-const rdi63 t__ref3)

(declare-const zeroflag53 Bool)

(declare-const carryflag53 Bool)

(declare-const signflag53 Bool)

(declare-const overflowflag53 Bool)

(declare-const xmm053 (_ BitVec 64))

(declare-const rax54 (_ BitVec 64))

(declare-const rbx53 (_ BitVec 64))

(declare-const rsp90 (_ BitVec 64))

(declare-const rbp53 (_ BitVec 64))

(declare-const rdi64 (_ BitVec 64))

(declare-const zeroflag54 bool__ref)

(declare-const carryflag54 bool__ref)

(declare-const signflag54 bool__ref)

(declare-const overflowflag54 bool__ref)

(declare-const xmm054 t__ref3)

(declare-const rax55 t__ref3)

(declare-const rbx54 t__ref3)

(declare-const rsp91 t__ref3)

(declare-const rbp54 t__ref3)

(declare-const rdi65 t__ref3)

(declare-const zeroflag55 Bool)

(declare-const carryflag55 Bool)

(declare-const signflag55 Bool)

(declare-const overflowflag55 Bool)

(declare-const xmm055 (_ BitVec 64))

(declare-const rax56 (_ BitVec 64))

(declare-const rbx55 (_ BitVec 64))

(declare-const rsp92 (_ BitVec 64))

(declare-const rbp55 (_ BitVec 64))

(declare-const rdi66 (_ BitVec 64))

(declare-const zeroflag56 bool__ref)

(declare-const carryflag56 bool__ref)

(declare-const signflag56 bool__ref)

(declare-const overflowflag56 bool__ref)

(declare-const xmm056 t__ref3)

(declare-const rax57 t__ref3)

(declare-const rbx56 t__ref3)

(declare-const rsp93 t__ref3)

(declare-const rbp56 t__ref3)

(declare-const rdi67 t__ref3)

(declare-const zeroflag57 Bool)

(declare-const carryflag57 Bool)

(declare-const signflag57 Bool)

(declare-const overflowflag57 Bool)

(declare-const xmm057 (_ BitVec 64))

(declare-const rax58 (_ BitVec 64))

(declare-const rbx57 (_ BitVec 64))

(declare-const rsp94 (_ BitVec 64))

(declare-const rbp57 (_ BitVec 64))

(declare-const rdi68 (_ BitVec 64))

(declare-const rdi69 (_ BitVec 64))

(declare-const result145 t__ref3)

(declare-const rsp95 (_ BitVec 64))

(declare-const rsp96 (_ BitVec 64))

(declare-const result146 t__ref3)

(declare-const xmm45 (_ BitVec 64))

(declare-const result147 t__ref3)

(declare-const r126 (_ BitVec 64))

(declare-const result148 bool__ref)

(declare-const zeroflag58 Bool)

(declare-const result149 t__ref3)

(declare-const xmm46 (_ BitVec 64))

(declare-const memory15 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag59 bool__ref)

(declare-const carryflag58 bool__ref)

(declare-const signflag58 bool__ref)

(declare-const overflowflag58 bool__ref)

(declare-const xmm058 t__ref3)

(declare-const xmm110 t__ref3)

(declare-const xmm210 t__ref3)

(declare-const xmm310 t__ref3)

(declare-const xmm47 t__ref3)

(declare-const rax59 t__ref3)

(declare-const rbx58 t__ref3)

(declare-const rsp97 t__ref3)

(declare-const rbp58 t__ref3)

(declare-const rsi11 t__ref3)

(declare-const rdi70 t__ref3)

(declare-const r127 t__ref3)

(declare-const memory16 map__ref)

(declare-const zeroflag60 Bool)

(declare-const carryflag59 Bool)

(declare-const signflag59 Bool)

(declare-const overflowflag59 Bool)

(declare-const xmm059 (_ BitVec 64))

(declare-const xmm111 (_ BitVec 64))

(declare-const xmm211 (_ BitVec 64))

(declare-const xmm311 (_ BitVec 64))

(declare-const xmm48 (_ BitVec 64))

(declare-const rax60 (_ BitVec 64))

(declare-const rbx59 (_ BitVec 64))

(declare-const rsp98 (_ BitVec 64))

(declare-const rbp59 (_ BitVec 64))

(declare-const rsi12 (_ BitVec 64))

(declare-const rdi71 (_ BitVec 64))

(declare-const r128 (_ BitVec 64))

(declare-const memory17 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag61 bool__ref)

(declare-const carryflag60 bool__ref)

(declare-const signflag60 bool__ref)

(declare-const overflowflag60 bool__ref)

(declare-const xmm060 t__ref3)

(declare-const xmm112 t__ref3)

(declare-const xmm212 t__ref3)

(declare-const xmm312 t__ref3)

(declare-const xmm49 t__ref3)

(declare-const rax61 t__ref3)

(declare-const rbx60 t__ref3)

(declare-const rsp99 t__ref3)

(declare-const rbp60 t__ref3)

(declare-const rsi13 t__ref3)

(declare-const rdi72 t__ref3)

(declare-const r129 t__ref3)

(declare-const memory18 map__ref)

(declare-const zeroflag62 Bool)

(declare-const carryflag61 Bool)

(declare-const signflag61 Bool)

(declare-const overflowflag61 Bool)

(declare-const xmm061 (_ BitVec 64))

(declare-const xmm113 (_ BitVec 64))

(declare-const xmm213 (_ BitVec 64))

(declare-const xmm313 (_ BitVec 64))

(declare-const xmm410 (_ BitVec 64))

(declare-const rax62 (_ BitVec 64))

(declare-const rbx61 (_ BitVec 64))

(declare-const rsp100 (_ BitVec 64))

(declare-const rbp61 (_ BitVec 64))

(declare-const rsi14 (_ BitVec 64))

(declare-const rdi73 (_ BitVec 64))

(declare-const r1210 (_ BitVec 64))

(declare-const memory19 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag63 bool__ref)

(declare-const carryflag62 bool__ref)

(declare-const signflag62 bool__ref)

(declare-const overflowflag62 bool__ref)

(declare-const xmm062 t__ref3)

(declare-const xmm114 t__ref3)

(declare-const xmm214 t__ref3)

(declare-const xmm314 t__ref3)

(declare-const xmm411 t__ref3)

(declare-const rax63 t__ref3)

(declare-const rbx62 t__ref3)

(declare-const rsp101 t__ref3)

(declare-const rbp62 t__ref3)

(declare-const rsi15 t__ref3)

(declare-const rdi74 t__ref3)

(declare-const r1211 t__ref3)

(declare-const memory20 map__ref)

(declare-const zeroflag64 Bool)

(declare-const carryflag63 Bool)

(declare-const signflag63 Bool)

(declare-const overflowflag63 Bool)

(declare-const xmm063 (_ BitVec 64))

(declare-const xmm115 (_ BitVec 64))

(declare-const xmm215 (_ BitVec 64))

(declare-const xmm315 (_ BitVec 64))

(declare-const xmm412 (_ BitVec 64))

(declare-const rax64 (_ BitVec 64))

(declare-const rbx63 (_ BitVec 64))

(declare-const rsp102 (_ BitVec 64))

(declare-const rbp63 (_ BitVec 64))

(declare-const rsi16 (_ BitVec 64))

(declare-const rdi75 (_ BitVec 64))

(declare-const r1212 (_ BitVec 64))

(declare-const memory21 (Array (_ BitVec 64) unsigned8))

(declare-const result150 t__ref3)

(declare-const xmm54 (_ BitVec 64))

(declare-const result151 t__ref3)

(declare-const r135 (_ BitVec 64))

(declare-const result152 bool__ref)

(declare-const zeroflag65 Bool)

(declare-const result153 t__ref3)

(declare-const xmm55 (_ BitVec 64))

(declare-const memory22 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag66 bool__ref)

(declare-const carryflag64 bool__ref)

(declare-const signflag64 bool__ref)

(declare-const overflowflag64 bool__ref)

(declare-const xmm064 t__ref3)

(declare-const xmm116 t__ref3)

(declare-const xmm216 t__ref3)

(declare-const xmm316 t__ref3)

(declare-const xmm413 t__ref3)

(declare-const xmm56 t__ref3)

(declare-const xmm77 t__ref3)

(declare-const rax65 t__ref3)

(declare-const rbx64 t__ref3)

(declare-const rsp103 t__ref3)

(declare-const rbp64 t__ref3)

(declare-const rsi17 t__ref3)

(declare-const rdi76 t__ref3)

(declare-const r1213 t__ref3)

(declare-const r136 t__ref3)

(declare-const memory23 map__ref)

(declare-const zeroflag67 Bool)

(declare-const carryflag65 Bool)

(declare-const signflag65 Bool)

(declare-const overflowflag65 Bool)

(declare-const xmm065 (_ BitVec 64))

(declare-const xmm117 (_ BitVec 64))

(declare-const xmm217 (_ BitVec 64))

(declare-const xmm317 (_ BitVec 64))

(declare-const xmm414 (_ BitVec 64))

(declare-const xmm57 (_ BitVec 64))

(declare-const xmm78 (_ BitVec 64))

(declare-const rax66 (_ BitVec 64))

(declare-const rbx65 (_ BitVec 64))

(declare-const rsp104 (_ BitVec 64))

(declare-const rbp65 (_ BitVec 64))

(declare-const rsi18 (_ BitVec 64))

(declare-const rdi77 (_ BitVec 64))

(declare-const r1214 (_ BitVec 64))

(declare-const r137 (_ BitVec 64))

(declare-const memory24 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag68 bool__ref)

(declare-const carryflag66 bool__ref)

(declare-const signflag66 bool__ref)

(declare-const overflowflag66 bool__ref)

(declare-const xmm066 t__ref3)

(declare-const xmm118 t__ref3)

(declare-const xmm218 t__ref3)

(declare-const xmm318 t__ref3)

(declare-const xmm415 t__ref3)

(declare-const xmm58 t__ref3)

(declare-const xmm79 t__ref3)

(declare-const rax67 t__ref3)

(declare-const rbx66 t__ref3)

(declare-const rsp105 t__ref3)

(declare-const rbp66 t__ref3)

(declare-const rsi19 t__ref3)

(declare-const rdi78 t__ref3)

(declare-const r1215 t__ref3)

(declare-const r138 t__ref3)

(declare-const memory25 map__ref)

(declare-const zeroflag69 Bool)

(declare-const carryflag67 Bool)

(declare-const signflag67 Bool)

(declare-const overflowflag67 Bool)

(declare-const xmm067 (_ BitVec 64))

(declare-const xmm119 (_ BitVec 64))

(declare-const xmm219 (_ BitVec 64))

(declare-const xmm319 (_ BitVec 64))

(declare-const xmm416 (_ BitVec 64))

(declare-const xmm59 (_ BitVec 64))

(declare-const xmm710 (_ BitVec 64))

(declare-const rax68 (_ BitVec 64))

(declare-const rbx67 (_ BitVec 64))

(declare-const rsp106 (_ BitVec 64))

(declare-const rbp67 (_ BitVec 64))

(declare-const rsi20 (_ BitVec 64))

(declare-const rdi79 (_ BitVec 64))

(declare-const r1216 (_ BitVec 64))

(declare-const r139 (_ BitVec 64))

(declare-const memory26 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag70 bool__ref)

(declare-const carryflag68 bool__ref)

(declare-const signflag68 bool__ref)

(declare-const overflowflag68 bool__ref)

(declare-const xmm068 t__ref3)

(declare-const xmm120 t__ref3)

(declare-const xmm220 t__ref3)

(declare-const xmm320 t__ref3)

(declare-const xmm417 t__ref3)

(declare-const xmm510 t__ref3)

(declare-const xmm711 t__ref3)

(declare-const rax69 t__ref3)

(declare-const rbx68 t__ref3)

(declare-const rsp107 t__ref3)

(declare-const rbp68 t__ref3)

(declare-const rsi21 t__ref3)

(declare-const rdi80 t__ref3)

(declare-const r1217 t__ref3)

(declare-const r1310 t__ref3)

(declare-const memory27 map__ref)

(declare-const zeroflag71 Bool)

(declare-const carryflag69 Bool)

(declare-const signflag69 Bool)

(declare-const overflowflag69 Bool)

(declare-const xmm069 (_ BitVec 64))

(declare-const xmm121 (_ BitVec 64))

(declare-const xmm221 (_ BitVec 64))

(declare-const xmm321 (_ BitVec 64))

(declare-const xmm418 (_ BitVec 64))

(declare-const xmm511 (_ BitVec 64))

(declare-const xmm712 (_ BitVec 64))

(declare-const rax70 (_ BitVec 64))

(declare-const rbx69 (_ BitVec 64))

(declare-const rsp108 (_ BitVec 64))

(declare-const rbp69 (_ BitVec 64))

(declare-const rsi22 (_ BitVec 64))

(declare-const rdi81 (_ BitVec 64))

(declare-const r1218 (_ BitVec 64))

(declare-const r1311 (_ BitVec 64))

(declare-const memory28 (Array (_ BitVec 64) unsigned8))

(declare-const result154 t__ref3)

(declare-const xmm64 (_ BitVec 64))

(declare-const result155 t__ref3)

(declare-const r144 (_ BitVec 64))

(declare-const result156 bool__ref)

(declare-const zeroflag72 Bool)

(declare-const result157 t__ref3)

(declare-const xmm65 (_ BitVec 64))

(declare-const memory29 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag73 bool__ref)

(declare-const carryflag70 bool__ref)

(declare-const signflag70 bool__ref)

(declare-const overflowflag70 bool__ref)

(declare-const xmm070 t__ref3)

(declare-const xmm122 t__ref3)

(declare-const xmm222 t__ref3)

(declare-const xmm322 t__ref3)

(declare-const xmm419 t__ref3)

(declare-const xmm512 t__ref3)

(declare-const xmm66 t__ref3)

(declare-const xmm713 t__ref3)

(declare-const rax71 t__ref3)

(declare-const rbx70 t__ref3)

(declare-const rsp109 t__ref3)

(declare-const rbp70 t__ref3)

(declare-const rsi23 t__ref3)

(declare-const rdi82 t__ref3)

(declare-const r1219 t__ref3)

(declare-const r1312 t__ref3)

(declare-const r145 t__ref3)

(declare-const memory30 map__ref)

(declare-const zeroflag74 Bool)

(declare-const carryflag71 Bool)

(declare-const signflag71 Bool)

(declare-const overflowflag71 Bool)

(declare-const xmm071 (_ BitVec 64))

(declare-const xmm123 (_ BitVec 64))

(declare-const xmm223 (_ BitVec 64))

(declare-const xmm323 (_ BitVec 64))

(declare-const xmm420 (_ BitVec 64))

(declare-const xmm513 (_ BitVec 64))

(declare-const xmm67 (_ BitVec 64))

(declare-const xmm714 (_ BitVec 64))

(declare-const rax72 (_ BitVec 64))

(declare-const rbx71 (_ BitVec 64))

(declare-const rsp110 (_ BitVec 64))

(declare-const rbp71 (_ BitVec 64))

(declare-const rsi24 (_ BitVec 64))

(declare-const rdi83 (_ BitVec 64))

(declare-const r1220 (_ BitVec 64))

(declare-const r1313 (_ BitVec 64))

(declare-const r146 (_ BitVec 64))

(declare-const memory31 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag75 bool__ref)

(declare-const carryflag72 bool__ref)

(declare-const signflag72 bool__ref)

(declare-const overflowflag72 bool__ref)

(declare-const xmm072 t__ref3)

(declare-const xmm124 t__ref3)

(declare-const xmm224 t__ref3)

(declare-const xmm324 t__ref3)

(declare-const xmm421 t__ref3)

(declare-const xmm514 t__ref3)

(declare-const xmm68 t__ref3)

(declare-const xmm715 t__ref3)

(declare-const rax73 t__ref3)

(declare-const rbx72 t__ref3)

(declare-const rsp111 t__ref3)

(declare-const rbp72 t__ref3)

(declare-const rsi25 t__ref3)

(declare-const rdi84 t__ref3)

(declare-const r1221 t__ref3)

(declare-const r1314 t__ref3)

(declare-const r147 t__ref3)

(declare-const memory32 map__ref)

(declare-const zeroflag76 Bool)

(declare-const carryflag73 Bool)

(declare-const signflag73 Bool)

(declare-const overflowflag73 Bool)

(declare-const xmm073 (_ BitVec 64))

(declare-const xmm125 (_ BitVec 64))

(declare-const xmm225 (_ BitVec 64))

(declare-const xmm325 (_ BitVec 64))

(declare-const xmm422 (_ BitVec 64))

(declare-const xmm515 (_ BitVec 64))

(declare-const xmm69 (_ BitVec 64))

(declare-const xmm716 (_ BitVec 64))

(declare-const rax74 (_ BitVec 64))

(declare-const rbx73 (_ BitVec 64))

(declare-const rsp112 (_ BitVec 64))

(declare-const rbp73 (_ BitVec 64))

(declare-const rsi26 (_ BitVec 64))

(declare-const rdi85 (_ BitVec 64))

(declare-const r1222 (_ BitVec 64))

(declare-const r1315 (_ BitVec 64))

(declare-const r148 (_ BitVec 64))

(declare-const memory33 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag77 bool__ref)

(declare-const carryflag74 bool__ref)

(declare-const signflag74 bool__ref)

(declare-const overflowflag74 bool__ref)

(declare-const xmm074 t__ref3)

(declare-const xmm126 t__ref3)

(declare-const xmm226 t__ref3)

(declare-const xmm326 t__ref3)

(declare-const xmm423 t__ref3)

(declare-const xmm516 t__ref3)

(declare-const xmm610 t__ref3)

(declare-const xmm717 t__ref3)

(declare-const rax75 t__ref3)

(declare-const rbx74 t__ref3)

(declare-const rsp113 t__ref3)

(declare-const rbp74 t__ref3)

(declare-const rsi27 t__ref3)

(declare-const rdi86 t__ref3)

(declare-const r1223 t__ref3)

(declare-const r1316 t__ref3)

(declare-const r149 t__ref3)

(declare-const memory34 map__ref)

(declare-const zeroflag78 Bool)

(declare-const carryflag75 Bool)

(declare-const signflag75 Bool)

(declare-const overflowflag75 Bool)

(declare-const xmm075 (_ BitVec 64))

(declare-const xmm127 (_ BitVec 64))

(declare-const xmm227 (_ BitVec 64))

(declare-const xmm327 (_ BitVec 64))

(declare-const xmm424 (_ BitVec 64))

(declare-const xmm517 (_ BitVec 64))

(declare-const xmm611 (_ BitVec 64))

(declare-const xmm718 (_ BitVec 64))

(declare-const rax76 (_ BitVec 64))

(declare-const rbx75 (_ BitVec 64))

(declare-const rsp114 (_ BitVec 64))

(declare-const rbp75 (_ BitVec 64))

(declare-const rsi28 (_ BitVec 64))

(declare-const rdi87 (_ BitVec 64))

(declare-const r1224 (_ BitVec 64))

(declare-const r1317 (_ BitVec 64))

(declare-const r1410 (_ BitVec 64))

(declare-const memory35 (Array (_ BitVec 64) unsigned8))

(declare-const result158 t__ref3)

(declare-const xmm719 (_ BitVec 64))

(declare-const result159 t__ref3)

(declare-const r153 (_ BitVec 64))

(declare-const result160 bool__ref)

(declare-const zeroflag79 Bool)

(declare-const result161 t__ref3)

(declare-const xmm720 (_ BitVec 64))

(declare-const memory36 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag80 bool__ref)

(declare-const carryflag76 bool__ref)

(declare-const signflag76 bool__ref)

(declare-const overflowflag76 bool__ref)

(declare-const xmm076 t__ref3)

(declare-const xmm128 t__ref3)

(declare-const xmm228 t__ref3)

(declare-const xmm328 t__ref3)

(declare-const xmm425 t__ref3)

(declare-const xmm518 t__ref3)

(declare-const xmm612 t__ref3)

(declare-const xmm721 t__ref3)

(declare-const rax77 t__ref3)

(declare-const rbx76 t__ref3)

(declare-const rsp115 t__ref3)

(declare-const rbp76 t__ref3)

(declare-const rsi29 t__ref3)

(declare-const rdi88 t__ref3)

(declare-const r1225 t__ref3)

(declare-const r1318 t__ref3)

(declare-const r1411 t__ref3)

(declare-const r154 t__ref3)

(declare-const memory37 map__ref)

(declare-const zeroflag81 Bool)

(declare-const carryflag77 Bool)

(declare-const signflag77 Bool)

(declare-const overflowflag77 Bool)

(declare-const xmm077 (_ BitVec 64))

(declare-const xmm129 (_ BitVec 64))

(declare-const xmm229 (_ BitVec 64))

(declare-const xmm329 (_ BitVec 64))

(declare-const xmm426 (_ BitVec 64))

(declare-const xmm519 (_ BitVec 64))

(declare-const xmm613 (_ BitVec 64))

(declare-const xmm722 (_ BitVec 64))

(declare-const rax78 (_ BitVec 64))

(declare-const rbx77 (_ BitVec 64))

(declare-const rsp116 (_ BitVec 64))

(declare-const rbp77 (_ BitVec 64))

(declare-const rsi30 (_ BitVec 64))

(declare-const rdi89 (_ BitVec 64))

(declare-const r1226 (_ BitVec 64))

(declare-const r1319 (_ BitVec 64))

(declare-const r1412 (_ BitVec 64))

(declare-const r155 (_ BitVec 64))

(declare-const memory38 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag82 bool__ref)

(declare-const carryflag78 bool__ref)

(declare-const signflag78 bool__ref)

(declare-const overflowflag78 bool__ref)

(declare-const xmm078 t__ref3)

(declare-const xmm130 t__ref3)

(declare-const xmm230 t__ref3)

(declare-const xmm330 t__ref3)

(declare-const xmm427 t__ref3)

(declare-const xmm520 t__ref3)

(declare-const xmm614 t__ref3)

(declare-const xmm723 t__ref3)

(declare-const rax79 t__ref3)

(declare-const rbx78 t__ref3)

(declare-const rsp117 t__ref3)

(declare-const rbp78 t__ref3)

(declare-const rsi31 t__ref3)

(declare-const rdi90 t__ref3)

(declare-const r1227 t__ref3)

(declare-const r1320 t__ref3)

(declare-const r1413 t__ref3)

(declare-const r156 t__ref3)

(declare-const memory39 map__ref)

(declare-const zeroflag83 Bool)

(declare-const carryflag79 Bool)

(declare-const signflag79 Bool)

(declare-const overflowflag79 Bool)

(declare-const xmm079 (_ BitVec 64))

(declare-const xmm131 (_ BitVec 64))

(declare-const xmm231 (_ BitVec 64))

(declare-const xmm331 (_ BitVec 64))

(declare-const xmm428 (_ BitVec 64))

(declare-const xmm521 (_ BitVec 64))

(declare-const xmm615 (_ BitVec 64))

(declare-const xmm724 (_ BitVec 64))

(declare-const rax80 (_ BitVec 64))

(declare-const rbx79 (_ BitVec 64))

(declare-const rsp118 (_ BitVec 64))

(declare-const rbp79 (_ BitVec 64))

(declare-const rsi32 (_ BitVec 64))

(declare-const rdi91 (_ BitVec 64))

(declare-const r1228 (_ BitVec 64))

(declare-const r1321 (_ BitVec 64))

(declare-const r1414 (_ BitVec 64))

(declare-const r157 (_ BitVec 64))

(declare-const memory40 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag84 bool__ref)

(declare-const carryflag80 bool__ref)

(declare-const signflag80 bool__ref)

(declare-const overflowflag80 bool__ref)

(declare-const xmm080 t__ref3)

(declare-const xmm132 t__ref3)

(declare-const xmm232 t__ref3)

(declare-const xmm332 t__ref3)

(declare-const xmm429 t__ref3)

(declare-const xmm522 t__ref3)

(declare-const xmm616 t__ref3)

(declare-const xmm725 t__ref3)

(declare-const rax81 t__ref3)

(declare-const rbx80 t__ref3)

(declare-const rsp119 t__ref3)

(declare-const rbp80 t__ref3)

(declare-const rsi33 t__ref3)

(declare-const rdi92 t__ref3)

(declare-const r1229 t__ref3)

(declare-const r1322 t__ref3)

(declare-const r1415 t__ref3)

(declare-const r158 t__ref3)

(declare-const memory41 map__ref)

(declare-const zeroflag85 Bool)

(declare-const carryflag81 Bool)

(declare-const signflag81 Bool)

(declare-const overflowflag81 Bool)

(declare-const xmm081 (_ BitVec 64))

(declare-const xmm133 (_ BitVec 64))

(declare-const xmm233 (_ BitVec 64))

(declare-const xmm333 (_ BitVec 64))

(declare-const xmm430 (_ BitVec 64))

(declare-const xmm523 (_ BitVec 64))

(declare-const xmm617 (_ BitVec 64))

(declare-const xmm726 (_ BitVec 64))

(declare-const rax82 (_ BitVec 64))

(declare-const rbx81 (_ BitVec 64))

(declare-const rsp120 (_ BitVec 64))

(declare-const rbp81 (_ BitVec 64))

(declare-const rsi34 (_ BitVec 64))

(declare-const rdi93 (_ BitVec 64))

(declare-const r1230 (_ BitVec 64))

(declare-const r1323 (_ BitVec 64))

(declare-const r1416 (_ BitVec 64))

(declare-const r159 (_ BitVec 64))

(declare-const memory42 (Array (_ BitVec 64) unsigned8))

(declare-const rdi94 (_ BitVec 64))

(declare-const rbx82 (_ BitVec 64))

(declare-const rax83 (_ BitVec 64))

(declare-const rcx2 (_ BitVec 64))

(declare-const rdx2 (_ BitVec 64))

(declare-const rbx83 (_ BitVec 64))

(declare-const rsp121 (_ BitVec 64))

(declare-const rbp82 (_ BitVec 64))

(declare-const rsi35 (_ BitVec 64))

(declare-const rdi95 (_ BitVec 64))

(declare-const r81 (_ BitVec 64))

(declare-const memory43 (Array (_ BitVec 64) unsigned8))

(declare-const result162 t__ref3)

(declare-const rsi36 (_ BitVec 64))

(declare-const rdi96 (_ BitVec 64))

(declare-const rbx84 (_ BitVec 64))

(declare-const result163 t__ref3)

(declare-const rsp122 (_ BitVec 64))

(declare-const exit_called Bool)

(declare-const carryflag82 Bool)

(declare-const signflag82 Bool)

(declare-const overflowflag82 Bool)

(declare-const rax84 (_ BitVec 64))

(declare-const rcx3 (_ BitVec 64))

(declare-const rdx3 (_ BitVec 64))

(declare-const rsp123 (_ BitVec 64))

(declare-const rdi97 (_ BitVec 64))

(declare-const r82 (_ BitVec 64))

(declare-const memory44 (Array (_ BitVec 64) unsigned8))

(declare-const rdx4 (_ BitVec 64))

(declare-const rsi37 (_ BitVec 64))

(declare-const rdi98 (_ BitVec 64))

(declare-const rax85 (_ BitVec 64))

(declare-const result164 t__ref3)

(declare-const rsp124 (_ BitVec 64))

(declare-const rsp125 (_ BitVec 64))

(declare-const rdi99 (_ BitVec 64))

(declare-const result165 t__ref3)

(declare-const rsp126 (_ BitVec 64))

(declare-const rsp127 (_ BitVec 64))

(declare-const result166 t__ref3)

(declare-const xmm234 (_ BitVec 64))

(declare-const xmm082 (_ BitVec 64))

(declare-const xmm134 (_ BitVec 64))

(declare-const xmm235 (_ BitVec 64))

(declare-const rax86 (_ BitVec 64))

(declare-const rbx85 (_ BitVec 64))

(declare-const rsp128 (_ BitVec 64))

(declare-const rbp83 (_ BitVec 64))

(declare-const rdi100 (_ BitVec 64))

(declare-const memory45 (Array (_ BitVec 64) unsigned8))

(declare-const rdi101 (_ BitVec 64))

(declare-const rbx86 (_ BitVec 64))

(declare-const result167 t__ref3)

(declare-const rsp129 (_ BitVec 64))

(declare-const rsp130 (_ BitVec 64))

(declare-const result168 t__ref3)

(declare-const xmm236 (_ BitVec 64))

(declare-const zeroflag86 Bool)

(declare-const xmm083 (_ BitVec 64))

(declare-const xmm135 (_ BitVec 64))

(declare-const xmm237 (_ BitVec 64))

(declare-const rax87 (_ BitVec 64))

(declare-const rbx87 (_ BitVec 64))

(declare-const rsp131 (_ BitVec 64))

(declare-const rbp84 (_ BitVec 64))

(declare-const rdi102 (_ BitVec 64))

(declare-const memory46 (Array (_ BitVec 64) unsigned8))

(declare-const result169 t__ref3)

(declare-const rsp132 (_ BitVec 64))

(declare-const rax88 (_ BitVec 64))

(declare-const result170 t__ref3)

(declare-const rbx88 (_ BitVec 64))

(declare-const result171 t__ref3)

(declare-const rsp133 (_ BitVec 64))

(declare-const result172 t__ref3)

(declare-const rbp85 (_ BitVec 64))

(declare-const result173 t__ref3)

(declare-const rsp134 (_ BitVec 64))

(declare-const result174 t__ref3)

(declare-const r1231 (_ BitVec 64))

(declare-const result175 t__ref3)

(declare-const rsp135 (_ BitVec 64))

(declare-const result176 t__ref3)

(declare-const r1324 (_ BitVec 64))

(declare-const result177 t__ref3)

(declare-const rsp136 (_ BitVec 64))

(declare-const result178 t__ref3)

(declare-const r1417 (_ BitVec 64))

(declare-const result179 t__ref3)

(declare-const rsp137 (_ BitVec 64))

(declare-const result180 t__ref3)

(declare-const r1510 (_ BitVec 64))

(declare-const result181 t__ref3)

(declare-const rsp138 (_ BitVec 64))

(declare-const result182 t__ref3)

(declare-const rsp139 (_ BitVec 64))

(declare-const exit_called1 bool__ref)

(declare-const zeroflag87 bool__ref)

(declare-const carryflag83 bool__ref)

(declare-const signflag83 bool__ref)

(declare-const overflowflag83 bool__ref)

(declare-const xmm084 t__ref3)

(declare-const xmm136 t__ref3)

(declare-const xmm238 t__ref3)

(declare-const xmm334 t__ref3)

(declare-const xmm431 t__ref3)

(declare-const xmm524 t__ref3)

(declare-const xmm618 t__ref3)

(declare-const xmm727 t__ref3)

(declare-const rax89 t__ref3)

(declare-const rcx4 t__ref3)

(declare-const rdx5 t__ref3)

(declare-const rbx89 t__ref3)

(declare-const rsp140 t__ref3)

(declare-const rbp86 t__ref3)

(declare-const rsi38 t__ref3)

(declare-const rdi103 t__ref3)

(declare-const r83 t__ref3)

(declare-const r1232 t__ref3)

(declare-const r1325 t__ref3)

(declare-const r1418 t__ref3)

(declare-const r1511 t__ref3)

(declare-const memory47 map__ref)

(declare-const savestackptr2 t__ref3)

(declare-const ra02 t__ref)

(declare-const ra12 t__ref)

(declare-const ra22 t__ref)

(declare-const ra32 t__ref)

(declare-const ra42 t__ref)

(declare-const ra52 t__ref)

(declare-const ra62 t__ref)

(declare-const ra72 t__ref)

(declare-const saverbx2 t__ref3)

(declare-const saverbp2 t__ref3)

(declare-const saver122 t__ref3)

(declare-const saver132 t__ref3)

(declare-const saver142 t__ref3)

(declare-const saver152 t__ref3)

(declare-const exit_called2 Bool)

(declare-const zeroflag88 Bool)

(declare-const carryflag84 Bool)

(declare-const signflag84 Bool)

(declare-const overflowflag84 Bool)

(declare-const xmm085 (_ BitVec 64))

(declare-const xmm137 (_ BitVec 64))

(declare-const xmm239 (_ BitVec 64))

(declare-const xmm335 (_ BitVec 64))

(declare-const xmm432 (_ BitVec 64))

(declare-const xmm525 (_ BitVec 64))

(declare-const xmm619 (_ BitVec 64))

(declare-const xmm728 (_ BitVec 64))

(declare-const rax90 (_ BitVec 64))

(declare-const rcx5 (_ BitVec 64))

(declare-const rdx6 (_ BitVec 64))

(declare-const rbx90 (_ BitVec 64))

(declare-const rsp141 (_ BitVec 64))

(declare-const rbp87 (_ BitVec 64))

(declare-const rsi39 (_ BitVec 64))

(declare-const rdi104 (_ BitVec 64))

(declare-const r84 (_ BitVec 64))

(declare-const r1233 (_ BitVec 64))

(declare-const r1326 (_ BitVec 64))

(declare-const r1419 (_ BitVec 64))

(declare-const r1512 (_ BitVec 64))

(declare-const memory48 (Array (_ BitVec 64) unsigned8))

(declare-const savestackptr3 (_ BitVec 64))

(declare-const ra03 (_ BitVec 8))

(declare-const ra13 (_ BitVec 8))

(declare-const ra23 (_ BitVec 8))

(declare-const ra33 (_ BitVec 8))

(declare-const ra43 (_ BitVec 8))

(declare-const ra53 (_ BitVec 8))

(declare-const ra63 (_ BitVec 8))

(declare-const ra73 (_ BitVec 8))

(declare-const saverbx3 (_ BitVec 64))

(declare-const saverbp3 (_ BitVec 64))

(declare-const saver123 (_ BitVec 64))

(declare-const saver133 (_ BitVec 64))

(declare-const saver143 (_ BitVec 64))

(declare-const saver153 (_ BitVec 64))

(define-fun xmm620 () t__ref3 (mk_t__ref3 xmm6))

(define-fun xmm336 () t__ref3 (mk_t__ref3 xmm3))

(define-fun xmm240 () t__ref3 (mk_t__ref3 xmm2))

(define-fun xmm138 () t__ref3 (mk_t__ref3 xmm1))

(define-fun xmm086 () t__ref3 (mk_t__ref3 xmm0))

(define-fun overflowflag85 () bool__ref (mk_bool__ref overflowflag))

(define-fun signflag85 () bool__ref (mk_bool__ref signflag))

(define-fun carryflag85 () bool__ref (mk_bool__ref carryflag))

(define-fun zeroflag89 () bool__ref (mk_bool__ref zeroflag))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert
  (and
  (and
  (and (= o (t__content3 rsp))
  (and (= result savestackptr)
  (= (let ((subject savestackptr)) savestackptr1) o)))
  (and
  (and
  (and
  (and (= o1 (readmem8 (t__content3 rsp) (map__content memory)))
  (= o1 (to_rep (select (map__content memory) (t__content3 rsp)))))
  (= o2 o1)) (and (= result1 ra0) (= (let ((subject ra0)) ra01) o2)))
  (and
  (and
  (and
  (and
  (= o3 (readmem8 (bvadd (t__content3 rsp) ((_ int2bv 64) 1))
        (map__content memory)))
  (= o3 (to_rep
        (select (map__content memory) (bvadd (t__content3 rsp) ((_ int2bv 64) 1))))))
  (= o4 o3)) (and (= result2 ra1) (= (let ((subject ra1)) ra11) o4)))
  (and
  (and
  (and
  (and
  (= o5 (readmem8 (bvadd (t__content3 rsp) ((_ int2bv 64) 2))
        (map__content memory)))
  (= o5 (to_rep
        (select (map__content memory) (bvadd (t__content3 rsp) ((_ int2bv 64) 2))))))
  (= o6 o5)) (and (= result3 ra2) (= (let ((subject ra2)) ra21) o6)))
  (and
  (and
  (and
  (and
  (= o7 (readmem8 (bvadd (t__content3 rsp) ((_ int2bv 64) 3))
        (map__content memory)))
  (= o7 (to_rep
        (select (map__content memory) (bvadd (t__content3 rsp) ((_ int2bv 64) 3))))))
  (= o8 o7)) (and (= result4 ra3) (= (let ((subject ra3)) ra31) o8)))
  (and
  (and
  (and
  (and
  (= o9 (readmem8 (bvadd (t__content3 rsp) ((_ int2bv 64) 4))
        (map__content memory)))
  (= o9 (to_rep
        (select (map__content memory) (bvadd (t__content3 rsp) ((_ int2bv 64) 4))))))
  (= o10 o9)) (and (= result5 ra4) (= (let ((subject ra4)) ra41) o10)))
  (and
  (and
  (and
  (and
  (= o11 (readmem8 (bvadd (t__content3 rsp) ((_ int2bv 64) 5))
         (map__content memory)))
  (= o11 (to_rep
         (select (map__content memory) (bvadd (t__content3 rsp) ((_ int2bv 64) 5))))))
  (= o12 o11)) (and (= result6 ra5) (= (let ((subject ra5)) ra51) o12)))
  (and
  (and
  (and
  (and
  (= o13 (readmem8 (bvadd (t__content3 rsp) ((_ int2bv 64) 6))
         (map__content memory)))
  (= o13 (to_rep
         (select (map__content memory) (bvadd (t__content3 rsp) ((_ int2bv 64) 6))))))
  (= o14 o13)) (and (= result7 ra6) (= (let ((subject ra6)) ra61) o14)))
  (and
  (and
  (and
  (and
  (= o15 (readmem8 (bvadd (t__content3 rsp) ((_ int2bv 64) 7))
         (map__content memory)))
  (= o15 (to_rep
         (select (map__content memory) (bvadd (t__content3 rsp) ((_ int2bv 64) 7))))))
  (= o16 o15)) (and (= result8 ra7) (= (let ((subject ra7)) ra71) o16)))
  (and
  (and (= o17 (t__content3 rbx))
  (and (= result9 saverbx) (= (let ((subject saverbx)) saverbx1) o17)))
  (and
  (and (= o18 (t__content3 rbp))
  (and (= result10 saverbp) (= (let ((subject saverbp)) saverbp1) o18)))
  (and
  (and (= o19 (t__content3 r12))
  (and (= result11 saver12) (= (let ((subject saver12)) saver121) o19)))
  (and
  (and (= o20 (t__content3 r13))
  (and (= result12 saver13) (= (let ((subject saver13)) saver131) o20)))
  (and
  (and (= o21 (t__content3 r14))
  (and (= result13 saver14) (= (let ((subject saver14)) saver141) o21)))
  (and
  (and (= o22 (t__content3 r15))
  (and (= result14 saver15) (= (let ((subject saver15)) saver151) o22)))
  (and (= (t__content3 rsp) ((_ int2bv 64) 12105675798371893247))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand (t__content3 r15) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvsub (t__content3 rsp) ((_ int2bv 64) 8))))))
  (= (bvand (t__content3 r15) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand (t__content3 r15) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand (t__content3 r15) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand (t__content3 r15) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand (t__content3 r15) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand (t__content3 r15) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand (t__content3 r15) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub (t__content3 rsp) ((_ int2bv 64) 8))))
  (not
  (= i (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (t__content3 rsp) ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory1) i)) (to_rep
                                                          (select (map__content
                                                                  memory) i)))))))
  (and
  (and (= result15 rsp)
  (= (let ((subject rsp)) rsp1) (bvsub (t__content3 rsp) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand (t__content3 r14) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8))))))
  (= (bvand (t__content3 r14) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand (t__content3 r14) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand (t__content3 r14) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand (t__content3 r14) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand (t__content3 r14) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand (t__content3 r14) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand (t__content3 r14) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory2) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory1) i)))))))
  (and
  (and (= result16 (let ((subject rsp)) (mk_t__ref3 rsp1)))
  (= (let ((subject rsp)) rsp2) (bvsub (let ((subject rsp)) rsp1) ((_ int2bv 64) 8))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi1) ((_ int2bv 32) 4198504)) true)
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand (t__content3 r13) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8))))))
  (= (bvand (t__content3 r13) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand (t__content3 r13) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand (t__content3 r13) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand (t__content3 r13) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand (t__content3 r13) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand (t__content3 r13) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand (t__content3 r13) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory3) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory2) i)))))))
  (and
  (and (= result17 (let ((subject rsp)) (mk_t__ref3 rsp2)))
  (= (let ((subject rsp)) rsp3) (bvsub (let ((subject rsp)) rsp2) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand (t__content3 r12) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8))))))
  (= (bvand (t__content3 r12) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand (t__content3 r12) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand (t__content3 r12) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand (t__content3 r12) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand (t__content3 r12) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand (t__content3 r12) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand (t__content3 r12) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory4) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory3) i)))))))
  (and
  (and (= result18 (let ((subject rsp)) (mk_t__ref3 rsp3)))
  (= (let ((subject rsp)) rsp4) (bvsub (let ((subject rsp)) rsp3) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8))))))
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand (t__content3 rbp) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory5) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory4) i)))))))
  (and
  (and (= result19 (let ((subject rsp)) (mk_t__ref3 rsp4)))
  (= (let ((subject rsp)) rsp5) (bvsub (let ((subject rsp)) rsp4) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8))))))
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand (t__content3 rbx) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (let ((subject
                                                         rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory6) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory5) i)))))))
  (and
  (and (= result20 (let ((subject rsp)) (mk_t__ref3 rsp5)))
  (= (let ((subject rsp)) rsp6) (bvsub (let ((subject rsp)) rsp5) ((_ int2bv 64) 8))))
  (and (= (writereg32post (let ((subject rbx)) rbx1) ((_ int2bv 32) 0)) true)
  (and
  (and (= result21 (let ((subject rsp)) (mk_t__ref3 rsp6)))
  (= (let ((subject rsp)) rsp7) (bvsub (let ((subject rsp)) rsp6) ((_ int2bv 64) 104))))
  (and
  (and (= result22 (let ((subject rsp)) (mk_t__ref3 rsp7)))
  (= (let ((subject rsp)) rsp8) (bvsub (let ((subject rsp)) rsp7) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp9) (bvadd (let ((subject rsp)) rsp8) ((_ int2bv 64) 8)))
  (and
  (and (= result23 rsi)
  (= (let ((subject rsi)) rsi1) (bvadd (let ((subject rsp)) rsp9) ((_ int2bv 64) 64))))
  (and
  (and (= result24 (let ((subject rdi)) (mk_t__ref3 rdi1)))
  (= (let ((subject rdi)) rdi2) (bvadd (let ((subject rsp)) rsp9) ((_ int2bv 64) 44))))
  (and
  (and (= result25 rbp)
  (= (let ((subject rbp)) rbp1) (bvadd (let ((subject rsp)) rsp9) ((_ int2bv 64) 64))))
  (and
  (and
  (and
  (= o23 (readmem64 ((_ int2bv 64) 4198776) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o23 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198776)))))
  (= (bvand o23 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o23 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o23 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o23 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o23 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o23 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o23 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result26 xmm336) (= xmm31 o23)))
  (and
  (and
  (and
  (= o24 (readmem64 ((_ int2bv 64) 4198784) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o24 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198784)))))
  (= (bvand o24 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198784) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o24 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198784) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o24 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198784) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o24 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198784) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o24 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198784) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o24 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198784) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o24 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198784) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result27 xmm240) (= xmm21 o24)))
  (and
  (and
  (and
  (= o25 (readmem64 ((_ int2bv 64) 4198792) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o25 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198792)))))
  (= (bvand o25 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198792) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o25 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198792) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o25 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198792) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o25 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198792) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o25 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198792) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o25 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198792) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o25 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198792) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result28 xmm138) (= xmm11 o25)))
  (and
  (and
  (and
  (= o26 (readmem64 ((_ int2bv 64) 4198768) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o26 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198768)))))
  (= (bvand o26 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o26 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o26 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o26 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o26 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o26 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o26 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result29 xmm086) (= xmm01 o26)))
  (and
  (and (= result30 (let ((subject rsp)) (mk_t__ref3 rsp9)))
  (= (let ((subject rsp)) rsp10) (bvsub (let ((subject rsp)) rsp9) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp11) (bvadd (let ((subject rsp)) rsp10) ((_ int2bv 64) 8)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi3) ((_ int2bv 32) 4198688)) true)
  (and (= (writereg32post rax1 ((_ int2bv 32) 0)) true)
  (and
  (and (= result31 (let ((subject rsp)) (mk_t__ref3 rsp11)))
  (= (let ((subject rsp)) rsp12) (bvsub (let ((subject rsp)) rsp11) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp13) (bvadd (let ((subject rsp)) rsp12) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and
  (and (= o27 (esp (let ((subject rsp)) rsp13)))
  (= o27 (readreg32 (let ((subject rsp)) rsp13))))
  (= o28 (bvadd o27 ((_ int2bv 32) 44)))) (= o29 ((_ zero_extend 32)
  o28)))
  (and (= o30 (readmem32 o29 (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o30 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6)
                                                         o29))))
  (= (bvand o30 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd
                                                                  o29 ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o30 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o29 ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o30 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o29 ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216))))))
  (= (writereg32post (let ((subject rdi)) rdi4) o30) true))
  (and
  (and
  (and
  (and
  (and (= o31 (edi (let ((subject rdi)) rdi4)))
  (= o31 (readreg32 (let ((subject rdi)) rdi4))))
  (and
  (and (= o32 (edi (let ((subject rdi)) rdi4)))
  (= o32 (readreg32 (let ((subject rdi)) rdi4)))) (= o33 (bvand o32 o31))))
  (= o34 (ite (= o33 ((_ int2bv 32) 0)) true false)))
  (and (= result32 zeroflag89) (= zeroflag1 o34)))
  (and
  (and
  (and
  (and
  (and (= o35 (edi (let ((subject rdi)) rdi4)))
  (= o35 (readreg32 (let ((subject rdi)) rdi4))))
  (and
  (and (= o36 (edi (let ((subject rdi)) rdi4)))
  (= o36 (readreg32 (let ((subject rdi)) rdi4)))) (= o37 (bvand o36 o35))))
  (= o38 (ite (bvugt o37 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result33 signflag85) (= signflag1 o38)))
  (and (and (= result34 carryflag85) (= carryflag1 (of_int 0)))
  (and (and (= result35 overflowflag85) (= overflowflag1 (of_int 0)))
  (and
  (ite (and (not (= zeroflag1 true))
       (= (to_int5 signflag1) (to_int5 overflowflag1)))
  (and
  (and
  (and (= temp___393 (let ((subject rbx)) rbx1))
  (and (= temp___394 (let ((subject rsp)) rsp13))
  (and (= temp___392 (let ((subject rsp)) rsp13))
  (and (= temp___391 overflowflag1)
  (and (= temp___390 signflag1)
  (and (= temp___389 rax1)
  (and (= temp___387 carryflag1)
  (and (= temp___388 xmm01)
  (and (= temp___386 (let ((subject rbp)) rbp1))
  (and (= temp___385 (let ((subject rdi)) rdi4))
  (and (= temp___384 zeroflag1)
  (and (= (let ((subject rsp)) rsp14) temp___394)
  (and
  (and (not (= zeroflag2 true))
  (= (= signflag2 true) (= overflowflag2 true)))
  (and
  (and
  (and
  (= o39 (readmem64 (let ((subject rbp)) rbp2)
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o39 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6)
                                                         (let ((subject
                                                         rbp)) rbp2)))))
  (= (bvand o39 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd
                                                                  (let ((subject
                                                                  rbp))
                                                                  rbp2) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o39 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp2) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o39 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp2) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o39 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp2) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o39 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp2) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o39 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp2) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o39 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp2) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result36 (mk_t__ref3 xmm02)) (= xmm03 o39)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi6) ((_ int2bv 32) 4198699)) true)
  (and (= (writereg32post rax3 ((_ int2bv 32) 1)) true)
  (and
  (and
  (and
  (and (= o40 (ebx (let ((subject rbx)) rbx2)))
  (= o40 (readreg32 (let ((subject rbx)) rbx2))))
  (= o41 (bvadd o40 ((_ int2bv 32) 1))))
  (= (writereg32post (let ((subject rbx)) rbx3) o41) true))
  (and
  (and (= result37 (let ((subject rbp)) (mk_t__ref3 rbp2)))
  (= (let ((subject rbp)) rbp3) (bvadd (let ((subject rbp)) rbp2) ((_ int2bv 64) 8))))
  (and
  (and (= result38 (let ((subject rsp)) (mk_t__ref3 rsp14)))
  (= (let ((subject rsp)) rsp15) (bvsub (let ((subject rsp)) rsp14) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp16) (bvadd (let ((subject rsp)) rsp15) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and (= o42 (ebx (let ((subject rbx)) rbx3)))
  (= o42 (readreg32 (let ((subject rbx)) rbx3))))
  (and
  (and
  (= o43 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o43 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o43 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o43 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o43 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o44 (bvsub o43 o42))))
  (= o45 (ite (= o44 ((_ int2bv 32) 0)) true false)))
  (and (= result39 (mk_bool__ref zeroflag2)) (= zeroflag3 o45)))
  (and
  (and
  (and
  (and
  (and (= o46 (ebx (let ((subject rbx)) rbx3)))
  (= o46 (readreg32 (let ((subject rbx)) rbx3))))
  (and
  (and
  (= o47 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o47 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o47 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o47 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o47 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o48 (bvsub o47 o46))))
  (= o49 (ite (bvugt o48 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result40 (mk_bool__ref signflag2)) (= signflag3 o49)))
  (and
  (and
  (and
  (and (= o50 (ebx (let ((subject rbx)) rbx3)))
  (= o50 (readreg32 (let ((subject rbx)) rbx3))))
  (and
  (and
  (= o51 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o51 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o51 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o51 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o51 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o52 (ite (bvult o51 o50) true false))))
  (and (= result41 (mk_bool__ref carryflag2)) (= carryflag3 o52)))
  (and
  (and
  (and
  (and
  (ite (not (= signflag3 true))
  (and
  (and
  (= o56 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o56 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o56 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o56 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o56 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= result42 (ite (bvugt o56 ((_ int2bv 32) 2147483647)) true false)))
  (= result42 false))
  (ite (= result42 true)
  (and
  (and (= o55 (ebx (let ((subject rbx)) rbx3)))
  (= o55 (readreg32 (let ((subject rbx)) rbx3))))
  (= o57 (ite (bvule o55 ((_ int2bv 32) 2147483647)) true false)))
  (= o57 false)))
  (and
  (and
  (ite (= signflag3 true)
  (and
  (and (= o54 (ebx (let ((subject rbx)) rbx3)))
  (= o54 (readreg32 (let ((subject rbx)) rbx3))))
  (= result43 (ite (bvugt o54 ((_ int2bv 32) 2147483647)) true false)))
  (= result43 false))
  (ite (= result43 true)
  (and
  (and
  (= o53 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o53 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o53 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o53 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o53 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp16) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o58 (ite (bvule o53 ((_ int2bv 32) 2147483647)) true false)))
  (= o58 false))) (= o59 (ite (= o58 false) o57 true))))
  (and (= result44 (mk_bool__ref overflowflag2)) (= overflowflag3 o59)))
  (not
  (and (not (= zeroflag3 true))
  (= (to_int5 signflag3) (to_int5 overflowflag3))))))))))))))))))))))))))))
  (and
  (and (= rdi9 (let ((subject rdi)) (mk_t__ref3 rdi6)))
  (and (= rbp6 (let ((subject rbp)) (mk_t__ref3 rbp3)))
  (and (= rsp19 (let ((subject rsp)) (mk_t__ref3 rsp16)))
  (and (= rbx6 (let ((subject rbx)) (mk_t__ref3 rbx3)))
  (and (= rax6 (mk_t__ref3 rax3))
  (and (= xmm06 (mk_t__ref3 xmm03))
  (and (= overflowflag6 (mk_bool__ref overflowflag3))
  (and (= signflag6 (mk_bool__ref signflag3))
  (and (= carryflag6 (mk_bool__ref carryflag3))
  (= zeroflag6 (mk_bool__ref zeroflag3)))))))))))
  (and (= rdi10 rdi6)
  (and (= rbp7 rbp3)
  (and (= rsp20 rsp16)
  (and (= rbx7 rbx3)
  (and (= rax7 rax3)
  (and (= xmm07 xmm03)
  (and (= overflowflag7 overflowflag3)
  (and (= signflag7 signflag3)
  (and (= carryflag7 carryflag3) (= zeroflag7 zeroflag3))))))))))))
  (and
  (and (= rdi11 rdi9)
  (and (= rbp8 rbp6)
  (and (= rsp21 rsp19)
  (and (= rbx8 rbx6)
  (and (= rax8 rax6)
  (and (= xmm08 xmm06)
  (and (= overflowflag8 overflowflag6)
  (and (= signflag8 signflag6)
  (and (= carryflag8 carryflag6) (= zeroflag8 zeroflag6))))))))))
  (and (= rdi12 rdi10)
  (and (= rbp9 rbp7)
  (and (= rsp22 rsp20)
  (and (= rbx9 rbx7)
  (and (= rax9 rax7)
  (and (= xmm09 xmm07)
  (and (= overflowflag9 overflowflag7)
  (and (= signflag9 signflag7)
  (and (= carryflag9 carryflag7) (= zeroflag9 zeroflag7))))))))))))
  (and
  (and (= rdi11 (let ((subject rdi)) (mk_t__ref3 rdi4)))
  (and (= rbp8 (let ((subject rbp)) (mk_t__ref3 rbp1)))
  (and (= rsp21 (let ((subject rsp)) (mk_t__ref3 rsp13)))
  (and (= rbx8 (let ((subject rbx)) (mk_t__ref3 rbx1)))
  (and (= rax8 (mk_t__ref3 rax1))
  (and (= xmm08 (mk_t__ref3 xmm01))
  (and (= overflowflag8 (mk_bool__ref overflowflag1))
  (and (= signflag8 (mk_bool__ref signflag1))
  (and (= carryflag8 (mk_bool__ref carryflag1))
  (= zeroflag8 (mk_bool__ref zeroflag1)))))))))))
  (and (= rdi12 rdi4)
  (and (= rbp9 rbp1)
  (and (= rsp22 rsp13)
  (and (= rbx9 rbx1)
  (and (= rax9 rax1)
  (and (= xmm09 xmm01)
  (and (= overflowflag9 overflowflag1)
  (and (= signflag9 signflag1)
  (and (= carryflag9 carryflag1) (= zeroflag9 zeroflag1))))))))))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi13) ((_ int2bv 32) 10)) true)
  (and
  (= (writereg32post (let ((subject rbx)) rbx10) ((_ int2bv 32) 0)) true)
  (and
  (and (= result45 rbp8)
  (= (let ((subject rbp)) rbp10) (bvadd (t__content3 rsp21) ((_ int2bv 64) 64))))
  (and
  (and (= result46 rsp21)
  (= (let ((subject rsp)) rsp23) (bvsub (t__content3 rsp21) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp24) (bvadd (let ((subject rsp)) rsp23) ((_ int2bv 64) 8)))
  (and
  (and (= result47 (let ((subject rsi)) (mk_t__ref3 rsi1)))
  (= (let ((subject rsi)) rsi2) (bvadd (let ((subject rsp)) rsp24) ((_ int2bv 64) 64))))
  (and
  (and (= result48 (let ((subject rdi)) (mk_t__ref3 rdi13)))
  (= (let ((subject rdi)) rdi14) (bvadd (let ((subject rsp)) rsp24) ((_ int2bv 64) 44))))
  (and
  (and
  (and
  (= o60 (readmem64 ((_ int2bv 64) 4198776) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o60 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198776)))))
  (= (bvand o60 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o60 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o60 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o60 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o60 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o60 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o60 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198776) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result49 (mk_t__ref3 xmm31)) (= xmm32 o60)))
  (and
  (and
  (and
  (= o61 (readmem64 ((_ int2bv 64) 4198800) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o61 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198800)))))
  (= (bvand o61 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198800) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o61 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198800) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o61 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198800) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o61 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198800) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o61 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198800) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o61 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198800) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o61 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198800) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result50 (mk_t__ref3 xmm21)) (= xmm22 o61)))
  (and
  (and
  (and
  (= o62 (readmem64 ((_ int2bv 64) 4198808) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o62 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198808)))))
  (= (bvand o62 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198808) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o62 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198808) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o62 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198808) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o62 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198808) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o62 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198808) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o62 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198808) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o62 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198808) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result51 (mk_t__ref3 xmm11)) (= xmm12 o62)))
  (and
  (and
  (and
  (= o63 (readmem64 ((_ int2bv 64) 4198768) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o63 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198768)))))
  (= (bvand o63 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o63 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o63 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o63 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o63 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o63 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o63 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result52 xmm08) (= xmm010 o63)))
  (and
  (and (= result53 (let ((subject rsp)) (mk_t__ref3 rsp24)))
  (= (let ((subject rsp)) rsp25) (bvsub (let ((subject rsp)) rsp24) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp26) (bvadd (let ((subject rsp)) rsp25) ((_ int2bv 64) 8)))
  (and (= (writereg32post rax10 ((_ int2bv 32) 0)) true)
  (and
  (= (writereg32post (let ((subject rdi)) rdi15) ((_ int2bv 32) 4198688)) true)
  (and
  (and (= result54 (let ((subject rsp)) (mk_t__ref3 rsp26)))
  (= (let ((subject rsp)) rsp27) (bvsub (let ((subject rsp)) rsp26) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp28) (bvadd (let ((subject rsp)) rsp27) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and
  (and (= o64 (esp (let ((subject rsp)) rsp28)))
  (= o64 (readreg32 (let ((subject rsp)) rsp28))))
  (= o65 (bvadd o64 ((_ int2bv 32) 44)))) (= o66 ((_ zero_extend 32)
  o65)))
  (and (= o67 (readmem32 o66 (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o67 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6)
                                                         o66))))
  (= (bvand o67 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd
                                                                  o66 ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o67 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o66 ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o67 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o66 ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216))))))
  (= (writereg32post (let ((subject rsi)) rsi3) o67) true))
  (and
  (and
  (and
  (and
  (and (= o68 (esi (let ((subject rsi)) rsi3)))
  (= o68 (readreg32 (let ((subject rsi)) rsi3))))
  (and
  (and (= o69 (esi (let ((subject rsi)) rsi3)))
  (= o69 (readreg32 (let ((subject rsi)) rsi3)))) (= o70 (bvand o69 o68))))
  (= o71 (ite (= o70 ((_ int2bv 32) 0)) true false)))
  (and (= result55 zeroflag8) (= zeroflag10 o71)))
  (and
  (and
  (and
  (and
  (and (= o72 (esi (let ((subject rsi)) rsi3)))
  (= o72 (readreg32 (let ((subject rsi)) rsi3))))
  (and
  (and (= o73 (esi (let ((subject rsi)) rsi3)))
  (= o73 (readreg32 (let ((subject rsi)) rsi3)))) (= o74 (bvand o73 o72))))
  (= o75 (ite (bvugt o74 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result56 signflag8) (= signflag10 o75)))
  (and (and (= result57 carryflag8) (= carryflag10 (of_int 0)))
  (and (and (= result58 overflowflag8) (= overflowflag10 (of_int 0)))
  (and
  (ite (and (not (= zeroflag10 true))
       (= (to_int5 signflag10) (to_int5 overflowflag10)))
  (and
  (and
  (and (= temp___404 (let ((subject rbx)) rbx10))
  (and (= temp___403 (let ((subject rsp)) rsp28))
  (and (= temp___402 overflowflag10)
  (and (= temp___401 signflag10)
  (and (= temp___400 rax10)
  (and (= temp___398 carryflag10)
  (and (= temp___399 xmm010)
  (and (= temp___397 (let ((subject rbp)) rbp10))
  (and (= temp___396 (let ((subject rdi)) rdi15))
  (and (= temp___395 zeroflag10)
  (and (= temp___405 (let ((subject rsp)) rsp28))
  (and (= (let ((subject rsp)) rsp29) temp___405)
  (and
  (and (not (= zeroflag11 true))
  (= (= signflag11 true) (= overflowflag11 true)))
  (and
  (and
  (and
  (= o76 (readmem64 (let ((subject rbp)) rbp11)
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o76 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6)
                                                         (let ((subject
                                                         rbp)) rbp11)))))
  (= (bvand o76 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd
                                                                  (let ((subject
                                                                  rbp))
                                                                  rbp11) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o76 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp11) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o76 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp11) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o76 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp11) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o76 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp11) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o76 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp11) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o76 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp11) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result59 (mk_t__ref3 xmm011)) (= xmm012 o76)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi17) ((_ int2bv 32) 4198699)) true)
  (and (= (writereg32post rax12 ((_ int2bv 32) 1)) true)
  (and
  (and
  (and
  (and (= o77 (ebx (let ((subject rbx)) rbx11)))
  (= o77 (readreg32 (let ((subject rbx)) rbx11))))
  (= o78 (bvadd o77 ((_ int2bv 32) 1))))
  (= (writereg32post (let ((subject rbx)) rbx12) o78) true))
  (and
  (and (= result60 (let ((subject rbp)) (mk_t__ref3 rbp11)))
  (= (let ((subject rbp)) rbp12) (bvadd (let ((subject rbp)) rbp11) ((_ int2bv 64) 8))))
  (and
  (and (= result61 (let ((subject rsp)) (mk_t__ref3 rsp29)))
  (= (let ((subject rsp)) rsp30) (bvsub (let ((subject rsp)) rsp29) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp31) (bvadd (let ((subject rsp)) rsp30) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and (= o79 (ebx (let ((subject rbx)) rbx12)))
  (= o79 (readreg32 (let ((subject rbx)) rbx12))))
  (and
  (and
  (= o80 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o80 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o80 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o80 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o80 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o81 (bvsub o80 o79))))
  (= o82 (ite (= o81 ((_ int2bv 32) 0)) true false)))
  (and (= result62 (mk_bool__ref zeroflag11)) (= zeroflag12 o82)))
  (and
  (and
  (and
  (and
  (and (= o83 (ebx (let ((subject rbx)) rbx12)))
  (= o83 (readreg32 (let ((subject rbx)) rbx12))))
  (and
  (and
  (= o84 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o84 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o84 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o84 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o84 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o85 (bvsub o84 o83))))
  (= o86 (ite (bvugt o85 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result63 (mk_bool__ref signflag11)) (= signflag12 o86)))
  (and
  (and
  (and
  (and (= o87 (ebx (let ((subject rbx)) rbx12)))
  (= o87 (readreg32 (let ((subject rbx)) rbx12))))
  (and
  (and
  (= o88 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o88 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o88 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o88 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o88 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o89 (ite (bvult o88 o87) true false))))
  (and (= result64 (mk_bool__ref carryflag11)) (= carryflag12 o89)))
  (and
  (and
  (and
  (and
  (ite (not (= signflag12 true))
  (and
  (and
  (= o93 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o93 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o93 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o93 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o93 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= result65 (ite (bvugt o93 ((_ int2bv 32) 2147483647)) true false)))
  (= result65 false))
  (ite (= result65 true)
  (and
  (and (= o92 (ebx (let ((subject rbx)) rbx12)))
  (= o92 (readreg32 (let ((subject rbx)) rbx12))))
  (= o94 (ite (bvule o92 ((_ int2bv 32) 2147483647)) true false)))
  (= o94 false)))
  (and
  (and
  (ite (= signflag12 true)
  (and
  (and (= o91 (ebx (let ((subject rbx)) rbx12)))
  (= o91 (readreg32 (let ((subject rbx)) rbx12))))
  (= result66 (ite (bvugt o91 ((_ int2bv 32) 2147483647)) true false)))
  (= result66 false))
  (ite (= result66 true)
  (and
  (and
  (= o90 (readmem32
         (bvsub (bvadd (let ((subject rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
         (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o90 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) (bvsub (bvadd
                                                         (let ((subject
                                                         rsp)) rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o90 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd (bvsub (bvadd
                                                                  (let ((subject
                                                                  rsp))
                                                                  rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o90 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o90 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp31) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o95 (ite (bvule o90 ((_ int2bv 32) 2147483647)) true false)))
  (= o95 false))) (= o96 (ite (= o95 false) o94 true))))
  (and (= result67 (mk_bool__ref overflowflag11)) (= overflowflag12 o96)))
  (not
  (and (not (= zeroflag12 true))
  (= (to_int5 signflag12) (to_int5 overflowflag12))))))))))))))))))))))))))))
  (and
  (and (= rdi22 (let ((subject rdi)) (mk_t__ref3 rdi17)))
  (and (= rbp17 (let ((subject rbp)) (mk_t__ref3 rbp12)))
  (and (= rsp36 (let ((subject rsp)) (mk_t__ref3 rsp31)))
  (and (= rbx17 (let ((subject rbx)) (mk_t__ref3 rbx12)))
  (and (= rax17 (mk_t__ref3 rax12))
  (and (= xmm017 (mk_t__ref3 xmm012))
  (and (= overflowflag17 (mk_bool__ref overflowflag12))
  (and (= signflag17 (mk_bool__ref signflag12))
  (and (= carryflag17 (mk_bool__ref carryflag12))
  (= zeroflag17 (mk_bool__ref zeroflag12)))))))))))
  (and (= rdi23 rdi17)
  (and (= rbp18 rbp12)
  (and (= rsp37 rsp31)
  (and (= rbx18 rbx12)
  (and (= rax18 rax12)
  (and (= xmm018 xmm012)
  (and (= overflowflag18 overflowflag12)
  (and (= signflag18 signflag12)
  (and (= carryflag18 carryflag12) (= zeroflag18 zeroflag12))))))))))))
  (and
  (and (= rdi24 rdi22)
  (and (= rbp19 rbp17)
  (and (= rsp38 rsp36)
  (and (= rbx19 rbx17)
  (and (= rax19 rax17)
  (and (= xmm019 xmm017)
  (and (= overflowflag19 overflowflag17)
  (and (= signflag19 signflag17)
  (and (= carryflag19 carryflag17) (= zeroflag19 zeroflag17))))))))))
  (and (= rdi25 rdi23)
  (and (= rbp20 rbp18)
  (and (= rsp39 rsp37)
  (and (= rbx20 rbx18)
  (and (= rax20 rax18)
  (and (= xmm020 xmm018)
  (and (= overflowflag20 overflowflag18)
  (and (= signflag20 signflag18)
  (and (= carryflag20 carryflag18) (= zeroflag20 zeroflag18))))))))))))
  (and
  (and (= rdi24 (let ((subject rdi)) (mk_t__ref3 rdi15)))
  (and (= rbp19 (let ((subject rbp)) (mk_t__ref3 rbp10)))
  (and (= rsp38 (let ((subject rsp)) (mk_t__ref3 rsp28)))
  (and (= rbx19 (let ((subject rbx)) (mk_t__ref3 rbx10)))
  (and (= rax19 (mk_t__ref3 rax10))
  (and (= xmm019 (mk_t__ref3 xmm010))
  (and (= overflowflag19 (mk_bool__ref overflowflag10))
  (and (= signflag19 (mk_bool__ref signflag10))
  (and (= carryflag19 (mk_bool__ref carryflag10))
  (= zeroflag19 (mk_bool__ref zeroflag10)))))))))))
  (and (= rdi25 rdi15)
  (and (= rbp20 rbp10)
  (and (= rsp39 rsp28)
  (and (= rbx20 rbx10)
  (and (= rax20 rax10)
  (and (= xmm020 xmm010)
  (and (= overflowflag20 overflowflag10)
  (and (= signflag20 signflag10)
  (and (= carryflag20 carryflag10) (= zeroflag20 zeroflag10))))))))))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi26) ((_ int2bv 32) 10)) true)
  (and
  (= (writereg32post (let ((subject rbx)) rbx21) ((_ int2bv 32) 0)) true)
  (and
  (and (= result68 rbp19)
  (= (let ((subject rbp)) rbp21) (bvadd (t__content3 rsp38) ((_ int2bv 64) 64))))
  (and
  (and (= result69 rsp38)
  (= (let ((subject rsp)) rsp40) (bvsub (t__content3 rsp38) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp41) (bvadd (let ((subject rsp)) rsp40) ((_ int2bv 64) 8)))
  (and
  (and (= result70 (let ((subject rsi)) (mk_t__ref3 rsi3)))
  (= (let ((subject rsi)) rsi4) (bvadd (let ((subject rsp)) rsp41) ((_ int2bv 64) 64))))
  (and
  (and (= result71 (let ((subject rdi)) (mk_t__ref3 rdi26)))
  (= (let ((subject rdi)) rdi27) (bvadd (let ((subject rsp)) rsp41) ((_ int2bv 64) 44))))
  (and
  (and
  (and
  (= o97 (readmem64 ((_ int2bv 64) 4198816) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o97 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198816)))))
  (= (bvand o97 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198816) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o97 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198816) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o97 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198816) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o97 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198816) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o97 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198816) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o97 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198816) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o97 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198816) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result72 (mk_t__ref3 xmm32)) (= xmm33 o97)))
  (and
  (and
  (and
  (= o98 (readmem64 ((_ int2bv 64) 4198824) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o98 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198824)))))
  (= (bvand o98 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198824) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o98 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198824) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o98 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198824) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o98 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198824) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o98 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198824) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o98 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198824) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o98 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198824) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result73 (mk_t__ref3 xmm22)) (= xmm23 o98)))
  (and
  (and
  (and
  (= o99 (readmem64 ((_ int2bv 64) 4198832) (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o99 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory6) ((_ int2bv 64) 4198832)))))
  (= (bvand o99 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory6) (bvadd ((_ int2bv 64) 4198832) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o99 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198832) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o99 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198832) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o99 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198832) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o99 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198832) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o99 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198832) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o99 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198832) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result74 (mk_t__ref3 xmm12)) (= xmm13 o99)))
  (and
  (and
  (and
  (= o100 (readmem64 ((_ int2bv 64) 4198768)
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o100 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) ((_ int2bv 64) 4198768)))))
  (= (bvand o100 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o100 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o100 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o100 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o100 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o100 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o100 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result75 xmm019) (= xmm021 o100)))
  (and
  (and (= result76 (let ((subject rsp)) (mk_t__ref3 rsp41)))
  (= (let ((subject rsp)) rsp42) (bvsub (let ((subject rsp)) rsp41) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp43) (bvadd (let ((subject rsp)) rsp42) ((_ int2bv 64) 8)))
  (and (= (writereg32post rax21 ((_ int2bv 32) 0)) true)
  (and
  (= (writereg32post (let ((subject rdi)) rdi28) ((_ int2bv 32) 4198688)) true)
  (and
  (and (= result77 (let ((subject rsp)) (mk_t__ref3 rsp43)))
  (= (let ((subject rsp)) rsp44) (bvsub (let ((subject rsp)) rsp43) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp45) (bvadd (let ((subject rsp)) rsp44) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and
  (and (= o101 (esp (let ((subject rsp)) rsp45)))
  (= o101 (readreg32 (let ((subject rsp)) rsp45))))
  (= o102 (bvadd o101 ((_ int2bv 32) 44))))
  (= o103 ((_ zero_extend 32) o102)))
  (and (= o104 (readmem32 o103 (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o104 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6)
                                                          o103))))
  (= (bvand o104 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd
                                                                   o103 ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o104 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o103 ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o104 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o103 ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216))))))
  (= (writereg32post rcx1 o104) true))
  (and
  (and
  (and
  (and (and (= o105 (ecx rcx1)) (= o105 (readreg32 rcx1)))
  (and (and (= o106 (ecx rcx1)) (= o106 (readreg32 rcx1)))
  (= o107 (bvand o106 o105))))
  (= o108 (ite (= o107 ((_ int2bv 32) 0)) true false)))
  (and (= result78 zeroflag19) (= zeroflag21 o108)))
  (and
  (and
  (and
  (and (and (= o109 (ecx rcx1)) (= o109 (readreg32 rcx1)))
  (and (and (= o110 (ecx rcx1)) (= o110 (readreg32 rcx1)))
  (= o111 (bvand o110 o109))))
  (= o112 (ite (bvugt o111 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result79 signflag19) (= signflag21 o112)))
  (and (and (= result80 carryflag19) (= carryflag21 (of_int 0)))
  (and (and (= result81 overflowflag19) (= overflowflag21 (of_int 0)))
  (and
  (ite (and (not (= zeroflag21 true))
       (= (to_int5 signflag21) (to_int5 overflowflag21)))
  (and
  (and
  (and (= temp___415 (let ((subject rbx)) rbx21))
  (and (= temp___414 (let ((subject rsp)) rsp45))
  (and (= temp___413 overflowflag21)
  (and (= temp___412 signflag21)
  (and (= temp___411 rax21)
  (and (= temp___409 carryflag21)
  (and (= temp___410 xmm021)
  (and (= temp___408 (let ((subject rbp)) rbp21))
  (and (= temp___407 (let ((subject rdi)) rdi28))
  (and (= temp___416 (let ((subject rsp)) rsp45))
  (and (= temp___406 zeroflag21)
  (and (= (let ((subject rsp)) rsp46) temp___416)
  (and
  (and (not (= zeroflag22 true))
  (= (= signflag22 true) (= overflowflag22 true)))
  (and
  (and
  (and
  (= o113 (readmem64 (let ((subject rbp)) rbp22)
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o113 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6)
                                                          (let ((subject
                                                          rbp)) rbp22)))))
  (= (bvand o113 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd
                                                                   (let ((subject
                                                                   rbp))
                                                                   rbp22) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o113 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp22) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o113 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp22) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o113 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp22) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o113 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp22) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o113 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp22) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o113 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp22) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result82 (mk_t__ref3 xmm022)) (= xmm023 o113)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi30) ((_ int2bv 32) 4198699)) true)
  (and (= (writereg32post rax23 ((_ int2bv 32) 1)) true)
  (and
  (and
  (and
  (and (= o114 (ebx (let ((subject rbx)) rbx22)))
  (= o114 (readreg32 (let ((subject rbx)) rbx22))))
  (= o115 (bvadd o114 ((_ int2bv 32) 1))))
  (= (writereg32post (let ((subject rbx)) rbx23) o115) true))
  (and
  (and (= result83 (let ((subject rbp)) (mk_t__ref3 rbp22)))
  (= (let ((subject rbp)) rbp23) (bvadd (let ((subject rbp)) rbp22) ((_ int2bv 64) 8))))
  (and
  (and (= result84 (let ((subject rsp)) (mk_t__ref3 rsp46)))
  (= (let ((subject rsp)) rsp47) (bvsub (let ((subject rsp)) rsp46) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp48) (bvadd (let ((subject rsp)) rsp47) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and (= o116 (ebx (let ((subject rbx)) rbx23)))
  (= o116 (readreg32 (let ((subject rbx)) rbx23))))
  (and
  (and
  (= o117 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o117 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o117 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o117 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o117 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o118 (bvsub o117 o116))))
  (= o119 (ite (= o118 ((_ int2bv 32) 0)) true false)))
  (and (= result85 (mk_bool__ref zeroflag22)) (= zeroflag23 o119)))
  (and
  (and
  (and
  (and
  (and (= o120 (ebx (let ((subject rbx)) rbx23)))
  (= o120 (readreg32 (let ((subject rbx)) rbx23))))
  (and
  (and
  (= o121 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o121 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o121 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o121 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o121 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o122 (bvsub o121 o120))))
  (= o123 (ite (bvugt o122 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result86 (mk_bool__ref signflag22)) (= signflag23 o123)))
  (and
  (and
  (and
  (and (= o124 (ebx (let ((subject rbx)) rbx23)))
  (= o124 (readreg32 (let ((subject rbx)) rbx23))))
  (and
  (and
  (= o125 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o125 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o125 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o125 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o125 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o126 (ite (bvult o125 o124) true false))))
  (and (= result87 (mk_bool__ref carryflag22)) (= carryflag23 o126)))
  (and
  (and
  (and
  (and
  (ite (not (= signflag23 true))
  (and
  (and
  (= o130 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o130 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o130 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o130 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o130 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= result88 (ite (bvugt o130 ((_ int2bv 32) 2147483647)) true false)))
  (= result88 false))
  (ite (= result88 true)
  (and
  (and (= o129 (ebx (let ((subject rbx)) rbx23)))
  (= o129 (readreg32 (let ((subject rbx)) rbx23))))
  (= o131 (ite (bvule o129 ((_ int2bv 32) 2147483647)) true false)))
  (= o131 false)))
  (and
  (and
  (ite (= signflag23 true)
  (and
  (and (= o128 (ebx (let ((subject rbx)) rbx23)))
  (= o128 (readreg32 (let ((subject rbx)) rbx23))))
  (= result89 (ite (bvugt o128 ((_ int2bv 32) 2147483647)) true false)))
  (= result89 false))
  (ite (= result89 true)
  (and
  (and
  (= o127 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o127 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o127 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o127 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o127 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp48) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o132 (ite (bvule o127 ((_ int2bv 32) 2147483647)) true false)))
  (= o132 false))) (= o133 (ite (= o132 false) o131 true))))
  (and (= result90 (mk_bool__ref overflowflag22)) (= overflowflag23 o133)))
  (not
  (and (not (= zeroflag23 true))
  (= (to_int5 signflag23) (to_int5 overflowflag23))))))))))))))))))))))))))))
  (and
  (and (= rdi35 (let ((subject rdi)) (mk_t__ref3 rdi30)))
  (and (= rbp28 (let ((subject rbp)) (mk_t__ref3 rbp23)))
  (and (= rsp53 (let ((subject rsp)) (mk_t__ref3 rsp48)))
  (and (= rbx28 (let ((subject rbx)) (mk_t__ref3 rbx23)))
  (and (= rax28 (mk_t__ref3 rax23))
  (and (= xmm028 (mk_t__ref3 xmm023))
  (and (= overflowflag28 (mk_bool__ref overflowflag23))
  (and (= signflag28 (mk_bool__ref signflag23))
  (and (= carryflag28 (mk_bool__ref carryflag23))
  (= zeroflag28 (mk_bool__ref zeroflag23)))))))))))
  (and (= rdi36 rdi30)
  (and (= rbp29 rbp23)
  (and (= rsp54 rsp48)
  (and (= rbx29 rbx23)
  (and (= rax29 rax23)
  (and (= xmm029 xmm023)
  (and (= overflowflag29 overflowflag23)
  (and (= signflag29 signflag23)
  (and (= carryflag29 carryflag23) (= zeroflag29 zeroflag23))))))))))))
  (and
  (and (= rdi37 rdi35)
  (and (= rbp30 rbp28)
  (and (= rsp55 rsp53)
  (and (= rbx30 rbx28)
  (and (= rax30 rax28)
  (and (= xmm030 xmm028)
  (and (= overflowflag30 overflowflag28)
  (and (= signflag30 signflag28)
  (and (= carryflag30 carryflag28) (= zeroflag30 zeroflag28))))))))))
  (and (= rdi38 rdi36)
  (and (= rbp31 rbp29)
  (and (= rsp56 rsp54)
  (and (= rbx31 rbx29)
  (and (= rax31 rax29)
  (and (= xmm031 xmm029)
  (and (= overflowflag31 overflowflag29)
  (and (= signflag31 signflag29)
  (and (= carryflag31 carryflag29) (= zeroflag31 zeroflag29))))))))))))
  (and
  (and (= rdi37 (let ((subject rdi)) (mk_t__ref3 rdi28)))
  (and (= rbp30 (let ((subject rbp)) (mk_t__ref3 rbp21)))
  (and (= rsp55 (let ((subject rsp)) (mk_t__ref3 rsp45)))
  (and (= rbx30 (let ((subject rbx)) (mk_t__ref3 rbx21)))
  (and (= rax30 (mk_t__ref3 rax21))
  (and (= xmm030 (mk_t__ref3 xmm021))
  (and (= overflowflag30 (mk_bool__ref overflowflag21))
  (and (= signflag30 (mk_bool__ref signflag21))
  (and (= carryflag30 (mk_bool__ref carryflag21))
  (= zeroflag30 (mk_bool__ref zeroflag21)))))))))))
  (and (= rdi38 rdi28)
  (and (= rbp31 rbp21)
  (and (= rsp56 rsp45)
  (and (= rbx31 rbx21)
  (and (= rax31 rax21)
  (and (= xmm031 xmm021)
  (and (= overflowflag31 overflowflag21)
  (and (= signflag31 signflag21)
  (and (= carryflag31 carryflag21) (= zeroflag31 zeroflag21))))))))))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi39) ((_ int2bv 32) 10)) true)
  (and
  (= (writereg32post (let ((subject rbx)) rbx32) ((_ int2bv 32) 0)) true)
  (and
  (and (= result91 rbp30)
  (= (let ((subject rbp)) rbp32) (bvadd (t__content3 rsp55) ((_ int2bv 64) 64))))
  (and
  (and (= result92 rsp55)
  (= (let ((subject rsp)) rsp57) (bvsub (t__content3 rsp55) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp58) (bvadd (let ((subject rsp)) rsp57) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (= o134 (readmem64 ((_ int2bv 64) 4198768)
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o134 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) ((_ int2bv 64) 4198768)))))
  (= (bvand o134 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o134 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o134 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o134 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o134 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o134 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o134 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result93 (mk_t__ref3 xmm23)) (= xmm24 o134)))
  (and
  (and (= result94 (let ((subject rsi)) (mk_t__ref3 rsi4)))
  (= (let ((subject rsi)) rsi5) (bvadd (let ((subject rsp)) rsp58) ((_ int2bv 64) 64))))
  (and
  (and (= result95 (let ((subject rdi)) (mk_t__ref3 rdi39)))
  (= (let ((subject rdi)) rdi40) (bvadd (let ((subject rsp)) rsp58) ((_ int2bv 64) 44))))
  (and
  (and
  (and
  (= o135 (readmem64 ((_ int2bv 64) 4198840)
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o135 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) ((_ int2bv 64) 4198840)))))
  (= (bvand o135 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd ((_ int2bv 64) 4198840) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o135 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198840) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o135 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198840) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o135 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198840) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o135 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198840) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o135 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198840) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o135 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198840) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result96 (mk_t__ref3 xmm33)) (= xmm34 o135)))
  (and
  (and
  (and
  (= o136 (readmem64 ((_ int2bv 64) 4198848)
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o136 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) ((_ int2bv 64) 4198848)))))
  (= (bvand o136 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd ((_ int2bv 64) 4198848) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o136 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198848) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o136 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198848) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o136 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198848) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o136 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198848) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o136 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198848) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o136 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198848) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result97 (mk_t__ref3 xmm13)) (= xmm14 o136)))
  (and (and (= result98 xmm030) (= xmm032 xmm24))
  (and
  (and (= result99 (let ((subject rsp)) (mk_t__ref3 rsp58)))
  (= (let ((subject rsp)) rsp59) (bvsub (let ((subject rsp)) rsp58) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp60) (bvadd (let ((subject rsp)) rsp59) ((_ int2bv 64) 8)))
  (and (= (writereg32post rax32 ((_ int2bv 32) 0)) true)
  (and
  (= (writereg32post (let ((subject rdi)) rdi41) ((_ int2bv 32) 4198688)) true)
  (and
  (and (= result100 (let ((subject rsp)) (mk_t__ref3 rsp60)))
  (= (let ((subject rsp)) rsp61) (bvsub (let ((subject rsp)) rsp60) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp62) (bvadd (let ((subject rsp)) rsp61) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and
  (and (= o137 (esp (let ((subject rsp)) rsp62)))
  (= o137 (readreg32 (let ((subject rsp)) rsp62))))
  (= o138 (bvadd o137 ((_ int2bv 32) 44))))
  (= o139 ((_ zero_extend 32) o138)))
  (and (= o140 (readmem32 o139 (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o140 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6)
                                                          o139))))
  (= (bvand o140 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd
                                                                   o139 ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o140 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o139 ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o140 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd o139 ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216))))))
  (= (writereg32post rdx1 o140) true))
  (and
  (and
  (and
  (and (and (= o141 (edx rdx1)) (= o141 (readreg32 rdx1)))
  (and (and (= o142 (edx rdx1)) (= o142 (readreg32 rdx1)))
  (= o143 (bvand o142 o141))))
  (= o144 (ite (= o143 ((_ int2bv 32) 0)) true false)))
  (and (= result101 zeroflag30) (= zeroflag32 o144)))
  (and
  (and
  (and
  (and (and (= o145 (edx rdx1)) (= o145 (readreg32 rdx1)))
  (and (and (= o146 (edx rdx1)) (= o146 (readreg32 rdx1)))
  (= o147 (bvand o146 o145))))
  (= o148 (ite (bvugt o147 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result102 signflag30) (= signflag32 o148)))
  (and (and (= result103 carryflag30) (= carryflag32 (of_int 0)))
  (and (and (= result104 overflowflag30) (= overflowflag32 (of_int 0)))
  (and
  (ite (and (not (= zeroflag32 true))
       (= (to_int5 signflag32) (to_int5 overflowflag32)))
  (and
  (and
  (and (= temp___426 (let ((subject rbx)) rbx32))
  (and (= temp___425 (let ((subject rsp)) rsp62))
  (and (= temp___424 overflowflag32)
  (and (= temp___423 signflag32)
  (and (= temp___422 rax32)
  (and (= temp___427 (let ((subject rsp)) rsp62))
  (and (= temp___420 carryflag32)
  (and (= temp___421 xmm032)
  (and (= temp___419 (let ((subject rbp)) rbp32))
  (and (= temp___418 (let ((subject rdi)) rdi41))
  (and (= temp___417 zeroflag32)
  (and (= (let ((subject rsp)) rsp63) temp___427)
  (and
  (and (not (= zeroflag33 true))
  (= (= signflag33 true) (= overflowflag33 true)))
  (and
  (and
  (and
  (= o149 (readmem64 (let ((subject rbp)) rbp33)
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o149 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6)
                                                          (let ((subject
                                                          rbp)) rbp33)))))
  (= (bvand o149 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd
                                                                   (let ((subject
                                                                   rbp))
                                                                   rbp33) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o149 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp33) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o149 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp33) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o149 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp33) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o149 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp33) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o149 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp33) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o149 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (let ((subject rbp)) rbp33) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result105 (mk_t__ref3 xmm033)) (= xmm034 o149)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi43) ((_ int2bv 32) 4198699)) true)
  (and (= (writereg32post rax34 ((_ int2bv 32) 1)) true)
  (and
  (and
  (and
  (and (= o150 (ebx (let ((subject rbx)) rbx33)))
  (= o150 (readreg32 (let ((subject rbx)) rbx33))))
  (= o151 (bvadd o150 ((_ int2bv 32) 1))))
  (= (writereg32post (let ((subject rbx)) rbx34) o151) true))
  (and
  (and (= result106 (let ((subject rbp)) (mk_t__ref3 rbp33)))
  (= (let ((subject rbp)) rbp34) (bvadd (let ((subject rbp)) rbp33) ((_ int2bv 64) 8))))
  (and
  (and (= result107 (let ((subject rsp)) (mk_t__ref3 rsp63)))
  (= (let ((subject rsp)) rsp64) (bvsub (let ((subject rsp)) rsp63) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp65) (bvadd (let ((subject rsp)) rsp64) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and (= o152 (ebx (let ((subject rbx)) rbx34)))
  (= o152 (readreg32 (let ((subject rbx)) rbx34))))
  (and
  (and
  (= o153 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o153 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o153 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o153 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o153 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o154 (bvsub o153 o152))))
  (= o155 (ite (= o154 ((_ int2bv 32) 0)) true false)))
  (and (= result108 (mk_bool__ref zeroflag33)) (= zeroflag34 o155)))
  (and
  (and
  (and
  (and
  (and (= o156 (ebx (let ((subject rbx)) rbx34)))
  (= o156 (readreg32 (let ((subject rbx)) rbx34))))
  (and
  (and
  (= o157 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o157 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o157 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o157 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o157 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o158 (bvsub o157 o156))))
  (= o159 (ite (bvugt o158 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result109 (mk_bool__ref signflag33)) (= signflag34 o159)))
  (and
  (and
  (and
  (and (= o160 (ebx (let ((subject rbx)) rbx34)))
  (= o160 (readreg32 (let ((subject rbx)) rbx34))))
  (and
  (and
  (= o161 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o161 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o161 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o161 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o161 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o162 (ite (bvult o161 o160) true false))))
  (and (= result110 (mk_bool__ref carryflag33)) (= carryflag34 o162)))
  (and
  (and
  (and
  (and
  (ite (not (= signflag34 true))
  (and
  (and
  (= o166 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o166 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o166 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o166 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o166 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= result111 (ite (bvugt o166 ((_ int2bv 32) 2147483647)) true false)))
  (= result111 false))
  (ite (= result111 true)
  (and
  (and (= o165 (ebx (let ((subject rbx)) rbx34)))
  (= o165 (readreg32 (let ((subject rbx)) rbx34))))
  (= o167 (ite (bvule o165 ((_ int2bv 32) 2147483647)) true false)))
  (= o167 false)))
  (and
  (and
  (ite (= signflag34 true)
  (and
  (and (= o164 (ebx (let ((subject rbx)) rbx34)))
  (= o164 (readreg32 (let ((subject rbx)) rbx34))))
  (= result112 (ite (bvugt o164 ((_ int2bv 32) 2147483647)) true false)))
  (= result112 false))
  (ite (= result112 true)
  (and
  (and
  (= o163 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (= (bvand o163 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o163 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o163 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o163 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp65) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o168 (ite (bvule o163 ((_ int2bv 32) 2147483647)) true false)))
  (= o168 false))) (= o169 (ite (= o168 false) o167 true))))
  (and (= result113 (mk_bool__ref overflowflag33)) (= overflowflag34 o169)))
  (not
  (and (not (= zeroflag34 true))
  (= (to_int5 signflag34) (to_int5 overflowflag34))))))))))))))))))))))))))))
  (and
  (and (= rdi48 (let ((subject rdi)) (mk_t__ref3 rdi43)))
  (and (= rbp39 (let ((subject rbp)) (mk_t__ref3 rbp34)))
  (and (= rsp70 (let ((subject rsp)) (mk_t__ref3 rsp65)))
  (and (= rbx39 (let ((subject rbx)) (mk_t__ref3 rbx34)))
  (and (= rax39 (mk_t__ref3 rax34))
  (and (= xmm039 (mk_t__ref3 xmm034))
  (and (= overflowflag39 (mk_bool__ref overflowflag34))
  (and (= signflag39 (mk_bool__ref signflag34))
  (and (= carryflag39 (mk_bool__ref carryflag34))
  (= zeroflag39 (mk_bool__ref zeroflag34)))))))))))
  (and (= rdi49 rdi43)
  (and (= rbp40 rbp34)
  (and (= rsp71 rsp65)
  (and (= rbx40 rbx34)
  (and (= rax40 rax34)
  (and (= xmm040 xmm034)
  (and (= overflowflag40 overflowflag34)
  (and (= signflag40 signflag34)
  (and (= carryflag40 carryflag34) (= zeroflag40 zeroflag34))))))))))))
  (and
  (and (= rdi50 rdi48)
  (and (= rbp41 rbp39)
  (and (= rsp72 rsp70)
  (and (= rbx41 rbx39)
  (and (= rax41 rax39)
  (and (= xmm041 xmm039)
  (and (= overflowflag41 overflowflag39)
  (and (= signflag41 signflag39)
  (and (= carryflag41 carryflag39) (= zeroflag41 zeroflag39))))))))))
  (and (= rdi51 rdi49)
  (and (= rbp42 rbp40)
  (and (= rsp73 rsp71)
  (and (= rbx42 rbx40)
  (and (= rax42 rax40)
  (and (= xmm042 xmm040)
  (and (= overflowflag42 overflowflag40)
  (and (= signflag42 signflag40)
  (and (= carryflag42 carryflag40) (= zeroflag42 zeroflag40))))))))))))
  (and
  (and (= rdi50 (let ((subject rdi)) (mk_t__ref3 rdi41)))
  (and (= rbp41 (let ((subject rbp)) (mk_t__ref3 rbp32)))
  (and (= rsp72 (let ((subject rsp)) (mk_t__ref3 rsp62)))
  (and (= rbx41 (let ((subject rbx)) (mk_t__ref3 rbx32)))
  (and (= rax41 (mk_t__ref3 rax32))
  (and (= xmm041 (mk_t__ref3 xmm032))
  (and (= overflowflag41 (mk_bool__ref overflowflag32))
  (and (= signflag41 (mk_bool__ref signflag32))
  (and (= carryflag41 (mk_bool__ref carryflag32))
  (= zeroflag41 (mk_bool__ref zeroflag32)))))))))))
  (and (= rdi51 rdi41)
  (and (= rbp42 rbp32)
  (and (= rsp73 rsp62)
  (and (= rbx42 rbx32)
  (and (= rax42 rax32)
  (and (= xmm042 xmm032)
  (and (= overflowflag42 overflowflag32)
  (and (= signflag42 signflag32)
  (and (= carryflag42 carryflag32) (= zeroflag42 zeroflag32))))))))))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi52) ((_ int2bv 32) 10)) true)
  (and
  (and (= result114 r15) (= (let ((subject r15)) r151) ((_ int2bv 64) 9)))
  (and
  (and (= result115 rsp72)
  (= (let ((subject rsp)) rsp74) (bvsub (t__content3 rsp72) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp75) (bvadd (let ((subject rsp)) rsp74) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (= o170 (readmem64 ((_ int2bv 64) 4198768)
          (let ((subject memory)) memory6)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o170 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) ((_ int2bv 64) 4198768)))))
  (= (bvand o170 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o170 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o170 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o170 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o170 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o170 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o170 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result116 xmm620) (= xmm61 o170)))
  (and
  (and
  (and
  (and
  (and (= o171 (esp (let ((subject rsp)) rsp75)))
  (= o171 (readreg32 (let ((subject rsp)) rsp75))))
  (= o172 (bvadd o171 ((_ int2bv 32) 24))))
  (= o173 ((_ zero_extend 32) o172)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm61 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory7)
                                                           o173))))
  (= (bvand xmm61 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory7) (bvadd
                                                                    o173 ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm61 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd o173 ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm61 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd o173 ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm61 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd o173 ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm61 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd o173 ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm61 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd o173 ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm61 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd o173 ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and (and (not (= i o173)) (not (= i (bvadd o173 ((_ int2bv 64) 1)))))
  (not (= i (bvadd o173 ((_ int2bv 64) 2)))))
  (not (= i (bvadd o173 ((_ int2bv 64) 3)))))
  (not (= i (bvadd o173 ((_ int2bv 64) 4)))))
  (not (= i (bvadd o173 ((_ int2bv 64) 5)))))
  (not (= i (bvadd o173 ((_ int2bv 64) 6)))))
  (not (= i (bvadd o173 ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory7) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) i))))))))
  (and
  (and
  (and
  (and (= temp___526 (t__content3 rbx41))
  (and (= temp___525 xmm34)
  (and (= temp___527 (let ((subject rsp)) rsp75))
  (and (= temp___524 (let ((subject rsp)) rsp75))
  (and (= temp___522 (let ((subject rsi)) rsi5))
  (and (= temp___523 (let ((subject memory)) memory7))
  (and (= temp___520 (bool__content overflowflag41))
  (and (= temp___521 xmm24)
  (and (= temp___518 (t__content3 r13))
  (and (= temp___519 xmm7)
  (and (= temp___516 (bool__content signflag41))
  (and (= temp___517 xmm14)
  (and (= temp___515 xmm61)
  (and (= temp___514 (t__content3 rax41))
  (and (= temp___513 (let ((subject r15)) r151))
  (and (= temp___511 (bool__content carryflag41))
  (and (= temp___512 (t__content3 xmm041))
  (and (= temp___510 (t__content3 rbp41))
  (and (= temp___507 xmm5)
  (and (= temp___508 (let ((subject rdi)) rdi52))
  (and (= temp___509 (t__content3 r12))
  (and (= temp___506 (bool__content zeroflag41))
  (and (= temp___505 xmm4)
  (and (= temp___528 (let ((subject memory)) memory7))
  (and (= temp___504 (t__content3 r14))
  (and
  (and (= (let ((subject rsp)) rsp76) temp___527)
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp76)))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 7)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 8)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 9)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 10)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 11)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 12)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 13)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 14)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 15)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 16)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 17)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 18)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 19)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 20)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 21)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 22)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 23)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 24)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 25)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 26)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 27)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 28)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 29)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 30)))))
  (not (= i (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 31)))))
  (= (to_rep (select (let ((subject memory)) memory8) i)) (to_rep
                                                          (select temp___528 i)))))))
  (and
  (and
  (and
  (= o174 (readmem64 ((_ int2bv 64) 4198760)
          (let ((subject memory)) memory8)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o174 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory8) ((_ int2bv 64) 4198760)))))
  (= (bvand o174 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory8) (bvadd ((_ int2bv 64) 4198760) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o174 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd ((_ int2bv 64) 4198760) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o174 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd ((_ int2bv 64) 4198760) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o174 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd ((_ int2bv 64) 4198760) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o174 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd ((_ int2bv 64) 4198760) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o174 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd ((_ int2bv 64) 4198760) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o174 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd ((_ int2bv 64) 4198760) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result117 (mk_t__ref3 xmm71)) (= xmm72 o174)))
  (and
  (and (= result118 (let ((subject r14)) (mk_t__ref3 r141)))
  (= (let ((subject r14)) r142) ((_ int2bv 64) 10)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm72 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory9) (bvsub (bvadd
                                                           (let ((subject
                                                           rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))))))
  (= (bvand xmm72 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory9) (bvadd (bvsub (bvadd
                                                                    (let ((subject
                                                                    rsp))
                                                                    rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm72 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm72 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm72 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm72 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm72 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm72 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub (bvadd (let ((subject
                                                                rsp))
                                                                rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (not
  (= i (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp76) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory9) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory8) i)))))))
  (and
  (and
  (and
  (and (= temp___501 (let ((subject rbx)) rbx43))
  (and (= temp___503 (let ((subject memory)) memory9))
  (and (= temp___502 (let ((subject rsp)) rsp76))
  (and (= temp___500 xmm35)
  (and (= temp___499 (let ((subject rsp)) rsp76))
  (and (= temp___497 (let ((subject rsi)) rsi6))
  (and (= temp___498 (let ((subject memory)) memory9))
  (and (= temp___495 overflowflag43)
  (and (= temp___496 xmm25)
  (and (= temp___493 (let ((subject r13)) r131))
  (and (= temp___494 xmm72)
  (and (= temp___491 signflag43)
  (and (= temp___492 xmm15)
  (and (= temp___490 xmm62)
  (and (= temp___489 rax43)
  (and (= temp___487 carryflag43)
  (and (= temp___488 xmm043)
  (and (= temp___486 (let ((subject rbp)) rbp43))
  (and (= temp___483 xmm51)
  (and (= temp___484 (let ((subject rdi)) rdi53))
  (and (= temp___485 (let ((subject r12)) r121))
  (and (= temp___482 zeroflag43)
  (and (= temp___481 xmm41)
  (and (= temp___480 (let ((subject r14)) r142))
  (and
  (and (= (let ((subject rsp)) rsp77) temp___502)
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp77)))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 7)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 8)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 9)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 10)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 11)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 12)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 13)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 14)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 15)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 16)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 17)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 18)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 19)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 20)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 21)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 22)))))
  (not (= i (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 23)))))
  (= (to_rep (select (let ((subject memory)) memory10) i)) (to_rep
                                                           (select temp___503 i)))))))
  (and
  (and
  (and
  (= o175 (readmem64 ((_ int2bv 64) 4198752)
          (let ((subject memory)) memory10)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o175 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory10) ((_ int2bv 64) 4198752)))))
  (= (bvand o175 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory10) (bvadd ((_ int2bv 64) 4198752) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o175 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd ((_ int2bv 64) 4198752) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o175 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd ((_ int2bv 64) 4198752) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o175 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd ((_ int2bv 64) 4198752) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o175 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd ((_ int2bv 64) 4198752) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o175 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd ((_ int2bv 64) 4198752) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o175 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd ((_ int2bv 64) 4198752) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result119 (mk_t__ref3 xmm73)) (= xmm74 o175)))
  (and
  (and (= result120 (let ((subject r13)) (mk_t__ref3 r132)))
  (= (let ((subject r13)) r133) ((_ int2bv 64) 20)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm74 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory11) (bvsub (bvadd
                                                           (let ((subject
                                                           rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))))))
  (= (bvand xmm74 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory11) (bvadd (bvsub (bvadd
                                                                    (let ((subject
                                                                    rsp))
                                                                    rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm74 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm74 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm74 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm74 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm74 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm74 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (not
  (= i (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp77) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory11) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory10) i)))))))
  (and
  (and
  (and
  (and (= temp___477 (let ((subject rbx)) rbx44))
  (and (= temp___476 xmm36)
  (and (= temp___478 (let ((subject rsp)) rsp77))
  (and (= temp___475 (let ((subject rsp)) rsp77))
  (and (= temp___473 (let ((subject rsi)) rsi7))
  (and (= temp___474 (let ((subject memory)) memory11))
  (and (= temp___471 overflowflag44)
  (and (= temp___472 xmm26)
  (and (= temp___479 (let ((subject memory)) memory11))
  (and (= temp___469 (let ((subject r13)) r133))
  (and (= temp___470 xmm74)
  (and (= temp___467 signflag44)
  (and (= temp___468 xmm16)
  (and (= temp___466 rax44)
  (and (= temp___464 carryflag44)
  (and (= temp___465 xmm044)
  (and (= temp___463 (let ((subject rbp)) rbp44))
  (and (= temp___460 xmm52)
  (and (= temp___461 (let ((subject rdi)) rdi54))
  (and (= temp___462 (let ((subject r12)) r122))
  (and (= temp___459 zeroflag44)
  (and (= temp___458 xmm42)
  (and
  (and (= (let ((subject rsp)) rsp78) temp___478)
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp78)))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 7)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 8)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 9)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 10)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 11)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 12)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 13)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 14)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 15)))))
  (= (to_rep (select (let ((subject memory)) memory12) i)) (to_rep
                                                           (select temp___479 i)))))))
  (and
  (and
  (and
  (= o176 (readmem64 ((_ int2bv 64) 4198744)
          (let ((subject memory)) memory12)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o176 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory12) ((_ int2bv 64) 4198744)))))
  (= (bvand o176 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory12) (bvadd ((_ int2bv 64) 4198744) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o176 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory12) (bvadd ((_ int2bv 64) 4198744) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o176 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory12) (bvadd ((_ int2bv 64) 4198744) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o176 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory12) (bvadd ((_ int2bv 64) 4198744) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o176 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory12) (bvadd ((_ int2bv 64) 4198744) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o176 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory12) (bvadd ((_ int2bv 64) 4198744) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o176 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory12) (bvadd ((_ int2bv 64) 4198744) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result121 (mk_t__ref3 xmm75)) (= xmm76 o176)))
  (and
  (and (= result122 (let ((subject r12)) (mk_t__ref3 r123)))
  (= (let ((subject r12)) r124) ((_ int2bv 64) 10)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm76 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory13)
                                                           (let ((subject
                                                           rsp)) rsp78)))))
  (= (bvand xmm76 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory13) (bvadd
                                                                    (let ((subject
                                                                    rsp))
                                                                    rsp78) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm76 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory13) (bvadd (let ((subject rsp))
                                                   rsp78) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm76 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory13) (bvadd (let ((subject rsp))
                                                   rsp78) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm76 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory13) (bvadd (let ((subject rsp))
                                                   rsp78) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm76 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory13) (bvadd (let ((subject rsp))
                                                   rsp78) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm76 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory13) (bvadd (let ((subject rsp))
                                                   rsp78) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm76 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory13) (bvadd (let ((subject rsp))
                                                   rsp78) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp78)))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp78) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory13) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory12) i)))))))
  (and
  (and
  (and
  (and (= temp___455 (let ((subject rbx)) rbx45))
  (and (= temp___454 xmm37)
  (and (= temp___453 (let ((subject rsp)) rsp78))
  (and (= temp___451 (let ((subject memory)) memory13))
  (and (= temp___452 (let ((subject rsi)) rsi8))
  (and (= temp___449 overflowflag45)
  (and (= temp___450 xmm27)
  (and (= temp___447 signflag45)
  (and (= temp___448 xmm17)
  (and (= temp___456 (let ((subject rsp)) rsp78))
  (and (= temp___446 rax45)
  (and (= temp___444 carryflag45)
  (and (= temp___445 xmm045)
  (and (= temp___443 (let ((subject rbp)) rbp45))
  (and (= temp___441 (let ((subject r12)) r124))
  (and (= temp___442 (let ((subject rdi)) rdi55))
  (and (= temp___440 zeroflag45)
  (and (= temp___439 xmm43)
  (and (= temp___457 (let ((subject memory)) memory13))
  (and
  (and (= (let ((subject rsp)) rsp79) temp___456)
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp79)))
  (not (= i (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory14) i)) (to_rep
                                                           (select temp___457 i)))))))
  (and
  (and (= result123 (let ((subject rsi)) (mk_t__ref3 rsi9)))
  (= (let ((subject rsi)) rsi10) (bvsub (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 88))))
  (and
  (and (= result124 (let ((subject rdi)) (mk_t__ref3 rdi56)))
  (= (let ((subject rdi)) rdi57) (bvsub (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))
  (and
  (= (writereg32post (let ((subject rbx)) rbx47) ((_ int2bv 32) 0)) true)
  (and
  (and
  (and
  (= o177 (readmem64 (let ((subject rsp)) rsp79)
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o177 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14)
                                                          (let ((subject
                                                          rsp)) rsp79)))))
  (= (bvand o177 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp79) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o177 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp79) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o177 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp79) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o177 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp79) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o177 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp79) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o177 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp79) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o177 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp79) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result125 (mk_t__ref3 xmm38)) (= xmm39 o177)))
  (and
  (and (= result126 (let ((subject rbp)) (mk_t__ref3 rbp46)))
  (= (let ((subject rbp)) rbp47) (bvsub (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 88))))
  (and
  (and
  (and
  (= o178 (readmem64
          (bvsub (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o178 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))))))
  (= (bvand o178 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o178 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o178 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o178 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o178 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o178 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o178 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result127 (mk_t__ref3 xmm28)) (= xmm29 o178)))
  (and
  (and
  (and
  (= o179 (readmem64
          (bvsub (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o179 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))))))
  (= (bvand o179 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o179 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o179 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o179 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o179 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o179 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o179 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result128 (mk_t__ref3 xmm18)) (= xmm19 o179)))
  (and
  (and
  (and
  (= o180 (readmem64
          (bvsub (bvadd (let ((subject rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o180 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128))))))
  (= (bvand o180 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o180 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o180 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o180 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o180 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o180 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o180 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp79) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result129 (mk_t__ref3 xmm046)) (= xmm047 o180)))
  (and
  (and (= result130 (let ((subject rsp)) (mk_t__ref3 rsp79)))
  (= (let ((subject rsp)) rsp80) (bvsub (let ((subject rsp)) rsp79) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp81) (bvadd (let ((subject rsp)) rsp80) ((_ int2bv 64) 8)))
  (and (= (writereg32post rax47 ((_ int2bv 32) 0)) true)
  (and
  (= (writereg32post (let ((subject rdi)) rdi58) ((_ int2bv 32) 4198688)) true)
  (and
  (and (= result131 (let ((subject rsp)) (mk_t__ref3 rsp81)))
  (= (let ((subject rsp)) rsp82) (bvsub (let ((subject rsp)) rsp81) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp83) (bvadd (let ((subject rsp)) rsp82) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (= o181 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp83) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (= (bvand o181 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp83) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o181 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp83) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o181 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp83) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o181 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp83) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= (writereg32post rax48 o181) true))
  (and
  (and
  (and
  (and (= o182 (eax rax48))
  (= o182 ((_ extract 31 0) (bvand rax48 ((_ int2bv 64) 4294967295)))))
  (= o183 (ite (= o182 ((_ int2bv 32) 0)) true false)))
  (and (= result132 (mk_bool__ref zeroflag46)) (= zeroflag47 o183)))
  (and
  (and
  (and
  (and (= o184 (eax rax48))
  (= o184 ((_ extract 31 0) (bvand rax48 ((_ int2bv 64) 4294967295)))))
  (= o185 (ite (bvugt o184 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result133 (mk_bool__ref signflag46)) (= signflag47 o185)))
  (and
  (and (= result134 (mk_bool__ref carryflag46)) (= carryflag47 (of_int 0)))
  (and
  (and (= result135 (mk_bool__ref overflowflag46))
  (= overflowflag47 (of_int 0)))
  (and
  (ite (and (not (= zeroflag47 true))
       (= (to_int5 signflag47) (to_int5 overflowflag47)))
  (and
  (and
  (and (= temp___437 (let ((subject rbx)) rbx47))
  (and (= temp___438 (let ((subject rsp)) rsp83))
  (and (= temp___436 (let ((subject rsp)) rsp83))
  (and (= temp___435 overflowflag47)
  (and (= temp___434 signflag47)
  (and (= temp___433 rax48)
  (and (= temp___431 carryflag47)
  (and (= temp___432 xmm047)
  (and (= temp___430 (let ((subject rbp)) rbp47))
  (and (= temp___429 (let ((subject rdi)) rdi58))
  (and (= temp___428 zeroflag47)
  (and (= (let ((subject rsp)) rsp84) temp___438)
  (and
  (and (not (= zeroflag48 true))
  (= (= signflag48 true) (= overflowflag48 true)))
  (and
  (and
  (and
  (= o186 (readmem64 (let ((subject rbp)) rbp48)
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o186 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14)
                                                          (let ((subject
                                                          rbp)) rbp48)))))
  (= (bvand o186 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd
                                                                   (let ((subject
                                                                   rbp))
                                                                   rbp48) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o186 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rbp))
                                                   rbp48) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o186 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rbp))
                                                   rbp48) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o186 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rbp))
                                                   rbp48) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o186 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rbp))
                                                   rbp48) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o186 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rbp))
                                                   rbp48) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o186 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rbp))
                                                   rbp48) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result136 (mk_t__ref3 xmm048)) (= xmm049 o186)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi60) ((_ int2bv 32) 4198699)) true)
  (and (= (writereg32post rax50 ((_ int2bv 32) 1)) true)
  (and
  (and
  (and
  (and (= o187 (ebx (let ((subject rbx)) rbx48)))
  (= o187 (readreg32 (let ((subject rbx)) rbx48))))
  (= o188 (bvadd o187 ((_ int2bv 32) 1))))
  (= (writereg32post (let ((subject rbx)) rbx49) o188) true))
  (and
  (and (= result137 (let ((subject rbp)) (mk_t__ref3 rbp48)))
  (= (let ((subject rbp)) rbp49) (bvadd (let ((subject rbp)) rbp48) ((_ int2bv 64) 8))))
  (and
  (and (= result138 (let ((subject rsp)) (mk_t__ref3 rsp84)))
  (= (let ((subject rsp)) rsp85) (bvsub (let ((subject rsp)) rsp84) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp86) (bvadd (let ((subject rsp)) rsp85) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and (= o189 (ebx (let ((subject rbx)) rbx49)))
  (= o189 (readreg32 (let ((subject rbx)) rbx49))))
  (and
  (and
  (= o190 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (= (bvand o190 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o190 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o190 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o190 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o191 (bvsub o190 o189))))
  (= o192 (ite (= o191 ((_ int2bv 32) 0)) true false)))
  (and (= result139 (mk_bool__ref zeroflag48)) (= zeroflag49 o192)))
  (and
  (and
  (and
  (and
  (and (= o193 (ebx (let ((subject rbx)) rbx49)))
  (= o193 (readreg32 (let ((subject rbx)) rbx49))))
  (and
  (and
  (= o194 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (= (bvand o194 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o194 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o194 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o194 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o195 (bvsub o194 o193))))
  (= o196 (ite (bvugt o195 ((_ int2bv 32) 2147483647)) true false)))
  (and (= result140 (mk_bool__ref signflag48)) (= signflag49 o196)))
  (and
  (and
  (and
  (and (= o197 (ebx (let ((subject rbx)) rbx49)))
  (= o197 (readreg32 (let ((subject rbx)) rbx49))))
  (and
  (and
  (= o198 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (= (bvand o198 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o198 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o198 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o198 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o199 (ite (bvult o198 o197) true false))))
  (and (= result141 (mk_bool__ref carryflag48)) (= carryflag49 o199)))
  (and
  (and
  (and
  (and
  (ite (not (= signflag49 true))
  (and
  (and
  (= o203 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (= (bvand o203 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o203 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o203 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o203 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= result142 (ite (bvugt o203 ((_ int2bv 32) 2147483647)) true false)))
  (= result142 false))
  (ite (= result142 true)
  (and
  (and (= o202 (ebx (let ((subject rbx)) rbx49)))
  (= o202 (readreg32 (let ((subject rbx)) rbx49))))
  (= o204 (ite (bvule o202 ((_ int2bv 32) 2147483647)) true false)))
  (= o204 false)))
  (and
  (and
  (ite (= signflag49 true)
  (and
  (and (= o201 (ebx (let ((subject rbx)) rbx49)))
  (= o201 (readreg32 (let ((subject rbx)) rbx49))))
  (= result143 (ite (bvugt o201 ((_ int2bv 32) 2147483647)) true false)))
  (= result143 false))
  (ite (= result143 true)
  (and
  (and
  (= o200 (readmem32
          (bvsub (bvadd (let ((subject rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (= (bvand o200 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) (bvsub (bvadd
                                                          (let ((subject
                                                          rsp)) rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108))))))
  (= (bvand o200 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd (bvsub (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o200 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o200 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (bvsub (bvadd (let ((subject
                                                                 rsp))
                                                                 rsp86) ((_ int2bv 64) 152)) ((_ int2bv 64) 108)) ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216)))))
  (= o205 (ite (bvule o200 ((_ int2bv 32) 2147483647)) true false)))
  (= o205 false))) (= o206 (ite (= o205 false) o204 true))))
  (and (= result144 (mk_bool__ref overflowflag48)) (= overflowflag49 o206)))
  (not
  (and (not (= zeroflag49 true))
  (= (to_int5 signflag49) (to_int5 overflowflag49))))))))))))))))))))))))))))
  (and
  (and (= rdi65 (let ((subject rdi)) (mk_t__ref3 rdi60)))
  (and (= rbp54 (let ((subject rbp)) (mk_t__ref3 rbp49)))
  (and (= rsp91 (let ((subject rsp)) (mk_t__ref3 rsp86)))
  (and (= rbx54 (let ((subject rbx)) (mk_t__ref3 rbx49)))
  (and (= rax55 (mk_t__ref3 rax50))
  (and (= xmm054 (mk_t__ref3 xmm049))
  (and (= overflowflag54 (mk_bool__ref overflowflag49))
  (and (= signflag54 (mk_bool__ref signflag49))
  (and (= carryflag54 (mk_bool__ref carryflag49))
  (= zeroflag54 (mk_bool__ref zeroflag49)))))))))))
  (and (= rdi66 rdi60)
  (and (= rbp55 rbp49)
  (and (= rsp92 rsp86)
  (and (= rbx55 rbx49)
  (and (= rax56 rax50)
  (and (= xmm055 xmm049)
  (and (= overflowflag55 overflowflag49)
  (and (= signflag55 signflag49)
  (and (= carryflag55 carryflag49) (= zeroflag55 zeroflag49))))))))))))
  (and
  (and (= rdi67 rdi65)
  (and (= rbp56 rbp54)
  (and (= rsp93 rsp91)
  (and (= rbx56 rbx54)
  (and (= rax57 rax55)
  (and (= xmm056 xmm054)
  (and (= overflowflag56 overflowflag54)
  (and (= signflag56 signflag54)
  (and (= carryflag56 carryflag54) (= zeroflag56 zeroflag54))))))))))
  (and (= rdi68 rdi66)
  (and (= rbp57 rbp55)
  (and (= rsp94 rsp92)
  (and (= rbx57 rbx55)
  (and (= rax58 rax56)
  (and (= xmm057 xmm055)
  (and (= overflowflag57 overflowflag55)
  (and (= signflag57 signflag55)
  (and (= carryflag57 carryflag55) (= zeroflag57 zeroflag55))))))))))))
  (and
  (and (= rdi67 (let ((subject rdi)) (mk_t__ref3 rdi58)))
  (and (= rbp56 (let ((subject rbp)) (mk_t__ref3 rbp47)))
  (and (= rsp93 (let ((subject rsp)) (mk_t__ref3 rsp83)))
  (and (= rbx56 (let ((subject rbx)) (mk_t__ref3 rbx47)))
  (and (= rax57 (mk_t__ref3 rax48))
  (and (= xmm056 (mk_t__ref3 xmm047))
  (and (= overflowflag56 (mk_bool__ref overflowflag47))
  (and (= signflag56 (mk_bool__ref signflag47))
  (and (= carryflag56 (mk_bool__ref carryflag47))
  (= zeroflag56 (mk_bool__ref zeroflag47)))))))))))
  (and (= rdi68 rdi58)
  (and (= rbp57 rbp47)
  (and (= rsp94 rsp83)
  (and (= rbx57 rbx47)
  (and (= rax58 rax48)
  (and (= xmm057 xmm047)
  (and (= overflowflag57 overflowflag47)
  (and (= signflag57 signflag47)
  (and (= carryflag57 carryflag47) (= zeroflag57 zeroflag47))))))))))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi69) ((_ int2bv 32) 10)) true)
  (and
  (and (= result145 rsp93)
  (= (let ((subject rsp)) rsp95) (bvsub (t__content3 rsp93) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp96) (bvadd (let ((subject rsp)) rsp95) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (= o207 (readmem64 (let ((subject rsp)) rsp96)
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o207 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14)
                                                          (let ((subject
                                                          rsp)) rsp96)))))
  (= (bvand o207 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp96) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o207 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o207 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o207 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o207 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o207 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o207 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result146 (mk_t__ref3 xmm44)) (= xmm45 o207)))
  (and
  (and (= result147 (let ((subject r12)) (mk_t__ref3 r125)))
  (= (let ((subject r12)) r126) (bvsub (let ((subject r12)) r125) ((_ int2bv 64) 1))))
  (and
  (and (= result148 zeroflag56)
  (= zeroflag58 (ite (= (let ((subject r12)) r126) ((_ int2bv 64) 0)) true
                false)))
  (and
  (and
  (and
  (and
  (= o208 (readmem64 ((_ int2bv 64) 4198768)
          (let ((subject memory)) memory14)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o208 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory14) ((_ int2bv 64) 4198768)))))
  (= (bvand o208 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory14) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o208 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o208 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o208 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o208 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o208 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o208 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory14) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (= o209 (bvsub xmm45 o208)))
  (and (= result149 (mk_t__ref3 xmm45)) (= xmm46 o209)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm46 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory15)
                                                           (let ((subject
                                                           rsp)) rsp96)))))
  (= (bvand xmm46 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory15) (bvadd
                                                                    (let ((subject
                                                                    rsp))
                                                                    rsp96) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm46 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory15) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm46 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory15) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm46 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory15) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm46 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory15) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm46 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory15) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm46 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory15) (bvadd (let ((subject rsp))
                                                   rsp96) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp96)))
  (not (= i (bvadd (let ((subject rsp)) rsp96) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp96) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp96) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp96) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp96) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp96) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp96) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory15) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory14) i)))))))
  (= zeroflag58 true)))))))))))))))))))))))))))))))))))))))))))))))))
  (and
  (and (= memory18 (let ((subject memory)) (mk_map__ref memory15)))
  (and (= r129 (let ((subject r12)) (mk_t__ref3 r126)))
  (and (= rdi72 (let ((subject rdi)) (mk_t__ref3 rdi69)))
  (and (= rsi13 (let ((subject rsi)) (mk_t__ref3 rsi10)))
  (and (= rbp60 rbp56)
  (and (= rsp99 (let ((subject rsp)) (mk_t__ref3 rsp96)))
  (and (= rbx60 rbx56)
  (and (= rax61 rax57)
  (and (= xmm49 (mk_t__ref3 xmm46))
  (and (= xmm312 (mk_t__ref3 xmm39))
  (and (= xmm212 (mk_t__ref3 xmm29))
  (and (= xmm112 (mk_t__ref3 xmm19))
  (and (= xmm060 xmm056)
  (and (= overflowflag60 overflowflag56)
  (and (= signflag60 signflag56)
  (and (= carryflag60 carryflag56) (= zeroflag61 (mk_bool__ref zeroflag58))))))))))))))))))
  (and (= memory19 memory15)
  (and (= r1210 r126)
  (and (= rdi73 rdi69)
  (and (= rsi14 rsi10)
  (and (= rbp61 rbp57)
  (and (= rsp100 rsp96)
  (and (= rbx61 rbx57)
  (and (= rax62 rax58)
  (and (= xmm410 xmm46)
  (and (= xmm313 xmm39)
  (and (= xmm213 xmm29)
  (and (= xmm113 xmm19)
  (and (= xmm061 xmm057)
  (and (= overflowflag61 overflowflag57)
  (and (= signflag61 signflag57)
  (and (= carryflag61 carryflag57) (= zeroflag62 zeroflag58)))))))))))))))))))
  (and
  (and (= memory20 memory18)
  (and (= r1211 r129)
  (and (= rdi74 rdi72)
  (and (= rsi15 rsi13)
  (and (= rbp62 rbp60)
  (and (= rsp101 rsp99)
  (and (= rbx62 rbx60)
  (and (= rax63 rax61)
  (and (= xmm411 xmm49)
  (and (= xmm314 xmm312)
  (and (= xmm214 xmm212)
  (and (= xmm114 xmm112)
  (and (= xmm062 xmm060)
  (and (= overflowflag62 overflowflag60)
  (and (= signflag62 signflag60)
  (and (= carryflag62 carryflag60) (= zeroflag63 zeroflag61)))))))))))))))))
  (and (= memory21 memory19)
  (and (= r1212 r1210)
  (and (= rdi75 rdi73)
  (and (= rsi16 rsi14)
  (and (= rbp63 rbp61)
  (and (= rsp102 rsp100)
  (and (= rbx63 rbx61)
  (and (= rax64 rax62)
  (and (= xmm412 xmm410)
  (and (= xmm315 xmm313)
  (and (= xmm215 xmm213)
  (and (= xmm115 xmm113)
  (and (= xmm063 xmm061)
  (and (= overflowflag63 overflowflag61)
  (and (= signflag63 signflag61)
  (and (= carryflag63 carryflag61) (= zeroflag64 zeroflag62)))))))))))))))))))
  (and
  (and
  (and (= o210 (readmem64 ((_ int2bv 64) 4198856) (map__content memory20)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o210 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (map__content
                                                                  memory20) ((_ int2bv 64) 4198856)))))
  (= (bvand o210 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (map__content
                                                                   memory20) (bvadd ((_ int2bv 64) 4198856) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o210 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd ((_ int2bv 64) 4198856) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o210 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd ((_ int2bv 64) 4198856) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o210 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd ((_ int2bv 64) 4198856) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o210 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd ((_ int2bv 64) 4198856) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o210 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd ((_ int2bv 64) 4198856) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o210 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd ((_ int2bv 64) 4198856) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result150 (mk_t__ref3 xmm53)) (= xmm54 o210)))
  (and
  (and (= result151 (let ((subject r13)) (mk_t__ref3 r134)))
  (= (let ((subject r13)) r135) (bvsub (let ((subject r13)) r134) ((_ int2bv 64) 1))))
  (and
  (and (= result152 zeroflag63)
  (= zeroflag65 (ite (= (let ((subject r13)) r135) ((_ int2bv 64) 0)) true
                false)))
  (and
  (and
  (and
  (and
  (= o211 (readmem64
          (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))
          (map__content memory20)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o211 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (map__content
                                                                  memory20) (bvsub (bvadd
                                                          (t__content3
                                                          rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))))))
  (= (bvand o211 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (map__content
                                                                   memory20) (bvadd (bvsub (bvadd
                                                                   (t__content3
                                                                   rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o211 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o211 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o211 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o211 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o211 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o211 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory20) (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (= o212 (bvadd xmm54 o211)))
  (and (= result153 (mk_t__ref3 xmm54)) (= xmm55 o212)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm55 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory22) (bvsub (bvadd
                                                           (t__content3
                                                           rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))))))
  (= (bvand xmm55 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory22) (bvadd (bvsub (bvadd
                                                                    (t__content3
                                                                    rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm55 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory22) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm55 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory22) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm55 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory22) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm55 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory22) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm55 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory22) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm55 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory22) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (not
  (= i (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp101) ((_ int2bv 64) 152)) ((_ int2bv 64) 144)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory22) i)) (to_rep
                                                           (select (map__content
                                                                   memory20) i)))))))
  (= zeroflag65 true)))))))))))))))))))))))))))))))))
  (and
  (and (= memory25 (let ((subject memory)) (mk_map__ref memory22)))
  (and (= r138 (let ((subject r13)) (mk_t__ref3 r135)))
  (and (= r1215 r1211)
  (and (= rdi78 rdi74)
  (and (= rsi19 rsi15)
  (and (= rbp66 rbp62)
  (and (= rsp105 rsp101)
  (and (= rbx66 rbx62)
  (and (= rax67 rax63)
  (and (= xmm79 (mk_t__ref3 xmm76))
  (and (= xmm58 (mk_t__ref3 xmm55))
  (and (= xmm415 xmm411)
  (and (= xmm318 xmm314)
  (and (= xmm218 xmm214)
  (and (= xmm118 xmm114)
  (and (= xmm066 xmm062)
  (and (= overflowflag66 overflowflag62)
  (and (= signflag66 signflag62)
  (and (= carryflag66 carryflag62) (= zeroflag68 (mk_bool__ref zeroflag65)))))))))))))))))))))
  (and (= memory26 memory22)
  (and (= r139 r135)
  (and (= r1216 r1212)
  (and (= rdi79 rdi75)
  (and (= rsi20 rsi16)
  (and (= rbp67 rbp63)
  (and (= rsp106 rsp102)
  (and (= rbx67 rbx63)
  (and (= rax68 rax64)
  (and (= xmm710 xmm76)
  (and (= xmm59 xmm55)
  (and (= xmm416 xmm412)
  (and (= xmm319 xmm315)
  (and (= xmm219 xmm215)
  (and (= xmm119 xmm115)
  (and (= xmm067 xmm063)
  (and (= overflowflag67 overflowflag63)
  (and (= signflag67 signflag63)
  (and (= carryflag67 carryflag63) (= zeroflag69 zeroflag65))))))))))))))))))))))
  (and
  (and (= memory27 memory25)
  (and (= r1310 r138)
  (and (= r1217 r1215)
  (and (= rdi80 rdi78)
  (and (= rsi21 rsi19)
  (and (= rbp68 rbp66)
  (and (= rsp107 rsp105)
  (and (= rbx68 rbx66)
  (and (= rax69 rax67)
  (and (= xmm711 xmm79)
  (and (= xmm510 xmm58)
  (and (= xmm417 xmm415)
  (and (= xmm320 xmm318)
  (and (= xmm220 xmm218)
  (and (= xmm120 xmm118)
  (and (= xmm068 xmm066)
  (and (= overflowflag68 overflowflag66)
  (and (= signflag68 signflag66)
  (and (= carryflag68 carryflag66) (= zeroflag70 zeroflag68))))))))))))))))))))
  (and (= memory28 memory26)
  (and (= r1311 r139)
  (and (= r1218 r1216)
  (and (= rdi81 rdi79)
  (and (= rsi22 rsi20)
  (and (= rbp69 rbp67)
  (and (= rsp108 rsp106)
  (and (= rbx69 rbx67)
  (and (= rax70 rax68)
  (and (= xmm712 xmm710)
  (and (= xmm511 xmm59)
  (and (= xmm418 xmm416)
  (and (= xmm321 xmm319)
  (and (= xmm221 xmm219)
  (and (= xmm121 xmm119)
  (and (= xmm069 xmm067)
  (and (= overflowflag69 overflowflag67)
  (and (= signflag69 signflag67)
  (and (= carryflag69 carryflag67) (= zeroflag71 zeroflag69))))))))))))))))))))))
  (and
  (and
  (and
  (= o213 (readmem64
          (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))
          (map__content memory27)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o213 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (map__content
                                                                  memory27) (bvsub (bvadd
                                                          (t__content3
                                                          rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))))))
  (= (bvand o213 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (map__content
                                                                   memory27) (bvadd (bvsub (bvadd
                                                                   (t__content3
                                                                   rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o213 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o213 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o213 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o213 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o213 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o213 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result154 (mk_t__ref3 xmm63)) (= xmm64 o213)))
  (and
  (and (= result155 (let ((subject r14)) (mk_t__ref3 r143)))
  (= (let ((subject r14)) r144) (bvsub (let ((subject r14)) r143) ((_ int2bv 64) 1))))
  (and
  (and (= result156 zeroflag70)
  (= zeroflag72 (ite (= (let ((subject r14)) r144) ((_ int2bv 64) 0)) true
                false)))
  (and
  (and
  (and
  (and (= o214 (readmem64 ((_ int2bv 64) 4198768) (map__content memory27)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o214 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (map__content
                                                                  memory27) ((_ int2bv 64) 4198768)))))
  (= (bvand o214 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (map__content
                                                                   memory27) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o214 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o214 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o214 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o214 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o214 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o214 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory27) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (= o215 (bvsub xmm64 o214)))
  (and (= result157 (mk_t__ref3 xmm64)) (= xmm65 o215)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm65 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory29) (bvsub (bvadd
                                                           (t__content3
                                                           rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))))))
  (= (bvand xmm65 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory29) (bvadd (bvsub (bvadd
                                                                    (t__content3
                                                                    rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm65 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory29) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm65 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory29) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm65 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory29) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm65 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory29) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm65 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory29) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm65 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory29) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (not
  (= i (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp107) ((_ int2bv 64) 152)) ((_ int2bv 64) 136)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory29) i)) (to_rep
                                                           (select (map__content
                                                                   memory27) i)))))))
  (= zeroflag72 true)))))))))))))))))))))))))))))))))))
  (and
  (and (= memory32 (let ((subject memory)) (mk_map__ref memory29)))
  (and (= r147 (let ((subject r14)) (mk_t__ref3 r144)))
  (and (= r1314 r1310)
  (and (= r1221 r1217)
  (and (= rdi84 rdi80)
  (and (= rsi25 rsi21)
  (and (= rbp72 rbp68)
  (and (= rsp111 rsp107)
  (and (= rbx72 rbx68)
  (and (= rax73 rax69)
  (and (= xmm715 xmm711)
  (and (= xmm68 (mk_t__ref3 xmm65))
  (and (= xmm514 xmm510)
  (and (= xmm421 xmm417)
  (and (= xmm324 xmm320)
  (and (= xmm224 xmm220)
  (and (= xmm124 xmm120)
  (and (= xmm072 xmm068)
  (and (= overflowflag72 overflowflag68)
  (and (= signflag72 signflag68)
  (and (= carryflag72 carryflag68) (= zeroflag75 (mk_bool__ref zeroflag72)))))))))))))))))))))))
  (and (= memory33 memory29)
  (and (= r148 r144)
  (and (= r1315 r1311)
  (and (= r1222 r1218)
  (and (= rdi85 rdi81)
  (and (= rsi26 rsi22)
  (and (= rbp73 rbp69)
  (and (= rsp112 rsp108)
  (and (= rbx73 rbx69)
  (and (= rax74 rax70)
  (and (= xmm716 xmm712)
  (and (= xmm69 xmm65)
  (and (= xmm515 xmm511)
  (and (= xmm422 xmm418)
  (and (= xmm325 xmm321)
  (and (= xmm225 xmm221)
  (and (= xmm125 xmm121)
  (and (= xmm073 xmm069)
  (and (= overflowflag73 overflowflag69)
  (and (= signflag73 signflag69)
  (and (= carryflag73 carryflag69) (= zeroflag76 zeroflag72))))))))))))))))))))))))
  (and
  (and (= memory34 memory32)
  (and (= r149 r147)
  (and (= r1316 r1314)
  (and (= r1223 r1221)
  (and (= rdi86 rdi84)
  (and (= rsi27 rsi25)
  (and (= rbp74 rbp72)
  (and (= rsp113 rsp111)
  (and (= rbx74 rbx72)
  (and (= rax75 rax73)
  (and (= xmm717 xmm715)
  (and (= xmm610 xmm68)
  (and (= xmm516 xmm514)
  (and (= xmm423 xmm421)
  (and (= xmm326 xmm324)
  (and (= xmm226 xmm224)
  (and (= xmm126 xmm124)
  (and (= xmm074 xmm072)
  (and (= overflowflag74 overflowflag72)
  (and (= signflag74 signflag72)
  (and (= carryflag74 carryflag72) (= zeroflag77 zeroflag75))))))))))))))))))))))
  (and (= memory35 memory33)
  (and (= r1410 r148)
  (and (= r1317 r1315)
  (and (= r1224 r1222)
  (and (= rdi87 rdi85)
  (and (= rsi28 rsi26)
  (and (= rbp75 rbp73)
  (and (= rsp114 rsp112)
  (and (= rbx75 rbx73)
  (and (= rax76 rax74)
  (and (= xmm718 xmm716)
  (and (= xmm611 xmm69)
  (and (= xmm517 xmm515)
  (and (= xmm424 xmm422)
  (and (= xmm327 xmm325)
  (and (= xmm227 xmm225)
  (and (= xmm127 xmm125)
  (and (= xmm075 xmm073)
  (and (= overflowflag75 overflowflag73)
  (and (= signflag75 signflag73)
  (and (= carryflag75 carryflag73) (= zeroflag78 zeroflag76))))))))))))))))))))))))
  (and
  (and
  (and (= o216 (readmem64 ((_ int2bv 64) 4198768) (map__content memory34)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o216 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (map__content
                                                                  memory34) ((_ int2bv 64) 4198768)))))
  (= (bvand o216 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (map__content
                                                                   memory34) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o216 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o216 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o216 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o216 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o216 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o216 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd ((_ int2bv 64) 4198768) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result158 xmm717) (= xmm719 o216)))
  (and
  (and (= result159 (let ((subject r15)) (mk_t__ref3 r152)))
  (= (let ((subject r15)) r153) (bvsub (let ((subject r15)) r152) ((_ int2bv 64) 1))))
  (and
  (and (= result160 zeroflag77)
  (= zeroflag79 (ite (= (let ((subject r15)) r153) ((_ int2bv 64) 0)) true
                false)))
  (and
  (and
  (and
  (and
  (= o217 (readmem64
          (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128))
          (map__content memory34)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o217 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (map__content
                                                                  memory34) (bvsub (bvadd
                                                          (t__content3
                                                          rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128))))))
  (= (bvand o217 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (map__content
                                                                   memory34) (bvadd (bvsub (bvadd
                                                                   (t__content3
                                                                   rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o217 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o217 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o217 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o217 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o217 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o217 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (map__content memory34) (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (= o218 (bvadd xmm719 o217)))
  (and (= result161 (mk_t__ref3 xmm719)) (= xmm720 o218)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand xmm720 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                            (select (let ((subject
                                                                    memory))
                                                                    memory36) (bvsub (bvadd
                                                            (t__content3
                                                            rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128))))))
  (= (bvand xmm720 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory36) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand xmm720 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory36) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand xmm720 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory36) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand xmm720 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory36) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand xmm720 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory36) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand xmm720 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory36) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand xmm720 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory36) (bvadd (bvsub (bvadd (t__content3
                                                                 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (not
  (= i (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (bvadd (t__content3 rsp113) ((_ int2bv 64) 152)) ((_ int2bv 64) 128)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory36) i)) (to_rep
                                                           (select (map__content
                                                                   memory34) i)))))))
  (= zeroflag79 true))))))))))))))))))))))))))))))))))))
  (and
  (and (= memory39 (let ((subject memory)) (mk_map__ref memory36)))
  (and (= r156 (let ((subject r15)) (mk_t__ref3 r153)))
  (and (= r1413 r149)
  (and (= r1320 r1316)
  (and (= r1227 r1223)
  (and (= rdi90 rdi86)
  (and (= rsi31 rsi27)
  (and (= rbp78 rbp74)
  (and (= rsp117 rsp113)
  (and (= rbx78 rbx74)
  (and (= rax79 rax75)
  (and (= xmm723 (mk_t__ref3 xmm720))
  (and (= xmm614 xmm610)
  (and (= xmm520 xmm516)
  (and (= xmm427 xmm423)
  (and (= xmm330 xmm326)
  (and (= xmm230 xmm226)
  (and (= xmm130 xmm126)
  (and (= xmm078 xmm074)
  (and (= overflowflag78 overflowflag74)
  (and (= signflag78 signflag74)
  (and (= carryflag78 carryflag74) (= zeroflag82 (mk_bool__ref zeroflag79))))))))))))))))))))))))
  (and (= memory40 memory36)
  (and (= r157 r153)
  (and (= r1414 r1410)
  (and (= r1321 r1317)
  (and (= r1228 r1224)
  (and (= rdi91 rdi87)
  (and (= rsi32 rsi28)
  (and (= rbp79 rbp75)
  (and (= rsp118 rsp114)
  (and (= rbx79 rbx75)
  (and (= rax80 rax76)
  (and (= xmm724 xmm720)
  (and (= xmm615 xmm611)
  (and (= xmm521 xmm517)
  (and (= xmm428 xmm424)
  (and (= xmm331 xmm327)
  (and (= xmm231 xmm227)
  (and (= xmm131 xmm127)
  (and (= xmm079 xmm075)
  (and (= overflowflag79 overflowflag75)
  (and (= signflag79 signflag75)
  (and (= carryflag79 carryflag75) (= zeroflag83 zeroflag79)))))))))))))))))))))))))
  (and
  (and (= memory41 memory39)
  (and (= r158 r156)
  (and (= r1415 r1413)
  (and (= r1322 r1320)
  (and (= r1229 r1227)
  (and (= rdi92 rdi90)
  (and (= rsi33 rsi31)
  (and (= rbp80 rbp78)
  (and (= rsp119 rsp117)
  (and (= rbx80 rbx78)
  (and (= rax81 rax79)
  (and (= xmm725 xmm723)
  (and (= xmm616 xmm614)
  (and (= xmm522 xmm520)
  (and (= xmm429 xmm427)
  (and (= xmm332 xmm330)
  (and (= xmm232 xmm230)
  (and (= xmm132 xmm130)
  (and (= xmm080 xmm078)
  (and (= overflowflag80 overflowflag78)
  (and (= signflag80 signflag78)
  (and (= carryflag80 carryflag78) (= zeroflag84 zeroflag82)))))))))))))))))))))))
  (and (= memory42 memory40)
  (and (= r159 r157)
  (and (= r1416 r1414)
  (and (= r1323 r1321)
  (and (= r1230 r1228)
  (and (= rdi93 rdi91)
  (and (= rsi34 rsi32)
  (and (= rbp81 rbp79)
  (and (= rsp120 rsp118)
  (and (= rbx81 rbx79)
  (and (= rax82 rax80)
  (and (= xmm726 xmm724)
  (and (= xmm617 xmm615)
  (and (= xmm523 xmm521)
  (and (= xmm430 xmm428)
  (and (= xmm333 xmm331)
  (and (= xmm233 xmm231)
  (and (= xmm133 xmm131)
  (and (= xmm081 xmm079)
  (and (= overflowflag81 overflowflag79)
  (and (= signflag81 signflag79)
  (and (= carryflag81 carryflag79) (= zeroflag85 zeroflag83)))))))))))))))))))))))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi94) ((_ int2bv 32) 4198544)) true)
  (and
  (= (writereg32post (let ((subject rbx)) rbx82) ((_ int2bv 32) 0)) true)
  (and
  (and
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (not
  (= i (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104)) ((_ int2bv 64) 1)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104)) ((_ int2bv 64) 2)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104)) ((_ int2bv 64) 3)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104)) ((_ int2bv 64) 4)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104)) ((_ int2bv 64) 5)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104)) ((_ int2bv 64) 6)))))
  (not
  (= i (bvadd (bvsub (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 152)) ((_ int2bv 64) 104)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory43) i)) (to_rep
                                                           (select (map__content
                                                                   memory41) i))))))
  (= (let ((subject rsp)) rsp121) (t__content3 rsp119)))
  (and
  (and (= result162 (let ((subject rsi)) (mk_t__ref3 rsi35)))
  (= (let ((subject rsi)) rsi36) (bvadd (let ((subject rsp)) rsp121) ((_ int2bv 64) 48))))
  (and
  (= (writereg32post (let ((subject rdi)) rdi96) ((_ int2bv 32) 1072497001)) true)
  (and
  (= (writereg16post (let ((subject rbx)) rbx83) (let ((subject rbx)) rbx84)
     ((_ int2bv 16) 361)) true)
  (and
  (and (= result163 (let ((subject rsp)) (mk_t__ref3 rsp121)))
  (= (let ((subject rsp)) rsp122) (bvsub (let ((subject rsp)) rsp121) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (let ((subject rsp)) rsp123) (bvadd (let ((subject rsp)) rsp122) ((_ int2bv 64) 8)))
  (= (to_rep
     (select (let ((subject memory)) memory44) (let ((subject rsp)) rsp122)))
  (to_rep
  (select (let ((subject memory)) memory43) (let ((subject rsp)) rsp122)))))
  (= (to_rep
     (select (let ((subject memory)) memory44) (bvadd (let ((subject
                                                      rsp)) rsp122) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory43) (bvadd (let ((subject rsp))
                                                   rsp122) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory44) (bvadd (let ((subject
                                                      rsp)) rsp122) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory43) (bvadd (let ((subject rsp))
                                                   rsp122) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory44) (bvadd (let ((subject
                                                      rsp)) rsp122) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory43) (bvadd (let ((subject rsp))
                                                   rsp122) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory44) (bvadd (let ((subject
                                                      rsp)) rsp122) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory43) (bvadd (let ((subject rsp))
                                                   rsp122) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory44) (bvadd (let ((subject
                                                      rsp)) rsp122) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory43) (bvadd (let ((subject rsp))
                                                   rsp122) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory44) (bvadd (let ((subject
                                                      rsp)) rsp122) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory43) (bvadd (let ((subject rsp))
                                                   rsp122) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory44) (bvadd (let ((subject
                                                      rsp)) rsp122) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory43) (bvadd (let ((subject rsp))
                                                   rsp122) ((_ int2bv 64) 7))))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (not (= (inrange64 i (let ((subject rsi)) rsi36) ((_ int2bv 64) 8)) true))
  (= (to_rep (select (let ((subject memory)) memory44) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory43) i)))))))
  (and
  (and
  (and
  (and
  (and
  (and (= o219 (esp (let ((subject rsp)) rsp123)))
  (= o219 (readreg32 (let ((subject rsp)) rsp123))))
  (= o220 (bvadd o219 ((_ int2bv 32) 48))))
  (= o221 ((_ zero_extend 32) o220)))
  (and (= o222 (readmem32 o221 (let ((subject memory)) memory44)))
  (and
  (and
  (and
  (= (bvand o222 ((_ int2bv 32) 255)) ((_ zero_extend 24) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory44)
                                                          o221))))
  (= (bvand o222 ((_ int2bv 32) 65280)) (bvmul ((_ zero_extend 24) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory44) (bvadd
                                                                   o221 ((_ int2bv 64) 1))))) ((_ int2bv 32) 256))))
  (= (bvand o222 ((_ int2bv 32) 16711680)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory44) (bvadd o221 ((_ int2bv 64) 2))))) ((_ int2bv 32) 65536))))
  (= (bvand o222 ((_ int2bv 32) 4278190080)) (bvmul ((_ zero_extend 24)
  (to_rep
  (select (let ((subject memory)) memory44) (bvadd o221 ((_ int2bv 64) 3))))) ((_ int2bv 32) 16777216))))))
  (= (writereg32post rdx4 o222) true))
  (and
  (= (writereg32post (let ((subject rsi)) rsi37) ((_ int2bv 32) 1072497001)) true)
  (and
  (= (writereg32post (let ((subject rdi)) rdi98) ((_ int2bv 32) 4198720)) true)
  (and (= (writereg32post rax85 ((_ int2bv 32) 0)) true)
  (and
  (and (= result164 (let ((subject rsp)) (mk_t__ref3 rsp123)))
  (= (let ((subject rsp)) rsp124) (bvsub (let ((subject rsp)) rsp123) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp125) (bvadd (let ((subject rsp)) rsp124) ((_ int2bv 64) 8)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi99) ((_ int2bv 32) 4198584)) true)
  (and
  (and (= result165 (let ((subject rsp)) (mk_t__ref3 rsp125)))
  (= (let ((subject rsp)) rsp126) (bvsub (let ((subject rsp)) rsp125) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp127) (bvadd (let ((subject rsp)) rsp126) ((_ int2bv 64) 8)))
  (and
  (and (= result166 xmm232)
  (= xmm234 (bvxor (t__content3 xmm232) (t__content3 xmm232))))
  (and
  (and
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp128)))
  (not (= i (bvadd (let ((subject rsp)) rsp128) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp128) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp128) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp128) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp128) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp128) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp128) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory45) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory44) i))))))
  (= (let ((subject rsp)) rsp128) (let ((subject rsp)) rsp127)))
  (and
  (= (writereg32post (let ((subject rdi)) rdi101) ((_ int2bv 32) 4198736)) true)
  (and
  (= (writereg32post (let ((subject rbx)) rbx86) ((_ int2bv 32) 361)) true)
  (and
  (and (= result167 (let ((subject rsp)) (mk_t__ref3 rsp128)))
  (= (let ((subject rsp)) rsp129) (bvsub (let ((subject rsp)) rsp128) ((_ int2bv 64) 8))))
  (and
  (= (let ((subject rsp)) rsp130) (bvadd (let ((subject rsp)) rsp129) ((_ int2bv 64) 8)))
  (and
  (and (= result168 (mk_t__ref3 xmm235)) (= xmm236 (bvxor xmm235 xmm235)))
  (and
  (and
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (let ((subject rsp)) rsp131)))
  (not (= i (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory46) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory45) i))))))
  (= (let ((subject rsp)) rsp131) (let ((subject rsp)) rsp130)))
  (and
  (and (= result169 (let ((subject rsp)) (mk_t__ref3 rsp131)))
  (= (let ((subject rsp)) rsp132) (bvadd (let ((subject rsp)) rsp131) ((_ int2bv 64) 104))))
  (and (= (writereg32post rax88 ((_ int2bv 32) 0)) true)
  (and
  (and
  (and
  (= o223 (readmem64 (bvadd (let ((subject rsp)) rsp132) ((_ int2bv 64) 0))
          (let ((subject memory)) memory46)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o223 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory46) (bvadd
                                                          (let ((subject
                                                          rsp)) rsp132) ((_ int2bv 64) 0))))))
  (= (bvand o223 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory46) (bvadd (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp132) ((_ int2bv 64) 0)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o223 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp132) ((_ int2bv 64) 0)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o223 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp132) ((_ int2bv 64) 0)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o223 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp132) ((_ int2bv 64) 0)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o223 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp132) ((_ int2bv 64) 0)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o223 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp132) ((_ int2bv 64) 0)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o223 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp132) ((_ int2bv 64) 0)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result170 (let ((subject rbx)) (mk_t__ref3 rbx87)))
  (= (let ((subject rbx)) rbx88) o223)))
  (and
  (and (= result171 (let ((subject rsp)) (mk_t__ref3 rsp132)))
  (= (let ((subject rsp)) rsp133) (bvadd (let ((subject rsp)) rsp132) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (= o224 (readmem64 (bvadd (let ((subject rsp)) rsp133) ((_ int2bv 64) 0))
          (let ((subject memory)) memory46)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o224 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory46) (bvadd
                                                          (let ((subject
                                                          rsp)) rsp133) ((_ int2bv 64) 0))))))
  (= (bvand o224 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory46) (bvadd (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp133) ((_ int2bv 64) 0)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o224 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp133) ((_ int2bv 64) 0)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o224 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp133) ((_ int2bv 64) 0)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o224 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp133) ((_ int2bv 64) 0)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o224 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp133) ((_ int2bv 64) 0)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o224 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp133) ((_ int2bv 64) 0)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o224 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp133) ((_ int2bv 64) 0)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result172 (let ((subject rbp)) (mk_t__ref3 rbp84)))
  (= (let ((subject rbp)) rbp85) o224)))
  (and
  (and (= result173 (let ((subject rsp)) (mk_t__ref3 rsp133)))
  (= (let ((subject rsp)) rsp134) (bvadd (let ((subject rsp)) rsp133) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (= o225 (readmem64 (bvadd (let ((subject rsp)) rsp134) ((_ int2bv 64) 0))
          (let ((subject memory)) memory46)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o225 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory46) (bvadd
                                                          (let ((subject
                                                          rsp)) rsp134) ((_ int2bv 64) 0))))))
  (= (bvand o225 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory46) (bvadd (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp134) ((_ int2bv 64) 0)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o225 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp134) ((_ int2bv 64) 0)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o225 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp134) ((_ int2bv 64) 0)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o225 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp134) ((_ int2bv 64) 0)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o225 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp134) ((_ int2bv 64) 0)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o225 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp134) ((_ int2bv 64) 0)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o225 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp134) ((_ int2bv 64) 0)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result174 r1229) (= (let ((subject r12)) r1231) o225)))
  (and
  (and (= result175 (let ((subject rsp)) (mk_t__ref3 rsp134)))
  (= (let ((subject rsp)) rsp135) (bvadd (let ((subject rsp)) rsp134) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (= o226 (readmem64 (bvadd (let ((subject rsp)) rsp135) ((_ int2bv 64) 0))
          (let ((subject memory)) memory46)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o226 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory46) (bvadd
                                                          (let ((subject
                                                          rsp)) rsp135) ((_ int2bv 64) 0))))))
  (= (bvand o226 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory46) (bvadd (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp135) ((_ int2bv 64) 0)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o226 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp135) ((_ int2bv 64) 0)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o226 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp135) ((_ int2bv 64) 0)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o226 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp135) ((_ int2bv 64) 0)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o226 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp135) ((_ int2bv 64) 0)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o226 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp135) ((_ int2bv 64) 0)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o226 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp135) ((_ int2bv 64) 0)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result176 r1322) (= (let ((subject r13)) r1324) o226)))
  (and
  (and (= result177 (let ((subject rsp)) (mk_t__ref3 rsp135)))
  (= (let ((subject rsp)) rsp136) (bvadd (let ((subject rsp)) rsp135) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (= o227 (readmem64 (bvadd (let ((subject rsp)) rsp136) ((_ int2bv 64) 0))
          (let ((subject memory)) memory46)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o227 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory46) (bvadd
                                                          (let ((subject
                                                          rsp)) rsp136) ((_ int2bv 64) 0))))))
  (= (bvand o227 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory46) (bvadd (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp136) ((_ int2bv 64) 0)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o227 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp136) ((_ int2bv 64) 0)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o227 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp136) ((_ int2bv 64) 0)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o227 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp136) ((_ int2bv 64) 0)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o227 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp136) ((_ int2bv 64) 0)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o227 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp136) ((_ int2bv 64) 0)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o227 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp136) ((_ int2bv 64) 0)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result178 r1415) (= (let ((subject r14)) r1417) o227)))
  (and
  (and (= result179 (let ((subject rsp)) (mk_t__ref3 rsp136)))
  (= (let ((subject rsp)) rsp137) (bvadd (let ((subject rsp)) rsp136) ((_ int2bv 64) 8))))
  (and
  (and
  (and
  (= o228 (readmem64 (bvadd (let ((subject rsp)) rsp137) ((_ int2bv 64) 0))
          (let ((subject memory)) memory46)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o228 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory46) (bvadd
                                                          (let ((subject
                                                          rsp)) rsp137) ((_ int2bv 64) 0))))))
  (= (bvand o228 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory46) (bvadd (bvadd
                                                                   (let ((subject
                                                                   rsp))
                                                                   rsp137) ((_ int2bv 64) 0)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o228 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp137) ((_ int2bv 64) 0)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o228 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp137) ((_ int2bv 64) 0)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o228 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp137) ((_ int2bv 64) 0)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o228 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp137) ((_ int2bv 64) 0)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o228 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp137) ((_ int2bv 64) 0)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o228 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory46) (bvadd (bvadd (let ((subject
                                                          rsp)) rsp137) ((_ int2bv 64) 0)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result180 r158) (= (let ((subject r15)) r1510) o228)))
  (and
  (and (= result181 (let ((subject rsp)) (mk_t__ref3 rsp137)))
  (= (let ((subject rsp)) rsp138) (bvadd (let ((subject rsp)) rsp137) ((_ int2bv 64) 8))))
  (and (= result182 (let ((subject rsp)) (mk_t__ref3 rsp138)))
  (= (let ((subject rsp)) rsp139) (bvadd (let ((subject rsp)) rsp138) ((_ int2bv 64) 8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  (and
  (and (= saver152 (let ((subject saver15)) (mk_t__ref3 saver151)))
  (and (= saver142 (let ((subject saver14)) (mk_t__ref3 saver141)))
  (and (= saver132 (let ((subject saver13)) (mk_t__ref3 saver131)))
  (and (= saver122 (let ((subject saver12)) (mk_t__ref3 saver121)))
  (and (= saverbp2 (let ((subject saverbp)) (mk_t__ref3 saverbp1)))
  (and (= saverbx2 (let ((subject saverbx)) (mk_t__ref3 saverbx1)))
  (and (= ra72 (let ((subject ra7)) (mk_t__ref ra71)))
  (and (= ra62 (let ((subject ra6)) (mk_t__ref ra61)))
  (and (= ra52 (let ((subject ra5)) (mk_t__ref ra51)))
  (and (= ra42 (let ((subject ra4)) (mk_t__ref ra41)))
  (and (= ra32 (let ((subject ra3)) (mk_t__ref ra31)))
  (and (= ra22 (let ((subject ra2)) (mk_t__ref ra21)))
  (and (= ra12 (let ((subject ra1)) (mk_t__ref ra11)))
  (and (= ra02 (let ((subject ra0)) (mk_t__ref ra01)))
  (and
  (= savestackptr2 (let ((subject savestackptr)) (mk_t__ref3 savestackptr1)))
  (and (= memory47 (let ((subject memory)) (mk_map__ref memory46)))
  (and (= r1511 (let ((subject r15)) (mk_t__ref3 r1510)))
  (and (= r1418 (let ((subject r14)) (mk_t__ref3 r1417)))
  (and (= r1325 (let ((subject r13)) (mk_t__ref3 r1324)))
  (and (= r1232 (let ((subject r12)) (mk_t__ref3 r1231)))
  (and (= r83 (let ((subject r8)) (mk_t__ref3 r82)))
  (and (= rdi103 (let ((subject rdi)) (mk_t__ref3 rdi102)))
  (and (= rsi38 (let ((subject rsi)) (mk_t__ref3 rsi37)))
  (and (= rbp86 (let ((subject rbp)) (mk_t__ref3 rbp85)))
  (and (= rsp140 (let ((subject rsp)) (mk_t__ref3 rsp139)))
  (and (= rbx89 (let ((subject rbx)) (mk_t__ref3 rbx88)))
  (and (= rdx5 (mk_t__ref3 rdx4))
  (and (= rcx4 (mk_t__ref3 rcx3))
  (and (= rax89 (mk_t__ref3 rax88))
  (and (= xmm727 xmm725)
  (and (= xmm618 xmm616)
  (and (= xmm524 xmm522)
  (and (= xmm431 xmm429)
  (and (= xmm334 xmm332)
  (and (= xmm238 (mk_t__ref3 xmm237))
  (and (= xmm136 (mk_t__ref3 xmm135))
  (and (= xmm084 (mk_t__ref3 xmm083))
  (and (= overflowflag83 (mk_bool__ref overflowflag82))
  (and (= signflag83 (mk_bool__ref signflag82))
  (and (= carryflag83 (mk_bool__ref carryflag82))
  (and (= zeroflag87 (mk_bool__ref zeroflag86))
  (= exit_called1 (mk_bool__ref exit_called)))))))))))))))))))))))))))))))))))))))))))
  (and (= saver153 saver151)
  (and (= saver143 saver141)
  (and (= saver133 saver131)
  (and (= saver123 saver121)
  (and (= saverbp3 saverbp1)
  (and (= saverbx3 saverbx1)
  (and (= ra73 ra71)
  (and (= ra63 ra61)
  (and (= ra53 ra51)
  (and (= ra43 ra41)
  (and (= ra33 ra31)
  (and (= ra23 ra21)
  (and (= ra13 ra11)
  (and (= ra03 ra01)
  (and (= savestackptr3 savestackptr1)
  (and (= memory48 memory46)
  (and (= r1512 r1510)
  (and (= r1419 r1417)
  (and (= r1326 r1324)
  (and (= r1233 r1231)
  (and (= r84 r82)
  (and (= rdi104 rdi102)
  (and (= rsi39 rsi37)
  (and (= rbp87 rbp85)
  (and (= rsp141 rsp139)
  (and (= rbx90 rbx88)
  (and (= rdx6 rdx4)
  (and (= rcx5 rcx3)
  (and (= rax90 rax88)
  (and (= xmm728 xmm726)
  (and (= xmm619 xmm617)
  (and (= xmm525 xmm523)
  (and (= xmm432 xmm430)
  (and (= xmm335 xmm333)
  (and (= xmm239 xmm237)
  (and (= xmm137 xmm135)
  (and (= xmm085 xmm083)
  (and (= overflowflag84 overflowflag82)
  (and (= signflag84 signflag82)
  (and (= carryflag84 carryflag82)
  (and (= zeroflag88 zeroflag86) (= exit_called2 exit_called)))))))))))))))))))))))))))))))))))))))))))))

(assert
;; WP_parameter_def
 ;; File "x86.ads", line 334, characters 0-0
  (not (= (t__content3 rsp140) (bvadd (t__content3 rsp) ((_ int2bv 64) 8)))))
(check-sat)
(exit)
