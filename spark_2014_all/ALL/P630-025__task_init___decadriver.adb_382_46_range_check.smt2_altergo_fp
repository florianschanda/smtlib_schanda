(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type t

logic tqtint : t -> int

axiom tqtaxiom : (forall i:t. ((0 <= tqtint(i)) and (tqtint(i) <= 255)))

logic nth : t, int -> bool

axiom nth_out_of_bound :
  (forall x:t. forall n:int. (((n <  0) or (8 <= n)) -> (nth(x, n) = false)))

logic zeros : t

axiom Nth_zeros : (forall n:int. (nth(zeros, n) = false))

logic one : t

logic ones : t

axiom Nth_ones :
  (forall n:int. (((0 <= n) and (n <  8)) -> (nth(ones, n) = true)))

logic bw_and : t, t -> t

axiom Nth_bw_and :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_and(v1, v2), n) = match_bool(nth(v1, n), nth(v2, n), false))))

logic bw_or : t, t -> t

axiom Nth_bw_or :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_or(v1, v2), n) = match_bool(nth(v1, n), true, nth(v2, n)))))

logic bw_xor : t, t -> t

axiom Nth_bw_xor :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_xor(v1, v2), n) = xorb(nth(v1, n), nth(v2, n)))))

logic bw_not : t -> t

axiom Nth_bw_not :
  (forall v:t. forall n:int. (((0 <= n) and (n <  8)) -> (nth(bw_not(v),
  n) = match_bool(nth(v, n), false, true))))

logic lsr : t, int -> t

axiom Lsr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  8) -> (nth(lsr(b, s), n) = nth(b, (n + s)))))))

axiom Lsr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((8 <= (n + s)) -> (nth(lsr(b, s), n) = false)))))

axiom lsr_zeros : (forall x:t. (lsr(x, 0) = x))

logic asr : t, int -> t

axiom Asr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  8)) -> (((n + s) <  8) -> (nth(asr(b, s), n) = nth(b, (n + s)))))))

axiom Asr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  8)) -> ((8 <= (n + s)) -> (nth(asr(b, s), n) = nth(b, (8 - 1)))))))

axiom asr_zeros : (forall x:t. (asr(x, 0) = x))

logic lsl : t, int -> t

axiom Lsl_nth_high :
  (forall b:t. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  8))) -> (nth(lsl(b, s), n) = nth(b, (n - s)))))

axiom Lsl_nth_low :
  (forall b:t. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth(lsl(b, s), n) = false)))

axiom lsl_zeros : (forall x:t. (lsl(x, 0) = x))

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((0 <= (x % y)) and
  ((x % y) <  abs_int(y)))))

axiom Div_unique :
  (forall x:int. forall y:int. forall q:int. ((0 <  y) ->
  ((((q * y) <= x) and (x <  ((q * y) + y))) -> ((x / y) = q))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= (x / y)) and ((x / y) <= x))))

axiom Mod_1 : (forall x:int. ((x % 1) = 0))

axiom Div_1 : (forall x:int. ((x / 1) = x))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (-1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((-1) / y) = (-1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left :
  (forall y:int [((-1) % y)]. ((1 <  y) -> (((-1) % y) = (y - 1))))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) / x)].
  ((0 <  x) -> ((((x * y) + z) / x) = (y + (z / x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) % x)].
  ((0 <  x) -> ((((x * y) + z) % x) = (z % x))))

logic rotate_right : t, int -> t

axiom Nth_rotate_right :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  8)) ->
  ((0 <= n) -> (nth(rotate_right(v, n), i) = nth(v, ((i + n) % 8))))))

logic rotate_left : t, int -> t

axiom Nth_rotate_left :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  8)) ->
  ((0 <= n) -> (nth(rotate_left(v, n), i) = nth(v, ((i - n) % 8))))))

logic pow2 : int -> int

axiom Power_0 : (pow2(0) = 1)

axiom Power_s : (forall n:int. ((0 <= n) -> (pow2((n + 1)) = (2 * pow2(n)))))

axiom Power_1 : (pow2(1) = 2)

axiom Power_sum :
  (forall n:int. forall m:int. (((0 <= n) and (0 <= m)) ->
  (pow2((n + m)) = (pow2(n) * pow2(m)))))

axiom pow2pos : (forall i:int. ((0 <= i) -> (0 <  pow2(i))))

axiom pow2_0 : (pow2(0) = 1)

axiom pow2_1 : (pow2(1) = 2)

axiom pow2_2 : (pow2(2) = 4)

axiom pow2_3 : (pow2(3) = 8)

axiom pow2_4 : (pow2(4) = 16)

axiom pow2_5 : (pow2(5) = 32)

axiom pow2_6 : (pow2(6) = 64)

axiom pow2_7 : (pow2(7) = 128)

axiom pow2_8 : (pow2(8) = 256)

axiom pow2_9 : (pow2(9) = 512)

axiom pow2_10 : (pow2(10) = 1024)

axiom pow2_11 : (pow2(11) = 2048)

axiom pow2_12 : (pow2(12) = 4096)

axiom pow2_13 : (pow2(13) = 8192)

axiom pow2_14 : (pow2(14) = 16384)

axiom pow2_15 : (pow2(15) = 32768)

axiom pow2_16 : (pow2(16) = 65536)

axiom pow2_17 : (pow2(17) = 131072)

axiom pow2_18 : (pow2(18) = 262144)

axiom pow2_19 : (pow2(19) = 524288)

axiom pow2_20 : (pow2(20) = 1048576)

axiom pow2_21 : (pow2(21) = 2097152)

axiom pow2_22 : (pow2(22) = 4194304)

axiom pow2_23 : (pow2(23) = 8388608)

axiom pow2_24 : (pow2(24) = 16777216)

axiom pow2_25 : (pow2(25) = 33554432)

axiom pow2_26 : (pow2(26) = 67108864)

axiom pow2_27 : (pow2(27) = 134217728)

axiom pow2_28 : (pow2(28) = 268435456)

axiom pow2_29 : (pow2(29) = 536870912)

axiom pow2_30 : (pow2(30) = 1073741824)

axiom pow2_31 : (pow2(31) = 2147483648)

axiom pow2_32 : (pow2(32) = 4294967296)

axiom pow2_33 : (pow2(33) = 8589934592)

axiom pow2_34 : (pow2(34) = 17179869184)

axiom pow2_35 : (pow2(35) = 34359738368)

axiom pow2_36 : (pow2(36) = 68719476736)

axiom pow2_37 : (pow2(37) = 137438953472)

axiom pow2_38 : (pow2(38) = 274877906944)

axiom pow2_39 : (pow2(39) = 549755813888)

axiom pow2_40 : (pow2(40) = 1099511627776)

axiom pow2_41 : (pow2(41) = 2199023255552)

axiom pow2_42 : (pow2(42) = 4398046511104)

axiom pow2_43 : (pow2(43) = 8796093022208)

axiom pow2_44 : (pow2(44) = 17592186044416)

axiom pow2_45 : (pow2(45) = 35184372088832)

axiom pow2_46 : (pow2(46) = 70368744177664)

axiom pow2_47 : (pow2(47) = 140737488355328)

axiom pow2_48 : (pow2(48) = 281474976710656)

axiom pow2_49 : (pow2(49) = 562949953421312)

axiom pow2_50 : (pow2(50) = 1125899906842624)

axiom pow2_51 : (pow2(51) = 2251799813685248)

axiom pow2_52 : (pow2(52) = 4503599627370496)

axiom pow2_53 : (pow2(53) = 9007199254740992)

axiom pow2_54 : (pow2(54) = 18014398509481984)

axiom pow2_55 : (pow2(55) = 36028797018963968)

axiom pow2_56 : (pow2(56) = 72057594037927936)

axiom pow2_57 : (pow2(57) = 144115188075855872)

axiom pow2_58 : (pow2(58) = 288230376151711744)

axiom pow2_59 : (pow2(59) = 576460752303423488)

axiom pow2_60 : (pow2(60) = 1152921504606846976)

axiom pow2_61 : (pow2(61) = 2305843009213693952)

axiom pow2_62 : (pow2(62) = 4611686018427387904)

axiom pow2_63 : (pow2(63) = 9223372036854775808)

axiom pow2_64 : (pow2(64) = 18446744073709551616)

logic to_int : t -> int

logic of_int : int -> t

axiom to_uint_extensionality :
  (forall v:t. forall vqt:t. ((tqtint(v) = tqtint(vqt)) -> (v = vqt)))

axiom to_int_extensionality :
  (forall v:t. forall vqt:t. ((to_int(v) = to_int(vqt)) -> (v = vqt)))

predicate uint_in_range(i: int) = ((0 <= i) and (i <= 255))

axiom to_uint_bounds :
  (forall v:t. ((0 <= tqtint(v)) and (tqtint(v) <  256)))

axiom to_uint_of_int :
  (forall i:int. (((0 <= i) and (i <  256)) -> (tqtint(of_int(i)) = i)))

logic size_bv : t

axiom to_uint_size_bv : (tqtint(size_bv) = 8)

axiom to_uint_zeros : (tqtint(zeros) = 0)

axiom to_uint_one : (tqtint(one) = 1)

axiom to_uint_ones : (tqtint(ones) = 255)

predicate ult(x: t, y: t) = (tqtint(x) <  tqtint(y))

predicate ule(x: t, y: t) = (tqtint(x) <= tqtint(y))

predicate ugt(x: t, y: t) = (tqtint(y) <  tqtint(x))

predicate uge(x: t, y: t) = (tqtint(y) <= tqtint(x))

predicate slt(v1: t, v2: t) = (to_int(v1) <  to_int(v2))

predicate sle(v1: t, v2: t) = (to_int(v1) <= to_int(v2))

predicate sgt(v1: t, v2: t) = (to_int(v2) <  to_int(v1))

predicate sge(v1: t, v2: t) = (to_int(v2) <= to_int(v1))

logic add : t, t -> t

axiom to_uint_add_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) + tqtint(v2)) <  256) ->
  (tqtint(add(v1, v2)) = (tqtint(v1) + tqtint(v2)))))

logic sub : t, t -> t

axiom to_uint_sub_bounded :
  (forall v1:t. forall v2:t. (((0 <= (tqtint(v1) - tqtint(v2))) and
  ((tqtint(v1) - tqtint(v2)) <  256)) -> (tqtint(sub(v1,
  v2)) = (tqtint(v1) - tqtint(v2)))))

logic neg : t -> t

axiom to_uint_neg : (forall v:t. (tqtint(neg(v)) = ((-tqtint(v)) % 256)))

logic mul : t, t -> t

axiom to_uint_mul_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) * tqtint(v2)) <  256) ->
  (tqtint(mul(v1, v2)) = (tqtint(v1) * tqtint(v2)))))

logic udiv : t, t -> t

axiom to_uint_udiv :
  (forall v1:t. forall v2:t. (tqtint(udiv(v1,
  v2)) = (tqtint(v1) / tqtint(v2))))

logic urem : t, t -> t

axiom to_uint_urem :
  (forall v1:t. forall v2:t. (tqtint(urem(v1,
  v2)) = (tqtint(v1) % tqtint(v2))))

logic lsr_bv : t, t -> t

axiom lsr_bv_is_lsr :
  (forall x:t. forall n:t. (lsr_bv(x, n) = lsr(x, tqtint(n))))

axiom to_uint_lsr :
  (forall v:t. forall n:t. (tqtint(lsr_bv(v,
  n)) = (tqtint(v) / pow2(tqtint(n)))))

logic asr_bv : t, t -> t

axiom asr_bv_is_asr :
  (forall x:t. forall n:t. (asr_bv(x, n) = asr(x, tqtint(n))))

logic lsl_bv : t, t -> t

axiom lsl_bv_is_lsl :
  (forall x:t. forall n:t. (lsl_bv(x, n) = lsl(x, tqtint(n))))

axiom to_uint_lsl :
  (forall v:t. forall n:t. (tqtint(lsl_bv(v,
  n)) = ((tqtint(v) * pow2(tqtint(n))) % 256)))

logic rotate_right_bv : t, t -> t

logic rotate_left_bv : t, t -> t

axiom rotate_left_bv_is_rotate_left :
  (forall v:t. forall n:t. (rotate_left_bv(v, n) = rotate_left(v,
  tqtint(n))))

axiom rotate_right_bv_is_rotate_right :
  (forall v:t. forall n:t. (rotate_right_bv(v, n) = rotate_right(v,
  tqtint(n))))

logic nth_bv : t, t -> bool

axiom Nth_bv_is_nth :
  (forall x:t. forall i:t. (nth(x, tqtint(i)) = nth_bv(x, i)))

axiom Nth_bv_is_nth2 :
  (forall x:t. forall i:int. (((0 <= i) and (i <  256)) -> (nth_bv(x,
  of_int(i)) = nth(x, i))))

logic eq_sub_bv : t, t, t, t -> prop

predicate eq_sub(a: t, b: t, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth(a, j) = nth(b, j))))

axiom eq_sub_equiv :
  (forall a:t. forall b:t. forall i:t. forall n:t. (eq_sub(a, b, tqtint(i),
  tqtint(n)) <-> eq_sub_bv(a, b, i, n)))

axiom Extensionality :
  (forall x:t. forall y:t [eq_sub(x, y, 0, 8)]. (eq_sub(x, y, 0, 8) ->
  (x = y)))

type t__ref = { t__content : t
}

logic bool_eq : t, t -> bool

axiom bool_eq_def :
  (forall x:t. forall y:t [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic bool_ne : t, t -> bool

axiom bool_ne_def :
  (forall x:t. forall y:t [bool_ne(x, y)]. (((not (x = y)) -> (bool_ne(x,
  y) = true)) and ((x = y) -> (bool_ne(x, y) = false))))

logic bool_lt : t, t -> bool

axiom bool_lt_def :
  (forall x:t. forall y:t [bool_lt(x, y)]. ((ult(x, y) -> (bool_lt(x,
  y) = true)) and ((not ult(x, y)) -> (bool_lt(x, y) = false))))

logic bool_le : t, t -> bool

axiom bool_le_def :
  (forall x:t. forall y:t [bool_le(x, y)]. ((ule(x, y) -> (bool_le(x,
  y) = true)) and ((not ule(x, y)) -> (bool_le(x, y) = false))))

logic bool_gt : t, t -> bool

axiom bool_gt_def :
  (forall x:t. forall y:t [bool_gt(x, y)]. ((ugt(x, y) -> (bool_gt(x,
  y) = true)) and ((not ugt(x, y)) -> (bool_gt(x, y) = false))))

logic bool_ge : t, t -> bool

axiom bool_ge_def :
  (forall x:t. forall y:t [bool_ge(x, y)]. ((uge(x, y) -> (bool_ge(x,
  y) = true)) and ((not uge(x, y)) -> (bool_ge(x, y) = false))))

logic power : t, int -> t

axiom Power_01 : (forall x:t. (power(x, 0) = one))

axiom Power_11 : (forall x:t. (power(x, 1) = x))

axiom Power_s1 :
  (forall x:t. forall n:int. ((0 <= n) -> (power(x, (n + 1)) = mul(x,
  power(x, n)))))

axiom Power_s_alt :
  (forall x:t. forall n:int. ((0 <  n) -> (power(x, n) = mul(x, power(x,
  (n - 1))))))

axiom Power_sum1 :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n + m)) = mul(power(x, n), power(x, m))))))

axiom Power_mult :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n * m)) = power(power(x, n), m)))))

axiom Power_mult2 :
  (forall x:t. forall y:t. forall n:int. ((0 <= n) -> (power(mul(x, y),
  n) = mul(power(x, n), power(y, n)))))

logic bv_min : t, t -> t

axiom bv_min_def :
  (forall x:t. forall y:t [bv_min(x, y)]. ((ule(x, y) -> (bv_min(x,
  y) = x)) and ((not ule(x, y)) -> (bv_min(x, y) = y))))

logic bv_max : t, t -> t

axiom bv_max_def :
  (forall x:t. forall y:t [bv_max(x, y)]. ((ule(x, y) -> (bv_max(x,
  y) = y)) and ((not ule(x, y)) -> (bv_max(x, y) = x))))

logic min : int, int -> int

axiom min_def :
  (forall x:int. forall y:int [min(x, y)]. (((x <= y) -> (min(x, y) = x)) and
  ((not (x <= y)) -> (min(x, y) = y))))

logic max : int, int -> int

axiom max_def :
  (forall x:int. forall y:int [max(x, y)]. (((x <= y) -> (max(x, y) = y)) and
  ((not (x <= y)) -> (max(x, y) = x))))

axiom Min_r : (forall x:int. forall y:int. ((y <= x) -> (min(x, y) = y)))

axiom Max_l : (forall x:int. forall y:int. ((y <= x) -> (max(x, y) = x)))

axiom Min_comm : (forall x:int. forall y:int. (min(x, y) = min(y, x)))

axiom Max_comm : (forall x:int. forall y:int. (max(x, y) = max(y, x)))

axiom Min_assoc :
  (forall x:int. forall y:int. forall z:int. (min(min(x, y), z) = min(x,
  min(y, z))))

axiom Max_assoc :
  (forall x:int. forall y:int. forall z:int. (max(max(x, y), z) = max(x,
  max(y, z))))

axiom bv_min_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_min(x, y)) = min(tqtint(x),
  tqtint(y))))

axiom bv_max_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_max(x, y)) = max(tqtint(x),
  tqtint(y))))

type t1

logic tqtint1 : t1 -> int

axiom tqtaxiom1 :
  (forall i:t1. ((0 <= tqtint1(i)) and (tqtint1(i) <= 65535)))

logic nth1 : t1, int -> bool

axiom nth_out_of_bound1 :
  (forall x:t1. forall n:int. (((n <  0) or (16 <= n)) -> (nth1(x,
  n) = false)))

logic zeros1 : t1

axiom Nth_zeros1 : (forall n:int. (nth1(zeros1, n) = false))

logic one1 : t1

logic ones1 : t1

axiom Nth_ones1 :
  (forall n:int. (((0 <= n) and (n <  16)) -> (nth1(ones1, n) = true)))

logic bw_and1 : t1, t1 -> t1

axiom Nth_bw_and1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  16)) ->
  (nth1(bw_and1(v1, v2), n) = match_bool(nth1(v1, n), nth1(v2, n), false))))

logic bw_or1 : t1, t1 -> t1

axiom Nth_bw_or1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  16)) ->
  (nth1(bw_or1(v1, v2), n) = match_bool(nth1(v1, n), true, nth1(v2, n)))))

logic bw_xor1 : t1, t1 -> t1

axiom Nth_bw_xor1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  16)) ->
  (nth1(bw_xor1(v1, v2), n) = xorb(nth1(v1, n), nth1(v2, n)))))

logic bw_not1 : t1 -> t1

axiom Nth_bw_not1 :
  (forall v:t1. forall n:int. (((0 <= n) and (n <  16)) -> (nth1(bw_not1(v),
  n) = match_bool(nth1(v, n), false, true))))

logic lsr1 : t1, int -> t1

axiom Lsr_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  16) -> (nth1(lsr1(b, s), n) = nth1(b, (n + s)))))))

axiom Lsr_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((16 <= (n + s)) -> (nth1(lsr1(b, s), n) = false)))))

axiom lsr_zeros1 : (forall x:t1. (lsr1(x, 0) = x))

logic asr1 : t1, int -> t1

axiom Asr_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  16)) -> (((n + s) <  16) -> (nth1(asr1(b, s), n) = nth1(b,
  (n + s)))))))

axiom Asr_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  16)) -> ((16 <= (n + s)) -> (nth1(asr1(b, s), n) = nth1(b,
  (16 - 1)))))))

axiom asr_zeros1 : (forall x:t1. (asr1(x, 0) = x))

logic lsl1 : t1, int -> t1

axiom Lsl_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  16))) -> (nth1(lsl1(b, s), n) = nth1(b, (n - s)))))

axiom Lsl_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth1(lsl1(b, s), n) = false)))

axiom lsl_zeros1 : (forall x:t1. (lsl1(x, 0) = x))

logic rotate_right1 : t1, int -> t1

axiom Nth_rotate_right1 :
  (forall v:t1. forall n:int. forall i:int. (((0 <= i) and (i <  16)) ->
  ((0 <= n) -> (nth1(rotate_right1(v, n), i) = nth1(v, ((i + n) % 16))))))

logic rotate_left1 : t1, int -> t1

axiom Nth_rotate_left1 :
  (forall v:t1. forall n:int. forall i:int. (((0 <= i) and (i <  16)) ->
  ((0 <= n) -> (nth1(rotate_left1(v, n), i) = nth1(v, ((i - n) % 16))))))

logic to_int1 : t1 -> int

logic of_int1 : int -> t1

axiom to_uint_extensionality1 :
  (forall v:t1. forall vqt:t1. ((tqtint1(v) = tqtint1(vqt)) -> (v = vqt)))

axiom to_int_extensionality1 :
  (forall v:t1. forall vqt:t1. ((to_int1(v) = to_int1(vqt)) -> (v = vqt)))

predicate uint_in_range1(i: int) = ((0 <= i) and (i <= 65535))

axiom to_uint_bounds1 :
  (forall v:t1. ((0 <= tqtint1(v)) and (tqtint1(v) <  65536)))

axiom to_uint_of_int1 :
  (forall i:int. (((0 <= i) and (i <  65536)) -> (tqtint1(of_int1(i)) = i)))

logic size_bv1 : t1

axiom to_uint_size_bv1 : (tqtint1(size_bv1) = 16)

axiom to_uint_zeros1 : (tqtint1(zeros1) = 0)

axiom to_uint_one1 : (tqtint1(one1) = 1)

axiom to_uint_ones1 : (tqtint1(ones1) = 65535)

predicate ult1(x: t1, y: t1) = (tqtint1(x) <  tqtint1(y))

predicate ule1(x: t1, y: t1) = (tqtint1(x) <= tqtint1(y))

predicate ugt1(x: t1, y: t1) = (tqtint1(y) <  tqtint1(x))

predicate uge1(x: t1, y: t1) = (tqtint1(y) <= tqtint1(x))

predicate slt1(v1: t1, v2: t1) = (to_int1(v1) <  to_int1(v2))

predicate sle1(v1: t1, v2: t1) = (to_int1(v1) <= to_int1(v2))

predicate sgt1(v1: t1, v2: t1) = (to_int1(v2) <  to_int1(v1))

predicate sge1(v1: t1, v2: t1) = (to_int1(v2) <= to_int1(v1))

logic add1 : t1, t1 -> t1

axiom to_uint_add_bounded1 :
  (forall v1:t1. forall v2:t1. (((tqtint1(v1) + tqtint1(v2)) <  65536) ->
  (tqtint1(add1(v1, v2)) = (tqtint1(v1) + tqtint1(v2)))))

logic sub1 : t1, t1 -> t1

axiom to_uint_sub_bounded1 :
  (forall v1:t1. forall v2:t1. (((0 <= (tqtint1(v1) - tqtint1(v2))) and
  ((tqtint1(v1) - tqtint1(v2)) <  65536)) -> (tqtint1(sub1(v1,
  v2)) = (tqtint1(v1) - tqtint1(v2)))))

logic neg1 : t1 -> t1

axiom to_uint_neg1 :
  (forall v:t1. (tqtint1(neg1(v)) = ((-tqtint1(v)) % 65536)))

logic mul1 : t1, t1 -> t1

axiom to_uint_mul_bounded1 :
  (forall v1:t1. forall v2:t1. (((tqtint1(v1) * tqtint1(v2)) <  65536) ->
  (tqtint1(mul1(v1, v2)) = (tqtint1(v1) * tqtint1(v2)))))

logic udiv1 : t1, t1 -> t1

axiom to_uint_udiv1 :
  (forall v1:t1. forall v2:t1. (tqtint1(udiv1(v1,
  v2)) = (tqtint1(v1) / tqtint1(v2))))

logic urem1 : t1, t1 -> t1

axiom to_uint_urem1 :
  (forall v1:t1. forall v2:t1. (tqtint1(urem1(v1,
  v2)) = (tqtint1(v1) % tqtint1(v2))))

logic lsr_bv1 : t1, t1 -> t1

axiom lsr_bv_is_lsr1 :
  (forall x:t1. forall n:t1. (lsr_bv1(x, n) = lsr1(x, tqtint1(n))))

axiom to_uint_lsr1 :
  (forall v:t1. forall n:t1. (tqtint1(lsr_bv1(v,
  n)) = (tqtint1(v) / pow2(tqtint1(n)))))

logic asr_bv1 : t1, t1 -> t1

axiom asr_bv_is_asr1 :
  (forall x:t1. forall n:t1. (asr_bv1(x, n) = asr1(x, tqtint1(n))))

logic lsl_bv1 : t1, t1 -> t1

axiom lsl_bv_is_lsl1 :
  (forall x:t1. forall n:t1. (lsl_bv1(x, n) = lsl1(x, tqtint1(n))))

axiom to_uint_lsl1 :
  (forall v:t1. forall n:t1. (tqtint1(lsl_bv1(v,
  n)) = ((tqtint1(v) * pow2(tqtint1(n))) % 65536)))

logic rotate_right_bv1 : t1, t1 -> t1

logic rotate_left_bv1 : t1, t1 -> t1

axiom rotate_left_bv_is_rotate_left1 :
  (forall v:t1. forall n:t1. (rotate_left_bv1(v, n) = rotate_left1(v,
  tqtint1(n))))

axiom rotate_right_bv_is_rotate_right1 :
  (forall v:t1. forall n:t1. (rotate_right_bv1(v, n) = rotate_right1(v,
  tqtint1(n))))

logic nth_bv1 : t1, t1 -> bool

axiom Nth_bv_is_nth1 :
  (forall x:t1. forall i:t1. (nth1(x, tqtint1(i)) = nth_bv1(x, i)))

axiom Nth_bv_is_nth21 :
  (forall x:t1. forall i:int. (((0 <= i) and (i <  65536)) -> (nth_bv1(x,
  of_int1(i)) = nth1(x, i))))

logic eq_sub_bv1 : t1, t1, t1, t1 -> prop

predicate eq_sub1(a: t1, b: t1, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth1(a, j) = nth1(b,
  j))))

axiom eq_sub_equiv1 :
  (forall a:t1. forall b:t1. forall i:t1. forall n:t1. (eq_sub1(a, b,
  tqtint1(i), tqtint1(n)) <-> eq_sub_bv1(a, b, i, n)))

axiom Extensionality1 :
  (forall x:t1. forall y:t1 [eq_sub1(x, y, 0, 16)]. (eq_sub1(x, y, 0, 16) ->
  (x = y)))

type t__ref1 = { t__content1 : t1
}

logic bool_eq1 : t1, t1 -> bool

axiom bool_eq_def1 :
  (forall x:t1. forall y:t1 [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic bool_ne1 : t1, t1 -> bool

axiom bool_ne_def1 :
  (forall x:t1. forall y:t1 [bool_ne1(x, y)]. (((not (x = y)) -> (bool_ne1(x,
  y) = true)) and ((x = y) -> (bool_ne1(x, y) = false))))

logic bool_lt1 : t1, t1 -> bool

axiom bool_lt_def1 :
  (forall x:t1. forall y:t1 [bool_lt1(x, y)]. ((ult1(x, y) -> (bool_lt1(x,
  y) = true)) and ((not ult1(x, y)) -> (bool_lt1(x, y) = false))))

logic bool_le1 : t1, t1 -> bool

axiom bool_le_def1 :
  (forall x:t1. forall y:t1 [bool_le1(x, y)]. ((ule1(x, y) -> (bool_le1(x,
  y) = true)) and ((not ule1(x, y)) -> (bool_le1(x, y) = false))))

logic bool_gt1 : t1, t1 -> bool

axiom bool_gt_def1 :
  (forall x:t1. forall y:t1 [bool_gt1(x, y)]. ((ugt1(x, y) -> (bool_gt1(x,
  y) = true)) and ((not ugt1(x, y)) -> (bool_gt1(x, y) = false))))

logic bool_ge1 : t1, t1 -> bool

axiom bool_ge_def1 :
  (forall x:t1. forall y:t1 [bool_ge1(x, y)]. ((uge1(x, y) -> (bool_ge1(x,
  y) = true)) and ((not uge1(x, y)) -> (bool_ge1(x, y) = false))))

logic power1 : t1, int -> t1

axiom Power_02 : (forall x:t1. (power1(x, 0) = one1))

axiom Power_12 : (forall x:t1. (power1(x, 1) = x))

axiom Power_s2 :
  (forall x:t1. forall n:int. ((0 <= n) -> (power1(x, (n + 1)) = mul1(x,
  power1(x, n)))))

axiom Power_s_alt1 :
  (forall x:t1. forall n:int. ((0 <  n) -> (power1(x, n) = mul1(x, power1(x,
  (n - 1))))))

axiom Power_sum2 :
  (forall x:t1. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power1(x, (n + m)) = mul1(power1(x, n), power1(x, m))))))

axiom Power_mult1 :
  (forall x:t1. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power1(x, (n * m)) = power1(power1(x, n), m)))))

axiom Power_mult21 :
  (forall x:t1. forall y:t1. forall n:int. ((0 <= n) -> (power1(mul1(x, y),
  n) = mul1(power1(x, n), power1(y, n)))))

logic bv_min1 : t1, t1 -> t1

axiom bv_min_def1 :
  (forall x:t1. forall y:t1 [bv_min1(x, y)]. ((ule1(x, y) -> (bv_min1(x,
  y) = x)) and ((not ule1(x, y)) -> (bv_min1(x, y) = y))))

logic bv_max1 : t1, t1 -> t1

axiom bv_max_def1 :
  (forall x:t1. forall y:t1 [bv_max1(x, y)]. ((ule1(x, y) -> (bv_max1(x,
  y) = y)) and ((not ule1(x, y)) -> (bv_max1(x, y) = x))))

axiom bv_min_to_uint1 :
  (forall x:t1. forall y:t1. (tqtint1(bv_min1(x, y)) = min(tqtint1(x),
  tqtint1(y))))

axiom bv_max_to_uint1 :
  (forall x:t1. forall y:t1. (tqtint1(bv_max1(x, y)) = max(tqtint1(x),
  tqtint1(y))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq2 : bool, bool -> bool

axiom bool_eq_def2 :
  (forall x:bool. forall y:bool [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic to_int2 : bool -> int

axiom to_int_def :
  (forall b:bool [to_int2(b)]. (((b = true) -> (to_int2(b) = 1)) and
  ((not (b = true)) -> (to_int2(b) = 0))))

logic of_int2 : int -> bool

axiom of_int_def :
  (forall i:int [of_int2(i)]. (((i = 0) -> (of_int2(i) = false)) and
  ((not (i = 0)) -> (of_int2(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type bits_1

predicate in_range1(x: t) = (ule(of_int(0), x) and ule(x, of_int(1)))

predicate in_range_int(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq3 : int, int -> bool

logic bool_ne2 : int, int -> bool

logic bool_lt2 : int, int -> bool

logic bool_le2 : int, int -> bool

logic bool_gt2 : int, int -> bool

logic bool_ge2 : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq3(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne2(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt2(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le2(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt2(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge2(x, y) = true) <-> (y <= x))))

logic bool_eq4 : t, t -> bool

axiom bool_eq_def3 :
  (forall x:t. forall y:t [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> t

logic user_eq : bits_1, bits_1 -> bool

logic dummy : bits_1

type bits_1__ref = { bits_1__content : bits_1
}

function bits_1__ref___projection(a: bits_1__ref) : bits_1 =
  (a).bits_1__content

logic to_rep : bits_1 -> t

logic of_rep : t -> bits_1

axiom inversion_axiom :
  (forall x:bits_1 [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:bits_1 [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:t [to_rep(of_rep(x))]. (in_range1(urem(x, of_int(2))) ->
  (to_rep(of_rep(x)) = urem(x, of_int(2)))))

function to_int3(x: bits_1) : int = tqtint(to_rep(x))

axiom range_int_axiom :
  (forall x:bits_1 [to_int3(x)]. in_range_int(to_int3(x)))

type bits_2

predicate in_range2(x: t) = (ule(of_int(0), x) and ule(x, of_int(3)))

predicate in_range_int1(x: int) = ((0 <= x) and (x <= 3))

logic bool_eq5 : t, t -> bool

axiom bool_eq_def4 :
  (forall x:t. forall y:t [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> t

logic user_eq1 : bits_2, bits_2 -> bool

logic dummy1 : bits_2

type bits_2__ref = { bits_2__content : bits_2
}

function bits_2__ref___projection(a: bits_2__ref) : bits_2 =
  (a).bits_2__content

logic to_rep1 : bits_2 -> t

logic of_rep1 : t -> bits_2

axiom inversion_axiom1 :
  (forall x:bits_2 [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:bits_2 [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:t [to_rep1(of_rep1(x))]. (in_range2(urem(x, of_int(4))) ->
  (to_rep1(of_rep1(x)) = urem(x, of_int(4)))))

function to_int4(x: bits_2) : int = tqtint(to_rep1(x))

axiom range_int_axiom1 :
  (forall x:bits_2 [to_int4(x)]. in_range_int1(to_int4(x)))

type bits_3

predicate in_range3(x: t) = (ule(of_int(0), x) and ule(x, of_int(7)))

predicate in_range_int2(x: int) = ((0 <= x) and (x <= 7))

logic bool_eq6 : t, t -> bool

axiom bool_eq_def5 :
  (forall x:t. forall y:t [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> t

logic user_eq2 : bits_3, bits_3 -> bool

logic dummy2 : bits_3

type bits_3__ref = { bits_3__content : bits_3
}

function bits_3__ref___projection(a: bits_3__ref) : bits_3 =
  (a).bits_3__content

logic to_rep2 : bits_3 -> t

logic of_rep2 : t -> bits_3

axiom inversion_axiom2 :
  (forall x:bits_3 [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:bits_3 [to_rep2(x)]. in_range3(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:t [to_rep2(of_rep2(x))]. (in_range3(urem(x, of_int(8))) ->
  (to_rep2(of_rep2(x)) = urem(x, of_int(8)))))

function to_int5(x: bits_3) : int = tqtint(to_rep2(x))

axiom range_int_axiom2 :
  (forall x:bits_3 [to_int5(x)]. in_range_int2(to_int5(x)))

type bits_4

predicate in_range4(x: t) = (ule(of_int(0), x) and ule(x, of_int(15)))

predicate in_range_int3(x: int) = ((0 <= x) and (x <= 15))

logic bool_eq7 : t, t -> bool

axiom bool_eq_def6 :
  (forall x:t. forall y:t [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> t

logic user_eq3 : bits_4, bits_4 -> bool

logic dummy3 : bits_4

type bits_4__ref = { bits_4__content : bits_4
}

function bits_4__ref___projection(a: bits_4__ref) : bits_4 =
  (a).bits_4__content

logic to_rep3 : bits_4 -> t

logic of_rep3 : t -> bits_4

axiom inversion_axiom3 :
  (forall x:bits_4 [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:bits_4 [to_rep3(x)]. in_range4(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:t [to_rep3(of_rep3(x))]. (in_range4(urem(x, of_int(16))) ->
  (to_rep3(of_rep3(x)) = urem(x, of_int(16)))))

function to_int6(x: bits_4) : int = tqtint(to_rep3(x))

axiom range_int_axiom3 :
  (forall x:bits_4 [to_int6(x)]. in_range_int3(to_int6(x)))

type bits_5

predicate in_range5(x: t) = (ule(of_int(0), x) and ule(x, of_int(31)))

predicate in_range_int4(x: int) = ((0 <= x) and (x <= 31))

logic bool_eq8 : t, t -> bool

axiom bool_eq_def7 :
  (forall x:t. forall y:t [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> t

logic user_eq4 : bits_5, bits_5 -> bool

logic dummy4 : bits_5

type bits_5__ref = { bits_5__content : bits_5
}

function bits_5__ref___projection(a: bits_5__ref) : bits_5 =
  (a).bits_5__content

logic to_rep4 : bits_5 -> t

logic of_rep4 : t -> bits_5

axiom inversion_axiom4 :
  (forall x:bits_5 [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 : (forall x:bits_5 [to_rep4(x)]. in_range5(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:t [to_rep4(of_rep4(x))]. (in_range5(urem(x, of_int(32))) ->
  (to_rep4(of_rep4(x)) = urem(x, of_int(32)))))

function to_int7(x: bits_5) : int = tqtint(to_rep4(x))

axiom range_int_axiom4 :
  (forall x:bits_5 [to_int7(x)]. in_range_int4(to_int7(x)))

type bits_7

predicate in_range6(x: t) = (ule(of_int(0), x) and ule(x, of_int(127)))

predicate in_range_int5(x: int) = ((0 <= x) and (x <= 127))

logic bool_eq9 : t, t -> bool

axiom bool_eq_def8 :
  (forall x:t. forall y:t [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> t

logic user_eq5 : bits_7, bits_7 -> bool

logic dummy5 : bits_7

type bits_7__ref = { bits_7__content : bits_7
}

function bits_7__ref___projection(a: bits_7__ref) : bits_7 =
  (a).bits_7__content

logic to_rep5 : bits_7 -> t

logic of_rep5 : t -> bits_7

axiom inversion_axiom5 :
  (forall x:bits_7 [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 : (forall x:bits_7 [to_rep5(x)]. in_range6(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:t [to_rep5(of_rep5(x))]. (in_range6(urem(x, of_int(128))) ->
  (to_rep5(of_rep5(x)) = urem(x, of_int(128)))))

function to_int8(x: bits_7) : int = tqtint(to_rep5(x))

axiom range_int_axiom5 :
  (forall x:bits_7 [to_int8(x)]. in_range_int5(to_int8(x)))

type bits_8

logic attr__ATTRIBUTE_MODULUS : t

logic bool_eq10 : t, t -> bool

axiom bool_eq_def9 :
  (forall x:t. forall y:t [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> t

logic user_eq6 : bits_8, bits_8 -> bool

logic dummy6 : bits_8

type bits_8__ref = { bits_8__content : bits_8
}

function bits_8__ref___projection(a: bits_8__ref) : bits_8 =
  (a).bits_8__content

logic to_rep6 : bits_8 -> t

logic of_rep6 : t -> bits_8

axiom inversion_axiom6 :
  (forall x:bits_8 [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 : true

axiom coerce_axiom6 :
  (forall x:t [to_rep6(of_rep6(x))]. (to_rep6(of_rep6(x)) = x))

function to_int9(x: bits_8) : int = tqtint(to_rep6(x))

axiom range_int_axiom6 :
  (forall x:bits_8 [to_int9(x)]. uint_in_range(to_int9(x)))

type bits_9

predicate in_range7(x: t1) = (ule1(of_int1(0), x) and ule1(x, of_int1(511)))

predicate in_range_int6(x: int) = ((0 <= x) and (x <= 511))

logic bool_eq11 : t1, t1 -> bool

axiom bool_eq_def10 :
  (forall x:t1. forall y:t1 [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : t1 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> t1

logic user_eq7 : bits_9, bits_9 -> bool

logic dummy7 : bits_9

type bits_9__ref = { bits_9__content : bits_9
}

function bits_9__ref___projection(a: bits_9__ref) : bits_9 =
  (a).bits_9__content

logic to_rep7 : bits_9 -> t1

logic of_rep7 : t1 -> bits_9

axiom inversion_axiom7 :
  (forall x:bits_9 [to_rep7(x)]. (of_rep7(to_rep7(x)) = x))

axiom range_axiom7 : (forall x:bits_9 [to_rep7(x)]. in_range7(to_rep7(x)))

axiom coerce_axiom7 :
  (forall x:t1 [to_rep7(of_rep7(x))]. (in_range7(urem1(x, of_int1(512))) ->
  (to_rep7(of_rep7(x)) = urem1(x, of_int1(512)))))

function to_int10(x: bits_9) : int = tqtint1(to_rep7(x))

axiom range_int_axiom7 :
  (forall x:bits_9 [to_int10(x)]. in_range_int6(to_int10(x)))

type bits_10

predicate in_range8(x: t1) = (ule1(of_int1(0), x) and ule1(x, of_int1(1023)))

predicate in_range_int7(x: int) = ((0 <= x) and (x <= 1023))

logic bool_eq12 : t1, t1 -> bool

axiom bool_eq_def11 :
  (forall x:t1. forall y:t1 [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : t1 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> t1

logic user_eq8 : bits_10, bits_10 -> bool

logic dummy8 : bits_10

type bits_10__ref = { bits_10__content : bits_10
}

function bits_10__ref___projection(a: bits_10__ref) : bits_10 =
  (a).bits_10__content

logic to_rep8 : bits_10 -> t1

logic of_rep8 : t1 -> bits_10

axiom inversion_axiom8 :
  (forall x:bits_10 [to_rep8(x)]. (of_rep8(to_rep8(x)) = x))

axiom range_axiom8 : (forall x:bits_10 [to_rep8(x)]. in_range8(to_rep8(x)))

axiom coerce_axiom8 :
  (forall x:t1 [to_rep8(of_rep8(x))]. (in_range8(urem1(x, of_int1(1024))) ->
  (to_rep8(of_rep8(x)) = urem1(x, of_int1(1024)))))

function to_int11(x: bits_10) : int = tqtint1(to_rep8(x))

axiom range_int_axiom8 :
  (forall x:bits_10 [to_int11(x)]. in_range_int7(to_int11(x)))

type bits_16

logic attr__ATTRIBUTE_MODULUS1 : t1

logic bool_eq13 : t1, t1 -> bool

axiom bool_eq_def12 :
  (forall x:t1. forall y:t1 [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : t1 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> t1

logic user_eq9 : bits_16, bits_16 -> bool

logic dummy9 : bits_16

type bits_16__ref = { bits_16__content : bits_16
}

function bits_16__ref___projection(a: bits_16__ref) : bits_16 =
  (a).bits_16__content

logic to_rep9 : bits_16 -> t1

logic of_rep9 : t1 -> bits_16

axiom inversion_axiom9 :
  (forall x:bits_16 [to_rep9(x)]. (of_rep9(to_rep9(x)) = x))

axiom range_axiom9 : true

axiom coerce_axiom9 :
  (forall x:t1 [to_rep9(of_rep9(x))]. (to_rep9(of_rep9(x)) = x))

function to_int12(x: bits_16) : int = tqtint1(to_rep9(x))

axiom range_int_axiom9 :
  (forall x:bits_16 [to_int12(x)]. uint_in_range1(to_int12(x)))

type us_split_fields = { rec__dw1000__register_types__sys_cfg_type__ffen :
bits_1; rec__dw1000__register_types__sys_cfg_type__ffbc : bits_1;
rec__dw1000__register_types__sys_cfg_type__ffab : bits_1;
rec__dw1000__register_types__sys_cfg_type__ffad : bits_1;
rec__dw1000__register_types__sys_cfg_type__ffaa : bits_1;
rec__dw1000__register_types__sys_cfg_type__ffam : bits_1;
rec__dw1000__register_types__sys_cfg_type__ffar : bits_1;
rec__dw1000__register_types__sys_cfg_type__ffa4 : bits_1;
rec__dw1000__register_types__sys_cfg_type__ffa5 : bits_1;
rec__dw1000__register_types__sys_cfg_type__hirq_pol : bits_1;
rec__dw1000__register_types__sys_cfg_type__spi_edge : bits_1;
rec__dw1000__register_types__sys_cfg_type__dis_fce : bits_1;
rec__dw1000__register_types__sys_cfg_type__dis_drxb : bits_1;
rec__dw1000__register_types__sys_cfg_type__dis_phe : bits_1;
rec__dw1000__register_types__sys_cfg_type__dis_rsde : bits_1;
rec__dw1000__register_types__sys_cfg_type__fcs_int2f : bits_1;
rec__dw1000__register_types__sys_cfg_type__phr_mode : bits_2;
rec__dw1000__register_types__sys_cfg_type__dis_stxp : bits_1;
rec__dw1000__register_types__sys_cfg_type__rxm110k : bits_1;
rec__dw1000__register_types__sys_cfg_type__rxwtoe : bits_1;
rec__dw1000__register_types__sys_cfg_type__rxautr : bits_1;
rec__dw1000__register_types__sys_cfg_type__autoack : bits_1;
rec__dw1000__register_types__sys_cfg_type__aackpend : bits_1;
rec__dw1000__register_types__sys_cfg_type__reserved_1 : bits_3;
rec__dw1000__register_types__sys_cfg_type__reserved_2 : bits_5
}

function us_split_fields_FFEN__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffen

function us_split_fields_FFBC__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffbc

function us_split_fields_FFAB__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffab

function us_split_fields_FFAD__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffad

function us_split_fields_FFAA__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffaa

function us_split_fields_FFAM__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffam

function us_split_fields_FFAR__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffar

function us_split_fields_FFA4__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffa4

function us_split_fields_FFA5__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__ffa5

function us_split_fields_HIRQ_POL__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__hirq_pol

function us_split_fields_SPI_EDGE__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__spi_edge

function us_split_fields_DIS_FCE__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__dis_fce

function us_split_fields_DIS_DRXB__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__dis_drxb

function us_split_fields_DIS_PHE__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__dis_phe

function us_split_fields_DIS_RSDE__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__dis_rsde

function us_split_fields_FCS_INT2F__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__fcs_int2f

function us_split_fields_PHR_MODE__projection(a: us_split_fields) : bits_2 =
  (a).rec__dw1000__register_types__sys_cfg_type__phr_mode

function us_split_fields_DIS_STXP__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__dis_stxp

function us_split_fields_RXM110K__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__rxm110k

function us_split_fields_RXWTOE__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__rxwtoe

function us_split_fields_RXAUTR__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__rxautr

function us_split_fields_AUTOACK__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__autoack

function us_split_fields_AACKPEND__projection(a: us_split_fields) : bits_1 =
  (a).rec__dw1000__register_types__sys_cfg_type__aackpend

function us_split_fields_Reserved_1__projection(a: us_split_fields) : bits_3 =
  (a).rec__dw1000__register_types__sys_cfg_type__reserved_1

function us_split_fields_Reserved_2__projection(a: us_split_fields) : bits_5 =
  (a).rec__dw1000__register_types__sys_cfg_type__reserved_2

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___4__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___4__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq14 : us_rep, us_rep -> bool

axiom bool_eq_def13 :
  (forall a:us_rep. forall b:us_rep [bool_eq14(a, b)].
  (((((((((((((((((((((((((((to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffen) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffen)) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffbc) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffbc))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffab) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffab))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffad) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffad))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffaa) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffaa))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffam) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffam))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffar) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffar))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa4) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa4))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa5) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa5))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__hirq_pol) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__hirq_pol))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__spi_edge) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__spi_edge))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_fce) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_fce))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_drxb) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_drxb))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_phe) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_phe))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_rsde) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_rsde))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__fcs_int2f) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__fcs_int2f))) and
  (to_rep1(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__phr_mode) = to_rep1(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__phr_mode))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_stxp) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_stxp))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxm110k) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxm110k))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxwtoe) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxwtoe))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxautr) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxautr))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__autoack) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__autoack))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__aackpend) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__aackpend))) and
  (to_rep2(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_1) = to_rep2(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_1))) and
  (to_rep4(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_2) = to_rep4(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_2))) ->
  (bool_eq14(a, b) = true)) and
  ((not (((((((((((((((((((((((((to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffen) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffen)) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffbc) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffbc))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffab) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffab))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffad) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffad))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffaa) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffaa))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffam) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffam))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffar) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffar))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa4) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa4))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa5) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa5))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__hirq_pol) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__hirq_pol))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__spi_edge) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__spi_edge))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_fce) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_fce))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_drxb) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_drxb))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_phe) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_phe))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_rsde) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_rsde))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__fcs_int2f) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__fcs_int2f))) and
  (to_rep1(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__phr_mode) = to_rep1(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__phr_mode))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_stxp) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_stxp))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxm110k) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxm110k))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxwtoe) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxwtoe))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxautr) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxautr))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__autoack) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__autoack))) and
  (to_rep(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__aackpend) = to_rep(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__aackpend))) and
  (to_rep2(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_1) = to_rep2(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_1))) and
  (to_rep4(((a).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_2) = to_rep4(((b).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_2)))) ->
  (bool_eq14(a, b) = false))))

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (forall a:us_rep. (0 <= object__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:us_rep. (0 <= object__alignment(a)))

logic dw1000__register_types__sys_cfg_type__ffen__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffen__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffen__position : int

axiom dw1000__register_types__sys_cfg_type__ffen__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffen__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffen__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffen__first__bit <  dw1000__register_types__sys_cfg_type__ffen__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffen__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffen__position)

logic dw1000__register_types__sys_cfg_type__ffbc__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffbc__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffbc__position : int

axiom dw1000__register_types__sys_cfg_type__ffbc__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffbc__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffbc__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffbc__first__bit <  dw1000__register_types__sys_cfg_type__ffbc__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffbc__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffbc__position)

logic dw1000__register_types__sys_cfg_type__ffab__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffab__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffab__position : int

axiom dw1000__register_types__sys_cfg_type__ffab__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffab__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffab__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffab__first__bit <  dw1000__register_types__sys_cfg_type__ffab__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffab__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffab__position)

logic dw1000__register_types__sys_cfg_type__ffad__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffad__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffad__position : int

axiom dw1000__register_types__sys_cfg_type__ffad__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffad__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffad__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffad__first__bit <  dw1000__register_types__sys_cfg_type__ffad__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffad__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffad__position)

logic dw1000__register_types__sys_cfg_type__ffaa__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffaa__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffaa__position : int

axiom dw1000__register_types__sys_cfg_type__ffaa__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffaa__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffaa__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffaa__first__bit <  dw1000__register_types__sys_cfg_type__ffaa__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffaa__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffaa__position)

logic dw1000__register_types__sys_cfg_type__ffam__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffam__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffam__position : int

axiom dw1000__register_types__sys_cfg_type__ffam__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffam__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffam__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffam__first__bit <  dw1000__register_types__sys_cfg_type__ffam__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffam__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffam__position)

logic dw1000__register_types__sys_cfg_type__ffar__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffar__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffar__position : int

axiom dw1000__register_types__sys_cfg_type__ffar__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffar__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffar__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffar__first__bit <  dw1000__register_types__sys_cfg_type__ffar__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffar__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffar__position)

logic dw1000__register_types__sys_cfg_type__ffa4__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffa4__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffa4__position : int

axiom dw1000__register_types__sys_cfg_type__ffa4__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffa4__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffa4__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffa4__first__bit <  dw1000__register_types__sys_cfg_type__ffa4__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffa4__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffa4__position)

logic dw1000__register_types__sys_cfg_type__ffa5__first__bit : int

logic dw1000__register_types__sys_cfg_type__ffa5__last__bit : int

logic dw1000__register_types__sys_cfg_type__ffa5__position : int

axiom dw1000__register_types__sys_cfg_type__ffa5__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffa5__first__bit)

axiom dw1000__register_types__sys_cfg_type__ffa5__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__ffa5__first__bit <  dw1000__register_types__sys_cfg_type__ffa5__last__bit)

axiom dw1000__register_types__sys_cfg_type__ffa5__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__ffa5__position)

logic dw1000__register_types__sys_cfg_type__hirq_pol__first__bit : int

logic dw1000__register_types__sys_cfg_type__hirq_pol__last__bit : int

logic dw1000__register_types__sys_cfg_type__hirq_pol__position : int

axiom dw1000__register_types__sys_cfg_type__hirq_pol__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__hirq_pol__first__bit)

axiom dw1000__register_types__sys_cfg_type__hirq_pol__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__hirq_pol__first__bit <  dw1000__register_types__sys_cfg_type__hirq_pol__last__bit)

axiom dw1000__register_types__sys_cfg_type__hirq_pol__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__hirq_pol__position)

logic dw1000__register_types__sys_cfg_type__spi_edge__first__bit : int

logic dw1000__register_types__sys_cfg_type__spi_edge__last__bit : int

logic dw1000__register_types__sys_cfg_type__spi_edge__position : int

axiom dw1000__register_types__sys_cfg_type__spi_edge__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__spi_edge__first__bit)

axiom dw1000__register_types__sys_cfg_type__spi_edge__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__spi_edge__first__bit <  dw1000__register_types__sys_cfg_type__spi_edge__last__bit)

axiom dw1000__register_types__sys_cfg_type__spi_edge__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__spi_edge__position)

logic dw1000__register_types__sys_cfg_type__dis_fce__first__bit : int

logic dw1000__register_types__sys_cfg_type__dis_fce__last__bit : int

logic dw1000__register_types__sys_cfg_type__dis_fce__position : int

axiom dw1000__register_types__sys_cfg_type__dis_fce__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_fce__first__bit)

axiom dw1000__register_types__sys_cfg_type__dis_fce__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__dis_fce__first__bit <  dw1000__register_types__sys_cfg_type__dis_fce__last__bit)

axiom dw1000__register_types__sys_cfg_type__dis_fce__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_fce__position)

logic dw1000__register_types__sys_cfg_type__dis_drxb__first__bit : int

logic dw1000__register_types__sys_cfg_type__dis_drxb__last__bit : int

logic dw1000__register_types__sys_cfg_type__dis_drxb__position : int

axiom dw1000__register_types__sys_cfg_type__dis_drxb__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_drxb__first__bit)

axiom dw1000__register_types__sys_cfg_type__dis_drxb__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__dis_drxb__first__bit <  dw1000__register_types__sys_cfg_type__dis_drxb__last__bit)

axiom dw1000__register_types__sys_cfg_type__dis_drxb__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_drxb__position)

logic dw1000__register_types__sys_cfg_type__dis_phe__first__bit : int

logic dw1000__register_types__sys_cfg_type__dis_phe__last__bit : int

logic dw1000__register_types__sys_cfg_type__dis_phe__position : int

axiom dw1000__register_types__sys_cfg_type__dis_phe__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_phe__first__bit)

axiom dw1000__register_types__sys_cfg_type__dis_phe__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__dis_phe__first__bit <  dw1000__register_types__sys_cfg_type__dis_phe__last__bit)

axiom dw1000__register_types__sys_cfg_type__dis_phe__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_phe__position)

logic dw1000__register_types__sys_cfg_type__dis_rsde__first__bit : int

logic dw1000__register_types__sys_cfg_type__dis_rsde__last__bit : int

logic dw1000__register_types__sys_cfg_type__dis_rsde__position : int

axiom dw1000__register_types__sys_cfg_type__dis_rsde__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_rsde__first__bit)

axiom dw1000__register_types__sys_cfg_type__dis_rsde__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__dis_rsde__first__bit <  dw1000__register_types__sys_cfg_type__dis_rsde__last__bit)

axiom dw1000__register_types__sys_cfg_type__dis_rsde__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_rsde__position)

logic dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit : int

logic dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit : int

logic dw1000__register_types__sys_cfg_type__fcs_int2f__position : int

axiom dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit)

axiom dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit <  dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit)

axiom dw1000__register_types__sys_cfg_type__fcs_int2f__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__fcs_int2f__position)

logic dw1000__register_types__sys_cfg_type__phr_mode__first__bit : int

logic dw1000__register_types__sys_cfg_type__phr_mode__last__bit : int

logic dw1000__register_types__sys_cfg_type__phr_mode__position : int

axiom dw1000__register_types__sys_cfg_type__phr_mode__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__phr_mode__first__bit)

axiom dw1000__register_types__sys_cfg_type__phr_mode__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__phr_mode__first__bit <  dw1000__register_types__sys_cfg_type__phr_mode__last__bit)

axiom dw1000__register_types__sys_cfg_type__phr_mode__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__phr_mode__position)

logic dw1000__register_types__sys_cfg_type__dis_stxp__first__bit : int

logic dw1000__register_types__sys_cfg_type__dis_stxp__last__bit : int

logic dw1000__register_types__sys_cfg_type__dis_stxp__position : int

axiom dw1000__register_types__sys_cfg_type__dis_stxp__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_stxp__first__bit)

axiom dw1000__register_types__sys_cfg_type__dis_stxp__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__dis_stxp__first__bit <  dw1000__register_types__sys_cfg_type__dis_stxp__last__bit)

axiom dw1000__register_types__sys_cfg_type__dis_stxp__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__dis_stxp__position)

logic dw1000__register_types__sys_cfg_type__rxm110k__first__bit : int

logic dw1000__register_types__sys_cfg_type__rxm110k__last__bit : int

logic dw1000__register_types__sys_cfg_type__rxm110k__position : int

axiom dw1000__register_types__sys_cfg_type__rxm110k__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__rxm110k__first__bit)

axiom dw1000__register_types__sys_cfg_type__rxm110k__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__rxm110k__first__bit <  dw1000__register_types__sys_cfg_type__rxm110k__last__bit)

axiom dw1000__register_types__sys_cfg_type__rxm110k__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__rxm110k__position)

logic dw1000__register_types__sys_cfg_type__rxwtoe__first__bit : int

logic dw1000__register_types__sys_cfg_type__rxwtoe__last__bit : int

logic dw1000__register_types__sys_cfg_type__rxwtoe__position : int

axiom dw1000__register_types__sys_cfg_type__rxwtoe__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__rxwtoe__first__bit)

axiom dw1000__register_types__sys_cfg_type__rxwtoe__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__rxwtoe__first__bit <  dw1000__register_types__sys_cfg_type__rxwtoe__last__bit)

axiom dw1000__register_types__sys_cfg_type__rxwtoe__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__rxwtoe__position)

logic dw1000__register_types__sys_cfg_type__rxautr__first__bit : int

logic dw1000__register_types__sys_cfg_type__rxautr__last__bit : int

logic dw1000__register_types__sys_cfg_type__rxautr__position : int

axiom dw1000__register_types__sys_cfg_type__rxautr__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__rxautr__first__bit)

axiom dw1000__register_types__sys_cfg_type__rxautr__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__rxautr__first__bit <  dw1000__register_types__sys_cfg_type__rxautr__last__bit)

axiom dw1000__register_types__sys_cfg_type__rxautr__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__rxautr__position)

logic dw1000__register_types__sys_cfg_type__autoack__first__bit : int

logic dw1000__register_types__sys_cfg_type__autoack__last__bit : int

logic dw1000__register_types__sys_cfg_type__autoack__position : int

axiom dw1000__register_types__sys_cfg_type__autoack__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__autoack__first__bit)

axiom dw1000__register_types__sys_cfg_type__autoack__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__autoack__first__bit <  dw1000__register_types__sys_cfg_type__autoack__last__bit)

axiom dw1000__register_types__sys_cfg_type__autoack__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__autoack__position)

logic dw1000__register_types__sys_cfg_type__aackpend__first__bit : int

logic dw1000__register_types__sys_cfg_type__aackpend__last__bit : int

logic dw1000__register_types__sys_cfg_type__aackpend__position : int

axiom dw1000__register_types__sys_cfg_type__aackpend__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__aackpend__first__bit)

axiom dw1000__register_types__sys_cfg_type__aackpend__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__aackpend__first__bit <  dw1000__register_types__sys_cfg_type__aackpend__last__bit)

axiom dw1000__register_types__sys_cfg_type__aackpend__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__aackpend__position)

logic dw1000__register_types__sys_cfg_type__reserved_1__first__bit : int

logic dw1000__register_types__sys_cfg_type__reserved_1__last__bit : int

logic dw1000__register_types__sys_cfg_type__reserved_1__position : int

axiom dw1000__register_types__sys_cfg_type__reserved_1__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__reserved_1__first__bit)

axiom dw1000__register_types__sys_cfg_type__reserved_1__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__reserved_1__first__bit <  dw1000__register_types__sys_cfg_type__reserved_1__last__bit)

axiom dw1000__register_types__sys_cfg_type__reserved_1__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__reserved_1__position)

logic dw1000__register_types__sys_cfg_type__reserved_2__first__bit : int

logic dw1000__register_types__sys_cfg_type__reserved_2__last__bit : int

logic dw1000__register_types__sys_cfg_type__reserved_2__position : int

axiom dw1000__register_types__sys_cfg_type__reserved_2__first__bit_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__reserved_2__first__bit)

axiom dw1000__register_types__sys_cfg_type__reserved_2__last__bit_axiom :
  (dw1000__register_types__sys_cfg_type__reserved_2__first__bit <  dw1000__register_types__sys_cfg_type__reserved_2__last__bit)

axiom dw1000__register_types__sys_cfg_type__reserved_2__position_axiom :
  (0 <= dw1000__register_types__sys_cfg_type__reserved_2__position)

logic user_eq10 : us_rep, us_rep -> bool

logic dummy10 : bits_1

logic dummy11 : bits_1

logic dummy12 : bits_1

logic dummy13 : bits_1

logic dummy14 : bits_1

logic dummy15 : bits_1

logic dummy16 : bits_1

logic dummy17 : bits_1

logic dummy18 : bits_1

logic dummy19 : bits_1

logic dummy20 : bits_1

logic dummy21 : bits_1

logic dummy22 : bits_1

logic dummy23 : bits_1

logic dummy24 : bits_1

logic dummy25 : bits_1

logic dummy26 : bits_2

logic dummy27 : bits_1

logic dummy28 : bits_1

logic dummy29 : bits_1

logic dummy30 : bits_1

logic dummy31 : bits_1

logic dummy32 : bits_1

logic dummy33 : bits_3

logic dummy34 : bits_5

type sys_cfg_type__ref = { sys_cfg_type__content : us_rep
}

function sys_cfg_type__ref___projection(a: sys_cfg_type__ref) : us_rep =
  (a).sys_cfg_type__content

type us_split_fields2 = { rec__dw1000__register_types__tx_fctrl_type__tflen :
bits_7; rec__dw1000__register_types__tx_fctrl_type__tfle : bits_3;
rec__dw1000__register_types__tx_fctrl_type__r : bits_3;
rec__dw1000__register_types__tx_fctrl_type__txbr : bits_2;
rec__dw1000__register_types__tx_fctrl_type__tr : bits_1;
rec__dw1000__register_types__tx_fctrl_type__txprf : bits_2;
rec__dw1000__register_types__tx_fctrl_type__txpsr : bits_2;
rec__dw1000__register_types__tx_fctrl_type__pe : bits_2;
rec__dw1000__register_types__tx_fctrl_type__txboffs : bits_10;
rec__dw1000__register_types__tx_fctrl_type__ifsdelay : bits_8
}

function us_split_fields_TFLEN__projection(a: us_split_fields2) : bits_7 =
  (a).rec__dw1000__register_types__tx_fctrl_type__tflen

function us_split_fields_TFLE__projection(a: us_split_fields2) : bits_3 =
  (a).rec__dw1000__register_types__tx_fctrl_type__tfle

function us_split_fields_R__projection(a: us_split_fields2) : bits_3 =
  (a).rec__dw1000__register_types__tx_fctrl_type__r

function us_split_fields_TXBR__projection(a: us_split_fields2) : bits_2 =
  (a).rec__dw1000__register_types__tx_fctrl_type__txbr

function us_split_fields_TR__projection(a: us_split_fields2) : bits_1 =
  (a).rec__dw1000__register_types__tx_fctrl_type__tr

function us_split_fields_TXPRF__projection(a: us_split_fields2) : bits_2 =
  (a).rec__dw1000__register_types__tx_fctrl_type__txprf

function us_split_fields_TXPSR__projection(a: us_split_fields2) : bits_2 =
  (a).rec__dw1000__register_types__tx_fctrl_type__txpsr

function us_split_fields_PE__projection(a: us_split_fields2) : bits_2 =
  (a).rec__dw1000__register_types__tx_fctrl_type__pe

function us_split_fields_TXBOFFS__projection(a: us_split_fields2) : bits_10 =
  (a).rec__dw1000__register_types__tx_fctrl_type__txboffs

function us_split_fields_IFSDELAY__projection(a: us_split_fields2) : bits_8 =
  (a).rec__dw1000__register_types__tx_fctrl_type__ifsdelay

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___6__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___6__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq15 : us_rep1, us_rep1 -> bool

axiom bool_eq_def14 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq15(a, b)].
  ((((((((((((to_rep5(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tflen) = to_rep5(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tflen)) and
  (to_rep2(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tfle) = to_rep2(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tfle))) and
  (to_rep2(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__r) = to_rep2(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__r))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txbr) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txbr))) and
  (to_rep(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tr) = to_rep(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tr))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txprf) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txprf))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txpsr) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txpsr))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__pe) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__pe))) and
  (to_rep8(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txboffs) = to_rep8(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txboffs))) and
  (to_rep6(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__ifsdelay) = to_rep6(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__ifsdelay))) ->
  (bool_eq15(a, b) = true)) and
  ((not ((((((((((to_rep5(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tflen) = to_rep5(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tflen)) and
  (to_rep2(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tfle) = to_rep2(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tfle))) and
  (to_rep2(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__r) = to_rep2(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__r))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txbr) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txbr))) and
  (to_rep(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tr) = to_rep(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__tr))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txprf) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txprf))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txpsr) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txpsr))) and
  (to_rep1(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__pe) = to_rep1(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__pe))) and
  (to_rep8(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txboffs) = to_rep8(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__txboffs))) and
  (to_rep6(((a).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__ifsdelay) = to_rep6(((b).us_split_fields3).rec__dw1000__register_types__tx_fctrl_type__ifsdelay)))) ->
  (bool_eq15(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep1 -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep1 -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:bits_7. forall a1:bits_3. forall a2:bits_3. forall a3:bits_2.
  forall a4:bits_1. forall a5:bits_2. forall a6:bits_2. forall a7:bits_2.
  forall a8:bits_10. forall a9:bits_8. (0 <= object__size1({
  us_split_fields3 = { rec__dw1000__register_types__tx_fctrl_type__tflen = a;
  rec__dw1000__register_types__tx_fctrl_type__tfle = a1;
  rec__dw1000__register_types__tx_fctrl_type__r = a2;
  rec__dw1000__register_types__tx_fctrl_type__txbr = a3;
  rec__dw1000__register_types__tx_fctrl_type__tr = a4;
  rec__dw1000__register_types__tx_fctrl_type__txprf = a5;
  rec__dw1000__register_types__tx_fctrl_type__txpsr = a6;
  rec__dw1000__register_types__tx_fctrl_type__pe = a7;
  rec__dw1000__register_types__tx_fctrl_type__txboffs = a8;
  rec__dw1000__register_types__tx_fctrl_type__ifsdelay = a9 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:bits_7. forall a1:bits_3. forall a2:bits_3. forall a3:bits_2.
  forall a4:bits_1. forall a5:bits_2. forall a6:bits_2. forall a7:bits_2.
  forall a8:bits_10. forall a9:bits_8. (0 <= object__alignment1({
  us_split_fields3 = { rec__dw1000__register_types__tx_fctrl_type__tflen = a;
  rec__dw1000__register_types__tx_fctrl_type__tfle = a1;
  rec__dw1000__register_types__tx_fctrl_type__r = a2;
  rec__dw1000__register_types__tx_fctrl_type__txbr = a3;
  rec__dw1000__register_types__tx_fctrl_type__tr = a4;
  rec__dw1000__register_types__tx_fctrl_type__txprf = a5;
  rec__dw1000__register_types__tx_fctrl_type__txpsr = a6;
  rec__dw1000__register_types__tx_fctrl_type__pe = a7;
  rec__dw1000__register_types__tx_fctrl_type__txboffs = a8;
  rec__dw1000__register_types__tx_fctrl_type__ifsdelay = a9 } })))

logic dw1000__register_types__tx_fctrl_type__tflen__first__bit : int

logic dw1000__register_types__tx_fctrl_type__tflen__last__bit : int

logic dw1000__register_types__tx_fctrl_type__tflen__position : int

axiom dw1000__register_types__tx_fctrl_type__tflen__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__tflen__first__bit)

axiom dw1000__register_types__tx_fctrl_type__tflen__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__tflen__first__bit <  dw1000__register_types__tx_fctrl_type__tflen__last__bit)

axiom dw1000__register_types__tx_fctrl_type__tflen__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__tflen__position)

logic dw1000__register_types__tx_fctrl_type__tfle__first__bit : int

logic dw1000__register_types__tx_fctrl_type__tfle__last__bit : int

logic dw1000__register_types__tx_fctrl_type__tfle__position : int

axiom dw1000__register_types__tx_fctrl_type__tfle__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__tfle__first__bit)

axiom dw1000__register_types__tx_fctrl_type__tfle__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__tfle__first__bit <  dw1000__register_types__tx_fctrl_type__tfle__last__bit)

axiom dw1000__register_types__tx_fctrl_type__tfle__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__tfle__position)

logic dw1000__register_types__tx_fctrl_type__r__first__bit : int

logic dw1000__register_types__tx_fctrl_type__r__last__bit : int

logic dw1000__register_types__tx_fctrl_type__r__position : int

axiom dw1000__register_types__tx_fctrl_type__r__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__r__first__bit)

axiom dw1000__register_types__tx_fctrl_type__r__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__r__first__bit <  dw1000__register_types__tx_fctrl_type__r__last__bit)

axiom dw1000__register_types__tx_fctrl_type__r__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__r__position)

logic dw1000__register_types__tx_fctrl_type__txbr__first__bit : int

logic dw1000__register_types__tx_fctrl_type__txbr__last__bit : int

logic dw1000__register_types__tx_fctrl_type__txbr__position : int

axiom dw1000__register_types__tx_fctrl_type__txbr__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txbr__first__bit)

axiom dw1000__register_types__tx_fctrl_type__txbr__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__txbr__first__bit <  dw1000__register_types__tx_fctrl_type__txbr__last__bit)

axiom dw1000__register_types__tx_fctrl_type__txbr__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txbr__position)

logic dw1000__register_types__tx_fctrl_type__tr__first__bit : int

logic dw1000__register_types__tx_fctrl_type__tr__last__bit : int

logic dw1000__register_types__tx_fctrl_type__tr__position : int

axiom dw1000__register_types__tx_fctrl_type__tr__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__tr__first__bit)

axiom dw1000__register_types__tx_fctrl_type__tr__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__tr__first__bit <  dw1000__register_types__tx_fctrl_type__tr__last__bit)

axiom dw1000__register_types__tx_fctrl_type__tr__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__tr__position)

logic dw1000__register_types__tx_fctrl_type__txprf__first__bit : int

logic dw1000__register_types__tx_fctrl_type__txprf__last__bit : int

logic dw1000__register_types__tx_fctrl_type__txprf__position : int

axiom dw1000__register_types__tx_fctrl_type__txprf__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txprf__first__bit)

axiom dw1000__register_types__tx_fctrl_type__txprf__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__txprf__first__bit <  dw1000__register_types__tx_fctrl_type__txprf__last__bit)

axiom dw1000__register_types__tx_fctrl_type__txprf__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txprf__position)

logic dw1000__register_types__tx_fctrl_type__txpsr__first__bit : int

logic dw1000__register_types__tx_fctrl_type__txpsr__last__bit : int

logic dw1000__register_types__tx_fctrl_type__txpsr__position : int

axiom dw1000__register_types__tx_fctrl_type__txpsr__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txpsr__first__bit)

axiom dw1000__register_types__tx_fctrl_type__txpsr__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__txpsr__first__bit <  dw1000__register_types__tx_fctrl_type__txpsr__last__bit)

axiom dw1000__register_types__tx_fctrl_type__txpsr__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txpsr__position)

logic dw1000__register_types__tx_fctrl_type__pe__first__bit : int

logic dw1000__register_types__tx_fctrl_type__pe__last__bit : int

logic dw1000__register_types__tx_fctrl_type__pe__position : int

axiom dw1000__register_types__tx_fctrl_type__pe__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__pe__first__bit)

axiom dw1000__register_types__tx_fctrl_type__pe__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__pe__first__bit <  dw1000__register_types__tx_fctrl_type__pe__last__bit)

axiom dw1000__register_types__tx_fctrl_type__pe__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__pe__position)

logic dw1000__register_types__tx_fctrl_type__txboffs__first__bit : int

logic dw1000__register_types__tx_fctrl_type__txboffs__last__bit : int

logic dw1000__register_types__tx_fctrl_type__txboffs__position : int

axiom dw1000__register_types__tx_fctrl_type__txboffs__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txboffs__first__bit)

axiom dw1000__register_types__tx_fctrl_type__txboffs__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__txboffs__first__bit <  dw1000__register_types__tx_fctrl_type__txboffs__last__bit)

axiom dw1000__register_types__tx_fctrl_type__txboffs__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__txboffs__position)

logic dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit : int

logic dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit : int

logic dw1000__register_types__tx_fctrl_type__ifsdelay__position : int

axiom dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit)

axiom dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit_axiom :
  (dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit <  dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit)

axiom dw1000__register_types__tx_fctrl_type__ifsdelay__position_axiom :
  (0 <= dw1000__register_types__tx_fctrl_type__ifsdelay__position)

logic user_eq11 : us_rep1, us_rep1 -> bool

logic dummy35 : bits_7

logic dummy36 : bits_3

logic dummy37 : bits_3

logic dummy38 : bits_2

logic dummy39 : bits_1

logic dummy40 : bits_2

logic dummy41 : bits_2

logic dummy42 : bits_2

logic dummy43 : bits_10

logic dummy44 : bits_8

type tx_fctrl_type__ref = { tx_fctrl_type__content : us_rep1
}

function tx_fctrl_type__ref___projection(a: tx_fctrl_type__ref) : us_rep1 =
  (a).tx_fctrl_type__content

type us_split_fields4 = {
rec__dw1000__register_types__chan_ctrl_type__tx_chan : bits_4;
rec__dw1000__register_types__chan_ctrl_type__rx_chan : bits_4;
rec__dw1000__register_types__chan_ctrl_type__dwsfd : bits_1;
rec__dw1000__register_types__chan_ctrl_type__rxprf : bits_2;
rec__dw1000__register_types__chan_ctrl_type__tnssfd : bits_1;
rec__dw1000__register_types__chan_ctrl_type__rnssfd : bits_1;
rec__dw1000__register_types__chan_ctrl_type__tx_pcode : bits_5;
rec__dw1000__register_types__chan_ctrl_type__rx_pcode : bits_5;
rec__dw1000__register_types__chan_ctrl_type__reserved : bits_9
}

function us_split_fields_TX_CHAN__projection(a: us_split_fields4) : bits_4 =
  (a).rec__dw1000__register_types__chan_ctrl_type__tx_chan

function us_split_fields_RX_CHAN__projection(a: us_split_fields4) : bits_4 =
  (a).rec__dw1000__register_types__chan_ctrl_type__rx_chan

function us_split_fields_DWSFD__projection(a: us_split_fields4) : bits_1 =
  (a).rec__dw1000__register_types__chan_ctrl_type__dwsfd

function us_split_fields_RXPRF__2__projection(a: us_split_fields4) : bits_2 =
  (a).rec__dw1000__register_types__chan_ctrl_type__rxprf

function us_split_fields_TNSSFD__projection(a: us_split_fields4) : bits_1 =
  (a).rec__dw1000__register_types__chan_ctrl_type__tnssfd

function us_split_fields_RNSSFD__projection(a: us_split_fields4) : bits_1 =
  (a).rec__dw1000__register_types__chan_ctrl_type__rnssfd

function us_split_fields_TX_PCODE__projection(a: us_split_fields4) : bits_5 =
  (a).rec__dw1000__register_types__chan_ctrl_type__tx_pcode

function us_split_fields_RX_PCODE__projection(a: us_split_fields4) : bits_5 =
  (a).rec__dw1000__register_types__chan_ctrl_type__rx_pcode

function us_split_fields_Reserved__3__projection(a: us_split_fields4) : bits_9 =
  (a).rec__dw1000__register_types__chan_ctrl_type__reserved

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___24__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4
}

function us_rep___24__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq16 : us_rep2, us_rep2 -> bool

axiom bool_eq_def15 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq16(a, b)].
  (((((((((((to_rep3(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_chan) = to_rep3(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_chan)) and
  (to_rep3(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_chan) = to_rep3(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_chan))) and
  (to_rep(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__dwsfd) = to_rep(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__dwsfd))) and
  (to_rep1(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rxprf) = to_rep1(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rxprf))) and
  (to_rep(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tnssfd) = to_rep(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tnssfd))) and
  (to_rep(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rnssfd) = to_rep(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rnssfd))) and
  (to_rep4(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_pcode) = to_rep4(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_pcode))) and
  (to_rep4(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_pcode) = to_rep4(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_pcode))) and
  (to_rep7(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__reserved) = to_rep7(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__reserved))) ->
  (bool_eq16(a, b) = true)) and
  ((not (((((((((to_rep3(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_chan) = to_rep3(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_chan)) and
  (to_rep3(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_chan) = to_rep3(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_chan))) and
  (to_rep(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__dwsfd) = to_rep(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__dwsfd))) and
  (to_rep1(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rxprf) = to_rep1(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rxprf))) and
  (to_rep(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tnssfd) = to_rep(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tnssfd))) and
  (to_rep(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rnssfd) = to_rep(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rnssfd))) and
  (to_rep4(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_pcode) = to_rep4(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__tx_pcode))) and
  (to_rep4(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_pcode) = to_rep4(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__rx_pcode))) and
  (to_rep7(((a).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__reserved) = to_rep7(((b).us_split_fields5).rec__dw1000__register_types__chan_ctrl_type__reserved)))) ->
  (bool_eq16(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep2 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep2 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:bits_4. forall a1:bits_4. forall a2:bits_1. forall a3:bits_2.
  forall a4:bits_1. forall a5:bits_1. forall a6:bits_5. forall a7:bits_5.
  forall a8:bits_9. (0 <= object__size2({ us_split_fields5 = {
  rec__dw1000__register_types__chan_ctrl_type__tx_chan = a;
  rec__dw1000__register_types__chan_ctrl_type__rx_chan = a1;
  rec__dw1000__register_types__chan_ctrl_type__dwsfd = a2;
  rec__dw1000__register_types__chan_ctrl_type__rxprf = a3;
  rec__dw1000__register_types__chan_ctrl_type__tnssfd = a4;
  rec__dw1000__register_types__chan_ctrl_type__rnssfd = a5;
  rec__dw1000__register_types__chan_ctrl_type__tx_pcode = a6;
  rec__dw1000__register_types__chan_ctrl_type__rx_pcode = a7;
  rec__dw1000__register_types__chan_ctrl_type__reserved = a8 } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:bits_4. forall a1:bits_4. forall a2:bits_1. forall a3:bits_2.
  forall a4:bits_1. forall a5:bits_1. forall a6:bits_5. forall a7:bits_5.
  forall a8:bits_9. (0 <= object__alignment2({ us_split_fields5 = {
  rec__dw1000__register_types__chan_ctrl_type__tx_chan = a;
  rec__dw1000__register_types__chan_ctrl_type__rx_chan = a1;
  rec__dw1000__register_types__chan_ctrl_type__dwsfd = a2;
  rec__dw1000__register_types__chan_ctrl_type__rxprf = a3;
  rec__dw1000__register_types__chan_ctrl_type__tnssfd = a4;
  rec__dw1000__register_types__chan_ctrl_type__rnssfd = a5;
  rec__dw1000__register_types__chan_ctrl_type__tx_pcode = a6;
  rec__dw1000__register_types__chan_ctrl_type__rx_pcode = a7;
  rec__dw1000__register_types__chan_ctrl_type__reserved = a8 } })))

logic dw1000__register_types__chan_ctrl_type__tx_chan__first__bit : int

logic dw1000__register_types__chan_ctrl_type__tx_chan__last__bit : int

logic dw1000__register_types__chan_ctrl_type__tx_chan__position : int

axiom dw1000__register_types__chan_ctrl_type__tx_chan__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__tx_chan__first__bit)

axiom dw1000__register_types__chan_ctrl_type__tx_chan__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__tx_chan__first__bit <  dw1000__register_types__chan_ctrl_type__tx_chan__last__bit)

axiom dw1000__register_types__chan_ctrl_type__tx_chan__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__tx_chan__position)

logic dw1000__register_types__chan_ctrl_type__rx_chan__first__bit : int

logic dw1000__register_types__chan_ctrl_type__rx_chan__last__bit : int

logic dw1000__register_types__chan_ctrl_type__rx_chan__position : int

axiom dw1000__register_types__chan_ctrl_type__rx_chan__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rx_chan__first__bit)

axiom dw1000__register_types__chan_ctrl_type__rx_chan__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__rx_chan__first__bit <  dw1000__register_types__chan_ctrl_type__rx_chan__last__bit)

axiom dw1000__register_types__chan_ctrl_type__rx_chan__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rx_chan__position)

logic dw1000__register_types__chan_ctrl_type__dwsfd__first__bit : int

logic dw1000__register_types__chan_ctrl_type__dwsfd__last__bit : int

logic dw1000__register_types__chan_ctrl_type__dwsfd__position : int

axiom dw1000__register_types__chan_ctrl_type__dwsfd__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__dwsfd__first__bit)

axiom dw1000__register_types__chan_ctrl_type__dwsfd__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__dwsfd__first__bit <  dw1000__register_types__chan_ctrl_type__dwsfd__last__bit)

axiom dw1000__register_types__chan_ctrl_type__dwsfd__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__dwsfd__position)

logic dw1000__register_types__chan_ctrl_type__rxprf__first__bit : int

logic dw1000__register_types__chan_ctrl_type__rxprf__last__bit : int

logic dw1000__register_types__chan_ctrl_type__rxprf__position : int

axiom dw1000__register_types__chan_ctrl_type__rxprf__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rxprf__first__bit)

axiom dw1000__register_types__chan_ctrl_type__rxprf__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__rxprf__first__bit <  dw1000__register_types__chan_ctrl_type__rxprf__last__bit)

axiom dw1000__register_types__chan_ctrl_type__rxprf__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rxprf__position)

logic dw1000__register_types__chan_ctrl_type__tnssfd__first__bit : int

logic dw1000__register_types__chan_ctrl_type__tnssfd__last__bit : int

logic dw1000__register_types__chan_ctrl_type__tnssfd__position : int

axiom dw1000__register_types__chan_ctrl_type__tnssfd__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__tnssfd__first__bit)

axiom dw1000__register_types__chan_ctrl_type__tnssfd__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__tnssfd__first__bit <  dw1000__register_types__chan_ctrl_type__tnssfd__last__bit)

axiom dw1000__register_types__chan_ctrl_type__tnssfd__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__tnssfd__position)

logic dw1000__register_types__chan_ctrl_type__rnssfd__first__bit : int

logic dw1000__register_types__chan_ctrl_type__rnssfd__last__bit : int

logic dw1000__register_types__chan_ctrl_type__rnssfd__position : int

axiom dw1000__register_types__chan_ctrl_type__rnssfd__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rnssfd__first__bit)

axiom dw1000__register_types__chan_ctrl_type__rnssfd__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__rnssfd__first__bit <  dw1000__register_types__chan_ctrl_type__rnssfd__last__bit)

axiom dw1000__register_types__chan_ctrl_type__rnssfd__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rnssfd__position)

logic dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit : int

logic dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit : int

logic dw1000__register_types__chan_ctrl_type__tx_pcode__position : int

axiom dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit)

axiom dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit <  dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit)

axiom dw1000__register_types__chan_ctrl_type__tx_pcode__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__tx_pcode__position)

logic dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit : int

logic dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit : int

logic dw1000__register_types__chan_ctrl_type__rx_pcode__position : int

axiom dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit)

axiom dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit <  dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit)

axiom dw1000__register_types__chan_ctrl_type__rx_pcode__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__rx_pcode__position)

logic dw1000__register_types__chan_ctrl_type__reserved__first__bit : int

logic dw1000__register_types__chan_ctrl_type__reserved__last__bit : int

logic dw1000__register_types__chan_ctrl_type__reserved__position : int

axiom dw1000__register_types__chan_ctrl_type__reserved__first__bit_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__reserved__first__bit)

axiom dw1000__register_types__chan_ctrl_type__reserved__last__bit_axiom :
  (dw1000__register_types__chan_ctrl_type__reserved__first__bit <  dw1000__register_types__chan_ctrl_type__reserved__last__bit)

axiom dw1000__register_types__chan_ctrl_type__reserved__position_axiom :
  (0 <= dw1000__register_types__chan_ctrl_type__reserved__position)

logic user_eq12 : us_rep2, us_rep2 -> bool

logic dummy45 : bits_4

logic dummy46 : bits_4

logic dummy47 : bits_1

logic dummy48 : bits_2

logic dummy49 : bits_1

logic dummy50 : bits_1

logic dummy51 : bits_5

logic dummy52 : bits_5

logic dummy53 : bits_9

type chan_ctrl_type__ref = { chan_ctrl_type__content : us_rep2
}

function chan_ctrl_type__ref___projection(a: chan_ctrl_type__ref) : us_rep2 =
  (a).chan_ctrl_type__content

type us_split_fields6 = {
rec__dw1000__register_types__lde_repc_type__lde_repc : bits_16
}

function us_split_fields_LDE_REPC__projection(a: us_split_fields6) : bits_16 =
  (a).rec__dw1000__register_types__lde_repc_type__lde_repc

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___86__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep3 = { us_split_fields7 : us_split_fields6
}

function us_rep___86__projection(a: us_rep3) : us_split_fields6 =
  (a).us_split_fields7

logic bool_eq17 : us_rep3, us_rep3 -> bool

axiom bool_eq_def16 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq17(a, b)].
  (((to_rep9(((a).us_split_fields7).rec__dw1000__register_types__lde_repc_type__lde_repc) = to_rep9(((b).us_split_fields7).rec__dw1000__register_types__lde_repc_type__lde_repc)) ->
  (bool_eq17(a, b) = true)) and
  ((not (to_rep9(((a).us_split_fields7).rec__dw1000__register_types__lde_repc_type__lde_repc) = to_rep9(((b).us_split_fields7).rec__dw1000__register_types__lde_repc_type__lde_repc))) ->
  (bool_eq17(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep3 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep3 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:bits_16. (0 <= object__size3({ us_split_fields7 = {
  rec__dw1000__register_types__lde_repc_type__lde_repc = a } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:bits_16. (0 <= object__alignment3({ us_split_fields7 = {
  rec__dw1000__register_types__lde_repc_type__lde_repc = a } })))

logic dw1000__register_types__lde_repc_type__lde_repc__first__bit : int

logic dw1000__register_types__lde_repc_type__lde_repc__last__bit : int

logic dw1000__register_types__lde_repc_type__lde_repc__position : int

axiom dw1000__register_types__lde_repc_type__lde_repc__first__bit_axiom :
  (0 <= dw1000__register_types__lde_repc_type__lde_repc__first__bit)

axiom dw1000__register_types__lde_repc_type__lde_repc__last__bit_axiom :
  (dw1000__register_types__lde_repc_type__lde_repc__first__bit <  dw1000__register_types__lde_repc_type__lde_repc__last__bit)

axiom dw1000__register_types__lde_repc_type__lde_repc__position_axiom :
  (0 <= dw1000__register_types__lde_repc_type__lde_repc__position)

logic user_eq13 : us_rep3, us_rep3 -> bool

logic dummy54 : bits_16

type lde_repc_type__ref = { lde_repc_type__content : us_rep3
}

function lde_repc_type__ref___projection(a: lde_repc_type__ref) : us_rep3 =
  (a).lde_repc_type__content

type register_type__ref = { register_type__content : us_rep
}

function register_type__ref___4__projection(a: register_type__ref) : us_rep =
  (a).register_type__content

type register_type__ref1 = { register_type__content1 : us_rep1
}

function register_type__ref___6__projection(a: register_type__ref1) : us_rep1 =
  (a).register_type__content1

type register_type__ref2 = { register_type__content2 : us_rep2
}

function register_type__ref___24__projection(a: register_type__ref2) : us_rep2 =
  (a).register_type__content2

type register_type__ref3 = { register_type__content3 : us_rep3
}

function register_type__ref___85__projection(a: register_type__ref3) : us_rep3 =
  (a).register_type__content3

type data_rates

predicate in_range9(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq18 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq18(x, y)]. (((x = y) -> (bool_eq18(x,
  y) = true)) and ((not (x = y)) -> (bool_eq18(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq14 : data_rates, data_rates -> bool

logic dummy55 : data_rates

type data_rates__ref = { data_rates__content : data_rates
}

function data_rates__ref___projection(a: data_rates__ref) : data_rates =
  (a).data_rates__content

logic to_rep10 : data_rates -> int

logic of_rep10 : int -> data_rates

axiom inversion_axiom10 :
  (forall x:data_rates [to_rep10(x)]. (of_rep10(to_rep10(x)) = x))

axiom range_axiom10 :
  (forall x:data_rates [to_rep10(x)]. in_range9(to_rep10(x)))

axiom coerce_axiom10 :
  (forall x:int [to_rep10(of_rep10(x))]. (in_range9(x) ->
  (to_rep10(of_rep10(x)) = x)))

type channel_number

predicate in_range10(x: int) = ((1 <= x) and (x <= 7))

logic bool_eq19 : int, int -> bool

axiom bool_eq_def18 :
  (forall x:int. forall y:int [bool_eq19(x, y)]. (((x = y) -> (bool_eq19(x,
  y) = true)) and ((not (x = y)) -> (bool_eq19(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq15 : channel_number, channel_number -> bool

logic dummy56 : channel_number

type channel_number__ref = { channel_number__content : channel_number
}

function channel_number__ref___projection(a: channel_number__ref) : channel_number =
  (a).channel_number__content

logic to_rep11 : channel_number -> int

logic of_rep11 : int -> channel_number

axiom inversion_axiom11 :
  (forall x:channel_number [to_rep11(x)]. (of_rep11(to_rep11(x)) = x))

axiom range_axiom11 :
  (forall x:channel_number [to_rep11(x)]. in_range10(to_rep11(x)))

axiom coerce_axiom11 :
  (forall x:int [to_rep11(of_rep11(x))]. (in_range10(x) ->
  (to_rep11(of_rep11(x)) = x)))

logic i17s : int

logic attr__ATTRIBUTE_ADDRESS : int

type prf_type

predicate in_range11(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def19 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq16 : prf_type, prf_type -> bool

logic dummy57 : prf_type

type prf_type__ref = { prf_type__content : prf_type
}

function prf_type__ref___projection(a: prf_type__ref) : prf_type =
  (a).prf_type__content

logic to_rep12 : prf_type -> int

logic of_rep12 : int -> prf_type

axiom inversion_axiom12 :
  (forall x:prf_type [to_rep12(x)]. (of_rep12(to_rep12(x)) = x))

axiom range_axiom12 :
  (forall x:prf_type [to_rep12(x)]. in_range11(to_rep12(x)))

axiom coerce_axiom12 :
  (forall x:int [to_rep12(of_rep12(x))]. (in_range11(x) ->
  (to_rep12(of_rep12(x)) = x)))

type preamble_lengths

predicate in_range12(x: int) = ((0 <= x) and (x <= 7))

logic bool_eq21 : int, int -> bool

axiom bool_eq_def20 :
  (forall x:int. forall y:int [bool_eq21(x, y)]. (((x = y) -> (bool_eq21(x,
  y) = true)) and ((not (x = y)) -> (bool_eq21(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq17 : preamble_lengths, preamble_lengths -> bool

logic dummy58 : preamble_lengths

type preamble_lengths__ref = { preamble_lengths__content : preamble_lengths
}

function preamble_lengths__ref___projection(a: preamble_lengths__ref) : preamble_lengths =
  (a).preamble_lengths__content

logic to_rep13 : preamble_lengths -> int

logic of_rep13 : int -> preamble_lengths

axiom inversion_axiom13 :
  (forall x:preamble_lengths [to_rep13(x)]. (of_rep13(to_rep13(x)) = x))

axiom range_axiom13 :
  (forall x:preamble_lengths [to_rep13(x)]. in_range12(to_rep13(x)))

axiom coerce_axiom13 :
  (forall x:int [to_rep13(of_rep13(x))]. (in_range12(x) ->
  (to_rep13(of_rep13(x)) = x)))

type preamble_acq_chunk_length

predicate in_range13(x: int) = ((0 <= x) and (x <= 3))

logic bool_eq22 : int, int -> bool

axiom bool_eq_def21 :
  (forall x:int. forall y:int [bool_eq22(x, y)]. (((x = y) -> (bool_eq22(x,
  y) = true)) and ((not (x = y)) -> (bool_eq22(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE15 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check15 : us_image -> prop

logic attr__ATTRIBUTE_VALUE15 : us_image -> int

logic user_eq18 : preamble_acq_chunk_length,
  preamble_acq_chunk_length -> bool

logic dummy59 : preamble_acq_chunk_length

type preamble_acq_chunk_length__ref = { preamble_acq_chunk_length__content :
preamble_acq_chunk_length
}

function preamble_acq_chunk_length__ref___projection(a: preamble_acq_chunk_length__ref) : preamble_acq_chunk_length =
  (a).preamble_acq_chunk_length__content

logic to_rep14 : preamble_acq_chunk_length -> int

logic of_rep14 : int -> preamble_acq_chunk_length

axiom inversion_axiom14 :
  (forall x:preamble_acq_chunk_length [to_rep14(x)].
  (of_rep14(to_rep14(x)) = x))

axiom range_axiom14 :
  (forall x:preamble_acq_chunk_length [to_rep14(x)]. in_range13(to_rep14(x)))

axiom coerce_axiom14 :
  (forall x:int [to_rep14(of_rep14(x))]. (in_range13(x) ->
  (to_rep14(of_rep14(x)) = x)))

type preamble_code_number

predicate in_range14(x: int) = ((1 <= x) and (x <= 24))

logic bool_eq23 : int, int -> bool

axiom bool_eq_def22 :
  (forall x:int. forall y:int [bool_eq23(x, y)]. (((x = y) -> (bool_eq23(x,
  y) = true)) and ((not (x = y)) -> (bool_eq23(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE16 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check16 : us_image -> prop

logic attr__ATTRIBUTE_VALUE16 : us_image -> int

logic user_eq19 : preamble_code_number, preamble_code_number -> bool

logic dummy60 : preamble_code_number

type preamble_code_number__ref = { preamble_code_number__content :
preamble_code_number
}

function preamble_code_number__ref___projection(a: preamble_code_number__ref) : preamble_code_number =
  (a).preamble_code_number__content

logic to_rep15 : preamble_code_number -> int

logic of_rep15 : int -> preamble_code_number

axiom inversion_axiom15 :
  (forall x:preamble_code_number [to_rep15(x)]. (of_rep15(to_rep15(x)) = x))

axiom range_axiom15 :
  (forall x:preamble_code_number [to_rep15(x)]. in_range14(to_rep15(x)))

axiom coerce_axiom15 :
  (forall x:int [to_rep15(of_rep15(x))]. (in_range14(x) ->
  (to_rep15(of_rep15(x)) = x)))

type physical_header_modes

predicate in_range15(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq24 : int, int -> bool

axiom bool_eq_def23 :
  (forall x:int. forall y:int [bool_eq24(x, y)]. (((x = y) -> (bool_eq24(x,
  y) = true)) and ((not (x = y)) -> (bool_eq24(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE17 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check17 : us_image -> prop

logic attr__ATTRIBUTE_VALUE17 : us_image -> int

logic user_eq20 : physical_header_modes, physical_header_modes -> bool

logic dummy61 : physical_header_modes

type physical_header_modes__ref = { physical_header_modes__content :
physical_header_modes
}

function physical_header_modes__ref___projection(a: physical_header_modes__ref) : physical_header_modes =
  (a).physical_header_modes__content

logic to_rep16 : physical_header_modes -> int

logic of_rep16 : int -> physical_header_modes

axiom inversion_axiom16 :
  (forall x:physical_header_modes [to_rep16(x)]. (of_rep16(to_rep16(x)) = x))

axiom range_axiom16 :
  (forall x:physical_header_modes [to_rep16(x)]. in_range15(to_rep16(x)))

axiom coerce_axiom16 :
  (forall x:int [to_rep16(of_rep16(x))]. (in_range15(x) ->
  (to_rep16(of_rep16(x)) = x)))

type sfd_timeout_number

predicate in_range16(x: int) = ((0 <= x) and (x <= 65535))

logic bool_eq25 : int, int -> bool

axiom bool_eq_def24 :
  (forall x:int. forall y:int [bool_eq25(x, y)]. (((x = y) -> (bool_eq25(x,
  y) = true)) and ((not (x = y)) -> (bool_eq25(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE18 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check18 : us_image -> prop

logic attr__ATTRIBUTE_VALUE18 : us_image -> int

logic user_eq21 : sfd_timeout_number, sfd_timeout_number -> bool

logic dummy62 : sfd_timeout_number

type sfd_timeout_number__ref = { sfd_timeout_number__content :
sfd_timeout_number
}

function sfd_timeout_number__ref___projection(a: sfd_timeout_number__ref) : sfd_timeout_number =
  (a).sfd_timeout_number__content

logic to_rep17 : sfd_timeout_number -> int

logic of_rep17 : int -> sfd_timeout_number

axiom inversion_axiom17 :
  (forall x:sfd_timeout_number [to_rep17(x)]. (of_rep17(to_rep17(x)) = x))

axiom range_axiom17 :
  (forall x:sfd_timeout_number [to_rep17(x)]. in_range16(to_rep17(x)))

axiom coerce_axiom17 :
  (forall x:int [to_rep17(of_rep17(x))]. (in_range16(x) ->
  (to_rep17(of_rep17(x)) = x)))

type us_split_fields8 = { rec__decadriver__configuration_type__channel :
channel_number; rec__decadriver__configuration_type__prf : prf_type;
rec__decadriver__configuration_type__tx_preamble_length : preamble_lengths;
rec__decadriver__configuration_type__tx_pac : preamble_acq_chunk_length;
rec__decadriver__configuration_type__tx_preamble_code : preamble_code_number;
rec__decadriver__configuration_type__rx_preamble_code : preamble_code_number;
rec__decadriver__configuration_type__use_nonstandard_sfd : bool;
rec__decadriver__configuration_type__data_rate : data_rates;
rec__decadriver__configuration_type__phr_mode : physical_header_modes;
rec__decadriver__configuration_type__sfd_timeout : sfd_timeout_number;
rec__decadriver__configuration_type__enable_smart_power : bool
}

function us_split_fields_Channel__projection(a: us_split_fields8) : channel_number =
  (a).rec__decadriver__configuration_type__channel

function us_split_fields_PRF__projection(a: us_split_fields8) : prf_type =
  (a).rec__decadriver__configuration_type__prf

function us_split_fields_Tx_Preamble_Length__projection(a: us_split_fields8) : preamble_lengths =
  (a).rec__decadriver__configuration_type__tx_preamble_length

function us_split_fields_Tx_PAC__projection(a: us_split_fields8) : preamble_acq_chunk_length =
  (a).rec__decadriver__configuration_type__tx_pac

function us_split_fields_Tx_Preamble_Code__projection(a: us_split_fields8) : preamble_code_number =
  (a).rec__decadriver__configuration_type__tx_preamble_code

function us_split_fields_Rx_Preamble_Code__projection(a: us_split_fields8) : preamble_code_number =
  (a).rec__decadriver__configuration_type__rx_preamble_code

function us_split_fields_Use_Nonstandard_SFD__projection(a: us_split_fields8) : bool =
  (a).rec__decadriver__configuration_type__use_nonstandard_sfd

function us_split_fields_Data_Rate__projection(a: us_split_fields8) : data_rates =
  (a).rec__decadriver__configuration_type__data_rate

function us_split_fields_PHR_Mode__projection(a: us_split_fields8) : physical_header_modes =
  (a).rec__decadriver__configuration_type__phr_mode

function us_split_fields_SFD_Timeout__projection(a: us_split_fields8) : sfd_timeout_number =
  (a).rec__decadriver__configuration_type__sfd_timeout

function us_split_fields_Enable_Smart_Power__projection(a: us_split_fields8) : bool =
  (a).rec__decadriver__configuration_type__enable_smart_power

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___136__projection(a: us_split_fields__ref4) : us_split_fields8 =
  (a).us_split_fields__content4

type us_rep4 = { us_split_fields9 : us_split_fields8
}

function us_rep___137__projection(a: us_rep4) : us_split_fields8 =
  (a).us_split_fields9

logic bool_eq26 : us_rep4, us_rep4 -> bool

axiom bool_eq_def25 :
  (forall a:us_rep4. forall b:us_rep4 [bool_eq26(a, b)].
  (((((((((((((to_rep11(((a).us_split_fields9).rec__decadriver__configuration_type__channel) = to_rep11(((b).us_split_fields9).rec__decadriver__configuration_type__channel)) and
  (to_rep12(((a).us_split_fields9).rec__decadriver__configuration_type__prf) = to_rep12(((b).us_split_fields9).rec__decadriver__configuration_type__prf))) and
  (to_rep13(((a).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_length) = to_rep13(((b).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_length))) and
  (to_rep14(((a).us_split_fields9).rec__decadriver__configuration_type__tx_pac) = to_rep14(((b).us_split_fields9).rec__decadriver__configuration_type__tx_pac))) and
  (to_rep15(((a).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_code) = to_rep15(((b).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_code))) and
  (to_rep15(((a).us_split_fields9).rec__decadriver__configuration_type__rx_preamble_code) = to_rep15(((b).us_split_fields9).rec__decadriver__configuration_type__rx_preamble_code))) and
  (((a).us_split_fields9).rec__decadriver__configuration_type__use_nonstandard_sfd = ((b).us_split_fields9).rec__decadriver__configuration_type__use_nonstandard_sfd)) and
  (to_rep10(((a).us_split_fields9).rec__decadriver__configuration_type__data_rate) = to_rep10(((b).us_split_fields9).rec__decadriver__configuration_type__data_rate))) and
  (to_rep16(((a).us_split_fields9).rec__decadriver__configuration_type__phr_mode) = to_rep16(((b).us_split_fields9).rec__decadriver__configuration_type__phr_mode))) and
  (to_rep17(((a).us_split_fields9).rec__decadriver__configuration_type__sfd_timeout) = to_rep17(((b).us_split_fields9).rec__decadriver__configuration_type__sfd_timeout))) and
  (((a).us_split_fields9).rec__decadriver__configuration_type__enable_smart_power = ((b).us_split_fields9).rec__decadriver__configuration_type__enable_smart_power)) ->
  (bool_eq26(a, b) = true)) and
  ((not (((((((((((to_rep11(((a).us_split_fields9).rec__decadriver__configuration_type__channel) = to_rep11(((b).us_split_fields9).rec__decadriver__configuration_type__channel)) and
  (to_rep12(((a).us_split_fields9).rec__decadriver__configuration_type__prf) = to_rep12(((b).us_split_fields9).rec__decadriver__configuration_type__prf))) and
  (to_rep13(((a).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_length) = to_rep13(((b).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_length))) and
  (to_rep14(((a).us_split_fields9).rec__decadriver__configuration_type__tx_pac) = to_rep14(((b).us_split_fields9).rec__decadriver__configuration_type__tx_pac))) and
  (to_rep15(((a).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_code) = to_rep15(((b).us_split_fields9).rec__decadriver__configuration_type__tx_preamble_code))) and
  (to_rep15(((a).us_split_fields9).rec__decadriver__configuration_type__rx_preamble_code) = to_rep15(((b).us_split_fields9).rec__decadriver__configuration_type__rx_preamble_code))) and
  (((a).us_split_fields9).rec__decadriver__configuration_type__use_nonstandard_sfd = ((b).us_split_fields9).rec__decadriver__configuration_type__use_nonstandard_sfd)) and
  (to_rep10(((a).us_split_fields9).rec__decadriver__configuration_type__data_rate) = to_rep10(((b).us_split_fields9).rec__decadriver__configuration_type__data_rate))) and
  (to_rep16(((a).us_split_fields9).rec__decadriver__configuration_type__phr_mode) = to_rep16(((b).us_split_fields9).rec__decadriver__configuration_type__phr_mode))) and
  (to_rep17(((a).us_split_fields9).rec__decadriver__configuration_type__sfd_timeout) = to_rep17(((b).us_split_fields9).rec__decadriver__configuration_type__sfd_timeout))) and
  (((a).us_split_fields9).rec__decadriver__configuration_type__enable_smart_power = ((b).us_split_fields9).rec__decadriver__configuration_type__enable_smart_power))) ->
  (bool_eq26(a, b) = false))))

logic value__size4 : int

logic object__size4 : us_rep4 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep4 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:channel_number. forall a1:prf_type. forall a2:preamble_lengths.
  forall a3:preamble_acq_chunk_length. forall a4:preamble_code_number.
  forall a5:preamble_code_number. forall a6:bool. forall a7:data_rates.
  forall a8:physical_header_modes. forall a9:sfd_timeout_number.
  forall a10:bool. (0 <= object__size4({ us_split_fields9 = {
  rec__decadriver__configuration_type__channel = a;
  rec__decadriver__configuration_type__prf = a1;
  rec__decadriver__configuration_type__tx_preamble_length = a2;
  rec__decadriver__configuration_type__tx_pac = a3;
  rec__decadriver__configuration_type__tx_preamble_code = a4;
  rec__decadriver__configuration_type__rx_preamble_code = a5;
  rec__decadriver__configuration_type__use_nonstandard_sfd = a6;
  rec__decadriver__configuration_type__data_rate = a7;
  rec__decadriver__configuration_type__phr_mode = a8;
  rec__decadriver__configuration_type__sfd_timeout = a9;
  rec__decadriver__configuration_type__enable_smart_power = a10 } })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:channel_number. forall a1:prf_type. forall a2:preamble_lengths.
  forall a3:preamble_acq_chunk_length. forall a4:preamble_code_number.
  forall a5:preamble_code_number. forall a6:bool. forall a7:data_rates.
  forall a8:physical_header_modes. forall a9:sfd_timeout_number.
  forall a10:bool. (0 <= object__alignment4({ us_split_fields9 = {
  rec__decadriver__configuration_type__channel = a;
  rec__decadriver__configuration_type__prf = a1;
  rec__decadriver__configuration_type__tx_preamble_length = a2;
  rec__decadriver__configuration_type__tx_pac = a3;
  rec__decadriver__configuration_type__tx_preamble_code = a4;
  rec__decadriver__configuration_type__rx_preamble_code = a5;
  rec__decadriver__configuration_type__use_nonstandard_sfd = a6;
  rec__decadriver__configuration_type__data_rate = a7;
  rec__decadriver__configuration_type__phr_mode = a8;
  rec__decadriver__configuration_type__sfd_timeout = a9;
  rec__decadriver__configuration_type__enable_smart_power = a10 } })))

logic decadriver__configuration_type__channel__first__bit : int

logic decadriver__configuration_type__channel__last__bit : int

logic decadriver__configuration_type__channel__position : int

axiom decadriver__configuration_type__channel__first__bit_axiom :
  (0 <= decadriver__configuration_type__channel__first__bit)

axiom decadriver__configuration_type__channel__last__bit_axiom :
  (decadriver__configuration_type__channel__first__bit <  decadriver__configuration_type__channel__last__bit)

axiom decadriver__configuration_type__channel__position_axiom :
  (0 <= decadriver__configuration_type__channel__position)

logic decadriver__configuration_type__prf__first__bit : int

logic decadriver__configuration_type__prf__last__bit : int

logic decadriver__configuration_type__prf__position : int

axiom decadriver__configuration_type__prf__first__bit_axiom :
  (0 <= decadriver__configuration_type__prf__first__bit)

axiom decadriver__configuration_type__prf__last__bit_axiom :
  (decadriver__configuration_type__prf__first__bit <  decadriver__configuration_type__prf__last__bit)

axiom decadriver__configuration_type__prf__position_axiom :
  (0 <= decadriver__configuration_type__prf__position)

logic decadriver__configuration_type__tx_preamble_length__first__bit : int

logic decadriver__configuration_type__tx_preamble_length__last__bit : int

logic decadriver__configuration_type__tx_preamble_length__position : int

axiom decadriver__configuration_type__tx_preamble_length__first__bit_axiom :
  (0 <= decadriver__configuration_type__tx_preamble_length__first__bit)

axiom decadriver__configuration_type__tx_preamble_length__last__bit_axiom :
  (decadriver__configuration_type__tx_preamble_length__first__bit <  decadriver__configuration_type__tx_preamble_length__last__bit)

axiom decadriver__configuration_type__tx_preamble_length__position_axiom :
  (0 <= decadriver__configuration_type__tx_preamble_length__position)

logic decadriver__configuration_type__tx_pac__first__bit : int

logic decadriver__configuration_type__tx_pac__last__bit : int

logic decadriver__configuration_type__tx_pac__position : int

axiom decadriver__configuration_type__tx_pac__first__bit_axiom :
  (0 <= decadriver__configuration_type__tx_pac__first__bit)

axiom decadriver__configuration_type__tx_pac__last__bit_axiom :
  (decadriver__configuration_type__tx_pac__first__bit <  decadriver__configuration_type__tx_pac__last__bit)

axiom decadriver__configuration_type__tx_pac__position_axiom :
  (0 <= decadriver__configuration_type__tx_pac__position)

logic decadriver__configuration_type__tx_preamble_code__first__bit : int

logic decadriver__configuration_type__tx_preamble_code__last__bit : int

logic decadriver__configuration_type__tx_preamble_code__position : int

axiom decadriver__configuration_type__tx_preamble_code__first__bit_axiom :
  (0 <= decadriver__configuration_type__tx_preamble_code__first__bit)

axiom decadriver__configuration_type__tx_preamble_code__last__bit_axiom :
  (decadriver__configuration_type__tx_preamble_code__first__bit <  decadriver__configuration_type__tx_preamble_code__last__bit)

axiom decadriver__configuration_type__tx_preamble_code__position_axiom :
  (0 <= decadriver__configuration_type__tx_preamble_code__position)

logic decadriver__configuration_type__rx_preamble_code__first__bit : int

logic decadriver__configuration_type__rx_preamble_code__last__bit : int

logic decadriver__configuration_type__rx_preamble_code__position : int

axiom decadriver__configuration_type__rx_preamble_code__first__bit_axiom :
  (0 <= decadriver__configuration_type__rx_preamble_code__first__bit)

axiom decadriver__configuration_type__rx_preamble_code__last__bit_axiom :
  (decadriver__configuration_type__rx_preamble_code__first__bit <  decadriver__configuration_type__rx_preamble_code__last__bit)

axiom decadriver__configuration_type__rx_preamble_code__position_axiom :
  (0 <= decadriver__configuration_type__rx_preamble_code__position)

logic decadriver__configuration_type__use_nonstandard_sfd__first__bit : int

logic decadriver__configuration_type__use_nonstandard_sfd__last__bit : int

logic decadriver__configuration_type__use_nonstandard_sfd__position : int

axiom decadriver__configuration_type__use_nonstandard_sfd__first__bit_axiom :
  (0 <= decadriver__configuration_type__use_nonstandard_sfd__first__bit)

axiom decadriver__configuration_type__use_nonstandard_sfd__last__bit_axiom :
  (decadriver__configuration_type__use_nonstandard_sfd__first__bit <  decadriver__configuration_type__use_nonstandard_sfd__last__bit)

axiom decadriver__configuration_type__use_nonstandard_sfd__position_axiom :
  (0 <= decadriver__configuration_type__use_nonstandard_sfd__position)

logic decadriver__configuration_type__data_rate__first__bit : int

logic decadriver__configuration_type__data_rate__last__bit : int

logic decadriver__configuration_type__data_rate__position : int

axiom decadriver__configuration_type__data_rate__first__bit_axiom :
  (0 <= decadriver__configuration_type__data_rate__first__bit)

axiom decadriver__configuration_type__data_rate__last__bit_axiom :
  (decadriver__configuration_type__data_rate__first__bit <  decadriver__configuration_type__data_rate__last__bit)

axiom decadriver__configuration_type__data_rate__position_axiom :
  (0 <= decadriver__configuration_type__data_rate__position)

logic decadriver__configuration_type__phr_mode__first__bit : int

logic decadriver__configuration_type__phr_mode__last__bit : int

logic decadriver__configuration_type__phr_mode__position : int

axiom decadriver__configuration_type__phr_mode__first__bit_axiom :
  (0 <= decadriver__configuration_type__phr_mode__first__bit)

axiom decadriver__configuration_type__phr_mode__last__bit_axiom :
  (decadriver__configuration_type__phr_mode__first__bit <  decadriver__configuration_type__phr_mode__last__bit)

axiom decadriver__configuration_type__phr_mode__position_axiom :
  (0 <= decadriver__configuration_type__phr_mode__position)

logic decadriver__configuration_type__sfd_timeout__first__bit : int

logic decadriver__configuration_type__sfd_timeout__last__bit : int

logic decadriver__configuration_type__sfd_timeout__position : int

axiom decadriver__configuration_type__sfd_timeout__first__bit_axiom :
  (0 <= decadriver__configuration_type__sfd_timeout__first__bit)

axiom decadriver__configuration_type__sfd_timeout__last__bit_axiom :
  (decadriver__configuration_type__sfd_timeout__first__bit <  decadriver__configuration_type__sfd_timeout__last__bit)

axiom decadriver__configuration_type__sfd_timeout__position_axiom :
  (0 <= decadriver__configuration_type__sfd_timeout__position)

logic decadriver__configuration_type__enable_smart_power__first__bit : int

logic decadriver__configuration_type__enable_smart_power__last__bit : int

logic decadriver__configuration_type__enable_smart_power__position : int

axiom decadriver__configuration_type__enable_smart_power__first__bit_axiom :
  (0 <= decadriver__configuration_type__enable_smart_power__first__bit)

axiom decadriver__configuration_type__enable_smart_power__last__bit_axiom :
  (decadriver__configuration_type__enable_smart_power__first__bit <  decadriver__configuration_type__enable_smart_power__last__bit)

axiom decadriver__configuration_type__enable_smart_power__position_axiom :
  (0 <= decadriver__configuration_type__enable_smart_power__position)

logic user_eq22 : us_rep4, us_rep4 -> bool

logic dummy63 : channel_number

logic dummy64 : prf_type

logic dummy65 : preamble_lengths

logic dummy66 : preamble_acq_chunk_length

logic dummy67 : preamble_code_number

logic dummy68 : preamble_code_number

logic dummy69 : bool

logic dummy70 : data_rates

logic dummy71 : physical_header_modes

logic dummy72 : sfd_timeout_number

logic dummy73 : bool

type configuration_type__ref = { configuration_type__content : us_rep4
}

function configuration_type__ref___projection(a: configuration_type__ref) : us_rep4 =
  (a).configuration_type__content

type t2

logic tqtint2 : t2 -> int

axiom tqtaxiom2 :
  (forall i:t2. ((0 <= tqtint2(i)) and (tqtint2(i) <= 4294967295)))

logic nth2 : t2, int -> bool

axiom nth_out_of_bound2 :
  (forall x:t2. forall n:int. (((n <  0) or (32 <= n)) -> (nth2(x,
  n) = false)))

logic zeros2 : t2

axiom Nth_zeros2 : (forall n:int. (nth2(zeros2, n) = false))

logic one2 : t2

logic ones2 : t2

axiom Nth_ones2 :
  (forall n:int. (((0 <= n) and (n <  32)) -> (nth2(ones2, n) = true)))

logic bw_and2 : t2, t2 -> t2

axiom Nth_bw_and2 :
  (forall v1:t2. forall v2:t2. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth2(bw_and2(v1, v2), n) = match_bool(nth2(v1, n), nth2(v2, n), false))))

logic bw_or2 : t2, t2 -> t2

axiom Nth_bw_or2 :
  (forall v1:t2. forall v2:t2. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth2(bw_or2(v1, v2), n) = match_bool(nth2(v1, n), true, nth2(v2, n)))))

logic bw_xor2 : t2, t2 -> t2

axiom Nth_bw_xor2 :
  (forall v1:t2. forall v2:t2. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth2(bw_xor2(v1, v2), n) = xorb(nth2(v1, n), nth2(v2, n)))))

logic bw_not2 : t2 -> t2

axiom Nth_bw_not2 :
  (forall v:t2. forall n:int. (((0 <= n) and (n <  32)) -> (nth2(bw_not2(v),
  n) = match_bool(nth2(v, n), false, true))))

logic lsr2 : t2, int -> t2

axiom Lsr_nth_low2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  32) -> (nth2(lsr2(b, s), n) = nth2(b, (n + s)))))))

axiom Lsr_nth_high2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((32 <= (n + s)) -> (nth2(lsr2(b, s), n) = false)))))

axiom lsr_zeros2 : (forall x:t2. (lsr2(x, 0) = x))

logic asr2 : t2, int -> t2

axiom Asr_nth_low2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  32)) -> (((n + s) <  32) -> (nth2(asr2(b, s), n) = nth2(b,
  (n + s)))))))

axiom Asr_nth_high2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  32)) -> ((32 <= (n + s)) -> (nth2(asr2(b, s), n) = nth2(b,
  (32 - 1)))))))

axiom asr_zeros2 : (forall x:t2. (asr2(x, 0) = x))

logic lsl2 : t2, int -> t2

axiom Lsl_nth_high2 :
  (forall b:t2. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  32))) -> (nth2(lsl2(b, s), n) = nth2(b, (n - s)))))

axiom Lsl_nth_low2 :
  (forall b:t2. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth2(lsl2(b, s), n) = false)))

axiom lsl_zeros2 : (forall x:t2. (lsl2(x, 0) = x))

logic rotate_right2 : t2, int -> t2

axiom Nth_rotate_right2 :
  (forall v:t2. forall n:int. forall i:int. (((0 <= i) and (i <  32)) ->
  ((0 <= n) -> (nth2(rotate_right2(v, n), i) = nth2(v, ((i + n) % 32))))))

logic rotate_left2 : t2, int -> t2

axiom Nth_rotate_left2 :
  (forall v:t2. forall n:int. forall i:int. (((0 <= i) and (i <  32)) ->
  ((0 <= n) -> (nth2(rotate_left2(v, n), i) = nth2(v, ((i - n) % 32))))))

logic to_int13 : t2 -> int

logic of_int3 : int -> t2

axiom to_uint_extensionality2 :
  (forall v:t2. forall vqt:t2. ((tqtint2(v) = tqtint2(vqt)) -> (v = vqt)))

axiom to_int_extensionality2 :
  (forall v:t2. forall vqt:t2. ((to_int13(v) = to_int13(vqt)) -> (v = vqt)))

predicate uint_in_range2(i: int) = ((0 <= i) and (i <= 4294967295))

axiom to_uint_bounds2 :
  (forall v:t2. ((0 <= tqtint2(v)) and (tqtint2(v) <  4294967296)))

axiom to_uint_of_int2 :
  (forall i:int. (((0 <= i) and (i <  4294967296)) ->
  (tqtint2(of_int3(i)) = i)))

logic size_bv2 : t2

axiom to_uint_size_bv2 : (tqtint2(size_bv2) = 32)

axiom to_uint_zeros2 : (tqtint2(zeros2) = 0)

axiom to_uint_one2 : (tqtint2(one2) = 1)

axiom to_uint_ones2 : (tqtint2(ones2) = 4294967295)

predicate ult2(x: t2, y: t2) = (tqtint2(x) <  tqtint2(y))

predicate ule2(x: t2, y: t2) = (tqtint2(x) <= tqtint2(y))

predicate ugt2(x: t2, y: t2) = (tqtint2(y) <  tqtint2(x))

predicate uge2(x: t2, y: t2) = (tqtint2(y) <= tqtint2(x))

predicate slt2(v1: t2, v2: t2) = (to_int13(v1) <  to_int13(v2))

predicate sle2(v1: t2, v2: t2) = (to_int13(v1) <= to_int13(v2))

predicate sgt2(v1: t2, v2: t2) = (to_int13(v2) <  to_int13(v1))

predicate sge2(v1: t2, v2: t2) = (to_int13(v2) <= to_int13(v1))

logic add2 : t2, t2 -> t2

axiom to_uint_add_bounded2 :
  (forall v1:t2. forall v2:t2.
  (((tqtint2(v1) + tqtint2(v2)) <  4294967296) -> (tqtint2(add2(v1,
  v2)) = (tqtint2(v1) + tqtint2(v2)))))

logic sub2 : t2, t2 -> t2

axiom to_uint_sub_bounded2 :
  (forall v1:t2. forall v2:t2. (((0 <= (tqtint2(v1) - tqtint2(v2))) and
  ((tqtint2(v1) - tqtint2(v2)) <  4294967296)) -> (tqtint2(sub2(v1,
  v2)) = (tqtint2(v1) - tqtint2(v2)))))

logic neg2 : t2 -> t2

axiom to_uint_neg2 :
  (forall v:t2. (tqtint2(neg2(v)) = ((-tqtint2(v)) % 4294967296)))

logic mul2 : t2, t2 -> t2

axiom to_uint_mul_bounded2 :
  (forall v1:t2. forall v2:t2.
  (((tqtint2(v1) * tqtint2(v2)) <  4294967296) -> (tqtint2(mul2(v1,
  v2)) = (tqtint2(v1) * tqtint2(v2)))))

logic udiv2 : t2, t2 -> t2

axiom to_uint_udiv2 :
  (forall v1:t2. forall v2:t2. (tqtint2(udiv2(v1,
  v2)) = (tqtint2(v1) / tqtint2(v2))))

logic urem2 : t2, t2 -> t2

axiom to_uint_urem2 :
  (forall v1:t2. forall v2:t2. (tqtint2(urem2(v1,
  v2)) = (tqtint2(v1) % tqtint2(v2))))

logic lsr_bv2 : t2, t2 -> t2

axiom lsr_bv_is_lsr2 :
  (forall x:t2. forall n:t2. (lsr_bv2(x, n) = lsr2(x, tqtint2(n))))

axiom to_uint_lsr2 :
  (forall v:t2. forall n:t2. (tqtint2(lsr_bv2(v,
  n)) = (tqtint2(v) / pow2(tqtint2(n)))))

logic asr_bv2 : t2, t2 -> t2

axiom asr_bv_is_asr2 :
  (forall x:t2. forall n:t2. (asr_bv2(x, n) = asr2(x, tqtint2(n))))

logic lsl_bv2 : t2, t2 -> t2

axiom lsl_bv_is_lsl2 :
  (forall x:t2. forall n:t2. (lsl_bv2(x, n) = lsl2(x, tqtint2(n))))

axiom to_uint_lsl2 :
  (forall v:t2. forall n:t2. (tqtint2(lsl_bv2(v,
  n)) = ((tqtint2(v) * pow2(tqtint2(n))) % 4294967296)))

logic rotate_right_bv2 : t2, t2 -> t2

logic rotate_left_bv2 : t2, t2 -> t2

axiom rotate_left_bv_is_rotate_left2 :
  (forall v:t2. forall n:t2. (rotate_left_bv2(v, n) = rotate_left2(v,
  tqtint2(n))))

axiom rotate_right_bv_is_rotate_right2 :
  (forall v:t2. forall n:t2. (rotate_right_bv2(v, n) = rotate_right2(v,
  tqtint2(n))))

logic nth_bv2 : t2, t2 -> bool

axiom Nth_bv_is_nth3 :
  (forall x:t2. forall i:t2. (nth2(x, tqtint2(i)) = nth_bv2(x, i)))

axiom Nth_bv_is_nth22 :
  (forall x:t2. forall i:int. (((0 <= i) and (i <  4294967296)) ->
  (nth_bv2(x, of_int3(i)) = nth2(x, i))))

logic eq_sub_bv2 : t2, t2, t2, t2 -> prop

predicate eq_sub2(a: t2, b: t2, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth2(a, j) = nth2(b,
  j))))

axiom eq_sub_equiv2 :
  (forall a:t2. forall b:t2. forall i:t2. forall n:t2. (eq_sub2(a, b,
  tqtint2(i), tqtint2(n)) <-> eq_sub_bv2(a, b, i, n)))

axiom Extensionality2 :
  (forall x:t2. forall y:t2 [eq_sub2(x, y, 0, 32)]. (eq_sub2(x, y, 0, 32) ->
  (x = y)))

type t__ref2 = { t__content2 : t2
}

logic bool_eq27 : t2, t2 -> bool

axiom bool_eq_def26 :
  (forall x:t2. forall y:t2 [bool_eq27(x, y)]. (((x = y) -> (bool_eq27(x,
  y) = true)) and ((not (x = y)) -> (bool_eq27(x, y) = false))))

logic bool_ne3 : t2, t2 -> bool

axiom bool_ne_def2 :
  (forall x:t2. forall y:t2 [bool_ne3(x, y)]. (((not (x = y)) -> (bool_ne3(x,
  y) = true)) and ((x = y) -> (bool_ne3(x, y) = false))))

logic bool_lt3 : t2, t2 -> bool

axiom bool_lt_def2 :
  (forall x:t2. forall y:t2 [bool_lt3(x, y)]. ((ult2(x, y) -> (bool_lt3(x,
  y) = true)) and ((not ult2(x, y)) -> (bool_lt3(x, y) = false))))

logic bool_le3 : t2, t2 -> bool

axiom bool_le_def2 :
  (forall x:t2. forall y:t2 [bool_le3(x, y)]. ((ule2(x, y) -> (bool_le3(x,
  y) = true)) and ((not ule2(x, y)) -> (bool_le3(x, y) = false))))

logic bool_gt3 : t2, t2 -> bool

axiom bool_gt_def2 :
  (forall x:t2. forall y:t2 [bool_gt3(x, y)]. ((ugt2(x, y) -> (bool_gt3(x,
  y) = true)) and ((not ugt2(x, y)) -> (bool_gt3(x, y) = false))))

logic bool_ge3 : t2, t2 -> bool

axiom bool_ge_def2 :
  (forall x:t2. forall y:t2 [bool_ge3(x, y)]. ((uge2(x, y) -> (bool_ge3(x,
  y) = true)) and ((not uge2(x, y)) -> (bool_ge3(x, y) = false))))

logic power2 : t2, int -> t2

axiom Power_03 : (forall x:t2. (power2(x, 0) = one2))

axiom Power_13 : (forall x:t2. (power2(x, 1) = x))

axiom Power_s3 :
  (forall x:t2. forall n:int. ((0 <= n) -> (power2(x, (n + 1)) = mul2(x,
  power2(x, n)))))

axiom Power_s_alt2 :
  (forall x:t2. forall n:int. ((0 <  n) -> (power2(x, n) = mul2(x, power2(x,
  (n - 1))))))

axiom Power_sum3 :
  (forall x:t2. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power2(x, (n + m)) = mul2(power2(x, n), power2(x, m))))))

axiom Power_mult3 :
  (forall x:t2. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power2(x, (n * m)) = power2(power2(x, n), m)))))

axiom Power_mult22 :
  (forall x:t2. forall y:t2. forall n:int. ((0 <= n) -> (power2(mul2(x, y),
  n) = mul2(power2(x, n), power2(y, n)))))

logic bv_min2 : t2, t2 -> t2

axiom bv_min_def2 :
  (forall x:t2. forall y:t2 [bv_min2(x, y)]. ((ule2(x, y) -> (bv_min2(x,
  y) = x)) and ((not ule2(x, y)) -> (bv_min2(x, y) = y))))

logic bv_max2 : t2, t2 -> t2

axiom bv_max_def2 :
  (forall x:t2. forall y:t2 [bv_max2(x, y)]. ((ule2(x, y) -> (bv_max2(x,
  y) = y)) and ((not ule2(x, y)) -> (bv_max2(x, y) = x))))

axiom bv_min_to_uint2 :
  (forall x:t2. forall y:t2. (tqtint2(bv_min2(x, y)) = min(tqtint2(x),
  tqtint2(y))))

axiom bv_max_to_uint2 :
  (forall x:t2. forall y:t2. (tqtint2(bv_max2(x, y)) = max(tqtint2(x),
  tqtint2(y))))

type bits_32

logic attr__ATTRIBUTE_MODULUS2 : t2

logic bool_eq28 : t2, t2 -> bool

axiom bool_eq_def27 :
  (forall x:t2. forall y:t2 [bool_eq28(x, y)]. (((x = y) -> (bool_eq28(x,
  y) = true)) and ((not (x = y)) -> (bool_eq28(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE19 : t2 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check19 : us_image -> prop

logic attr__ATTRIBUTE_VALUE19 : us_image -> t2

logic user_eq23 : bits_32, bits_32 -> bool

logic dummy74 : bits_32

type bits_32__ref = { bits_32__content : bits_32
}

function bits_32__ref___projection(a: bits_32__ref) : bits_32 =
  (a).bits_32__content

logic to_rep18 : bits_32 -> t2

logic of_rep18 : t2 -> bits_32

axiom inversion_axiom18 :
  (forall x:bits_32 [to_rep18(x)]. (of_rep18(to_rep18(x)) = x))

axiom range_axiom18 : true

axiom coerce_axiom18 :
  (forall x:t2 [to_rep18(of_rep18(x))]. (to_rep18(of_rep18(x)) = x))

function to_int14(x: bits_32) : int = tqtint2(to_rep18(x))

axiom range_int_axiom10 :
  (forall x:bits_32 [to_int14(x)]. uint_in_range2(to_int14(x)))

type map__ref = { map__content : (int,bits_32) farray
}

logic slide : (int,bits_32) farray, int, int -> (int,bits_32) farray

axiom slide_eq :
  (forall a:(int,bits_32) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,bits_32) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,bits_32) farray, int, int, (int,bits_32) farray, int,
  int -> (int,bits_32) farray

axiom concat_def :
  (forall a:(int,bits_32) farray. forall b:(int,bits_32) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : bits_32, int -> (int,bits_32) farray

axiom singleton_def :
  (forall v:bits_32.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq29 : (int,bits_32) farray, int, int, (int,bits_32) farray, int,
  int -> bool

axiom bool_eq_def28 :
  (forall a:(int,bits_32) farray. forall a__first:int. forall a__last:int.
  forall b:(int,bits_32) farray. forall b__first:int. forall b__last:int
  [bool_eq29(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_184:int. ((((a__first <= temp___idx_184) and
  (temp___idx_184 <= a__last)) and
  (to_rep18((a[temp___idx_184])) = to_rep18((b[((b__first - a__first) + temp___idx_184)])))) or
  (not ((a__first <= temp___idx_184) and (temp___idx_184 <= a__last)))))) ->
  (bool_eq29(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_184:int. (((a__first <= temp___idx_184) and
  (temp___idx_184 <= a__last)) ->
  (to_rep18((a[temp___idx_184])) = to_rep18((b[((b__first - a__first) + temp___idx_184)]))))))) ->
  (bool_eq29(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,bits_32) farray. forall b:(int,bits_32) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq29(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_184:int. (((a__first <= temp___idx_184) and
  (temp___idx_184 <= a__last)) ->
  (to_rep18((a[temp___idx_184])) = to_rep18((b[((b__first - a__first) + temp___idx_184)])))))))))

logic compare : (int,bits_32) farray, int, int, (int,bits_32) farray, int,
  int -> int

axiom compare_def_eq :
  (forall a:(int,bits_32) farray. forall b:(int,bits_32) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq29(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,bits_32) farray. forall b:(int,bits_32) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq29(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and ult2(to_rep18((a[(i + 1)])),
  to_rep18((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,bits_32) farray. forall b:(int,bits_32) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq29(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and ugt2(to_rep18((a[(j + 1)])),
  to_rep18((b[(i + 1)]))))))))))))

type us_split_fields10 = { rec__decadriver__driver_type__part_id : bits_32;
rec__decadriver__driver_type__lot_id : bits_32;
rec__decadriver__driver_type__antenna_delay_prf_64 : bits_16;
rec__decadriver__driver_type__antenna_delay_prf_16 : bits_16;
rec__decadriver__driver_type__xtal_trim : bits_5;
rec__decadriver__driver_type__otp_tx_power_levels : (int,bits_32) farray;
rec__decadriver__driver_type__long_frames : bool;
rec__decadriver__driver_type__sys_cfg_reg : us_rep;
rec__decadriver__driver_type__use_otp_xtal_trim : bool;
rec__decadriver__driver_type__use_otp_antenna_delay : bool;
rec__decadriver__driver_type__detect_frame_timeout : bool;
rec__decadriver__driver_type__detect_sfd_timeout : bool;
rec__decadriver__driver_type__detect_phr_error : bool;
rec__decadriver__driver_type__detect_rs_error : bool;
rec__decadriver__driver_type__detect_fcs_error : bool
}

function us_split_fields_Part_ID__projection(a: us_split_fields10) : bits_32 =
  (a).rec__decadriver__driver_type__part_id

function us_split_fields_Lot_ID__projection(a: us_split_fields10) : bits_32 =
  (a).rec__decadriver__driver_type__lot_id

function us_split_fields_Antenna_Delay_PRF_64__projection(a: us_split_fields10) : bits_16 =
  (a).rec__decadriver__driver_type__antenna_delay_prf_64

function us_split_fields_Antenna_Delay_PRF_16__projection(a: us_split_fields10) : bits_16 =
  (a).rec__decadriver__driver_type__antenna_delay_prf_16

function us_split_fields_XTAL_Trim__projection(a: us_split_fields10) : bits_5 =
  (a).rec__decadriver__driver_type__xtal_trim

function us_split_fields_OTP_Tx_Power_Levels__projection(a: us_split_fields10) : (int,bits_32) farray =
  (a).rec__decadriver__driver_type__otp_tx_power_levels

function us_split_fields_Long_Frames__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__long_frames

function us_split_fields_SYS_CFG_Reg__projection(a: us_split_fields10) : us_rep =
  (a).rec__decadriver__driver_type__sys_cfg_reg

function us_split_fields_Use_OTP_XTAL_Trim__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__use_otp_xtal_trim

function us_split_fields_Use_OTP_Antenna_Delay__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__use_otp_antenna_delay

function us_split_fields_Detect_Frame_Timeout__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__detect_frame_timeout

function us_split_fields_Detect_SFD_Timeout__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__detect_sfd_timeout

function us_split_fields_Detect_PHR_Error__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__detect_phr_error

function us_split_fields_Detect_RS_Error__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__detect_rs_error

function us_split_fields_Detect_FCS_Error__projection(a: us_split_fields10) : bool =
  (a).rec__decadriver__driver_type__detect_fcs_error

type us_split_fields__ref5 = { us_split_fields__content5 : us_split_fields10
}

function us_split_fields__ref___140__projection(a: us_split_fields__ref5) : us_split_fields10 =
  (a).us_split_fields__content5

type us_rep5 = { us_split_fields11 : us_split_fields10
}

function us_rep___141__projection(a: us_rep5) : us_split_fields10 =
  (a).us_split_fields11

logic value__size5 : int

logic object__size5 : us_rep5 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep5 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (forall a:us_rep5. (0 <= object__size5(a)))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:us_rep5. (0 <= object__alignment5(a)))

logic decadriver__driver_type__part_id__first__bit : int

logic decadriver__driver_type__part_id__last__bit : int

logic decadriver__driver_type__part_id__position : int

axiom decadriver__driver_type__part_id__first__bit_axiom :
  (0 <= decadriver__driver_type__part_id__first__bit)

axiom decadriver__driver_type__part_id__last__bit_axiom :
  (decadriver__driver_type__part_id__first__bit <  decadriver__driver_type__part_id__last__bit)

axiom decadriver__driver_type__part_id__position_axiom :
  (0 <= decadriver__driver_type__part_id__position)

logic decadriver__driver_type__lot_id__first__bit : int

logic decadriver__driver_type__lot_id__last__bit : int

logic decadriver__driver_type__lot_id__position : int

axiom decadriver__driver_type__lot_id__first__bit_axiom :
  (0 <= decadriver__driver_type__lot_id__first__bit)

axiom decadriver__driver_type__lot_id__last__bit_axiom :
  (decadriver__driver_type__lot_id__first__bit <  decadriver__driver_type__lot_id__last__bit)

axiom decadriver__driver_type__lot_id__position_axiom :
  (0 <= decadriver__driver_type__lot_id__position)

logic decadriver__driver_type__antenna_delay_prf_64__first__bit : int

logic decadriver__driver_type__antenna_delay_prf_64__last__bit : int

logic decadriver__driver_type__antenna_delay_prf_64__position : int

axiom decadriver__driver_type__antenna_delay_prf_64__first__bit_axiom :
  (0 <= decadriver__driver_type__antenna_delay_prf_64__first__bit)

axiom decadriver__driver_type__antenna_delay_prf_64__last__bit_axiom :
  (decadriver__driver_type__antenna_delay_prf_64__first__bit <  decadriver__driver_type__antenna_delay_prf_64__last__bit)

axiom decadriver__driver_type__antenna_delay_prf_64__position_axiom :
  (0 <= decadriver__driver_type__antenna_delay_prf_64__position)

logic decadriver__driver_type__antenna_delay_prf_16__first__bit : int

logic decadriver__driver_type__antenna_delay_prf_16__last__bit : int

logic decadriver__driver_type__antenna_delay_prf_16__position : int

axiom decadriver__driver_type__antenna_delay_prf_16__first__bit_axiom :
  (0 <= decadriver__driver_type__antenna_delay_prf_16__first__bit)

axiom decadriver__driver_type__antenna_delay_prf_16__last__bit_axiom :
  (decadriver__driver_type__antenna_delay_prf_16__first__bit <  decadriver__driver_type__antenna_delay_prf_16__last__bit)

axiom decadriver__driver_type__antenna_delay_prf_16__position_axiom :
  (0 <= decadriver__driver_type__antenna_delay_prf_16__position)

logic decadriver__driver_type__xtal_trim__first__bit : int

logic decadriver__driver_type__xtal_trim__last__bit : int

logic decadriver__driver_type__xtal_trim__position : int

axiom decadriver__driver_type__xtal_trim__first__bit_axiom :
  (0 <= decadriver__driver_type__xtal_trim__first__bit)

axiom decadriver__driver_type__xtal_trim__last__bit_axiom :
  (decadriver__driver_type__xtal_trim__first__bit <  decadriver__driver_type__xtal_trim__last__bit)

axiom decadriver__driver_type__xtal_trim__position_axiom :
  (0 <= decadriver__driver_type__xtal_trim__position)

logic decadriver__driver_type__otp_tx_power_levels__first__bit : int

logic decadriver__driver_type__otp_tx_power_levels__last__bit : int

logic decadriver__driver_type__otp_tx_power_levels__position : int

axiom decadriver__driver_type__otp_tx_power_levels__first__bit_axiom :
  (0 <= decadriver__driver_type__otp_tx_power_levels__first__bit)

axiom decadriver__driver_type__otp_tx_power_levels__last__bit_axiom :
  (decadriver__driver_type__otp_tx_power_levels__first__bit <  decadriver__driver_type__otp_tx_power_levels__last__bit)

axiom decadriver__driver_type__otp_tx_power_levels__position_axiom :
  (0 <= decadriver__driver_type__otp_tx_power_levels__position)

logic decadriver__driver_type__long_frames__first__bit : int

logic decadriver__driver_type__long_frames__last__bit : int

logic decadriver__driver_type__long_frames__position : int

axiom decadriver__driver_type__long_frames__first__bit_axiom :
  (0 <= decadriver__driver_type__long_frames__first__bit)

axiom decadriver__driver_type__long_frames__last__bit_axiom :
  (decadriver__driver_type__long_frames__first__bit <  decadriver__driver_type__long_frames__last__bit)

axiom decadriver__driver_type__long_frames__position_axiom :
  (0 <= decadriver__driver_type__long_frames__position)

logic decadriver__driver_type__sys_cfg_reg__first__bit : int

logic decadriver__driver_type__sys_cfg_reg__last__bit : int

logic decadriver__driver_type__sys_cfg_reg__position : int

axiom decadriver__driver_type__sys_cfg_reg__first__bit_axiom :
  (0 <= decadriver__driver_type__sys_cfg_reg__first__bit)

axiom decadriver__driver_type__sys_cfg_reg__last__bit_axiom :
  (decadriver__driver_type__sys_cfg_reg__first__bit <  decadriver__driver_type__sys_cfg_reg__last__bit)

axiom decadriver__driver_type__sys_cfg_reg__position_axiom :
  (0 <= decadriver__driver_type__sys_cfg_reg__position)

logic decadriver__driver_type__use_otp_xtal_trim__first__bit : int

logic decadriver__driver_type__use_otp_xtal_trim__last__bit : int

logic decadriver__driver_type__use_otp_xtal_trim__position : int

axiom decadriver__driver_type__use_otp_xtal_trim__first__bit_axiom :
  (0 <= decadriver__driver_type__use_otp_xtal_trim__first__bit)

axiom decadriver__driver_type__use_otp_xtal_trim__last__bit_axiom :
  (decadriver__driver_type__use_otp_xtal_trim__first__bit <  decadriver__driver_type__use_otp_xtal_trim__last__bit)

axiom decadriver__driver_type__use_otp_xtal_trim__position_axiom :
  (0 <= decadriver__driver_type__use_otp_xtal_trim__position)

logic decadriver__driver_type__use_otp_antenna_delay__first__bit : int

logic decadriver__driver_type__use_otp_antenna_delay__last__bit : int

logic decadriver__driver_type__use_otp_antenna_delay__position : int

axiom decadriver__driver_type__use_otp_antenna_delay__first__bit_axiom :
  (0 <= decadriver__driver_type__use_otp_antenna_delay__first__bit)

axiom decadriver__driver_type__use_otp_antenna_delay__last__bit_axiom :
  (decadriver__driver_type__use_otp_antenna_delay__first__bit <  decadriver__driver_type__use_otp_antenna_delay__last__bit)

axiom decadriver__driver_type__use_otp_antenna_delay__position_axiom :
  (0 <= decadriver__driver_type__use_otp_antenna_delay__position)

logic decadriver__driver_type__detect_frame_timeout__first__bit : int

logic decadriver__driver_type__detect_frame_timeout__last__bit : int

logic decadriver__driver_type__detect_frame_timeout__position : int

axiom decadriver__driver_type__detect_frame_timeout__first__bit_axiom :
  (0 <= decadriver__driver_type__detect_frame_timeout__first__bit)

axiom decadriver__driver_type__detect_frame_timeout__last__bit_axiom :
  (decadriver__driver_type__detect_frame_timeout__first__bit <  decadriver__driver_type__detect_frame_timeout__last__bit)

axiom decadriver__driver_type__detect_frame_timeout__position_axiom :
  (0 <= decadriver__driver_type__detect_frame_timeout__position)

logic decadriver__driver_type__detect_sfd_timeout__first__bit : int

logic decadriver__driver_type__detect_sfd_timeout__last__bit : int

logic decadriver__driver_type__detect_sfd_timeout__position : int

axiom decadriver__driver_type__detect_sfd_timeout__first__bit_axiom :
  (0 <= decadriver__driver_type__detect_sfd_timeout__first__bit)

axiom decadriver__driver_type__detect_sfd_timeout__last__bit_axiom :
  (decadriver__driver_type__detect_sfd_timeout__first__bit <  decadriver__driver_type__detect_sfd_timeout__last__bit)

axiom decadriver__driver_type__detect_sfd_timeout__position_axiom :
  (0 <= decadriver__driver_type__detect_sfd_timeout__position)

logic decadriver__driver_type__detect_phr_error__first__bit : int

logic decadriver__driver_type__detect_phr_error__last__bit : int

logic decadriver__driver_type__detect_phr_error__position : int

axiom decadriver__driver_type__detect_phr_error__first__bit_axiom :
  (0 <= decadriver__driver_type__detect_phr_error__first__bit)

axiom decadriver__driver_type__detect_phr_error__last__bit_axiom :
  (decadriver__driver_type__detect_phr_error__first__bit <  decadriver__driver_type__detect_phr_error__last__bit)

axiom decadriver__driver_type__detect_phr_error__position_axiom :
  (0 <= decadriver__driver_type__detect_phr_error__position)

logic decadriver__driver_type__detect_rs_error__first__bit : int

logic decadriver__driver_type__detect_rs_error__last__bit : int

logic decadriver__driver_type__detect_rs_error__position : int

axiom decadriver__driver_type__detect_rs_error__first__bit_axiom :
  (0 <= decadriver__driver_type__detect_rs_error__first__bit)

axiom decadriver__driver_type__detect_rs_error__last__bit_axiom :
  (decadriver__driver_type__detect_rs_error__first__bit <  decadriver__driver_type__detect_rs_error__last__bit)

axiom decadriver__driver_type__detect_rs_error__position_axiom :
  (0 <= decadriver__driver_type__detect_rs_error__position)

logic decadriver__driver_type__detect_fcs_error__first__bit : int

logic decadriver__driver_type__detect_fcs_error__last__bit : int

logic decadriver__driver_type__detect_fcs_error__position : int

axiom decadriver__driver_type__detect_fcs_error__first__bit_axiom :
  (0 <= decadriver__driver_type__detect_fcs_error__first__bit)

axiom decadriver__driver_type__detect_fcs_error__last__bit_axiom :
  (decadriver__driver_type__detect_fcs_error__first__bit <  decadriver__driver_type__detect_fcs_error__last__bit)

axiom decadriver__driver_type__detect_fcs_error__position_axiom :
  (0 <= decadriver__driver_type__detect_fcs_error__position)

logic user_eq24 : us_rep5, us_rep5 -> bool

type driver_type__ref = { driver_type__content : us_rep5
}

function driver_type__ref___projection(a: driver_type__ref) : us_rep5 =
  (a).driver_type__content

logic temp___4500 : t2 -> (int,bits_32) farray

axiom def_axiom :
  (forall temp___4502:t2.
  (forall temp___4503:int.
  ((temp___4500(temp___4502)[temp___4503]) = of_rep18(temp___4502))))

logic config : channel_number

logic config1 : prf_type

logic config2 : preamble_lengths

logic config3 : preamble_acq_chunk_length

logic config4 : preamble_code_number

logic config5 : preamble_code_number

logic config6 : bool

logic config7 : data_rates

logic config8 : physical_header_modes

logic config9 : sfd_timeout_number

logic config10 : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

logic phr_mode : us_rep5 -> int

logic phr_mode__function_guard : int, us_rep5 -> prop

axiom phr_mode__post_axiom :
  (forall self__:us_rep5 [phr_mode(self__)]. in_range15(phr_mode(self__)))

type map__ref1 = { map__content1 : (int,bits_16) farray
}

logic slide1 : (int,bits_16) farray, int, int -> (int,bits_16) farray

axiom slide_eq1 :
  (forall a:(int,bits_16) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,bits_16) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,bits_16) farray, int, int, (int,bits_16) farray, int,
  int -> (int,bits_16) farray

axiom concat_def1 :
  (forall a:(int,bits_16) farray. forall b:(int,bits_16) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : bits_16, int -> (int,bits_16) farray

axiom singleton_def1 :
  (forall v:bits_16.
  (forall i:int [(singleton1(v, i)[i])]. ((singleton1(v, i)[i]) = v)))

logic bool_eq30 : (int,bits_16) farray, int, int, (int,bits_16) farray, int,
  int -> bool

axiom bool_eq_def29 :
  (forall a:(int,bits_16) farray. forall a__first:int. forall a__last:int.
  forall b:(int,bits_16) farray. forall b__first:int. forall b__last:int
  [bool_eq30(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_185:int. ((((a__first <= temp___idx_185) and
  (temp___idx_185 <= a__last)) and
  (to_rep9((a[temp___idx_185])) = to_rep9((b[((b__first - a__first) + temp___idx_185)])))) or
  (not ((a__first <= temp___idx_185) and (temp___idx_185 <= a__last)))))) ->
  (bool_eq30(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_185:int. (((a__first <= temp___idx_185) and
  (temp___idx_185 <= a__last)) ->
  (to_rep9((a[temp___idx_185])) = to_rep9((b[((b__first - a__first) + temp___idx_185)]))))))) ->
  (bool_eq30(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,bits_16) farray. forall b:(int,bits_16) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq30(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_185:int. (((a__first <= temp___idx_185) and
  (temp___idx_185 <= a__last)) ->
  (to_rep9((a[temp___idx_185])) = to_rep9((b[((b__first - a__first) + temp___idx_185)])))))))))

logic compare1 : (int,bits_16) farray, int, int, (int,bits_16) farray, int,
  int -> int

axiom compare_def_eq1 :
  (forall a:(int,bits_16) farray. forall b:(int,bits_16) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq30(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt1 :
  (forall a:(int,bits_16) farray. forall b:(int,bits_16) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq30(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and ult1(to_rep9((a[(i + 1)])), to_rep9((b[(j + 1)]))))))))))))

axiom compare_def_gt1 :
  (forall a:(int,bits_16) farray. forall b:(int,bits_16) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare1(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq30(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and ugt1(to_rep9((a[(j + 1)])), to_rep9((b[(i + 1)]))))))))))))

logic lde_replica_coeffs : (int,bits_16) farray

logic attr__ATTRIBUTE_ADDRESS2 : int

logic decadriver__lde_replica_coeffs__aggregate_def : t1, t1, t1, t1, t1, t1,
  t1, t1, t1, t1, t1, t1, t1, t1, t1, t1, t1, t1, t1, t1, t1, t1, t1,
  t1 -> (int,bits_16) farray

axiom def_axiom1 :
  (forall temp___187:t1. forall temp___188:t1. forall temp___189:t1.
  forall temp___190:t1. forall temp___191:t1. forall temp___192:t1.
  forall temp___193:t1. forall temp___194:t1. forall temp___195:t1.
  forall temp___196:t1. forall temp___197:t1. forall temp___198:t1.
  forall temp___199:t1. forall temp___200:t1. forall temp___201:t1.
  forall temp___202:t1. forall temp___203:t1. forall temp___204:t1.
  forall temp___205:t1. forall temp___206:t1. forall temp___207:t1.
  forall temp___208:t1. forall temp___209:t1. forall temp___210:t1.
  (((((((((((((((((((((((((decadriver__lde_replica_coeffs__aggregate_def(temp___187,
  temp___188, temp___189, temp___190, temp___191, temp___192, temp___193,
  temp___194, temp___195, temp___196, temp___197, temp___198, temp___199,
  temp___200, temp___201, temp___202, temp___203, temp___204, temp___205,
  temp___206, temp___207, temp___208, temp___209,
  temp___210)[1]) = of_rep9(temp___187)) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[2]) = of_rep9(temp___188))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[3]) = of_rep9(temp___189))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[4]) = of_rep9(temp___190))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[5]) = of_rep9(temp___191))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[6]) = of_rep9(temp___192))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[7]) = of_rep9(temp___193))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[8]) = of_rep9(temp___194))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[9]) = of_rep9(temp___195))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[10]) = of_rep9(temp___196))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[11]) = of_rep9(temp___197))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[12]) = of_rep9(temp___198))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[13]) = of_rep9(temp___199))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[14]) = of_rep9(temp___200))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[15]) = of_rep9(temp___201))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[16]) = of_rep9(temp___202))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[17]) = of_rep9(temp___203))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[18]) = of_rep9(temp___204))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[19]) = of_rep9(temp___205))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[20]) = of_rep9(temp___206))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[21]) = of_rep9(temp___207))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[22]) = of_rep9(temp___208))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[23]) = of_rep9(temp___209))) and
  ((decadriver__lde_replica_coeffs__aggregate_def(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209,
  temp___210)[24]) = of_rep9(temp___210))))

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

axiom lde_replica_coeffs__def_axiom :
  (lde_replica_coeffs = decadriver__lde_replica_coeffs__aggregate_def(of_int1(22938),
  of_int1(22938), of_int1(20972), of_int1(17039), of_int1(17695),
  of_int1(11796), of_int1(32768), of_int1(20972), of_int1(10486),
  of_int1(13107), of_int1(15073), of_int1(15729), of_int1(15073),
  of_int1(13763), of_int1(17695), of_int1(13763), of_int1(13107),
  of_int1(13763), of_int1(13763), of_int1(18350), of_int1(15073),
  of_int1(14418), of_int1(12452), of_int1(14418)))

 (* File "decadriver.ads", line 242, characters 0-0 *)
goal WP_parameter_def :
  (forall lde_repc_reg__split_fields:bits_16. forall sfd_timeout:int.
  forall self__:driver_type__ref. forall o:bits_16. forall o1:bits_16.
  forall temp___4653:bits_16. forall o2:bits_1. forall o3:us_split_fields.
  forall o4:us_rep. forall o5:us_split_fields10. forall o6:us_rep5.
  forall o7:bits_16. forall o8:bits_16. forall temp___4657:bits_16.
  forall o9:bits_1. forall o10:us_split_fields. forall o11:us_rep.
  forall o12:us_split_fields10. forall o13:us_rep5. forall o14:int.
  forall o15:t. forall o16:bits_2. forall o17:us_split_fields.
  forall o18:us_rep. forall o19:us_split_fields10. forall o20:us_rep5.
  forall o21:int. forall o22:bits_9. forall o23:bits_5. forall o24:bits_5.
  forall o25:bits_1. forall o26:bits_1. forall o27:bits_2. forall o28:bits_1.
  forall o29:bits_4. forall o30:bits_4. forall o31:bits_4. forall o32:bits_4.
  forall o33:bits_1. forall o34:bits_2. forall o35:bits_1. forall o36:bits_1.
  forall o37:bits_5. forall o38:bits_5. forall o39:bits_9. forall o40:bits_4.
  forall o41:bits_4. forall o42:bits_1. forall o43:bits_2. forall o44:bits_1.
  forall o45:bits_1. forall o46:bits_5. forall o47:bits_5. forall o48:bits_9.
  forall o49:bits_8. forall o50:bits_10. forall o51:bits_2.
  forall o52:bits_2. forall o53:bits_2. forall o54:bits_1.
  forall result:bits_16. forall lde_repc_reg__split_fields1:bits_16.
  forall result1:driver_type__ref. forall self__1:us_rep5.
  forall result2:bits_16. forall lde_repc_reg__split_fields2:bits_16.
  forall result3:driver_type__ref. forall self__2:us_rep5.
  forall result4:driver_type__ref. forall self__3:us_rep5.
  forall result5:driver_type__ref. forall self__4:us_rep5.
  forall result6:int. forall sfd_timeout1:int.
  forall device_state:us_private. forall device_state1:us_private.
  ((decadriver__lde_replica_coeffs__aggregate_def(of_int1(22938),
  of_int1(22938), of_int1(20972), of_int1(17039), of_int1(17695),
  of_int1(11796), of_int1(32768), of_int1(20972), of_int1(10486),
  of_int1(13107), of_int1(15073), of_int1(15729), of_int1(15073),
  of_int1(13763), of_int1(17695), of_int1(13763), of_int1(13107),
  of_int1(13763), of_int1(13763), of_int1(18350), of_int1(15073),
  of_int1(14418), of_int1(12452), of_int1(14418)) = lde_replica_coeffs) ->
  ((in_range10(i17s) and (((1 <= i17s) and (i17s <= 5)) or ((7 <= i17s) and
  (i17s <= 7)))) -> ((((1 <= to_rep11(config)) and
  (to_rep11(config) <= 5)) or ((7 <= to_rep11(config)) and
  (to_rep11(config) <= 7))) -> (((0 <= 65535) -> in_range16(sfd_timeout)) ->
  (((((to_rep9(o) = to_rep9((lde_replica_coeffs[to_rep15(config5)]))) and
  (o = o1)) and (temp___4653 = o1)) and (({ us_split_fields__content3 = {
  rec__dw1000__register_types__lde_repc_type__lde_repc = result } } = {
  us_split_fields__content3 = {
  rec__dw1000__register_types__lde_repc_type__lde_repc =
  lde_repc_reg__split_fields } }) and
  (temp___4653 = lde_repc_reg__split_fields1))) ->
  ((((to_rep10(config7) = 0) and (((((((to_rep(o2) = of_int(1)) and (o3 = {
  rec__dw1000__register_types__sys_cfg_type__ffen =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffen;
  rec__dw1000__register_types__sys_cfg_type__ffbc =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffbc;
  rec__dw1000__register_types__sys_cfg_type__ffab =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffab;
  rec__dw1000__register_types__sys_cfg_type__ffad =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffad;
  rec__dw1000__register_types__sys_cfg_type__ffaa =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffaa;
  rec__dw1000__register_types__sys_cfg_type__ffam =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffam;
  rec__dw1000__register_types__sys_cfg_type__ffar =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffar;
  rec__dw1000__register_types__sys_cfg_type__ffa4 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa4;
  rec__dw1000__register_types__sys_cfg_type__ffa5 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa5;
  rec__dw1000__register_types__sys_cfg_type__hirq_pol =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__hirq_pol;
  rec__dw1000__register_types__sys_cfg_type__spi_edge =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__spi_edge;
  rec__dw1000__register_types__sys_cfg_type__dis_fce =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_fce;
  rec__dw1000__register_types__sys_cfg_type__dis_drxb =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_drxb;
  rec__dw1000__register_types__sys_cfg_type__dis_phe =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_phe;
  rec__dw1000__register_types__sys_cfg_type__dis_rsde =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_rsde;
  rec__dw1000__register_types__sys_cfg_type__fcs_int2f =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__fcs_int2f;
  rec__dw1000__register_types__sys_cfg_type__phr_mode =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__phr_mode;
  rec__dw1000__register_types__sys_cfg_type__dis_stxp =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_stxp;
  rec__dw1000__register_types__sys_cfg_type__rxm110k = o2;
  rec__dw1000__register_types__sys_cfg_type__rxwtoe =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxwtoe;
  rec__dw1000__register_types__sys_cfg_type__rxautr =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxautr;
  rec__dw1000__register_types__sys_cfg_type__autoack =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__autoack;
  rec__dw1000__register_types__sys_cfg_type__aackpend =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__aackpend;
  rec__dw1000__register_types__sys_cfg_type__reserved_1 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_1;
  rec__dw1000__register_types__sys_cfg_type__reserved_2 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_2
  })) and (o4 = { us_split_fields1 = o3 })) and (o5 = {
  rec__decadriver__driver_type__part_id =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__part_id;
  rec__decadriver__driver_type__lot_id =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__lot_id;
  rec__decadriver__driver_type__antenna_delay_prf_64 =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_64;
  rec__decadriver__driver_type__antenna_delay_prf_16 =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_16;
  rec__decadriver__driver_type__xtal_trim =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__xtal_trim;
  rec__decadriver__driver_type__otp_tx_power_levels =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__otp_tx_power_levels;
  rec__decadriver__driver_type__long_frames =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__long_frames;
  rec__decadriver__driver_type__sys_cfg_reg = o4;
  rec__decadriver__driver_type__use_otp_xtal_trim =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__use_otp_xtal_trim;
  rec__decadriver__driver_type__use_otp_antenna_delay =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__use_otp_antenna_delay;
  rec__decadriver__driver_type__detect_frame_timeout =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_frame_timeout;
  rec__decadriver__driver_type__detect_sfd_timeout =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_sfd_timeout;
  rec__decadriver__driver_type__detect_phr_error =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_phr_error;
  rec__decadriver__driver_type__detect_rs_error =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_rs_error;
  rec__decadriver__driver_type__detect_fcs_error =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_fcs_error
  })) and (o6 = { us_split_fields11 = o5 })) and ((result1 = self__) and
  (self__1 = o6))) and
  ((((to_rep9(o7) = udiv1(to_rep9(lde_repc_reg__split_fields1),
  of_int1(8))) and (o7 = o8)) and (temp___4657 = o8)) and
  ((result2 = lde_repc_reg__split_fields1) and
  (temp___4657 = lde_repc_reg__split_fields2))))) or
  ((not (to_rep10(config7) = 0)) and (((((((to_rep(o9) = of_int(0)) and
  (o10 = { rec__dw1000__register_types__sys_cfg_type__ffen =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffen;
  rec__dw1000__register_types__sys_cfg_type__ffbc =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffbc;
  rec__dw1000__register_types__sys_cfg_type__ffab =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffab;
  rec__dw1000__register_types__sys_cfg_type__ffad =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffad;
  rec__dw1000__register_types__sys_cfg_type__ffaa =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffaa;
  rec__dw1000__register_types__sys_cfg_type__ffam =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffam;
  rec__dw1000__register_types__sys_cfg_type__ffar =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffar;
  rec__dw1000__register_types__sys_cfg_type__ffa4 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa4;
  rec__dw1000__register_types__sys_cfg_type__ffa5 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa5;
  rec__dw1000__register_types__sys_cfg_type__hirq_pol =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__hirq_pol;
  rec__dw1000__register_types__sys_cfg_type__spi_edge =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__spi_edge;
  rec__dw1000__register_types__sys_cfg_type__dis_fce =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_fce;
  rec__dw1000__register_types__sys_cfg_type__dis_drxb =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_drxb;
  rec__dw1000__register_types__sys_cfg_type__dis_phe =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_phe;
  rec__dw1000__register_types__sys_cfg_type__dis_rsde =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_rsde;
  rec__dw1000__register_types__sys_cfg_type__fcs_int2f =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__fcs_int2f;
  rec__dw1000__register_types__sys_cfg_type__phr_mode =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__phr_mode;
  rec__dw1000__register_types__sys_cfg_type__dis_stxp =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_stxp;
  rec__dw1000__register_types__sys_cfg_type__rxm110k = o9;
  rec__dw1000__register_types__sys_cfg_type__rxwtoe =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxwtoe;
  rec__dw1000__register_types__sys_cfg_type__rxautr =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxautr;
  rec__dw1000__register_types__sys_cfg_type__autoack =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__autoack;
  rec__dw1000__register_types__sys_cfg_type__aackpend =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__aackpend;
  rec__dw1000__register_types__sys_cfg_type__reserved_1 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_1;
  rec__dw1000__register_types__sys_cfg_type__reserved_2 =
  (((((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_2
  })) and (o11 = { us_split_fields1 = o10 })) and (o12 = {
  rec__decadriver__driver_type__part_id =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__part_id;
  rec__decadriver__driver_type__lot_id =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__lot_id;
  rec__decadriver__driver_type__antenna_delay_prf_64 =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_64;
  rec__decadriver__driver_type__antenna_delay_prf_16 =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_16;
  rec__decadriver__driver_type__xtal_trim =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__xtal_trim;
  rec__decadriver__driver_type__otp_tx_power_levels =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__otp_tx_power_levels;
  rec__decadriver__driver_type__long_frames =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__long_frames;
  rec__decadriver__driver_type__sys_cfg_reg = o11;
  rec__decadriver__driver_type__use_otp_xtal_trim =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__use_otp_xtal_trim;
  rec__decadriver__driver_type__use_otp_antenna_delay =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__use_otp_antenna_delay;
  rec__decadriver__driver_type__detect_frame_timeout =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_frame_timeout;
  rec__decadriver__driver_type__detect_sfd_timeout =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_sfd_timeout;
  rec__decadriver__driver_type__detect_phr_error =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_phr_error;
  rec__decadriver__driver_type__detect_rs_error =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_rs_error;
  rec__decadriver__driver_type__detect_fcs_error =
  (((self__).driver_type__content).us_split_fields11).rec__decadriver__driver_type__detect_fcs_error
  })) and (o13 = { us_split_fields11 = o12 })) and ((result3 = self__) and
  (self__2 = o13))) and ((({ driver_type__content = self__1 } = {
  driver_type__content = self__2 }) and ({
  rec__dw1000__register_types__lde_repc_type__lde_repc =
  lde_repc_reg__split_fields2 } = {
  rec__dw1000__register_types__lde_repc_type__lde_repc =
  lde_repc_reg__split_fields1 })) and ((self__1 = self__2) and ({
  rec__dw1000__register_types__lde_repc_type__lde_repc =
  lde_repc_reg__split_fields2 } = {
  rec__dw1000__register_types__lde_repc_type__lde_repc =
  lde_repc_reg__split_fields1 })))))) -> (((result4 = {
  driver_type__content = self__1 }) and (((to_rep16(config8) = 1) and
  (self__3 = { us_split_fields11 = { rec__decadriver__driver_type__part_id =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__part_id;
  rec__decadriver__driver_type__lot_id =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__lot_id;
  rec__decadriver__driver_type__antenna_delay_prf_64 =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_64;
  rec__decadriver__driver_type__antenna_delay_prf_16 =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_16;
  rec__decadriver__driver_type__xtal_trim =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__xtal_trim;
  rec__decadriver__driver_type__otp_tx_power_levels =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__otp_tx_power_levels;
  rec__decadriver__driver_type__long_frames = true;
  rec__decadriver__driver_type__sys_cfg_reg =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg;
  rec__decadriver__driver_type__use_otp_xtal_trim =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__use_otp_xtal_trim;
  rec__decadriver__driver_type__use_otp_antenna_delay =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__use_otp_antenna_delay;
  rec__decadriver__driver_type__detect_frame_timeout =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_frame_timeout;
  rec__decadriver__driver_type__detect_sfd_timeout =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_sfd_timeout;
  rec__decadriver__driver_type__detect_phr_error =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_phr_error;
  rec__decadriver__driver_type__detect_rs_error =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_rs_error;
  rec__decadriver__driver_type__detect_fcs_error =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_fcs_error
  } })) or ((not (to_rep16(config8) = 1)) and (self__3 = {
  us_split_fields11 = { rec__decadriver__driver_type__part_id =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__part_id;
  rec__decadriver__driver_type__lot_id =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__lot_id;
  rec__decadriver__driver_type__antenna_delay_prf_64 =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_64;
  rec__decadriver__driver_type__antenna_delay_prf_16 =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_16;
  rec__decadriver__driver_type__xtal_trim =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__xtal_trim;
  rec__decadriver__driver_type__otp_tx_power_levels =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__otp_tx_power_levels;
  rec__decadriver__driver_type__long_frames = false;
  rec__decadriver__driver_type__sys_cfg_reg =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg;
  rec__decadriver__driver_type__use_otp_xtal_trim =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__use_otp_xtal_trim;
  rec__decadriver__driver_type__use_otp_antenna_delay =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__use_otp_antenna_delay;
  rec__decadriver__driver_type__detect_frame_timeout =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_frame_timeout;
  rec__decadriver__driver_type__detect_sfd_timeout =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_sfd_timeout;
  rec__decadriver__driver_type__detect_phr_error =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_phr_error;
  rec__decadriver__driver_type__detect_rs_error =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_rs_error;
  rec__decadriver__driver_type__detect_fcs_error =
  ((self__1).us_split_fields11).rec__decadriver__driver_type__detect_fcs_error
  } })))) -> ((((((((((o14 = to_rep16(config8)) and
  in_range_int1(to_rep16(config8))) and (o15 = of_int(o14))) and
  (to_rep1(o16) = o15)) and (o17 = {
  rec__dw1000__register_types__sys_cfg_type__ffen =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffen;
  rec__dw1000__register_types__sys_cfg_type__ffbc =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffbc;
  rec__dw1000__register_types__sys_cfg_type__ffab =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffab;
  rec__dw1000__register_types__sys_cfg_type__ffad =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffad;
  rec__dw1000__register_types__sys_cfg_type__ffaa =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffaa;
  rec__dw1000__register_types__sys_cfg_type__ffam =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffam;
  rec__dw1000__register_types__sys_cfg_type__ffar =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffar;
  rec__dw1000__register_types__sys_cfg_type__ffa4 =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa4;
  rec__dw1000__register_types__sys_cfg_type__ffa5 =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__ffa5;
  rec__dw1000__register_types__sys_cfg_type__hirq_pol =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__hirq_pol;
  rec__dw1000__register_types__sys_cfg_type__spi_edge =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__spi_edge;
  rec__dw1000__register_types__sys_cfg_type__dis_fce =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_fce;
  rec__dw1000__register_types__sys_cfg_type__dis_drxb =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_drxb;
  rec__dw1000__register_types__sys_cfg_type__dis_phe =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_phe;
  rec__dw1000__register_types__sys_cfg_type__dis_rsde =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_rsde;
  rec__dw1000__register_types__sys_cfg_type__fcs_int2f =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__fcs_int2f;
  rec__dw1000__register_types__sys_cfg_type__phr_mode = o16;
  rec__dw1000__register_types__sys_cfg_type__dis_stxp =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__dis_stxp;
  rec__dw1000__register_types__sys_cfg_type__rxm110k =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxm110k;
  rec__dw1000__register_types__sys_cfg_type__rxwtoe =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxwtoe;
  rec__dw1000__register_types__sys_cfg_type__rxautr =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__rxautr;
  rec__dw1000__register_types__sys_cfg_type__autoack =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__autoack;
  rec__dw1000__register_types__sys_cfg_type__aackpend =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__aackpend;
  rec__dw1000__register_types__sys_cfg_type__reserved_1 =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_1;
  rec__dw1000__register_types__sys_cfg_type__reserved_2 =
  ((((self__3).us_split_fields11).rec__decadriver__driver_type__sys_cfg_reg).us_split_fields1).rec__dw1000__register_types__sys_cfg_type__reserved_2
  })) and (o18 = { us_split_fields1 = o17 })) and (o19 = {
  rec__decadriver__driver_type__part_id =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__part_id;
  rec__decadriver__driver_type__lot_id =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__lot_id;
  rec__decadriver__driver_type__antenna_delay_prf_64 =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_64;
  rec__decadriver__driver_type__antenna_delay_prf_16 =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__antenna_delay_prf_16;
  rec__decadriver__driver_type__xtal_trim =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__xtal_trim;
  rec__decadriver__driver_type__otp_tx_power_levels =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__otp_tx_power_levels;
  rec__decadriver__driver_type__long_frames =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__long_frames;
  rec__decadriver__driver_type__sys_cfg_reg = o18;
  rec__decadriver__driver_type__use_otp_xtal_trim =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__use_otp_xtal_trim;
  rec__decadriver__driver_type__use_otp_antenna_delay =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__use_otp_antenna_delay;
  rec__decadriver__driver_type__detect_frame_timeout =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__detect_frame_timeout;
  rec__decadriver__driver_type__detect_sfd_timeout =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__detect_sfd_timeout;
  rec__decadriver__driver_type__detect_phr_error =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__detect_phr_error;
  rec__decadriver__driver_type__detect_rs_error =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__detect_rs_error;
  rec__decadriver__driver_type__detect_fcs_error =
  ((self__3).us_split_fields11).rec__decadriver__driver_type__detect_fcs_error
  })) and (o20 = { us_split_fields11 = o19 })) and ((result5 = {
  driver_type__content = self__3 }) and (self__4 = o20))) ->
  (((((to_rep17(config9) = 0) and (o21 = 4161)) or
  ((not (to_rep17(config9) = 0)) and (o21 = to_rep17(config9)))) and
  ((result6 = sfd_timeout) and (sfd_timeout1 = o21))) ->
  (((not (config6 = true)) -> (device_state1 = device_state)) ->
  ((((to_rep7(o22) = of_int1(0)) and
  ((to_rep4(o23) = of_int(to_rep15(config5))) and
  ((to_rep4(o24) = of_int(to_rep15(config4))) and ((((config6 = true) and
  (to_rep(o25) = of_int(1))) or ((not (config6 = true)) and
  (to_rep(o25) = of_int(0)))) and ((((config6 = true) and
  (to_rep(o26) = of_int(1))) or ((not (config6 = true)) and
  (to_rep(o26) = of_int(0)))) and ((((to_rep12(config1) = 0) and
  (to_rep1(o27) = of_int(1))) or ((not (to_rep12(config1) = 0)) and
  (to_rep1(o27) = of_int(2)))) and ((((config6 = true) and
  (to_rep(o28) = of_int(1))) or ((not (config6 = true)) and
  (to_rep(o28) = of_int(0)))) and
  ((to_rep3(o29) = of_int(to_rep11(config))) and
  ((to_rep3(o30) = of_int(to_rep11(config))) and ((o30 = o31) and
  ((o29 = o32) and ((o28 = o33) and ((o27 = o34) and ((o26 = o35) and
  ((o25 = o36) and ((o24 = o37) and ((o23 = o38) and
  (o22 = o39)))))))))))))))))) and ((o40 = o31) and ((o41 = o32) and
  ((o42 = o33) and ((o43 = o34) and ((o44 = o35) and ((o45 = o36) and
  ((o46 = o37) and ((o47 = o38) and (o48 = o39)))))))))) ->
  ((to_rep6(o49) = of_int(0)) -> ((to_rep8(o50) = of_int1(0)) ->
  (((((not (to_rep13(config2) = 0)) -> ((not (to_rep13(config2) = 4)) ->
  (to_rep13(config2) = 7))) and (to_rep1(o51) = of_int(0))) or
  ((not ((not (to_rep13(config2) = 0)) -> ((not (to_rep13(config2) = 4)) ->
  (to_rep13(config2) = 7)))) and ((((not (to_rep13(config2) = 1)) ->
  (to_rep13(config2) = 5)) and (to_rep1(o51) = of_int(1))) or
  ((not ((not (to_rep13(config2) = 1)) -> (to_rep13(config2) = 5))) and
  ((((not (to_rep13(config2) = 2)) -> (to_rep13(config2) = 6)) and
  (to_rep1(o51) = of_int(2))) or ((not ((not (to_rep13(config2) = 2)) ->
  (to_rep13(config2) = 6))) and (to_rep1(o51) = of_int(3)))))))) ->
  (((((not (to_rep13(config2) = 0)) -> ((not (to_rep13(config2) = 1)) ->
  ((not (to_rep13(config2) = 2)) -> (to_rep13(config2) = 3)))) and
  (to_rep1(o52) = of_int(1))) or ((not ((not (to_rep13(config2) = 0)) ->
  ((not (to_rep13(config2) = 1)) -> ((not (to_rep13(config2) = 2)) ->
  (to_rep13(config2) = 3))))) and ((((not (to_rep13(config2) = 4)) ->
  ((not (to_rep13(config2) = 5)) -> (to_rep13(config2) = 6))) and
  (to_rep1(o52) = of_int(2))) or ((not ((not (to_rep13(config2) = 4)) ->
  ((not (to_rep13(config2) = 5)) -> (to_rep13(config2) = 6)))) and
  (to_rep1(o52) = of_int(3)))))) -> ((((to_rep12(config1) = 0) and
  (to_rep1(o53) = of_int(1))) or ((not (to_rep12(config1) = 0)) and
  (to_rep1(o53) = of_int(2)))) -> ((to_rep(o54) = of_int(1)) ->
  in_range_int1(to_rep10(config7))))))))))))))))))))
