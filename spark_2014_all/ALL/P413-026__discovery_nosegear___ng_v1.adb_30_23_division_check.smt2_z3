;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.6)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 16) Int) Bool)

(declare-fun lsr ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 16)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes ((t__ref 0)) (((mk_t__ref (t__content (_ BitVec 16))))))
(declare-fun power ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun to_int2 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort unsigned_16 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 16))

(declare-fun user_eq (unsigned_16 unsigned_16) Bool)

(declare-const dummy unsigned_16)

(declare-datatypes ((unsigned_16__ref 0))
(((mk_unsigned_16__ref (unsigned_16__content unsigned_16)))))
(define-fun unsigned_16__ref___projection ((a unsigned_16__ref)) unsigned_16
  (unsigned_16__content a))

(define-fun dynamic_invariant ((temp___expr_165 (_ BitVec 16))
  (temp___is_init_162 Bool) (temp___skip_constant_163 Bool)
  (temp___do_toplevel_164 Bool)) Bool true)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const estimatedgroundvelocityisavailable Bool)

(declare-const estimatedgroundvelocity (_ BitVec 16))

(declare-const prevtime (_ BitVec 16))

(declare-const prevcount (_ BitVec 16))

(declare-const currtime (_ BitVec 16))

(declare-const thistime (_ BitVec 16))

(declare-const thiscount (_ BitVec 16))

(declare-const t1 (_ BitVec 16))

(declare-const t2 (_ BitVec 16))

(declare-const d1 (_ BitVec 16))

(declare-const d2 (_ BitVec 16))

(declare-const estimatedgroundvelocityisavailable1 Bool)

(declare-const estimatedgroundvelocity1 (_ BitVec 16))

(declare-const t11 (_ BitVec 16))

(declare-const t21 (_ BitVec 16))

(declare-const d11 (_ BitVec 16))

(declare-const d21 (_ BitVec 16))

(declare-const result Bool)

(declare-const estimatedgroundvelocityisavailable2 Bool)

(declare-const result1 (_ BitVec 16))

(declare-const t12 (_ BitVec 16))

(declare-const result2 (_ BitVec 16))

(declare-const t22 (_ BitVec 16))

(declare-const result3 (_ BitVec 16))

(declare-const d12 (_ BitVec 16))

(declare-const result4 (_ BitVec 16))

(declare-const d22 (_ BitVec 16))

(declare-const result5 Bool)

(declare-const estimatedgroundvelocityisavailable3 Bool)

(declare-const result6 (_ BitVec 16))

(declare-const estimatedgroundvelocity2 (_ BitVec 16))

(declare-const estimatedgroundvelocityisavailable4 Bool)

(declare-const estimatedgroundvelocity3 (_ BitVec 16))

(declare-const t13 (_ BitVec 16))

(declare-const t23 t__ref)

(declare-const d13 t__ref)

(declare-const d23 t__ref)

(declare-const estimatedgroundvelocityisavailable5 Bool)

(declare-const estimatedgroundvelocity4 (_ BitVec 16))

(declare-const t14 (_ BitVec 16))

(declare-const t24 (_ BitVec 16))

(declare-const d14 (_ BitVec 16))

(declare-const d24 (_ BitVec 16))

(declare-const estimatedgroundvelocityisavailable6 bool__ref)

(declare-const estimatedgroundvelocity5 t__ref)

(declare-const t15 t__ref)

(declare-const t25 t__ref)

(declare-const d15 t__ref)

(declare-const d25 t__ref)

(declare-const estimatedgroundvelocityisavailable7 Bool)

(declare-const estimatedgroundvelocity6 (_ BitVec 16))

(declare-const t16 (_ BitVec 16))

(declare-const t26 (_ BitVec 16))

(declare-const d16 (_ BitVec 16))

(declare-const d26 (_ BitVec 16))

(define-fun t17 () t__ref (mk_t__ref t13))

(define-fun estimatedgroundvelocity7 () t__ref (mk_t__ref
                                               estimatedgroundvelocity3))

(define-fun estimatedgroundvelocityisavailable8 () bool__ref (mk_bool__ref
                                                             estimatedgroundvelocityisavailable4))

(define-fun result7 () t__ref (mk_t__ref result6))

(define-fun result8 () t__ref (mk_t__ref result4))

(define-fun result9 () t__ref (mk_t__ref result3))

(define-fun result10 () t__ref (mk_t__ref result2))

(define-fun result11 () t__ref (mk_t__ref result1))

(define-fun result12 () bool__ref (mk_bool__ref result))

(define-fun d27 () t__ref (mk_t__ref d2))

(define-fun d17 () t__ref (mk_t__ref d1))

(define-fun t27 () t__ref (mk_t__ref t2))

(define-fun t18 () t__ref (mk_t__ref t1))

(define-fun estimatedgroundvelocity8 () t__ref (mk_t__ref
                                               estimatedgroundvelocity))

(define-fun estimatedgroundvelocityisavailable9 () bool__ref (mk_bool__ref
                                                             estimatedgroundvelocityisavailable))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert (not (= thistime prevtime)))

;; H
  (assert
  (= estimatedgroundvelocityisavailable2 estimatedgroundvelocityisavailable))

;; H
  (assert
  (= estimatedgroundvelocityisavailable2 estimatedgroundvelocityisavailable1))

;; H
  (assert (= result11 t18))

;; H
  (assert (= t12 (bvsub thistime prevtime)))

;; H
  (assert (= result10 t27))

;; H
  (assert (= t22 (bvsub currtime thistime)))

;; H
  (assert (= result9 d17))

;; H
  (assert (= d12 (bvmul ((_ int2bv 16) 207) (bvsub thiscount prevcount))))

(assert
;; WP_parameter_def
 ;; File "interfac.ads", line 66, characters 0-0
  (not (not (= t12 #x0000))))
(check-sat)
(exit)
