;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const x Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const result Int)

(declare-const x1 Int)

(declare-const result1 Int)

(declare-const x2 Int)

(declare-const result2 Int)

(declare-const x3 Int)

(declare-const result3 Int)

(declare-const x4 Int)

(declare-const result4 Int)

(declare-const x5 Int)

(declare-const x6 Int)

(declare-const x7 Int)

;; H
  (assert (in_range1 x))

;; H
  (assert
  (=> (and (<= (- 100) x) (<= x 100))
  (and (= o (* x 2)) (in_range1 (* x 2)))))

;; H
  (assert (=> (and (<= (- 100) x) (<= x 100)) (= result x)))

;; H
  (assert (=> (and (<= (- 100) x) (<= x 100)) (= x1 o)))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (and (<= 0 x) (<= x 199)) (and (= o1 (+ x 1)) (in_range1 (+ x 1))))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (and (<= 0 x) (<= x 199)) (= result1 x))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (and (<= 0 x) (<= x 199)) (= x2 o1))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (and (<= (- 199) x) (<= x 0)) (and (= o2 (- x 1)) (in_range1 (- x 1)))))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (and (<= (- 199) x) (<= x 0)) (= result2 x)))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (and (<= (- 199) x) (<= x 0)) (= x3 o2)))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (not (and (<= (- 199) x) (<= x 0))) (=> (<= 200 x) (= result3 x))))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (not (and (<= (- 199) x) (<= x 0))) (=> (<= 200 x) (= x4 200))))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (not (and (<= (- 199) x) (<= x 0)))
  (=> (not (<= 200 x)) (= result4 x))))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (not (and (<= (- 199) x) (<= x 0)))
  (=> (not (<= 200 x)) (= x5 (- 200)))))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (not (and (<= (- 199) x) (<= x 0))) (=> (not (<= 200 x)) (= x4 x5))))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199)))
  (=> (not (and (<= (- 199) x) (<= x 0))) (= x3 x4)))))

;; H
  (assert
  (=> (not (and (<= (- 100) x) (<= x 100)))
  (=> (not (and (<= 0 x) (<= x 199))) (= x2 x3))))

;; H
  (assert (=> (not (and (<= (- 100) x) (<= x 100))) (= x1 x2)))

;; H
  (assert (= x1 x6))

;; H
  (assert (= x7 x1))

;; H
  (assert (<= 1 x))

;; H
  (assert (<= x 199))

(assert
;; WP_parameter_def
 ;; File "p.adb", line 5, characters 0-0
  (not (<= x x6)))
(check-sat)
(exit)
