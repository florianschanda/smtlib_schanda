;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort capacity_range 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (capacity_range capacity_range) Bool)

(declare-const dummy capacity_range)

(declare-datatypes ()
((capacity_range__ref
 (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range
  (capacity_range__content a))

(declare-fun to_rep (capacity_range) Int)

(declare-fun of_rep (Int) capacity_range)

;; inversion_axiom
  (assert
  (forall ((x capacity_range))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x capacity_range)) (! (in_range
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort capacity_range1 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (capacity_range1 capacity_range1) Bool)

(declare-const dummy1 capacity_range1)

(declare-datatypes ()
((capacity_range__ref1
 (mk_capacity_range__ref1 (capacity_range__content1 capacity_range1)))))
(define-fun capacity_range__ref___2__projection ((a capacity_range__ref1)) capacity_range1
  (capacity_range__content1 a))

(declare-fun to_rep1 (capacity_range1) Int)

(declare-fun of_rep1 (Int) capacity_range1)

;; inversion_axiom
  (assert
  (forall ((x capacity_range1))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x capacity_range1)) (! (in_range1
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs
 (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity capacity_range1)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range1
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__hnco__test2__v_type_owner__vector_type_owner__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit Int)

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit Int)

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position Int)

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit))

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom
  (assert
  (< hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit
  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit))

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ()
((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content
                                                              a))

(define-fun in_range2 ((rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 Int)
  (a us_rep)) Bool (= rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1
  (to_rep1
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity
  (us_split_discrs1 a)))))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1 Int)

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit1 Int)

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position1 Int)

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1))

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom
  (assert
  (< hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1
  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit1))

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position1))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes () ((t179s__ref (mk_t179s__ref (t179s__content us_rep)))))
(define-fun t179s__ref___projection ((a t179s__ref)) us_rep (t179s__content
                                                            a))

(declare-datatypes ()
((us_split_discrs2
 (mk___split_discrs1
 (rec__hnco__test2__v_type_owner__vector_type__capacity capacity_range)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs2)) capacity_range
  (rec__hnco__test2__v_type_owner__vector_type__capacity a))

(declare-datatypes ()
((us_split_discrs__ref1
 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs2
  (us_split_discrs__content1 a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__hnco__test2__v_type_owner__vector_type__hidden_vector us_rep)(rec__ext__ us_private)))))
(define-fun us_split_fields_Hidden_Vector__projection ((a us_split_fields2)) us_rep
  (rec__hnco__test2__v_type_owner__vector_type__hidden_vector a))

(define-fun us_split_fields___projection ((a us_split_fields2)) us_private
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (mk___rep1
 (us_split_discrs3 us_split_discrs2)(us_split_fields3 us_split_fields2)(attr__tag Int)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3
                                                                  a))

(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun us_rep___5__projection ((a us_rep1)) Int (attr__tag a))

(declare-fun us_dispatch_eq (us_rep1 us_rep1) Bool)

(declare-const us_tag Int)

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-const hnco__test2__v_type_owner__vector_type__capacity__first__bit Int)

(declare-const hnco__test2__v_type_owner__vector_type__capacity__last__bit Int)

(declare-const hnco__test2__v_type_owner__vector_type__capacity__position Int)

;; hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type__capacity__first__bit))

;; hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom
  (assert
  (< hnco__test2__v_type_owner__vector_type__capacity__first__bit hnco__test2__v_type_owner__vector_type__capacity__last__bit))

;; hnco__test2__v_type_owner__vector_type__capacity__position_axiom
  (assert (<= 0 hnco__test2__v_type_owner__vector_type__capacity__position))

(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit Int)

(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit Int)

(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__position Int)

;; hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit))

;; hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom
  (assert
  (< hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit
  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit))

;; hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__position))

(declare-fun user_eq4 (us_rep1 us_rep1) Bool)

(declare-const dummy4 us_rep1)

(declare-datatypes ()
((vector_type__ref (mk_vector_type__ref (vector_type__content us_rep1)))))
(define-fun vector_type__ref___projection ((a vector_type__ref)) us_rep1
  (vector_type__content a))

(declare-fun is_empty (us_rep1) Bool)

(declare-fun is_empty__function_guard (Bool us_rep1) Bool)

(declare-fun is_empty1 (us_rep) Bool)

(declare-fun is_empty__function_guard1 (Bool us_rep) Bool)

(define-fun in_range3 ((rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 Int)
  (a us_rep)) Bool (= rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1
  (to_rep1
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity
  (us_split_discrs1 a)))))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2 Int)

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit2 Int)

(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position2 Int)

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2))

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom
  (assert
  (< hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2
  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit2))

;; hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position2))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes () ((t183s__ref (mk_t183s__ref (t183s__content us_rep)))))
(define-fun t183s__ref___projection ((a t183s__ref)) us_rep (t183s__content
                                                            a))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 us_rep)(rec__ext__1 us_private)))))
(define-fun us_split_fields_Hidden_Vector__21__projection ((a us_split_fields4)) us_rep
  (rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 a))

(define-fun us_split_fields___21__projection ((a us_split_fields4)) us_private
  (rec__ext__1 a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___22__projection ((a us_split_fields__ref2)) us_split_fields4
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2
 (mk___rep2
 (us_split_discrs4 us_split_discrs2)(us_split_fields5 us_split_fields4)(attr__tag1 Int)))))
(define-fun us_rep___63__projection ((a us_rep2)) us_split_discrs2 (us_split_discrs4
                                                                   a))

(define-fun us_rep___64__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                   a))

(define-fun us_rep___65__projection ((a us_rep2)) Int (attr__tag1 a))

(declare-fun hide_ext__ (us_private) us_private)

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep2)) us_rep1 (mk___rep1 (us_split_discrs4 a)
                                          (mk___split_fields1
                                          (rec__hnco__test2__v_type_owner__vector_type__hidden_vector1
                                          (us_split_fields5 a))
                                          (hide_ext__
                                          (rec__ext__1 (us_split_fields5 a))))
                                          (attr__tag1 a)))

(define-fun of_base ((r us_rep1)) us_rep2 (mk___rep2 (us_split_discrs3 r)
                                          (mk___split_fields2
                                          (rec__hnco__test2__v_type_owner__vector_type__hidden_vector
                                          (us_split_fields3 r))
                                          (extract__ext__
                                          (rec__ext__ (us_split_fields3 r))))
                                          (attr__tag r)))

(declare-const us_tag1 Int)

(define-fun in_range4 ((rec__hnco__test2__v_type_owner__vector_type__capacity1 Int)
  (a us_rep1)) Bool (= rec__hnco__test2__v_type_owner__vector_type__capacity1
  (to_rep
  (rec__hnco__test2__v_type_owner__vector_type__capacity
  (us_split_discrs3 a)))))

(declare-const value__size4 Int)

(declare-fun object__size4 (us_rep2) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))

(declare-const hnco__test2__v_type_owner__vector_type__capacity__first__bit1 Int)

(declare-const hnco__test2__v_type_owner__vector_type__capacity__last__bit1 Int)

(declare-const hnco__test2__v_type_owner__vector_type__capacity__position1 Int)

;; hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type__capacity__first__bit1))

;; hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom
  (assert
  (< hnco__test2__v_type_owner__vector_type__capacity__first__bit1 hnco__test2__v_type_owner__vector_type__capacity__last__bit1))

;; hnco__test2__v_type_owner__vector_type__capacity__position_axiom
  (assert (<= 0 hnco__test2__v_type_owner__vector_type__capacity__position1))

(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1 Int)

(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit1 Int)

(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__position1 Int)

;; hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1))

;; hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom
  (assert
  (< hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1
  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit1))

;; hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom
  (assert
  (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__position1))

(declare-fun user_eq6 (us_rep2 us_rep2) Bool)

(declare-const dummy6 us_rep2)

(declare-datatypes () ((tvS__ref (mk_tvS__ref (tvS__content us_rep2)))))
(define-fun tvS__ref___projection ((a tvS__ref)) us_rep2 (tvS__content a))

(declare-const v__split_discrs us_split_discrs2)

(declare-const v__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun dynamic_invariant ((temp___expr_213 Int)
  (temp___is_init_210 Bool) (temp___skip_constant_211 Bool)
  (temp___do_toplevel_212 Bool)) Bool (=>
                                      (or (= temp___is_init_210 true)
                                      (<= 0 2147483647)) (in_range
                                      temp___expr_213)))

(define-fun dynamic_invariant1 ((temp___expr_230 us_rep1)
  (temp___is_init_227 Bool) (temp___skip_constant_228 Bool)
  (temp___do_toplevel_229 Bool)) Bool (in_range2
  (to_rep
  (rec__hnco__test2__v_type_owner__vector_type__capacity
  (us_split_discrs3 temp___expr_230)))
  (rec__hnco__test2__v_type_owner__vector_type__hidden_vector
  (us_split_fields3 temp___expr_230))))

;; is_empty__post_axiom
  (assert true)

(define-fun dynamic_invariant2 ((temp___expr_219 Int)
  (temp___is_init_216 Bool) (temp___skip_constant_217 Bool)
  (temp___do_toplevel_218 Bool)) Bool (=>
                                      (or (= temp___is_init_216 true)
                                      (<= 0 2147483647)) (in_range1
                                      temp___expr_219)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range5 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Bool)

(define-fun capacity ((container us_rep)) Int (ite (= (of_int 1) true)
                                              (to_rep1
                                              (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity
                                              (us_split_discrs1 container)))
                                              2147483647))

(declare-fun capacity__function_guard (Int us_rep) Bool)

(declare-fun length (us_rep) Int)

(declare-fun length__function_guard (Int us_rep) Bool)

;; length__post_axiom
  (assert
  (forall ((container us_rep))
  (! (let ((result (length container)))
     (and (<= result (capacity container)) (dynamic_invariant2 result true
     false true))) :pattern ((length container)) )))

;; is_empty__post_axiom
  (assert
  (forall ((container us_rep))
  (! (= (= (is_empty1 container) true) (= (length container) 0)) :pattern (
  (is_empty1 container)) )))

(assert
;; WP_parameter_def
 ;; File "hnco-test2.ads", line 11, characters 0-0
  (not (in_range 10)))
(check-sat)
(exit)
