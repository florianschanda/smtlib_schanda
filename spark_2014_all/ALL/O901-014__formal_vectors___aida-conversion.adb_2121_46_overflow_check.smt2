;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant1 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-fun is_digit (Int) Bool)

(declare-fun is_digit__function_guard (Bool Int) Bool)

(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

;; is_digit__post_axiom
  (assert
  (forall ((c Int))
  (! (=> (dynamic_invariant2 c true true true)
     (let ((result (is_digit c)))
     (ite (= c 48) (= result true)
     (ite (= c 49) (= result true)
     (ite (= c 50) (= result true)
     (ite (= c 51) (= result true)
     (ite (= c 52) (= result true)
     (ite (= c 53) (= result true)
     (ite (= c 54) (= result true)
     (ite (= c 55) (= result true)
     (ite (= c 56) (= result true)
     (ite (= c 57) (= result true)
     (ite (< 57 c) (not (= result true)) (=> (< c 48) (not (= result true)))))))))))))))) :pattern (
  (is_digit c)) )))

(declare-fun convert_character_digit_to_integer (Int) Int)

(declare-fun convert_character_digit_to_integer__function_guard (Int
  Int) Bool)

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int integer))))))
(declare-fun slide1 ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq5 ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq5 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare1 a a_first a_last b b_first b_last) 0)
     (= (bool_eq5 a a_first a_last b b_first b_last) true)) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare1 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq5 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare1 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq5 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

(declare-fun source () us_t)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (integer integer) Bool)

(declare-fun dummy4 () integer)

(declare-datatypes ()
((tint_arrayD1__ref (mk_tint_arrayD1__ref (tint_arrayD1__content integer)))))
(define-fun tint_arrayD1__ref_23__projection ((a tint_arrayD1__ref)) integer 
  (tint_arrayD1__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int integer))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))

(define-fun of_array1 ((a (Array Int integer)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int integer)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int integer)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq7 ((x us_t1)
  (y us_t1)) Bool (bool_eq5 (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq5 (us_t1 us_t1) Bool)

(declare-fun dummy5 () us_t1)

(declare-datatypes ()
((tint_arrayT__ref (mk_tint_arrayT__ref (tint_arrayT__content us_t1)))))
(define-fun tint_arrayT__ref_23__projection ((a tint_arrayT__ref)) us_t1 
  (tint_arrayT__content a))

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (integer integer) Bool)

(declare-fun dummy6 () integer)

(declare-datatypes ()
((t736b__ref (mk_t736b__ref (t736b__content integer)))))
(define-fun t736b__ref___projection ((a t736b__ref)) integer (t736b__content
                                                             a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first4 (mk2 f l))) f)
     (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property3 range_first range_last low)
                   (dynamic_property3 range_first range_last high))))))

(declare-datatypes ()
((us_t2 (mk___t2 (elts2 (Array Int integer))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int integer) (elts2 a))

(define-fun of_array2 ((a (Array Int integer)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-fun value__size2 () Int)

(declare-fun object__size2 ((Array Int integer)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int integer)) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq9 ((x us_t2)
  (y us_t2)) Bool (bool_eq5 (elts2 x) (to_rep1 (first4 (rt2 x)))
                  (to_rep1 (last4 (rt2 x))) (elts2 y)
                  (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))

(declare-fun user_eq7 (us_t2 us_t2) Bool)

(declare-fun dummy7 () us_t2)

(declare-datatypes () ((t737b__ref (mk_t737b__ref (t737b__content us_t2)))))
(define-fun t737b__ref___projection ((a t737b__ref)) us_t2 (t737b__content a))

(declare-fun int_array__first () integer)

(declare-fun int_array__last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun dynamic_property5 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq8 (integer integer) Bool)

(declare-fun dummy8 () integer)

(declare-datatypes ()
((tnumber_array_typeD1__ref
 (mk_tnumber_array_typeD1__ref (tnumber_array_typeD1__content integer)))))
(define-fun tnumber_array_typeD1__ref_32__projection ((a tnumber_array_typeD1__ref)) integer 
  (tnumber_array_typeD1__content a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first6 (mk3 f l))) f)
     (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-datatypes ()
((us_t3 (mk___t3 (elts3 (Array Int integer))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int integer) (elts3 a))

(define-fun of_array3 ((a (Array Int integer)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-fun value__size3 () Int)

(declare-fun object__size3 ((Array Int integer)) Int)

(declare-fun value__component__size3 () Int)

(declare-fun object__component__size3 ((Array Int integer)) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment3 a))))

(define-fun bool_eq11 ((x us_t3)
  (y us_t3)) Bool (bool_eq5 (elts3 x) (to_rep1 (first6 (rt3 x)))
                  (to_rep1 (last6 (rt3 x))) (elts3 y)
                  (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))

(declare-fun user_eq9 (us_t3 us_t3) Bool)

(declare-fun dummy9 () us_t3)

(declare-datatypes ()
((number_array_type__ref
 (mk_number_array_type__ref (number_array_type__content us_t3)))))
(define-fun number_array_type__ref_32__projection ((a number_array_type__ref)) us_t3 
  (number_array_type__content a))

(define-fun dynamic_property7 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq12 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq10 (integer integer) Bool)

(declare-fun dummy10 () integer)

(declare-datatypes ()
((t740b__ref (mk_t740b__ref (t740b__content integer)))))
(define-fun t740b__ref___projection ((a t740b__ref)) integer (t740b__content
                                                             a))

(declare-sort t4 0)

(declare-fun first8 (t4) integer)

(declare-fun last8 (t4) integer)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first8 (mk4 f l))) f)
     (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)) )))

(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property7 range_first range_last low)
                   (dynamic_property7 range_first range_last high))))))

(declare-datatypes ()
((us_t4 (mk___t4 (elts4 (Array Int integer))(rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int integer) (elts4 a))

(define-fun of_array4 ((a (Array Int integer)) (f Int)
  (l Int)) us_t4 (mk___t4 a (mk4 f l)))

(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))

(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))

(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a))
                                    (+ (- (last9 a) (first9 a)) 1) 0))

(declare-fun value__size4 () Int)

(declare-fun object__size4 ((Array Int integer)) Int)

(declare-fun value__component__size4 () Int)

(declare-fun object__component__size4 ((Array Int integer)) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment4 a))))

(define-fun bool_eq13 ((x us_t4)
  (y us_t4)) Bool (bool_eq5 (elts4 x) (to_rep1 (first8 (rt4 x)))
                  (to_rep1 (last8 (rt4 x))) (elts4 y)
                  (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))

(declare-fun user_eq11 (us_t4 us_t4) Bool)

(declare-fun dummy11 () us_t4)

(declare-datatypes () ((t741b__ref (mk_t741b__ref (t741b__content us_t4)))))
(define-fun t741b__ref___projection ((a t741b__ref)) us_t4 (t741b__content a))

(declare-fun n__first () integer)

(declare-fun n__last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(define-fun dynamic_property9 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq12 (integer integer) Bool)

(declare-fun dummy12 () integer)

(declare-datatypes ()
((t742b__ref (mk_t742b__ref (t742b__content integer)))))
(define-fun t742b__ref___projection ((a t742b__ref)) integer (t742b__content
                                                             a))

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-sort t5 0)

(declare-fun first10 (t5) integer)

(declare-fun last10 (t5) integer)

(declare-fun mk5 (Int Int) t5)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first10 (mk5 f l))) f)
     (= (to_rep1 (last10 (mk5 f l))) l)))) :pattern ((mk5 f l)) )))

(define-fun dynamic_property10 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ()
((us_t5 (mk___t5 (elts5 (Array Int integer))(rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int integer) (elts5 a))

(define-fun of_array5 ((a (Array Int integer)) (f Int)
  (l Int)) us_t5 (mk___t5 a (mk5 f l)))

(define-fun first11 ((a us_t5)) Int (to_rep1 (first10 (rt5 a))))

(define-fun last11 ((a us_t5)) Int (to_rep1 (last10 (rt5 a))))

(define-fun length5 ((a us_t5)) Int (ite (<= (first11 a) (last11 a))
                                    (+ (- (last11 a) (first11 a)) 1) 0))

(declare-fun value__size5 () Int)

(declare-fun object__size5 ((Array Int integer)) Int)

(declare-fun value__component__size5 () Int)

(declare-fun object__component__size5 ((Array Int integer)) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size5 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment5 a))))

(define-fun bool_eq15 ((x us_t5)
  (y us_t5)) Bool (bool_eq5 (elts5 x) (to_rep1 (first10 (rt5 x)))
                  (to_rep1 (last10 (rt5 x))) (elts5 y)
                  (to_rep1 (first10 (rt5 y))) (to_rep1 (last10 (rt5 y)))))

(declare-fun user_eq13 (us_t5 us_t5) Bool)

(declare-fun dummy13 () us_t5)

(declare-datatypes ()
((tint_arrayB__ref (mk_tint_arrayB__ref (tint_arrayB__content us_t5)))))
(define-fun tint_arrayB__ref_23__projection ((a tint_arrayB__ref)) us_t5 
  (tint_arrayB__content a))

(declare-fun aida__conversion__calculate_negative_target_length_6__int_array__aggregate_def (Int
  Int Int Int Int Int Int) us_t2)

;; def_axiom
  (assert
  (forall ((temp___2324 Int) (temp___2325 Int) (temp___2326 Int)
  (temp___2327 Int) (temp___2328 Int) (temp___2329 Int) (temp___2330 Int))
  (let ((temp___2323 (aida__conversion__calculate_negative_target_length_6__int_array__aggregate_def
                     temp___2324 temp___2325 temp___2326 temp___2327
                     temp___2328 temp___2329 temp___2330)))
  (and
  (=> (dynamic_property10 (+ (first1 source) 1) (+ (first1 source) 5)
  temp___2329 temp___2330)
  (and (= (first5 temp___2323) temp___2329)
  (= (last5 temp___2323) temp___2330)))
  (and
  (and
  (and
  (and
  (= (select (to_array2 temp___2323) (+ (+ (first1 source) 1) 0)) (of_rep1
                                                                  temp___2324))
  (= (select (to_array2 temp___2323) (+ (+ (first1 source) 1) 1)) (of_rep1
                                                                  temp___2325)))
  (= (select (to_array2 temp___2323) (+ (+ (first1 source) 1) 2)) (of_rep1
                                                                  temp___2326)))
  (= (select (to_array2 temp___2323) (+ (+ (first1 source) 1) 3)) (of_rep1
                                                                  temp___2327)))
  (= (select (to_array2 temp___2323) (+ (+ (first1 source) 1) 4)) (of_rep1
                                                                  temp___2328)))))))

(declare-sort t6 0)

(declare-fun first12 (t6) integer)

(declare-fun last12 (t6) integer)

(declare-fun mk6 (Int Int) t6)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first12 (mk6 f l))) f)
     (= (to_rep1 (last12 (mk6 f l))) l)))) :pattern ((mk6 f l)) )))

(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-datatypes ()
((us_t6 (mk___t6 (elts6 (Array Int integer))(rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int integer) (elts6 a))

(define-fun of_array6 ((a (Array Int integer)) (f Int)
  (l Int)) us_t6 (mk___t6 a (mk6 f l)))

(define-fun first13 ((a us_t6)) Int (to_rep1 (first12 (rt6 a))))

(define-fun last13 ((a us_t6)) Int (to_rep1 (last12 (rt6 a))))

(define-fun length6 ((a us_t6)) Int (ite (<= (first13 a) (last13 a))
                                    (+ (- (last13 a) (first13 a)) 1) 0))

(declare-fun value__size6 () Int)

(declare-fun object__size6 ((Array Int integer)) Int)

(declare-fun value__component__size6 () Int)

(declare-fun object__component__size6 ((Array Int integer)) Int)

(declare-fun value__alignment6 () Int)

(declare-fun object__alignment6 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size6 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size6))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment6 a))))

(define-fun bool_eq16 ((x us_t6)
  (y us_t6)) Bool (bool_eq5 (elts6 x) (to_rep1 (first12 (rt6 x)))
                  (to_rep1 (last12 (rt6 x))) (elts6 y)
                  (to_rep1 (first12 (rt6 y))) (to_rep1 (last12 (rt6 y)))))

(declare-fun user_eq14 (us_t6 us_t6) Bool)

(declare-fun dummy14 () us_t6)

(declare-datatypes ()
((tnumber_array_typeB__ref
 (mk_tnumber_array_typeB__ref (tnumber_array_typeB__content us_t6)))))
(define-fun tnumber_array_typeB__ref_32__projection ((a tnumber_array_typeB__ref)) us_t6 
  (tnumber_array_typeB__content a))

(declare-fun aida__conversion__calculate_negative_target_length_6__n__aggregate_def (Int
  Int Int) us_t4)

;; def_axiom
  (assert
  (forall ((temp___2336 Int) (temp___2337 Int) (temp___2338 Int))
  (let ((temp___2335 (aida__conversion__calculate_negative_target_length_6__n__aggregate_def
                     temp___2336 temp___2337 temp___2338)))
  (and
  (=> (dynamic_property11 (+ (first1 source) 1) (+ (first1 source) 5)
  temp___2337 temp___2338)
  (and (= (first9 temp___2335) temp___2337)
  (= (last9 temp___2335) temp___2338)))
  (forall ((temp___2339 Int))
  (= (select (to_array4 temp___2335) temp___2339) (of_rep1 temp___2336)))))))

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_761 us_t3)
  (temp___is_init_758 Bool) (temp___skip_constant_759 Bool)
  (temp___do_toplevel_760 Bool)) Bool (=>
                                      (not (= temp___skip_constant_759 true))
                                      (and (dynamic_property6
                                      (+ (first1 source) 1)
                                      (+ (first1 source) 5)
                                      (first7 temp___expr_761)
                                      (last7 temp___expr_761))
                                      (and
                                      (= (first7 temp___expr_761) (+ 
                                      (first1 source) 1))
                                      (= (last7 temp___expr_761) (+ (first1
                                                                    source) 5))))))

;; convert_character_digit_to_integer__post_axiom
  (assert
  (forall ((source1 Int))
  (! (=>
     (and (dynamic_invariant2 source1 true true true)
     (= (is_digit source1) true))
     (let ((result (convert_character_digit_to_integer source1)))
     (and
     (and (and (<= 0 result) (<= result 9))
     (ite (= source1 48) (= result 0)
     (ite (= source1 49) (= result 1)
     (ite (= source1 50) (= result 2)
     (ite (= source1 51) (= result 3)
     (ite (= source1 52) (= result 4)
     (ite (= source1 53) (= result 5)
     (ite (= source1 54) (= result 6)
     (ite (= source1 55) (= result 7)
     (ite (= source1 56) (= result 8) (=> (= source1 57) (= result 9))))))))))))
     (dynamic_invariant result true false true)))) :pattern ((convert_character_digit_to_integer
                                                             source1)) )))

(declare-fun target () Int)

(declare-fun int_array () (Array Int integer))

(declare-fun n () (Array Int integer))

(declare-fun index () Int)

(declare-fun temp___2333 () (Array Int integer))

(declare-fun temp___23331 () t2)

(declare-fun aida__conversion__calculate_negative_target_length_6__int_array__assume () (Array Int integer))

(declare-fun aida__conversion__calculate_negative_target_length_6__int_array__assume1 () t1)

(declare-fun temp___2341 () (Array Int integer))

(declare-fun temp___23411 () t4)

(declare-fun aida__conversion__calculate_negative_target_length_6__n__assume () (Array Int integer))

(declare-fun aida__conversion__calculate_negative_target_length_6__n__assume1 () t3)

(declare-fun temp___2347 () Int)

(declare-fun temp___2348 () Int)

(declare-fun temp___2346 () Int)

(declare-fun temp___2344 () (Array Int integer))

(declare-fun o () Int)

(declare-fun o1 () integer)

(declare-fun o2 () Int)

(declare-fun aida__conversion__convert_character_digit_to_integer__2__target () Int)

(declare-fun o3 () Int)

(declare-fun o4 () character)

(declare-fun o5 () Int)

(declare-fun o6 () integer)

(declare-fun o7 () Int)

(declare-fun o8 () (Array Int integer))

(declare-fun temp___2349 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () integer)

(declare-fun o11 () Int)

(declare-fun o12 () Int)

(declare-fun o13 () Int)

(declare-fun temp___2350 () Int)

(declare-fun o14 () Int)

(declare-fun o15 () integer)

(declare-fun o16 () Int)

(declare-fun o17 () Int)

(declare-fun o18 () Int)

(declare-fun o19 () Int)

(declare-fun o20 () Int)

(declare-fun temp___2351 () Int)

(declare-fun o21 () Int)

(declare-fun o22 () integer)

(declare-fun o23 () Int)

(declare-fun o24 () Int)

(declare-fun o25 () Int)

(declare-fun o26 () Int)

(declare-fun o27 () Int)

(declare-fun temp___2352 () Int)

(declare-fun o28 () Int)

(declare-fun o29 () integer)

(declare-fun o30 () Int)

(declare-fun o31 () Int)

(declare-fun result () (Array Int integer))

(declare-fun int_array1 () (Array Int integer))

(declare-fun result1 () (Array Int integer))

(declare-fun n1 () (Array Int integer))

(declare-fun result2 () Int)

(declare-fun index1 () Int)

(declare-fun aida__conversion__convert_character_digit_to_integer__2__target1 () Int)

(declare-fun result3 () (Array Int integer))

(declare-fun n2 () (Array Int integer))

(declare-fun n3 () (Array Int integer))

(declare-fun index2 () Int)

(declare-fun n4 () (Array Int integer))

(declare-fun index3 () Int)

(declare-fun n5 () (Array Int integer))

(declare-fun index4 () Int)

(declare-fun n6 () map__ref1)

(declare-fun index5 () int__ref)

(declare-fun n7 () (Array Int integer))

(declare-fun index6 () Int)

(declare-fun result4 () int__ref)

(declare-fun target1 () Int)

(declare-fun result5 () int__ref)

(declare-fun target2 () Int)

(declare-fun result6 () int__ref)

(declare-fun target3 () Int)

;; H
  (assert (dynamic_invariant1 source true false true))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 target)))

;; H
  (assert
  (and (= (length source) 6)
  (and
  (= (to_rep (select (elts source) (+ (to_rep1 (first (rt source))) 0))) 45)
  (forall ((index7 Int))
  (=>
  (and (<= (+ (to_rep1 (first (rt source))) 1) index7)
  (<= index7 (+ (to_rep1 (first (rt source))) 5)))
  (= (is_digit (to_rep (select (elts source) index7))) true))))))

;; H
  (assert
  (= (to_rep1
     (first4
     (rt2
     (aida__conversion__calculate_negative_target_length_6__int_array__aggregate_def
     9 9 9 9 9 (+ (to_rep1 (first (rt source))) 1)
     (+ (+ (to_rep1 (first (rt source))) 1) 4))))) (+ (to_rep1
                                                      (first (rt source))) 1)))

;; H
  (assert
  (= (to_rep1
     (last4
     (rt2
     (aida__conversion__calculate_negative_target_length_6__int_array__aggregate_def
     9 9 9 9 9 (+ (to_rep1 (first (rt source))) 1)
     (+ (+ (to_rep1 (first (rt source))) 1) 4))))) (+ (+ (to_rep1
                                                         (first (rt source))) 1) 4)))

;; H
  (assert
  (= (mk___t2 temp___2333 temp___23331) (aida__conversion__calculate_negative_target_length_6__int_array__aggregate_def
                                        9 9 9 9 9
                                        (+ (to_rep1 (first (rt source))) 1)
                                        (+ (+ (to_rep1 (first (rt source))) 1) 4))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first4 temp___23331)) (to_rep1 (last4 temp___23331)))
     (+ (- (to_rep1 (last4 temp___23331)) (to_rep1 (first4 temp___23331))) 1)
     0) (ite (<= (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1
                                                        (first (rt source))) 5))
        (+ (- (+ (to_rep1 (first (rt source))) 5) (+ (to_rep1
                                                     (first (rt source))) 1)) 1)
        0)))

;; H
  (assert
  (= (slide1 temp___2333 (to_rep1 (first4 temp___23331))
     (+ (to_rep1 (first (rt source))) 1)) aida__conversion__calculate_negative_target_length_6__int_array__assume))

;; H
  (assert
  (= (mk1 (+ (to_rep1 (first (rt source))) 1)
     (+ (to_rep1 (first (rt source))) 5)) aida__conversion__calculate_negative_target_length_6__int_array__assume1))

;; H
  (assert (= (mk_map__ref1 result) (mk_map__ref1 int_array)))

;; H
  (assert
  (= int_array1 aida__conversion__calculate_negative_target_length_6__int_array__assume))

;; H
  (assert
  (= (to_rep1 int_array__first) (to_rep1
                                (first2
                                aida__conversion__calculate_negative_target_length_6__int_array__assume1))))

;; H
  (assert
  (= (to_rep1 int_array__last) (to_rep1
                               (last2
                               aida__conversion__calculate_negative_target_length_6__int_array__assume1))))

;; H
  (assert
  (and (dynamic_property2 (+ (to_rep1 (first (rt source))) 1)
  (+ (to_rep1 (first (rt source))) 5) (to_rep1 int_array__first)
  (to_rep1 int_array__last))
  (and (= (to_rep1 int_array__first) (+ (to_rep1 (first (rt source))) 1))
  (= (to_rep1 int_array__last) (+ (to_rep1 (first (rt source))) 5)))))

;; H
  (assert
  (= (to_rep1
     (first8
     (rt4
     (aida__conversion__calculate_negative_target_length_6__n__aggregate_def
     0 (+ (to_rep1 (first (rt source))) 1)
     (+ (to_rep1 (first (rt source))) 5))))) (+ (to_rep1 (first (rt source))) 1)))

;; H
  (assert
  (= (to_rep1
     (last8
     (rt4
     (aida__conversion__calculate_negative_target_length_6__n__aggregate_def
     0 (+ (to_rep1 (first (rt source))) 1)
     (+ (to_rep1 (first (rt source))) 5))))) (+ (to_rep1 (first (rt source))) 5)))

;; H
  (assert
  (= (mk___t4 temp___2341 temp___23411) (aida__conversion__calculate_negative_target_length_6__n__aggregate_def
                                        0 (+ (to_rep1 (first (rt source))) 1)
                                        (+ (to_rep1 (first (rt source))) 5))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first8 temp___23411)) (to_rep1 (last8 temp___23411)))
     (+ (- (to_rep1 (last8 temp___23411)) (to_rep1 (first8 temp___23411))) 1)
     0) (ite (<= (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1
                                                        (first (rt source))) 5))
        (+ (- (+ (to_rep1 (first (rt source))) 5) (+ (to_rep1
                                                     (first (rt source))) 1)) 1)
        0)))

;; H
  (assert
  (= (slide1 temp___2341 (to_rep1 (first8 temp___23411))
     (+ (to_rep1 (first (rt source))) 1)) aida__conversion__calculate_negative_target_length_6__n__assume))

;; H
  (assert
  (= (mk3 (+ (to_rep1 (first (rt source))) 1)
     (+ (to_rep1 (first (rt source))) 5)) aida__conversion__calculate_negative_target_length_6__n__assume1))

;; H
  (assert (= (mk_map__ref1 result1) (mk_map__ref1 n)))

;; H
  (assert
  (= n1 aida__conversion__calculate_negative_target_length_6__n__assume))

;; H
  (assert
  (= (to_rep1 n__first) (to_rep1
                        (first6
                        aida__conversion__calculate_negative_target_length_6__n__assume1))))

;; H
  (assert
  (= (to_rep1 n__last) (to_rep1
                       (last6
                       aida__conversion__calculate_negative_target_length_6__n__assume1))))

;; H
  (assert
  (and (dynamic_property6 (+ (to_rep1 (first (rt source))) 1)
  (+ (to_rep1 (first (rt source))) 5) (to_rep1 n__first) (to_rep1 n__last))
  (and (= (to_rep1 n__first) (+ (to_rep1 (first (rt source))) 1))
  (= (to_rep1 n__last) (+ (to_rep1 (first (rt source))) 5)))))

;; H
  (assert
  (and (= temp___2347 (+ (to_rep1 (first (rt source))) 1)) (in_range1
  (+ (to_rep1 (first (rt source))) 1))))

;; H
  (assert
  (and (= temp___2348 (+ (to_rep1 (first (rt source))) 5)) (in_range1
  (+ (to_rep1 (first (rt source))) 5))))

;; H
  (assert (= (mk_int__ref result2) (mk_int__ref index)))

;; H
  (assert (= index1 temp___2347))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= temp___2346 index1)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= temp___2344 n1)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (and (<= (to_rep1 n__first) index1) (<= index1 (to_rep1 n__last)))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= o index1)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= o1 (select n1 o))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= o2 (to_rep1 o1))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= o2 aida__conversion__convert_character_digit_to_integer__2__target)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (and (<= (to_rep1 (first (rt source))) index1)
  (<= index1 (to_rep1 (last (rt source)))))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= o3 index1)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= o4 (select (elts source) o3))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= o5 (to_rep o4))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (and
  (and
  (and
  (and
  (<= 0 aida__conversion__convert_character_digit_to_integer__2__target1)
  (<= aida__conversion__convert_character_digit_to_integer__2__target1 9))
  (= aida__conversion__convert_character_digit_to_integer__2__target1 
  (convert_character_digit_to_integer o5)))
  (ite (= (= o5 48) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 0)
  (ite (= (= o5 49) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 1)
  (ite (= (= o5 50) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 2)
  (ite (= (= o5 51) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 3)
  (ite (= (= o5 52) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 4)
  (ite (= (= o5 53) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 5)
  (ite (= (= o5 54) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 6)
  (ite (= (= o5 55) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 7)
  (ite (= (= o5 56) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 8)
  (=> (= (= o5 57) true)
  (= aida__conversion__convert_character_digit_to_integer__2__target1 9))))))))))))
  (in_range1
  aida__conversion__convert_character_digit_to_integer__2__target1))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= (to_rep1 o6) aida__conversion__convert_character_digit_to_integer__2__target1)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (and (<= (to_rep1 n__first) index1) (<= index1 (to_rep1 n__last)))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= o7 index1)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= o8 (store n1 o7 o6))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= n1 result3)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= n2 o8)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (forall ((i Int))
  (=> (and (<= (+ (to_rep1 (first (rt source))) 1) i) (<= i index2))
  (and (<= 0 (to_rep1 (select n3 i))) (<= (to_rep1 (select n3 i)) 9))))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (forall ((j Int))
  (=> (and (<= (+ (to_rep1 (first (rt source))) 1) j) (<= j index2))
  (<= (to_rep1 (select n3 j)) (to_rep1 (select int_array1 j)))))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (and
  (and
  (forall ((temp___2345 Int))
  (=>
  (and (<= (to_rep1 n__first) temp___2345)
  (<= temp___2345 (to_rep1 n__last)))
  (=> (< index2 temp___2345)
  (= (select n3 temp___2345) (select temp___2344 temp___2345)))))
  (=>
  (<= (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 5))
  (dynamic_property9 (+ (to_rep1 (first (rt source))) 1)
  (+ (to_rep1 (first (rt source))) 5) index2)))
  (and (<= (+ (to_rep1 (first (rt source))) 1) index2)
  (<= index2 (+ (to_rep1 (first (rt source))) 5))))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= index2 temp___2348)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= index2 index3)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= n3 n4)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= index4 index2)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= n5 n3)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= index5 (mk_int__ref index3))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= n6 (mk_map__ref1 n4))))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348))
  (= index6 index4)))

;; H
  (assert
  (=> (and (<= temp___2347 index1) (<= index1 temp___2348)) (= n7 n5)))

;; H
  (assert
  (=> (not (and (<= temp___2347 index1) (<= index1 temp___2348)))
  (= index5 (mk_int__ref index1))))

;; H
  (assert
  (=> (not (and (<= temp___2347 index1) (<= index1 temp___2348)))
  (= n6 (mk_map__ref1 n1))))

;; H
  (assert
  (=> (not (and (<= temp___2347 index1) (<= index1 temp___2348)))
  (= index6 index1)))

;; H
  (assert
  (=> (not (and (<= temp___2347 index1) (<= index1 temp___2348))) (= n7 n1)))

;; H
  (assert
  (forall ((i Int))
  (=> (and (<= (to_rep1 n__first) i) (<= i (to_rep1 n__last)))
  (and (<= 0 (to_rep1 (select (map__content1 n6) i)))
  (<= (to_rep1 (select (map__content1 n6) i)) (to_rep1 (select int_array1 i)))))))

;; H
  (assert
  (and (= temp___2349 (+ (to_rep1 (first (rt source))) 5)) (in_range1
  (+ (to_rep1 (first (rt source))) 5))))

;; H
  (assert
  (and (<= (to_rep1 n__first) temp___2349)
  (<= temp___2349 (to_rep1 n__last))))

;; H
  (assert (= o9 temp___2349))

;; H
  (assert (= o10 (select (map__content1 n6) o9)))

;; H
  (assert (= o11 (to_rep1 o10)))

;; H
  (assert (= o12 (- o11)))

;; H
  (assert (and (= o13 o12) (in_range1 o12)))

;; H
  (assert (= result4 (mk_int__ref target)))

;; H
  (assert (= target1 o13))

;; H
  (assert (<= (- 9) target1))

;; H
  (assert
  (and (= temp___2350 (+ (to_rep1 (first (rt source))) 4)) (in_range1
  (+ (to_rep1 (first (rt source))) 4))))

;; H
  (assert
  (and (<= (to_rep1 n__first) temp___2350)
  (<= temp___2350 (to_rep1 n__last))))

;; H
  (assert (= o14 temp___2350))

;; H
  (assert (= o15 (select (map__content1 n6) o14)))

;; H
  (assert (= o16 (to_rep1 o15)))

;; H
  (assert (= o17 (* o16 10)))

;; H
  (assert (and (= o18 o17) (in_range1 o17)))

;; H
  (assert (= o19 (- target1 o18)))

;; H
  (assert (and (= o20 o19) (in_range1 o19)))

;; H
  (assert (= result5 (mk_int__ref target1)))

;; H
  (assert (= target2 o20))

;; H
  (assert (<= (- 99) target2))

;; H
  (assert
  (and (= temp___2351 (+ (to_rep1 (first (rt source))) 3)) (in_range1
  (+ (to_rep1 (first (rt source))) 3))))

;; H
  (assert
  (and (<= (to_rep1 n__first) temp___2351)
  (<= temp___2351 (to_rep1 n__last))))

;; H
  (assert (= o21 temp___2351))

;; H
  (assert (= o22 (select (map__content1 n6) o21)))

;; H
  (assert (= o23 (to_rep1 o22)))

;; H
  (assert (= o24 (* o23 100)))

;; H
  (assert (and (= o25 o24) (in_range1 o24)))

;; H
  (assert (= o26 (- target2 o25)))

;; H
  (assert (and (= o27 o26) (in_range1 o26)))

;; H
  (assert (= result6 (mk_int__ref target2)))

;; H
  (assert (= target3 o27))

;; H
  (assert (<= (- 999) target3))

;; H
  (assert
  (and (= temp___2352 (+ (to_rep1 (first (rt source))) 2)) (in_range1
  (+ (to_rep1 (first (rt source))) 2))))

;; H
  (assert
  (and (<= (to_rep1 n__first) temp___2352)
  (<= temp___2352 (to_rep1 n__last))))

;; H
  (assert (= o28 temp___2352))

;; H
  (assert (= o29 (select (map__content1 n6) o28)))

;; H
  (assert (= o30 (to_rep1 o29)))

;; H
  (assert (= o31 (* o30 1000)))

(assert
;; WP_parameter_def
 ;; File "aida-conversion.adb", line 2042, characters 0-0
  (not (in_range1 o31)))
(check-sat)
