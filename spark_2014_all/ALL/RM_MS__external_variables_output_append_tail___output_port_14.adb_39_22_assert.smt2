;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const output_value Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const output_port Int)

(declare-const out_1 Int)

(declare-const out_2 Int)

(declare-const output_port1 Int)

(declare-const out_11 Int)

(declare-const output_port2 Int)

(declare-const out_21 Int)

(declare-const output_port3 Int)

(declare-const out_12 Int)

(declare-const result Int)

(declare-const out_22 Int)

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 output_port)))

;; H
  (assert (in_range1 output_value))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 out_1)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 out_2)))

;; H
  (assert
  (=> (= output_value (- 1))
  (and (= out_11 0) (and (in_range1 out_11) (in_range1 output_port1)))))

;; H
  (assert
  (=> (= output_value (- 1))
  (and (= out_21 output_value)
  (and (in_range1 out_21) (in_range1 output_port2)))))

;; H
  (assert
  (=> (not (= output_value (- 1)))
  (and (= out_12 output_value)
  (and (in_range1 out_12) (in_range1 output_port3)))))

;; H
  (assert (=> (not (= output_value (- 1))) (= result out_2)))

;; H
  (assert (=> (not (= output_value (- 1))) (= out_22 out_12)))

;; H
  (assert (=> (not (= output_value (- 1))) (= out_21 out_22)))

;; H
  (assert (=> (not (= output_value (- 1))) (= out_11 out_12)))

;; H
  (assert (=> (not (= output_value (- 1))) (= output_port2 output_port3)))

;; H
  (assert (= output_value (- 1)))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (= out_11 0)))
(check-sat)
(exit)
