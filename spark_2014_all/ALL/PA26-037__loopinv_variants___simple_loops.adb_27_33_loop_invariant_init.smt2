;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort t1b 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (t1b t1b) Bool)

(declare-const dummy t1b)

(declare-datatypes () ((t1b__ref (mk_t1b__ref (t1b__content t1b)))))
(define-fun t1b__ref___projection ((a t1b__ref)) t1b (t1b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort t2b 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (t2b t2b) Bool)

(declare-const dummy1 t2b)

(declare-datatypes () ((t2b__ref (mk_t2b__ref (t2b__content t2b)))))
(define-fun t2b__ref___projection ((a t2b__ref)) t2b (t2b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-sort t3b 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (t3b t3b) Bool)

(declare-const dummy2 t3b)

(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content t3b)))))
(define-fun t3b__ref___projection ((a t3b__ref)) t3b (t3b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-sort t4b 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (t4b t4b) Bool)

(declare-const dummy3 t4b)

(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content t4b)))))
(define-fun t4b__ref___projection ((a t4b__ref)) t4b (t4b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-sort t5b 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq4 (t5b t5b) Bool)

(declare-const dummy4 t5b)

(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content t5b)))))
(define-fun t5b__ref___projection ((a t5b__ref)) t5b (t5b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-sort t6b 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq5 (t6b t6b) Bool)

(declare-const dummy5 t6b)

(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content t6b)))))
(define-fun t6b__ref___projection ((a t6b__ref)) t6b (t6b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-sort t7b 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq6 (t7b t7b) Bool)

(declare-const dummy6 t7b)

(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content t7b)))))
(define-fun t7b__ref___projection ((a t7b__ref)) t7b (t7b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort t8b 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq7 (t8b t8b) Bool)

(declare-const dummy7 t8b)

(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content t8b)))))
(define-fun t8b__ref___projection ((a t8b__ref)) t8b (t8b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const prop__ Bool)

(declare-const i Int)

(declare-const j Int)

(declare-const i1 Int)

(declare-const j1 Int)

(declare-const i2 Int)

(declare-const j2 Int)

(declare-const temp___173 Int)

(declare-const temp___172 Bool)

(declare-const temp___169 Int)

(declare-const temp___168 Bool)

(declare-const temp___181 Int)

(declare-const temp___180 Bool)

(declare-const temp___177 Int)

(declare-const temp___176 Bool)

(declare-const prop__1 Bool)

(declare-const j3 Int)

(declare-const j4 Int)

(declare-const result Int)

(declare-const i3 Int)

(declare-const result1 Bool)

(declare-const prop__2 Bool)

(declare-const result2 Int)

(declare-const j5 Int)

(declare-const prop__3 Bool)

(declare-const j6 Int)

(declare-const result3 Bool)

(declare-const prop__4 Bool)

(declare-const prop__5 Bool)

(declare-const j7 Int)

(declare-const prop__6 Bool)

(declare-const j8 Int)

(declare-const prop__7 Bool)

(declare-const j9 Int)

(declare-const prop__8 Bool)

(declare-const j10 Int)

(declare-const prop__9 Bool)

(declare-const i4 Int)

(declare-const j11 Int)

(declare-const prop__10 bool__ref)

(declare-const i5 int__ref)

(declare-const j12 int__ref)

(declare-const prop__11 Bool)

(declare-const i6 Int)

(declare-const j13 Int)

(declare-const prop__12 bool__ref)

(declare-const i7 int__ref)

(declare-const j14 int__ref)

(declare-const prop__13 Bool)

(declare-const i8 Int)

(declare-const j15 Int)

(declare-const result4 int__ref)

(declare-const i9 Int)

(declare-const result5 bool__ref)

(declare-const prop__14 Bool)

(declare-const result6 int__ref)

(declare-const j16 Int)

(declare-const prop__15 Bool)

(declare-const j17 Int)

(declare-const result7 bool__ref)

(declare-const prop__16 Bool)

(declare-const prop__17 bool__ref)

(declare-const j18 int__ref)

(declare-const prop__18 Bool)

(declare-const j19 Int)

(declare-const prop__19 bool__ref)

(declare-const j20 int__ref)

(declare-const prop__20 Bool)

(declare-const j21 Int)

(declare-const prop__21 Bool)

(declare-const i10 Int)

(declare-const j22 Int)

(declare-const prop__22 bool__ref)

(declare-const i11 int__ref)

(declare-const j23 int__ref)

(declare-const prop__23 Bool)

(declare-const i12 Int)

(declare-const j24 Int)

(declare-const prop__24 bool__ref)

(declare-const i13 int__ref)

(declare-const j25 int__ref)

(declare-const prop__25 Bool)

(declare-const i14 Int)

(declare-const j26 Int)

(declare-const result8 int__ref)

(declare-const i15 Int)

(declare-const result9 bool__ref)

(declare-const prop__26 Bool)

(declare-const result10 int__ref)

(declare-const j27 Int)

(define-fun j28 () int__ref (mk_int__ref j1))

(define-fun j29 () int__ref (mk_int__ref j))

(define-fun prop__27 () bool__ref (mk_bool__ref prop__))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref i)))

;; H
  (assert (= i3 1))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= temp___173 i3)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= temp___172 prop__)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= (mk_bool__ref result1) prop__27)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= prop__2 (of_int 0))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= (mk_int__ref result2) j29)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= j5 1)))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= temp___169 j5))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= temp___168 prop__2))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= prop__3 true))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10))
  (and (=> (<= 1 10) (in_range2 j6)) (and (<= 1 j6) (<= j6 10))))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= prop__3 result3))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= prop__4 (of_int 1)))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3)) (=> (and (<= 1 j5) (<= j5 10)) (= j6 10))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3)) (=> (and (<= 1 j5) (<= j5 10)) (= j6 j7))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= prop__4 prop__5))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3)) (=> (and (<= 1 j5) (<= j5 10)) (= j8 j6))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= prop__6 prop__4))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= (mk_int__ref j9) (mk_int__ref j7)))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10))
  (= (mk_bool__ref prop__7) (mk_bool__ref prop__5)))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3)) (=> (and (<= 1 j5) (<= j5 10)) (= j10 j8))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (and (<= 1 j5) (<= j5 10)) (= prop__8 prop__6))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (not (and (<= 1 j5) (<= j5 10))) (= j5 j9))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (not (and (<= 1 j5) (<= j5 10))) (= prop__2 prop__7))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (not (and (<= 1 j5) (<= j5 10))) (= j10 j5))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (=> (not (and (<= 1 j5) (<= j5 10))) (= prop__8 prop__2))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 3))
  (and (=> (<= 1 3) (in_range1 i4)) (and (<= 1 i4) (<= i4 3)))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= i4 3)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= j12 (mk_int__ref j11))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= i5 (mk_int__ref i4))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= prop__10 (mk_bool__ref prop__9))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= j13 j11)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= i6 i4)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= prop__11 prop__9)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= j14 j12)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= i7 i5)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= prop__12 prop__10)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= j15 j13)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= i8 i6)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 3)) (= prop__13 prop__11)))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 3))) (= j14 j29)))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 3))) (= i7 (mk_int__ref i3))))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 3))) (= prop__12 prop__27)))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 3))) (= j15 j3)))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 3))) (= i8 i3)))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 3))) (= prop__13 prop__1)))

;; H
  (assert (= result4 (mk_int__ref i1)))

;; H
  (assert (= i9 1))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= temp___181 i9)))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3)) (= temp___180 (bool__content prop__12))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= result5 prop__12)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= prop__14 (of_int 1))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= result6 j28)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= j16 1)))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= temp___177 j16))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= temp___176 prop__14))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= prop__15 true))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10))
  (and (=> (<= 1 10) (in_range4 j17)) (and (<= 1 j17) (<= j17 10))))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= result7 (mk_bool__ref prop__15)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= prop__16 (of_int 0)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3)) (=> (and (<= 1 j16) (<= j16 10)) (= j17 10))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= j18 (mk_int__ref j17)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= prop__17 (mk_bool__ref prop__16)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= j19 j17))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= prop__18 prop__16))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= j20 j18))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= prop__19 prop__17))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= j21 j19))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (and (<= 1 j16) (<= j16 10)) (= prop__20 prop__18))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (not (and (<= 1 j16) (<= j16 10))) (= j20 (mk_int__ref j16)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (not (and (<= 1 j16) (<= j16 10)))
  (= prop__19 (mk_bool__ref prop__14)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (not (and (<= 1 j16) (<= j16 10))) (= j21 j16))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (=> (not (and (<= 1 j16) (<= j16 10))) (= prop__20 prop__14))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3))
  (and (=> (<= 1 3) (in_range3 i10)) (and (<= 1 i10) (<= i10 3)))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= i10 3)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= j23 (mk_int__ref j22))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= i11 (mk_int__ref i10))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 3)) (= prop__22 (mk_bool__ref prop__21))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= j24 j22)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= i12 i10)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= prop__23 prop__21)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= j25 j23)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= i13 i11)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= prop__24 prop__22)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= j26 j24)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= i14 i12)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 3)) (= prop__25 prop__23)))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 3))) (= j25 j28)))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 3))) (= i13 (mk_int__ref i9))))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 3))) (= prop__24 prop__12)))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 3))) (= j26 j4)))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 3))) (= i14 i9)))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 3))) (= prop__25 prop__13)))

;; H
  (assert (= result8 (mk_int__ref i2)))

;; H
  (assert (= i15 1))

;; H
  (assert (<= 1 i15))

;; H
  (assert (<= i15 3))

;; H
  (assert (= result9 prop__24))

;; H
  (assert (= prop__26 (of_int 1)))

;; H
  (assert (= result10 (mk_int__ref j2)))

;; H
  (assert (= j27 1))

;; H
  (assert (<= 1 j27))

;; H
  (assert (<= j27 10))

(assert
;; WP_parameter_def
 ;; File "simple_loops.adb", line 1, characters 0-0
  (not (= prop__26 true)))
(check-sat)
(exit)
