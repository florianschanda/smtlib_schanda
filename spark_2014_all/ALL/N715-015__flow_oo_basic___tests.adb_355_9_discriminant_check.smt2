;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((us_split_discrs (mk___split_discrs (rec__tests__test_16__t__d Bool)))))
(define-fun us_split_discrs_5__projection ((a us_split_discrs)) Bool
  (rec__tests__test_16__t__d a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref_5__projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields (mk___split_fields (rec__tests__test_16__t__x integer)))))
(define-fun us_split_fields_X4__projection ((a us_split_fields)) integer
  (rec__tests__test_16__t__x a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_12__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__constrained Bool)))))
(define-fun us_rep_23__projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                               a))

(define-fun us_rep_24__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                               a))

(define-fun us_rep_25__projection ((a us_rep)) Bool (attr__constrained a))

(define-fun tests__test_16__t__x__pred ((a us_rep)) Bool (= (to_int1
                                                            (rec__tests__test_16__t__d
                                                            (us_split_discrs1
                                                            a))) 1))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__tests__test_16__t__d (us_split_discrs1 a))
                        (rec__tests__test_16__t__d (us_split_discrs1 b)))
                        (=> (tests__test_16__t__x__pred a)
                        (= (to_rep
                           (rec__tests__test_16__t__x (us_split_fields1 a)))
                        (to_rep
                        (rec__tests__test_16__t__x (us_split_fields1 b))))))
                   true false))

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun tests__test_16__t__d__first__bit () Int)

(declare-fun tests__test_16__t__d__last__bit () Int)

(declare-fun tests__test_16__t__d__position () Int)

;; tests__test_16__t__d__first__bit_axiom
  (assert (<= 0 tests__test_16__t__d__first__bit))

;; tests__test_16__t__d__last__bit_axiom
  (assert
  (< tests__test_16__t__d__first__bit tests__test_16__t__d__last__bit))

;; tests__test_16__t__d__position_axiom
  (assert (<= 0 tests__test_16__t__d__position))

(declare-fun tests__test_16__t__x__first__bit () Int)

(declare-fun tests__test_16__t__x__last__bit () Int)

(declare-fun tests__test_16__t__x__position () Int)

;; tests__test_16__t__x__first__bit_axiom
  (assert (<= 0 tests__test_16__t__x__first__bit))

;; tests__test_16__t__x__last__bit_axiom
  (assert
  (< tests__test_16__t__x__first__bit tests__test_16__t__x__last__bit))

;; tests__test_16__t__x__position_axiom
  (assert (<= 0 tests__test_16__t__x__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-fun dummy1 () us_rep)

(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))

(define-fun default_initial_assumption ((temp___expr_289 us_rep)
  (temp___skip_top_level_290 Bool)) Bool (and
                                         (= (attr__constrained
                                            temp___expr_289) false)
                                         (= (rec__tests__test_16__t__d
                                            (us_split_discrs1
                                            temp___expr_289)) (of_int 0))))

(declare-fun f (us_rep) Bool)

(declare-fun f__function_guard (Bool us_rep) Bool)

;; f__post_axiom
  (assert true)

;; f__def_axiom
  (assert
  (forall ((x us_rep))
  (! (= (= (f x) true)
     (= (rec__tests__test_16__t__d (us_split_discrs1 x)) true)) :pattern (
  (f x)) )))

(define-fun in_range2 ((rec__tests__test_16__t__d1 Bool)
  (a us_rep)) Bool (= rec__tests__test_16__t__d1 (rec__tests__test_16__t__d
                                                 (us_split_discrs1 a))))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun tests__test_16__t__d__first__bit1 () Int)

(declare-fun tests__test_16__t__d__last__bit1 () Int)

(declare-fun tests__test_16__t__d__position1 () Int)

;; tests__test_16__t__d__first__bit_axiom
  (assert (<= 0 tests__test_16__t__d__first__bit1))

;; tests__test_16__t__d__last__bit_axiom
  (assert
  (< tests__test_16__t__d__first__bit1 tests__test_16__t__d__last__bit1))

;; tests__test_16__t__d__position_axiom
  (assert (<= 0 tests__test_16__t__d__position1))

(declare-fun tests__test_16__t__x__first__bit1 () Int)

(declare-fun tests__test_16__t__x__last__bit1 () Int)

(declare-fun tests__test_16__t__x__position1 () Int)

;; tests__test_16__t__x__first__bit_axiom
  (assert (<= 0 tests__test_16__t__x__first__bit1))

;; tests__test_16__t__x__last__bit_axiom
  (assert
  (< tests__test_16__t__x__first__bit1 tests__test_16__t__x__last__bit1))

;; tests__test_16__t__x__position_axiom
  (assert (<= 0 tests__test_16__t__x__position1))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-fun dummy2 () us_rep)

(declare-datatypes () ((taS__ref (mk_taS__ref (taS__content us_rep)))))
(define-fun taS__ref___projection ((a taS__ref)) us_rep (taS__content a))

(define-fun dynamic_invariant ((temp___expr_296 us_rep)
  (temp___is_init_293 Bool) (temp___skip_constant_294 Bool)
  (temp___do_toplevel_295 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_294 true))
                                      (in_range2 (of_int 0) temp___expr_296))
                                      (= (attr__constrained temp___expr_296) true)))

(define-fun default_initial_assumption1 ((temp___expr_298 us_rep)
  (temp___skip_top_level_299 Bool)) Bool (and
                                         (= (attr__constrained
                                            temp___expr_298) true)
                                         (= (rec__tests__test_16__t__d
                                            (us_split_discrs1
                                            temp___expr_298)) (of_int 0))))

(define-fun in_range3 ((rec__tests__test_16__t__d1 Bool)
  (a us_rep)) Bool (= rec__tests__test_16__t__d1 (rec__tests__test_16__t__d
                                                 (us_split_discrs1 a))))

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-fun tests__test_16__t__d__first__bit2 () Int)

(declare-fun tests__test_16__t__d__last__bit2 () Int)

(declare-fun tests__test_16__t__d__position2 () Int)

;; tests__test_16__t__d__first__bit_axiom
  (assert (<= 0 tests__test_16__t__d__first__bit2))

;; tests__test_16__t__d__last__bit_axiom
  (assert
  (< tests__test_16__t__d__first__bit2 tests__test_16__t__d__last__bit2))

;; tests__test_16__t__d__position_axiom
  (assert (<= 0 tests__test_16__t__d__position2))

(declare-fun tests__test_16__t__x__first__bit2 () Int)

(declare-fun tests__test_16__t__x__last__bit2 () Int)

(declare-fun tests__test_16__t__x__position2 () Int)

;; tests__test_16__t__x__first__bit_axiom
  (assert (<= 0 tests__test_16__t__x__first__bit2))

;; tests__test_16__t__x__last__bit_axiom
  (assert
  (< tests__test_16__t__x__first__bit2 tests__test_16__t__x__last__bit2))

;; tests__test_16__t__x__position_axiom
  (assert (<= 0 tests__test_16__t__x__position2))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-fun dummy3 () us_rep)

(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content us_rep)))))
(define-fun t19b__ref___projection ((a t19b__ref)) us_rep (t19b__content a))

(declare-fun a__split_discrs () us_split_discrs)

(declare-fun a__attr__constrained () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun b__attr__constrained () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun a__split_fields () integer)

(declare-fun b__split_discrs () Bool)

(declare-fun result () integer)

(declare-fun a__split_fields1 () integer)

;; H
  (assert (= result a__split_fields))

;; H
  (assert (= dummy a__split_fields1))

;; H
  (assert (= a__split_discrs (mk___split_discrs (of_int 0))))

;; H
  (assert (= a__attr__constrained true))

;; H
  (assert
  (and (= (of_int 0) (rec__tests__test_16__t__d a__split_discrs))
  (= a__attr__constrained true)))

;; H
  (assert
  (and (= b__attr__constrained false) (= b__split_discrs (of_int 0))))

;; H
  (assert (= b__attr__constrained true))

(assert
;; WP_parameter_def
 ;; File "tests.adb", line 330, characters 0-0
  (not (= (rec__tests__test_16__t__d a__split_discrs) b__split_discrs)))
(check-sat)
(exit)
