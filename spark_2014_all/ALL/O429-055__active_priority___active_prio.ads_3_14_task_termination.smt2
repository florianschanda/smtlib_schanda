;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort priority 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 97)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (priority priority) Bool)

(declare-fun dummy () priority)

(declare-datatypes ()
((priority__ref (mk_priority__ref (priority__content priority)))))
(define-fun priority__ref___projection ((a priority__ref)) priority (priority__content
                                                                    a))

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-fun dummy1 () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-datatypes ()
((us_split_fields (mk___split_fields (rec__active_prio__p_type__a integer)))))
(define-fun us_split_fields_A__projection ((a us_split_fields)) integer 
  (rec__active_prio__p_type__a a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun active_prio__p_type__a__first__bit () Int)

(declare-fun active_prio__p_type__a__last__bit () Int)

(declare-fun active_prio__p_type__a__position () Int)

;; active_prio__p_type__a__first__bit_axiom
  (assert (<= 0 active_prio__p_type__a__first__bit))

;; active_prio__p_type__a__last__bit_axiom
  (assert
  (< active_prio__p_type__a__first__bit active_prio__p_type__a__last__bit))

;; active_prio__p_type__a__position_axiom
  (assert (<= 0 active_prio__p_type__a__position))

(declare-datatypes ()
((p_type__ref (mk_p_type__ref (p_type__content us_rep)))))
(define-fun p_type__ref___projection ((a p_type__ref)) us_rep (p_type__content
                                                              a))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun default_initial_assumption ((temp___expr_178 us_rep)
  (temp___skip_top_level_179 Bool)) Bool (= (to_rep
                                            (rec__active_prio__p_type__a
                                            (us_split_fields1
                                            temp___expr_178))) 0))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1 (rec__active_prio__q_type__a integer)))))
(define-fun us_split_fields_A2__projection ((a us_split_fields2)) integer 
  (rec__active_prio__q_type__a a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_3__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep_3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                a))

(declare-fun user_eq3 (us_rep1 us_rep1) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-fun active_prio__q_type__a__first__bit () Int)

(declare-fun active_prio__q_type__a__last__bit () Int)

(declare-fun active_prio__q_type__a__position () Int)

;; active_prio__q_type__a__first__bit_axiom
  (assert (<= 0 active_prio__q_type__a__first__bit))

;; active_prio__q_type__a__last__bit_axiom
  (assert
  (< active_prio__q_type__a__first__bit active_prio__q_type__a__last__bit))

;; active_prio__q_type__a__position_axiom
  (assert (<= 0 active_prio__q_type__a__position))

(declare-datatypes ()
((q_type__ref (mk_q_type__ref (q_type__content us_rep1)))))
(define-fun q_type__ref___projection ((a q_type__ref)) us_rep1 (q_type__content
                                                               a))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun default_initial_assumption1 ((temp___expr_184 us_rep1)
  (temp___skip_top_level_185 Bool)) Bool (= (to_rep
                                            (rec__active_prio__q_type__a
                                            (us_split_fields3
                                            temp___expr_184))) 0))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant1 ((temp___expr_159 Int)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)) Bool (=>
                                      (or (= temp___is_init_156 true)
                                      (<= 0 97)) (in_range temp___expr_159)))

(declare-fun o () integer)

(declare-fun us_self__compl () integer)

(declare-fun o1 () integer)

(declare-fun us_self__compl1 () integer)

(declare-fun o2 () integer)

(declare-fun us_self__compl2 () integer)

(declare-fun p__split_fields () integer)

(declare-fun us_self__compl3 () integer)

(declare-fun result () us_split_fields__ref)

(declare-fun p__split_fields1 () us_split_fields)

(declare-fun q__split_fields () us_split_fields2)

(declare-fun us_self__compl4 () us_rep1)

(declare-fun result1 () us_split_fields__ref1)

(declare-fun q__split_fields1 () us_split_fields2)

(declare-fun p__split_fields2 () us_split_fields)

(declare-fun us_self__compl5 () us_rep)

(declare-fun result2 () us_split_fields__ref)

(declare-fun p__split_fields3 () us_split_fields)

(assert
;; WP_parameter_def
 ;; File "active_prio.ads", line 16, characters 0-0
  (not
  (not
  (and
  (and (and (= o p__split_fields) (= us_self__compl o))
  (and
  (= result (mk___split_fields__ref (mk___split_fields p__split_fields)))
  (= p__split_fields1 (mk___split_fields us_self__compl3))))
  (and
  (and
  (and (= q__split_fields (mk___split_fields1 o1)) (= us_self__compl1 o1))
  (and (= result1 (mk___split_fields__ref1 q__split_fields))
  (= q__split_fields1 (us_split_fields3 us_self__compl4))))
  (and
  (and (= p__split_fields2 (mk___split_fields o2)) (= us_self__compl2 o2))
  (and (= result2 (mk___split_fields__ref p__split_fields2))
  (= p__split_fields3 (us_split_fields1 us_self__compl5)))))))))
(check-sat)
