;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun x () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun y () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun z () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-sort t_rate 0)

(define-fun in_range1 ((x1 Int)) Bool (and (<= (- 3000) x1) (<= x1 3000)))

(define-fun bool_eq1 ((x1 Int) (y1 Int)) Bool (ite (= x1 y1) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (t_rate t_rate) Bool)

(declare-fun dummy1 () t_rate)

(declare-datatypes ()
((t_rate__ref (mk_t_rate__ref (t_rate__content t_rate)))))
(define-fun t_rate__ref___projection ((a t_rate__ref)) t_rate (t_rate__content
                                                              a))

(define-fun dynamic_invariant1 ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= (- 3000) 3000)) (in_range1
                                      temp___expr_135)))

(declare-fun to_rep (t_rate) Int)

(declare-fun of_rep (Int) t_rate)

;; inversion_axiom
  (assert
  (forall ((x1 t_rate))
  (! (= (of_rep (to_rep x1)) x1) :pattern ((to_rep x1)) )))

;; range_axiom
  (assert
  (forall ((x1 t_rate)) (! (in_range1 (to_rep x1)) :pattern ((to_rep x1)) )))

;; coerce_axiom
  (assert
  (forall ((x1 Int))
  (! (=> (in_range1 x1) (= (to_rep (of_rep x1)) x1)) :pattern ((to_rep
                                                               (of_rep x1))) )))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun roll_rate_desired () Int)

(declare-fun pitch_rate_desired () Int)

(declare-fun yaw_rate_desired () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired () Int)

(declare-fun o2 () Int)

(declare-fun result () Int)

(declare-fun roll_rate_desired1 () Int)

(declare-fun result1 () Int)

(declare-fun pitch_rate_desired1 () Int)

(declare-fun result2 () Int)

(declare-fun yaw_rate_desired1 () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__yaw_rate_desired () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1 () Int)

(declare-fun get_out_subtype_int__controller_get_desired_rate__roll_rate_desired () Int)

(declare-fun result3 () Int)

(declare-fun roll_rate_desired2 () Int)

;; H
  (assert (in_range x))

;; H
  (assert (in_range y))

;; H
  (assert (in_range z))

;; H
  (assert (= result roll_rate_desired))

;; H
  (assert (= roll_rate_desired1 0))

;; H
  (assert (in_range1 roll_rate_desired1))

;; H
  (assert (= result1 pitch_rate_desired))

;; H
  (assert (= pitch_rate_desired1 0))

;; H
  (assert (in_range1 pitch_rate_desired1))

;; H
  (assert (= result2 yaw_rate_desired))

;; H
  (assert (= yaw_rate_desired1 0))

;; H
  (assert (in_range1 yaw_rate_desired1))

;; H
  (assert (and (= o pitch_rate_desired1) (in_range pitch_rate_desired1)))

;; H
  (assert (and (= o1 o) (in_range o)))

;; H
  (assert
  (= o1 get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired))

;; H
  (assert
  (and
  (and (in_range
  get_out_subtype_int__controller_get_desired_rate__roll_rate_desired)
  (in_range
  get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1))
  (in_range
  get_out_subtype_int__controller_get_desired_rate__yaw_rate_desired)))

;; H
  (assert
  (and
  (= o2 get_out_subtype_int__controller_get_desired_rate__roll_rate_desired)
  (in_range1
  get_out_subtype_int__controller_get_desired_rate__roll_rate_desired)))

;; H
  (assert (= result3 roll_rate_desired1))

;; H
  (assert (= roll_rate_desired2 o2))

(assert
;; WP_parameter_def
 ;; File "get_out_subtype_int.adb", line 7, characters 0-0
  (not (in_range1
  get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1)))
(check-sat)
