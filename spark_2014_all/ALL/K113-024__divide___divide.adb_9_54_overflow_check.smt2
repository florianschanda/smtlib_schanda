;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const m Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const n Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const q Int)

(declare-const r Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const result Int)

(declare-const q1 Int)

(declare-const result1 Int)

(declare-const r1 Int)

(declare-const q2 Int)

(declare-const r2 Int)

(declare-const result2 Bool)

;; H
  (assert (in_range1 m))

;; H
  (assert (in_range1 n))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 q)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 r)))

;; H
  (assert (and (<= 0 m) (< 0 n)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref q)))

;; H
  (assert (= q1 0))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref r)))

;; H
  (assert (= r1 m))

;; H
  (assert (<= n r1))

;; H
  (assert (and (and (<= q2 (- m r2)) (= m (+ (* q2 n) r2))) (<= 0 r2)))

;; H
  (assert
  (and
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 q2))
  (=> (<= (- 2147483648) 2147483647) (in_range1 r2))) (<= n r2)))

;; H
  (assert (and (= o2 (- m r2)) (in_range1 (- m r2))))

;; H
  (assert (= result2 (ite (<= q2 o2) true false)))

;; H
  (assert (= result2 true))

;; H
  (assert (and (= o (* q2 n)) (in_range1 (* q2 n))))

;; H
  (assert (= o1 (+ o r2)))

(assert
;; WP_parameter_def
 ;; File "divide.ads", line 2, characters 0-0
  (not (in_range1 o1)))
(check-sat)
(exit)
