;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun ghost_func (tuple0) Int)

(declare-fun ghost_func__function_guard (Int tuple0) Bool)

;; ghost_func__post_axiom
  (assert
  (forall ((us_void_param tuple0)) (! (dynamic_invariant
  (ghost_func us_void_param) true false
  true) :pattern ((ghost_func us_void_param)) )))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-sort t1b 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (t1b t1b) Bool)

(declare-fun dummy1 () t1b)

(declare-datatypes () ((t1b__ref (mk_t1b__ref (t1b__content t1b)))))
(define-fun t1b__ref___projection ((a t1b__ref)) t1b (t1b__content a))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun formal () Int)

(declare-fun i () Int)

(declare-fun temp___135 () Int)

(declare-fun temp___134 () Int)

(declare-fun temp___136 () Int)

(declare-fun o () Int)

(declare-fun formal1 () Int)

(declare-fun result () Int)

(declare-fun i1 () Int)

(declare-fun result1 () Int)

(declare-fun formal2 () Int)

(declare-fun formal3 () Int)

(declare-fun i2 () Int)

(declare-fun temp___1361 () Int)

(declare-fun result2 () Int)

(declare-fun temp___1362 () Int)

(declare-fun formal4 () Int)

(declare-fun i3 () Int)

(declare-fun formal5 () Int)

(declare-fun i4 () Int)

(declare-fun formal6 () Int)

(declare-fun i5 () Int)

(declare-fun formal7 () Int)

(declare-fun i6 () Int)

(declare-fun formal8 () Int)

(declare-fun i7 () Int)

(declare-fun formal9 () Int)

(declare-fun i8 () Int)

(define-fun i9 () int__ref (mk_int__ref i5))

(define-fun formal10 () int__ref (mk_int__ref formal6))

(define-fun formal11 () int__ref (mk_int__ref formal))

;; H
  (assert (in_range1 formal))

;; H
  (assert (= formal (ghost_func Tuple0)))

;; H
  (assert (< 0 (+ formal (ghost_func Tuple0))))

;; H
  (assert (< 0 (+ formal (ghost_func Tuple0))))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref i)))

;; H
  (assert (= i1 1))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= temp___135 i1)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= temp___134 formal)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= 0 temp___136)))

;; H
  (assert
  (=> (and (<= 1 i1) (<= i1 2))
  (and (= o (+ formal 1)) (in_range1 (+ formal 1)))))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= (mk_int__ref result1) formal11)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= formal2 o)))

;; H
  (assert
  (=> (and (<= 1 i1) (<= i1 2)) (< 0 (+ formal3 (ghost_func Tuple0)))))

;; H
  (assert
  (=> (and (<= 1 i1) (<= i1 2))
  (and (and (in_range1 formal3) (=> (<= 1 2) (in_range2 i2)))
  (and (<= 1 i2) (<= i2 2)))))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= temp___1361 result2)))

;; H
  (assert
  (=> (and (<= 1 i1) (<= i1 2))
  (= temp___1362 (+ formal3 (ghost_func Tuple0)))))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= i2 2)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= i2 i3)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= formal3 formal4)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= i4 i2)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= formal5 formal3)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= i9 (mk_int__ref i3))))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= formal10 (mk_int__ref formal4))))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= i6 i4)))

;; H
  (assert (=> (and (<= 1 i1) (<= i1 2)) (= formal7 formal5)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 2))) (= i1 i5)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 2))) (= formal10 formal11)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 2))) (= i6 i1)))

;; H
  (assert (=> (not (and (<= 1 i1) (<= i1 2))) (= formal7 formal1)))

;; H
  (assert (= (mk_int__ref i7) i9))

;; H
  (assert (= (mk_int__ref formal8) formal10))

;; H
  (assert (= i8 i6))

;; H
  (assert (= formal9 formal7))

;; H
  (assert (=> (= (= formal 0) true) (= formal8 (ghost_func Tuple0))))

;; H
  (assert
  (=> (not (= (= formal 0) true)) (= formal8 (+ (ghost_func Tuple0) 1))))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (= formal8 (+ (ghost_func Tuple0) 1))))
(check-sat)
(exit)
