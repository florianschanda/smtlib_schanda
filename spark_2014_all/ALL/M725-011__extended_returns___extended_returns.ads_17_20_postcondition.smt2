;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort natural 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(declare-fun to_rep1 (natural) Int)

(declare-fun of_rep1 (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((us_split_discrs 0))
(((mk___split_discrs (rec__extended_returns__record_t__discr natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural
  (rec__extended_returns__record_t__discr a))

(declare-datatypes ((us_split_discrs__ref 0))
(((mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields
  (rec__extended_returns__record_t__a integer)(rec__extended_returns__record_t__b integer)(rec__extended_returns__record_t__c integer)(rec__extended_returns__record_t__d integer)))))
(define-fun us_split_fields_A__projection ((a us_split_fields)) integer
  (rec__extended_returns__record_t__a a))

(define-fun us_split_fields_B__projection ((a us_split_fields)) integer
  (rec__extended_returns__record_t__b a))

(define-fun us_split_fields_C__projection ((a us_split_fields)) integer
  (rec__extended_returns__record_t__c a))

(define-fun us_split_fields_D__projection ((a us_split_fields)) integer
  (rec__extended_returns__record_t__d a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun us_rep___3__projection ((a us_rep)) Bool (attr__constrained a))

(define-fun extended_returns__record_t__b__pred ((a us_rep)) Bool (=
  (to_rep1 (rec__extended_returns__record_t__discr (us_split_discrs1 a))) 0))

(define-fun extended_returns__record_t__c__pred ((a us_rep)) Bool (=
  (to_rep1 (rec__extended_returns__record_t__discr (us_split_discrs1 a))) 1))

(define-fun extended_returns__record_t__d__pred ((a us_rep)) Bool (=
  (to_rep1 (rec__extended_returns__record_t__discr (us_split_discrs1 a))) 1))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (= (to_rep1
                           (rec__extended_returns__record_t__discr
                           (us_split_discrs1 a))) (to_rep1
                                                  (rec__extended_returns__record_t__discr
                                                  (us_split_discrs1 b))))
                        (= (to_rep
                           (rec__extended_returns__record_t__a
                           (us_split_fields1 a))) (to_rep
                                                  (rec__extended_returns__record_t__a
                                                  (us_split_fields1 b)))))
                        (=> (extended_returns__record_t__b__pred a)
                        (= (to_rep
                           (rec__extended_returns__record_t__b
                           (us_split_fields1 a))) (to_rep
                                                  (rec__extended_returns__record_t__b
                                                  (us_split_fields1 b))))))
                        (=> (extended_returns__record_t__c__pred a)
                        (= (to_rep
                           (rec__extended_returns__record_t__c
                           (us_split_fields1 a))) (to_rep
                                                  (rec__extended_returns__record_t__c
                                                  (us_split_fields1 b))))))
                        (=> (extended_returns__record_t__d__pred a)
                        (= (to_rep
                           (rec__extended_returns__record_t__d
                           (us_split_fields1 a))) (to_rep
                                                  (rec__extended_returns__record_t__d
                                                  (us_split_fields1 b))))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const extended_returns__record_t__discr__first__bit Int)

(declare-const extended_returns__record_t__discr__last__bit Int)

(declare-const extended_returns__record_t__discr__position Int)

;; extended_returns__record_t__discr__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__discr__first__bit))

;; extended_returns__record_t__discr__last__bit_axiom
  (assert
  (< extended_returns__record_t__discr__first__bit extended_returns__record_t__discr__last__bit))

;; extended_returns__record_t__discr__position_axiom
  (assert (<= 0 extended_returns__record_t__discr__position))

(declare-const extended_returns__record_t__a__first__bit Int)

(declare-const extended_returns__record_t__a__last__bit Int)

(declare-const extended_returns__record_t__a__position Int)

;; extended_returns__record_t__a__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__a__first__bit))

;; extended_returns__record_t__a__last__bit_axiom
  (assert
  (< extended_returns__record_t__a__first__bit extended_returns__record_t__a__last__bit))

;; extended_returns__record_t__a__position_axiom
  (assert (<= 0 extended_returns__record_t__a__position))

(declare-const extended_returns__record_t__b__first__bit Int)

(declare-const extended_returns__record_t__b__last__bit Int)

(declare-const extended_returns__record_t__b__position Int)

;; extended_returns__record_t__b__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__b__first__bit))

;; extended_returns__record_t__b__last__bit_axiom
  (assert
  (< extended_returns__record_t__b__first__bit extended_returns__record_t__b__last__bit))

;; extended_returns__record_t__b__position_axiom
  (assert (<= 0 extended_returns__record_t__b__position))

(declare-const extended_returns__record_t__c__first__bit Int)

(declare-const extended_returns__record_t__c__last__bit Int)

(declare-const extended_returns__record_t__c__position Int)

;; extended_returns__record_t__c__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__c__first__bit))

;; extended_returns__record_t__c__last__bit_axiom
  (assert
  (< extended_returns__record_t__c__first__bit extended_returns__record_t__c__last__bit))

;; extended_returns__record_t__c__position_axiom
  (assert (<= 0 extended_returns__record_t__c__position))

(declare-const extended_returns__record_t__d__first__bit Int)

(declare-const extended_returns__record_t__d__last__bit Int)

(declare-const extended_returns__record_t__d__position Int)

;; extended_returns__record_t__d__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__d__first__bit))

;; extended_returns__record_t__d__last__bit_axiom
  (assert
  (< extended_returns__record_t__d__first__bit extended_returns__record_t__d__last__bit))

;; extended_returns__record_t__d__position_axiom
  (assert (<= 0 extended_returns__record_t__d__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ((record_t__ref 0))
(((mk_record_t__ref (record_t__content us_rep)))))
(define-fun record_t__ref___projection ((a record_t__ref)) us_rep (record_t__content
                                                                  a))

(declare-const discr Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const init_val Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun in_range2 ((rec__extended_returns__record_t__discr1 Int)
  (a us_rep)) Bool (= rec__extended_returns__record_t__discr1 (to_rep1
                                                              (rec__extended_returns__record_t__discr
                                                              (us_split_discrs1
                                                              a)))))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-const extended_returns__record_t__discr__first__bit1 Int)

(declare-const extended_returns__record_t__discr__last__bit1 Int)

(declare-const extended_returns__record_t__discr__position1 Int)

;; extended_returns__record_t__discr__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__discr__first__bit1))

;; extended_returns__record_t__discr__last__bit_axiom
  (assert
  (< extended_returns__record_t__discr__first__bit1 extended_returns__record_t__discr__last__bit1))

;; extended_returns__record_t__discr__position_axiom
  (assert (<= 0 extended_returns__record_t__discr__position1))

(declare-const extended_returns__record_t__a__first__bit1 Int)

(declare-const extended_returns__record_t__a__last__bit1 Int)

(declare-const extended_returns__record_t__a__position1 Int)

;; extended_returns__record_t__a__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__a__first__bit1))

;; extended_returns__record_t__a__last__bit_axiom
  (assert
  (< extended_returns__record_t__a__first__bit1 extended_returns__record_t__a__last__bit1))

;; extended_returns__record_t__a__position_axiom
  (assert (<= 0 extended_returns__record_t__a__position1))

(declare-const extended_returns__record_t__b__first__bit1 Int)

(declare-const extended_returns__record_t__b__last__bit1 Int)

(declare-const extended_returns__record_t__b__position1 Int)

;; extended_returns__record_t__b__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__b__first__bit1))

;; extended_returns__record_t__b__last__bit_axiom
  (assert
  (< extended_returns__record_t__b__first__bit1 extended_returns__record_t__b__last__bit1))

;; extended_returns__record_t__b__position_axiom
  (assert (<= 0 extended_returns__record_t__b__position1))

(declare-const extended_returns__record_t__c__first__bit1 Int)

(declare-const extended_returns__record_t__c__last__bit1 Int)

(declare-const extended_returns__record_t__c__position1 Int)

;; extended_returns__record_t__c__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__c__first__bit1))

;; extended_returns__record_t__c__last__bit_axiom
  (assert
  (< extended_returns__record_t__c__first__bit1 extended_returns__record_t__c__last__bit1))

;; extended_returns__record_t__c__position_axiom
  (assert (<= 0 extended_returns__record_t__c__position1))

(declare-const extended_returns__record_t__d__first__bit1 Int)

(declare-const extended_returns__record_t__d__last__bit1 Int)

(declare-const extended_returns__record_t__d__position1 Int)

;; extended_returns__record_t__d__first__bit_axiom
  (assert (<= 0 extended_returns__record_t__d__first__bit1))

;; extended_returns__record_t__d__last__bit_axiom
  (assert
  (< extended_returns__record_t__d__first__bit1 extended_returns__record_t__d__last__bit1))

;; extended_returns__record_t__d__position_axiom
  (assert (<= 0 extended_returns__record_t__d__position1))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes ((tresultS__ref 0))
(((mk_tresultS__ref (tresultS__content us_rep)))))
(define-fun tresultS__ref___projection ((a tresultS__ref)) us_rep (tresultS__content
                                                                  a))

(define-fun dynamic_invariant2 ((temp___expr_149 us_rep)
  (temp___is_init_146 Bool) (temp___skip_constant_147 Bool)
  (temp___do_toplevel_148 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_147 true))
                                      (in_range2 discr temp___expr_149))
                                      (= (attr__constrained temp___expr_149) true)))

(define-fun default_initial_assumption ((temp___expr_151 us_rep)
  (temp___skip_top_level_152 Bool)) Bool (and
                                         (= (attr__constrained
                                            temp___expr_151) true)
                                         (= (to_rep1
                                            (rec__extended_returns__record_t__discr
                                            (us_split_discrs1
                                            temp___expr_151))) discr)))

(declare-const result____split_discrs us_split_discrs)

(declare-const result____attr__constrained Bool)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun default_initial_assumption1 ((temp___expr_137 us_rep)
  (temp___skip_top_level_138 Bool)) Bool (and
                                         (= (attr__constrained
                                            temp___expr_137) false)
                                         (= (to_rep1
                                            (rec__extended_returns__record_t__discr
                                            (us_split_discrs1
                                            temp___expr_137))) 0)))

(declare-const result____split_fields integer)

(declare-const result____split_fields1 integer)

(declare-const result____split_fields2 integer)

(declare-const result____split_fields3 integer)

(declare-const extended_returns__init__result natural)

(declare-const extended_returns__init__result1 integer)

(declare-const extended_returns__init__result2 integer)

(declare-const extended_returns__init__result3 integer)

(declare-const extended_returns__init__result4 integer)

(declare-const extended_returns__init__result5 Bool)

(declare-const us Int)

(declare-const o integer)

(declare-const o1 integer)

(declare-const o2 integer)

(declare-const o3 integer)

(declare-const o4 integer)

(declare-const temp___163 natural)

(declare-const temp___1631 integer)

(declare-const temp___1632 integer)

(declare-const temp___1633 integer)

(declare-const temp___1634 integer)

(declare-const temp___1635 Bool)

(declare-const o5 integer)

(declare-const o6 integer)

(declare-const o7 integer)

(declare-const o8 integer)

(declare-const o9 integer)

(declare-const temp___169 natural)

(declare-const temp___1691 integer)

(declare-const temp___1692 integer)

(declare-const temp___1693 integer)

(declare-const temp___1694 integer)

(declare-const temp___1695 Bool)

(declare-const o10 integer)

(declare-const o11 integer)

(declare-const o12 integer)

(declare-const o13 integer)

(declare-const o14 integer)

(declare-const temp___165 natural)

(declare-const temp___1651 integer)

(declare-const temp___1652 integer)

(declare-const temp___1653 integer)

(declare-const temp___1654 integer)

(declare-const temp___1655 Bool)

(declare-const o15 integer)

(declare-const o16 integer)

(declare-const o17 integer)

(declare-const o18 integer)

(declare-const o19 integer)

(declare-const temp___167 natural)

(declare-const temp___1671 integer)

(declare-const temp___1672 integer)

(declare-const temp___1673 integer)

(declare-const temp___1674 integer)

(declare-const temp___1675 Bool)

(declare-const result us_split_fields__ref)

(declare-const result____split_fields4 us_split_fields)

(declare-const result1 us_split_fields__ref)

(declare-const result____split_fields5 us_split_fields)

(declare-const result2 us_split_fields__ref)

(declare-const result____split_fields6 us_split_fields)

(declare-const result3 us_split_fields__ref)

(declare-const result____split_fields7 us_split_fields)

(declare-const result4 record_t__ref)

(declare-const extended_returns__init__result6 us_rep)

(declare-const result____split_fields8 us_split_fields__ref)

(declare-const extended_returns__init__result7 record_t__ref)

(declare-const result____split_fields9 us_split_fields)

(declare-const extended_returns__init__result8 us_rep)

(declare-const result____split_fields10 us_split_fields__ref)

(declare-const extended_returns__init__result9 record_t__ref)

(declare-const result____split_fields11 us_split_fields)

(declare-const extended_returns__init__result10 us_rep)

(declare-const result5 natural)

(declare-const result6 integer)

(declare-const result7 integer)

(declare-const result8 integer)

(declare-const result9 integer)

(declare-const result10 Bool)

;; H
  (assert (in_range discr))

;; H
  (assert (in_range1 init_val))

;; H
  (assert
  (= extended_returns__init__result7 (mk_record_t__ref
                                     extended_returns__init__result6)))

;; H
  (assert
  (= result____split_fields8 (mk___split_fields__ref result____split_fields5)))

;; H
  (assert
  (= extended_returns__init__result8 extended_returns__init__result6))

;; H
  (assert (= result____split_fields9 result____split_fields5))

;; H
  (assert (and (= us discr) (in_range1 discr)))

;; H
  (assert
  (and (= result____attr__constrained true)
  (= (to_rep1
     (rec__extended_returns__record_t__discr result____split_discrs))
  discr)))

;; H
  (assert
  (and
  (= discr (to_rep1
           (rec__extended_returns__record_t__discr result____split_discrs)))
  (= result____attr__constrained true)))

;; H
  (assert (= (to_rep o) init_val))

;; H
  (assert (= o o1))

;; H
  (assert (= result____split_fields1 o2))

;; H
  (assert (= result____split_fields2 o3))

;; H
  (assert (= result____split_fields3 o4))

;; H
  (assert (= result____split_discrs (mk___split_discrs temp___163)))

;; H
  (assert (= temp___1631 o1))

;; H
  (assert (= temp___1632 o2))

;; H
  (assert (= temp___1633 o3))

;; H
  (assert (= temp___1634 o4))

;; H
  (assert (= result____attr__constrained temp___1635))

;; H
  (assert
  (= result (mk___split_fields__ref
            (mk___split_fields result____split_fields result____split_fields1
            result____split_fields2 result____split_fields3))))

;; H
  (assert
  (= result____split_fields4 (mk___split_fields temp___1631 temp___1632
                             temp___1633 temp___1634)))

;; H
  (assert (= result____split_discrs (mk___split_discrs temp___163)))

;; H
  (assert (=> (= discr 0) (= (to_rep o5) init_val)))

;; H
  (assert
  (=> (= discr 0)
  (= (rec__extended_returns__record_t__a result____split_fields4) o6)))

;; H
  (assert (=> (= discr 0) (= o5 o7)))

;; H
  (assert
  (=> (= discr 0)
  (= (rec__extended_returns__record_t__c result____split_fields4) o8)))

;; H
  (assert
  (=> (= discr 0)
  (= (rec__extended_returns__record_t__d result____split_fields4) o9)))

;; H
  (assert
  (=> (= discr 0) (= result____split_discrs (mk___split_discrs temp___169))))

;; H
  (assert (=> (= discr 0) (= temp___1691 o6)))

;; H
  (assert (=> (= discr 0) (= temp___1692 o7)))

;; H
  (assert (=> (= discr 0) (= temp___1693 o8)))

;; H
  (assert (=> (= discr 0) (= temp___1694 o9)))

;; H
  (assert (=> (= discr 0) (= result____attr__constrained temp___1695)))

;; H
  (assert
  (=> (= discr 0)
  (= result1 (mk___split_fields__ref result____split_fields4))))

;; H
  (assert
  (=> (= discr 0)
  (= result____split_fields5 (mk___split_fields temp___1691 temp___1692
                             temp___1693 temp___1694))))

;; H
  (assert
  (=> (= discr 0) (= result____split_discrs (mk___split_discrs temp___169))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= (to_rep o10) init_val))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= (rec__extended_returns__record_t__a result____split_fields4) o11))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= (rec__extended_returns__record_t__b result____split_fields4) o12))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= o10 o13))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= (rec__extended_returns__record_t__d result____split_fields4) o14))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1) (= result____split_discrs (mk___split_discrs temp___165)))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1651 o11))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1652 o12))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1653 o13))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1654 o14))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1) (= result____attr__constrained temp___1655))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= result2 (mk___split_fields__ref result____split_fields4)))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= result____split_fields6 (mk___split_fields temp___1651 temp___1652
                             temp___1653 temp___1654)))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1) (= result____split_discrs (mk___split_discrs temp___165)))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= (to_rep o15) init_val))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= (rec__extended_returns__record_t__a result____split_fields6) o16))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= (rec__extended_returns__record_t__b result____split_fields6) o17))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= (rec__extended_returns__record_t__c result____split_fields6) o18))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= o15 o19))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1) (= result____split_discrs (mk___split_discrs temp___167)))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1671 o16))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1672 o17))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1673 o18))))

;; H
  (assert (=> (not (= discr 0)) (=> (= discr 1) (= temp___1674 o19))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1) (= result____attr__constrained temp___1675))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= result3 (mk___split_fields__ref result____split_fields6)))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1)
  (= result____split_fields7 (mk___split_fields temp___1671 temp___1672
                             temp___1673 temp___1674)))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (= discr 1) (= result____split_discrs (mk___split_discrs temp___167)))))

;; H
  (assert
  (=> (not (= discr 0))
  (=> (not (= discr 1)) (= result____split_fields7 result____split_fields4))))

;; H
  (assert
  (=> (not (= discr 0)) (= result____split_fields5 result____split_fields7)))

;; H
  (assert
  (= result4 (mk_record_t__ref
             (mk___rep (mk___split_discrs extended_returns__init__result)
             (mk___split_fields extended_returns__init__result1
             extended_returns__init__result2 extended_returns__init__result3
             extended_returns__init__result4)
             extended_returns__init__result5))))

;; H
  (assert
  (= extended_returns__init__result6 (mk___rep result____split_discrs
                                     result____split_fields5
                                     result____attr__constrained)))

;; H
  (assert
  (= extended_returns__init__result9 extended_returns__init__result7))

;; H
  (assert (= result____split_fields10 result____split_fields8))

;; H
  (assert
  (= extended_returns__init__result10 extended_returns__init__result8))

;; H
  (assert (= result____split_fields11 result____split_fields9))

;; H
  (assert
  (= (mk___rep (mk___split_discrs result5)
     (mk___split_fields result6 result7 result8 result9) result10) (record_t__content
                                                                   extended_returns__init__result9)))

(assert
;; WP_parameter_def
 ;; File "extended_returns.ads", line 2, characters 0-0
  (not
  (= (to_rep
     (rec__extended_returns__record_t__a
     (us_split_fields1 (record_t__content extended_returns__init__result9))))
  init_val)))
(check-sat)
(exit)
