;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort natural 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-fun dummy () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range
                                     temp___expr_33)))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort length_range 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (length_range length_range) Bool)

(declare-fun dummy1 () length_range)

(declare-datatypes ()
((length_range__ref
 (mk_length_range__ref (length_range__content length_range)))))
(define-fun length_range__ref___projection ((a length_range__ref)) length_range
  (length_range__content a))

(define-fun dynamic_invariant1 ((temp___expr_148 Int)
  (temp___is_init_145 Bool) (temp___skip_constant_146 Bool)
  (temp___do_toplevel_147 Bool)) Bool (=>
                                      (or (= temp___is_init_145 true)
                                      (<= 0 100)) (in_range1
                                      temp___expr_148)))

(declare-sort index_type 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (index_type index_type) Bool)

(declare-fun dummy2 () index_type)

(declare-datatypes ()
((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type
  (index_type__content a))

(define-fun dynamic_invariant2 ((temp___expr_154 Int)
  (temp___is_init_151 Bool) (temp___skip_constant_152 Bool)
  (temp___do_toplevel_153 Bool)) Bool (=>
                                      (or (= temp___is_init_151 true)
                                      (<= 1 100)) (in_range2
                                      temp___expr_154)))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-fun dummy3 () us_rep)

(declare-datatypes ()
((sequence__ref (mk_sequence__ref (sequence__content us_rep)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep (sequence__content
                                                                  a))

(declare-fun length (us_rep) Int)

(declare-fun length__function_guard (Int us_rep) Bool)

(declare-sort count_type 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (count_type count_type) Bool)

(declare-fun dummy4 () count_type)

(declare-datatypes ()
((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type
  (count_type__content a))

(define-fun dynamic_invariant3 ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 0 2147483647)) (in_range3
                                      temp___expr_142)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range4 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Bool)

(define-fun last ((container us_rep)) Int (+ 0 (length container)))

(declare-fun last__function_guard (Int us_rep) Bool)

(declare-fun get (us_rep Int) Int)

(declare-fun get__function_guard (Int us_rep Int) Bool)

(define-fun oeq ((left us_rep)
  (right us_rep)) Bool (and (= (length left) (length right)) (ite (forall
                                                                  ((n Int))
                                                                  (=>
                                                                  (and
                                                                  (<= 1 n)
                                                                  (<= n
                                                                  (last left)))
                                                                  (=
                                                                  (get left
                                                                  n)
                                                                  (get right
                                                                  n))))
                                                             true false)))

(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep) (b us_rep))
  (! (= (user_eq3 a b) (oeq a b)) :pattern ((user_eq3 a b)) )))

(define-fun default_initial_assumption ((temp___expr_179 us_rep)
  (temp___skip_top_level_180 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_180 true))
                                         (= (length temp___expr_179) 0)))

;; length__post_axiom
  (assert
  (forall ((container us_rep))
  (! (let ((result (length container)))
     (and (<= (+ 0 result) 100) (dynamic_invariant3 result true false true))) :pattern (
  (length container)) )))

(declare-fun is_append (us_rep us_rep Int) Bool)

(declare-fun is_append__function_guard (Bool us_rep us_rep Int) Bool)

(define-fun olt ((left us_rep)
  (right us_rep)) Bool (and (< (length left) (length right)) (ite (forall
                                                                  ((n Int))
                                                                  (=>
                                                                  (and
                                                                  (<= 1 n)
                                                                  (<= n
                                                                  (last left)))
                                                                  (=
                                                                  (get left
                                                                  n)
                                                                  (get right
                                                                  n))))
                                                             true false)))

(declare-fun olt__function_guard (Bool us_rep us_rep) Bool)

;; is_append__post_axiom
  (assert true)

;; is_append__def_axiom
  (assert
  (forall ((s1 us_rep) (s2 us_rep))
  (forall ((e Int))
  (! (= (= (is_append s1 s2 e) true)
     (and (and (= (olt s1 s2) true) (= (length s1) (- (length s2) 1)))
     (= (get s2 (last s2)) e))) :pattern ((is_append s1 s2 e)) ))))

(declare-datatypes ()
((model_type__ref (mk_model_type__ref (model_type__content us_rep)))))
(define-fun model_type__ref___projection ((a model_type__ref)) us_rep
  (model_type__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int
  Int) (Array Int natural))

;; concat_def
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (natural Int) (Array Int natural))

;; singleton_def
  (assert
  (forall ((v natural))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq1 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq1 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun get_model ((Array Int natural) Int Int) us_rep)

(declare-fun get_model__function_guard (us_rep (Array Int natural) Int
  Int) Bool)

(declare-fun valid_model__2 (us_rep (Array Int natural) Int Int) Bool)

(declare-fun valid_model__2__function_guard (Bool us_rep (Array Int natural)
  Int Int) Bool)

(declare-fun valid_model__21 (us_rep (Array Int natural) Int Int) Bool)

(declare-fun valid_model__2__function_guard1 (Bool us_rep (Array Int natural)
  Int Int) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep) (b us_rep))
  (! (= (user_eq3 a b) (oeq a b)) :pattern ((user_eq3 a b)) )))

(define-fun default_initial_assumption1 ((temp___expr_186 us_rep)
  (temp___skip_top_level_187 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_187 true))
                                         (= (length temp___expr_186) 0)))

;; get_model__post_axiom
  (assert
  (forall ((ring_buffer__content (Array Int natural)))
  (forall ((ring_buffer__first Int) (ring_buffer__length Int))
  (! (=>
     (and (dynamic_invariant2 ring_buffer__first true true true)
     (dynamic_invariant1 ring_buffer__length true true true))
     (= (valid_model__21
        (get_model ring_buffer__content ring_buffer__first
        ring_buffer__length) ring_buffer__content ring_buffer__first
        ring_buffer__length) true)) :pattern ((get_model ring_buffer__content
                                              ring_buffer__first
                                              ring_buffer__length)) ))))

(declare-fun e () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-sort tTcontentSP1 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (tTcontentSP1 tTcontentSP1) Bool)

(declare-fun dummy5 () tTcontentSP1)

(declare-datatypes ()
((tTcontentSP1__ref
 (mk_tTcontentSP1__ref (tTcontentSP1__content tTcontentSP1)))))
(define-fun tTcontentSP1__ref___projection ((a tTcontentSP1__ref)) tTcontentSP1
  (tTcontentSP1__content a))

;; valid_model__2__post_axiom
  (assert true)

;; valid_model__2__post_refine_axiom
  (assert
  (forall ((m us_rep))
  (forall ((ring_buffer__content (Array Int natural)))
  (forall ((ring_buffer__first Int) (ring_buffer__length Int))
  (! (=>
     (and (dynamic_invariant2 ring_buffer__first true true true)
     (dynamic_invariant1 ring_buffer__length true true true))
     (=>
     (= (valid_model__21 m ring_buffer__content ring_buffer__first
        ring_buffer__length) true)
     (and
     (forall ((i Int))
     (=>
     (and (<= 1 i)
     (<= i (ite (< ring_buffer__length (+ (- 100 ring_buffer__first) 1)) ring_buffer__length (+ (- 100 ring_buffer__first) 1))))
     (= (get m i) (to_rep
                  (select ring_buffer__content (+ (- i 1) ring_buffer__first))))))
     (forall ((i Int))
     (=>
     (and (<= (+ (- 100 ring_buffer__first) 2) i) (<= i ring_buffer__length))
     (= (get m i) (to_rep
                  (select ring_buffer__content (- (+ (- i 100) ring_buffer__first) 1))))))))) :pattern (
  (valid_model__21 m ring_buffer__content ring_buffer__first
  ring_buffer__length)) )))))

;; valid_model__2__def_axiom
  (assert
  (forall ((m us_rep))
  (forall ((ring_buffer__content (Array Int natural)))
  (forall ((ring_buffer__first Int) (ring_buffer__length Int))
  (! (=
     (= (valid_model__21 m ring_buffer__content ring_buffer__first
        ring_buffer__length) true)
     (and (= ring_buffer__length (length m))
     (forall ((i Int))
     (=> (and (<= 1 i) (<= i 100))
     (ite (and (<= ring_buffer__first i)
          (<= i (ite (< (- (+ ring_buffer__first ring_buffer__length) 1) 100) (- (+ ring_buffer__first ring_buffer__length) 1) 100)))
     (= (to_rep (select ring_buffer__content i)) (get m
                                                 (+ (- i ring_buffer__first) 1)))
     (=>
     (and (<= 1 i)
     (<= i (- (- (+ ring_buffer__first ring_buffer__length) 1) 100)))
     (= (to_rep (select ring_buffer__content i)) (get m
                                                 (+ (- (+ i 100) ring_buffer__first) 1))))))))) :pattern (
  (valid_model__21 m ring_buffer__content ring_buffer__first
  ring_buffer__length)) )))))

(declare-sort extended_index 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (extended_index extended_index) Bool)

(declare-fun dummy6 () extended_index)

(declare-datatypes ()
((extended_index__ref
 (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index
  (extended_index__content a))

(define-fun dynamic_invariant4 ((temp___expr_172 Int)
  (temp___is_init_169 Bool) (temp___skip_constant_170 Bool)
  (temp___do_toplevel_171 Bool)) Bool (=>
                                      (or (= temp___is_init_169 true)
                                      (<= 0 100)) (in_range6
                                      temp___expr_172)))

(declare-sort element_type 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (element_type element_type) Bool)

(declare-fun dummy7 () element_type)

(declare-datatypes ()
((element_type__ref
 (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type
  (element_type__content a))

(define-fun dynamic_invariant5 ((temp___expr_166 Int)
  (temp___is_init_163 Bool) (temp___skip_constant_164 Bool)
  (temp___do_toplevel_165 Bool)) Bool (=>
                                      (or (= temp___is_init_163 true)
                                      (<= 0 2147483647)) (in_range7
                                      temp___expr_166)))

;; get__post_axiom
  (assert
  (forall ((container us_rep))
  (forall ((position Int))
  (! (=>
     (and (dynamic_invariant4 position true true true)
     (and (<= 1 position) (<= position (last container))))
     (dynamic_invariant5 (get container position) true false true)) :pattern (
  (get container position)) ))))

(declare-fun content () (Array Int natural))

(declare-fun first () Int)

(declare-fun length1 () Int)

(declare-fun o () natural)

(declare-fun o1 () Int)

(declare-fun o2 () (Array Int natural))

(declare-fun o3 () natural)

(declare-fun o4 () Int)

(declare-fun o5 () (Array Int natural))

(declare-fun o6 () Int)

(declare-fun result () (Array Int natural))

(declare-fun content1 () (Array Int natural))

(declare-fun result1 () (Array Int natural))

(declare-fun content2 () (Array Int natural))

(declare-fun result2 () Int)

(declare-fun length2 () Int)

(declare-fun content3 () (Array Int natural))

(declare-fun length3 () Int)

(declare-fun content4 () (Array Int natural))

(declare-fun length4 () Int)

(define-fun content5 () map__ref (mk_map__ref content))

;; H
  (assert (in_range2 first))

;; H
  (assert (in_range1 length1))

;; H
  (assert (in_range e))

;; H
  (assert (< (length (get_model content first length1)) 100))

;; H
  (assert (=> (<= first (- 100 length1)) (= (to_rep o) e)))

;; H
  (assert
  (=> (<= first (- 100 length1))
  (and (<= 1 (+ first length1)) (<= (+ first length1) 100))))

;; H
  (assert (=> (<= first (- 100 length1)) (= o1 (+ first length1))))

;; H
  (assert (=> (<= first (- 100 length1)) (= o2 (store content o1 o))))

;; H
  (assert (=> (<= first (- 100 length1)) (= (mk_map__ref result) content5)))

;; H
  (assert (=> (<= first (- 100 length1)) (= content1 o2)))

;; H
  (assert (=> (not (<= first (- 100 length1))) (= (to_rep o3) e)))

;; H
  (assert
  (=> (not (<= first (- 100 length1)))
  (and (<= 1 (+ (- length1 100) first)) (<= (+ (- length1 100) first) 100))))

;; H
  (assert
  (=> (not (<= first (- 100 length1))) (= o4 (+ (- length1 100) first))))

;; H
  (assert (=> (not (<= first (- 100 length1))) (= o5 (store content o4 o3))))

;; H
  (assert
  (=> (not (<= first (- 100 length1))) (= (mk_map__ref result1) content5)))

;; H
  (assert (=> (not (<= first (- 100 length1))) (= content2 o5)))

;; H
  (assert (=> (not (<= first (- 100 length1))) (= content1 content2)))

;; H
  (assert (and (= o6 (+ length1 1)) (in_range1 (+ length1 1))))

;; H
  (assert (= result2 length1))

;; H
  (assert (= length2 o6))

;; H
  (assert (= length2 length3))

;; H
  (assert (= content1 content3))

;; H
  (assert (= length4 length2))

;; H
  (assert (= content4 content1))

(assert
;; WP_parameter_def
 ;; File "ring_buffer.ads", line 24, characters 0-0
  (not
  (= (is_append (get_model content first length1)
     (get_model content3 first length3) e) true)))
(check-sat)
(exit)
