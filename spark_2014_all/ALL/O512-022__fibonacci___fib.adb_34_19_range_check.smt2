;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(declare-fun fibonacci (Int) Int)

(declare-fun fibonacci__function_guard (Int Int) Bool)

;; fibonacci__post_axiom
  (assert
  (forall ((n Int))
  (! (=> (and (dynamic_invariant n true true true) (<= n 23))
     (dynamic_invariant (fibonacci n) true false true)) :pattern ((fibonacci
                                                                  n)) )))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const n1 Int)

(declare-const n2 Int)

(declare-const l1 Int)

(declare-const l2 Int)

(declare-const a1 Int)

(declare-const a2 Int)

(declare-const b1 Int)

(declare-const b2 Int)

(declare-const i Int)

(declare-const copy_n1 Int)

(declare-const copy_n2 Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const result Int)

(declare-const copy_n11 Int)

(declare-const result1 Int)

(declare-const copy_n21 Int)

(declare-const result2 Int)

(declare-const a11 Int)

(declare-const result3 Int)

(declare-const a21 Int)

(declare-const result4 Int)

(declare-const b11 Int)

(declare-const result5 Int)

(declare-const b21 Int)

(declare-const result6 Int)

(declare-const i1 Int)

(declare-const n11 Int)

(declare-const a12 Int)

(declare-const b12 Int)

(declare-const i2 Int)

(declare-const temp___166 Int)

(declare-const result7 Int)

(declare-const temp___1661 Int)

(declare-const result8 int__ref)

(declare-const a13 Int)

;; H
  (assert (in_range2 n1))

;; H
  (assert (in_range2 n2))

;; H
  (assert (in_range2 l1))

;; H
  (assert (in_range2 l2))

;; H
  (assert (and (= n1 n2) (and (= l1 l2) (<= n1 23))))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 a1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 a2)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 b1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 b2)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 i)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 copy_n1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 copy_n2)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref copy_n1)))

;; H
  (assert (= copy_n11 n1))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref copy_n2)))

;; H
  (assert (= copy_n21 n2))

;; H
  (assert (= (mk_int__ref result2) (mk_int__ref a1)))

;; H
  (assert (= a11 1))

;; H
  (assert (= (mk_int__ref result3) (mk_int__ref a2)))

;; H
  (assert (= a21 1))

;; H
  (assert (= (mk_int__ref result4) (mk_int__ref b1)))

;; H
  (assert (= b11 1))

;; H
  (assert (= (mk_int__ref result5) (mk_int__ref b2)))

;; H
  (assert (= b21 1))

;; H
  (assert (= (mk_int__ref result6) (mk_int__ref i)))

;; H
  (assert (= i1 2))

;; H
  (assert (< 2 n1))

;; H
  (assert
  (and
  (and (and (= a12 (fibonacci i2)) (= b12 (fibonacci (- i2 1)))) (<= i2 23))
  (= (- (+ n11 i2) 2) copy_n11)))

;; H
  (assert
  (and
  (and
  (and (and (=> (<= 0 2147483647) (in_range2 a12)) (in_range2 n11))
  (=> (<= 0 2147483647) (in_range2 b12)))
  (=> (<= 0 2147483647) (in_range2 i2))) (< 2 n11)))

;; H
  (assert (= temp___166 result7))

;; H
  (assert (= temp___1661 n11))

;; H
  (assert (and (= o (+ a12 b12)) (in_range1 (+ a12 b12))))

;; H
  (assert (= result8 (mk_int__ref a12)))

;; H
  (assert (= a13 o))

;; H
  (assert (and (= o1 (- a13 b12)) (in_range1 (- a13 b12))))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range2 o1)))
(check-sat)
(exit)
