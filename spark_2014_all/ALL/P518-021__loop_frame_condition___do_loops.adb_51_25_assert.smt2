;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__do_loops__r__f1 integer)(rec__do_loops__r__f2 integer)))))
(define-fun us_split_fields_F1__projection ((a us_split_fields)) integer
  (rec__do_loops__r__f1 a))

(define-fun us_split_fields_F2__projection ((a us_split_fields)) integer
  (rec__do_loops__r__f2 a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep
                           (rec__do_loops__r__f1 (us_split_fields1 a)))
                        (to_rep (rec__do_loops__r__f1 (us_split_fields1 b))))
                        (= (to_rep
                           (rec__do_loops__r__f2 (us_split_fields1 a)))
                        (to_rep (rec__do_loops__r__f2 (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const do_loops__r__f1__first__bit Int)

(declare-const do_loops__r__f1__last__bit Int)

(declare-const do_loops__r__f1__position Int)

;; do_loops__r__f1__first__bit_axiom
  (assert (<= 0 do_loops__r__f1__first__bit))

;; do_loops__r__f1__last__bit_axiom
  (assert (< do_loops__r__f1__first__bit do_loops__r__f1__last__bit))

;; do_loops__r__f1__position_axiom
  (assert (<= 0 do_loops__r__f1__position))

(declare-const do_loops__r__f2__first__bit Int)

(declare-const do_loops__r__f2__last__bit Int)

(declare-const do_loops__r__f2__position Int)

;; do_loops__r__f2__first__bit_axiom
  (assert (<= 0 do_loops__r__f2__first__bit))

;; do_loops__r__f2__last__bit_axiom
  (assert (< do_loops__r__f2__first__bit do_loops__r__f2__last__bit))

;; do_loops__r__f2__position_axiom
  (assert (<= 0 do_loops__r__f2__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes () ((r__ref (mk_r__ref (r__content us_rep)))))
(define-fun r__ref___projection ((a r__ref)) us_rep (r__content a))

(define-fun default_initial_assumption ((temp___expr_173 us_rep)
  (temp___skip_top_level_174 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__do_loops__r__f1
                                            (us_split_fields1
                                            temp___expr_173))) 0)
                                         (= (to_rep
                                            (rec__do_loops__r__f2
                                            (us_split_fields1
                                            temp___expr_173))) 0)))

(declare-sort tr_arrayD1 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (tr_arrayD1 tr_arrayD1) Bool)

(declare-const dummy2 tr_arrayD1)

(declare-datatypes ()
((tr_arrayD1__ref (mk_tr_arrayD1__ref (tr_arrayD1__content tr_arrayD1)))))
(define-fun tr_arrayD1__ref___projection ((a tr_arrayD1__ref)) tr_arrayD1
  (tr_arrayD1__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int
  Int) (Array Int us_rep))

;; concat_def
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (us_rep Int) (Array Int us_rep))

;; singleton_def
  (assert
  (forall ((v us_rep))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (bool_eq (select a temp___idx_132)
                              (select b (+ (- b__first a__first) temp___idx_132))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (bool_eq (select a temp___idx_132)
     (select b (+ (- b__first a__first) temp___idx_132))) true))))))))

(declare-sort positive 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (positive positive) Bool)

(declare-const dummy3 positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int us_rep))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int us_rep) (elts a))

(define-fun of_array ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int us_rep)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int us_rep)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq2 ((x us_t)
  (y us_t)) Bool (bool_eq1 (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-const dummy4 us_t)

(declare-datatypes ()
((u_array__ref (mk_u_array__ref (u_array__content us_t)))))
(define-fun u_array__ref___projection ((a u_array__ref)) us_t (u_array__content
                                                              a))

(declare-const dummy5 (Array Int us_rep))

(declare-const value__size2 Int)

(declare-fun object__size2 ((Array Int us_rep)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int us_rep)) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment2 a))))

(declare-fun user_eq5 ((Array Int us_rep) (Array Int us_rep)) Bool)

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__do_loops__r_array_record__f3 (Array Int us_rep))(rec__do_loops__r_array_record__f4 (Array Int us_rep))))))
(define-fun us_split_fields_F3__projection ((a us_split_fields2)) (Array Int us_rep)
  (rec__do_loops__r_array_record__f3 a))

(define-fun us_split_fields_F4__projection ((a us_split_fields2)) (Array Int us_rep)
  (rec__do_loops__r_array_record__f4 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (bool_eq1
                            (rec__do_loops__r_array_record__f3
                            (us_split_fields3 a)) 1 100
                            (rec__do_loops__r_array_record__f3
                            (us_split_fields3 b)) 1 100) true)
                         (= (bool_eq1
                            (rec__do_loops__r_array_record__f4
                            (us_split_fields3 a)) 1 100
                            (rec__do_loops__r_array_record__f4
                            (us_split_fields3 b)) 1 100) true))
                    true false))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-const do_loops__r_array_record__f3__first__bit Int)

(declare-const do_loops__r_array_record__f3__last__bit Int)

(declare-const do_loops__r_array_record__f3__position Int)

;; do_loops__r_array_record__f3__first__bit_axiom
  (assert (<= 0 do_loops__r_array_record__f3__first__bit))

;; do_loops__r_array_record__f3__last__bit_axiom
  (assert
  (< do_loops__r_array_record__f3__first__bit do_loops__r_array_record__f3__last__bit))

;; do_loops__r_array_record__f3__position_axiom
  (assert (<= 0 do_loops__r_array_record__f3__position))

(declare-const do_loops__r_array_record__f4__first__bit Int)

(declare-const do_loops__r_array_record__f4__last__bit Int)

(declare-const do_loops__r_array_record__f4__position Int)

;; do_loops__r_array_record__f4__first__bit_axiom
  (assert (<= 0 do_loops__r_array_record__f4__first__bit))

;; do_loops__r_array_record__f4__last__bit_axiom
  (assert
  (< do_loops__r_array_record__f4__first__bit do_loops__r_array_record__f4__last__bit))

;; do_loops__r_array_record__f4__position_axiom
  (assert (<= 0 do_loops__r_array_record__f4__position))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ()
((r_array_record__ref
 (mk_r_array_record__ref (r_array_record__content us_rep1)))))
(define-fun r_array_record__ref___projection ((a r_array_record__ref)) us_rep1
  (r_array_record__content a))

(define-fun default_initial_assumption1 ((temp___expr_195 us_rep1)
  (temp___skip_top_level_196 Bool)) Bool (and
                                         (forall ((temp___198 Int))
                                         (=>
                                         (and (<= 1 temp___198)
                                         (<= temp___198 100))
                                         (and
                                         (= (to_rep
                                            (rec__do_loops__r__f1
                                            (us_split_fields1
                                            (select (rec__do_loops__r_array_record__f3
                                                    (us_split_fields3
                                                    temp___expr_195)) temp___198)))) 0)
                                         (= (to_rep
                                            (rec__do_loops__r__f2
                                            (us_split_fields1
                                            (select (rec__do_loops__r_array_record__f3
                                                    (us_split_fields3
                                                    temp___expr_195)) temp___198)))) 0))))
                                         (forall ((temp___201 Int))
                                         (=>
                                         (and (<= 1 temp___201)
                                         (<= temp___201 100))
                                         (and
                                         (= (to_rep
                                            (rec__do_loops__r__f1
                                            (us_split_fields1
                                            (select (rec__do_loops__r_array_record__f4
                                                    (us_split_fields3
                                                    temp___expr_195)) temp___201)))) 0)
                                         (= (to_rep
                                            (rec__do_loops__r__f2
                                            (us_split_fields1
                                            (select (rec__do_loops__r_array_record__f4
                                                    (us_split_fields3
                                                    temp___expr_195)) temp___201)))) 0))))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort tTaSP1 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq7 (tTaSP1 tTaSP1) Bool)

(declare-const dummy7 tTaSP1)

(declare-datatypes ()
((tTaSP1__ref (mk_tTaSP1__ref (tTaSP1__content tTaSP1)))))
(define-fun tTaSP1__ref___projection ((a tTaSP1__ref)) tTaSP1 (tTaSP1__content
                                                              a))

(define-fun default_initial_assumption2 ((temp___expr_220 (Array Int us_rep))
  (temp___skip_top_level_221 Bool)) Bool (forall ((temp___222 Int))
                                         (=>
                                         (and (<= 1 temp___222)
                                         (<= temp___222 100))
                                         (and
                                         (= (to_rep
                                            (rec__do_loops__r__f1
                                            (us_split_fields1
                                            (select temp___expr_220 temp___222)))) 0)
                                         (= (to_rep
                                            (rec__do_loops__r__f2
                                            (us_split_fields1
                                            (select temp___expr_220 temp___222)))) 0)))))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range3
                                     temp___expr_39)))

(define-fun default_initial_assumption3 ((temp___expr_180 (Array Int us_rep))
  (temp___skip_top_level_181 Bool)) Bool (forall ((temp___182 Int))
                                         (=>
                                         (and (<= 1 temp___182)
                                         (<= temp___182 100))
                                         (and
                                         (= (to_rep
                                            (rec__do_loops__r__f1
                                            (us_split_fields1
                                            (select temp___expr_180 temp___182)))) 0)
                                         (= (to_rep
                                            (rec__do_loops__r__f2
                                            (us_split_fields1
                                            (select temp___expr_180 temp___182)))) 0)))))

(define-fun dynamic_invariant2 ((temp___expr_187 us_t)
  (temp___is_init_184 Bool) (temp___skip_constant_185 Bool)
  (temp___do_toplevel_186 Bool)) Bool (=>
                                      (not (= temp___skip_constant_185 true))
                                      (dynamic_property 1 2147483647
                                      (first1 temp___expr_187)
                                      (last1 temp___expr_187))))

(declare-const d__split_fields (Array Int us_rep))

(declare-const d__split_fields1 (Array Int us_rep))

(declare-const a (Array Int us_rep))

(declare-const i Int)

(declare-const i1 Int)

(declare-const i2 Int)

(declare-const d_outer__split_fields (Array Int us_rep))

(declare-const d_outer__split_fields1 (Array Int us_rep))

(declare-const o integer)

(declare-const o1 integer)

(declare-const temp___236 (Array Int us_rep))

(declare-const temp___241 us_rep1)

(declare-const temp___238 (Array Int us_rep))

(declare-const o2 integer)

(declare-const o3 us_split_fields)

(declare-const o4 us_rep)

(declare-const o5 (Array Int us_rep))

(declare-const o6 us_split_fields2)

(declare-const temp___234 us_rep1)

(declare-const temp___261 us_rep1)

(declare-const temp___258 (Array Int us_rep))

(declare-const temp___256 (Array Int us_rep))

(declare-const o7 integer)

(declare-const o8 us_split_fields)

(declare-const o9 us_rep)

(declare-const o10 (Array Int us_rep))

(declare-const o11 us_split_fields2)

(declare-const temp___249 us_rep1)

(declare-const o12 integer)

(declare-const o13 us_split_fields)

(declare-const o14 us_rep)

(declare-const o15 (Array Int us_rep))

(declare-const o16 us_split_fields2)

(declare-const temp___254 us_rep1)

(declare-const o17 integer)

(declare-const o18 us_split_fields)

(declare-const o19 us_rep)

(declare-const o20 (Array Int us_rep))

(declare-const o21 us_split_fields2)

(declare-const temp___274 us_rep1)

(declare-const o22 integer)

(declare-const o23 us_split_fields)

(declare-const o24 us_rep)

(declare-const o25 (Array Int us_rep))

(declare-const o26 us_split_fields2)

(declare-const temp___279 us_rep1)

(declare-const d__split_fields2 us_split_fields2)

(declare-const do_loops__p__a (Array Int us_rep))

(declare-const result map__ref)

(declare-const a1 (Array Int us_rep))

(declare-const result1 int__ref)

(declare-const i3 Int)

(declare-const d__split_fields3 us_split_fields2)

(declare-const i4 Int)

(declare-const result2 us_split_fields__ref1)

(declare-const d__split_fields4 us_split_fields2)

(declare-const d__split_fields5 us_split_fields__ref1)

(declare-const i5 int__ref)

(declare-const d__split_fields6 us_split_fields2)

(declare-const i6 Int)

(declare-const d__split_fields7 us_split_fields__ref1)

(declare-const i7 int__ref)

(declare-const d__split_fields8 us_split_fields2)

(declare-const i8 Int)

(declare-const result3 int__ref)

(declare-const i9 Int)

(declare-const d__split_fields9 us_split_fields2)

(declare-const i10 Int)

(declare-const result4 us_split_fields__ref1)

(declare-const d__split_fields10 us_split_fields2)

(declare-const result5 us_split_fields__ref1)

(declare-const d__split_fields11 us_split_fields2)

(declare-const d__split_fields12 us_split_fields__ref1)

(declare-const i11 int__ref)

(declare-const d__split_fields13 us_split_fields2)

(declare-const i12 Int)

(declare-const d__split_fields14 us_split_fields__ref1)

(declare-const i13 int__ref)

(declare-const d__split_fields15 us_split_fields2)

(declare-const i14 Int)

(declare-const result6 int__ref)

(declare-const i15 Int)

(declare-const d__split_fields16 us_split_fields2)

(declare-const i16 Int)

(declare-const result7 us_split_fields__ref1)

(declare-const d__split_fields17 us_split_fields2)

(declare-const result8 us_split_fields__ref1)

(declare-const d__split_fields18 us_split_fields2)

(declare-const result9 us_split_fields__ref1)

(declare-const d__split_fields19 us_split_fields2)

;; H
  (assert (default_initial_assumption1
  (mk___rep1 (mk___split_fields1 d__split_fields d__split_fields1)) false))

;; H
  (assert (default_initial_assumption2 a false))

;; H
  (assert (= (to_rep o1) 100))

;; H
  (assert (= (to_rep o) 1))

;; H
  (assert (= result (mk_map__ref a)))

;; H
  (assert (= a1 (slide do_loops__p__a (to_rep (first (mk 1 100))) 1)))

;; H
  (assert (= result1 (mk_int__ref i)))

;; H
  (assert (= i3 1))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= temp___236 d__split_fields)))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= temp___241 (mk___rep1
                (mk___split_fields1 d__split_fields d__split_fields1)))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= temp___238 d__split_fields1)))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (and
  (and
  (forall ((temp___242 Int))
  (=> (and (<= 1 temp___242) (<= temp___242 100))
  (ite (<= i4 temp___242)
  (= (select (rec__do_loops__r_array_record__f3 d__split_fields3) temp___242) (select
  (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___241)) temp___242))
  (= (rec__do_loops__r__f2
     (us_split_fields1
     (select (rec__do_loops__r_array_record__f3 d__split_fields3) temp___242)))
  (rec__do_loops__r__f2
  (us_split_fields1
  (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___241)) temp___242)))))))
  (= (rec__do_loops__r_array_record__f4 d__split_fields3) (rec__do_loops__r_array_record__f4
                                                          (us_split_fields3
                                                          temp___241))))
  (and (<= 1 i4) (<= i4 100)))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= (to_rep o2) 0)))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= o3 (mk___split_fields o2
        (rec__do_loops__r__f2
        (us_split_fields1
        (select (rec__do_loops__r_array_record__f3 d__split_fields3)
        i4)))))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= o4 (mk___rep o3))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= o5 (store (rec__do_loops__r_array_record__f3 d__split_fields3) i4
  o4))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= o6 (mk___split_fields1 o5
        (rec__do_loops__r_array_record__f4 d__split_fields3)))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= temp___234 (mk___rep1 o6))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= result2 (mk___split_fields__ref1 d__split_fields3))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= d__split_fields4 (us_split_fields3 temp___234))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= (to_rep
     (rec__do_loops__r__f2
     (us_split_fields1
     (select (rec__do_loops__r_array_record__f3 d__split_fields4) i4))))
  (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select temp___236 i4)))))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= (bool_eq1 (rec__do_loops__r_array_record__f4 d__split_fields4) 1 100
     temp___238 1 100) true)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= i4 100)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= i5 (mk_int__ref i4))))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100))
  (= d__split_fields5 (mk___split_fields__ref1 d__split_fields4))))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= i6 i4)))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100)) (= d__split_fields6 d__split_fields4)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= i7 i5)))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100)) (= d__split_fields7 d__split_fields5)))

;; H
  (assert (=> (and (<= 1 i3) (<= i3 100)) (= i8 i6)))

;; H
  (assert
  (=> (and (<= 1 i3) (<= i3 100)) (= d__split_fields8 d__split_fields6)))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 100))) (= i7 (mk_int__ref i3))))

;; H
  (assert
  (=> (not (and (<= 1 i3) (<= i3 100)))
  (= d__split_fields7 (mk___split_fields__ref1
                      (mk___split_fields1 d__split_fields d__split_fields1)))))

;; H
  (assert (=> (not (and (<= 1 i3) (<= i3 100))) (= i8 i3)))

;; H
  (assert
  (=> (not (and (<= 1 i3) (<= i3 100)))
  (= d__split_fields8 d__split_fields2)))

;; H
  (assert (= result3 (mk_int__ref i1)))

;; H
  (assert (= i9 1))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= temp___261 (mk___rep1 (us_split_fields__content1 d__split_fields7)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= temp___258 (rec__do_loops__r_array_record__f4
                (us_split_fields__content1 d__split_fields7)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= temp___256 (rec__do_loops__r_array_record__f3
                (us_split_fields__content1 d__split_fields7)))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (and
  (and
  (forall ((temp___262 Int))
  (=> (and (<= 1 temp___262) (<= temp___262 100))
  (ite (<= i10 temp___262)
  (= (select (rec__do_loops__r_array_record__f3 d__split_fields9) temp___262) (select
  (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___261)) temp___262))
  (= (rec__do_loops__r__f2
     (us_split_fields1
     (select (rec__do_loops__r_array_record__f3 d__split_fields9) temp___262)))
  (rec__do_loops__r__f2
  (us_split_fields1
  (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___261)) temp___262)))))))
  (forall ((temp___263 Int))
  (=> (and (<= 1 temp___263) (<= temp___263 100))
  (ite (<= i10 temp___263)
  (= (select (rec__do_loops__r_array_record__f4 d__split_fields9) temp___263) (select
  (rec__do_loops__r_array_record__f4 (us_split_fields3 temp___261)) temp___263))
  (= (rec__do_loops__r__f2
     (us_split_fields1
     (select (rec__do_loops__r_array_record__f4 d__split_fields9) temp___263)))
  (rec__do_loops__r__f2
  (us_split_fields1
  (select (rec__do_loops__r_array_record__f4 (us_split_fields3 temp___261)) temp___263))))))))
  (and (<= 1 i10) (<= i10 100)))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= (to_rep o7) 0)))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= o8 (mk___split_fields o7
        (rec__do_loops__r__f2
        (us_split_fields1
        (select (rec__do_loops__r_array_record__f3 d__split_fields9)
        i10)))))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= o9 (mk___rep o8))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= o10 (store (rec__do_loops__r_array_record__f3 d__split_fields9)
  i10 o9))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= o11 (mk___split_fields1 o10
         (rec__do_loops__r_array_record__f4 d__split_fields9)))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= temp___249 (mk___rep1 o11))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= result4 (mk___split_fields__ref1 d__split_fields9))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= d__split_fields10 (us_split_fields3 temp___249))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= (to_rep o12) 0)))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= o13 (mk___split_fields o12
         (rec__do_loops__r__f2
         (us_split_fields1
         (select (rec__do_loops__r_array_record__f4 d__split_fields10)
         i10)))))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= o14 (mk___rep o13))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= o15 (store (rec__do_loops__r_array_record__f4 d__split_fields10)
  i10 o14))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= o16 (mk___split_fields1
         (rec__do_loops__r_array_record__f3 d__split_fields10) o15))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= temp___254 (mk___rep1 o16))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= result5 (mk___split_fields__ref1 d__split_fields10))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= d__split_fields11 (us_split_fields3 temp___254))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= (to_rep
     (rec__do_loops__r__f2
     (us_split_fields1
     (select (rec__do_loops__r_array_record__f3 d__split_fields11) i10))))
  (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select temp___256 i10)))))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= (bool_eq1 (rec__do_loops__r_array_record__f4 d__split_fields11) 1 100
     temp___258 1 100) true)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= i10 100)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= i11 (mk_int__ref i10))))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100))
  (= d__split_fields12 (mk___split_fields__ref1 d__split_fields11))))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= i12 i10)))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100)) (= d__split_fields13 d__split_fields11)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= i13 i11)))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100)) (= d__split_fields14 d__split_fields12)))

;; H
  (assert (=> (and (<= 1 i9) (<= i9 100)) (= i14 i12)))

;; H
  (assert
  (=> (and (<= 1 i9) (<= i9 100)) (= d__split_fields15 d__split_fields13)))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 100))) (= i13 (mk_int__ref i9))))

;; H
  (assert
  (=> (not (and (<= 1 i9) (<= i9 100)))
  (= d__split_fields14 d__split_fields7)))

;; H
  (assert (=> (not (and (<= 1 i9) (<= i9 100))) (= i14 i9)))

;; H
  (assert
  (=> (not (and (<= 1 i9) (<= i9 100)))
  (= d__split_fields15 d__split_fields8)))

;; H
  (assert (= result6 (mk_int__ref i2)))

;; H
  (assert (= i15 1))

;; H
  (assert (<= 1 i15))

;; H
  (assert (<= i15 100))

;; H
  (assert (and (<= 1 i16) (<= i16 100)))

;; H
  (assert (default_initial_assumption1
  (mk___rep1
  (mk___split_fields1 d_outer__split_fields d_outer__split_fields1)) false))

;; H
  (assert (= (to_rep o17) 0))

;; H
  (assert
  (= o18 (mk___split_fields o17
         (rec__do_loops__r__f2
         (us_split_fields1
         (select (rec__do_loops__r_array_record__f3 d__split_fields16)
         i16))))))

;; H
  (assert (= o19 (mk___rep o18)))

;; H
  (assert
  (= o20 (store (rec__do_loops__r_array_record__f3 d__split_fields16)
  i16 o19)))

;; H
  (assert
  (= o21 (mk___split_fields1 o20
         (rec__do_loops__r_array_record__f4 d__split_fields16))))

;; H
  (assert (= temp___274 (mk___rep1 o21)))

;; H
  (assert (= result7 (mk___split_fields__ref1 d__split_fields16)))

;; H
  (assert (= d__split_fields17 (us_split_fields3 temp___274)))

;; H
  (assert (= (to_rep o22) 0))

;; H
  (assert
  (= o23 (mk___split_fields o22
         (rec__do_loops__r__f2
         (us_split_fields1
         (select (rec__do_loops__r_array_record__f4 d__split_fields17)
         i16))))))

;; H
  (assert (= o24 (mk___rep o23)))

;; H
  (assert
  (= o25 (store (rec__do_loops__r_array_record__f4 d__split_fields17)
  i16 o24)))

;; H
  (assert
  (= o26 (mk___split_fields1
         (rec__do_loops__r_array_record__f3 d__split_fields17) o25)))

;; H
  (assert (= temp___279 (mk___rep1 o26)))

;; H
  (assert (= result8 (mk___split_fields__ref1 d__split_fields17)))

;; H
  (assert (= d__split_fields18 (us_split_fields3 temp___279)))

;; H
  (assert (= result9 (mk___split_fields__ref1 d__split_fields18)))

;; H
  (assert
  (= d__split_fields19 (mk___split_fields1 d_outer__split_fields
                       d_outer__split_fields1)))

;; H
  (assert
  (= (to_rep
     (rec__do_loops__r__f1
     (us_split_fields1
     (select (rec__do_loops__r_array_record__f3 d__split_fields19) i16))))
  (to_rep
  (rec__do_loops__r__f1
  (us_split_fields1
  (select (rec__do_loops__r_array_record__f3
          (us_split_fields__content1 d__split_fields14)) i16))))))

(assert
;; WP_parameter_def
 ;; File "do_loops.adb", line 16, characters 0-0
  (not
  (= (to_rep
     (rec__do_loops__r__f2
     (us_split_fields1
     (select (rec__do_loops__r_array_record__f3 d__split_fields19) i16))))
  (to_rep
  (rec__do_loops__r__f2
  (us_split_fields1
  (select (rec__do_loops__r_array_record__f3
          (us_split_fields__content1 d__split_fields14)) i16)))))))
(check-sat)
(exit)
