;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort positive 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (positive positive) Bool)

(declare-const dummy2 positive)

(declare-datatypes ((positive__ref 0))
(((mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-const c Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-const last Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (integer integer) Bool)

(declare-const dummy3 integer)

(declare-datatypes ((my_nat__ref 0))
(((mk_my_nat__ref (my_nat__content integer)))))
(define-fun my_nat__ref___projection ((a my_nat__ref)) integer (my_nat__content
                                                               a))

(declare-datatypes ((us_split_discrs 0))
(((mk___split_discrs (rec__dynamic_array__rec__b Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__dynamic_array__rec__b
                                                                    a))

(declare-datatypes ((us_split_discrs__ref 0))
(((mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields
  (rec__dynamic_array__rec__f1 integer)(rec__dynamic_array__rec__f2 integer)))))
(define-fun us_split_fields_F1__projection ((a us_split_fields)) integer
  (rec__dynamic_array__rec__f1 a))

(define-fun us_split_fields_F2__projection ((a us_split_fields)) integer
  (rec__dynamic_array__rec__f2 a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun us_rep___3__projection ((a us_rep)) Bool (attr__constrained a))

(define-fun dynamic_array__rec__f1__pred ((a us_rep)) Bool (= (to_int1
                                                              (rec__dynamic_array__rec__b
                                                              (us_split_discrs1
                                                              a))) 1))

(define-fun dynamic_array__rec__f2__pred ((a us_rep)) Bool (= (to_int1
                                                              (rec__dynamic_array__rec__b
                                                              (us_split_discrs1
                                                              a))) 0))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (rec__dynamic_array__rec__b (us_split_discrs1 a))
                        (rec__dynamic_array__rec__b (us_split_discrs1 b)))
                        (=> (dynamic_array__rec__f1__pred a)
                        (= (to_rep1
                           (rec__dynamic_array__rec__f1 (us_split_fields1 a)))
                        (to_rep1
                        (rec__dynamic_array__rec__f1 (us_split_fields1 b))))))
                        (=> (dynamic_array__rec__f2__pred a)
                        (= (to_rep1
                           (rec__dynamic_array__rec__f2 (us_split_fields1 a)))
                        (to_rep1
                        (rec__dynamic_array__rec__f2 (us_split_fields1 b))))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const dynamic_array__rec__b__first__bit Int)

(declare-const dynamic_array__rec__b__last__bit Int)

(declare-const dynamic_array__rec__b__position Int)

;; dynamic_array__rec__b__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__b__first__bit))

;; dynamic_array__rec__b__last__bit_axiom
  (assert
  (< dynamic_array__rec__b__first__bit dynamic_array__rec__b__last__bit))

;; dynamic_array__rec__b__position_axiom
  (assert (<= 0 dynamic_array__rec__b__position))

(declare-const dynamic_array__rec__f1__first__bit Int)

(declare-const dynamic_array__rec__f1__last__bit Int)

(declare-const dynamic_array__rec__f1__position Int)

;; dynamic_array__rec__f1__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f1__first__bit))

;; dynamic_array__rec__f1__last__bit_axiom
  (assert
  (< dynamic_array__rec__f1__first__bit dynamic_array__rec__f1__last__bit))

;; dynamic_array__rec__f1__position_axiom
  (assert (<= 0 dynamic_array__rec__f1__position))

(declare-const dynamic_array__rec__f2__first__bit Int)

(declare-const dynamic_array__rec__f2__last__bit Int)

(declare-const dynamic_array__rec__f2__position Int)

;; dynamic_array__rec__f2__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f2__first__bit))

;; dynamic_array__rec__f2__last__bit_axiom
  (assert
  (< dynamic_array__rec__f2__first__bit dynamic_array__rec__f2__last__bit))

;; dynamic_array__rec__f2__position_axiom
  (assert (<= 0 dynamic_array__rec__f2__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ((rec____ref 0))
(((mk_rec____ref (rec____content us_rep)))))
(define-fun rec____ref___projection ((a rec____ref)) us_rep (rec____content
                                                            a))

(define-fun dynamic_invariant1 ((temp___expr_150 us_rep)
  (temp___is_init_147 Bool) (temp___skip_constant_148 Bool)
  (temp___do_toplevel_149 Bool)) Bool (and
                                      (=> (dynamic_array__rec__f1__pred
                                      temp___expr_150)
                                      (=>
                                      (or (= temp___is_init_147 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep1
                                      (rec__dynamic_array__rec__f1
                                      (us_split_fields1 temp___expr_150))))))
                                      (=> (dynamic_array__rec__f2__pred
                                      temp___expr_150)
                                      (=>
                                      (or (= temp___is_init_147 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep1
                                      (rec__dynamic_array__rec__f2
                                      (us_split_fields1 temp___expr_150))))))))

(define-fun default_initial_assumption ((temp___expr_152 us_rep)
  (temp___skip_top_level_153 Bool)) Bool (and
                                         (= (attr__constrained
                                            temp___expr_152) false)
                                         (= (rec__dynamic_array__rec__b
                                            (us_split_discrs1
                                            temp___expr_152)) (of_int 1))))

(declare-datatypes ((map__ref 0))
(((mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int
  Int) (Array Int us_rep))

;; concat_def
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (us_rep Int) (Array Int us_rep))

;; singleton_def
  (assert
  (forall ((v us_rep))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int)
  (b (Array Int us_rep)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (bool_eq (select a temp___idx_132)
                              (select b (+ (- b__first a__first) temp___idx_132))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep)) (b (Array Int us_rep)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (bool_eq (select a temp___idx_132)
     (select b (+ (- b__first a__first) temp___idx_132))) true))))))))

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-const dummy5 integer)

(declare-datatypes ((t3b__ref 0)) (((mk_t3b__ref (t3b__content integer)))))
(define-fun t3b__ref___projection ((a t3b__ref)) integer (t3b__content a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last1 (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last1 (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ((us_t 0)) (((mk___t (elts (Array Int us_rep))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int us_rep) (elts a))

(define-fun of_array ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last2 ((a us_t)) Int (to_rep1 (last1 (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last2 a))
                                  (+ (- (last2 a) (first1 a)) 1) 0))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int us_rep)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int us_rep)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq2 ((x us_t)
  (y us_t)) Bool (bool_eq1 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last1 (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last1 (rt y)))))

(declare-fun user_eq6 (us_t us_t) Bool)

(declare-const dummy6 us_t)

(declare-datatypes ((t4b__ref 0)) (((mk_t4b__ref (t4b__content us_t)))))
(define-fun t4b__ref___projection ((a t4b__ref)) us_t (t4b__content a))

(declare-datatypes ((us_split_discrs2 0))
(((mk___split_discrs1 (rec__dynamic_array__holder__d natural)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs2)) natural
  (rec__dynamic_array__holder__d a))

(declare-datatypes ((us_split_discrs__ref1 0))
(((mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs2
  (us_split_discrs__content1 a))

(declare-datatypes ((us_split_fields2 0))
(((mk___split_fields1 (rec__dynamic_array__holder__content us_t)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields2)) us_t
  (rec__dynamic_array__holder__content a))

(declare-datatypes ((us_split_fields__ref1 0))
(((mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((mk___rep1
  (us_split_discrs3 us_split_discrs2)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3
                                                                  a))

(define-fun us_rep___5__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (to_rep
                            (rec__dynamic_array__holder__d
                            (us_split_discrs3 a))) (to_rep
                                                   (rec__dynamic_array__holder__d
                                                   (us_split_discrs3 b))))
                         (= (bool_eq2
                            (rec__dynamic_array__holder__content
                            (us_split_fields3 a))
                            (rec__dynamic_array__holder__content
                            (us_split_fields3 b))) true))
                    true false))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-const dynamic_array__holder__d__first__bit Int)

(declare-const dynamic_array__holder__d__last__bit Int)

(declare-const dynamic_array__holder__d__position Int)

;; dynamic_array__holder__d__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__d__first__bit))

;; dynamic_array__holder__d__last__bit_axiom
  (assert
  (< dynamic_array__holder__d__first__bit dynamic_array__holder__d__last__bit))

;; dynamic_array__holder__d__position_axiom
  (assert (<= 0 dynamic_array__holder__d__position))

(declare-const dynamic_array__holder__content__first__bit Int)

(declare-const dynamic_array__holder__content__last__bit Int)

(declare-const dynamic_array__holder__content__position Int)

;; dynamic_array__holder__content__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__content__first__bit))

;; dynamic_array__holder__content__last__bit_axiom
  (assert
  (< dynamic_array__holder__content__first__bit dynamic_array__holder__content__last__bit))

;; dynamic_array__holder__content__position_axiom
  (assert (<= 0 dynamic_array__holder__content__position))

(declare-fun user_eq7 (us_rep1 us_rep1) Bool)

(declare-const dummy7 us_rep1)

(declare-datatypes ((holder__ref 0))
(((mk_holder__ref (holder__content us_rep1)))))
(define-fun holder__ref___projection ((a holder__ref)) us_rep1 (holder__content
                                                               a))

(define-fun dynamic_invariant2 ((temp___expr_166 us_rep1)
  (temp___is_init_163 Bool) (temp___skip_constant_164 Bool)
  (temp___do_toplevel_165 Bool)) Bool (let ((temp___167 (rec__dynamic_array__holder__d
                                                        (us_split_discrs3
                                                        temp___expr_166))))
                                      (and
                                      (and (dynamic_property2 1
                                      (to_rep temp___167)
                                      (first1
                                      (rec__dynamic_array__holder__content
                                      (us_split_fields3 temp___expr_166)))
                                      (last2
                                      (rec__dynamic_array__holder__content
                                      (us_split_fields3 temp___expr_166))))
                                      (and
                                      (= (first1
                                         (rec__dynamic_array__holder__content
                                         (us_split_fields3 temp___expr_166))) 1)
                                      (= (last2
                                         (rec__dynamic_array__holder__content
                                         (us_split_fields3 temp___expr_166)))
                                      (to_rep temp___167))))
                                      (forall ((temp___168 Int))
                                      (=>
                                      (and
                                      (<= (first1
                                          (rec__dynamic_array__holder__content
                                          (us_split_fields3 temp___expr_166))) temp___168)
                                      (<= temp___168 (last2
                                                     (rec__dynamic_array__holder__content
                                                     (us_split_fields3
                                                     temp___expr_166)))))
                                      (and
                                      (and
                                      (=> (dynamic_array__rec__f1__pred
                                      (select (to_array
                                              (rec__dynamic_array__holder__content
                                              (us_split_fields3
                                              temp___expr_166))) temp___168))
                                      (=>
                                      (or (= temp___is_init_163 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep1
                                      (rec__dynamic_array__rec__f1
                                      (us_split_fields1
                                      (select (to_array
                                              (rec__dynamic_array__holder__content
                                              (us_split_fields3
                                              temp___expr_166))) temp___168)))))))
                                      (=> (dynamic_array__rec__f2__pred
                                      (select (to_array
                                              (rec__dynamic_array__holder__content
                                              (us_split_fields3
                                              temp___expr_166))) temp___168))
                                      (=>
                                      (or (= temp___is_init_163 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep1
                                      (rec__dynamic_array__rec__f2
                                      (us_split_fields1
                                      (select (to_array
                                              (rec__dynamic_array__holder__content
                                              (us_split_fields3
                                              temp___expr_166))) temp___168))))))))
                                      (= (attr__constrained
                                         (select (to_array
                                                 (rec__dynamic_array__holder__content
                                                 (us_split_fields3
                                                 temp___expr_166))) temp___168)) false)))))))

(declare-fun new_holder (Int) us_rep1)

(declare-fun new_holder__function_guard (us_rep1 Int) Bool)

;; new_holder__post_axiom
  (assert
  (forall ((d Int))
  (! (=> (dynamic_invariant d true true true)
     (let ((result (new_holder d)))
     (and
     (ite (= c 0)
     (= (to_rep (rec__dynamic_array__holder__d (us_split_discrs3 result))) 0)
     (= (to_rep (rec__dynamic_array__holder__d (us_split_discrs3 result))) d))
     (dynamic_invariant2 result true false true)))) :pattern ((new_holder d)) )))

(declare-fun increment (us_rep) Int)

(declare-fun increment__function_guard (Int us_rep) Bool)

;; increment__post_axiom
  (assert
  (forall ((r us_rep))
  (! (=> (dynamic_invariant1 r true true true) (dynamic_invariant
     (increment r) true false true)) :pattern ((increment r)) )))

;; increment__def_axiom
  (assert
  (forall ((r us_rep))
  (! (=> (dynamic_invariant1 r true true true)
     (= (increment r) (ite (= (rec__dynamic_array__rec__b
                              (us_split_discrs1 r)) true)
                      (ite (< (to_rep1
                              (rec__dynamic_array__rec__f1
                              (us_split_fields1 r))) c)
                      (+ (to_rep1
                         (rec__dynamic_array__rec__f1 (us_split_fields1 r))) 1)
                      (to_rep1
                      (rec__dynamic_array__rec__f1 (us_split_fields1 r))))
                      (ite (< (to_rep1
                              (rec__dynamic_array__rec__f2
                              (us_split_fields1 r))) c)
                      (+ (to_rep1
                         (rec__dynamic_array__rec__f2 (us_split_fields1 r))) 1)
                      (to_rep1
                      (rec__dynamic_array__rec__f2 (us_split_fields1 r))))))) :pattern (
  (increment r)) )))

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq8 (integer integer) Bool)

(declare-const dummy8 integer)

(declare-datatypes ((tT18bP1__ref 0))
(((mk_tT18bP1__ref (tT18bP1__content integer)))))
(define-fun tT18bP1__ref___projection ((a tT18bP1__ref)) integer (tT18bP1__content
                                                                 a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last3 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last3 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property3 range_first range_last low)
                   (dynamic_property3 range_first range_last high))))))

(declare-datatypes ((us_t1 0))
(((mk___t1 (elts1 (Array Int us_rep))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int us_rep) (elts1 a))

(define-fun of_array1 ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last4 ((a us_t1)) Int (to_rep1 (last3 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last4 a))
                                    (+ (- (last4 a) (first3 a)) 1) 0))

(declare-const value__size3 Int)

(declare-fun object__size3 ((Array Int us_rep)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int us_rep)) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment3 a))))

(define-fun bool_eq4 ((x us_t1)
  (y us_t1)) Bool (bool_eq1 (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last3 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last3 (rt1 y)))))

(declare-fun user_eq9 (us_t1 us_t1) Bool)

(declare-const dummy9 us_t1)

(declare-datatypes ((t18b__ref 0)) (((mk_t18b__ref (t18b__content us_t1)))))
(define-fun t18b__ref___projection ((a t18b__ref)) us_t1 (t18b__content a))

(declare-datatypes ((us_split_fields4 0))
(((mk___split_fields2 (rec__dynamic_array__holder__content1 us_t1)))))
(define-fun us_split_fields_Content__4__projection ((a us_split_fields4)) us_t1
  (rec__dynamic_array__holder__content1 a))

(declare-datatypes ((us_split_fields__ref2 0))
(((mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref2)) us_split_fields4
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep2 0))
(((mk___rep2
  (us_split_discrs4 us_split_discrs2)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep___10__projection ((a us_rep2)) us_split_discrs2 (us_split_discrs4
                                                                   a))

(define-fun us_rep___11__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                   a))

(define-fun to_base ((a us_rep2)) us_rep1 (mk___rep1 (us_split_discrs4 a)
                                          (mk___split_fields1
                                          (let ((temp___137 (rec__dynamic_array__holder__content1
                                                            (us_split_fields5
                                                            a))))
                                          (of_array (to_array1 temp___137)
                                          (first3 temp___137)
                                          (last4 temp___137))))))

(define-fun of_base ((r us_rep1)) us_rep2 (mk___rep2 (us_split_discrs3 r)
                                          (mk___split_fields2
                                          (let ((temp___136 (rec__dynamic_array__holder__content
                                                            (us_split_fields3
                                                            r))))
                                          (of_array1 (to_array temp___136)
                                          (first1 temp___136)
                                          (last2 temp___136))))))

(define-fun bool_eq5 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep
                            (rec__dynamic_array__holder__d
                            (us_split_discrs4 a))) (to_rep
                                                   (rec__dynamic_array__holder__d
                                                   (us_split_discrs4 b))))
                         (= (bool_eq4
                            (rec__dynamic_array__holder__content1
                            (us_split_fields5 a))
                            (rec__dynamic_array__holder__content1
                            (us_split_fields5 b))) true))
                    true false))

(define-fun in_range4 ((rec__dynamic_array__holder__d1 Int)
  (a us_rep1)) Bool (= rec__dynamic_array__holder__d1 (to_rep
                                                      (rec__dynamic_array__holder__d
                                                      (us_split_discrs3 a)))))

(declare-const value__size4 Int)

(declare-fun object__size4 (us_rep2) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))

(declare-const dynamic_array__holder__d__first__bit1 Int)

(declare-const dynamic_array__holder__d__last__bit1 Int)

(declare-const dynamic_array__holder__d__position1 Int)

;; dynamic_array__holder__d__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__d__first__bit1))

;; dynamic_array__holder__d__last__bit_axiom
  (assert
  (< dynamic_array__holder__d__first__bit1 dynamic_array__holder__d__last__bit1))

;; dynamic_array__holder__d__position_axiom
  (assert (<= 0 dynamic_array__holder__d__position1))

(declare-const dynamic_array__holder__content__first__bit1 Int)

(declare-const dynamic_array__holder__content__last__bit1 Int)

(declare-const dynamic_array__holder__content__position1 Int)

;; dynamic_array__holder__content__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__content__first__bit1))

;; dynamic_array__holder__content__last__bit_axiom
  (assert
  (< dynamic_array__holder__content__first__bit1 dynamic_array__holder__content__last__bit1))

;; dynamic_array__holder__content__position_axiom
  (assert (<= 0 dynamic_array__holder__content__position1))

(declare-fun user_eq10 (us_rep2 us_rep2) Bool)

(declare-const dummy10 us_rep2)

(declare-datatypes ((thS__ref 0)) (((mk_thS__ref (thS__content us_rep2)))))
(define-fun thS__ref___projection ((a thS__ref)) us_rep2 (thS__content a))

(define-fun dynamic_invariant3 ((temp___expr_181 us_rep2)
  (temp___is_init_178 Bool) (temp___skip_constant_179 Bool)
  (temp___do_toplevel_180 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_179 true))
                                      (in_range4 c
                                      (to_base temp___expr_181)))
                                      (and
                                      (and (dynamic_property4 1 c
                                      (first3
                                      (rec__dynamic_array__holder__content1
                                      (us_split_fields5 temp___expr_181)))
                                      (last4
                                      (rec__dynamic_array__holder__content1
                                      (us_split_fields5 temp___expr_181))))
                                      (and
                                      (= (first3
                                         (rec__dynamic_array__holder__content1
                                         (us_split_fields5 temp___expr_181))) 1)
                                      (= (last4
                                         (rec__dynamic_array__holder__content1
                                         (us_split_fields5 temp___expr_181)))
                                      c)))
                                      (forall ((temp___183 Int))
                                      (=>
                                      (and
                                      (<= (first3
                                          (rec__dynamic_array__holder__content1
                                          (us_split_fields5 temp___expr_181))) temp___183)
                                      (<= temp___183 (last4
                                                     (rec__dynamic_array__holder__content1
                                                     (us_split_fields5
                                                     temp___expr_181)))))
                                      (and
                                      (and
                                      (=> (dynamic_array__rec__f1__pred
                                      (select (to_array1
                                              (rec__dynamic_array__holder__content1
                                              (us_split_fields5
                                              temp___expr_181))) temp___183))
                                      (=>
                                      (or (= temp___is_init_178 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep1
                                      (rec__dynamic_array__rec__f1
                                      (us_split_fields1
                                      (select (to_array1
                                              (rec__dynamic_array__holder__content1
                                              (us_split_fields5
                                              temp___expr_181))) temp___183)))))))
                                      (=> (dynamic_array__rec__f2__pred
                                      (select (to_array1
                                              (rec__dynamic_array__holder__content1
                                              (us_split_fields5
                                              temp___expr_181))) temp___183))
                                      (=>
                                      (or (= temp___is_init_178 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep1
                                      (rec__dynamic_array__rec__f2
                                      (us_split_fields1
                                      (select (to_array1
                                              (rec__dynamic_array__holder__content1
                                              (us_split_fields5
                                              temp___expr_181))) temp___183))))))))
                                      (= (attr__constrained
                                         (select (to_array1
                                                 (rec__dynamic_array__holder__content1
                                                 (us_split_fields5
                                                 temp___expr_181))) temp___183)) false)))))))

(define-fun default_initial_assumption1 ((temp___expr_185 us_rep2)
  (temp___skip_top_level_186 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__dynamic_array__holder__d
                                            (us_split_discrs4
                                            temp___expr_185))) c)
                                         (forall ((temp___189 Int))
                                         (=>
                                         (and
                                         (<= (first3
                                             (rec__dynamic_array__holder__content1
                                             (us_split_fields5
                                             temp___expr_185))) temp___189)
                                         (<= temp___189 (last4
                                                        (rec__dynamic_array__holder__content1
                                                        (us_split_fields5
                                                        temp___expr_185)))))
                                         (and
                                         (= (attr__constrained
                                            (select (to_array1
                                                    (rec__dynamic_array__holder__content1
                                                    (us_split_fields5
                                                    temp___expr_185))) temp___189)) false)
                                         (= (rec__dynamic_array__rec__b
                                            (us_split_discrs1
                                            (select (to_array1
                                                    (rec__dynamic_array__holder__content1
                                                    (us_split_fields5
                                                    temp___expr_185))) temp___189)))
                                         (of_int 1)))))))

(define-fun dynamic_property5 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq11 (integer integer) Bool)

(declare-const dummy11 integer)

(declare-datatypes ((tT20bP1__ref 0))
(((mk_tT20bP1__ref (tT20bP1__content integer)))))
(define-fun tT20bP1__ref___projection ((a tT20bP1__ref)) integer (tT20bP1__content
                                                                 a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last5 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first4 (mk2 f l))) f)
     (= (to_rep1 (last5 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-datatypes ((us_t2 0))
(((mk___t2 (elts2 (Array Int us_rep))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int us_rep) (elts2 a))

(define-fun of_array2 ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))

(define-fun last6 ((a us_t2)) Int (to_rep1 (last5 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last6 a))
                                    (+ (- (last6 a) (first5 a)) 1) 0))

(declare-const value__size5 Int)

(declare-fun object__size5 ((Array Int us_rep)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int us_rep)) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size5 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment5 a))))

(define-fun bool_eq6 ((x us_t2)
  (y us_t2)) Bool (bool_eq1 (elts2 x) (to_rep1 (first4 (rt2 x)))
                  (to_rep1 (last5 (rt2 x))) (elts2 y)
                  (to_rep1 (first4 (rt2 y))) (to_rep1 (last5 (rt2 y)))))

(declare-fun user_eq12 (us_t2 us_t2) Bool)

(declare-const dummy12 us_t2)

(declare-datatypes ((t20b__ref 0)) (((mk_t20b__ref (t20b__content us_t2)))))
(define-fun t20b__ref___projection ((a t20b__ref)) us_t2 (t20b__content a))

(declare-datatypes ((us_split_fields6 0))
(((mk___split_fields3 (rec__dynamic_array__holder__content2 us_t2)))))
(define-fun us_split_fields_Content__5__projection ((a us_split_fields6)) us_t2
  (rec__dynamic_array__holder__content2 a))

(declare-datatypes ((us_split_fields__ref3 0))
(((mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref3)) us_split_fields6
  (us_split_fields__content3 a))

(declare-datatypes ((us_rep3 0))
(((mk___rep3
  (us_split_discrs5 us_split_discrs2)(us_split_fields7 us_split_fields6)))))
(define-fun us_rep___12__projection ((a us_rep3)) us_split_discrs2 (us_split_discrs5
                                                                   a))

(define-fun us_rep___13__projection ((a us_rep3)) us_split_fields6 (us_split_fields7
                                                                   a))

(define-fun to_base1 ((a us_rep3)) us_rep1 (mk___rep1 (us_split_discrs5 a)
                                           (mk___split_fields1
                                           (let ((temp___139 (rec__dynamic_array__holder__content2
                                                             (us_split_fields7
                                                             a))))
                                           (of_array (to_array2 temp___139)
                                           (first5 temp___139)
                                           (last6 temp___139))))))

(define-fun of_base1 ((r us_rep1)) us_rep3 (mk___rep3 (us_split_discrs3 r)
                                           (mk___split_fields3
                                           (let ((temp___138 (rec__dynamic_array__holder__content
                                                             (us_split_fields3
                                                             r))))
                                           (of_array2 (to_array temp___138)
                                           (first1 temp___138)
                                           (last2 temp___138))))))

(define-fun bool_eq7 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (= (to_rep
                            (rec__dynamic_array__holder__d
                            (us_split_discrs5 a))) (to_rep
                                                   (rec__dynamic_array__holder__d
                                                   (us_split_discrs5 b))))
                         (= (bool_eq6
                            (rec__dynamic_array__holder__content2
                            (us_split_fields7 a))
                            (rec__dynamic_array__holder__content2
                            (us_split_fields7 b))) true))
                    true false))

(define-fun in_range5 ((rec__dynamic_array__holder__d1 Int)
  (a us_rep1)) Bool (= rec__dynamic_array__holder__d1 (to_rep
                                                      (rec__dynamic_array__holder__d
                                                      (us_split_discrs3 a)))))

(declare-const value__size6 Int)

(declare-fun object__size6 (us_rep3) Int)

(declare-const value__alignment6 Int)

(declare-fun object__alignment6 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment6 a))))

(declare-const dynamic_array__holder__d__first__bit2 Int)

(declare-const dynamic_array__holder__d__last__bit2 Int)

(declare-const dynamic_array__holder__d__position2 Int)

;; dynamic_array__holder__d__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__d__first__bit2))

;; dynamic_array__holder__d__last__bit_axiom
  (assert
  (< dynamic_array__holder__d__first__bit2 dynamic_array__holder__d__last__bit2))

;; dynamic_array__holder__d__position_axiom
  (assert (<= 0 dynamic_array__holder__d__position2))

(declare-const dynamic_array__holder__content__first__bit2 Int)

(declare-const dynamic_array__holder__content__last__bit2 Int)

(declare-const dynamic_array__holder__content__position2 Int)

;; dynamic_array__holder__content__first__bit_axiom
  (assert (<= 0 dynamic_array__holder__content__first__bit2))

;; dynamic_array__holder__content__last__bit_axiom
  (assert
  (< dynamic_array__holder__content__first__bit2 dynamic_array__holder__content__last__bit2))

;; dynamic_array__holder__content__position_axiom
  (assert (<= 0 dynamic_array__holder__content__position2))

(declare-fun user_eq13 (us_rep3 us_rep3) Bool)

(declare-const dummy13 us_rep3)

(declare-datatypes ((t19b__ref 0))
(((mk_t19b__ref (t19b__content us_rep3)))))
(define-fun t19b__ref___projection ((a t19b__ref)) us_rep3 (t19b__content a))

(define-fun dynamic_property7 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq14 (integer integer) Bool)

(declare-const dummy14 integer)

(declare-datatypes ((t22b__ref 0))
(((mk_t22b__ref (t22b__content integer)))))
(define-fun t22b__ref___projection ((a t22b__ref)) integer (t22b__content a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last7 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first6 (mk3 f l))) f)
     (= (to_rep1 (last7 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property7 range_first range_last low)
                   (dynamic_property7 range_first range_last high))))))

(declare-datatypes ((us_t3 0))
(((mk___t3 (elts3 (Array Int us_rep))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int us_rep) (elts3 a))

(define-fun of_array3 ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))

(define-fun last8 ((a us_t3)) Int (to_rep1 (last7 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last8 a))
                                    (+ (- (last8 a) (first7 a)) 1) 0))

(declare-const value__size7 Int)

(declare-fun object__size7 ((Array Int us_rep)) Int)

(declare-const value__component__size3 Int)

(declare-fun object__component__size3 ((Array Int us_rep)) Int)

(declare-const value__alignment7 Int)

(declare-fun object__alignment7 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size7 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment7 a))))

(define-fun bool_eq8 ((x us_t3)
  (y us_t3)) Bool (bool_eq1 (elts3 x) (to_rep1 (first6 (rt3 x)))
                  (to_rep1 (last7 (rt3 x))) (elts3 y)
                  (to_rep1 (first6 (rt3 y))) (to_rep1 (last7 (rt3 y)))))

(declare-fun user_eq15 (us_t3 us_t3) Bool)

(declare-const dummy15 us_t3)

(declare-datatypes ((t23b__ref 0)) (((mk_t23b__ref (t23b__content us_t3)))))
(define-fun t23b__ref___projection ((a t23b__ref)) us_t3 (t23b__content a))

(define-fun in_range6 ((rec__dynamic_array__rec__b1 Bool)
  (a us_rep)) Bool (= rec__dynamic_array__rec__b1 (rec__dynamic_array__rec__b
                                                  (us_split_discrs1 a))))

(declare-const value__size8 Int)

(declare-fun object__size8 (us_rep) Int)

(declare-const value__alignment8 Int)

(declare-fun object__alignment8 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size8 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment8 a))))

(declare-const dynamic_array__rec__b__first__bit1 Int)

(declare-const dynamic_array__rec__b__last__bit1 Int)

(declare-const dynamic_array__rec__b__position1 Int)

;; dynamic_array__rec__b__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__b__first__bit1))

;; dynamic_array__rec__b__last__bit_axiom
  (assert
  (< dynamic_array__rec__b__first__bit1 dynamic_array__rec__b__last__bit1))

;; dynamic_array__rec__b__position_axiom
  (assert (<= 0 dynamic_array__rec__b__position1))

(declare-const dynamic_array__rec__f1__first__bit1 Int)

(declare-const dynamic_array__rec__f1__last__bit1 Int)

(declare-const dynamic_array__rec__f1__position1 Int)

;; dynamic_array__rec__f1__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f1__first__bit1))

;; dynamic_array__rec__f1__last__bit_axiom
  (assert
  (< dynamic_array__rec__f1__first__bit1 dynamic_array__rec__f1__last__bit1))

;; dynamic_array__rec__f1__position_axiom
  (assert (<= 0 dynamic_array__rec__f1__position1))

(declare-const dynamic_array__rec__f2__first__bit1 Int)

(declare-const dynamic_array__rec__f2__last__bit1 Int)

(declare-const dynamic_array__rec__f2__position1 Int)

;; dynamic_array__rec__f2__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f2__first__bit1))

;; dynamic_array__rec__f2__last__bit_axiom
  (assert
  (< dynamic_array__rec__f2__first__bit1 dynamic_array__rec__f2__last__bit1))

;; dynamic_array__rec__f2__position_axiom
  (assert (<= 0 dynamic_array__rec__f2__position1))

(declare-fun user_eq16 (us_rep us_rep) Bool)

(declare-const dummy16 us_rep)

(declare-datatypes ((t21b__ref 0)) (((mk_t21b__ref (t21b__content us_rep)))))
(define-fun t21b__ref___projection ((a t21b__ref)) us_rep (t21b__content a))

(declare-const h__split_discrs us_split_discrs2)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_property9 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq17 (integer integer) Bool)

(declare-const dummy17 integer)

(declare-datatypes ((t25b__ref 0))
(((mk_t25b__ref (t25b__content integer)))))
(define-fun t25b__ref___projection ((a t25b__ref)) integer (t25b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const hh us_rep1)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const r us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(define-fun in_range7 ((rec__dynamic_array__rec__b1 Bool)
  (a us_rep)) Bool (= rec__dynamic_array__rec__b1 (rec__dynamic_array__rec__b
                                                  (us_split_discrs1 a))))

(declare-const value__size9 Int)

(declare-fun object__size9 (us_rep) Int)

(declare-const value__alignment9 Int)

(declare-fun object__alignment9 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size9 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment9))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment9 a))))

(declare-const dynamic_array__rec__b__first__bit2 Int)

(declare-const dynamic_array__rec__b__last__bit2 Int)

(declare-const dynamic_array__rec__b__position2 Int)

;; dynamic_array__rec__b__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__b__first__bit2))

;; dynamic_array__rec__b__last__bit_axiom
  (assert
  (< dynamic_array__rec__b__first__bit2 dynamic_array__rec__b__last__bit2))

;; dynamic_array__rec__b__position_axiom
  (assert (<= 0 dynamic_array__rec__b__position2))

(declare-const dynamic_array__rec__f2__first__bit2 Int)

(declare-const dynamic_array__rec__f2__last__bit2 Int)

(declare-const dynamic_array__rec__f2__position2 Int)

;; dynamic_array__rec__f2__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f2__first__bit2))

;; dynamic_array__rec__f2__last__bit_axiom
  (assert
  (< dynamic_array__rec__f2__first__bit2 dynamic_array__rec__f2__last__bit2))

;; dynamic_array__rec__f2__position_axiom
  (assert (<= 0 dynamic_array__rec__f2__position2))

(declare-const dynamic_array__rec__f1__first__bit2 Int)

(declare-const dynamic_array__rec__f1__last__bit2 Int)

(declare-const dynamic_array__rec__f1__position2 Int)

;; dynamic_array__rec__f1__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f1__first__bit2))

;; dynamic_array__rec__f1__last__bit_axiom
  (assert
  (< dynamic_array__rec__f1__first__bit2 dynamic_array__rec__f1__last__bit2))

;; dynamic_array__rec__f1__position_axiom
  (assert (<= 0 dynamic_array__rec__f1__position2))

(declare-fun user_eq18 (us_rep us_rep) Bool)

(declare-const dummy18 us_rep)

(declare-datatypes ((t34b__ref 0)) (((mk_t34b__ref (t34b__content us_rep)))))
(define-fun t34b__ref___projection ((a t34b__ref)) us_rep (t34b__content a))

(declare-sort t4 0)

(declare-fun first8 (t4) integer)

(declare-fun last9 (t4) integer)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first8 (mk4 f l))) f)
     (= (to_rep1 (last9 (mk4 f l))) l)))) :pattern ((mk4 f l)) )))

(define-fun dynamic_property10 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ((us_t4 0))
(((mk___t4 (elts4 (Array Int us_rep))(rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int us_rep) (elts4 a))

(define-fun of_array4 ((a (Array Int us_rep)) (f Int)
  (l Int)) us_t4 (mk___t4 a (mk4 f l)))

(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))

(define-fun last10 ((a us_t4)) Int (to_rep1 (last9 (rt4 a))))

(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last10 a))
                                    (+ (- (last10 a) (first9 a)) 1) 0))

(declare-const value__size10 Int)

(declare-fun object__size10 ((Array Int us_rep)) Int)

(declare-const value__component__size4 Int)

(declare-fun object__component__size4 ((Array Int us_rep)) Int)

(declare-const value__alignment10 Int)

(declare-fun object__alignment10 ((Array Int us_rep)) Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; object__size_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__size10 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int us_rep))) (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment10))

;; object__alignment_axiom
  (assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment10 a))))

(define-fun bool_eq9 ((x us_t4)
  (y us_t4)) Bool (bool_eq1 (elts4 x) (to_rep1 (first8 (rt4 x)))
                  (to_rep1 (last9 (rt4 x))) (elts4 y)
                  (to_rep1 (first8 (rt4 y))) (to_rep1 (last9 (rt4 y)))))

(declare-fun user_eq19 (us_t4 us_t4) Bool)

(declare-const dummy19 us_t4)

(declare-datatypes ((rec_array__ref 0))
(((mk_rec_array__ref (rec_array__content us_t4)))))
(define-fun rec_array__ref___projection ((a rec_array__ref)) us_t4 (rec_array__content
                                                                   a))

(declare-fun temp___196 (us_rep Int Int) us_t3)

;; def_axiom
  (assert
  (forall ((temp___198 us_rep))
  (forall ((temp___199 Int) (temp___200 Int))
  (let ((temp___197 (temp___196 temp___198 temp___199 temp___200)))
  (and
  (=> (dynamic_property10 1 2147483647 temp___199 temp___200)
  (and (= (first7 temp___197) temp___199) (= (last8 temp___197) temp___200)))
  (forall ((temp___201 Int))
  (= (select (to_array3 temp___197) temp___201) temp___198)))))))

(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range3
                                     temp___expr_39)))

(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant6 ((temp___expr_144 Int)
  (temp___is_init_141 Bool) (temp___skip_constant_142 Bool)
  (temp___do_toplevel_143 Bool)) Bool (=>
                                      (or (= temp___is_init_141 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last temp___expr_144)))

;; last__def_axiom
  (assert (= last c))

;; hh__def_axiom
  (assert (= hh (new_holder c)))

(declare-const h__split_fields (Array Int us_rep))

(declare-const h__split_fields1 t1)

(declare-const i Int)

(declare-const temp___d_195 Int)

(declare-const us Int)

(declare-const o natural)

(declare-const us1 Int)

(declare-const o1 Int)

(declare-const o2 integer)

(declare-const o3 integer)

(declare-const o4 integer)

(declare-const usq_ Bool)

(declare-const usq_1 integer)

(declare-const usq_2 integer)

(declare-const usq_3 Bool)

(declare-const o5 Bool)

(declare-const o6 integer)

(declare-const o7 integer)

(declare-const o8 Bool)

(declare-const temp___202 (Array Int us_rep))

(declare-const temp___2021 t3)

(declare-const temp___203 (Array Int us_rep))

(declare-const temp___2031 t3)

(declare-const o9 (Array Int us_rep))

(declare-const o10 t2)

(declare-const o11 (Array Int us_rep))

(declare-const o12 t2)

(declare-const o13 natural)

(declare-const o14 natural)

(declare-const o15 (Array Int us_rep))

(declare-const o16 t2)

(declare-const o17 us_rep1)

(declare-const o18 us_rep1)

(declare-const dynamic_array__h__assume us_rep2)

(declare-const dynamic_array__B_2__hh__assume us_rep1)

(declare-const o19 Int)

(declare-const dynamic_array__B_2__r__assume us_rep)

(declare-const result us_split_fields__ref2)

(declare-const h__split_fields2 us_split_fields4)

(declare-const result1 int__ref)

(declare-const i1 Int)

(declare-const h__split_fields3 us_split_fields4)

(declare-const i2 Int)

(declare-const f Int)

(define-fun temp___2022 () us_t3 (mk___t3 temp___202 temp___2021))

;; H
  (assert (in_range2 c))

;; H
  (assert (in_range2 temp___d_195))

;; H
  (assert (and (= us c) (in_range2 c)))

;; H
  (assert (and (= us1 c) (dynamic_property 0 last c)))

;; H
  (assert (= o1 c))

;; H
  (assert (= o2 (of_rep1 o1)))

;; H
  (assert (= dummy3 o3))

;; H
  (assert (= o2 o4))

;; H
  (assert (= (of_int 0) usq_))

;; H
  (assert (= usq_1 o3))

;; H
  (assert (= usq_2 o4))

;; H
  (assert (= true usq_3))

;; H
  (assert (= usq_ o5))

;; H
  (assert (= usq_1 o6))

;; H
  (assert (= usq_2 o7))

;; H
  (assert (= false o8))

;; H
  (assert
  (= temp___2022 (temp___196
                 (mk___rep (mk___split_discrs o5) (mk___split_fields o6 o7)
                 o8) 1 c)))

;; H
  (assert (= (to_rep1 (first6 temp___2021)) 1))

;; H
  (assert (= (to_rep1 (last7 temp___2021)) c))

;; H
  (assert (= (mk___t3 temp___203 temp___2031) temp___2022))

;; H
  (assert
  (= (ite (<= (to_rep1 (first6 temp___2031)) (to_rep1 (last7 temp___2031)))
     (+ (- (to_rep1 (last7 temp___2031)) (to_rep1 (first6 temp___2031))) 1)
     0) (ite (<= 1 c) (+ (- c 1) 1) 0)))

;; H
  (assert (= temp___203 o9))

;; H
  (assert
  (= (mk2 (to_rep1 (first6 temp___2031)) (to_rep1 (last7 temp___2031)))
  o10))

;; H
  (assert (= o11 o9))

;; H
  (assert (= o12 o10))

;; H
  (assert (= (to_rep o) c))

;; H
  (assert (= o o13))

;; H
  (assert (= o14 o13))

;; H
  (assert (= o15 o11))

;; H
  (assert (= o16 o12))

;; H
  (assert
  (= o17 (to_base1
         (mk___rep3 (mk___split_discrs1 o14)
         (mk___split_fields3 (mk___t2 o15 o16))))))

;; H
  (assert (= o18 o17))

;; H
  (assert (= dynamic_array__h__assume (of_base o18)))

;; H
  (assert
  (= result (mk___split_fields__ref2
            (mk___split_fields2 (mk___t1 h__split_fields h__split_fields1)))))

;; H
  (assert (= h__split_fields2 (us_split_fields5 dynamic_array__h__assume)))

;; H
  (assert (= h__split_discrs (us_split_discrs4 dynamic_array__h__assume)))

;; H
  (assert (dynamic_invariant3 (mk___rep2 h__split_discrs h__split_fields2)
  true false true))

;; H
  (assert
  (= (to_rep (rec__dynamic_array__holder__d h__split_discrs)) (to_rep
                                                              (rec__dynamic_array__holder__d
                                                              (us_split_discrs3
                                                              (new_holder c))))))

;; H
  (assert (= result1 (mk_int__ref i)))

;; H
  (assert (= i1 1))

;; H
  (assert (<= 1 i1))

;; H
  (assert (<= i1 c))

;; H
  (assert
  (forall ((j Int))
  (=> (and (<= 1 j) (<= j (- i2 1)))
  (and
  (= (rec__dynamic_array__rec__b
     (us_split_discrs1
     (select (elts1 (rec__dynamic_array__holder__content1 h__split_fields3)) j))) true)
  (= (to_rep1
     (rec__dynamic_array__rec__f1
     (us_split_fields1
     (select (elts1 (rec__dynamic_array__holder__content1 h__split_fields3)) j))))
  (increment
  (select (elts
          (rec__dynamic_array__holder__content
          (us_split_fields3 (new_holder c)))) j)))))))

;; H
  (assert
  (forall ((j Int))
  (=> (and (<= i2 j) (<= j c))
  (not
  (= (rec__dynamic_array__rec__b
     (us_split_discrs1
     (select (elts1 (rec__dynamic_array__holder__content1 h__split_fields3)) j))) true)))))

;; H
  (assert
  (and
  (and
  (and (=> (<= 1 c) (dynamic_property9 1 c i2)) (dynamic_invariant3
  (mk___rep2 h__split_discrs h__split_fields3) false true true))
  (forall ((temp___215 Int))
  (=>
  (and
  (<= (to_rep1
      (first2 (rt1 (rec__dynamic_array__holder__content1 h__split_fields3)))) temp___215)
  (<= temp___215 (to_rep1
                 (last3
                 (rt1
                 (rec__dynamic_array__holder__content1 h__split_fields3))))))
  (=> (<= i2 temp___215)
  (= (select (elts1 (rec__dynamic_array__holder__content1 h__split_fields3)) temp___215) (select
  (elts1 (rec__dynamic_array__holder__content1 h__split_fields2)) temp___215))))))
  (and (<= 1 i2) (<= i2 c))))

;; H
  (assert
  (and (= dynamic_array__B_2__hh__assume (new_holder c))
  (and (dynamic_invariant2 dynamic_array__B_2__hh__assume true false true)
  (ite (= c 0)
  (= (to_rep
     (rec__dynamic_array__holder__d
     (us_split_discrs3 dynamic_array__B_2__hh__assume))) 0)
  (= (to_rep
     (rec__dynamic_array__holder__d
     (us_split_discrs3 dynamic_array__B_2__hh__assume))) c)))))

;; H
  (assert (= dynamic_array__B_2__hh__assume hh))

;; H
  (assert (dynamic_invariant2 hh true false true))

;; H
  (assert
  (and
  (<= (to_rep1
      (first
      (rt (rec__dynamic_array__holder__content (us_split_fields3 hh)))))
  i2)
  (<= i2 (to_rep1
         (last1
         (rt (rec__dynamic_array__holder__content (us_split_fields3 hh))))))))

;; H
  (assert (= o19 i2))

;; H
  (assert
  (= dynamic_array__B_2__r__assume (select (elts
                                           (rec__dynamic_array__holder__content
                                           (us_split_fields3 hh))) o19)))

;; H
  (assert
  (= (mk___rep (us_split_discrs1 dynamic_array__B_2__r__assume)
     (us_split_fields1 dynamic_array__B_2__r__assume) false) r))

;; H
  (assert (dynamic_invariant1 r true false true))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 f)))

;; H
  (assert (= (rec__dynamic_array__rec__b (us_split_discrs1 r)) true))

(assert
;; WP_parameter_def
 ;; File "dynamic_array.adb", line 31, characters 0-0
  (not (= (to_int1 (rec__dynamic_array__rec__b (us_split_discrs1 r))) 1)))
(check-sat)
(exit)
