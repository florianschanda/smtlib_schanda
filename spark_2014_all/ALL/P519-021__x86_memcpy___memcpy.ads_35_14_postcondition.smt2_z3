;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.6)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes ((t__ref 0)) (((mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun to_int2 ((_ BitVec 16)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes ((t__ref1 0))
(((mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-fun nth2 ((_ BitVec 32) Int) Bool)

(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun to_int3 ((_ BitVec 32)) Int)

(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)

(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))

(declare-datatypes ((t__ref2 0))
(((mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-fun nth3 ((_ BitVec 64) Int) Bool)

(declare-fun lsr3 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun asr3 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun lsl3 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_right4 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_left4 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun to_int4 ((_ BitVec 64)) Int)

(define-fun uint_in_range3 ((i Int)) Bool (and (<= 0 i)
                                          (<= i 18446744073709551615)))

(declare-fun nth_bv3 ((_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun eq_sub_bv3 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

(define-fun eq_sub3 ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth3 a j) (nth3 b j)))))

(declare-datatypes ((t__ref3 0))
(((mk_t__ref3 (t__content3 (_ BitVec 64))))))
(declare-fun power3 ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun bv_min3 ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) x y))

(define-fun bv_max3 ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) y x))

(define-fun to_int5 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort unsigned64 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 64))

(declare-fun user_eq (unsigned64 unsigned64) Bool)

(declare-const dummy unsigned64)

(declare-datatypes ((unsigned64__ref 0))
(((mk_unsigned64__ref (unsigned64__content unsigned64)))))
(define-fun unsigned64__ref___projection ((a unsigned64__ref)) unsigned64
  (unsigned64__content a))

(define-fun dynamic_invariant ((temp___expr_202 (_ BitVec 64))
  (temp___is_init_199 Bool) (temp___skip_constant_200 Bool)
  (temp___do_toplevel_201 Bool)) Bool true)

(declare-sort unsigned16 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 16))

(declare-fun user_eq1 (unsigned16 unsigned16) Bool)

(declare-const dummy1 unsigned16)

(declare-datatypes ((unsigned16__ref 0))
(((mk_unsigned16__ref (unsigned16__content unsigned16)))))
(define-fun unsigned16__ref___projection ((a unsigned16__ref)) unsigned16
  (unsigned16__content a))

(define-fun dynamic_invariant1 ((temp___expr_214 (_ BitVec 16))
  (temp___is_init_211 Bool) (temp___skip_constant_212 Bool)
  (temp___do_toplevel_213 Bool)) Bool true)

(declare-sort unsigned8 0)

(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (unsigned8 unsigned8) Bool)

(declare-const dummy2 unsigned8)

(declare-datatypes ((unsigned8__ref 0))
(((mk_unsigned8__ref (unsigned8__content unsigned8)))))
(define-fun unsigned8__ref___projection ((a unsigned8__ref)) unsigned8
  (unsigned8__content a))

(declare-fun to_rep (unsigned8) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) unsigned8)

;; inversion_axiom
  (assert
  (forall ((x unsigned8))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))) )))

(define-fun to_int6 ((x unsigned8)) Int (bv2int (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x unsigned8)) (! (uint_in_range
  (to_int6 x)) :pattern ((to_int6 x)) )))

(declare-datatypes ((map__ref 0))
(((mk_map__ref (map__content (Array (_ BitVec 64) unsigned8))))))
(declare-fun slide ((Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64)) (Array (_ BitVec 64) unsigned8))

;; slide_eq
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8)))
  (forall ((first (_ BitVec 64)))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8)))
  (forall ((old_first (_ BitVec 64)))
  (forall ((new_first (_ BitVec 64)))
  (forall ((i (_ BitVec 64)))
  (! (= (select (slide a old_first new_first) i) (select a (bvsub i (bvsub new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64) (Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64)) (Array (_ BitVec 64) unsigned8))

;; concat_def
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (forall ((i (_ BitVec 64)))
  (! (and
     (=> (and (bvule a_first i) (bvule i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (bvugt i a_last)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (bvadd (bvsub i a_last) (bvsub b_first #x0000000000000001)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (unsigned8
  (_ BitVec 64)) (Array (_ BitVec 64) unsigned8))

;; singleton_def
  (assert
  (forall ((v unsigned8))
  (forall ((i (_ BitVec 64)))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array (_ BitVec 64) unsigned8))
  (a__first (_ BitVec 64)) (a__last (_ BitVec 64))
  (b (Array (_ BitVec 64) unsigned8)) (b__first (_ BitVec 64))
  (b__last (_ BitVec 64))) Bool (ite (and
                                     (ite (bvule a__first a__last)
                                     (and (bvule b__first b__last)
                                     (= (bvsub a__last a__first) (bvsub b__last b__first)))
                                     (bvugt b__first b__last))
                                     (forall ((temp___idx_132 (_ BitVec 64)))
                                     (=>
                                     (and (bvule a__first temp___idx_132)
                                     (bvule temp___idx_132 a__last))
                                     (= (to_rep (select a temp___idx_132))
                                     (to_rep
                                     (select b (bvadd (bvsub b__first a__first) temp___idx_132)))))))
                                true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a__first (_ BitVec 64)) (a__last (_ BitVec 64))
  (b__first (_ BitVec 64)) (b__last (_ BitVec 64)))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (bvule a__first a__last)
  (and (bvule b__first b__last)
  (= (bvsub a__last a__first) (bvsub b__last b__first)))
  (bvugt b__first b__last))
  (forall ((temp___idx_132 (_ BitVec 64)))
  (=> (and (bvule a__first temp___idx_132) (bvule temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (bvadd (bvsub b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64) (Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (_ BitVec 64)) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i (_ BitVec 64)) (j (_ BitVec 64)))
     (and (bvule i a_last)
     (and (bvult j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (bvult i a_last)
     (bvult (to_rep (select a (bvadd i #x0000000000000001))) (to_rep
                                                             (select b (bvadd j #x0000000000000001))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array (_ BitVec 64) unsigned8))
  (b (Array (_ BitVec 64) unsigned8)))
  (forall ((a_first (_ BitVec 64)) (a_last (_ BitVec 64))
  (b_first (_ BitVec 64)) (b_last (_ BitVec 64)))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i (_ BitVec 64)) (j (_ BitVec 64)))
     (and (bvule i b_last)
     (and (bvult j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (bvult i b_last)
     (bvugt (to_rep (select a (bvadd j #x0000000000000001))) (to_rep
                                                             (select b (bvadd i #x0000000000000001))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-fun inrange64 ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun inrange64__function_guard (Bool (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

;; inrange64__post_axiom
  (assert
  (forall ((var (_ BitVec 64)) (bottom (_ BitVec 64))
  (range_size (_ BitVec 64)))
  (! (=>
     (and
     (and (dynamic_invariant var true true true) (dynamic_invariant bottom
     true true true)) (dynamic_invariant range_size true true true))
     (= (= (inrange64 var bottom range_size) true)
     (ite (bvule bottom (bvadd (bvsub ((_ int2bv 64) 18446744073709551615) range_size) ((_ int2bv 64) 1)))
     (and (bvule bottom var)
     (bvule var (bvadd bottom (bvsub range_size ((_ int2bv 64) 1)))))
     (or
     (and (bvule bottom var)
     (bvule var ((_ int2bv 64) 18446744073709551615)))
     (bvule var (bvsub (bvsub range_size (bvsub ((_ int2bv 64) 18446744073709551615) bottom)) ((_ int2bv 64) 2))))))) :pattern (
  (inrange64 var bottom range_size)) )))

(declare-fun insaferegion64 ((_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun insaferegion64__function_guard (Bool (_ BitVec 64)
  (_ BitVec 64)) Bool)

;; insaferegion64__post_axiom
  (assert
  (forall ((var (_ BitVec 64)) (rsp (_ BitVec 64)))
  (! (=>
     (and (dynamic_invariant var true true true) (dynamic_invariant rsp true
     true true))
     (= (= (insaferegion64 var rsp) true)
     (or
     (and (bvule var ((_ int2bv 64) 14987979559889010687))
     (bvuge var (bvadd rsp ((_ int2bv 64) 8))))
     (and (bvule var ((_ int2bv 64) 4611686018427387903))
     (bvuge var ((_ int2bv 64) 0)))))) :pattern ((insaferegion64 var rsp)) )))

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort unsigned32 0)

(declare-const attr__ATTRIBUTE_MODULUS3 (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 32))

(declare-fun user_eq3 (unsigned32 unsigned32) Bool)

(declare-const dummy3 unsigned32)

(declare-datatypes ((unsigned32__ref 0))
(((mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32
  (unsigned32__content a))

(define-fun dynamic_invariant2 ((temp___expr_208 (_ BitVec 32))
  (temp___is_init_205 Bool) (temp___skip_constant_206 Bool)
  (temp___do_toplevel_207 Bool)) Bool true)

(declare-fun eax ((_ BitVec 64)) (_ BitVec 32))

(declare-fun eax__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; eax__post_axiom
  (assert
  (forall ((x86__rax (_ BitVec 64)))
  (! (=> (dynamic_invariant x86__rax true true true)
     (let ((result (eax x86__rax)))
     (and
     (= result ((_ extract 31 0) (bvand x86__rax ((_ int2bv 64) 4294967295))))
     (dynamic_invariant2 result true false true)))) :pattern ((eax x86__rax)) )))

(declare-fun writereg32post ((_ BitVec 64) (_ BitVec 32)) Bool)

(declare-fun writereg32post__function_guard (Bool (_ BitVec 64)
  (_ BitVec 32)) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-const attr__ATTRIBUTE_ADDRESS22 Int)

(declare-const attr__ATTRIBUTE_ADDRESS23 Int)

(define-fun dynamic_invariant3 ((temp___expr_220 (_ BitVec 8))
  (temp___is_init_217 Bool) (temp___skip_constant_218 Bool)
  (temp___do_toplevel_219 Bool)) Bool true)

(declare-fun readmem8 ((_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) (_ BitVec 8))

(declare-fun readmem8__function_guard ((_ BitVec 8) (_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) Bool)

;; readmem8__post_axiom
  (assert
  (forall ((addr (_ BitVec 64)))
  (forall ((x86__memory (Array (_ BitVec 64) unsigned8)))
  (! (=> (dynamic_invariant addr true true true)
     (let ((result (readmem8 addr x86__memory)))
     (and (= result (to_rep (select x86__memory addr))) (dynamic_invariant3
     result true false true)))) :pattern ((readmem8 addr x86__memory)) ))))

(declare-fun readmem64 ((_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) (_ BitVec 64))

(declare-fun readmem64__function_guard ((_ BitVec 64) (_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) Bool)

;; readmem64__post_axiom
  (assert
  (forall ((addr (_ BitVec 64)))
  (forall ((x86__memory (Array (_ BitVec 64) unsigned8)))
  (! (=> (dynamic_invariant addr true true true)
     (let ((result (readmem64 addr x86__memory)))
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (bvand result ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                               (select x86__memory addr))))
     (= (bvand result ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
     (= (bvand result ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
     (= (bvand result ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
     (= (bvand result ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
     (= (bvand result ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
     (= (bvand result ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
     (= (bvand result ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
     (to_rep (select x86__memory (bvadd addr ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
     (dynamic_invariant result true false true)))) :pattern ((readmem64 addr
                                                             x86__memory)) ))))

(declare-sort unsigned641 0)

(declare-const attr__ATTRIBUTE_MODULUS4 (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 64))

(declare-fun user_eq4 (unsigned641 unsigned641) Bool)

(declare-const dummy4 unsigned641)

(declare-datatypes ((unsigned64__ref1 0))
(((mk_unsigned64__ref1 (unsigned64__content1 unsigned641)))))
(define-fun unsigned64__ref___2__projection ((a unsigned64__ref1)) unsigned641
  (unsigned64__content1 a))

(define-fun dynamic_invariant4 ((temp___expr_274 (_ BitVec 64))
  (temp___is_init_271 Bool) (temp___skip_constant_272 Bool)
  (temp___do_toplevel_273 Bool)) Bool true)

(declare-sort unsigned81 0)

(declare-const attr__ATTRIBUTE_MODULUS5 (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))

(declare-fun user_eq5 (unsigned81 unsigned81) Bool)

(declare-const dummy5 unsigned81)

(declare-datatypes ((unsigned8__ref1 0))
(((mk_unsigned8__ref1 (unsigned8__content1 unsigned81)))))
(define-fun unsigned8__ref___2__projection ((a unsigned8__ref1)) unsigned81
  (unsigned8__content1 a))

(define-fun dynamic_invariant5 ((temp___expr_292 (_ BitVec 8))
  (temp___is_init_289 Bool) (temp___skip_constant_290 Bool)
  (temp___do_toplevel_291 Bool)) Bool true)

(declare-const attr__ATTRIBUTE_ADDRESS24 Int)

(declare-fun readmem64ghost ((Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) (_ BitVec 64))

(declare-fun readmem64ghost__function_guard ((_ BitVec 64)
  (Array (_ BitVec 64) unsigned8) (_ BitVec 64)
  (Array (_ BitVec 64) unsigned8)) Bool)

(declare-const attr__ATTRIBUTE_ADDRESS25 Int)

(declare-const attr__ATTRIBUTE_ADDRESS26 Int)

(declare-const attr__ATTRIBUTE_ADDRESS27 Int)

(declare-const attr__ATTRIBUTE_ADDRESS28 Int)

(declare-const attr__ATTRIBUTE_ADDRESS29 Int)

(declare-const attr__ATTRIBUTE_ADDRESS30 Int)

(declare-const attr__ATTRIBUTE_ADDRESS31 Int)

(declare-const attr__ATTRIBUTE_ADDRESS32 Int)

(declare-const attr__ATTRIBUTE_ADDRESS33 Int)

(declare-const attr__ATTRIBUTE_ADDRESS34 Int)

(declare-const attr__ATTRIBUTE_ADDRESS35 Int)

(declare-const attr__ATTRIBUTE_ADDRESS36 Int)

(declare-const attr__ATTRIBUTE_ADDRESS37 Int)

(declare-const attr__ATTRIBUTE_ADDRESS38 Int)

(declare-fun readreg32 ((_ BitVec 64)) (_ BitVec 32))

(declare-fun readreg32__function_guard ((_ BitVec 32) (_ BitVec 64)) Bool)

;; readreg32__post_axiom
  (assert
  (forall ((reg (_ BitVec 64)))
  (! (=> (dynamic_invariant reg true true true)
     (let ((result (readreg32 reg)))
     (and
     (= result ((_ extract 31 0) (bvand reg ((_ int2bv 64) 4294967295))))
     (dynamic_invariant2 result true false true)))) :pattern ((readreg32 reg)) )))

;; writereg32post__post_axiom
  (assert
  (forall ((regnew (_ BitVec 64)))
  (forall ((val__ (_ BitVec 32)))
  (! (=>
     (and (dynamic_invariant regnew true true true) (dynamic_invariant2 val__
     true true true))
     (= (= (writereg32post regnew val__) true)
     (and (= (readreg32 regnew) val__)
     (= (bvand regnew ((_ int2bv 64) 18446744069414584320)) ((_ int2bv 64) 0))))) :pattern (
  (writereg32post regnew val__)) ))))

;; readmem64ghost__post_axiom
  (assert
  (forall ((mem (Array (_ BitVec 64) unsigned8))
  (x86__memory (Array (_ BitVec 64) unsigned8)))
  (forall ((addr (_ BitVec 64)))
  (! (=> (dynamic_invariant addr true true true)
     (let ((result (readmem64ghost mem addr x86__memory)))
     (and
     (= result (bvor (bvor (bvor (bvor (bvor (bvor (bvor ((_ zero_extend 56)
     (to_rep (select mem addr))) (bvshl ((_ zero_extend 56) (to_rep
                                                            (select mem (bvadd addr ((_ int2bv 64) 1))))) ((_ int2bv 64) 8))) (bvshl ((_ zero_extend 56)
     (to_rep (select mem (bvadd addr ((_ int2bv 64) 2))))) ((_ int2bv 64) 16))) (bvshl ((_ zero_extend 56)
     (to_rep (select mem (bvadd addr ((_ int2bv 64) 3))))) ((_ int2bv 64) 24))) (bvshl ((_ zero_extend 56)
     (to_rep (select mem (bvadd addr ((_ int2bv 64) 4))))) ((_ int2bv 64) 32))) (bvshl ((_ zero_extend 56)
     (to_rep (select mem (bvadd addr ((_ int2bv 64) 5))))) ((_ int2bv 64) 40))) (bvshl ((_ zero_extend 56)
     (to_rep (select mem (bvadd addr ((_ int2bv 64) 6))))) ((_ int2bv 64) 48))) (bvshl ((_ zero_extend 56)
     (to_rep (select mem (bvadd addr ((_ int2bv 64) 7))))) ((_ int2bv 64) 56))))
     (dynamic_invariant result true false true)))) :pattern ((readmem64ghost
                                                             mem addr
                                                             x86__memory)) ))))

(declare-const fs (_ BitVec 64))

(declare-const gs (_ BitVec 64))

(declare-const stackaddresssize (_ BitVec 16))

(declare-const zeroflag Bool)

(declare-const carryflag Bool)

(declare-const signflag Bool)

(declare-const overflowflag Bool)

(declare-const rax (_ BitVec 64))

(declare-const rcx (_ BitVec 64))

(declare-const rdx (_ BitVec 64))

(declare-const rbx (_ BitVec 64))

(declare-const rsp (_ BitVec 64))

(declare-const rbp (_ BitVec 64))

(declare-const rsi (_ BitVec 64))

(declare-const rdi (_ BitVec 64))

(declare-const r8 (_ BitVec 64))

(declare-const r9 (_ BitVec 64))

(declare-const r10 (_ BitVec 64))

(declare-const r11 (_ BitVec 64))

(declare-const r12 (_ BitVec 64))

(declare-const r13 (_ BitVec 64))

(declare-const r14 t__ref3)

(declare-const r15 t__ref3)

(declare-const memory map__ref)

(declare-const dummy_var t__ref3)

(declare-const savestackptr t__ref3)

(declare-const savemem map__ref)

(declare-const saved_ra t__ref3)

(declare-const ra0 t__ref)

(declare-const ra1 t__ref)

(declare-const ra2 t__ref)

(declare-const ra3 t__ref)

(declare-const ra4 t__ref)

(declare-const ra5 t__ref)

(declare-const ra6 t__ref)

(declare-const ra7 t__ref)

(declare-const saved_rbp t__ref3)

(declare-const saved_rdi t__ref3)

(declare-const saved_rdx t__ref3)

(declare-const o (_ BitVec 64))

(declare-const o1 (_ BitVec 64))

(declare-const o2 (_ BitVec 64))

(declare-const o3 (_ BitVec 8))

(declare-const o4 (_ BitVec 8))

(declare-const o5 (_ BitVec 8))

(declare-const o6 (_ BitVec 8))

(declare-const o7 (_ BitVec 8))

(declare-const o8 (_ BitVec 8))

(declare-const o9 (_ BitVec 8))

(declare-const o10 (_ BitVec 8))

(declare-const o11 (_ BitVec 8))

(declare-const o12 (_ BitVec 8))

(declare-const o13 (_ BitVec 8))

(declare-const o14 (_ BitVec 8))

(declare-const o15 (_ BitVec 8))

(declare-const o16 (_ BitVec 8))

(declare-const o17 (_ BitVec 8))

(declare-const o18 (_ BitVec 8))

(declare-const o19 (_ BitVec 64))

(declare-const o20 (_ BitVec 64))

(declare-const o21 (_ BitVec 64))

(declare-const o22 (_ BitVec 64))

(declare-const o23 (_ BitVec 32))

(declare-const o24 (_ BitVec 32))

(declare-const o25 (_ BitVec 64))

(declare-const o26 (_ BitVec 32))

(declare-const o27 (_ BitVec 32))

(declare-const o28 (_ BitVec 64))

(declare-const o29 (_ BitVec 32))

(declare-const o30 (_ BitVec 32))

(declare-const o31 (_ BitVec 64))

(declare-const o32 (_ BitVec 64))

(declare-const o33 (_ BitVec 64))

(declare-const o34 (_ BitVec 64))

(declare-const o35 (_ BitVec 64))

(declare-const o36 (_ BitVec 64))

(declare-const rcx1 (_ BitVec 64))

(declare-const rdx1 (_ BitVec 64))

(declare-const result t__ref3)

(declare-const savestackptr1 (_ BitVec 64))

(declare-const result1 map__ref)

(declare-const savemem1 (Array (_ BitVec 64) unsigned8))

(declare-const result2 t__ref3)

(declare-const saved_ra1 (_ BitVec 64))

(declare-const result3 t__ref)

(declare-const ra01 (_ BitVec 8))

(declare-const result4 t__ref)

(declare-const ra11 (_ BitVec 8))

(declare-const result5 t__ref)

(declare-const ra21 (_ BitVec 8))

(declare-const result6 t__ref)

(declare-const ra31 (_ BitVec 8))

(declare-const result7 t__ref)

(declare-const ra41 (_ BitVec 8))

(declare-const result8 t__ref)

(declare-const ra51 (_ BitVec 8))

(declare-const result9 t__ref)

(declare-const ra61 (_ BitVec 8))

(declare-const result10 t__ref)

(declare-const ra71 (_ BitVec 8))

(declare-const result11 t__ref3)

(declare-const saved_rbp1 (_ BitVec 64))

(declare-const result12 t__ref3)

(declare-const saved_rdi1 (_ BitVec 64))

(declare-const result13 t__ref3)

(declare-const saved_rdx1 (_ BitVec 64))

(declare-const memory1 (Array (_ BitVec 64) unsigned8))

(declare-const result14 t__ref3)

(declare-const rsp1 (_ BitVec 64))

(declare-const result15 t__ref3)

(declare-const rbp1 (_ BitVec 64))

(declare-const memory2 (Array (_ BitVec 64) unsigned8))

(declare-const memory3 (Array (_ BitVec 64) unsigned8))

(declare-const memory4 (Array (_ BitVec 64) unsigned8))

(declare-const result16 t__ref3)

(declare-const rax1 (_ BitVec 64))

(declare-const rax2 (_ BitVec 64))

(declare-const result17 bool__ref)

(declare-const zeroflag1 Bool)

(declare-const result18 bool__ref)

(declare-const signflag1 Bool)

(declare-const result19 bool__ref)

(declare-const carryflag1 Bool)

(declare-const result20 bool__ref)

(declare-const overflowflag1 Bool)

(declare-const result21 t__ref3)

(declare-const rax3 (_ BitVec 64))

(declare-const rax4 (_ BitVec 64))

(declare-const result22 bool__ref)

(declare-const zeroflag2 Bool)

(declare-const result23 bool__ref)

(declare-const signflag2 Bool)

(declare-const result24 bool__ref)

(declare-const carryflag2 Bool)

(declare-const result25 bool__ref)

(declare-const overflowflag2 Bool)

(declare-const result26 t__ref3)

(declare-const rax5 (_ BitVec 64))

(declare-const rax6 (_ BitVec 64))

(declare-const result27 bool__ref)

(declare-const zeroflag3 Bool)

(declare-const result28 bool__ref)

(declare-const signflag3 Bool)

(declare-const result29 bool__ref)

(declare-const carryflag3 Bool)

(declare-const result30 bool__ref)

(declare-const overflowflag3 Bool)

(declare-const result31 t__ref3)

(declare-const rax7 (_ BitVec 64))

(declare-const memory5 (Array (_ BitVec 64) unsigned8))

(declare-const result32 t__ref3)

(declare-const rax8 (_ BitVec 64))

(declare-const memory6 (Array (_ BitVec 64) unsigned8))

(declare-const memory7 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag4 Bool)

(declare-const carryflag4 Bool)

(declare-const signflag4 Bool)

(declare-const overflowflag4 Bool)

(declare-const rax9 (_ BitVec 64))

(declare-const rcx2 (_ BitVec 64))

(declare-const rdx2 (_ BitVec 64))

(declare-const memory8 (Array (_ BitVec 64) unsigned8))

(declare-const result33 t__ref3)

(declare-const rax10 (_ BitVec 64))

(declare-const memory9 (Array (_ BitVec 64) unsigned8))

(declare-const result34 t__ref3)

(declare-const rax11 (_ BitVec 64))

(declare-const memory10 (Array (_ BitVec 64) unsigned8))

(declare-const memory11 (Array (_ BitVec 64) unsigned8))

(declare-const zeroflag5 Bool)

(declare-const carryflag5 Bool)

(declare-const signflag5 Bool)

(declare-const overflowflag5 Bool)

(declare-const rax12 (_ BitVec 64))

(declare-const rcx3 (_ BitVec 64))

(declare-const rdx3 (_ BitVec 64))

(declare-const memory12 (Array (_ BitVec 64) unsigned8))

(declare-const result35 t__ref3)

(declare-const rax13 (_ BitVec 64))

(declare-const result36 t__ref3)

(declare-const rbp2 (_ BitVec 64))

(declare-const result37 t__ref3)

(declare-const rsp2 (_ BitVec 64))

(declare-const result38 t__ref3)

(declare-const rsp3 (_ BitVec 64))

(declare-const zeroflag6 bool__ref)

(declare-const carryflag6 bool__ref)

(declare-const signflag6 bool__ref)

(declare-const overflowflag6 bool__ref)

(declare-const rax14 t__ref3)

(declare-const rcx4 t__ref3)

(declare-const rdx4 t__ref3)

(declare-const rsp4 t__ref3)

(declare-const rbp3 t__ref3)

(declare-const memory13 map__ref)

(declare-const savestackptr2 t__ref3)

(declare-const savemem2 map__ref)

(declare-const saved_ra2 t__ref3)

(declare-const ra02 t__ref)

(declare-const ra12 t__ref)

(declare-const ra22 t__ref)

(declare-const ra32 t__ref)

(declare-const ra42 t__ref)

(declare-const ra52 t__ref)

(declare-const ra62 t__ref)

(declare-const ra72 t__ref)

(declare-const saved_rbp2 t__ref3)

(declare-const saved_rdi2 t__ref3)

(declare-const saved_rdx2 t__ref3)

(declare-const zeroflag7 Bool)

(declare-const carryflag7 Bool)

(declare-const signflag7 Bool)

(declare-const overflowflag7 Bool)

(declare-const rax15 (_ BitVec 64))

(declare-const rcx5 (_ BitVec 64))

(declare-const rdx5 (_ BitVec 64))

(declare-const rsp5 (_ BitVec 64))

(declare-const rbp4 (_ BitVec 64))

(declare-const memory14 (Array (_ BitVec 64) unsigned8))

(declare-const savestackptr3 (_ BitVec 64))

(declare-const savemem3 (Array (_ BitVec 64) unsigned8))

(declare-const saved_ra3 (_ BitVec 64))

(declare-const ra03 (_ BitVec 8))

(declare-const ra13 (_ BitVec 8))

(declare-const ra23 (_ BitVec 8))

(declare-const ra33 (_ BitVec 8))

(declare-const ra43 (_ BitVec 8))

(declare-const ra53 (_ BitVec 8))

(declare-const ra63 (_ BitVec 8))

(declare-const ra73 (_ BitVec 8))

(declare-const saved_rbp3 (_ BitVec 64))

(declare-const saved_rdi3 (_ BitVec 64))

(declare-const saved_rdx3 (_ BitVec 64))

(define-fun rbp5 () t__ref3 (mk_t__ref3 rbp))

(define-fun rsp6 () t__ref3 (mk_t__ref3 rsp))

(define-fun rax16 () t__ref3 (mk_t__ref3 rax))

(define-fun overflowflag8 () bool__ref (mk_bool__ref overflowflag))

(define-fun signflag8 () bool__ref (mk_bool__ref signflag))

(define-fun carryflag8 () bool__ref (mk_bool__ref carryflag))

(define-fun zeroflag8 () bool__ref (mk_bool__ref zeroflag))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=> (= (inrange64 i rdi rdx) true) (= (insaferegion64 i rsp) true)))))

;; H
  (assert
  (and
  (and
  (and (= o rsp)
  (and (= result savestackptr)
  (= (let ((subject savestackptr)) savestackptr1) o)))
  (and
  (and (= result1 savemem)
  (= (let ((subject savemem)) savemem1) (map__content memory)))
  (and
  (and
  (and
  (and (= o1 (readmem64 rsp (map__content memory)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o1 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                        (select (map__content
                                                                memory)
                                                        rsp))))
  (= (bvand o1 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                 (select
                                                                 (map__content
                                                                 memory) (bvadd
                                                                 rsp ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o1 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (map__content
                                                                    memory) (bvadd
                                                                    rsp ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o1 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o1 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o1 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o1 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o1 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (= o2 o1))
  (and (= result2 saved_ra) (= (let ((subject saved_ra)) saved_ra1) o2)))
  (and
  (and
  (and
  (and (= o3 (readmem8 rsp (map__content memory)))
  (= o3 (to_rep (select (map__content memory) rsp)))) (= o4 o3))
  (and (= result3 ra0) (= (let ((subject ra0)) ra01) o4)))
  (and
  (and
  (and
  (and (= o5 (readmem8 (bvadd rsp ((_ int2bv 64) 1)) (map__content memory)))
  (= o5 (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 1))))))
  (= o6 o5)) (and (= result4 ra1) (= (let ((subject ra1)) ra11) o6)))
  (and
  (and
  (and
  (and (= o7 (readmem8 (bvadd rsp ((_ int2bv 64) 2)) (map__content memory)))
  (= o7 (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 2))))))
  (= o8 o7)) (and (= result5 ra2) (= (let ((subject ra2)) ra21) o8)))
  (and
  (and
  (and
  (and (= o9 (readmem8 (bvadd rsp ((_ int2bv 64) 3)) (map__content memory)))
  (= o9 (to_rep (select (map__content memory) (bvadd rsp ((_ int2bv 64) 3))))))
  (= o10 o9)) (and (= result6 ra3) (= (let ((subject ra3)) ra31) o10)))
  (and
  (and
  (and
  (and (= o11 (readmem8 (bvadd rsp ((_ int2bv 64) 4)) (map__content memory)))
  (= o11 (to_rep
         (select (map__content memory) (bvadd rsp ((_ int2bv 64) 4))))))
  (= o12 o11)) (and (= result7 ra4) (= (let ((subject ra4)) ra41) o12)))
  (and
  (and
  (and
  (and (= o13 (readmem8 (bvadd rsp ((_ int2bv 64) 5)) (map__content memory)))
  (= o13 (to_rep
         (select (map__content memory) (bvadd rsp ((_ int2bv 64) 5))))))
  (= o14 o13)) (and (= result8 ra5) (= (let ((subject ra5)) ra51) o14)))
  (and
  (and
  (and
  (and (= o15 (readmem8 (bvadd rsp ((_ int2bv 64) 6)) (map__content memory)))
  (= o15 (to_rep
         (select (map__content memory) (bvadd rsp ((_ int2bv 64) 6))))))
  (= o16 o15)) (and (= result9 ra6) (= (let ((subject ra6)) ra61) o16)))
  (and
  (and
  (and
  (and (= o17 (readmem8 (bvadd rsp ((_ int2bv 64) 7)) (map__content memory)))
  (= o17 (to_rep
         (select (map__content memory) (bvadd rsp ((_ int2bv 64) 7))))))
  (= o18 o17)) (and (= result10 ra7) (= (let ((subject ra7)) ra71) o18)))
  (and
  (and (= o19 rbp)
  (and (= result11 saved_rbp) (= (let ((subject saved_rbp)) saved_rbp1) o19)))
  (and
  (and (= o20 rdi)
  (and (= result12 saved_rdi) (= (let ((subject saved_rdi)) saved_rdi1) o20)))
  (and
  (and (= o21 rdx)
  (and (= result13 saved_rdx) (= (let ((subject saved_rdx)) saved_rdx1) o21)))
  (and (= rsp ((_ int2bv 64) 12105675798371893247))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rbp ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory1) (bvsub
                                                         rsp ((_ int2bv 64) 8))))))
  (= (bvand rbp ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory1) (bvadd (bvsub
                                                                  rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rbp ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rbp ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rbp ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rbp ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rbp ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rbp ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory1) (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rsp ((_ int2bv 64) 8))))
  (not (= i (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rsp ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory1) i)) (to_rep
                                                          (select (map__content
                                                                  memory) i)))))))
  (and (and (= result14 rsp6) (= rsp1 (bvsub rsp ((_ int2bv 64) 8))))
  (and (and (= result15 rbp5) (= rbp1 rsp1))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rdi ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory2) (bvsub
                                                         rbp1 ((_ int2bv 64) 56))))))
  (= (bvand rdi ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory2) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rdi ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rdi ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rdi ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rdi ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rdi ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rdi ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory2) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 56))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory2) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory1) i)))))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rsi ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory3) (bvsub
                                                         rbp1 ((_ int2bv 64) 64))))))
  (= (bvand rsi ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory3) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rsi ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rsi ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rsi ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rsi ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rsi ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rsi ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory3) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 64))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory3) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory2) i)))))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rdx ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory4) (bvsub
                                                         rbp1 ((_ int2bv 64) 72))))))
  (= (bvand rdx ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory4) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rdx ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rdx ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rdx ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rdx ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rdx ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rdx ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 72))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory4) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory3) i)))))))
  (and
  (and
  (and
  (= o22 (readmem64 (bvsub rbp1 ((_ int2bv 64) 56))
         (let ((subject memory)) memory4)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o22 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory4) (bvsub
                                                         rbp1 ((_ int2bv 64) 56))))))
  (= (bvand o22 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory4) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o22 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o22 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o22 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o22 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o22 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o22 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result16 rax16) (= rax1 o22)))
  (and
  (and
  (and
  (and (= o23 (eax rax1))
  (= o23 ((_ extract 31 0) (bvand rax1 ((_ int2bv 64) 4294967295)))))
  (= o24 (bvand o23 ((_ int2bv 32) 7)))) (= (writereg32post rax2 o24) true))
  (and
  (and (= result17 zeroflag8)
  (= zeroflag1 (ite (= rax2 ((_ int2bv 64) 0)) true false)))
  (and
  (and (= result18 signflag8)
  (= signflag1 (ite (bvugt rax2 ((_ int2bv 64) 9223372036854775807)) true
               false)))
  (and (and (= result19 carryflag8) (= carryflag1 (of_int 0)))
  (and (and (= result20 overflowflag8) (= overflowflag1 (of_int 0)))
  (and
  (ite (= zeroflag1 true)
  (and
  (and
  (and
  (= o25 (readmem64 (bvsub rbp1 ((_ int2bv 64) 64))
         (let ((subject memory)) memory4)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o25 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory4) (bvsub
                                                         rbp1 ((_ int2bv 64) 64))))))
  (= (bvand o25 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory4) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o25 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o25 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o25 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o25 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o25 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o25 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result21 (mk_t__ref3 rax2)) (= rax3 o25)))
  (and
  (and
  (and
  (and (= o26 (eax rax3))
  (= o26 ((_ extract 31 0) (bvand rax3 ((_ int2bv 64) 4294967295)))))
  (= o27 (bvand o26 ((_ int2bv 32) 7)))) (= (writereg32post rax4 o27) true))
  (and
  (and (= result22 (mk_bool__ref zeroflag1))
  (= zeroflag2 (ite (= rax4 ((_ int2bv 64) 0)) true false)))
  (and
  (and (= result23 (mk_bool__ref signflag1))
  (= signflag2 (ite (bvugt rax4 ((_ int2bv 64) 9223372036854775807)) true
               false)))
  (and (and (= result24 (mk_bool__ref carryflag1)) (= carryflag2 (of_int 0)))
  (and
  (and (= result25 (mk_bool__ref overflowflag1))
  (= overflowflag2 (of_int 0)))
  (ite (= zeroflag2 true)
  (and
  (and
  (and
  (= o28 (readmem64 (bvsub rbp1 ((_ int2bv 64) 72))
         (let ((subject memory)) memory4)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o28 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory4) (bvsub
                                                         rbp1 ((_ int2bv 64) 72))))))
  (= (bvand o28 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory4) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o28 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o28 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o28 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o28 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o28 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o28 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result26 (mk_t__ref3 rax4)) (= rax5 o28)))
  (and
  (and
  (and
  (and (= o29 (eax rax5))
  (= o29 ((_ extract 31 0) (bvand rax5 ((_ int2bv 64) 4294967295)))))
  (= o30 (bvand o29 ((_ int2bv 32) 7)))) (= (writereg32post rax6 o30) true))
  (and
  (and (= result27 (mk_bool__ref zeroflag2))
  (= zeroflag3 (ite (= rax6 ((_ int2bv 64) 0)) true false)))
  (and
  (and (= result28 (mk_bool__ref signflag2))
  (= signflag3 (ite (bvugt rax6 ((_ int2bv 64) 9223372036854775807)) true
               false)))
  (and (and (= result29 (mk_bool__ref carryflag2)) (= carryflag3 (of_int 0)))
  (and
  (and (= result30 (mk_bool__ref overflowflag2))
  (= overflowflag3 (of_int 0)))
  (ite (= zeroflag3 true)
  (and
  (and
  (and
  (= o31 (readmem64 (bvsub rbp1 ((_ int2bv 64) 56))
         (let ((subject memory)) memory4)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o31 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory4) (bvsub
                                                         rbp1 ((_ int2bv 64) 56))))))
  (= (bvand o31 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory4) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o31 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o31 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o31 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o31 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o31 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o31 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result31 (mk_t__ref3 rax6)) (= rax7 o31)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rax7 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory5) (bvsub
                                                          rbp1 ((_ int2bv 64) 16))))))
  (= (bvand rax7 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory5) (bvadd (bvsub
                                                                   rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rax7 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rax7 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rax7 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rax7 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rax7 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rax7 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 16))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory5) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory4) i)))))))
  (and
  (and
  (and
  (= o32 (readmem64 (bvsub rbp1 ((_ int2bv 64) 64))
         (let ((subject memory)) memory5)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o32 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory5) (bvsub
                                                         rbp1 ((_ int2bv 64) 64))))))
  (= (bvand o32 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory5) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o32 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o32 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o32 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o32 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o32 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o32 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory5) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result32 (mk_t__ref3 rax7)) (= rax8 o32)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rax8 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) (bvsub
                                                          rbp1 ((_ int2bv 64) 24))))))
  (= (bvand rax8 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                   (select
                                                                   (let ((subject
                                                                   memory))
                                                                   memory6) (bvadd (bvsub
                                                                   rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rax8 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rax8 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rax8 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rax8 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rax8 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rax8 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory6) (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 24))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 24)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory6) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory5) i)))))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvsub rbp1 ((_ int2bv 64) 8))))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 8))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory7) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory6) i)))))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (not
  (= (inrange64 i
     (readmem64 (bvsub rbp1 ((_ int2bv 64) 16))
     (let ((subject memory)) memory8))
     (readmem64 (bvsub rbp1 ((_ int2bv 64) 72))
     (let ((subject memory)) memory8))) true))
  (not
  (= (inrange64 i (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 8)) true)))
  (= (to_rep (select (let ((subject memory)) memory8) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory7) i))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvsub rbp1 ((_ int2bv 64) 16))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvsub rbp1 ((_ int2bv 64) 16))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 16)) ((_ int2bv 64) 7))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvsub rbp1 ((_ int2bv 64) 72))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvsub rbp1 ((_ int2bv 64) 72))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 7))))))
  (bvuge (readmem64ghost (let ((subject memory)) memory8)
         (bvsub rbp1 ((_ int2bv 64) 8)) (let ((subject memory)) memory8)) (bvudiv
  (readmem64ghost (let ((subject memory)) memory8)
  (bvsub rbp1 ((_ int2bv 64) 72)) (let ((subject memory)) memory8)) ((_ int2bv 64) 8))))
  (= (to_rep (select (let ((subject memory)) memory8) rbp1)) (to_rep
                                                             (select
                                                             (let ((subject
                                                             memory))
                                                             memory7)
                                                             rbp1))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rbp1 ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rbp1 ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rbp1 ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rbp1 ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rbp1 ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rbp1 ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rbp1 ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rbp1 ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rbp1 ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rbp1 ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rbp1 ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rbp1 ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rbp1 ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rbp1 ((_ int2bv 64) 7))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd rsp1 ((_ int2bv 64) 8))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd rsp1 ((_ int2bv 64) 8))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory7) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))))))))
  (and
  (and
  (and
  (and
  (= o33 (readmem64 (bvsub rbp1 ((_ int2bv 64) 56))
         (let ((subject memory)) memory4)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o33 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory4) (bvsub
                                                         rbp1 ((_ int2bv 64) 56))))))
  (= (bvand o33 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory4) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o33 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o33 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o33 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o33 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o33 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o33 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory4) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result33 (mk_t__ref3 rax6)) (= rax10 o33)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rax10 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory9) (bvsub
                                                           rbp1 ((_ int2bv 64) 32))))))
  (= (bvand rax10 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory9) (bvadd (bvsub
                                                                    rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rax10 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rax10 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rax10 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rax10 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rax10 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rax10 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 32))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory9) i)) (to_rep
                                                          (select (let ((subject
                                                                  memory))
                                                                  memory4) i)))))))
  (and
  (and
  (and
  (= o34 (readmem64 (bvsub rbp1 ((_ int2bv 64) 64))
         (let ((subject memory)) memory9)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o34 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory9) (bvsub
                                                         rbp1 ((_ int2bv 64) 64))))))
  (= (bvand o34 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory9) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o34 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o34 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o34 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o34 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o34 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o34 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory9) (bvadd (bvsub rbp1 ((_ int2bv 64) 64)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result34 (mk_t__ref3 rax10)) (= rax11 o34)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand rax11 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory10) (bvsub
                                                           rbp1 ((_ int2bv 64) 40))))))
  (= (bvand rax11 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                    (select
                                                                    (let ((subject
                                                                    memory))
                                                                    memory10) (bvadd (bvsub
                                                                    rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand rax11 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand rax11 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand rax11 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand rax11 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand rax11 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand rax11 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory10) (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 40))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 40)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory10) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory9) i)))))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 255)) ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvsub rbp1 ((_ int2bv 64) 8))))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand ((_ int2bv 64) 0) ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936))))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (and
  (and
  (and
  (and
  (and
  (and (not (= i (bvsub rbp1 ((_ int2bv 64) 8))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6)))))
  (not (= i (bvadd (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))
  (= (to_rep (select (let ((subject memory)) memory11) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory10) i)))))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (not
  (= (inrange64 i
     (readmem64 (bvsub rbp1 ((_ int2bv 64) 32))
     (let ((subject memory)) memory12))
     (readmem64 (bvsub rbp1 ((_ int2bv 64) 72))
     (let ((subject memory)) memory12))) true))
  (not
  (= (inrange64 i (bvsub rbp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 8)) true)))
  (= (to_rep (select (let ((subject memory)) memory12) i)) (to_rep
                                                           (select (let ((subject
                                                                   memory))
                                                                   memory11) i))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvsub rbp1 ((_ int2bv 64) 32))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvsub rbp1 ((_ int2bv 64) 32))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 32)) ((_ int2bv 64) 7))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvsub rbp1 ((_ int2bv 64) 72))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvsub rbp1 ((_ int2bv 64) 72))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvsub rbp1 ((_ int2bv 64) 72)) ((_ int2bv 64) 7))))))
  (bvuge (readmem64ghost (let ((subject memory)) memory12)
         (bvsub rbp1 ((_ int2bv 64) 8)) (let ((subject memory)) memory12))
  (readmem64ghost (let ((subject memory)) memory12)
  (bvsub rbp1 ((_ int2bv 64) 72)) (let ((subject memory)) memory12))))
  (= (to_rep (select (let ((subject memory)) memory12) rbp1)) (to_rep
                                                              (select
                                                              (let ((subject
                                                              memory))
                                                              memory11)
                                                              rbp1))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rbp1 ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rbp1 ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rbp1 ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rbp1 ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rbp1 ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rbp1 ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rbp1 ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rbp1 ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rbp1 ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rbp1 ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rbp1 ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rbp1 ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rbp1 ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rbp1 ((_ int2bv 64) 7))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd rsp1 ((_ int2bv 64) 8))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd rsp1 ((_ int2bv 64) 8))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory12) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject memory)) memory11) (bvadd (bvadd rsp1 ((_ int2bv 64) 8)) ((_ int2bv 64) 7)))))))))))
  (and
  (and
  (= (let ((subject memory)) (mk_map__ref memory8)) (let ((subject memory))
                                                    (mk_map__ref memory12)))
  (and (= rdx2 rdx3)
  (and (= rcx2 rcx3)
  (and (= rax9 rax12)
  (and (= overflowflag4 overflowflag5)
  (and (= signflag4 signflag5)
  (and (= carryflag4 carryflag5) (= zeroflag4 zeroflag5))))))))
  (and (= memory8 memory12)
  (and (= rdx2 rdx3)
  (and (= rcx2 rcx3)
  (and (= rax9 rax12)
  (and (= overflowflag4 overflowflag5)
  (and (= signflag4 signflag5)
  (and (= carryflag4 carryflag5) (= zeroflag4 zeroflag5)))))))))))))))))
  (and
  (and
  (= (let ((subject memory)) (mk_map__ref memory8)) (let ((subject memory))
                                                    (mk_map__ref memory4)))
  (and (= rdx2 rdx)
  (and (= rcx2 rcx)
  (and (= rax9 rax4)
  (and (= overflowflag4 overflowflag2)
  (and (= signflag4 signflag2)
  (and (= carryflag4 carryflag2) (= zeroflag4 zeroflag2))))))))
  (and (= memory8 memory4)
  (and (= rdx2 rdx1)
  (and (= rcx2 rcx1)
  (and (= rax9 rax4)
  (and (= overflowflag4 overflowflag2)
  (and (= signflag4 signflag2)
  (and (= carryflag4 carryflag2) (= zeroflag4 zeroflag2))))))))))))))))
  (and
  (and
  (= (let ((subject memory)) (mk_map__ref memory8)) (let ((subject memory))
                                                    (mk_map__ref memory4)))
  (and (= rdx2 rdx)
  (and (= rcx2 rcx)
  (and (= rax9 rax2)
  (and (= overflowflag4 overflowflag1)
  (and (= signflag4 signflag1)
  (and (= carryflag4 carryflag1) (= zeroflag4 zeroflag1))))))))
  (and (= memory8 memory4)
  (and (= rdx2 rdx1)
  (and (= rcx2 rcx1)
  (and (= rax9 rax2)
  (and (= overflowflag4 overflowflag1)
  (and (= signflag4 signflag1)
  (and (= carryflag4 carryflag1) (= zeroflag4 zeroflag1))))))))))
  (and
  (and
  (and
  (= o35 (readmem64 (bvsub rbp1 ((_ int2bv 64) 56))
         (let ((subject memory)) memory8)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o35 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory8) (bvsub
                                                         rbp1 ((_ int2bv 64) 56))))))
  (= (bvand o35 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory8) (bvadd (bvsub
                                                                  rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o35 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o35 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o35 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o35 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o35 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o35 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd (bvsub rbp1 ((_ int2bv 64) 56)) ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result35 (mk_t__ref3 rax9)) (= rax13 o35)))
  (and
  (and
  (and (= o36 (readmem64 rsp1 (let ((subject memory)) memory8)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (bvand o36 ((_ int2bv 64) 255)) ((_ zero_extend 56) (to_rep
                                                         (select (let ((subject
                                                                 memory))
                                                                 memory8)
                                                         rsp1))))
  (= (bvand o36 ((_ int2bv 64) 65280)) (bvmul ((_ zero_extend 56) (to_rep
                                                                  (select
                                                                  (let ((subject
                                                                  memory))
                                                                  memory8) (bvadd
                                                                  rsp1 ((_ int2bv 64) 1))))) ((_ int2bv 64) 256))))
  (= (bvand o36 ((_ int2bv 64) 16711680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd rsp1 ((_ int2bv 64) 2))))) ((_ int2bv 64) 65536))))
  (= (bvand o36 ((_ int2bv 64) 4278190080)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd rsp1 ((_ int2bv 64) 3))))) ((_ int2bv 64) 16777216))))
  (= (bvand o36 ((_ int2bv 64) 1095216660480)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd rsp1 ((_ int2bv 64) 4))))) ((_ int2bv 64) 4294967296))))
  (= (bvand o36 ((_ int2bv 64) 280375465082880)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd rsp1 ((_ int2bv 64) 5))))) ((_ int2bv 64) 1099511627776))))
  (= (bvand o36 ((_ int2bv 64) 71776119061217280)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd rsp1 ((_ int2bv 64) 6))))) ((_ int2bv 64) 281474976710656))))
  (= (bvand o36 ((_ int2bv 64) 18374686479671623680)) (bvmul ((_ zero_extend 56)
  (to_rep
  (select (let ((subject memory)) memory8) (bvadd rsp1 ((_ int2bv 64) 7))))) ((_ int2bv 64) 72057594037927936)))))
  (and (= result36 (mk_t__ref3 rbp1)) (= rbp2 o36)))
  (and
  (and (= result37 (mk_t__ref3 rsp1))
  (= rsp2 (bvadd rsp1 ((_ int2bv 64) 8))))
  (and
  (and (= result38 (mk_t__ref3 rsp2))
  (= rsp3 (bvadd rsp2 ((_ int2bv 64) 8))))
  (and
  (= rsp3 (bvadd (let ((subject savestackptr)) savestackptr1) ((_ int2bv 64) 8)))
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (and
  (= (to_rep
     (select (let ((subject memory)) memory8) (let ((subject savestackptr))
                                              savestackptr1))) (to_rep
                                                               (select
                                                               (let ((subject
                                                               savemem))
                                                               savemem1)
                                                               (let ((subject
                                                               savestackptr))
                                                               savestackptr1))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (let ((subject savestackptr))
                                                     savestackptr1) ((_ int2bv 64) 1))))
  (to_rep
  (select (let ((subject savemem)) savemem1) (bvadd (let ((subject savestackptr))
                                                    savestackptr1) ((_ int2bv 64) 1))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (let ((subject savestackptr))
                                                     savestackptr1) ((_ int2bv 64) 2))))
  (to_rep
  (select (let ((subject savemem)) savemem1) (bvadd (let ((subject savestackptr))
                                                    savestackptr1) ((_ int2bv 64) 2))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (let ((subject savestackptr))
                                                     savestackptr1) ((_ int2bv 64) 3))))
  (to_rep
  (select (let ((subject savemem)) savemem1) (bvadd (let ((subject savestackptr))
                                                    savestackptr1) ((_ int2bv 64) 3))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (let ((subject savestackptr))
                                                     savestackptr1) ((_ int2bv 64) 4))))
  (to_rep
  (select (let ((subject savemem)) savemem1) (bvadd (let ((subject savestackptr))
                                                    savestackptr1) ((_ int2bv 64) 4))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (let ((subject savestackptr))
                                                     savestackptr1) ((_ int2bv 64) 5))))
  (to_rep
  (select (let ((subject savemem)) savemem1) (bvadd (let ((subject savestackptr))
                                                    savestackptr1) ((_ int2bv 64) 5))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (let ((subject savestackptr))
                                                     savestackptr1) ((_ int2bv 64) 6))))
  (to_rep
  (select (let ((subject savemem)) savemem1) (bvadd (let ((subject savestackptr))
                                                    savestackptr1) ((_ int2bv 64) 6))))))
  (= (to_rep
     (select (let ((subject memory)) memory8) (bvadd (let ((subject savestackptr))
                                                     savestackptr1) ((_ int2bv 64) 7))))
  (to_rep
  (select (let ((subject savemem)) savemem1) (bvadd (let ((subject savestackptr))
                                                    savestackptr1) ((_ int2bv 64) 7))))))
  (and (= rbp2 (let ((subject saved_rbp)) saved_rbp1))
  (forall ((i (_ BitVec 64)))
  (=>
  (and (bvule ((_ int2bv 64) 0) i)
  (bvule i ((_ int2bv 64) 18446744073709551615)))
  (=>
  (and
  (not
  (= (inrange64 i (let ((subject saved_rdi)) saved_rdi1)
     (let ((subject saved_rdx)) saved_rdx1)) true))
  (= (insaferegion64 i (let ((subject savestackptr)) savestackptr1)) true))
  (= (to_rep (select (let ((subject memory)) memory8) i)) (to_rep
                                                          (select (let ((subject
                                                                  savemem))
                                                                  savemem1) i)))))))))))))))))))))))))))))))))))))))))
  (and
  (and (= saved_rdx2 (let ((subject saved_rdx)) (mk_t__ref3 saved_rdx1)))
  (and (= saved_rdi2 (let ((subject saved_rdi)) (mk_t__ref3 saved_rdi1)))
  (and (= saved_rbp2 (let ((subject saved_rbp)) (mk_t__ref3 saved_rbp1)))
  (and (= ra72 (let ((subject ra7)) (mk_t__ref ra71)))
  (and (= ra62 (let ((subject ra6)) (mk_t__ref ra61)))
  (and (= ra52 (let ((subject ra5)) (mk_t__ref ra51)))
  (and (= ra42 (let ((subject ra4)) (mk_t__ref ra41)))
  (and (= ra32 (let ((subject ra3)) (mk_t__ref ra31)))
  (and (= ra22 (let ((subject ra2)) (mk_t__ref ra21)))
  (and (= ra12 (let ((subject ra1)) (mk_t__ref ra11)))
  (and (= ra02 (let ((subject ra0)) (mk_t__ref ra01)))
  (and (= saved_ra2 (let ((subject saved_ra)) (mk_t__ref3 saved_ra1)))
  (and (= savemem2 (let ((subject savemem)) (mk_map__ref savemem1)))
  (and
  (= savestackptr2 (let ((subject savestackptr)) (mk_t__ref3 savestackptr1)))
  (and (= memory13 (let ((subject memory)) (mk_map__ref memory8)))
  (and (= rbp3 (mk_t__ref3 rbp2))
  (and (= rsp4 (mk_t__ref3 rsp3))
  (and (= rdx4 (mk_t__ref3 rdx2))
  (and (= rcx4 (mk_t__ref3 rcx2))
  (and (= rax14 (mk_t__ref3 rax13))
  (and (= overflowflag6 (mk_bool__ref overflowflag4))
  (and (= signflag6 (mk_bool__ref signflag4))
  (and (= carryflag6 (mk_bool__ref carryflag4))
  (= zeroflag6 (mk_bool__ref zeroflag4)))))))))))))))))))))))))
  (and (= saved_rdx3 saved_rdx1)
  (and (= saved_rdi3 saved_rdi1)
  (and (= saved_rbp3 saved_rbp1)
  (and (= ra73 ra71)
  (and (= ra63 ra61)
  (and (= ra53 ra51)
  (and (= ra43 ra41)
  (and (= ra33 ra31)
  (and (= ra23 ra21)
  (and (= ra13 ra11)
  (and (= ra03 ra01)
  (and (= saved_ra3 saved_ra1)
  (and (= savemem3 savemem1)
  (and (= savestackptr3 savestackptr1)
  (and (= memory14 memory8)
  (and (= rbp4 rbp2)
  (and (= rsp5 rsp3)
  (and (= rdx5 rdx2)
  (and (= rcx5 rcx2)
  (and (= rax15 rax13)
  (and (= overflowflag7 overflowflag4)
  (and (= signflag7 signflag4)
  (and (= carryflag7 carryflag4) (= zeroflag7 zeroflag4)))))))))))))))))))))))))))

(assert
;; WP_parameter_def
 ;; File "x86.ads", line 334, characters 0-0
  (not (= (t__content3 rsp4) (bvadd rsp ((_ int2bv 64) 8)))))
(check-sat)
(exit)
