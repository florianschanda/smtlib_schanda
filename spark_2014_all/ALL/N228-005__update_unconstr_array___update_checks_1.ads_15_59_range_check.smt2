;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-sort tindexB 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (tindexB tindexB) Bool)

(declare-fun dummy1 () tindexB)

(declare-datatypes ()
((tindexB__ref (mk_tindexB__ref (tindexB__content tindexB)))))
(define-fun tindexB__ref___projection ((a tindexB__ref)) tindexB (tindexB__content
                                                                 a))

(declare-fun to_rep (tindexB) Int)

(declare-fun of_rep (Int) tindexB)

;; inversion_axiom
  (assert
  (forall ((x tindexB)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x tindexB)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort index 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (index index) Bool)

(declare-fun dummy2 () index)

(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))

(define-fun dynamic_invariant1 ((temp___expr_139 Int)
  (temp___is_init_136 Bool) (temp___skip_constant_137 Bool)
  (temp___do_toplevel_138 Bool)) Bool (=>
                                      (or (= temp___is_init_136 true)
                                      (<= 1 8)) (in_range2 temp___expr_139)))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                             (of_rep1 x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort t 0)

(declare-fun first (t) tindexB)

(declare-fun last (t) tindexB)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int integer)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int integer)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-datatypes ()
((array_u__ref (mk_array_u__ref (array_u__content us_t)))))
(define-fun array_u__ref___projection ((a array_u__ref)) us_t (array_u__content
                                                              a))

(declare-fun a__first () tindexB)

(declare-fun a__last () tindexB)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun i () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun j () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun k () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun l () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun new_val () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (tindexB tindexB) Bool)

(declare-fun dummy4 () tindexB)

(declare-datatypes ()
((tS4bP1__ref (mk_tS4bP1__ref (tS4bP1__content tindexB)))))
(define-fun tS4bP1__ref___projection ((a tS4bP1__ref)) tindexB (tS4bP1__content
                                                               a))

(declare-fun temp___245 (us_t Int Int Int Int Int Int Int) us_t)

;; def_axiom
  (assert
  (forall ((temp___247 us_t))
  (forall ((temp___248 Int) (temp___249 Int) (temp___250 Int)
  (temp___251 Int) (temp___252 Int) (temp___253 Int) (temp___254 Int))
  (let ((temp___246 (temp___245 temp___247 temp___248 temp___249 temp___250
                    temp___251 temp___252 temp___253 temp___254)))
  (and
  (and (= (first1 temp___246) (first1 temp___247))
  (= (last1 temp___246) (last1 temp___247)))
  (forall ((temp___255 Int))
  (ite (or (and (<= temp___251 temp___255) (<= temp___255 temp___252))
       (= temp___255 temp___253))
  (= (select (to_array temp___246) temp___255) (of_rep1 temp___254))
  (ite (and (<= temp___248 temp___255) (<= temp___255 temp___249))
  (= (select (to_array temp___246) temp___255) (of_rep1 temp___250))
  (= (select (to_array temp___246) temp___255) (select (to_array temp___247) temp___255))))))))))

(declare-fun temp___422 (us_t Int Int Int Int Int Int Int) us_t)

;; def_axiom
  (assert
  (forall ((temp___424 us_t))
  (forall ((temp___425 Int) (temp___426 Int) (temp___427 Int)
  (temp___428 Int) (temp___429 Int) (temp___430 Int) (temp___431 Int))
  (let ((temp___423 (temp___422 temp___424 temp___425 temp___426 temp___427
                    temp___428 temp___429 temp___430 temp___431)))
  (and
  (and (= (first1 temp___423) (first1 temp___424))
  (= (last1 temp___423) (last1 temp___424)))
  (forall ((temp___432 Int))
  (ite (or (and (<= temp___428 temp___432) (<= temp___432 temp___429))
       (= temp___432 temp___430))
  (= (select (to_array temp___423) temp___432) (of_rep1 temp___431))
  (ite (and (<= temp___425 temp___432) (<= temp___432 temp___426))
  (= (select (to_array temp___423) temp___432) (of_rep1 temp___427))
  (= (select (to_array temp___423) temp___432) (select (to_array temp___424) temp___432))))))))))

(define-fun dynamic_invariant2 ((temp___expr_157 us_t)
  (temp___is_init_154 Bool) (temp___skip_constant_155 Bool)
  (temp___do_toplevel_156 Bool)) Bool (=>
                                      (not (= temp___skip_constant_155 true))
                                      (dynamic_property 1 8
                                      (first1 temp___expr_157)
                                      (last1 temp___expr_157))))

(declare-fun a () (Array Int integer))

(declare-fun us () Int)

(declare-fun us1 () Int)

(declare-fun us2 () Int)

(declare-fun us3 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun temp___433 () (Array Int integer))

(declare-fun temp___4331 () t)

(declare-fun temp___434 () (Array Int integer))

(declare-fun temp___4341 () t)

(declare-fun o4 () (Array Int integer))

(declare-fun result () (Array Int integer))

(declare-fun a1 () (Array Int integer))

(declare-fun a2 () (Array Int integer))

(declare-fun a3 () (Array Int integer))

(define-fun temp___4332 () us_t (mk___t temp___433 temp___4331))

;; H
  (assert (dynamic_property 1 8 (to_rep a__first) (to_rep a__last)))

;; H
  (assert (in_range2 i))

;; H
  (assert (in_range2 j))

;; H
  (assert (in_range2 k))

;; H
  (assert (in_range2 l))

;; H
  (assert (in_range new_val))

;; H
  (assert
  (and (= us3 l) (dynamic_property1 (to_rep a__first) (to_rep a__last) l)))

;; H
  (assert (= o l))

;; H
  (assert
  (and (= us2 k) (dynamic_property1 (to_rep a__first) (to_rep a__last) k)))

;; H
  (assert (= o1 k))

;; H
  (assert
  (and (= us1 j) (dynamic_property1 (to_rep a__first) (to_rep a__last) j)))

;; H
  (assert (= o2 j))

;; H
  (assert
  (and (= us i) (dynamic_property1 (to_rep a__first) (to_rep a__last) i)))

;; H
  (assert (= o3 i))

;; H
  (assert
  (= temp___4332 (temp___422
                 (mk___t a (mk (to_rep a__first) (to_rep a__last))) 1
                 o3 0 o2 o1 o new_val)))

;; H
  (assert
  (= (ite (<= (to_rep (first temp___4331)) (to_rep (last temp___4331)))
     (+ (- (to_rep (last temp___4331)) (to_rep (first temp___4331))) 1) 0)
  (ite (<= (to_rep a__first) (to_rep a__last))
  (+ (- (to_rep a__last) (to_rep a__first)) 1) 0)))

;; H
  (assert (= (mk___t temp___434 temp___4341) temp___4332))

;; H
  (assert
  (= o4 (slide temp___434 (to_rep (first temp___4341)) (to_rep a__first))))

;; H
  (assert (= (mk_map__ref result) (mk_map__ref a)))

;; H
  (assert (= a1 o4))

;; H
  (assert (= a1 a2))

;; H
  (assert (= a3 a1))

(assert
;; WP_parameter_def
 ;; File "update_checks_1.ads", line 12, characters 0-0
  (not (in_range2 l)))
(check-sat)
(exit)
