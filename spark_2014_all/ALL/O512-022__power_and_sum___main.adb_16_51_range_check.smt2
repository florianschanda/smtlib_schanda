;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun temp___String_Literal_511 (tuple0) (Array Int character))

;; temp___String_Literal_511__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_511 us_void_param) 1)) 83)
     (= (to_rep (select (temp___String_Literal_511 us_void_param) 2)) 117))
     (= (to_rep (select (temp___String_Literal_511 us_void_param) 3)) 109))
     (= (to_rep (select (temp___String_Literal_511 us_void_param) 4)) 40)) :pattern (
  (temp___String_Literal_511 us_void_param)) )))

(declare-fun temp___String_Literal_514 (tuple0) (Array Int character))

;; temp___String_Literal_514__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 2)) 41))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 3)) 32))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 4)) 61))
     (= (to_rep (select (temp___String_Literal_514 us_void_param) 5)) 32)) :pattern (
  (temp___String_Literal_514 us_void_param)) )))

(declare-fun temp___String_Literal_519 (tuple0) (Array Int character))

;; temp___String_Literal_519__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 1)) 83)
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 2)) 117))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 3)) 109))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 4)) 95))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 5)) 79))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 6)) 102))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 7)) 95))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 8)) 83))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 9)) 117))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 10)) 109))
     (= (to_rep (select (temp___String_Literal_519 us_void_param) 11)) 40)) :pattern (
  (temp___String_Literal_519 us_void_param)) )))

(declare-fun temp___String_Literal_522 (tuple0) (Array Int character))

;; temp___String_Literal_522__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_522 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_522 us_void_param) 2)) 41))
     (= (to_rep (select (temp___String_Literal_522 us_void_param) 3)) 32))
     (= (to_rep (select (temp___String_Literal_522 us_void_param) 4)) 61))
     (= (to_rep (select (temp___String_Literal_522 us_void_param) 5)) 32)) :pattern (
  (temp___String_Literal_522 us_void_param)) )))

(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant3 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-fun x () Int)

(declare-fun n () Int)

(declare-fun i () Int)

(declare-fun result__ () Int)

(declare-fun result2 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun o5 () Int)

(declare-fun temp___515 () (Array Int character))

(declare-fun temp___5151 () t)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun o10 () Int)

(declare-fun o11 () Int)

(declare-fun temp___517 () (Array Int character))

(declare-fun temp___5171 () t)

(declare-fun o12 () Int)

(declare-fun o13 () Int)

(declare-fun o14 () Int)

(declare-fun o15 () Int)

(declare-fun o16 () Int)

(declare-fun o17 () Int)

(declare-fun o18 () (Array Int character))

(declare-fun o19 () t)

(declare-fun o20 () Int)

(declare-fun o21 () Int)

(declare-fun o22 () Int)

(declare-fun o23 () Int)

(declare-fun o24 () Int)

(declare-fun o25 () Int)

(declare-fun temp___523 () (Array Int character))

(declare-fun temp___5231 () t)

(declare-fun o26 () Int)

(declare-fun o27 () Int)

(declare-fun o28 () Int)

(declare-fun o29 () Int)

(declare-fun o30 () Int)

(declare-fun result () Int)

(declare-fun x1 () Int)

(declare-fun result1 () Int)

(declare-fun n1 () Int)

(declare-fun result3 () Int)

(declare-fun i1 () Int)

(declare-fun i2 () Int)

(declare-fun result__1 () Int)

(declare-fun result21 () Int)

(declare-fun power_and_sum__sum__result () Int)

(declare-fun result4 () Int)

(declare-fun result__2 () Int)

(declare-fun power_and_sum__sum_of_sum__result () Int)

(declare-fun result5 () Int)

(declare-fun result22 () Int)

;; H
  (assert (= result x))

;; H
  (assert (= x1 2))

;; H
  (assert (in_range1 x1))

;; H
  (assert (= result1 n))

;; H
  (assert (= n1 15))

;; H
  (assert (in_range1 n1))

;; H
  (assert (= result3 i))

;; H
  (assert (= i1 1))

;; H
  (assert (in_range2 i1))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 result__)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 result2)))

;; H
  (assert (<= i1 n1))

;; H
  (assert
  (and
  (and
  (and (=> (<= 1 2147483647) (in_range2 i2))
  (=> (<= (- 2147483648) 2147483647) (in_range1 result__1)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 result21))) (<= i2 n1)))

;; H
  (assert
  (and (= (* 2 power_and_sum__sum__result) (* i2 (+ i2 1))) (in_range2
  power_and_sum__sum__result)))

;; H
  (assert (= result4 result__1))

;; H
  (assert (= result__2 power_and_sum__sum__result))

;; H
  (assert
  (and
  (= (* 6 power_and_sum__sum_of_sum__result) (* (* i2 (+ i2 1)) (+ i2 2)))
  (in_range2 power_and_sum__sum_of_sum__result)))

;; H
  (assert (= result5 result21))

;; H
  (assert (= result22 power_and_sum__sum_of_sum__result))

;; H
  (assert
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2))))))
  (= o (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2))))))) (=
  o 0)))

;; H
  (assert (=> (<= 1 4) (= o1 (+ (- 4 1) 1))))

;; H
  (assert (=> (not (<= 1 4)) (= o1 0)))

;; H
  (assert (= o2 (+ o1 o)))

;; H
  (assert (= o3 (+ 1 o2)))

;; H
  (assert (= o4 (- o3 1)))

;; H
  (assert (and (= o5 o4) (in_range2 o4)))

;; H
  (assert
  (= (concat1 (temp___String_Literal_511 Tuple0) 1 4
     (elts (to_string (attr__ATTRIBUTE_IMAGE1 i2)))
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))) temp___515))

;; H
  (assert (= (mk 1 o5) temp___5151))

;; H
  (assert
  (=> (= (length (mk___t temp___515 temp___5151)) 0)
  (= (temp___String_Literal_514 Tuple0) temp___517)))

;; H
  (assert
  (=> (= (length (mk___t temp___515 temp___5151)) 0)
  (= (mk 1 5) temp___5171)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (=> (<= 1 5) (= o6 (+ (- 5 1) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (=> (not (<= 1 5)) (= o6 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (=> (<= (to_rep1 (first temp___5151)) (to_rep1 (last temp___5151)))
  (= o7 (+ (- (to_rep1 (last temp___5151)) (to_rep1 (first temp___5151))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (=> (not (<= (to_rep1 (first temp___5151)) (to_rep1 (last temp___5151))))
  (= o7 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0)) (= o8 (+ o7 o6))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (= o9 (+ (to_rep1 (first temp___5151)) o8))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0)) (= o10 (- o9 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (and (= o11 o10) (in_range2 o10))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (= (concat1 temp___515 (to_rep1 (first temp___5151))
     (to_rep1 (last temp___5151)) (temp___String_Literal_514 Tuple0) 1 5)
  temp___517)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___515 temp___5151)) 0))
  (= (mk (to_rep1 (first temp___5151)) o11) temp___5171)))

;; H
  (assert
  (=> (= (length (mk___t temp___517 temp___5171)) 0)
  (= (elts (to_string (attr__ATTRIBUTE_IMAGE1 result__2))) o18)))

;; H
  (assert
  (=> (= (length (mk___t temp___517 temp___5171)) 0)
  (= (mk
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2))))))
  o19)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2))))))
  (= o12 (+ (- (to_rep1
               (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))))
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))))))
  (= o12 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (=> (<= (to_rep1 (first temp___5171)) (to_rep1 (last temp___5171)))
  (= o13 (+ (- (to_rep1 (last temp___5171)) (to_rep1 (first temp___5171))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (=> (not (<= (to_rep1 (first temp___5171)) (to_rep1 (last temp___5171))))
  (= o13 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (= o14 (+ o13 o12))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (= o15 (+ (to_rep1 (first temp___5171)) o14))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0)) (= o16 (- o15 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (and (= o17 o16) (in_range2 o16))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (= (concat1 temp___517 (to_rep1 (first temp___5171))
     (to_rep1 (last temp___5171))
     (elts (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 result__2))))))
  o18)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___517 temp___5171)) 0))
  (= (mk (to_rep1 (first temp___5171)) o17) o19)))

;; H
  (assert
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2))))))
  (= o20 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))) 1))))

;; H
  (assert
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2))))))) (=
  o20 0)))

;; H
  (assert (=> (<= 1 11) (= o21 (+ (- 11 1) 1))))

;; H
  (assert (=> (not (<= 1 11)) (= o21 0)))

;; H
  (assert (= o22 (+ o21 o20)))

;; H
  (assert (= o23 (+ 1 o22)))

;; H
  (assert (= o24 (- o23 1)))

;; H
  (assert (and (= o25 o24) (in_range2 o24)))

;; H
  (assert
  (= (concat1 (temp___String_Literal_519 Tuple0) 1 11
     (elts (to_string (attr__ATTRIBUTE_IMAGE1 i2)))
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 i2)))))) temp___523))

;; H
  (assert (= (mk 1 o25) temp___5231))

;; H
  (assert (not (= (length (mk___t temp___523 temp___5231)) 0)))

;; H
  (assert (=> (<= 1 5) (= o26 (+ (- 5 1) 1))))

;; H
  (assert (=> (not (<= 1 5)) (= o26 0)))

;; H
  (assert
  (=> (<= (to_rep1 (first temp___5231)) (to_rep1 (last temp___5231)))
  (= o27 (+ (- (to_rep1 (last temp___5231)) (to_rep1 (first temp___5231))) 1))))

;; H
  (assert
  (=> (not (<= (to_rep1 (first temp___5231)) (to_rep1 (last temp___5231))))
  (= o27 0)))

;; H
  (assert (= o28 (+ o27 o26)))

;; H
  (assert (= o29 (+ (to_rep1 (first temp___5231)) o28)))

;; H
  (assert (= o30 (- o29 1)))

(assert
;; WP_parameter_def
 ;; File "main.adb", line 3, characters 0-0
  (not (in_range2 o30)))
(check-sat)
(exit)
