;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-const value Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const d Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-datatypes ()
((us_split_discrs (mk___split_discrs (rec__p__t__d integer)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) integer
  (rec__p__t__d a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields (mk___split_fields (rec__p__t__x integer)))))
(define-fun us_split_fields_X__projection ((a us_split_fields)) integer
  (rec__p__t__x a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (to_rep (rec__p__t__d (us_split_discrs1 a)))
                        (to_rep (rec__p__t__d (us_split_discrs1 b))))
                        (= (to_rep (rec__p__t__x (us_split_fields1 a)))
                        (to_rep (rec__p__t__x (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const p__t__d__first__bit Int)

(declare-const p__t__d__last__bit Int)

(declare-const p__t__d__position Int)

;; p__t__d__first__bit_axiom
  (assert (<= 0 p__t__d__first__bit))

;; p__t__d__last__bit_axiom
  (assert (< p__t__d__first__bit p__t__d__last__bit))

;; p__t__d__position_axiom
  (assert (<= 0 p__t__d__position))

(declare-const p__t__x__first__bit Int)

(declare-const p__t__x__last__bit Int)

(declare-const p__t__x__position Int)

;; p__t__x__first__bit_axiom
  (assert (<= 0 p__t__x__first__bit))

;; p__t__x__last__bit_axiom
  (assert (< p__t__x__first__bit p__t__x__last__bit))

;; p__t__x__position_axiom
  (assert (<= 0 p__t__x__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))

(define-fun in_range1 ((rec__p__t__d1 Int)
  (a us_rep)) Bool (= rec__p__t__d1 (to_rep
                                    (rec__p__t__d (us_split_discrs1 a)))))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-const p__t__d__first__bit1 Int)

(declare-const p__t__d__last__bit1 Int)

(declare-const p__t__d__position1 Int)

;; p__t__d__first__bit_axiom
  (assert (<= 0 p__t__d__first__bit1))

;; p__t__d__last__bit_axiom
  (assert (< p__t__d__first__bit1 p__t__d__last__bit1))

;; p__t__d__position_axiom
  (assert (<= 0 p__t__d__position1))

(declare-const p__t__x__first__bit1 Int)

(declare-const p__t__x__last__bit1 Int)

(declare-const p__t__x__position1 Int)

;; p__t__x__first__bit_axiom
  (assert (<= 0 p__t__x__first__bit1))

;; p__t__x__last__bit_axiom
  (assert (< p__t__x__first__bit1 p__t__x__last__bit1))

;; p__t__x__position_axiom
  (assert (<= 0 p__t__x__position1))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-const dummy2 us_rep)

(declare-datatypes ()
((thackS__ref (mk_thackS__ref (thackS__content us_rep)))))
(define-fun thackS__ref___projection ((a thackS__ref)) us_rep (thackS__content
                                                              a))

(define-fun dynamic_invariant1 ((temp___expr_140 us_rep)
  (temp___is_init_137 Bool) (temp___skip_constant_138 Bool)
  (temp___do_toplevel_139 Bool)) Bool (=>
                                      (not (= temp___skip_constant_138 true))
                                      (in_range1 value temp___expr_140)))

(define-fun default_initial_assumption ((temp___expr_142 us_rep)
  (temp___skip_top_level_143 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__p__t__d
                                            (us_split_discrs1
                                            temp___expr_142))) value)
                                         (= (to_rep
                                            (rec__p__t__x
                                            (us_split_fields1
                                            temp___expr_142))) d)))

(declare-const hack__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const result__ Int)

(declare-const hack__split_fields integer)

(declare-const us Int)

(declare-const result Int)

(declare-const result__1 Int)

(declare-const result__2 Int)

(declare-const result__3 Int)

;; H
  (assert (in_range value))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range result__)))

;; H
  (assert (and (= us value) (in_range value)))

;; H
  (assert
  (and (= (to_rep (rec__p__t__d hack__split_discrs)) value)
  (= (to_rep hack__split_fields) d)))

;; H
  (assert (= value (to_rep (rec__p__t__d hack__split_discrs))))

;; H
  (assert (= result result__))

;; H
  (assert (= result__1 (to_rep (rec__p__t__d hack__split_discrs))))

;; H
  (assert (= result__1 result__2))

;; H
  (assert (= result__3 result__1))

(assert
;; WP_parameter_def
 ;; File "p.adb", line 1, characters 0-0
  (not (= result__2 value)))
(check-sat)
(exit)
