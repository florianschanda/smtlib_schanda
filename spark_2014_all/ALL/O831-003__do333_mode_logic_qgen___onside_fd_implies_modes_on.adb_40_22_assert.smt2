;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-const fd_on Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const modes_on Bool)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const fd_on_out1 Bool)

(declare-const modes_on_out1 Bool)

(declare-const not1_out1 Bool)

(declare-const not5_out1 Bool)

(declare-const result Bool)

(declare-const fd_on_out11 Bool)

(declare-const result1 Bool)

(declare-const modes_on_out11 Bool)

(declare-const result2 Bool)

(declare-const not1_out11 Bool)

(declare-const result3 Bool)

(declare-const not5_out11 Bool)

;; H
  (assert (= result fd_on_out1))

;; H
  (assert (= fd_on_out11 fd_on))

;; H
  (assert (= result1 modes_on_out1))

;; H
  (assert (= modes_on_out11 modes_on))

;; H
  (assert (= result2 not1_out1))

;; H
  (assert (= not1_out11 (ite (not (= fd_on_out11 true)) true false)))

;; H
  (assert (= result3 not5_out1))

;; H
  (assert
  (= not5_out11 (ite (or (= not1_out11 true) (= modes_on_out11 true)) true
                false)))

(assert
;; WP_parameter_def
 ;; File "onside_fd_implies_modes_on.ads", line 15, characters 0-0
  (not (= not5_out11 true)))
(check-sat)
(exit)
