(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type descriptioni

predicate in_range4(x: int) = ((1 <= x) and (x <= 150))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : descriptioni, descriptioni -> bool

logic dummy5 : descriptioni

type descriptioni__ref = { descriptioni__content : descriptioni
}

function descriptioni__ref___projection(a: descriptioni__ref) : descriptioni =
  (a).descriptioni__content

logic nodescription : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic audittypes__nodescription__aggregate_def : int -> (int,character) farray

axiom def_axiom :
  (forall temp___133:int.
  (forall temp___134:int.
  ((audittypes__nodescription__aggregate_def(temp___133)[temp___134]) = of_rep(temp___133))))

logic nouser : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS1 : int

logic temp___String_Literal_135 : unit -> (int,character) farray

axiom temp___String_Literal_135__def_axiom :
  ((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_135(void)[1])) = 78) and
  (to_rep((temp___String_Literal_135(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_135(void)[3])) = 85)) and
  (to_rep((temp___String_Literal_135(void)[4])) = 115)) and
  (to_rep((temp___String_Literal_135(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_135(void)[6])) = 114)) and
  (to_rep((temp___String_Literal_135(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[23])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[24])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[25])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[26])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[27])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[29])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[30])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[31])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[32])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[33])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[34])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[35])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[37])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[39])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[40])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[41])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[42])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[43])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[44])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[45])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[46])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[47])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[48])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[49])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[50])) = 32))

type statust

predicate in_range5(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : statust, statust -> bool

logic dummy6 : statust

type statust__ref = { statust__content : statust
}

function statust__ref___projection(a: statust__ref) : statust =
  (a).statust__content

type fileentrycountt

predicate in_range6(x: int) = ((0 <= x) and (x <= 1024))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : fileentrycountt, fileentrycountt -> bool

logic dummy7 : fileentrycountt

type fileentrycountt__ref = { fileentrycountt__content : fileentrycountt
}

function fileentrycountt__ref___projection(a: fileentrycountt__ref) : fileentrycountt =
  (a).fileentrycountt__content

logic to_rep2 : fileentrycountt -> int

logic of_rep2 : int -> fileentrycountt

axiom inversion_axiom2 :
  (forall x:fileentrycountt [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:fileentrycountt [to_rep2(x)]. in_range6(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range6(x) ->
  (to_rep2(of_rep2(x)) = x)))

type map__ref1 = { map__content1 : (int,fileentrycountt) farray
}

logic slide1 : (int,fileentrycountt) farray, int,
  int -> (int,fileentrycountt) farray

axiom slide_eq1 :
  (forall a:(int,fileentrycountt) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,fileentrycountt) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> (int,fileentrycountt) farray

axiom concat_def1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : fileentrycountt, int -> (int,fileentrycountt) farray

axiom singleton_def1 :
  (forall v:fileentrycountt.
  (forall i:int [(singleton1(v, i)[i])]. ((singleton1(v, i)[i]) = v)))

logic bool_eq10 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> bool

axiom bool_eq_def8 :
  (forall a:(int,fileentrycountt) farray. forall a__first:int.
  forall a__last:int. forall b:(int,fileentrycountt) farray.
  forall b__first:int. forall b__last:int [bool_eq10(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_162:int. ((((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) and
  (to_rep2((a[temp___idx_162])) = to_rep2((b[((b__first - a__first) + temp___idx_162)])))) or
  (not ((a__first <= temp___idx_162) and (temp___idx_162 <= a__last)))))) ->
  (bool_eq10(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_162:int. (((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) ->
  (to_rep2((a[temp___idx_162])) = to_rep2((b[((b__first - a__first) + temp___idx_162)]))))))) ->
  (bool_eq10(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq10(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_162:int. (((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) ->
  (to_rep2((a[temp___idx_162])) = to_rep2((b[((b__first - a__first) + temp___idx_162)])))))))))

logic compare1 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> int

axiom compare_def_eq1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq10(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq10(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep2((a[(i + 1)])) <  to_rep2((b[(j + 1)]))))))))))))

axiom compare_def_gt1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare1(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq10(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep2((b[(i + 1)])) <  to_rep2((a[(j + 1)]))))))))))))

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

type logfilecountt

predicate in_range7(x: int) = ((0 <= x) and (x <= 17))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : logfilecountt, logfilecountt -> bool

logic dummy8 : logfilecountt

type logfilecountt__ref = { logfilecountt__content : logfilecountt
}

function logfilecountt__ref___projection(a: logfilecountt__ref) : logfilecountt =
  (a).logfilecountt__content

logic to_rep3 : logfilecountt -> int

logic of_rep3 : int -> logfilecountt

axiom inversion_axiom3 :
  (forall x:logfilecountt [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:logfilecountt [to_rep3(x)]. in_range7(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range7(x) ->
  (to_rep3(of_rep3(x)) = x)))

type logfileindext

predicate in_range8(x: int) = ((1 <= x) and (x <= 17))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : logfileindext, logfileindext -> bool

logic dummy9 : logfileindext

type logfileindext__ref = { logfileindext__content : logfileindext
}

function logfileindext__ref___projection(a: logfileindext__ref) : logfileindext =
  (a).logfileindext__content

logic to_rep4 : logfileindext -> int

logic of_rep4 : int -> logfileindext

axiom inversion_axiom4 :
  (forall x:logfileindext [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:logfileindext [to_rep4(x)]. in_range8(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range8(x) ->
  (to_rep4(of_rep4(x)) = x)))

type map__ref2 = { map__content2 : (int,logfileindext) farray
}

logic slide2 : (int,logfileindext) farray, int,
  int -> (int,logfileindext) farray

axiom slide_eq2 :
  (forall a:(int,logfileindext) farray.
  (forall first2:int [slide2(a, first2, first2)]. (slide2(a, first2,
  first2) = a)))

axiom slide_def2 :
  (forall a:(int,logfileindext) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat2 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> (int,logfileindext) farray

axiom concat_def2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat2(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat2(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat2(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton2 : logfileindext, int -> (int,logfileindext) farray

axiom singleton_def2 :
  (forall v:logfileindext.
  (forall i:int [(singleton2(v, i)[i])]. ((singleton2(v, i)[i]) = v)))

logic bool_eq13 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> bool

axiom bool_eq_def11 :
  (forall a:(int,logfileindext) farray. forall a__first:int.
  forall a__last:int. forall b:(int,logfileindext) farray.
  forall b__first:int. forall b__last:int [bool_eq13(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_152:int. ((((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) and
  (to_rep4((a[temp___idx_152])) = to_rep4((b[((b__first - a__first) + temp___idx_152)])))) or
  (not ((a__first <= temp___idx_152) and (temp___idx_152 <= a__last)))))) ->
  (bool_eq13(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_152:int. (((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) ->
  (to_rep4((a[temp___idx_152])) = to_rep4((b[((b__first - a__first) + temp___idx_152)]))))))) ->
  (bool_eq13(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq13(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_152:int. (((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) ->
  (to_rep4((a[temp___idx_152])) = to_rep4((b[((b__first - a__first) + temp___idx_152)])))))))))

logic compare2 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> int

axiom compare_def_eq2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq13(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq13(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep4((a[(i + 1)])) <  to_rep4((b[(j + 1)]))))))))))))

axiom compare_def_gt2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare2(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq13(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep4((b[(i + 1)])) <  to_rep4((a[(j + 1)]))))))))))))

logic dummy10 : (int,logfileindext) farray

logic value__size1 : int

logic object__size1 : (int,logfileindext) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,logfileindext) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,logfileindext) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__alignment1(a)))

logic user_eq9 : (int,logfileindext) farray,
  (int,logfileindext) farray -> bool

type us_split_fields = { rec__auditlog__logfilelistt__list :
(int,logfileindext) farray; rec__auditlog__logfilelistt__head :
logfileindext; rec__auditlog__logfilelistt__lasti : logfileindext;
rec__auditlog__logfilelistt__length : logfilecountt
}

function us_split_fields_List__projection(a: us_split_fields) : (int,logfileindext) farray =
  (a).rec__auditlog__logfilelistt__list

function us_split_fields_Head__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__head

function us_split_fields_LastI__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__lasti

function us_split_fields_Length__2__projection(a: us_split_fields) : logfilecountt =
  (a).rec__auditlog__logfilelistt__length

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___8__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq14 : us_rep, us_rep -> bool

axiom bool_eq_def12 :
  (forall a:us_rep. forall b:us_rep [bool_eq14(a, b)].
  ((((((bool_eq13(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep3(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep3(((b).us_split_fields1).rec__auditlog__logfilelistt__length))) ->
  (bool_eq14(a, b) = true)) and
  ((not ((((bool_eq13(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep3(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep3(((b).us_split_fields1).rec__auditlog__logfilelistt__length)))) ->
  (bool_eq14(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt. (0 <= object__size2({
  us_split_fields1 = { rec__auditlog__logfilelistt__list = a;
  rec__auditlog__logfilelistt__head = a1;
  rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt.
  (0 <= object__alignment2({ us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a; rec__auditlog__logfilelistt__head =
  a1; rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

logic auditlog__logfilelistt__list__first__bit : int

logic auditlog__logfilelistt__list__last__bit : int

logic auditlog__logfilelistt__list__position : int

axiom auditlog__logfilelistt__list__first__bit_axiom :
  (0 <= auditlog__logfilelistt__list__first__bit)

axiom auditlog__logfilelistt__list__last__bit_axiom :
  (auditlog__logfilelistt__list__first__bit <  auditlog__logfilelistt__list__last__bit)

axiom auditlog__logfilelistt__list__position_axiom :
  (0 <= auditlog__logfilelistt__list__position)

logic auditlog__logfilelistt__head__first__bit : int

logic auditlog__logfilelistt__head__last__bit : int

logic auditlog__logfilelistt__head__position : int

axiom auditlog__logfilelistt__head__first__bit_axiom :
  (0 <= auditlog__logfilelistt__head__first__bit)

axiom auditlog__logfilelistt__head__last__bit_axiom :
  (auditlog__logfilelistt__head__first__bit <  auditlog__logfilelistt__head__last__bit)

axiom auditlog__logfilelistt__head__position_axiom :
  (0 <= auditlog__logfilelistt__head__position)

logic auditlog__logfilelistt__lasti__first__bit : int

logic auditlog__logfilelistt__lasti__last__bit : int

logic auditlog__logfilelistt__lasti__position : int

axiom auditlog__logfilelistt__lasti__first__bit_axiom :
  (0 <= auditlog__logfilelistt__lasti__first__bit)

axiom auditlog__logfilelistt__lasti__last__bit_axiom :
  (auditlog__logfilelistt__lasti__first__bit <  auditlog__logfilelistt__lasti__last__bit)

axiom auditlog__logfilelistt__lasti__position_axiom :
  (0 <= auditlog__logfilelistt__lasti__position)

logic auditlog__logfilelistt__length__first__bit : int

logic auditlog__logfilelistt__length__last__bit : int

logic auditlog__logfilelistt__length__position : int

axiom auditlog__logfilelistt__length__first__bit_axiom :
  (0 <= auditlog__logfilelistt__length__first__bit)

axiom auditlog__logfilelistt__length__last__bit_axiom :
  (auditlog__logfilelistt__length__first__bit <  auditlog__logfilelistt__length__last__bit)

axiom auditlog__logfilelistt__length__position_axiom :
  (0 <= auditlog__logfilelistt__length__position)

logic user_eq10 : us_rep, us_rep -> bool

logic dummy11 : (int,logfileindext) farray

logic dummy12 : logfileindext

logic dummy13 : logfileindext

logic dummy14 : logfilecountt

type logfilelistt__ref = { logfilelistt__content : us_rep
}

function logfilelistt__ref___projection(a: logfilelistt__ref) : us_rep =
  (a).logfilelistt__content

logic attr__ATTRIBUTE_ADDRESS5 : int

logic valid_numberlogentries : (int,fileentrycountt) farray, int, int,
  us_split_fields -> bool

logic valid_numberlogentries__function_guard : bool,
  (int,fileentrycountt) farray, int, int, us_split_fields -> prop

type logentrycountt

predicate in_range9(x: int) = ((0 <= x) and (x <= 17408))

logic bool_eq15 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq15(x, y)]. (((x = y) -> (bool_eq15(x,
  y) = true)) and ((not (x = y)) -> (bool_eq15(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq11 : logentrycountt, logentrycountt -> bool

logic dummy15 : logentrycountt

type logentrycountt__ref = { logentrycountt__content : logentrycountt
}

function logentrycountt__ref___projection(a: logentrycountt__ref) : logentrycountt =
  (a).logentrycountt__content

axiom valid_numberlogentries__post_axiom : true

axiom valid_numberlogentries__def_axiom :
  (forall auditlog__logfileentries:(int,fileentrycountt) farray.
  (forall auditlog__numberlogentries:int.
  forall auditlog__currentlogfile:int.
  (forall auditlog__usedlogfiles__fields:(int,logfileindext) farray.
  forall auditlog__usedlogfiles__fields1:logfileindext.
  forall auditlog__usedlogfiles__fields2:logfileindext.
  forall auditlog__usedlogfiles__fields3:logfilecountt
  [valid_numberlogentries(auditlog__logfileentries,
  auditlog__numberlogentries, auditlog__currentlogfile, {
  rec__auditlog__logfilelistt__list = auditlog__usedlogfiles__fields;
  rec__auditlog__logfilelistt__head = auditlog__usedlogfiles__fields1;
  rec__auditlog__logfilelistt__lasti = auditlog__usedlogfiles__fields2;
  rec__auditlog__logfilelistt__length = auditlog__usedlogfiles__fields3 })].
  ((valid_numberlogentries(auditlog__logfileentries,
  auditlog__numberlogentries, auditlog__currentlogfile, {
  rec__auditlog__logfilelistt__list = auditlog__usedlogfiles__fields;
  rec__auditlog__logfilelistt__head = auditlog__usedlogfiles__fields1;
  rec__auditlog__logfilelistt__lasti = auditlog__usedlogfiles__fields2;
  rec__auditlog__logfilelistt__length = auditlog__usedlogfiles__fields3
  }) = true) <-> ((1 <= to_rep3(auditlog__usedlogfiles__fields3)) and
  (auditlog__numberlogentries = (((to_rep3(auditlog__usedlogfiles__fields3) - 1) * 1024) + to_rep2((auditlog__logfileentries[auditlog__currentlogfile])))))))))

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep1

logic bool_eq16 : us_rep1, us_rep1 -> bool

logic value__size3 : int

logic object__size3 : us_rep1 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep1 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (forall a:us_rep1. (0 <= object__size3(a)))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:us_rep1. (0 <= object__alignment3(a)))

logic user_eq12 : us_rep1, us_rep1 -> bool

logic dummy16 : us_rep1

type t__ref = { t__content : us_rep1
}

function t__ref___projection(a: t__ref) : us_rep1 = (a).t__content

type map__ref3 = { map__content3 : (int,us_rep1) farray
}

logic slide3 : (int,us_rep1) farray, int, int -> (int,us_rep1) farray

axiom slide_eq3 :
  (forall a:(int,us_rep1) farray.
  (forall first2:int [slide3(a, first2, first2)]. (slide3(a, first2,
  first2) = a)))

axiom slide_def3 :
  (forall a:(int,us_rep1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat3 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> (int,us_rep1) farray

axiom concat_def3 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat3(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat3(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat3(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton3 : us_rep1, int -> (int,us_rep1) farray

axiom singleton_def3 :
  (forall v:us_rep1.
  (forall i:int [(singleton3(v, i)[i])]. ((singleton3(v, i)[i]) = v)))

logic bool_eq17 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> bool

axiom bool_eq_def14 :
  (forall a:(int,us_rep1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep1) farray. forall b__first:int. forall b__last:int
  [bool_eq17(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_149:int. ((((a__first <= temp___idx_149) and
  (temp___idx_149 <= a__last)) and (bool_eq16((a[temp___idx_149]),
  (b[((b__first - a__first) + temp___idx_149)])) = true)) or
  (not ((a__first <= temp___idx_149) and (temp___idx_149 <= a__last)))))) ->
  (bool_eq17(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_149:int. (((a__first <= temp___idx_149) and
  (temp___idx_149 <= a__last)) -> (bool_eq16((a[temp___idx_149]),
  (b[((b__first - a__first) + temp___idx_149)])) = true))))) -> (bool_eq17(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev3 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq17(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_149:int. (((a__first <= temp___idx_149) and
  (temp___idx_149 <= a__last)) -> (bool_eq16((a[temp___idx_149]),
  (b[((b__first - a__first) + temp___idx_149)])) = true)))))))

logic attr__ATTRIBUTE_ADDRESS6 : int

type filestatust

predicate in_range10(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq18 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq18(x, y)]. (((x = y) -> (bool_eq18(x,
  y) = true)) and ((not (x = y)) -> (bool_eq18(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq13 : filestatust, filestatust -> bool

logic dummy17 : filestatust

type filestatust__ref = { filestatust__content : filestatust
}

function filestatust__ref___projection(a: filestatust__ref) : filestatust =
  (a).filestatust__content

logic to_rep5 : filestatust -> int

logic of_rep5 : int -> filestatust

axiom inversion_axiom5 :
  (forall x:filestatust [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 :
  (forall x:filestatust [to_rep5(x)]. in_range10(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range10(x) ->
  (to_rep5(of_rep5(x)) = x)))

type map__ref4 = { map__content4 : (int,filestatust) farray
}

logic slide4 : (int,filestatust) farray, int, int -> (int,filestatust) farray

axiom slide_eq4 :
  (forall a:(int,filestatust) farray.
  (forall first2:int [slide4(a, first2, first2)]. (slide4(a, first2,
  first2) = a)))

axiom slide_def4 :
  (forall a:(int,filestatust) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide4(a, old_first, new_first)[i])]. ((slide4(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat4 : (int,filestatust) farray, int, int, (int,filestatust) farray,
  int, int -> (int,filestatust) farray

axiom concat_def4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat4(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat4(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat4(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton4 : filestatust, int -> (int,filestatust) farray

axiom singleton_def4 :
  (forall v:filestatust.
  (forall i:int [(singleton4(v, i)[i])]. ((singleton4(v, i)[i]) = v)))

logic bool_eq19 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> bool

axiom bool_eq_def16 :
  (forall a:(int,filestatust) farray. forall a__first:int.
  forall a__last:int. forall b:(int,filestatust) farray. forall b__first:int.
  forall b__last:int [bool_eq19(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_150:int. ((((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) and
  (to_rep5((a[temp___idx_150])) = to_rep5((b[((b__first - a__first) + temp___idx_150)])))) or
  (not ((a__first <= temp___idx_150) and (temp___idx_150 <= a__last)))))) ->
  (bool_eq19(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) ->
  (to_rep5((a[temp___idx_150])) = to_rep5((b[((b__first - a__first) + temp___idx_150)]))))))) ->
  (bool_eq19(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq19(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) ->
  (to_rep5((a[temp___idx_150])) = to_rep5((b[((b__first - a__first) + temp___idx_150)])))))))))

logic compare3 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> int

axiom compare_def_eq3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq19(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq19(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep5((a[(i + 1)])) <  to_rep5((b[(j + 1)]))))))))))))

axiom compare_def_gt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare3(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq19(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep5((b[(i + 1)])) <  to_rep5((a[(j + 1)]))))))))))))

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic user : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS10 : int

type tlogentrycounttB

predicate in_range11(x: int) = (((-32768) <= x) and (x <= 32767))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq14 : tlogentrycounttB, tlogentrycounttB -> bool

logic dummy18 : tlogentrycounttB

type tlogentrycounttB__ref = { tlogentrycounttB__content : tlogentrycounttB
}

function tlogentrycounttB__ref___projection(a: tlogentrycounttB__ref) : tlogentrycounttB =
  (a).tlogentrycounttB__content

logic nextlistindex : int -> int

logic nextlistindex__function_guard : int, int -> prop

axiom nextlistindex__post_axiom :
  (forall value:int [nextlistindex(value)]. (in_range8(value) ->
  in_range8(nextlistindex(value))))

axiom nextlistindex__def_axiom :
  (forall value:int [nextlistindex(value)]. (in_range8(value) ->
  (((value = 17) -> (nextlistindex(value) = 1)) and ((not (value = 17)) ->
  (nextlistindex(value) = (value + 1))))))

logic attr__ATTRIBUTE_ADDRESS11 : int

axiom nodescription__def_axiom :
  (nodescription = audittypes__nodescription__aggregate_def(32))

axiom nouser__def_axiom : (nouser = temp___String_Literal_135(void))

 (* File "auditlog.ads", line 33, characters 0-0 *)
goal WP_parameter_def :
  (forall logfiles:(int,us_rep1) farray. forall currentlogfile:int.
  forall logfilesstatus:(int,filestatust) farray.
  forall numberlogentries:int.
  forall usedlogfiles__split_fields:(int,logfileindext) farray.
  forall usedlogfiles__split_fields1:logfileindext.
  forall usedlogfiles__split_fields2:logfileindext.
  forall usedlogfiles__split_fields3:logfilecountt.
  forall logfileentries:(int,fileentrycountt) farray. forall auditalarm:int.
  forall auditsystemfault:bool. forall oldalarm:int.
  forall temp___1296:(int,fileentrycountt) farray.
  forall temp___1297:(int,us_rep1) farray.
  forall temp___1295:(int,logfileindext) farray.
  forall temp___12951:logfileindext. forall temp___12952:logfileindext.
  forall temp___12953:logfilecountt. forall temp___1294:int.
  forall temp___1293:(int,filestatust) farray. forall temp___1292:bool.
  forall o:int. forall o1:logfilecountt.
  forall o2:(int,logfileindext) farray. forall o3:logfileindext.
  forall o4:logfileindext. forall o5:logfilecountt.
  forall temp___1289:(int,logfileindext) farray.
  forall temp___12891:logfileindext. forall temp___12892:logfileindext.
  forall temp___12893:logfilecountt. forall o6:int. forall o7:logfileindext.
  forall o8:(int,logfileindext) farray. forall o9:logfileindext.
  forall o10:logfileindext. forall o11:logfilecountt.
  forall temp___1291:(int,logfileindext) farray.
  forall temp___12911:logfileindext. forall temp___12912:logfileindext.
  forall temp___12913:logfilecountt. forall o12:int. forall o13:int.
  forall o14:int. forall o15:int. forall o16:int.
  forall logfiles1:(int,us_rep1) farray. forall currentlogfile1:int.
  forall logfilesstatus1:(int,filestatust) farray.
  forall numberlogentries1:int.
  forall usedlogfiles__split_fields4:(int,logfileindext) farray.
  forall usedlogfiles__split_fields5:logfileindext.
  forall usedlogfiles__split_fields6:logfileindext.
  forall usedlogfiles__split_fields7:logfilecountt.
  forall logfileentries1:(int,fileentrycountt) farray.
  forall auditsystemfault1:bool.
  forall logfilesstatus2:(int,filestatust) farray.
  forall numberlogentries2:int.
  forall usedlogfiles__split_fields8:(int,logfileindext) farray.
  forall usedlogfiles__split_fields9:logfileindext.
  forall usedlogfiles__split_fields10:logfileindext.
  forall usedlogfiles__split_fields11:logfilecountt.
  forall logfileentries2:(int,fileentrycountt) farray.
  forall logfiles2:(int,us_rep1) farray.
  forall logfilesstatus3:(int,filestatust) farray.
  forall logfileentries3:(int,fileentrycountt) farray.
  forall auditsystemfault2:bool. forall result:(int,logfileindext) farray.
  forall result1:logfileindext. forall result2:logfileindext.
  forall result3:logfilecountt.
  forall usedlogfiles__split_fields12:(int,logfileindext) farray.
  forall usedlogfiles__split_fields13:logfileindext.
  forall usedlogfiles__split_fields14:logfileindext.
  forall usedlogfiles__split_fields15:logfilecountt.
  forall result4:(int,logfileindext) farray. forall result5:logfileindext.
  forall result6:logfileindext. forall result7:logfilecountt.
  forall usedlogfiles__split_fields16:(int,logfileindext) farray.
  forall usedlogfiles__split_fields17:logfileindext.
  forall usedlogfiles__split_fields18:logfileindext.
  forall usedlogfiles__split_fields19:logfilecountt. forall result8:int.
  forall numberlogentries3:int. forall logfiles3:(int,us_rep1) farray.
  forall logfilesstatus4:(int,filestatust) farray.
  forall numberlogentries4:int.
  forall usedlogfiles__split_fields20:(int,logfileindext) farray.
  forall usedlogfiles__split_fields21:logfileindext.
  forall usedlogfiles__split_fields22:logfileindext.
  forall usedlogfiles__split_fields23:logfilecountt.
  forall logfileentries4:(int,fileentrycountt) farray.
  forall auditsystemfault3:bool. forall logfiles4:(int,us_rep1) farray.
  forall logfilesstatus5:(int,filestatust) farray.
  forall numberlogentries5:int.
  forall usedlogfiles__split_fields24:(int,logfileindext) farray.
  forall usedlogfiles__split_fields25:logfileindext.
  forall usedlogfiles__split_fields26:logfileindext.
  forall usedlogfiles__split_fields27:logfilecountt.
  forall logfileentries5:(int,fileentrycountt) farray.
  forall auditsystemfault4:bool. forall logfiles5:map__ref3.
  forall logfilesstatus6:map__ref4. forall numberlogentries6:int__ref.
  forall usedlogfiles__split_fields28:us_split_fields__ref.
  forall logfileentries6:map__ref1. forall auditsystemfault5:bool__ref.
  forall logfiles6:(int,us_rep1) farray.
  forall logfilesstatus7:(int,filestatust) farray.
  forall numberlogentries7:int.
  forall usedlogfiles__split_fields29:us_split_fields.
  forall logfileentries7:(int,fileentrycountt) farray.
  forall auditsystemfault6:bool. forall logfiles7:map__ref3.
  forall logfilesstatus8:map__ref4. forall numberlogentries8:int__ref.
  forall usedlogfiles__split_fields30:us_split_fields__ref.
  forall logfileentries8:map__ref1. forall auditsystemfault7:bool__ref.
  forall logfiles8:(int,us_rep1) farray.
  forall logfilesstatus9:(int,filestatust) farray.
  forall numberlogentries9:int.
  forall usedlogfiles__split_fields31:us_split_fields.
  forall logfileentries9:(int,fileentrycountt) farray.
  forall auditsystemfault8:bool. forall result9:int__ref.
  forall oldalarm1:int. forall result10:int__ref. forall auditalarm1:int.
  forall auditalarm2:int. forall logfiles9:(int,us_rep1) farray.
  forall currentlogfile2:int.
  forall logfilesstatus10:(int,filestatust) farray.
  forall numberlogentries10:int.
  forall usedlogfiles__split_fields32:us_split_fields.
  forall logfileentries10:(int,fileentrycountt) farray.
  forall auditalarm3:int. forall auditsystemfault9:bool.
  forall logfiles10:map__ref3. forall currentlogfile3:int__ref.
  forall logfilesstatus11:map__ref4. forall numberlogentries11:int__ref.
  forall usedlogfiles__split_fields33:us_split_fields__ref.
  forall logfileentries11:map__ref1. forall auditalarm4:int__ref.
  forall auditsystemfault10:bool__ref.
  forall logfiles11:(int,us_rep1) farray. forall currentlogfile4:int.
  forall logfilesstatus12:(int,filestatust) farray.
  forall numberlogentries12:int.
  forall usedlogfiles__split_fields34:us_split_fields.
  forall logfileentries12:(int,fileentrycountt) farray.
  forall auditalarm5:int. forall auditsystemfault11:bool.
  forall logfiles12:(int,us_rep1) farray. forall currentlogfile5:int.
  forall logfilesstatus13:(int,filestatust) farray.
  forall numberlogentries13:int.
  forall usedlogfiles__split_fields35:us_split_fields.
  forall logfileentries13:(int,fileentrycountt) farray.
  forall auditalarm6:int. forall auditsystemfault12:bool.
  forall logfiles13:map__ref3. forall currentlogfile6:int__ref.
  forall logfilesstatus14:map__ref4. forall numberlogentries14:int__ref.
  forall usedlogfiles__split_fields36:us_split_fields__ref.
  forall logfileentries14:map__ref1. forall auditalarm7:int__ref.
  forall auditsystemfault13:bool__ref. forall oldalarm2:int__ref.
  forall logfiles14:(int,us_rep1) farray. forall currentlogfile7:int.
  forall logfilesstatus15:(int,filestatust) farray.
  forall numberlogentries15:int.
  forall usedlogfiles__split_fields37:us_split_fields.
  forall logfileentries15:(int,fileentrycountt) farray.
  forall auditalarm8:int. forall auditsystemfault14:bool.
  forall oldalarm3:int.
  ((audittypes__nodescription__aggregate_def(32) = nodescription) ->
  ((temp___String_Literal_135(void) = nouser) ->
  (in_range8(currentlogfile) -> (in_range9(numberlogentries) ->
  (in_range5(auditalarm) -> ((valid_numberlogentries(logfileentries,
  numberlogentries, currentlogfile, { rec__auditlog__logfilelistt__list =
  usedlogfiles__split_fields; rec__auditlog__logfilelistt__head =
  usedlogfiles__split_fields1; rec__auditlog__logfilelistt__lasti =
  usedlogfiles__split_fields2; rec__auditlog__logfilelistt__length =
  usedlogfiles__split_fields3 }) = true) -> (((((0 <= 1) ->
  in_range5(oldalarm)) and ((((1 <  to_rep3(usedlogfiles__split_fields3)) and
  ((((temp___1296 = logfileentries) and ((temp___1297 = logfiles) and
  (((usedlogfiles__split_fields = temp___1295) and
  ((usedlogfiles__split_fields1 = temp___12951) and
  ((usedlogfiles__split_fields2 = temp___12952) and
  (usedlogfiles__split_fields3 = temp___12953)))) and
  ((temp___1294 = numberlogentries) and ((temp___1293 = logfilesstatus) and
  ((temp___1292 = auditsystemfault) and ((((({ bool__content =
  auditsystemfault3 } = { bool__content = auditsystemfault }) and (({
  map__content1 = logfileentries4 } = { map__content1 = logfileentries }) and
  (({ us_split_fields__content = { rec__auditlog__logfilelistt__list =
  usedlogfiles__split_fields20; rec__auditlog__logfilelistt__head =
  usedlogfiles__split_fields21; rec__auditlog__logfilelistt__lasti =
  usedlogfiles__split_fields22; rec__auditlog__logfilelistt__length =
  usedlogfiles__split_fields23 } } = { us_split_fields__content = {
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields1;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields2;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields3 } }) and
  (({ int__content = numberlogentries4 } = { int__content = numberlogentries
  }) and (({ map__content4 = logfilesstatus4 } = { map__content4 =
  logfilesstatus }) and ({ map__content3 = logfiles3 } = { map__content3 =
  logfiles })))))) and ((auditsystemfault4 = auditsystemfault1) and
  ((logfileentries5 = logfileentries1) and (({
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields24;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields25;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields26;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields27 } = {
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields4;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields5;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields6;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields7 }) and
  ((numberlogentries5 = numberlogentries1) and
  ((logfilesstatus5 = logfilesstatus1) and (logfiles4 = logfiles1))))))) and
  (not (to_rep5((logfilesstatus[to_rep4((usedlogfiles__split_fields[to_rep4(usedlogfiles__split_fields1)]))])) = 1))) or
  ((to_rep5((logfilesstatus[to_rep4((usedlogfiles__split_fields[to_rep4(usedlogfiles__split_fields1)]))])) = 1) and
  ((((auditsystemfault2 = auditsystemfault3) and
  ((logfileentries3 = logfileentries4) and
  (((usedlogfiles__split_fields20 = usedlogfiles__split_fields16) and
  ((usedlogfiles__split_fields21 = usedlogfiles__split_fields17) and
  ((usedlogfiles__split_fields22 = usedlogfiles__split_fields18) and
  (usedlogfiles__split_fields23 = usedlogfiles__split_fields19)))) and
  ((numberlogentries3 = numberlogentries4) and
  ((logfilesstatus3 = logfilesstatus4) and (logfiles2 = logfiles3)))))) and
  ((auditsystemfault4 = auditsystemfault2) and
  ((logfileentries5 = logfileentries3) and (({
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields24;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields25;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields26;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields27 } = {
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields16;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields17;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields18;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields19 }) and
  ((numberlogentries5 = numberlogentries3) and
  ((logfilesstatus5 = logfilesstatus3) and (logfiles4 = logfiles2))))))) and
  ((((1 <  to_rep3(usedlogfiles__split_fields11)) and
  (to_rep5((logfilesstatus2[to_rep4((usedlogfiles__split_fields8[to_rep4(usedlogfiles__split_fields9)]))])) = 1)) and
  (numberlogentries2 = (((to_rep3(usedlogfiles__split_fields11) - 1) * 1024) + to_rep2((logfileentries2[currentlogfile]))))) and
  ((in_range9(numberlogentries2) and
  ((usedlogfiles__split_fields8 = temp___1295) and
  (usedlogfiles__split_fields10 = temp___12952))) and
  ((not (to_rep4((usedlogfiles__split_fields8[to_rep4(usedlogfiles__split_fields9)])) = currentlogfile)) and
  ((forall i:int. (((1 <= i) and (i <= 17)) ->
   ((not (i = to_rep4((usedlogfiles__split_fields8[to_rep4(usedlogfiles__split_fields9)])))) ->
   (to_rep2((logfileentries3[i])) = to_rep2((logfileentries2[i])))))) and
  (((((((o = (to_rep3(usedlogfiles__split_fields11) - 1)) and
  in_range7((to_rep3(usedlogfiles__split_fields11) - 1))) and
  (to_rep3(o1) = o)) and ((usedlogfiles__split_fields8 = o2) and
  ((usedlogfiles__split_fields9 = o3) and
  ((usedlogfiles__split_fields10 = o4) and (o1 = o5))))) and
  ((temp___1289 = o2) and ((temp___12891 = o3) and ((temp___12892 = o4) and
  (temp___12893 = o5))))) and (((result = usedlogfiles__split_fields8) and
  ((result1 = usedlogfiles__split_fields9) and
  ((result2 = usedlogfiles__split_fields10) and
  (result3 = usedlogfiles__split_fields11)))) and
  ((temp___1289 = usedlogfiles__split_fields12) and
  ((temp___12891 = usedlogfiles__split_fields13) and
  ((temp___12892 = usedlogfiles__split_fields14) and
  (temp___12893 = usedlogfiles__split_fields15)))))) and
  (((((((o6 = nextlistindex(to_rep4(usedlogfiles__split_fields13))) and
  (in_range8(o6) and (((to_rep4(usedlogfiles__split_fields13) = 17) and
  (o6 = 1)) or ((not (to_rep4(usedlogfiles__split_fields13) = 17)) and
  (o6 = (to_rep4(usedlogfiles__split_fields13) + 1)))))) and
  (to_rep4(o7) = o6)) and ((usedlogfiles__split_fields12 = o8) and
  ((o7 = o9) and ((usedlogfiles__split_fields14 = o10) and
  (usedlogfiles__split_fields15 = o11))))) and ((temp___1291 = o8) and
  ((temp___12911 = o9) and ((temp___12912 = o10) and
  (temp___12913 = o11))))) and (((result4 = usedlogfiles__split_fields12) and
  ((result5 = usedlogfiles__split_fields13) and
  ((result6 = usedlogfiles__split_fields14) and
  (result7 = usedlogfiles__split_fields15)))) and
  ((temp___1291 = usedlogfiles__split_fields16) and
  ((temp___12911 = usedlogfiles__split_fields17) and
  ((temp___12912 = usedlogfiles__split_fields18) and
  (temp___12913 = usedlogfiles__split_fields19)))))) and
  ((((o12 = (numberlogentries2 - 1024)) and
  in_range9((numberlogentries2 - 1024))) and
  ((numberlogentries2 = result8) and (numberlogentries3 = o12))) and
  ((not (1 <  to_rep3(usedlogfiles__split_fields19))) or
  ((1 <  to_rep3(usedlogfiles__split_fields19)) and
  (not (to_rep5((logfilesstatus3[to_rep4((usedlogfiles__split_fields16[to_rep4(usedlogfiles__split_fields17)]))])) = 1)))))))))))))))))))) and
  (((auditsystemfault5 = { bool__content = auditsystemfault3 }) and
  ((logfileentries6 = { map__content1 = logfileentries4 }) and
  ((usedlogfiles__split_fields28 = { us_split_fields__content = {
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields20;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields21;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields22;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields23 } }) and
  ((numberlogentries6 = { int__content = numberlogentries4 }) and
  ((logfilesstatus6 = { map__content4 = logfilesstatus4 }) and (logfiles5 = {
  map__content3 = logfiles3 })))))) and
  ((auditsystemfault6 = auditsystemfault4) and
  ((logfileentries7 = logfileentries5) and ((usedlogfiles__split_fields29 = {
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields24;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields25;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields26;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields27 }) and
  ((numberlogentries7 = numberlogentries5) and
  ((logfilesstatus7 = logfilesstatus5) and (logfiles6 = logfiles4)))))))) and
  (((auditsystemfault7 = auditsystemfault5) and
  ((logfileentries8 = logfileentries6) and
  ((usedlogfiles__split_fields30 = usedlogfiles__split_fields28) and
  ((numberlogentries8 = numberlogentries6) and
  ((logfilesstatus8 = logfilesstatus6) and (logfiles7 = logfiles5)))))) and
  ((auditsystemfault8 = auditsystemfault6) and
  ((logfileentries9 = logfileentries7) and
  ((usedlogfiles__split_fields31 = usedlogfiles__split_fields29) and
  ((numberlogentries9 = numberlogentries7) and
  ((logfilesstatus9 = logfilesstatus7) and (logfiles8 = logfiles6))))))))) or
  ((not (1 <  to_rep3(usedlogfiles__split_fields3))) and
  (((auditsystemfault7 = { bool__content = auditsystemfault }) and
  ((logfileentries8 = { map__content1 = logfileentries }) and
  ((usedlogfiles__split_fields30 = { us_split_fields__content = {
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields1;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields2;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields3 } }) and
  ((numberlogentries8 = { int__content = numberlogentries }) and
  ((logfilesstatus8 = { map__content4 = logfilesstatus }) and (logfiles7 = {
  map__content3 = logfiles })))))) and
  ((auditsystemfault8 = auditsystemfault1) and
  ((logfileentries9 = logfileentries1) and ((usedlogfiles__split_fields31 = {
  rec__auditlog__logfilelistt__list = usedlogfiles__split_fields4;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields5;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields6;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields7 }) and
  ((numberlogentries9 = numberlogentries1) and
  ((logfilesstatus9 = logfilesstatus1) and
  (logfiles8 = logfiles1))))))))) and (((result9 = { int__content = oldalarm
  }) and (oldalarm1 = auditalarm)) and (((result10 = { int__content =
  auditalarm }) and (auditalarm1 = 1)) and (in_range5(auditalarm2) and
  ((((not (oldalarm1 = auditalarm2)) and
  ((((1 <= to_rep3((usedlogfiles__split_fields32).rec__auditlog__logfilelistt__length)) and
  (numberlogentries10 = (((to_rep3((usedlogfiles__split_fields32).rec__auditlog__logfilelistt__length) - 1) * 1024) + to_rep2((logfileentries10[currentlogfile2]))))) and
  ((in_range9(numberlogentries10) and in_range5(auditalarm3)) and
  in_range8(currentlogfile2))) and (((auditsystemfault10 = { bool__content =
  auditsystemfault9 }) and ((auditalarm4 = { int__content = auditalarm3
  }) and ((logfileentries11 = { map__content1 = logfileentries10 }) and
  ((usedlogfiles__split_fields33 = { us_split_fields__content =
  usedlogfiles__split_fields32 }) and ((numberlogentries11 = { int__content =
  numberlogentries10 }) and ((logfilesstatus11 = { map__content4 =
  logfilesstatus10 }) and ((currentlogfile3 = { int__content =
  currentlogfile2 }) and (logfiles10 = { map__content3 = logfiles9
  })))))))) and ((auditsystemfault11 = auditsystemfault9) and
  ((auditalarm5 = auditalarm3) and ((logfileentries12 = logfileentries10) and
  ((usedlogfiles__split_fields34 = usedlogfiles__split_fields32) and
  ((numberlogentries12 = numberlogentries10) and
  ((logfilesstatus12 = logfilesstatus10) and
  ((currentlogfile4 = currentlogfile2) and
  (logfiles11 = logfiles9))))))))))) or ((oldalarm1 = auditalarm2) and
  (((auditsystemfault10 = auditsystemfault7) and ((auditalarm4 = {
  int__content = auditalarm2 }) and ((logfileentries11 = logfileentries8) and
  ((usedlogfiles__split_fields33 = usedlogfiles__split_fields30) and
  ((numberlogentries11 = numberlogentries8) and
  ((logfilesstatus11 = logfilesstatus8) and ((currentlogfile3 = {
  int__content = currentlogfile }) and (logfiles10 = logfiles7)))))))) and
  ((auditsystemfault11 = auditsystemfault8) and
  ((auditalarm5 = auditalarm2) and ((logfileentries12 = logfileentries9) and
  ((usedlogfiles__split_fields34 = usedlogfiles__split_fields31) and
  ((numberlogentries12 = numberlogentries9) and
  ((logfilesstatus12 = logfilesstatus9) and
  ((currentlogfile4 = currentlogfile1) and
  (logfiles11 = logfiles8))))))))))) and
  (((1 <= to_rep3((usedlogfiles__split_fields35).rec__auditlog__logfilelistt__length)) and
  (numberlogentries13 = (((to_rep3((usedlogfiles__split_fields35).rec__auditlog__logfilelistt__length) - 1) * 1024) + to_rep2((logfileentries13[currentlogfile5]))))) and
  ((in_range9(numberlogentries13) and in_range5(auditalarm6)) and
  in_range8(currentlogfile5))))))))) and (((oldalarm2 = { int__content =
  oldalarm1 }) and ((auditsystemfault13 = { bool__content =
  auditsystemfault12 }) and ((auditalarm7 = { int__content = auditalarm6
  }) and ((logfileentries14 = { map__content1 = logfileentries13 }) and
  ((usedlogfiles__split_fields36 = { us_split_fields__content =
  usedlogfiles__split_fields35 }) and ((numberlogentries14 = { int__content =
  numberlogentries13 }) and ((logfilesstatus14 = { map__content4 =
  logfilesstatus13 }) and ((currentlogfile6 = { int__content =
  currentlogfile5 }) and (logfiles13 = { map__content3 = logfiles12
  }))))))))) and ((oldalarm3 = oldalarm1) and
  ((auditsystemfault14 = auditsystemfault12) and
  ((auditalarm8 = auditalarm6) and ((logfileentries15 = logfileentries13) and
  ((usedlogfiles__split_fields37 = usedlogfiles__split_fields35) and
  ((numberlogentries15 = numberlogentries13) and
  ((logfilesstatus15 = logfilesstatus13) and
  ((currentlogfile7 = currentlogfile5) and
  (logfiles14 = logfiles12))))))))))) ->
  ((((((o13 = (to_rep3(((usedlogfiles__split_fields36).us_split_fields__content).rec__auditlog__logfilelistt__length) - 1)) and
  in_range9((to_rep3(((usedlogfiles__split_fields36).us_split_fields__content).rec__auditlog__logfilelistt__length) - 1))) and
  (o14 = (o13 * 1024))) and ((o15 = o14) and in_range11(o14))) and
  (o16 = (o15 + to_rep2(((logfileentries14).map__content1[(currentlogfile6).int__content]))))) ->
  in_range11(o16))))))))))
