;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields (rec__dispatch__root__f integer)(rec__ext__ us_private)))))
(define-fun us_split_fields_F__projection ((a us_split_fields)) integer
  (rec__dispatch__root__f a))

(define-fun us_split_fields___projection ((a us_split_fields)) us_private
  (rec__ext__ a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep (us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__dispatch__root__f (us_split_fields1 a)))
                   (to_rep (rec__dispatch__root__f (us_split_fields1 b))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const dispatch__root__f__first__bit Int)

(declare-const dispatch__root__f__last__bit Int)

(declare-const dispatch__root__f__position Int)

;; dispatch__root__f__first__bit_axiom
  (assert (<= 0 dispatch__root__f__first__bit))

;; dispatch__root__f__last__bit_axiom
  (assert (< dispatch__root__f__first__bit dispatch__root__f__last__bit))

;; dispatch__root__f__position_axiom
  (assert (<= 0 dispatch__root__f__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((root__ref 0)) (((mk_root__ref (root__content us_rep)))))
(define-fun root__ref___projection ((a root__ref)) us_rep (root__content a))

(define-fun default_initial_assumption ((temp___expr_136 us_rep)
  (temp___skip_top_level_137 Bool)) Bool (= (attr__tag temp___expr_136)
  us_tag))

(declare-const x us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const dispatch__incr3__result integer)

(declare-const dispatch__incr3__result1 us_private)

(declare-const dispatch__incr3__result2 Int)

(declare-const o Int)

(declare-const o1 integer)

(declare-const o2 integer)

(declare-const o3 us_private)

(declare-const o4 integer)

(declare-const o5 us_private)

(declare-const o6 Int)

(declare-const o7 integer)

(declare-const o8 integer)

(declare-const o9 us_private)

(declare-const o10 integer)

(declare-const o11 us_private)

(declare-const o12 Int)

(declare-const result integer)

(declare-const result1 us_private)

(declare-const result2 Int)

(declare-const dispatch__incr3__result3 integer)

(declare-const dispatch__incr3__result4 us_private)

(declare-const dispatch__incr3__result5 Int)

(declare-const result3 integer)

(declare-const result4 us_private)

(declare-const result5 Int)

(declare-const dispatch__incr3__result6 integer)

(declare-const dispatch__incr3__result7 us_private)

(declare-const dispatch__incr3__result8 Int)

(declare-const dispatch__incr3__result9 integer)

(declare-const dispatch__incr3__result10 us_private)

(declare-const dispatch__incr3__result11 Int)

(declare-const dispatch__incr3__result12 us_rep)

(declare-const dispatch__incr3__result13 root__ref)

(declare-const dispatch__incr3__result14 us_rep)

(declare-const dispatch__incr3__result15 root__ref)

(declare-const dispatch__incr3__result16 us_rep)

(define-fun dispatch__incr3__result17 () us_rep (mk___rep
                                                (mk___split_fields
                                                dispatch__incr3__result6
                                                dispatch__incr3__result7)
                                                dispatch__incr3__result8))

(define-fun dispatch__incr3__result18 () us_rep (mk___rep
                                                (mk___split_fields
                                                dispatch__incr3__result3
                                                dispatch__incr3__result4)
                                                dispatch__incr3__result5))

(define-fun dispatch__incr3__result19 () root__ref (mk_root__ref
                                                   (mk___rep
                                                   (mk___split_fields
                                                   dispatch__incr3__result
                                                   dispatch__incr3__result1)
                                                   dispatch__incr3__result2)))

;; H
  (assert
  (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))

;; H
  (assert
  (= dispatch__incr3__result13 (mk_root__ref
                               (mk___rep
                               (mk___split_fields dispatch__incr3__result9
                               dispatch__incr3__result10)
                               dispatch__incr3__result11))))

;; H
  (assert (= dispatch__incr3__result14 dispatch__incr3__result12))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= dispatch__incr3__result9 dispatch__incr3__result3)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= dispatch__incr3__result10 dispatch__incr3__result4)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= dispatch__incr3__result11 dispatch__incr3__result5)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= dispatch__incr3__result12 dispatch__incr3__result18)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (and (= o (+ (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 1))
  (in_range1 (+ (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 1)))))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= (to_rep o1) o)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= o1 o2)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= us_null_ext__ o3)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= o4 o2)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= o5 o3)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= us_tag o6)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= (mk_root__ref (mk___rep (mk___split_fields result result1) result2))
  dispatch__incr3__result19)))

;; H
  (assert
  (=> (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647)
  (= dispatch__incr3__result18 (mk___rep (mk___split_fields o4 o5) o6))))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= dispatch__incr3__result9 dispatch__incr3__result6)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= dispatch__incr3__result10 dispatch__incr3__result7)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= dispatch__incr3__result11 dispatch__incr3__result8)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= dispatch__incr3__result12 dispatch__incr3__result17)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= (to_rep o7) 0)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= o7 o8)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= us_null_ext__ o9)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= o10 o8)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= o11 o9)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= us_tag o12)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= (mk_root__ref (mk___rep (mk___split_fields result3 result4) result5))
  dispatch__incr3__result19)))

;; H
  (assert
  (=>
  (not (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))
  (= dispatch__incr3__result17 (mk___rep (mk___split_fields o10 o11) o12))))

;; H
  (assert (= dispatch__incr3__result15 dispatch__incr3__result13))

;; H
  (assert (= dispatch__incr3__result16 dispatch__incr3__result14))

;; H
  (assert
  (< (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 2147483647))

(assert
;; WP_parameter_def
 ;; File "dispatch.ads", line 2, characters 0-0
  (not (in_range1
  (+ (to_rep (rec__dispatch__root__f (us_split_fields1 x))) 1))))
(check-sat)
(exit)
