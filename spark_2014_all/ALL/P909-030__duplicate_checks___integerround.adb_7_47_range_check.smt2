;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort t1 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 10) x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (t1 t1) Bool)

(declare-const dummy t1)

(declare-datatypes () ((t1__ref (mk_t1__ref (t1__content t1)))))
(define-fun t1__ref___projection ((a t1__ref)) t1 (t1__content a))

(define-fun dynamic_invariant ((temp___expr_171 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)) Bool (=>
                                      (or (= temp___is_init_168 true)
                                      (<= (- 10) 10)) (in_range1
                                      temp___expr_171)))

(declare-sort t2 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 10) x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (t2 t2) Bool)

(declare-const dummy1 t2)

(declare-datatypes () ((t2__ref (mk_t2__ref (t2__content t2)))))
(define-fun t2__ref___projection ((a t2__ref)) t2 (t2__content a))

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun dynamic_invariant1 ((temp___expr_177 Int)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)) Bool (and
                                      (=>
                                      (or (= temp___is_init_174 true)
                                      (<= (- 10) 10)) (in_range2
                                      temp___expr_177))
                                      (=> (= temp___do_toplevel_176 true)
                                      (=> (= temp___is_init_174 true)
                                      (and (<= (- 1) temp___expr_177)
                                      (<= temp___expr_177 1))))))

(define-fun dynamic_predicate ((temp___181 Int)) Bool (and
                                                      (<= (- 1) temp___181)
                                                      (<= temp___181 1)))

;; H
  (assert (in_range1 x))

;; H
  (assert
  (and (in_range2 x)
  (let ((temp___188 x)) (and (<= (- 1) temp___188) (<= temp___188 1)))))

(assert
;; WP_parameter_def
 ;; File "integerround.adb", line 5, characters 0-0
  (not (in_range2 x)))
(check-sat)
(exit)
