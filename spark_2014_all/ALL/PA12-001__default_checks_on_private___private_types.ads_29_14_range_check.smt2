;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort positive 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (positive positive) Bool)

(declare-fun dummy () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort integer 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-fun dummy1 () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range2 temp___expr_15)))

(declare-fun id (Int) Int)

(declare-fun id__function_guard (Int Int) Bool)

;; id__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true) (dynamic_invariant (id x) true
     false true)) :pattern ((id x)) )))

;; id__def_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true) (= (id x) x)) :pattern (
  (id x)) )))

(declare-fun to_rep (positive) Int)

(declare-fun of_rep (Int) positive)

;; inversion_axiom
  (assert
  (forall ((x positive))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x positive)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((us_split_discrs (mk___split_discrs (rec__private_types__p2__t__d Bool)))))
(define-fun us_split_discrs_2__projection ((a us_split_discrs)) Bool
  (rec__private_types__p2__t__d a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref_2__projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__private_types__p2__t__f positive)(rec__ext__ us_private)))))
(define-fun us_split_fields_F2__projection ((a us_split_fields)) positive
  (rec__private_types__p2__t__f a))

(define-fun us_split_fields___projection ((a us_split_fields)) us_private
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep_4__projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                              a))

(define-fun us_rep_5__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun us_rep_6__projection ((a us_rep)) Int (attr__tag a))

(define-fun private_types__p2__t__f__pred ((a us_rep)) Bool (= (to_int1
                                                               (rec__private_types__p2__t__d
                                                               (us_split_discrs1
                                                               a))) 1))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (= (rec__private_types__p2__t__d
                           (us_split_discrs1 a)) (rec__private_types__p2__t__d
                                                 (us_split_discrs1 b)))
                        (=> (private_types__p2__t__f__pred a)
                        (= (to_rep
                           (rec__private_types__p2__t__f
                           (us_split_fields1 a))) (to_rep
                                                  (rec__private_types__p2__t__f
                                                  (us_split_fields1 b))))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-fun us_tag () Int)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun private_types__p2__t__d__first__bit () Int)

(declare-fun private_types__p2__t__d__last__bit () Int)

(declare-fun private_types__p2__t__d__position () Int)

;; private_types__p2__t__d__first__bit_axiom
  (assert (<= 0 private_types__p2__t__d__first__bit))

;; private_types__p2__t__d__last__bit_axiom
  (assert
  (< private_types__p2__t__d__first__bit private_types__p2__t__d__last__bit))

;; private_types__p2__t__d__position_axiom
  (assert (<= 0 private_types__p2__t__d__position))

(declare-fun private_types__p2__t__f__first__bit () Int)

(declare-fun private_types__p2__t__f__last__bit () Int)

(declare-fun private_types__p2__t__f__position () Int)

;; private_types__p2__t__f__first__bit_axiom
  (assert (<= 0 private_types__p2__t__f__first__bit))

;; private_types__p2__t__f__last__bit_axiom
  (assert
  (< private_types__p2__t__f__first__bit private_types__p2__t__f__last__bit))

;; private_types__p2__t__f__position_axiom
  (assert (<= 0 private_types__p2__t__f__position))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-fun dummy2 () us_rep)

(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref_2__projection ((a t__ref)) us_rep (t__content a))

(declare-fun us_tag1 () Int)

(define-fun in_range3 ((rec__private_types__p2__t__d1 Bool)
  (a us_rep)) Bool (= rec__private_types__p2__t__d1 (rec__private_types__p2__t__d
                                                    (us_split_discrs1 a))))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun private_types__p2__t__d__first__bit1 () Int)

(declare-fun private_types__p2__t__d__last__bit1 () Int)

(declare-fun private_types__p2__t__d__position1 () Int)

;; private_types__p2__t__d__first__bit_axiom
  (assert (<= 0 private_types__p2__t__d__first__bit1))

;; private_types__p2__t__d__last__bit_axiom
  (assert
  (< private_types__p2__t__d__first__bit1 private_types__p2__t__d__last__bit1))

;; private_types__p2__t__d__position_axiom
  (assert (<= 0 private_types__p2__t__d__position1))

(declare-fun private_types__p2__t__f__first__bit1 () Int)

(declare-fun private_types__p2__t__f__last__bit1 () Int)

(declare-fun private_types__p2__t__f__position1 () Int)

;; private_types__p2__t__f__first__bit_axiom
  (assert (<= 0 private_types__p2__t__f__first__bit1))

;; private_types__p2__t__f__last__bit_axiom
  (assert
  (< private_types__p2__t__f__first__bit1 private_types__p2__t__f__last__bit1))

;; private_types__p2__t__f__position_axiom
  (assert (<= 0 private_types__p2__t__f__position1))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-fun dummy3 () us_rep)

(declare-datatypes () ((txS__ref (mk_txS__ref (txS__content us_rep)))))
(define-fun txS__ref___projection ((a txS__ref)) us_rep (txS__content a))

(define-fun dynamic_invariant1 ((temp___expr_161 us_rep)
  (temp___is_init_158 Bool) (temp___skip_constant_159 Bool)
  (temp___do_toplevel_160 Bool)) Bool (=>
                                      (not (= temp___skip_constant_159 true))
                                      (in_range3 (of_int 1) temp___expr_161)))

(define-fun default_initial_assumption ((temp___expr_163 us_rep)
  (temp___skip_top_level_164 Bool)) Bool (and
                                         (= (attr__tag temp___expr_163)
                                         us_tag1)
                                         (and
                                         (= (rec__private_types__p2__t__d
                                            (us_split_discrs1
                                            temp___expr_163)) (of_int 1))
                                         (=> (private_types__p2__t__f__pred
                                         temp___expr_163)
                                         (= (to_rep
                                            (rec__private_types__p2__t__f
                                            (us_split_fields1
                                            temp___expr_163))) (id 0))))))

(declare-fun x__split_discrs () us_split_discrs)

(declare-fun x__attr__tag () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range1
                                     temp___expr_39)))

(assert
;; WP_parameter_def
 ;; File "private_types.ads", line 2, characters 0-0
  (not (in_range 1)))
(check-sat)
(exit)
