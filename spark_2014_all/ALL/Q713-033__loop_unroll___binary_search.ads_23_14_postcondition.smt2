;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort u 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (u u) Bool)

(declare-const dummy1 u)

(declare-datatypes () ((u__ref (mk_u__ref (u__content u)))))
(define-fun u__ref___projection ((a u__ref)) u (u__content a))

(define-fun dynamic_invariant1 ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 1 10)) (in_range2 temp___expr_142)))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-const a (Array Int integer))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const i Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const left Int)

(declare-const right Int)

(declare-const med Int)

(declare-const j Int)

(declare-const binary_search__search__result Int)

(declare-const temp___158 Int)

(declare-const temp___157 Int)

(declare-const temp___156 Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const o4 Int)

(declare-const o5 Int)

(declare-const o6 Int)

(declare-const o7 Int)

(declare-const o8 Int)

(declare-const o9 Int)

(declare-const o10 Int)

(declare-const o11 Int)

(declare-const o12 Int)

(declare-const o13 Int)

(declare-const o14 Int)

(declare-const o15 Int)

(declare-const o16 Int)

(declare-const o17 Int)

(declare-const o18 Int)

(declare-const o19 Int)

(declare-const o20 Int)

(declare-const o21 Int)

(declare-const o22 Int)

(declare-const o23 Int)

(declare-const o24 Int)

(declare-const o25 Int)

(declare-const o26 Int)

(declare-const o27 Int)

(declare-const o28 Int)

(declare-const o29 Int)

(declare-const med1 Int)

(declare-const j1 Int)

(declare-const binary_search__search__result1 Int)

(declare-const result Int)

(declare-const left1 Int)

(declare-const result1 Int)

(declare-const right1 Int)

(declare-const result2 Int)

(declare-const binary_search__search__result2 Int)

(declare-const result3 Int)

(declare-const j2 Int)

(declare-const result4 Int)

(declare-const med2 Int)

(declare-const result5 Int)

(declare-const left2 Int)

(declare-const result6 Int)

(declare-const right2 Int)

(declare-const result7 Int)

(declare-const binary_search__search__result3 Int)

(declare-const result8 Int)

(declare-const j3 Int)

(declare-const result9 Int)

(declare-const med3 Int)

(declare-const result10 Int)

(declare-const left3 Int)

(declare-const result11 Int)

(declare-const right3 Int)

(declare-const result12 Int)

(declare-const binary_search__search__result4 Int)

(declare-const result13 Int)

(declare-const j4 Int)

(declare-const result14 Int)

(declare-const med4 Int)

(declare-const result15 Int)

(declare-const left4 Int)

(declare-const result16 int__ref)

(declare-const right4 Int)

(declare-const result17 int__ref)

(declare-const binary_search__search__result5 Int)

(declare-const result18 int__ref)

(declare-const j5 Int)

(declare-const result19 int__ref)

(declare-const med5 Int)

(declare-const result20 int__ref)

(declare-const left5 Int)

(declare-const result21 int__ref)

(declare-const right5 Int)

(declare-const result22 int__ref)

(declare-const binary_search__search__result6 Int)

(declare-const result23 int__ref)

(declare-const j6 Int)

(declare-const result24 int__ref)

(declare-const med6 Int)

(declare-const result25 int__ref)

(declare-const left6 Int)

(declare-const result26 int__ref)

(declare-const right6 Int)

(declare-const result27 int__ref)

(declare-const binary_search__search__result7 Int)

(declare-const result28 int__ref)

(declare-const j7 Int)

(declare-const result29 int__ref)

(declare-const med7 Int)

(declare-const result30 int__ref)

(declare-const left7 Int)

(declare-const result31 int__ref)

(declare-const right7 Int)

(declare-const result32 int__ref)

(declare-const binary_search__search__result8 Int)

(declare-const result33 int__ref)

(declare-const j8 Int)

(declare-const result34 int__ref)

(declare-const med8 Int)

(declare-const result35 int__ref)

(declare-const left8 Int)

(declare-const result36 int__ref)

(declare-const right8 Int)

(declare-const result37 int__ref)

(declare-const binary_search__search__result9 Int)

(declare-const result38 int__ref)

(declare-const j9 Int)

(declare-const result39 int__ref)

(declare-const med9 Int)

(declare-const result40 int__ref)

(declare-const left9 Int)

(declare-const result41 int__ref)

(declare-const right9 Int)

(declare-const result42 int__ref)

(declare-const binary_search__search__result10 Int)

(declare-const result43 int__ref)

(declare-const j10 Int)

(declare-const result44 int__ref)

(declare-const med10 Int)

(declare-const result45 int__ref)

(declare-const left10 Int)

(declare-const result46 int__ref)

(declare-const right10 Int)

(declare-const result47 int__ref)

(declare-const binary_search__search__result11 Int)

(declare-const result48 int__ref)

(declare-const j11 Int)

(declare-const result49 int__ref)

(declare-const med11 Int)

(declare-const result50 int__ref)

(declare-const left11 Int)

(declare-const result51 int__ref)

(declare-const right11 Int)

(declare-const result52 int__ref)

(declare-const binary_search__search__result12 Int)

(declare-const left12 int__ref)

(declare-const right12 int__ref)

(declare-const med12 int__ref)

(declare-const j12 int__ref)

(declare-const binary_search__search__result13 int__ref)

(declare-const left13 Int)

(declare-const right13 Int)

(declare-const med13 Int)

(declare-const j13 Int)

(declare-const binary_search__search__result14 Int)

(declare-const left14 int__ref)

(declare-const right14 int__ref)

(declare-const med14 int__ref)

(declare-const j14 int__ref)

(declare-const binary_search__search__result15 int__ref)

(declare-const left15 Int)

(declare-const right15 Int)

(declare-const med15 Int)

(declare-const j15 Int)

(declare-const binary_search__search__result16 Int)

(declare-const left16 int__ref)

(declare-const right16 int__ref)

(declare-const med16 int__ref)

(declare-const j16 int__ref)

(declare-const binary_search__search__result17 int__ref)

(declare-const left17 Int)

(declare-const right17 Int)

(declare-const med17 Int)

(declare-const j17 Int)

(declare-const binary_search__search__result18 Int)

(declare-const left18 int__ref)

(declare-const right18 int__ref)

(declare-const med18 int__ref)

(declare-const j18 int__ref)

(declare-const binary_search__search__result19 int__ref)

(declare-const left19 Int)

(declare-const right19 Int)

(declare-const med19 Int)

(declare-const j19 Int)

(declare-const binary_search__search__result20 Int)

(declare-const left20 int__ref)

(declare-const right20 int__ref)

(declare-const med20 int__ref)

(declare-const j20 int__ref)

(declare-const binary_search__search__result21 int__ref)

(declare-const left21 Int)

(declare-const right21 Int)

(declare-const med21 Int)

(declare-const j21 Int)

(declare-const binary_search__search__result22 Int)

(declare-const left22 int__ref)

(declare-const right22 int__ref)

(declare-const med22 int__ref)

(declare-const j22 int__ref)

(declare-const binary_search__search__result23 int__ref)

(declare-const left23 Int)

(declare-const right23 Int)

(declare-const med23 Int)

(declare-const j23 Int)

(declare-const binary_search__search__result24 Int)

(declare-const left24 int__ref)

(declare-const right24 int__ref)

(declare-const med24 int__ref)

(declare-const j24 int__ref)

(declare-const binary_search__search__result25 int__ref)

(declare-const left25 Int)

(declare-const right25 Int)

(declare-const med25 Int)

(declare-const j25 Int)

(declare-const binary_search__search__result26 Int)

(declare-const left26 int__ref)

(declare-const right26 int__ref)

(declare-const med26 int__ref)

(declare-const j26 int__ref)

(declare-const binary_search__search__result27 int__ref)

(declare-const left27 Int)

(declare-const right27 Int)

(declare-const med27 Int)

(declare-const j27 Int)

(declare-const binary_search__search__result28 Int)

(declare-const left28 int__ref)

(declare-const right28 int__ref)

(declare-const med28 int__ref)

(declare-const j28 int__ref)

(declare-const binary_search__search__result29 int__ref)

(declare-const left29 Int)

(declare-const right29 Int)

(declare-const med29 Int)

(declare-const j29 Int)

(declare-const binary_search__search__result30 Int)

(declare-const result53 int__ref)

(declare-const binary_search__search__result31 Int)

(declare-const binary_search__search__result32 int__ref)

(declare-const binary_search__search__result33 Int)

(declare-const left30 int__ref)

(declare-const right30 int__ref)

(declare-const med30 int__ref)

(declare-const j30 int__ref)

(declare-const binary_search__search__result34 int__ref)

(declare-const left31 Int)

(declare-const right31 Int)

(declare-const med31 Int)

(declare-const j31 Int)

(declare-const binary_search__search__result35 Int)

(declare-const left32 int__ref)

(declare-const right32 int__ref)

(declare-const med32 int__ref)

(declare-const j32 int__ref)

(declare-const binary_search__search__result36 int__ref)

(declare-const left33 Int)

(declare-const right33 Int)

(declare-const med33 Int)

(declare-const j33 Int)

(declare-const binary_search__search__result37 Int)

(declare-const left34 int__ref)

(declare-const right34 int__ref)

(declare-const med34 int__ref)

(declare-const j34 int__ref)

(declare-const binary_search__search__result38 int__ref)

(declare-const left35 Int)

(declare-const right35 Int)

(declare-const med35 Int)

(declare-const j35 Int)

(declare-const binary_search__search__result39 Int)

(define-fun result54 () int__ref (mk_int__ref result4))

(define-fun result55 () int__ref (mk_int__ref result3))

(define-fun j36 () int__ref (mk_int__ref j))

(define-fun med36 () int__ref (mk_int__ref med))

(declare-const result56 Int)

;; H
  (assert (in_range1 i))

;; H
  (assert
  (forall ((i1 Int))
  (=> (and (<= 1 i1) (<= i1 10))
  (forall ((i2 Int))
  (=> (and (<= i1 i2) (<= i2 10))
  (<= (to_rep (select a i1)) (to_rep (select a i2))))))))

;; H
  (assert (=> (<= 1 10) (in_range2 left)))

;; H
  (assert (=> (<= 1 10) (in_range2 right)))

;; H
  (assert (=> (<= 1 10) (in_range2 med)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref left)))

;; H
  (assert (= left1 1))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref right)))

;; H
  (assert (= right1 10))

;; H
  (assert
  (or
  (and
  (and
  (and
  (= binary_search__search__result36 (mk_int__ref
                                     binary_search__search__result2))
  (and (= j32 j36)
  (and (= med32 med36)
  (and (= right32 (mk_int__ref right1)) (= left32 (mk_int__ref left1))))))
  (and (= binary_search__search__result37 binary_search__search__result2)
  (and (= j33 j1)
  (and (= med33 med1) (and (= right33 right1) (= left33 left1))))))
  (and (or (< i (to_rep (select a left1))) (< (to_rep (select a right1)) i))
  (and (= (mk_int__ref result2) (mk_int__ref binary_search__search__result))
  (= binary_search__search__result2 0))))
  (and
  (and
  (not (or (< i (to_rep (select a left1))) (< (to_rep (select a right1)) i)))
  (and (= binary_search__search__result2 binary_search__search__result)
  (= binary_search__search__result2 binary_search__search__result1)))
  (and
  (and
  (and (= binary_search__search__result36 binary_search__search__result34)
  (and (= j32 j30)
  (and (= med32 med30) (and (= right32 right30) (= left32 left30)))))
  (and (= binary_search__search__result37 binary_search__search__result35)
  (and (= j33 j31)
  (and (= med33 med31) (and (= right33 right31) (= left33 left31))))))
  (or
  (and
  (and
  (and (= binary_search__search__result34 binary_search__search__result29)
  (and (= j30 j28)
  (and (= med30 med28) (and (= right30 right28) (= left30 left28)))))
  (and (= binary_search__search__result35 binary_search__search__result30)
  (and (= j31 j29)
  (and (= med31 med29) (and (= right31 right29) (= left31 left29))))))
  (and (= temp___158 med)
  (and (= temp___157 right1)
  (and (= temp___156 left1)
  (and (and (= result55 j36) (= j2 1))
  (and
  (and
  (and (= o (+ left1 (div1 (- right1 left1) 2))) (in_range2
  (+ left1 (div1 (- right1 left1) 2)))) (and (= result54 med36) (= med2 o)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result29 (mk_int__ref
                                     binary_search__search__result3))
  (and (= j28 (mk_int__ref j2))
  (and (= med28 (mk_int__ref med2))
  (and (= right28 (mk_int__ref right1)) (= left28 (mk_int__ref left1))))))
  (and (= binary_search__search__result30 binary_search__search__result3)
  (and (= j29 j2)
  (and (= med29 med2) (and (= right29 right1) (= left29 left1))))))
  (and (not (< (to_rep (select a med2)) i))
  (and (not (< i (to_rep (select a med2))))
  (and (= binary_search__search__result2 result7)
  (= binary_search__search__result3 med2)))))
  (and
  (ite (< (to_rep (select a med2)) i)
  (and
  (and (and (= o1 (+ med2 1)) (in_range2 (+ med2 1)))
  (and (= left1 result5) (= left2 o1)))
  (and (= binary_search__search__result3 binary_search__search__result2)
  (= right2 right1)))
  (and
  (and (< i (to_rep (select a med2)))
  (and
  (and (and (= o2 (- med2 1)) (in_range2 (- med2 1)))
  (and (= right1 result6) (= right2 o2)))
  (= binary_search__search__result3 binary_search__search__result2)))
  (= left2 left1)))
  (and
  (and
  (and (= binary_search__search__result29 binary_search__search__result27)
  (and (= j28 j26)
  (and (= med28 med26) (and (= right28 right26) (= left28 left26)))))
  (and (= binary_search__search__result30 binary_search__search__result28)
  (and (= j29 j27)
  (and (= med29 med27) (and (= right29 right27) (= left29 left27))))))
  (and (and (= j2 result8) (= j3 2))
  (and
  (and
  (and (= o3 (+ left2 (div1 (- right2 left2) 2))) (in_range2
  (+ left2 (div1 (- right2 left2) 2)))) (and (= med2 result9) (= med3 o3)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result27 (mk_int__ref
                                     binary_search__search__result4))
  (and (= j26 (mk_int__ref j3))
  (and (= med26 (mk_int__ref med3))
  (and (= right26 (mk_int__ref right2)) (= left26 (mk_int__ref left2))))))
  (and (= binary_search__search__result28 binary_search__search__result4)
  (and (= j27 j3)
  (and (= med27 med3) (and (= right27 right2) (= left27 left2))))))
  (and (not (< (to_rep (select a med3)) i))
  (and (not (< i (to_rep (select a med3))))
  (and (= binary_search__search__result3 result12)
  (= binary_search__search__result4 med3)))))
  (and
  (ite (< (to_rep (select a med3)) i)
  (and
  (and (and (= o4 (+ med3 1)) (in_range2 (+ med3 1)))
  (and (= left2 result10) (= left3 o4)))
  (and (= binary_search__search__result4 binary_search__search__result3)
  (= right3 right2)))
  (and
  (and (< i (to_rep (select a med3)))
  (and
  (and (and (= o5 (- med3 1)) (in_range2 (- med3 1)))
  (and (= right2 result11) (= right3 o5)))
  (= binary_search__search__result4 binary_search__search__result3)))
  (= left3 left2)))
  (and
  (and
  (and (= binary_search__search__result27 binary_search__search__result25)
  (and (= j26 j24)
  (and (= med26 med24) (and (= right26 right24) (= left26 left24)))))
  (and (= binary_search__search__result28 binary_search__search__result26)
  (and (= j27 j25)
  (and (= med27 med25) (and (= right27 right25) (= left27 left25))))))
  (and (and (= j3 result13) (= j4 3))
  (and
  (and
  (and (= o6 (+ left3 (div1 (- right3 left3) 2))) (in_range2
  (+ left3 (div1 (- right3 left3) 2)))) (and (= med3 result14) (= med4 o6)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result25 (mk_int__ref
                                     binary_search__search__result5))
  (and (= j24 (mk_int__ref j4))
  (and (= med24 (mk_int__ref med4))
  (and (= right24 (mk_int__ref right3)) (= left24 (mk_int__ref left3))))))
  (and (= binary_search__search__result26 binary_search__search__result5)
  (and (= j25 j4)
  (and (= med25 med4) (and (= right25 right3) (= left25 left3))))))
  (and (not (< (to_rep (select a med4)) i))
  (and (not (< i (to_rep (select a med4))))
  (and (= result17 (mk_int__ref binary_search__search__result4))
  (= binary_search__search__result5 med4)))))
  (and
  (ite (< (to_rep (select a med4)) i)
  (and
  (and (and (= o7 (+ med4 1)) (in_range2 (+ med4 1)))
  (and (= left3 result15) (= left4 o7)))
  (and (= binary_search__search__result5 binary_search__search__result4)
  (= right4 right3)))
  (and
  (and (< i (to_rep (select a med4)))
  (and
  (and (and (= o8 (- med4 1)) (in_range2 (- med4 1)))
  (and (= result16 (mk_int__ref right3)) (= right4 o8)))
  (= binary_search__search__result5 binary_search__search__result4)))
  (= left4 left3)))
  (and
  (and
  (and (= binary_search__search__result25 binary_search__search__result23)
  (and (= j24 j22)
  (and (= med24 med22) (and (= right24 right22) (= left24 left22)))))
  (and (= binary_search__search__result26 binary_search__search__result24)
  (and (= j25 j23)
  (and (= med25 med23) (and (= right25 right23) (= left25 left23))))))
  (and (and (= result18 (mk_int__ref j4)) (= j5 4))
  (and
  (and
  (and (= o9 (+ left4 (div1 (- right4 left4) 2))) (in_range2
  (+ left4 (div1 (- right4 left4) 2))))
  (and (= result19 (mk_int__ref med4)) (= med5 o9)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result23 (mk_int__ref
                                     binary_search__search__result6))
  (and (= j22 (mk_int__ref j5))
  (and (= med22 (mk_int__ref med5))
  (and (= right22 (mk_int__ref right4)) (= left22 (mk_int__ref left4))))))
  (and (= binary_search__search__result24 binary_search__search__result6)
  (and (= j23 j5)
  (and (= med23 med5) (and (= right23 right4) (= left23 left4))))))
  (and (not (< (to_rep (select a med5)) i))
  (and (not (< i (to_rep (select a med5))))
  (and (= result22 (mk_int__ref binary_search__search__result5))
  (= binary_search__search__result6 med5)))))
  (and
  (ite (< (to_rep (select a med5)) i)
  (and
  (and (and (= o10 (+ med5 1)) (in_range2 (+ med5 1)))
  (and (= result20 (mk_int__ref left4)) (= left5 o10)))
  (and (= binary_search__search__result6 binary_search__search__result5)
  (= right5 right4)))
  (and
  (and (< i (to_rep (select a med5)))
  (and
  (and (and (= o11 (- med5 1)) (in_range2 (- med5 1)))
  (and (= result21 (mk_int__ref right4)) (= right5 o11)))
  (= binary_search__search__result6 binary_search__search__result5)))
  (= left5 left4)))
  (and
  (and
  (and (= binary_search__search__result23 binary_search__search__result21)
  (and (= j22 j20)
  (and (= med22 med20) (and (= right22 right20) (= left22 left20)))))
  (and (= binary_search__search__result24 binary_search__search__result22)
  (and (= j23 j21)
  (and (= med23 med21) (and (= right23 right21) (= left23 left21))))))
  (and (and (= result23 (mk_int__ref j5)) (= j6 5))
  (and
  (and
  (and (= o12 (+ left5 (div1 (- right5 left5) 2))) (in_range2
  (+ left5 (div1 (- right5 left5) 2))))
  (and (= result24 (mk_int__ref med5)) (= med6 o12)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result21 (mk_int__ref
                                     binary_search__search__result7))
  (and (= j20 (mk_int__ref j6))
  (and (= med20 (mk_int__ref med6))
  (and (= right20 (mk_int__ref right5)) (= left20 (mk_int__ref left5))))))
  (and (= binary_search__search__result22 binary_search__search__result7)
  (and (= j21 j6)
  (and (= med21 med6) (and (= right21 right5) (= left21 left5))))))
  (and (not (< (to_rep (select a med6)) i))
  (and (not (< i (to_rep (select a med6))))
  (and (= result27 (mk_int__ref binary_search__search__result6))
  (= binary_search__search__result7 med6)))))
  (and
  (ite (< (to_rep (select a med6)) i)
  (and
  (and (and (= o13 (+ med6 1)) (in_range2 (+ med6 1)))
  (and (= result25 (mk_int__ref left5)) (= left6 o13)))
  (and (= binary_search__search__result7 binary_search__search__result6)
  (= right6 right5)))
  (and
  (and (< i (to_rep (select a med6)))
  (and
  (and (and (= o14 (- med6 1)) (in_range2 (- med6 1)))
  (and (= result26 (mk_int__ref right5)) (= right6 o14)))
  (= binary_search__search__result7 binary_search__search__result6)))
  (= left6 left5)))
  (and
  (and
  (and (= binary_search__search__result21 binary_search__search__result19)
  (and (= j20 j18)
  (and (= med20 med18) (and (= right20 right18) (= left20 left18)))))
  (and (= binary_search__search__result22 binary_search__search__result20)
  (and (= j21 j19)
  (and (= med21 med19) (and (= right21 right19) (= left21 left19))))))
  (and (and (= result28 (mk_int__ref j6)) (= j7 6))
  (and
  (and
  (and (= o15 (+ left6 (div1 (- right6 left6) 2))) (in_range2
  (+ left6 (div1 (- right6 left6) 2))))
  (and (= result29 (mk_int__ref med6)) (= med7 o15)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result19 (mk_int__ref
                                     binary_search__search__result8))
  (and (= j18 (mk_int__ref j7))
  (and (= med18 (mk_int__ref med7))
  (and (= right18 (mk_int__ref right6)) (= left18 (mk_int__ref left6))))))
  (and (= binary_search__search__result20 binary_search__search__result8)
  (and (= j19 j7)
  (and (= med19 med7) (and (= right19 right6) (= left19 left6))))))
  (and (not (< (to_rep (select a med7)) i))
  (and (not (< i (to_rep (select a med7))))
  (and (= result32 (mk_int__ref binary_search__search__result7))
  (= binary_search__search__result8 med7)))))
  (and
  (ite (< (to_rep (select a med7)) i)
  (and
  (and (and (= o16 (+ med7 1)) (in_range2 (+ med7 1)))
  (and (= result30 (mk_int__ref left6)) (= left7 o16)))
  (and (= binary_search__search__result8 binary_search__search__result7)
  (= right7 right6)))
  (and
  (and (< i (to_rep (select a med7)))
  (and
  (and (and (= o17 (- med7 1)) (in_range2 (- med7 1)))
  (and (= result31 (mk_int__ref right6)) (= right7 o17)))
  (= binary_search__search__result8 binary_search__search__result7)))
  (= left7 left6)))
  (and
  (and
  (and (= binary_search__search__result19 binary_search__search__result17)
  (and (= j18 j16)
  (and (= med18 med16) (and (= right18 right16) (= left18 left16)))))
  (and (= binary_search__search__result20 binary_search__search__result18)
  (and (= j19 j17)
  (and (= med19 med17) (and (= right19 right17) (= left19 left17))))))
  (and (and (= result33 (mk_int__ref j7)) (= j8 7))
  (and
  (and
  (and (= o18 (+ left7 (div1 (- right7 left7) 2))) (in_range2
  (+ left7 (div1 (- right7 left7) 2))))
  (and (= result34 (mk_int__ref med7)) (= med8 o18)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result17 (mk_int__ref
                                     binary_search__search__result9))
  (and (= j16 (mk_int__ref j8))
  (and (= med16 (mk_int__ref med8))
  (and (= right16 (mk_int__ref right7)) (= left16 (mk_int__ref left7))))))
  (and (= binary_search__search__result18 binary_search__search__result9)
  (and (= j17 j8)
  (and (= med17 med8) (and (= right17 right7) (= left17 left7))))))
  (and (not (< (to_rep (select a med8)) i))
  (and (not (< i (to_rep (select a med8))))
  (and (= result37 (mk_int__ref binary_search__search__result8))
  (= binary_search__search__result9 med8)))))
  (and
  (ite (< (to_rep (select a med8)) i)
  (and
  (and (and (= o19 (+ med8 1)) (in_range2 (+ med8 1)))
  (and (= result35 (mk_int__ref left7)) (= left8 o19)))
  (and (= binary_search__search__result9 binary_search__search__result8)
  (= right8 right7)))
  (and
  (and (< i (to_rep (select a med8)))
  (and
  (and (and (= o20 (- med8 1)) (in_range2 (- med8 1)))
  (and (= result36 (mk_int__ref right7)) (= right8 o20)))
  (= binary_search__search__result9 binary_search__search__result8)))
  (= left8 left7)))
  (and
  (and
  (and (= binary_search__search__result17 binary_search__search__result15)
  (and (= j16 j14)
  (and (= med16 med14) (and (= right16 right14) (= left16 left14)))))
  (and (= binary_search__search__result18 binary_search__search__result16)
  (and (= j17 j15)
  (and (= med17 med15) (and (= right17 right15) (= left17 left15))))))
  (and (and (= result38 (mk_int__ref j8)) (= j9 8))
  (and
  (and
  (and (= o21 (+ left8 (div1 (- right8 left8) 2))) (in_range2
  (+ left8 (div1 (- right8 left8) 2))))
  (and (= result39 (mk_int__ref med8)) (= med9 o21)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result15 (mk_int__ref
                                     binary_search__search__result10))
  (and (= j14 (mk_int__ref j9))
  (and (= med14 (mk_int__ref med9))
  (and (= right14 (mk_int__ref right8)) (= left14 (mk_int__ref left8))))))
  (and (= binary_search__search__result16 binary_search__search__result10)
  (and (= j15 j9)
  (and (= med15 med9) (and (= right15 right8) (= left15 left8))))))
  (and (not (< (to_rep (select a med9)) i))
  (and (not (< i (to_rep (select a med9))))
  (and (= result42 (mk_int__ref binary_search__search__result9))
  (= binary_search__search__result10 med9)))))
  (and
  (ite (< (to_rep (select a med9)) i)
  (and
  (and (and (= o22 (+ med9 1)) (in_range2 (+ med9 1)))
  (and (= result40 (mk_int__ref left8)) (= left9 o22)))
  (and (= binary_search__search__result10 binary_search__search__result9)
  (= right9 right8)))
  (and
  (and (< i (to_rep (select a med9)))
  (and
  (and (and (= o23 (- med9 1)) (in_range2 (- med9 1)))
  (and (= result41 (mk_int__ref right8)) (= right9 o23)))
  (= binary_search__search__result10 binary_search__search__result9)))
  (= left9 left8)))
  (and
  (and
  (and (= binary_search__search__result15 binary_search__search__result13)
  (and (= j14 j12)
  (and (= med14 med12) (and (= right14 right12) (= left14 left12)))))
  (and (= binary_search__search__result16 binary_search__search__result14)
  (and (= j15 j13)
  (and (= med15 med13) (and (= right15 right13) (= left15 left13))))))
  (and (and (= result43 (mk_int__ref j9)) (= j10 9))
  (and
  (and
  (and (= o24 (+ left9 (div1 (- right9 left9) 2))) (in_range2
  (+ left9 (div1 (- right9 left9) 2))))
  (and (= result44 (mk_int__ref med9)) (= med10 o24)))
  (or
  (and
  (and
  (and
  (= binary_search__search__result13 (mk_int__ref
                                     binary_search__search__result11))
  (and (= j12 (mk_int__ref j10))
  (and (= med12 (mk_int__ref med10))
  (and (= right12 (mk_int__ref right9)) (= left12 (mk_int__ref left9))))))
  (and (= binary_search__search__result14 binary_search__search__result11)
  (and (= j13 j10)
  (and (= med13 med10) (and (= right13 right9) (= left13 left9))))))
  (and (not (< (to_rep (select a med10)) i))
  (and (not (< i (to_rep (select a med10))))
  (and (= result47 (mk_int__ref binary_search__search__result10))
  (= binary_search__search__result11 med10)))))
  (and
  (ite (< (to_rep (select a med10)) i)
  (and
  (and (and (= o25 (+ med10 1)) (in_range2 (+ med10 1)))
  (and (= result45 (mk_int__ref left9)) (= left10 o25)))
  (and (= binary_search__search__result11 binary_search__search__result10)
  (= right10 right9)))
  (and
  (and (< i (to_rep (select a med10)))
  (and
  (and (and (= o26 (- med10 1)) (in_range2 (- med10 1)))
  (and (= result46 (mk_int__ref right9)) (= right10 o26)))
  (= binary_search__search__result11 binary_search__search__result10)))
  (= left10 left9)))
  (and
  (and
  (and
  (= binary_search__search__result13 (mk_int__ref
                                     binary_search__search__result12))
  (and (= j12 (mk_int__ref j11))
  (and (= med12 (mk_int__ref med11))
  (and (= right12 (mk_int__ref right10)) (= left12 (mk_int__ref left10))))))
  (and (= binary_search__search__result14 binary_search__search__result12)
  (and (= j13 j11)
  (and (= med13 med11) (and (= right13 right10) (= left13 left10))))))
  (and (and (= result48 (mk_int__ref j10)) (= j11 10))
  (and
  (and
  (and (= o27 (+ left10 (div1 (- right10 left10) 2))) (in_range2
  (+ left10 (div1 (- right10 left10) 2))))
  (and (= result49 (mk_int__ref med10)) (= med11 o27)))
  (and (not (< (to_rep (select a med11)) i))
  (and (not (< i (to_rep (select a med11))))
  (and (= result52 (mk_int__ref binary_search__search__result11))
  (= binary_search__search__result12 med11)))))))))))))))))))))))))))))))))))))))))))))))))))))))
  (and
  (and (and (= result55 j36) (= j2 1))
  (and
  (and
  (and (= o (+ left1 (div1 (- right1 left1) 2))) (in_range2
  (+ left1 (div1 (- right1 left1) 2)))) (and (= result54 med36) (= med2 o)))
  (and
  (ite (< (to_rep (select a med2)) i)
  (and
  (and (and (= o1 (+ med2 1)) (in_range2 (+ med2 1)))
  (and (= left1 result5) (= left2 o1)))
  (and (= binary_search__search__result3 binary_search__search__result2)
  (= right2 right1)))
  (and
  (and (< i (to_rep (select a med2)))
  (and
  (and (and (= o2 (- med2 1)) (in_range2 (- med2 1)))
  (and (= right1 result6) (= right2 o2)))
  (= binary_search__search__result3 binary_search__search__result2)))
  (= left2 left1)))
  (and (and (= j2 result8) (= j3 2))
  (and
  (and
  (and (= o3 (+ left2 (div1 (- right2 left2) 2))) (in_range2
  (+ left2 (div1 (- right2 left2) 2)))) (and (= med2 result9) (= med3 o3)))
  (and
  (ite (< (to_rep (select a med3)) i)
  (and
  (and (and (= o4 (+ med3 1)) (in_range2 (+ med3 1)))
  (and (= left2 result10) (= left3 o4)))
  (and (= binary_search__search__result4 binary_search__search__result3)
  (= right3 right2)))
  (and
  (and (< i (to_rep (select a med3)))
  (and
  (and (and (= o5 (- med3 1)) (in_range2 (- med3 1)))
  (and (= right2 result11) (= right3 o5)))
  (= binary_search__search__result4 binary_search__search__result3)))
  (= left3 left2)))
  (and (and (= j3 result13) (= j4 3))
  (and
  (and
  (and (= o6 (+ left3 (div1 (- right3 left3) 2))) (in_range2
  (+ left3 (div1 (- right3 left3) 2)))) (and (= med3 result14) (= med4 o6)))
  (and
  (ite (< (to_rep (select a med4)) i)
  (and
  (and (and (= o7 (+ med4 1)) (in_range2 (+ med4 1)))
  (and (= left3 result15) (= left4 o7)))
  (and (= binary_search__search__result5 binary_search__search__result4)
  (= right4 right3)))
  (and
  (and (< i (to_rep (select a med4)))
  (and
  (and (and (= o8 (- med4 1)) (in_range2 (- med4 1)))
  (and (= result16 (mk_int__ref right3)) (= right4 o8)))
  (= binary_search__search__result5 binary_search__search__result4)))
  (= left4 left3)))
  (and (and (= result18 (mk_int__ref j4)) (= j5 4))
  (and
  (and
  (and (= o9 (+ left4 (div1 (- right4 left4) 2))) (in_range2
  (+ left4 (div1 (- right4 left4) 2))))
  (and (= result19 (mk_int__ref med4)) (= med5 o9)))
  (and
  (ite (< (to_rep (select a med5)) i)
  (and
  (and (and (= o10 (+ med5 1)) (in_range2 (+ med5 1)))
  (and (= result20 (mk_int__ref left4)) (= left5 o10)))
  (and (= binary_search__search__result6 binary_search__search__result5)
  (= right5 right4)))
  (and
  (and (< i (to_rep (select a med5)))
  (and
  (and (and (= o11 (- med5 1)) (in_range2 (- med5 1)))
  (and (= result21 (mk_int__ref right4)) (= right5 o11)))
  (= binary_search__search__result6 binary_search__search__result5)))
  (= left5 left4)))
  (and (and (= result23 (mk_int__ref j5)) (= j6 5))
  (and
  (and
  (and (= o12 (+ left5 (div1 (- right5 left5) 2))) (in_range2
  (+ left5 (div1 (- right5 left5) 2))))
  (and (= result24 (mk_int__ref med5)) (= med6 o12)))
  (and
  (ite (< (to_rep (select a med6)) i)
  (and
  (and (and (= o13 (+ med6 1)) (in_range2 (+ med6 1)))
  (and (= result25 (mk_int__ref left5)) (= left6 o13)))
  (and (= binary_search__search__result7 binary_search__search__result6)
  (= right6 right5)))
  (and
  (and (< i (to_rep (select a med6)))
  (and
  (and (and (= o14 (- med6 1)) (in_range2 (- med6 1)))
  (and (= result26 (mk_int__ref right5)) (= right6 o14)))
  (= binary_search__search__result7 binary_search__search__result6)))
  (= left6 left5)))
  (and (and (= result28 (mk_int__ref j6)) (= j7 6))
  (and
  (and
  (and (= o15 (+ left6 (div1 (- right6 left6) 2))) (in_range2
  (+ left6 (div1 (- right6 left6) 2))))
  (and (= result29 (mk_int__ref med6)) (= med7 o15)))
  (and
  (ite (< (to_rep (select a med7)) i)
  (and
  (and (and (= o16 (+ med7 1)) (in_range2 (+ med7 1)))
  (and (= result30 (mk_int__ref left6)) (= left7 o16)))
  (and (= binary_search__search__result8 binary_search__search__result7)
  (= right7 right6)))
  (and
  (and (< i (to_rep (select a med7)))
  (and
  (and (and (= o17 (- med7 1)) (in_range2 (- med7 1)))
  (and (= result31 (mk_int__ref right6)) (= right7 o17)))
  (= binary_search__search__result8 binary_search__search__result7)))
  (= left7 left6)))
  (and (and (= result33 (mk_int__ref j7)) (= j8 7))
  (and
  (and
  (and (= o18 (+ left7 (div1 (- right7 left7) 2))) (in_range2
  (+ left7 (div1 (- right7 left7) 2))))
  (and (= result34 (mk_int__ref med7)) (= med8 o18)))
  (and
  (ite (< (to_rep (select a med8)) i)
  (and
  (and (and (= o19 (+ med8 1)) (in_range2 (+ med8 1)))
  (and (= result35 (mk_int__ref left7)) (= left8 o19)))
  (and (= binary_search__search__result9 binary_search__search__result8)
  (= right8 right7)))
  (and
  (and (< i (to_rep (select a med8)))
  (and
  (and (and (= o20 (- med8 1)) (in_range2 (- med8 1)))
  (and (= result36 (mk_int__ref right7)) (= right8 o20)))
  (= binary_search__search__result9 binary_search__search__result8)))
  (= left8 left7)))
  (and (and (= result38 (mk_int__ref j8)) (= j9 8))
  (and
  (and
  (and (= o21 (+ left8 (div1 (- right8 left8) 2))) (in_range2
  (+ left8 (div1 (- right8 left8) 2))))
  (and (= result39 (mk_int__ref med8)) (= med9 o21)))
  (and
  (ite (< (to_rep (select a med9)) i)
  (and
  (and (and (= o22 (+ med9 1)) (in_range2 (+ med9 1)))
  (and (= result40 (mk_int__ref left8)) (= left9 o22)))
  (and (= binary_search__search__result10 binary_search__search__result9)
  (= right9 right8)))
  (and
  (and (< i (to_rep (select a med9)))
  (and
  (and (and (= o23 (- med9 1)) (in_range2 (- med9 1)))
  (and (= result41 (mk_int__ref right8)) (= right9 o23)))
  (= binary_search__search__result10 binary_search__search__result9)))
  (= left9 left8)))
  (and (and (= result43 (mk_int__ref j9)) (= j10 9))
  (and
  (and
  (and (= o24 (+ left9 (div1 (- right9 left9) 2))) (in_range2
  (+ left9 (div1 (- right9 left9) 2))))
  (and (= result44 (mk_int__ref med9)) (= med10 o24)))
  (and
  (ite (< (to_rep (select a med10)) i)
  (and
  (and (and (= o25 (+ med10 1)) (in_range2 (+ med10 1)))
  (and (= result45 (mk_int__ref left9)) (= left10 o25)))
  (and (= binary_search__search__result11 binary_search__search__result10)
  (= right10 right9)))
  (and
  (and (< i (to_rep (select a med10)))
  (and
  (and (and (= o26 (- med10 1)) (in_range2 (- med10 1)))
  (and (= result46 (mk_int__ref right9)) (= right10 o26)))
  (= binary_search__search__result11 binary_search__search__result10)))
  (= left10 left9)))
  (and (and (= result48 (mk_int__ref j10)) (= j11 10))
  (and
  (and
  (and (= o27 (+ left10 (div1 (- right10 left10) 2))) (in_range2
  (+ left10 (div1 (- right10 left10) 2))))
  (and (= result49 (mk_int__ref med10)) (= med11 o27)))
  (ite (< (to_rep (select a med11)) i)
  (and
  (and (and (= o28 (+ med11 1)) (in_range2 (+ med11 1)))
  (and (= result50 (mk_int__ref left10)) (= left11 o28)))
  (and (= binary_search__search__result12 binary_search__search__result11)
  (= right11 right10)))
  (and
  (and (< i (to_rep (select a med11)))
  (and
  (and (and (= o29 (- med11 1)) (in_range2 (- med11 1)))
  (and (= result51 (mk_int__ref right10)) (= right11 o29)))
  (= binary_search__search__result12 binary_search__search__result11)))
  (= left11 left10))))))))))))))))))))))))))))))))
  (and
  (and
  (and (= binary_search__search__result34 binary_search__search__result32)
  (and (= j30 (mk_int__ref j11))
  (and (= med30 (mk_int__ref med11))
  (and (= right30 (mk_int__ref right11)) (= left30 (mk_int__ref left11))))))
  (and (= binary_search__search__result35 binary_search__search__result33)
  (and (= j31 j11)
  (and (= med31 med11) (and (= right31 right11) (= left31 left11))))))
  (and
  (and
  (= binary_search__search__result32 (mk_int__ref
                                     binary_search__search__result31))
  (= binary_search__search__result33 binary_search__search__result31))
  (and (= result53 (mk_int__ref binary_search__search__result12))
  (= binary_search__search__result31 0))))))))))

;; H
  (assert
  (= binary_search__search__result38 binary_search__search__result36))

;; H
  (assert (= j34 j32))

;; H
  (assert (= med34 med32))

;; H
  (assert (= right34 right32))

;; H
  (assert (= left34 left32))

;; H
  (assert
  (= binary_search__search__result39 binary_search__search__result37))

;; H
  (assert (= j35 j33))

;; H
  (assert (= med35 med33))

;; H
  (assert (= right35 right33))

;; H
  (assert (= left35 left33))

;; H
  (assert (= result56 (int__content binary_search__search__result38)))

;; H
  (assert (<= 1 (int__content binary_search__search__result38)))

;; H
  (assert (<= (int__content binary_search__search__result38) 10))

(assert
;; WP_parameter_def
 ;; File "binary_search.ads", line 12, characters 0-0
  (not
  (= (to_rep (select a (int__content binary_search__search__result38)))
  i)))
(check-sat)
(exit)
