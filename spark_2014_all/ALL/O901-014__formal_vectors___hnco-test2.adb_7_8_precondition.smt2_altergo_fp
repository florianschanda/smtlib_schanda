(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type capacity_range

predicate in_range(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : capacity_range, capacity_range -> bool

logic dummy : capacity_range

type capacity_range__ref = { capacity_range__content : capacity_range
}

function capacity_range__ref___projection(a: capacity_range__ref) : capacity_range =
  (a).capacity_range__content

type capacity_range1

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : capacity_range1, capacity_range1 -> bool

logic dummy1 : capacity_range1

type capacity_range__ref1 = { capacity_range__content1 : capacity_range1
}

function capacity_range__ref___2__projection(a: capacity_range__ref1) : capacity_range1 =
  (a).capacity_range__content1

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_split_discrs = {
rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity :
capacity_range1
}

function us_split_discrs___projection(a: us_split_discrs) : capacity_range1 =
  (a).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = {
rec__hnco__test2__v_type_owner__vector_type_owner__vector : us_main_type
}

function us_split_fields_Vector__projection(a: us_split_fields) : us_main_type =
  (a).rec__hnco__test2__v_type_owner__vector_type_owner__vector

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields
}

function us_rep___projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___2__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : capacity_range1

logic dummy3 : us_main_type

type vector__ref = { vector__content : us_rep
}

function vector__ref___projection(a: vector__ref) : us_rep =
  (a).vector__content

logic to_rep : capacity_range1 -> int

logic of_rep : int -> capacity_range1

axiom inversion_axiom :
  (forall x:capacity_range1 [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom :
  (forall x:capacity_range1 [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

predicate in_range2(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size1({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment1({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit1 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position1 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom1 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom1 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit1)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom1 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position1)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy4 : capacity_range1

logic dummy5 : us_main_type

type t179s__ref = { t179s__content : us_rep
}

function t179s__ref___projection(a: t179s__ref) : us_rep = (a).t179s__content

type us_split_discrs2 = {
rec__hnco__test2__v_type_owner__vector_type__capacity : capacity_range
}

function us_split_discrs___2__projection(a: us_split_discrs2) : capacity_range =
  (a).rec__hnco__test2__v_type_owner__vector_type__capacity

type us_split_discrs__ref1 = { us_split_discrs__content1 : us_split_discrs2
}

function us_split_discrs__ref___2__projection(a: us_split_discrs__ref1) : us_split_discrs2 =
  (a).us_split_discrs__content1

type us_split_fields2 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector : us_rep;
rec__ext__ : us_private
}

function us_split_fields_Hidden_Vector__projection(a: us_split_fields2) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector

function us_split_fields___projection(a: us_split_fields2) : us_private =
  (a).rec__ext__

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_discrs3 : us_split_discrs2; us_split_fields3 :
us_split_fields2; attr__tag : int
}

function us_rep___3__projection(a: us_rep1) : us_split_discrs2 =
  (a).us_split_discrs3

function us_rep___4__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function us_rep___5__projection(a: us_rep1) : int = (a).attr__tag

logic us_dispatch_eq : us_rep1, us_rep1 -> bool

logic us_tag : int

logic value__size2 : int

logic object__size2 : us_rep1 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep1 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size2({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__ = a3 }; attr__tag = a4 })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment2({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__ = a3 }; attr__tag = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit : int

logic hnco__test2__v_type_owner__vector_type__capacity__position : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit <  hnco__test2__v_type_owner__vector_type__capacity__last__bit)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position)

logic user_eq4 : us_rep1, us_rep1 -> bool

logic dummy6 : capacity_range

logic dummy7 : capacity_range1

logic dummy8 : us_main_type

logic dummy9 : us_private

logic dummy10 : int

type vector_type__ref = { vector_type__content : us_rep1
}

function vector_type__ref___projection(a: vector_type__ref) : us_rep1 =
  (a).vector_type__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq3 : bool, bool -> bool

axiom bool_eq_def2 :
  (forall x:bool. forall y:bool [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range3(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE2 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> bool

logic to_rep1 : capacity_range -> int

logic of_rep1 : int -> capacity_range

axiom inversion_axiom1 :
  (forall x:capacity_range [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:capacity_range [to_rep1(x)]. in_range(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range(x) ->
  (to_rep1(of_rep1(x)) = x)))

logic length : us_rep1 -> int

logic length__function_guard : int, us_rep1 -> prop

logic length1 : int, us_rep1 -> int

logic length__function_guard1 : int, int, us_rep1 -> prop

predicate in_range4(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size3 : int

logic object__size3 : us_rep -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size3({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment3({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit2 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position2 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom2 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom2 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit2)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom2 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position2)

logic user_eq5 : us_rep, us_rep -> bool

logic dummy11 : capacity_range1

logic dummy12 : us_main_type

type t188s__ref = { t188s__content : us_rep
}

function t188s__ref___projection(a: t188s__ref) : us_rep = (a).t188s__content

type us_split_fields4 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 : us_rep;
rec__ext__1 : us_private
}

function us_split_fields_Hidden_Vector__2__projection(a: us_split_fields4) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector1

function us_split_fields___2__projection(a: us_split_fields4) : us_private =
  (a).rec__ext__1

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_discrs4 : us_split_discrs2; us_split_fields5 :
us_split_fields4; attr__tag1 : int
}

function us_rep___6__projection(a: us_rep2) : us_split_discrs2 =
  (a).us_split_discrs4

function us_rep___7__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

function us_rep___8__projection(a: us_rep2) : int = (a).attr__tag1

logic hide_ext__ : us_private -> us_private

logic extract__ext__ : us_private -> us_private

function to_base(a: us_rep2) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs4; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields5).rec__hnco__test2__v_type_owner__vector_type__hidden_vector1;
  rec__ext__ = hide_ext__(((a).us_split_fields5).rec__ext__1) }; attr__tag =
  (a).attr__tag1 }

function of_base(r: us_rep1) : us_rep2 = { us_split_discrs4 =
  (r).us_split_discrs3; us_split_fields5 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__1 = extract__ext__(((r).us_split_fields3).rec__ext__) };
  attr__tag1 = (r).attr__tag }

logic us_tag1 : int

predicate in_range5(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size4 : int

logic object__size4 : us_rep2 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep2 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size4({ us_split_discrs4 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields5 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__1 = a3 }; attr__tag1 = a4 })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment4({ us_split_discrs4 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields5 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__1 = a3 }; attr__tag1 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit1 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit1 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position1 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom1 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit1)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom1 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit1 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit1)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom1 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position1)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit1 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position1 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom1 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom1 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit1)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom1 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position1)

logic user_eq6 : us_rep2, us_rep2 -> bool

logic dummy13 : capacity_range

logic dummy14 : capacity_range1

logic dummy15 : us_main_type

logic dummy16 : us_private

logic dummy17 : int

type t187s__ref = { t187s__content : us_rep2
}

function t187s__ref___projection(a: t187s__ref) : us_rep2 =
  (a).t187s__content

predicate in_range6(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size5 : int

logic object__size5 : us_rep -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size5({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment5({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit3 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit3 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position3 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom3 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit3)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom3 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit3 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit3)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom3 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position3)

logic user_eq7 : us_rep, us_rep -> bool

logic dummy18 : capacity_range1

logic dummy19 : us_main_type

type t194s__ref = { t194s__content : us_rep
}

function t194s__ref___projection(a: t194s__ref) : us_rep = (a).t194s__content

type us_split_fields6 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector2 : us_rep;
rec__ext__2 : us_private
}

function us_split_fields_Hidden_Vector__3__projection(a: us_split_fields6) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector2

function us_split_fields___3__projection(a: us_split_fields6) : us_private =
  (a).rec__ext__2

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___4__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep3 = { us_split_discrs5 : us_split_discrs2; us_split_fields7 :
us_split_fields6; attr__tag2 : int
}

function us_rep___9__projection(a: us_rep3) : us_split_discrs2 =
  (a).us_split_discrs5

function us_rep___10__projection(a: us_rep3) : us_split_fields6 =
  (a).us_split_fields7

function us_rep___11__projection(a: us_rep3) : int = (a).attr__tag2

logic hide_ext__1 : us_private -> us_private

logic extract__ext__1 : us_private -> us_private

function to_base1(a: us_rep3) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs5; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields7).rec__hnco__test2__v_type_owner__vector_type__hidden_vector2;
  rec__ext__ = hide_ext__1(((a).us_split_fields7).rec__ext__2) }; attr__tag =
  (a).attr__tag2 }

function of_base1(r: us_rep1) : us_rep3 = { us_split_discrs5 =
  (r).us_split_discrs3; us_split_fields7 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector2 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__2 = extract__ext__1(((r).us_split_fields3).rec__ext__) };
  attr__tag2 = (r).attr__tag }

logic us_tag2 : int

predicate in_range7(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size6 : int

logic object__size6 : us_rep3 -> int

logic value__alignment6 : int

logic object__alignment6 : us_rep3 -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size6({ us_split_discrs5 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields7 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector2 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__2 = a3 }; attr__tag2 = a4 })))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment6({ us_split_discrs5 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields7 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector2 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__2 = a3 }; attr__tag2 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit2 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit2 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position2 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom2 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit2)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom2 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit2 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit2)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom2 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position2)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit2 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit2 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position2 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom2 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit2)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom2 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit2 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit2)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom2 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position2)

logic user_eq8 : us_rep3, us_rep3 -> bool

logic dummy20 : capacity_range

logic dummy21 : capacity_range1

logic dummy22 : us_main_type

logic dummy23 : us_private

logic dummy24 : int

type s193s__ref = { s193s__content : us_rep3
}

function s193s__ref___projection(a: s193s__ref) : us_rep3 =
  (a).s193s__content

predicate in_range8(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size7 : int

logic object__size7 : us_rep -> int

logic value__alignment7 : int

logic object__alignment7 : us_rep -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size7({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment7({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit4 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit4 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position4 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom4 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit4)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom4 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit4 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit4)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom4 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position4)

logic user_eq9 : us_rep, us_rep -> bool

logic dummy25 : capacity_range1

logic dummy26 : us_main_type

type t191s__ref = { t191s__content : us_rep
}

function t191s__ref___projection(a: t191s__ref) : us_rep = (a).t191s__content

type us_split_fields8 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector3 : us_rep;
rec__ext__3 : us_private
}

function us_split_fields_Hidden_Vector__4__projection(a: us_split_fields8) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector3

function us_split_fields___4__projection(a: us_split_fields8) : us_private =
  (a).rec__ext__3

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___5__projection(a: us_split_fields__ref4) : us_split_fields8 =
  (a).us_split_fields__content4

type us_rep4 = { us_split_discrs6 : us_split_discrs2; us_split_fields9 :
us_split_fields8; attr__tag3 : int
}

function us_rep___12__projection(a: us_rep4) : us_split_discrs2 =
  (a).us_split_discrs6

function us_rep___13__projection(a: us_rep4) : us_split_fields8 =
  (a).us_split_fields9

function us_rep___14__projection(a: us_rep4) : int = (a).attr__tag3

logic hide_ext__2 : us_private -> us_private

logic extract__ext__2 : us_private -> us_private

function to_base2(a: us_rep4) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs6; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields9).rec__hnco__test2__v_type_owner__vector_type__hidden_vector3;
  rec__ext__ = hide_ext__2(((a).us_split_fields9).rec__ext__3) }; attr__tag =
  (a).attr__tag3 }

function of_base2(r: us_rep1) : us_rep4 = { us_split_discrs6 =
  (r).us_split_discrs3; us_split_fields9 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector3 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__3 = extract__ext__2(((r).us_split_fields3).rec__ext__) };
  attr__tag3 = (r).attr__tag }

logic us_tag3 : int

predicate in_range9(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size8 : int

logic object__size8 : us_rep4 -> int

logic value__alignment8 : int

logic object__alignment8 : us_rep4 -> int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size8({ us_split_discrs6 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields9 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector3 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__3 = a3 }; attr__tag3 = a4 })))

axiom value__alignment_axiom8 : (0 <= value__alignment8)

axiom object__alignment_axiom8 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment8({ us_split_discrs6 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields9 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector3 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__3 = a3 }; attr__tag3 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit3 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit3 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position3 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom3 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit3)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom3 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit3 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit3)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom3 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position3)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit3 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit3 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position3 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom3 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit3)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom3 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit3 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit3)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom3 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position3)

logic user_eq10 : us_rep4, us_rep4 -> bool

logic dummy27 : capacity_range

logic dummy28 : capacity_range1

logic dummy29 : us_main_type

logic dummy30 : us_private

logic dummy31 : int

type s190s__ref = { s190s__content : us_rep4
}

function s190s__ref___projection(a: s190s__ref) : us_rep4 =
  (a).s190s__content

predicate in_range10(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size9 : int

logic object__size9 : us_rep -> int

logic value__alignment9 : int

logic object__alignment9 : us_rep -> int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size9({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom9 : (0 <= value__alignment9)

axiom object__alignment_axiom9 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment9({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit5 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit5 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position5 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom5 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit5)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom5 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit5 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit5)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom5 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position5)

logic user_eq11 : us_rep, us_rep -> bool

logic dummy32 : capacity_range1

logic dummy33 : us_main_type

type t203s__ref = { t203s__content : us_rep
}

function t203s__ref___projection(a: t203s__ref) : us_rep = (a).t203s__content

type us_split_fields10 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector4 : us_rep;
rec__ext__4 : us_private
}

function us_split_fields_Hidden_Vector__5__projection(a: us_split_fields10) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector4

function us_split_fields___5__projection(a: us_split_fields10) : us_private =
  (a).rec__ext__4

type us_split_fields__ref5 = { us_split_fields__content5 : us_split_fields10
}

function us_split_fields__ref___6__projection(a: us_split_fields__ref5) : us_split_fields10 =
  (a).us_split_fields__content5

type us_rep5 = { us_split_discrs7 : us_split_discrs2; us_split_fields11 :
us_split_fields10; attr__tag4 : int
}

function us_rep___15__projection(a: us_rep5) : us_split_discrs2 =
  (a).us_split_discrs7

function us_rep___16__projection(a: us_rep5) : us_split_fields10 =
  (a).us_split_fields11

function us_rep___17__projection(a: us_rep5) : int = (a).attr__tag4

logic hide_ext__3 : us_private -> us_private

logic extract__ext__3 : us_private -> us_private

function to_base3(a: us_rep5) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs7; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields11).rec__hnco__test2__v_type_owner__vector_type__hidden_vector4;
  rec__ext__ = hide_ext__3(((a).us_split_fields11).rec__ext__4) };
  attr__tag = (a).attr__tag4 }

function of_base3(r: us_rep1) : us_rep5 = { us_split_discrs7 =
  (r).us_split_discrs3; us_split_fields11 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector4 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__4 = extract__ext__3(((r).us_split_fields3).rec__ext__) };
  attr__tag4 = (r).attr__tag }

logic us_tag4 : int

predicate in_range11(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size10 : int

logic object__size10 : us_rep5 -> int

logic value__alignment10 : int

logic object__alignment10 : us_rep5 -> int

axiom value__size_axiom10 : (0 <= value__size10)

axiom object__size_axiom10 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size10({ us_split_discrs7 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields11 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector4 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__4 = a3 }; attr__tag4 = a4 })))

axiom value__alignment_axiom10 : (0 <= value__alignment10)

axiom object__alignment_axiom10 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment10({ us_split_discrs7 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields11 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector4 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__4 = a3 }; attr__tag4 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit4 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit4 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position4 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom4 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit4)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom4 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit4 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit4)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom4 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position4)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit4 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit4 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position4 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom4 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit4)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom4 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit4 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit4)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom4 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position4)

logic user_eq12 : us_rep5, us_rep5 -> bool

logic dummy34 : capacity_range

logic dummy35 : capacity_range1

logic dummy36 : us_main_type

logic dummy37 : us_private

logic dummy38 : int

type t202s__ref = { t202s__content : us_rep5
}

function t202s__ref___projection(a: t202s__ref) : us_rep5 =
  (a).t202s__content

predicate in_range12(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size11 : int

logic object__size11 : us_rep -> int

logic value__alignment11 : int

logic object__alignment11 : us_rep -> int

axiom value__size_axiom11 : (0 <= value__size11)

axiom object__size_axiom11 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size11({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom11 : (0 <= value__alignment11)

axiom object__alignment_axiom11 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment11({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit6 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit6 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position6 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom6 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit6)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom6 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit6 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit6)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom6 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position6)

logic user_eq13 : us_rep, us_rep -> bool

logic dummy39 : capacity_range1

logic dummy40 : us_main_type

type t206s__ref = { t206s__content : us_rep
}

function t206s__ref___projection(a: t206s__ref) : us_rep = (a).t206s__content

type us_split_fields12 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector5 : us_rep;
rec__ext__5 : us_private
}

function us_split_fields_Hidden_Vector__6__projection(a: us_split_fields12) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector5

function us_split_fields___6__projection(a: us_split_fields12) : us_private =
  (a).rec__ext__5

type us_split_fields__ref6 = { us_split_fields__content6 : us_split_fields12
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref6) : us_split_fields12 =
  (a).us_split_fields__content6

type us_rep6 = { us_split_discrs8 : us_split_discrs2; us_split_fields13 :
us_split_fields12; attr__tag5 : int
}

function us_rep___18__projection(a: us_rep6) : us_split_discrs2 =
  (a).us_split_discrs8

function us_rep___19__projection(a: us_rep6) : us_split_fields12 =
  (a).us_split_fields13

function us_rep___20__projection(a: us_rep6) : int = (a).attr__tag5

logic hide_ext__4 : us_private -> us_private

logic extract__ext__4 : us_private -> us_private

function to_base4(a: us_rep6) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs8; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields13).rec__hnco__test2__v_type_owner__vector_type__hidden_vector5;
  rec__ext__ = hide_ext__4(((a).us_split_fields13).rec__ext__5) };
  attr__tag = (a).attr__tag5 }

function of_base4(r: us_rep1) : us_rep6 = { us_split_discrs8 =
  (r).us_split_discrs3; us_split_fields13 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector5 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__5 = extract__ext__4(((r).us_split_fields3).rec__ext__) };
  attr__tag5 = (r).attr__tag }

logic us_tag5 : int

predicate in_range13(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size12 : int

logic object__size12 : us_rep6 -> int

logic value__alignment12 : int

logic object__alignment12 : us_rep6 -> int

axiom value__size_axiom12 : (0 <= value__size12)

axiom object__size_axiom12 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size12({ us_split_discrs8 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields13 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector5 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__5 = a3 }; attr__tag5 = a4 })))

axiom value__alignment_axiom12 : (0 <= value__alignment12)

axiom object__alignment_axiom12 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment12({ us_split_discrs8 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields13 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector5 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__5 = a3 }; attr__tag5 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit5 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit5 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position5 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom5 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit5)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom5 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit5 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit5)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom5 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position5)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit5 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit5 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position5 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom5 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit5)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom5 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit5 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit5)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom5 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position5)

logic user_eq14 : us_rep6, us_rep6 -> bool

logic dummy41 : capacity_range

logic dummy42 : capacity_range1

logic dummy43 : us_main_type

logic dummy44 : us_private

logic dummy45 : int

type s205s__ref = { s205s__content : us_rep6
}

function s205s__ref___projection(a: s205s__ref) : us_rep6 =
  (a).s205s__content

predicate in_range14(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size13 : int

logic object__size13 : us_rep -> int

logic value__alignment13 : int

logic object__alignment13 : us_rep -> int

axiom value__size_axiom13 : (0 <= value__size13)

axiom object__size_axiom13 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size13({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom13 : (0 <= value__alignment13)

axiom object__alignment_axiom13 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment13({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit7 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit7 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position7 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom7 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit7)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom7 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit7 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit7)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom7 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position7)

logic user_eq15 : us_rep, us_rep -> bool

logic dummy46 : capacity_range1

logic dummy47 : us_main_type

type t213s__ref = { t213s__content : us_rep
}

function t213s__ref___projection(a: t213s__ref) : us_rep = (a).t213s__content

type us_split_fields14 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector6 : us_rep;
rec__ext__6 : us_private
}

function us_split_fields_Hidden_Vector__7__projection(a: us_split_fields14) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector6

function us_split_fields___7__projection(a: us_split_fields14) : us_private =
  (a).rec__ext__6

type us_split_fields__ref7 = { us_split_fields__content7 : us_split_fields14
}

function us_split_fields__ref___8__projection(a: us_split_fields__ref7) : us_split_fields14 =
  (a).us_split_fields__content7

type us_rep7 = { us_split_discrs9 : us_split_discrs2; us_split_fields15 :
us_split_fields14; attr__tag6 : int
}

function us_rep___21__projection(a: us_rep7) : us_split_discrs2 =
  (a).us_split_discrs9

function us_rep___22__projection(a: us_rep7) : us_split_fields14 =
  (a).us_split_fields15

function us_rep___23__projection(a: us_rep7) : int = (a).attr__tag6

logic hide_ext__5 : us_private -> us_private

logic extract__ext__5 : us_private -> us_private

function to_base5(a: us_rep7) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs9; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields15).rec__hnco__test2__v_type_owner__vector_type__hidden_vector6;
  rec__ext__ = hide_ext__5(((a).us_split_fields15).rec__ext__6) };
  attr__tag = (a).attr__tag6 }

function of_base5(r: us_rep1) : us_rep7 = { us_split_discrs9 =
  (r).us_split_discrs3; us_split_fields15 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector6 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__6 = extract__ext__5(((r).us_split_fields3).rec__ext__) };
  attr__tag6 = (r).attr__tag }

logic us_tag6 : int

predicate in_range15(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size14 : int

logic object__size14 : us_rep7 -> int

logic value__alignment14 : int

logic object__alignment14 : us_rep7 -> int

axiom value__size_axiom14 : (0 <= value__size14)

axiom object__size_axiom14 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size14({ us_split_discrs9 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields15 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector6 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__6 = a3 }; attr__tag6 = a4 })))

axiom value__alignment_axiom14 : (0 <= value__alignment14)

axiom object__alignment_axiom14 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment14({ us_split_discrs9 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields15 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector6 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__6 = a3 }; attr__tag6 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit6 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit6 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position6 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom6 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit6)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom6 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit6 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit6)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom6 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position6)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit6 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit6 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position6 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom6 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit6)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom6 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit6 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit6)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom6 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position6)

logic user_eq16 : us_rep7, us_rep7 -> bool

logic dummy48 : capacity_range

logic dummy49 : capacity_range1

logic dummy50 : us_main_type

logic dummy51 : us_private

logic dummy52 : int

type s212s__ref = { s212s__content : us_rep7
}

function s212s__ref___projection(a: s212s__ref) : us_rep7 =
  (a).s212s__content

predicate in_range16(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size15 : int

logic object__size15 : us_rep -> int

logic value__alignment15 : int

logic object__alignment15 : us_rep -> int

axiom value__size_axiom15 : (0 <= value__size15)

axiom object__size_axiom15 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size15({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom15 : (0 <= value__alignment15)

axiom object__alignment_axiom15 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment15({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit8 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit8 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position8 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom8 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit8)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom8 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit8 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit8)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom8 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position8)

logic user_eq17 : us_rep, us_rep -> bool

logic dummy53 : capacity_range1

logic dummy54 : us_main_type

type t225s__ref = { t225s__content : us_rep
}

function t225s__ref___projection(a: t225s__ref) : us_rep = (a).t225s__content

type us_split_fields16 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector7 : us_rep;
rec__ext__7 : us_private
}

function us_split_fields_Hidden_Vector__8__projection(a: us_split_fields16) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector7

function us_split_fields___8__projection(a: us_split_fields16) : us_private =
  (a).rec__ext__7

type us_split_fields__ref8 = { us_split_fields__content8 : us_split_fields16
}

function us_split_fields__ref___9__projection(a: us_split_fields__ref8) : us_split_fields16 =
  (a).us_split_fields__content8

type us_rep8 = { us_split_discrs10 : us_split_discrs2; us_split_fields17 :
us_split_fields16; attr__tag7 : int
}

function us_rep___24__projection(a: us_rep8) : us_split_discrs2 =
  (a).us_split_discrs10

function us_rep___25__projection(a: us_rep8) : us_split_fields16 =
  (a).us_split_fields17

function us_rep___26__projection(a: us_rep8) : int = (a).attr__tag7

logic hide_ext__6 : us_private -> us_private

logic extract__ext__6 : us_private -> us_private

function to_base6(a: us_rep8) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs10; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields17).rec__hnco__test2__v_type_owner__vector_type__hidden_vector7;
  rec__ext__ = hide_ext__6(((a).us_split_fields17).rec__ext__7) };
  attr__tag = (a).attr__tag7 }

function of_base6(r: us_rep1) : us_rep8 = { us_split_discrs10 =
  (r).us_split_discrs3; us_split_fields17 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector7 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__7 = extract__ext__6(((r).us_split_fields3).rec__ext__) };
  attr__tag7 = (r).attr__tag }

logic us_tag7 : int

predicate in_range17(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size16 : int

logic object__size16 : us_rep8 -> int

logic value__alignment16 : int

logic object__alignment16 : us_rep8 -> int

axiom value__size_axiom16 : (0 <= value__size16)

axiom object__size_axiom16 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size16({ us_split_discrs10 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields17 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector7 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__7 = a3 }; attr__tag7 = a4 })))

axiom value__alignment_axiom16 : (0 <= value__alignment16)

axiom object__alignment_axiom16 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment16({ us_split_discrs10 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields17 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector7 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__7 = a3 }; attr__tag7 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit7 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit7 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position7 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom7 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit7)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom7 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit7 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit7)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom7 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position7)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit7 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit7 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position7 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom7 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit7)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom7 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit7 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit7)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom7 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position7)

logic user_eq18 : us_rep8, us_rep8 -> bool

logic dummy55 : capacity_range

logic dummy56 : capacity_range1

logic dummy57 : us_main_type

logic dummy58 : us_private

logic dummy59 : int

type s224s__ref = { s224s__content : us_rep8
}

function s224s__ref___projection(a: s224s__ref) : us_rep8 =
  (a).s224s__content

predicate in_range18(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size17 : int

logic object__size17 : us_rep -> int

logic value__alignment17 : int

logic object__alignment17 : us_rep -> int

axiom value__size_axiom17 : (0 <= value__size17)

axiom object__size_axiom17 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size17({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom17 : (0 <= value__alignment17)

axiom object__alignment_axiom17 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment17({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit9 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit9 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position9 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom9 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit9)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom9 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit9 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit9)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom9 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position9)

logic user_eq19 : us_rep, us_rep -> bool

logic dummy60 : capacity_range1

logic dummy61 : us_main_type

type t233s__ref = { t233s__content : us_rep
}

function t233s__ref___projection(a: t233s__ref) : us_rep = (a).t233s__content

type us_split_fields18 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector8 : us_rep;
rec__ext__8 : us_private
}

function us_split_fields_Hidden_Vector__9__projection(a: us_split_fields18) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector8

function us_split_fields___9__projection(a: us_split_fields18) : us_private =
  (a).rec__ext__8

type us_split_fields__ref9 = { us_split_fields__content9 : us_split_fields18
}

function us_split_fields__ref___10__projection(a: us_split_fields__ref9) : us_split_fields18 =
  (a).us_split_fields__content9

type us_rep9 = { us_split_discrs11 : us_split_discrs2; us_split_fields19 :
us_split_fields18; attr__tag8 : int
}

function us_rep___27__projection(a: us_rep9) : us_split_discrs2 =
  (a).us_split_discrs11

function us_rep___28__projection(a: us_rep9) : us_split_fields18 =
  (a).us_split_fields19

function us_rep___29__projection(a: us_rep9) : int = (a).attr__tag8

logic hide_ext__7 : us_private -> us_private

logic extract__ext__7 : us_private -> us_private

function to_base7(a: us_rep9) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs11; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields19).rec__hnco__test2__v_type_owner__vector_type__hidden_vector8;
  rec__ext__ = hide_ext__7(((a).us_split_fields19).rec__ext__8) };
  attr__tag = (a).attr__tag8 }

function of_base7(r: us_rep1) : us_rep9 = { us_split_discrs11 =
  (r).us_split_discrs3; us_split_fields19 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector8 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__8 = extract__ext__7(((r).us_split_fields3).rec__ext__) };
  attr__tag8 = (r).attr__tag }

logic us_tag8 : int

predicate in_range19(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size18 : int

logic object__size18 : us_rep9 -> int

logic value__alignment18 : int

logic object__alignment18 : us_rep9 -> int

axiom value__size_axiom18 : (0 <= value__size18)

axiom object__size_axiom18 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size18({ us_split_discrs11 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields19 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector8 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__8 = a3 }; attr__tag8 = a4 })))

axiom value__alignment_axiom18 : (0 <= value__alignment18)

axiom object__alignment_axiom18 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment18({ us_split_discrs11 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields19 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector8 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__8 = a3 }; attr__tag8 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit8 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit8 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position8 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom8 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit8)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom8 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit8 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit8)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom8 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position8)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit8 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit8 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position8 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom8 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit8)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom8 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit8 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit8)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom8 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position8)

logic user_eq20 : us_rep9, us_rep9 -> bool

logic dummy62 : capacity_range

logic dummy63 : capacity_range1

logic dummy64 : us_main_type

logic dummy65 : us_private

logic dummy66 : int

type s232s__ref = { s232s__content : us_rep9
}

function s232s__ref___projection(a: s232s__ref) : us_rep9 =
  (a).s232s__content

predicate in_range20(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size19 : int

logic object__size19 : us_rep -> int

logic value__alignment19 : int

logic object__alignment19 : us_rep -> int

axiom value__size_axiom19 : (0 <= value__size19)

axiom object__size_axiom19 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size19({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom19 : (0 <= value__alignment19)

axiom object__alignment_axiom19 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment19({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit10 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit10 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position10 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom10 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit10)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom10 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit10 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit10)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom10 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position10)

logic user_eq21 : us_rep, us_rep -> bool

logic dummy67 : capacity_range1

logic dummy68 : us_main_type

type t237s__ref = { t237s__content : us_rep
}

function t237s__ref___projection(a: t237s__ref) : us_rep = (a).t237s__content

type us_split_fields20 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector9 : us_rep;
rec__ext__9 : us_private
}

function us_split_fields_Hidden_Vector__10__projection(a: us_split_fields20) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector9

function us_split_fields___10__projection(a: us_split_fields20) : us_private =
  (a).rec__ext__9

type us_split_fields__ref10 = { us_split_fields__content10 :
us_split_fields20
}

function us_split_fields__ref___11__projection(a: us_split_fields__ref10) : us_split_fields20 =
  (a).us_split_fields__content10

type us_rep10 = { us_split_discrs12 : us_split_discrs2; us_split_fields21 :
us_split_fields20; attr__tag9 : int
}

function us_rep___30__projection(a: us_rep10) : us_split_discrs2 =
  (a).us_split_discrs12

function us_rep___31__projection(a: us_rep10) : us_split_fields20 =
  (a).us_split_fields21

function us_rep___32__projection(a: us_rep10) : int = (a).attr__tag9

logic hide_ext__8 : us_private -> us_private

logic extract__ext__8 : us_private -> us_private

function to_base8(a: us_rep10) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs12; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields21).rec__hnco__test2__v_type_owner__vector_type__hidden_vector9;
  rec__ext__ = hide_ext__8(((a).us_split_fields21).rec__ext__9) };
  attr__tag = (a).attr__tag9 }

function of_base8(r: us_rep1) : us_rep10 = { us_split_discrs12 =
  (r).us_split_discrs3; us_split_fields21 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector9 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__9 = extract__ext__8(((r).us_split_fields3).rec__ext__) };
  attr__tag9 = (r).attr__tag }

logic us_tag9 : int

predicate in_range21(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size20 : int

logic object__size20 : us_rep10 -> int

logic value__alignment20 : int

logic object__alignment20 : us_rep10 -> int

axiom value__size_axiom20 : (0 <= value__size20)

axiom object__size_axiom20 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size20({ us_split_discrs12 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields21 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector9 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__9 = a3 }; attr__tag9 = a4 })))

axiom value__alignment_axiom20 : (0 <= value__alignment20)

axiom object__alignment_axiom20 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment20({ us_split_discrs12 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields21 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector9 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__9 = a3 }; attr__tag9 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit9 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit9 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position9 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom9 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit9)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom9 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit9 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit9)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom9 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position9)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit9 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit9 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position9 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom9 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit9)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom9 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit9 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit9)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom9 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position9)

logic user_eq22 : us_rep10, us_rep10 -> bool

logic dummy69 : capacity_range

logic dummy70 : capacity_range1

logic dummy71 : us_main_type

logic dummy72 : us_private

logic dummy73 : int

type t236s__ref = { t236s__content : us_rep10
}

function t236s__ref___projection(a: t236s__ref) : us_rep10 =
  (a).t236s__content

predicate in_range22(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size21 : int

logic object__size21 : us_rep -> int

logic value__alignment21 : int

logic object__alignment21 : us_rep -> int

axiom value__size_axiom21 : (0 <= value__size21)

axiom object__size_axiom21 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size21({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom21 : (0 <= value__alignment21)

axiom object__alignment_axiom21 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment21({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit11 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit11 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position11 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom11 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit11)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom11 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit11 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit11)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom11 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position11)

logic user_eq23 : us_rep, us_rep -> bool

logic dummy74 : capacity_range1

logic dummy75 : us_main_type

type t242s__ref = { t242s__content : us_rep
}

function t242s__ref___projection(a: t242s__ref) : us_rep = (a).t242s__content

type us_split_fields22 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector10 : us_rep;
rec__ext__10 : us_private
}

function us_split_fields_Hidden_Vector__11__projection(a: us_split_fields22) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector10

function us_split_fields___11__projection(a: us_split_fields22) : us_private =
  (a).rec__ext__10

type us_split_fields__ref11 = { us_split_fields__content11 :
us_split_fields22
}

function us_split_fields__ref___12__projection(a: us_split_fields__ref11) : us_split_fields22 =
  (a).us_split_fields__content11

type us_rep11 = { us_split_discrs13 : us_split_discrs2; us_split_fields23 :
us_split_fields22; attr__tag10 : int
}

function us_rep___33__projection(a: us_rep11) : us_split_discrs2 =
  (a).us_split_discrs13

function us_rep___34__projection(a: us_rep11) : us_split_fields22 =
  (a).us_split_fields23

function us_rep___35__projection(a: us_rep11) : int = (a).attr__tag10

logic hide_ext__9 : us_private -> us_private

logic extract__ext__9 : us_private -> us_private

function to_base9(a: us_rep11) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs13; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields23).rec__hnco__test2__v_type_owner__vector_type__hidden_vector10;
  rec__ext__ = hide_ext__9(((a).us_split_fields23).rec__ext__10) };
  attr__tag = (a).attr__tag10 }

function of_base9(r: us_rep1) : us_rep11 = { us_split_discrs13 =
  (r).us_split_discrs3; us_split_fields23 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector10 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__10 = extract__ext__9(((r).us_split_fields3).rec__ext__) };
  attr__tag10 = (r).attr__tag }

logic us_tag10 : int

predicate in_range23(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size22 : int

logic object__size22 : us_rep11 -> int

logic value__alignment22 : int

logic object__alignment22 : us_rep11 -> int

axiom value__size_axiom22 : (0 <= value__size22)

axiom object__size_axiom22 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size22({ us_split_discrs13 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields23 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector10 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__10 = a3 }; attr__tag10 = a4 })))

axiom value__alignment_axiom22 : (0 <= value__alignment22)

axiom object__alignment_axiom22 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment22({ us_split_discrs13 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields23 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector10 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__10 = a3 }; attr__tag10 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit10 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit10 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position10 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom10 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit10)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom10 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit10 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit10)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom10 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position10)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit10 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit10 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position10 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom10 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit10)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom10 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit10 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit10)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom10 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position10)

logic user_eq24 : us_rep11, us_rep11 -> bool

logic dummy76 : capacity_range

logic dummy77 : capacity_range1

logic dummy78 : us_main_type

logic dummy79 : us_private

logic dummy80 : int

type s241s__ref = { s241s__content : us_rep11
}

function s241s__ref___projection(a: s241s__ref) : us_rep11 =
  (a).s241s__content

predicate in_range24(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size23 : int

logic object__size23 : us_rep -> int

logic value__alignment23 : int

logic object__alignment23 : us_rep -> int

axiom value__size_axiom23 : (0 <= value__size23)

axiom object__size_axiom23 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size23({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom23 : (0 <= value__alignment23)

axiom object__alignment_axiom23 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment23({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit12 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit12 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position12 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom12 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit12)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom12 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit12 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit12)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom12 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position12)

logic user_eq25 : us_rep, us_rep -> bool

logic dummy81 : capacity_range1

logic dummy82 : us_main_type

type t251s__ref = { t251s__content : us_rep
}

function t251s__ref___projection(a: t251s__ref) : us_rep = (a).t251s__content

type us_split_fields24 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector11 : us_rep;
rec__ext__11 : us_private
}

function us_split_fields_Hidden_Vector__12__projection(a: us_split_fields24) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector11

function us_split_fields___12__projection(a: us_split_fields24) : us_private =
  (a).rec__ext__11

type us_split_fields__ref12 = { us_split_fields__content12 :
us_split_fields24
}

function us_split_fields__ref___13__projection(a: us_split_fields__ref12) : us_split_fields24 =
  (a).us_split_fields__content12

type us_rep12 = { us_split_discrs14 : us_split_discrs2; us_split_fields25 :
us_split_fields24; attr__tag11 : int
}

function us_rep___36__projection(a: us_rep12) : us_split_discrs2 =
  (a).us_split_discrs14

function us_rep___37__projection(a: us_rep12) : us_split_fields24 =
  (a).us_split_fields25

function us_rep___38__projection(a: us_rep12) : int = (a).attr__tag11

logic hide_ext__10 : us_private -> us_private

logic extract__ext__10 : us_private -> us_private

function to_base10(a: us_rep12) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs14; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields25).rec__hnco__test2__v_type_owner__vector_type__hidden_vector11;
  rec__ext__ = hide_ext__10(((a).us_split_fields25).rec__ext__11) };
  attr__tag = (a).attr__tag11 }

function of_base10(r: us_rep1) : us_rep12 = { us_split_discrs14 =
  (r).us_split_discrs3; us_split_fields25 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector11 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__11 = extract__ext__10(((r).us_split_fields3).rec__ext__) };
  attr__tag11 = (r).attr__tag }

logic us_tag11 : int

predicate in_range25(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size24 : int

logic object__size24 : us_rep12 -> int

logic value__alignment24 : int

logic object__alignment24 : us_rep12 -> int

axiom value__size_axiom24 : (0 <= value__size24)

axiom object__size_axiom24 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size24({ us_split_discrs14 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields25 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector11 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__11 = a3 }; attr__tag11 = a4 })))

axiom value__alignment_axiom24 : (0 <= value__alignment24)

axiom object__alignment_axiom24 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment24({ us_split_discrs14 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields25 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector11 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__11 = a3 }; attr__tag11 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit11 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit11 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position11 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom11 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit11)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom11 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit11 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit11)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom11 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position11)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit11 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit11 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position11 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom11 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit11)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom11 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit11 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit11)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom11 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position11)

logic user_eq26 : us_rep12, us_rep12 -> bool

logic dummy83 : capacity_range

logic dummy84 : capacity_range1

logic dummy85 : us_main_type

logic dummy86 : us_private

logic dummy87 : int

type s250s__ref = { s250s__content : us_rep12
}

function s250s__ref___projection(a: s250s__ref) : us_rep12 =
  (a).s250s__content

predicate in_range26(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size25 : int

logic object__size25 : us_rep -> int

logic value__alignment25 : int

logic object__alignment25 : us_rep -> int

axiom value__size_axiom25 : (0 <= value__size25)

axiom object__size_axiom25 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size25({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom25 : (0 <= value__alignment25)

axiom object__alignment_axiom25 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment25({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit13 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit13 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position13 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom13 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit13)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom13 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit13 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit13)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom13 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position13)

logic user_eq27 : us_rep, us_rep -> bool

logic dummy88 : capacity_range1

logic dummy89 : us_main_type

type t271s__ref = { t271s__content : us_rep
}

function t271s__ref___projection(a: t271s__ref) : us_rep = (a).t271s__content

type us_split_fields26 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector12 : us_rep;
rec__ext__12 : us_private
}

function us_split_fields_Hidden_Vector__13__projection(a: us_split_fields26) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector12

function us_split_fields___13__projection(a: us_split_fields26) : us_private =
  (a).rec__ext__12

type us_split_fields__ref13 = { us_split_fields__content13 :
us_split_fields26
}

function us_split_fields__ref___14__projection(a: us_split_fields__ref13) : us_split_fields26 =
  (a).us_split_fields__content13

type us_rep13 = { us_split_discrs15 : us_split_discrs2; us_split_fields27 :
us_split_fields26; attr__tag12 : int
}

function us_rep___39__projection(a: us_rep13) : us_split_discrs2 =
  (a).us_split_discrs15

function us_rep___40__projection(a: us_rep13) : us_split_fields26 =
  (a).us_split_fields27

function us_rep___41__projection(a: us_rep13) : int = (a).attr__tag12

logic hide_ext__11 : us_private -> us_private

logic extract__ext__11 : us_private -> us_private

function to_base11(a: us_rep13) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs15; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields27).rec__hnco__test2__v_type_owner__vector_type__hidden_vector12;
  rec__ext__ = hide_ext__11(((a).us_split_fields27).rec__ext__12) };
  attr__tag = (a).attr__tag12 }

function of_base11(r: us_rep1) : us_rep13 = { us_split_discrs15 =
  (r).us_split_discrs3; us_split_fields27 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector12 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__12 = extract__ext__11(((r).us_split_fields3).rec__ext__) };
  attr__tag12 = (r).attr__tag }

logic us_tag12 : int

predicate in_range27(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size26 : int

logic object__size26 : us_rep13 -> int

logic value__alignment26 : int

logic object__alignment26 : us_rep13 -> int

axiom value__size_axiom26 : (0 <= value__size26)

axiom object__size_axiom26 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size26({ us_split_discrs15 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields27 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector12 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__12 = a3 }; attr__tag12 = a4 })))

axiom value__alignment_axiom26 : (0 <= value__alignment26)

axiom object__alignment_axiom26 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment26({ us_split_discrs15 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields27 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector12 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__12 = a3 }; attr__tag12 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit12 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit12 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position12 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom12 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit12)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom12 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit12 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit12)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom12 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position12)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit12 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit12 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position12 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom12 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit12)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom12 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit12 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit12)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom12 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position12)

logic user_eq28 : us_rep13, us_rep13 -> bool

logic dummy90 : capacity_range

logic dummy91 : capacity_range1

logic dummy92 : us_main_type

logic dummy93 : us_private

logic dummy94 : int

type s270s__ref = { s270s__content : us_rep13
}

function s270s__ref___projection(a: s270s__ref) : us_rep13 =
  (a).s270s__content

predicate in_range28(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size27 : int

logic object__size27 : us_rep -> int

logic value__alignment27 : int

logic object__alignment27 : us_rep -> int

axiom value__size_axiom27 : (0 <= value__size27)

axiom object__size_axiom27 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size27({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom27 : (0 <= value__alignment27)

axiom object__alignment_axiom27 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment27({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit14 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit14 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position14 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom14 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit14)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom14 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit14 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit14)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom14 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position14)

logic user_eq29 : us_rep, us_rep -> bool

logic dummy95 : capacity_range1

logic dummy96 : us_main_type

type t277s__ref = { t277s__content : us_rep
}

function t277s__ref___projection(a: t277s__ref) : us_rep = (a).t277s__content

type us_split_fields28 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector13 : us_rep;
rec__ext__13 : us_private
}

function us_split_fields_Hidden_Vector__14__projection(a: us_split_fields28) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector13

function us_split_fields___14__projection(a: us_split_fields28) : us_private =
  (a).rec__ext__13

type us_split_fields__ref14 = { us_split_fields__content14 :
us_split_fields28
}

function us_split_fields__ref___15__projection(a: us_split_fields__ref14) : us_split_fields28 =
  (a).us_split_fields__content14

type us_rep14 = { us_split_discrs16 : us_split_discrs2; us_split_fields29 :
us_split_fields28; attr__tag13 : int
}

function us_rep___42__projection(a: us_rep14) : us_split_discrs2 =
  (a).us_split_discrs16

function us_rep___43__projection(a: us_rep14) : us_split_fields28 =
  (a).us_split_fields29

function us_rep___44__projection(a: us_rep14) : int = (a).attr__tag13

logic hide_ext__12 : us_private -> us_private

logic extract__ext__12 : us_private -> us_private

function to_base12(a: us_rep14) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs16; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields29).rec__hnco__test2__v_type_owner__vector_type__hidden_vector13;
  rec__ext__ = hide_ext__12(((a).us_split_fields29).rec__ext__13) };
  attr__tag = (a).attr__tag13 }

function of_base12(r: us_rep1) : us_rep14 = { us_split_discrs16 =
  (r).us_split_discrs3; us_split_fields29 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector13 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__13 = extract__ext__12(((r).us_split_fields3).rec__ext__) };
  attr__tag13 = (r).attr__tag }

logic us_tag13 : int

predicate in_range29(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size28 : int

logic object__size28 : us_rep14 -> int

logic value__alignment28 : int

logic object__alignment28 : us_rep14 -> int

axiom value__size_axiom28 : (0 <= value__size28)

axiom object__size_axiom28 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size28({ us_split_discrs16 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields29 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector13 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__13 = a3 }; attr__tag13 = a4 })))

axiom value__alignment_axiom28 : (0 <= value__alignment28)

axiom object__alignment_axiom28 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment28({ us_split_discrs16 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields29 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector13 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__13 = a3 }; attr__tag13 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit13 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit13 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position13 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom13 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit13)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom13 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit13 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit13)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom13 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position13)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit13 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit13 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position13 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom13 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit13)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom13 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit13 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit13)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom13 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position13)

logic user_eq30 : us_rep14, us_rep14 -> bool

logic dummy97 : capacity_range

logic dummy98 : capacity_range1

logic dummy99 : us_main_type

logic dummy100 : us_private

logic dummy101 : int

type s276s__ref = { s276s__content : us_rep14
}

function s276s__ref___projection(a: s276s__ref) : us_rep14 =
  (a).s276s__content

predicate in_range30(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size29 : int

logic object__size29 : us_rep -> int

logic value__alignment29 : int

logic object__alignment29 : us_rep -> int

axiom value__size_axiom29 : (0 <= value__size29)

axiom object__size_axiom29 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size29({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom29 : (0 <= value__alignment29)

axiom object__alignment_axiom29 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment29({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit15 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit15 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position15 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom15 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit15)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom15 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit15 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit15)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom15 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position15)

logic user_eq31 : us_rep, us_rep -> bool

logic dummy102 : capacity_range1

logic dummy103 : us_main_type

type t283s__ref = { t283s__content : us_rep
}

function t283s__ref___projection(a: t283s__ref) : us_rep = (a).t283s__content

type us_split_fields30 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector14 : us_rep;
rec__ext__14 : us_private
}

function us_split_fields_Hidden_Vector__15__projection(a: us_split_fields30) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector14

function us_split_fields___15__projection(a: us_split_fields30) : us_private =
  (a).rec__ext__14

type us_split_fields__ref15 = { us_split_fields__content15 :
us_split_fields30
}

function us_split_fields__ref___16__projection(a: us_split_fields__ref15) : us_split_fields30 =
  (a).us_split_fields__content15

type us_rep15 = { us_split_discrs17 : us_split_discrs2; us_split_fields31 :
us_split_fields30; attr__tag14 : int
}

function us_rep___45__projection(a: us_rep15) : us_split_discrs2 =
  (a).us_split_discrs17

function us_rep___46__projection(a: us_rep15) : us_split_fields30 =
  (a).us_split_fields31

function us_rep___47__projection(a: us_rep15) : int = (a).attr__tag14

logic hide_ext__13 : us_private -> us_private

logic extract__ext__13 : us_private -> us_private

function to_base13(a: us_rep15) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs17; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields31).rec__hnco__test2__v_type_owner__vector_type__hidden_vector14;
  rec__ext__ = hide_ext__13(((a).us_split_fields31).rec__ext__14) };
  attr__tag = (a).attr__tag14 }

function of_base13(r: us_rep1) : us_rep15 = { us_split_discrs17 =
  (r).us_split_discrs3; us_split_fields31 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector14 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__14 = extract__ext__13(((r).us_split_fields3).rec__ext__) };
  attr__tag14 = (r).attr__tag }

logic us_tag14 : int

predicate in_range31(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size30 : int

logic object__size30 : us_rep15 -> int

logic value__alignment30 : int

logic object__alignment30 : us_rep15 -> int

axiom value__size_axiom30 : (0 <= value__size30)

axiom object__size_axiom30 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size30({ us_split_discrs17 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields31 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector14 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__14 = a3 }; attr__tag14 = a4 })))

axiom value__alignment_axiom30 : (0 <= value__alignment30)

axiom object__alignment_axiom30 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment30({ us_split_discrs17 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields31 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector14 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__14 = a3 }; attr__tag14 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit14 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit14 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position14 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom14 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit14)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom14 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit14 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit14)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom14 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position14)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit14 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit14 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position14 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom14 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit14)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom14 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit14 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit14)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom14 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position14)

logic user_eq32 : us_rep15, us_rep15 -> bool

logic dummy104 : capacity_range

logic dummy105 : capacity_range1

logic dummy106 : us_main_type

logic dummy107 : us_private

logic dummy108 : int

type s282s__ref = { s282s__content : us_rep15
}

function s282s__ref___projection(a: s282s__ref) : us_rep15 =
  (a).s282s__content

predicate in_range32(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size31 : int

logic object__size31 : us_rep -> int

logic value__alignment31 : int

logic object__alignment31 : us_rep -> int

axiom value__size_axiom31 : (0 <= value__size31)

axiom object__size_axiom31 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size31({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom31 : (0 <= value__alignment31)

axiom object__alignment_axiom31 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment31({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit16 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit16 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position16 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom16 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit16)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom16 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit16 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit16)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom16 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position16)

logic user_eq33 : us_rep, us_rep -> bool

logic dummy109 : capacity_range1

logic dummy110 : us_main_type

type t289s__ref = { t289s__content : us_rep
}

function t289s__ref___projection(a: t289s__ref) : us_rep = (a).t289s__content

type us_split_fields32 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector15 : us_rep;
rec__ext__15 : us_private
}

function us_split_fields_Hidden_Vector__16__projection(a: us_split_fields32) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector15

function us_split_fields___16__projection(a: us_split_fields32) : us_private =
  (a).rec__ext__15

type us_split_fields__ref16 = { us_split_fields__content16 :
us_split_fields32
}

function us_split_fields__ref___17__projection(a: us_split_fields__ref16) : us_split_fields32 =
  (a).us_split_fields__content16

type us_rep16 = { us_split_discrs18 : us_split_discrs2; us_split_fields33 :
us_split_fields32; attr__tag15 : int
}

function us_rep___48__projection(a: us_rep16) : us_split_discrs2 =
  (a).us_split_discrs18

function us_rep___49__projection(a: us_rep16) : us_split_fields32 =
  (a).us_split_fields33

function us_rep___50__projection(a: us_rep16) : int = (a).attr__tag15

logic hide_ext__14 : us_private -> us_private

logic extract__ext__14 : us_private -> us_private

function to_base14(a: us_rep16) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs18; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields33).rec__hnco__test2__v_type_owner__vector_type__hidden_vector15;
  rec__ext__ = hide_ext__14(((a).us_split_fields33).rec__ext__15) };
  attr__tag = (a).attr__tag15 }

function of_base14(r: us_rep1) : us_rep16 = { us_split_discrs18 =
  (r).us_split_discrs3; us_split_fields33 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector15 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__15 = extract__ext__14(((r).us_split_fields3).rec__ext__) };
  attr__tag15 = (r).attr__tag }

logic us_tag15 : int

predicate in_range33(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size32 : int

logic object__size32 : us_rep16 -> int

logic value__alignment32 : int

logic object__alignment32 : us_rep16 -> int

axiom value__size_axiom32 : (0 <= value__size32)

axiom object__size_axiom32 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size32({ us_split_discrs18 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields33 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector15 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__15 = a3 }; attr__tag15 = a4 })))

axiom value__alignment_axiom32 : (0 <= value__alignment32)

axiom object__alignment_axiom32 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment32({ us_split_discrs18 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields33 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector15 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__15 = a3 }; attr__tag15 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit15 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit15 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position15 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom15 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit15)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom15 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit15 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit15)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom15 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position15)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit15 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit15 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position15 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom15 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit15)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom15 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit15 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit15)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom15 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position15)

logic user_eq34 : us_rep16, us_rep16 -> bool

logic dummy111 : capacity_range

logic dummy112 : capacity_range1

logic dummy113 : us_main_type

logic dummy114 : us_private

logic dummy115 : int

type s288s__ref = { s288s__content : us_rep16
}

function s288s__ref___projection(a: s288s__ref) : us_rep16 =
  (a).s288s__content

predicate in_range34(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size33 : int

logic object__size33 : us_rep -> int

logic value__alignment33 : int

logic object__alignment33 : us_rep -> int

axiom value__size_axiom33 : (0 <= value__size33)

axiom object__size_axiom33 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size33({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom33 : (0 <= value__alignment33)

axiom object__alignment_axiom33 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment33({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit17 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit17 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position17 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom17 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit17)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom17 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit17 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit17)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom17 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position17)

logic user_eq35 : us_rep, us_rep -> bool

logic dummy116 : capacity_range1

logic dummy117 : us_main_type

type t295s__ref = { t295s__content : us_rep
}

function t295s__ref___projection(a: t295s__ref) : us_rep = (a).t295s__content

type us_split_fields34 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector16 : us_rep;
rec__ext__16 : us_private
}

function us_split_fields_Hidden_Vector__17__projection(a: us_split_fields34) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector16

function us_split_fields___17__projection(a: us_split_fields34) : us_private =
  (a).rec__ext__16

type us_split_fields__ref17 = { us_split_fields__content17 :
us_split_fields34
}

function us_split_fields__ref___18__projection(a: us_split_fields__ref17) : us_split_fields34 =
  (a).us_split_fields__content17

type us_rep17 = { us_split_discrs19 : us_split_discrs2; us_split_fields35 :
us_split_fields34; attr__tag16 : int
}

function us_rep___51__projection(a: us_rep17) : us_split_discrs2 =
  (a).us_split_discrs19

function us_rep___52__projection(a: us_rep17) : us_split_fields34 =
  (a).us_split_fields35

function us_rep___53__projection(a: us_rep17) : int = (a).attr__tag16

logic hide_ext__15 : us_private -> us_private

logic extract__ext__15 : us_private -> us_private

function to_base15(a: us_rep17) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs19; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields35).rec__hnco__test2__v_type_owner__vector_type__hidden_vector16;
  rec__ext__ = hide_ext__15(((a).us_split_fields35).rec__ext__16) };
  attr__tag = (a).attr__tag16 }

function of_base15(r: us_rep1) : us_rep17 = { us_split_discrs19 =
  (r).us_split_discrs3; us_split_fields35 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector16 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__16 = extract__ext__15(((r).us_split_fields3).rec__ext__) };
  attr__tag16 = (r).attr__tag }

logic us_tag16 : int

predicate in_range35(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size34 : int

logic object__size34 : us_rep17 -> int

logic value__alignment34 : int

logic object__alignment34 : us_rep17 -> int

axiom value__size_axiom34 : (0 <= value__size34)

axiom object__size_axiom34 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size34({ us_split_discrs19 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields35 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector16 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__16 = a3 }; attr__tag16 = a4 })))

axiom value__alignment_axiom34 : (0 <= value__alignment34)

axiom object__alignment_axiom34 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment34({ us_split_discrs19 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields35 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector16 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__16 = a3 }; attr__tag16 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit16 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit16 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position16 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom16 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit16)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom16 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit16 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit16)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom16 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position16)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit16 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit16 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position16 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom16 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit16)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom16 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit16 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit16)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom16 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position16)

logic user_eq36 : us_rep17, us_rep17 -> bool

logic dummy118 : capacity_range

logic dummy119 : capacity_range1

logic dummy120 : us_main_type

logic dummy121 : us_private

logic dummy122 : int

type s294s__ref = { s294s__content : us_rep17
}

function s294s__ref___projection(a: s294s__ref) : us_rep17 =
  (a).s294s__content

predicate in_range36(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size35 : int

logic object__size35 : us_rep -> int

logic value__alignment35 : int

logic object__alignment35 : us_rep -> int

axiom value__size_axiom35 : (0 <= value__size35)

axiom object__size_axiom35 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size35({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom35 : (0 <= value__alignment35)

axiom object__alignment_axiom35 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment35({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit18 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit18 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position18 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom18 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit18)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom18 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit18 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit18)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom18 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position18)

logic user_eq37 : us_rep, us_rep -> bool

logic dummy123 : capacity_range1

logic dummy124 : us_main_type

type t301s__ref = { t301s__content : us_rep
}

function t301s__ref___projection(a: t301s__ref) : us_rep = (a).t301s__content

type us_split_fields36 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector17 : us_rep;
rec__ext__17 : us_private
}

function us_split_fields_Hidden_Vector__18__projection(a: us_split_fields36) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector17

function us_split_fields___18__projection(a: us_split_fields36) : us_private =
  (a).rec__ext__17

type us_split_fields__ref18 = { us_split_fields__content18 :
us_split_fields36
}

function us_split_fields__ref___19__projection(a: us_split_fields__ref18) : us_split_fields36 =
  (a).us_split_fields__content18

type us_rep18 = { us_split_discrs20 : us_split_discrs2; us_split_fields37 :
us_split_fields36; attr__tag17 : int
}

function us_rep___54__projection(a: us_rep18) : us_split_discrs2 =
  (a).us_split_discrs20

function us_rep___55__projection(a: us_rep18) : us_split_fields36 =
  (a).us_split_fields37

function us_rep___56__projection(a: us_rep18) : int = (a).attr__tag17

logic hide_ext__16 : us_private -> us_private

logic extract__ext__16 : us_private -> us_private

function to_base16(a: us_rep18) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs20; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields37).rec__hnco__test2__v_type_owner__vector_type__hidden_vector17;
  rec__ext__ = hide_ext__16(((a).us_split_fields37).rec__ext__17) };
  attr__tag = (a).attr__tag17 }

function of_base16(r: us_rep1) : us_rep18 = { us_split_discrs20 =
  (r).us_split_discrs3; us_split_fields37 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector17 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__17 = extract__ext__16(((r).us_split_fields3).rec__ext__) };
  attr__tag17 = (r).attr__tag }

logic us_tag17 : int

predicate in_range37(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size36 : int

logic object__size36 : us_rep18 -> int

logic value__alignment36 : int

logic object__alignment36 : us_rep18 -> int

axiom value__size_axiom36 : (0 <= value__size36)

axiom object__size_axiom36 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size36({ us_split_discrs20 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields37 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector17 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__17 = a3 }; attr__tag17 = a4 })))

axiom value__alignment_axiom36 : (0 <= value__alignment36)

axiom object__alignment_axiom36 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment36({ us_split_discrs20 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields37 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector17 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__17 = a3 }; attr__tag17 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit17 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit17 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position17 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom17 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit17)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom17 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit17 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit17)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom17 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position17)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit17 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit17 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position17 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom17 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit17)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom17 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit17 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit17)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom17 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position17)

logic user_eq38 : us_rep18, us_rep18 -> bool

logic dummy125 : capacity_range

logic dummy126 : capacity_range1

logic dummy127 : us_main_type

logic dummy128 : us_private

logic dummy129 : int

type s300s__ref = { s300s__content : us_rep18
}

function s300s__ref___projection(a: s300s__ref) : us_rep18 =
  (a).s300s__content

predicate in_range38(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size37 : int

logic object__size37 : us_rep -> int

logic value__alignment37 : int

logic object__alignment37 : us_rep -> int

axiom value__size_axiom37 : (0 <= value__size37)

axiom object__size_axiom37 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size37({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom37 : (0 <= value__alignment37)

axiom object__alignment_axiom37 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment37({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit19 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit19 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position19 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom19 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit19)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom19 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit19 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit19)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom19 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position19)

logic user_eq39 : us_rep, us_rep -> bool

logic dummy130 : capacity_range1

logic dummy131 : us_main_type

type t307s__ref = { t307s__content : us_rep
}

function t307s__ref___projection(a: t307s__ref) : us_rep = (a).t307s__content

type us_split_fields38 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector18 : us_rep;
rec__ext__18 : us_private
}

function us_split_fields_Hidden_Vector__19__projection(a: us_split_fields38) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector18

function us_split_fields___19__projection(a: us_split_fields38) : us_private =
  (a).rec__ext__18

type us_split_fields__ref19 = { us_split_fields__content19 :
us_split_fields38
}

function us_split_fields__ref___20__projection(a: us_split_fields__ref19) : us_split_fields38 =
  (a).us_split_fields__content19

type us_rep19 = { us_split_discrs21 : us_split_discrs2; us_split_fields39 :
us_split_fields38; attr__tag18 : int
}

function us_rep___57__projection(a: us_rep19) : us_split_discrs2 =
  (a).us_split_discrs21

function us_rep___58__projection(a: us_rep19) : us_split_fields38 =
  (a).us_split_fields39

function us_rep___59__projection(a: us_rep19) : int = (a).attr__tag18

logic hide_ext__17 : us_private -> us_private

logic extract__ext__17 : us_private -> us_private

function to_base17(a: us_rep19) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs21; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields39).rec__hnco__test2__v_type_owner__vector_type__hidden_vector18;
  rec__ext__ = hide_ext__17(((a).us_split_fields39).rec__ext__18) };
  attr__tag = (a).attr__tag18 }

function of_base17(r: us_rep1) : us_rep19 = { us_split_discrs21 =
  (r).us_split_discrs3; us_split_fields39 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector18 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__18 = extract__ext__17(((r).us_split_fields3).rec__ext__) };
  attr__tag18 = (r).attr__tag }

logic us_tag18 : int

predicate in_range39(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size38 : int

logic object__size38 : us_rep19 -> int

logic value__alignment38 : int

logic object__alignment38 : us_rep19 -> int

axiom value__size_axiom38 : (0 <= value__size38)

axiom object__size_axiom38 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size38({ us_split_discrs21 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields39 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector18 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__18 = a3 }; attr__tag18 = a4 })))

axiom value__alignment_axiom38 : (0 <= value__alignment38)

axiom object__alignment_axiom38 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment38({ us_split_discrs21 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields39 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector18 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__18 = a3 }; attr__tag18 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit18 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit18 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position18 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom18 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit18)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom18 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit18 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit18)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom18 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position18)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit18 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit18 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position18 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom18 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit18)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom18 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit18 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit18)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom18 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position18)

logic user_eq40 : us_rep19, us_rep19 -> bool

logic dummy132 : capacity_range

logic dummy133 : capacity_range1

logic dummy134 : us_main_type

logic dummy135 : us_private

logic dummy136 : int

type s306s__ref = { s306s__content : us_rep19
}

function s306s__ref___projection(a: s306s__ref) : us_rep19 =
  (a).s306s__content

predicate in_range40(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size39 : int

logic object__size39 : us_rep -> int

logic value__alignment39 : int

logic object__alignment39 : us_rep -> int

axiom value__size_axiom39 : (0 <= value__size39)

axiom object__size_axiom39 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size39({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom39 : (0 <= value__alignment39)

axiom object__alignment_axiom39 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment39({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit20 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit20 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position20 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom20 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit20)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom20 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit20 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit20)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom20 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position20)

logic user_eq41 : us_rep, us_rep -> bool

logic dummy137 : capacity_range1

logic dummy138 : us_main_type

type t313s__ref = { t313s__content : us_rep
}

function t313s__ref___projection(a: t313s__ref) : us_rep = (a).t313s__content

type us_split_fields40 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector19 : us_rep;
rec__ext__19 : us_private
}

function us_split_fields_Hidden_Vector__20__projection(a: us_split_fields40) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector19

function us_split_fields___20__projection(a: us_split_fields40) : us_private =
  (a).rec__ext__19

type us_split_fields__ref20 = { us_split_fields__content20 :
us_split_fields40
}

function us_split_fields__ref___21__projection(a: us_split_fields__ref20) : us_split_fields40 =
  (a).us_split_fields__content20

type us_rep20 = { us_split_discrs22 : us_split_discrs2; us_split_fields41 :
us_split_fields40; attr__tag19 : int
}

function us_rep___60__projection(a: us_rep20) : us_split_discrs2 =
  (a).us_split_discrs22

function us_rep___61__projection(a: us_rep20) : us_split_fields40 =
  (a).us_split_fields41

function us_rep___62__projection(a: us_rep20) : int = (a).attr__tag19

logic hide_ext__18 : us_private -> us_private

logic extract__ext__18 : us_private -> us_private

function to_base18(a: us_rep20) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs22; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields41).rec__hnco__test2__v_type_owner__vector_type__hidden_vector19;
  rec__ext__ = hide_ext__18(((a).us_split_fields41).rec__ext__19) };
  attr__tag = (a).attr__tag19 }

function of_base18(r: us_rep1) : us_rep20 = { us_split_discrs22 =
  (r).us_split_discrs3; us_split_fields41 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector19 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__19 = extract__ext__18(((r).us_split_fields3).rec__ext__) };
  attr__tag19 = (r).attr__tag }

logic us_tag19 : int

predicate in_range41(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size40 : int

logic object__size40 : us_rep20 -> int

logic value__alignment40 : int

logic object__alignment40 : us_rep20 -> int

axiom value__size_axiom40 : (0 <= value__size40)

axiom object__size_axiom40 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size40({ us_split_discrs22 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields41 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector19 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__19 = a3 }; attr__tag19 = a4 })))

axiom value__alignment_axiom40 : (0 <= value__alignment40)

axiom object__alignment_axiom40 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment40({ us_split_discrs22 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields41 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector19 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__19 = a3 }; attr__tag19 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit19 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit19 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position19 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom19 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit19)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom19 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit19 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit19)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom19 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position19)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit19 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit19 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position19 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom19 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit19)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom19 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit19 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit19)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom19 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position19)

logic user_eq42 : us_rep20, us_rep20 -> bool

logic dummy139 : capacity_range

logic dummy140 : capacity_range1

logic dummy141 : us_main_type

logic dummy142 : us_private

logic dummy143 : int

type s312s__ref = { s312s__content : us_rep20
}

function s312s__ref___projection(a: s312s__ref) : us_rep20 =
  (a).s312s__content

predicate in_range42(rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1: int,
  a: us_rep) =
  (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 = to_rep(((a).us_split_discrs1).rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity))

logic value__size41 : int

logic object__size41 : us_rep -> int

logic value__alignment41 : int

logic object__alignment41 : us_rep -> int

axiom value__size_axiom41 : (0 <= value__size41)

axiom object__size_axiom41 :
  (forall a:capacity_range1. forall a1:us_main_type. (0 <= object__size41({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

axiom value__alignment_axiom41 : (0 <= value__alignment41)

axiom object__alignment_axiom41 :
  (forall a:capacity_range1. forall a1:us_main_type.
  (0 <= object__alignment41({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a1 } })))

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit21 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit21 : int

logic hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position21 : int

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit_axiom21 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit21)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit_axiom21 :
  (hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit21 <  hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit21)

axiom hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position_axiom21 :
  (0 <= hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position21)

logic user_eq43 : us_rep, us_rep -> bool

logic dummy144 : capacity_range1

logic dummy145 : us_main_type

type t183s__ref = { t183s__content : us_rep
}

function t183s__ref___projection(a: t183s__ref) : us_rep = (a).t183s__content

type us_split_fields42 = {
rec__hnco__test2__v_type_owner__vector_type__hidden_vector20 : us_rep;
rec__ext__20 : us_private
}

function us_split_fields_Hidden_Vector__21__projection(a: us_split_fields42) : us_rep =
  (a).rec__hnco__test2__v_type_owner__vector_type__hidden_vector20

function us_split_fields___21__projection(a: us_split_fields42) : us_private =
  (a).rec__ext__20

type us_split_fields__ref21 = { us_split_fields__content21 :
us_split_fields42
}

function us_split_fields__ref___22__projection(a: us_split_fields__ref21) : us_split_fields42 =
  (a).us_split_fields__content21

type us_rep21 = { us_split_discrs23 : us_split_discrs2; us_split_fields43 :
us_split_fields42; attr__tag20 : int
}

function us_rep___63__projection(a: us_rep21) : us_split_discrs2 =
  (a).us_split_discrs23

function us_rep___64__projection(a: us_rep21) : us_split_fields42 =
  (a).us_split_fields43

function us_rep___65__projection(a: us_rep21) : int = (a).attr__tag20

logic hide_ext__19 : us_private -> us_private

logic extract__ext__19 : us_private -> us_private

function to_base19(a: us_rep21) : us_rep1 = { us_split_discrs3 =
  (a).us_split_discrs23; us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector =
  ((a).us_split_fields43).rec__hnco__test2__v_type_owner__vector_type__hidden_vector20;
  rec__ext__ = hide_ext__19(((a).us_split_fields43).rec__ext__20) };
  attr__tag = (a).attr__tag20 }

function of_base19(r: us_rep1) : us_rep21 = { us_split_discrs23 =
  (r).us_split_discrs3; us_split_fields43 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector20 =
  ((r).us_split_fields3).rec__hnco__test2__v_type_owner__vector_type__hidden_vector;
  rec__ext__20 = extract__ext__19(((r).us_split_fields3).rec__ext__) };
  attr__tag20 = (r).attr__tag }

logic us_tag20 : int

predicate in_range43(rec__hnco__test2__v_type_owner__vector_type__capacity1: int,
  a: us_rep1) =
  (rec__hnco__test2__v_type_owner__vector_type__capacity1 = to_rep1(((a).us_split_discrs3).rec__hnco__test2__v_type_owner__vector_type__capacity))

logic value__size42 : int

logic object__size42 : us_rep21 -> int

logic value__alignment42 : int

logic object__alignment42 : us_rep21 -> int

axiom value__size_axiom42 : (0 <= value__size42)

axiom object__size_axiom42 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__size42({ us_split_discrs23 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields43 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector20 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__20 = a3 }; attr__tag20 = a4 })))

axiom value__alignment_axiom42 : (0 <= value__alignment42)

axiom object__alignment_axiom42 :
  (forall a:capacity_range. forall a1:capacity_range1.
  forall a2:us_main_type. forall a3:us_private. forall a4:int.
  (0 <= object__alignment42({ us_split_discrs23 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = a };
  us_split_fields43 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector20 = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity = a1 };
  us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = a2 } };
  rec__ext__20 = a3 }; attr__tag20 = a4 })))

logic hnco__test2__v_type_owner__vector_type__capacity__first__bit20 : int

logic hnco__test2__v_type_owner__vector_type__capacity__last__bit20 : int

logic hnco__test2__v_type_owner__vector_type__capacity__position20 : int

axiom hnco__test2__v_type_owner__vector_type__capacity__first__bit_axiom20 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__first__bit20)

axiom hnco__test2__v_type_owner__vector_type__capacity__last__bit_axiom20 :
  (hnco__test2__v_type_owner__vector_type__capacity__first__bit20 <  hnco__test2__v_type_owner__vector_type__capacity__last__bit20)

axiom hnco__test2__v_type_owner__vector_type__capacity__position_axiom20 :
  (0 <= hnco__test2__v_type_owner__vector_type__capacity__position20)

logic hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit20 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit20 : int

logic hnco__test2__v_type_owner__vector_type__hidden_vector__position20 : int

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit_axiom20 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit20)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit_axiom20 :
  (hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit20 <  hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit20)

axiom hnco__test2__v_type_owner__vector_type__hidden_vector__position_axiom20 :
  (0 <= hnco__test2__v_type_owner__vector_type__hidden_vector__position20)

logic user_eq44 : us_rep21, us_rep21 -> bool

logic dummy146 : capacity_range

logic dummy147 : capacity_range1

logic dummy148 : us_main_type

logic dummy149 : us_private

logic dummy150 : int

type tvS__ref = { tvS__content : us_rep21
}

function tvS__ref___projection(a: tvS__ref) : us_rep21 = (a).tvS__content

logic append__2__specific_post : int, us_split_fields2, us_split_discrs2,
  int, int, us_split_fields2 -> prop

axiom hnco__test2__v_type_owner__vector_type__compat_axiom : true

axiom hnco__test2__TvS__compat_axiom : true

axiom hnco__test2__v_type_owner__empty_vector__R185s__T187s__compat_axiom :
  true

axiom hnco__test2__v_type_owner__Oeq__2__S190s__compat_axiom : true

axiom hnco__test2__v_type_owner__Oeq__2__S193s__compat_axiom : true

axiom hnco__test2__v_type_owner__to_vector__R201s__T202s__compat_axiom : true

axiom hnco__test2__v_type_owner__capacity__S205s__compat_axiom : true

axiom hnco__test2__v_type_owner__length__S212s__compat_axiom : true

axiom hnco__test2__v_type_owner__assign__S224s__compat_axiom : true

axiom hnco__test2__v_type_owner__copy__S232s__compat_axiom : true

axiom hnco__test2__v_type_owner__copy__R235s__T236s__compat_axiom : true

axiom hnco__test2__v_type_owner__element__S241s__compat_axiom : true

axiom hnco__test2__v_type_owner__append__S250s__compat_axiom : true

axiom hnco__test2__v_type_owner__first_index__S270s__compat_axiom : true

axiom hnco__test2__v_type_owner__first_element__S276s__compat_axiom : true

axiom hnco__test2__v_type_owner__last_index__S282s__compat_axiom : true

axiom hnco__test2__v_type_owner__last_element__S288s__compat_axiom : true

axiom hnco__test2__v_type_owner__find_index__S294s__compat_axiom : true

axiom hnco__test2__v_type_owner__reverse_find_index__S300s__compat_axiom :
  true

axiom hnco__test2__v_type_owner__contains__S306s__compat_axiom : true

axiom hnco__test2__v_type_owner__has_element__S312s__compat_axiom : true

logic contains : us_rep1, int -> bool

logic contains__function_guard : bool, us_rep1, int -> prop

logic contains1 : int, us_rep1, int -> bool

logic contains__function_guard1 : bool, int, us_rep1, int -> prop

type element_type

predicate in_range44(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq45 : element_type, element_type -> bool

logic dummy151 : element_type

type element_type__ref = { element_type__content : element_type
}

function element_type__ref___projection(a: element_type__ref) : element_type =
  (a).element_type__content

axiom contains__post_axiom : true

axiom contains__post__dispatch_axiom : true

axiom hnco__test2__v_type_owner__vector_type__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__TvS__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag20, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag20, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__empty_vector__R185s__T187s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag1, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag1, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__Oeq__2__S190s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag3, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag3, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__Oeq__2__S193s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag2, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag2, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__to_vector__R201s__T202s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag4, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag4, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__capacity__S205s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag5, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag5, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__length__S212s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag6, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag6, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__assign__S224s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag7, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag7, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__copy__S232s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag8, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag8, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__copy__R235s__T236s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag9, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag9, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__element__S241s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag10, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag10, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__append__S250s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag11, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag11, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__first_index__S270s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag12, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag12, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__first_element__S276s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag13, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag13, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__last_index__S282s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag14, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag14, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__last_element__S288s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag15, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag15, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__find_index__S294s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag16, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag16, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__reverse_find_index__S300s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag17, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag17, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__contains__S306s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag18, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag18, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

axiom hnco__test2__v_type_owner__has_element__S312s__compat_axiom1 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int.
  (forall item:int [contains1(us_tag19, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)].
  (to_int(contains({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 },
  item)) = to_int(contains1(us_tag19, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }, item)))))

logic v__split_discrs : capacity_range

logic v__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS : int

axiom length__post_axiom :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })].
  ((to_rep1(container) = to_rep(container1)) -> in_range(length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }))))

axiom length__post__dispatch_axiom :
  (forall attr__tag21:int.
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(attr__tag21, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })].
  ((to_rep1(container) = to_rep(container1)) -> in_range(length1(attr__tag21,
  { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))))

axiom hnco__test2__v_type_owner__vector_type__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__TvS__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag20, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag20, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__empty_vector__R185s__T187s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag1, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag1, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__Oeq__2__S190s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag3, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag3, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__Oeq__2__S193s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag2, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag2, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__to_vector__R201s__T202s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag4, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag4, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__capacity__S205s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag5, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag5, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__length__S212s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag6, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag6, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__assign__S224s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag7, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag7, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__copy__S232s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag8, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag8, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__copy__R235s__T236s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag9, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag9, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__element__S241s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag10, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag10, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__append__S250s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag11, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag11, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__first_index__S270s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag12, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag12, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__first_element__S276s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag13, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag13, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__last_index__S282s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag14, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag14, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__last_element__S288s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag15, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag15, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__find_index__S294s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag16, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag16, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__reverse_find_index__S300s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag17, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag17, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__contains__S306s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag18, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag18, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

axiom hnco__test2__v_type_owner__has_element__S312s__compat_axiom2 :
  (forall container:capacity_range. forall container1:capacity_range1.
  forall container2:us_main_type. forall container3:us_private.
  forall container4:int [length1(us_tag19, { us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })]. (length({
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 }) = length1(us_tag19, {
  us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = container };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container1 }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container2 } };
  rec__ext__ = container3 }; attr__tag = container4 })))

logic is_empty : us_rep1 -> bool

logic is_empty__function_guard : bool, us_rep1 -> prop

axiom is_empty__post_axiom : true

logic capacity__function_guard : int, us_rep -> prop

logic length2 : us_rep -> int

logic length__function_guard2 : int, us_rep -> prop

axiom length__post_axiom1 :
  (forall container:capacity_range1. forall container1:us_main_type
  [length2({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container1 }
  })]. ((((of_int(1) = true) -> (length2({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container1 }
  }) <= to_rep(container))) and ((not (of_int(1) = true)) -> (length2({
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container1 }
  }) <= 2147483647))) and in_range1(length2({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container1 }
  }))))

logic is_empty1 : us_rep -> bool

logic is_empty__function_guard1 : bool, us_rep -> prop

axiom is_empty__post_axiom1 :
  (forall container:capacity_range1. forall container1:us_main_type
  [is_empty1({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container1 }
  })]. ((is_empty1({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container1 }
  }) = true) <-> (length2({ us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  container }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector = container1 }
  }) = 0)))

logic left : capacity_range

logic left1 : capacity_range1

logic left2 : us_main_type

logic left3 : us_private

logic left4 : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic right : capacity_range

logic right1 : capacity_range1

logic right2 : us_main_type

logic right3 : us_private

logic right4 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic container : capacity_range

logic container1 : capacity_range1

logic container2 : us_main_type

logic container3 : us_private

logic container4 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic container5 : capacity_range

logic container6 : capacity_range1

logic container7 : us_main_type

logic container8 : us_private

logic container9 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic source : capacity_range

logic source1 : capacity_range1

logic source2 : us_main_type

logic source3 : us_private

logic source4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic source5 : capacity_range

logic source6 : capacity_range1

logic source7 : us_main_type

logic source8 : us_private

logic source9 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic container10 : capacity_range

logic container11 : capacity_range1

logic container12 : us_main_type

logic container13 : us_private

logic container14 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic new_item : capacity_range

logic new_item1 : capacity_range1

logic new_item2 : us_main_type

logic new_item3 : us_private

logic new_item4 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic container15 : capacity_range

logic container16 : capacity_range1

logic container17 : us_main_type

logic container18 : us_private

logic container19 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic container20 : capacity_range

logic container21 : capacity_range1

logic container22 : us_main_type

logic container23 : us_private

logic container24 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic container25 : capacity_range

logic container26 : capacity_range1

logic container27 : us_main_type

logic container28 : us_private

logic container29 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic container30 : capacity_range

logic container31 : capacity_range1

logic container32 : us_main_type

logic container33 : us_private

logic container34 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic container35 : capacity_range

logic container36 : capacity_range1

logic container37 : us_main_type

logic container38 : us_private

logic container39 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic container40 : capacity_range

logic container41 : capacity_range1

logic container42 : us_main_type

logic container43 : us_private

logic container44 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic container45 : capacity_range

logic container46 : capacity_range1

logic container47 : us_main_type

logic container48 : us_private

logic container49 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic container50 : capacity_range

logic container51 : capacity_range1

logic container52 : us_main_type

logic container53 : us_private

logic container54 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

 (* File "a-cofove.ads", line 807, characters 0-0 *)
goal WP_parameter_def :
  (forall v__split_fields:capacity_range1.
  forall v__split_fields1:us_main_type. forall v__split_fields2:us_private.
  (((10 = to_rep1(v__split_discrs)) and (10 = to_rep(v__split_fields))) ->
  ((of_int(1) = true) -> (length({ us_split_discrs3 = {
  rec__hnco__test2__v_type_owner__vector_type__capacity = v__split_discrs };
  us_split_fields3 = {
  rec__hnco__test2__v_type_owner__vector_type__hidden_vector = {
  us_split_discrs1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity =
  v__split_fields }; us_split_fields1 = {
  rec__hnco__test2__v_type_owner__vector_type_owner__vector =
  v__split_fields1 } }; rec__ext__ = hide_ext__19(v__split_fields2) };
  attr__tag = v__attr__tag }) <  to_rep1(v__split_discrs)))))
