;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort index 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483646)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (index index) Bool)

(declare-const dummy1 index)

(declare-datatypes ((index__ref 0))
(((mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))

(define-fun dynamic_invariant1 ((temp___expr_136 Int)
  (temp___is_init_133 Bool) (temp___skip_constant_134 Bool)
  (temp___do_toplevel_135 Bool)) Bool (=>
                                      (or (= temp___is_init_133 true)
                                      (<= 0 2147483646)) (in_range2
                                      temp___expr_136)))

(declare-datatypes ((map__ref 0))
(((mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ((us_t 0)) (((mk___t (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int integer)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int integer)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq2 (us_t us_t) Bool)

(declare-const dummy2 us_t)

(declare-datatypes ((arr__ref 0)) (((mk_arr__ref (arr__content us_t)))))
(define-fun arr__ref___projection ((a arr__ref)) us_t (arr__content a))

(declare-fun is_set (us_t Int Int us_t) Bool)

(declare-fun is_set__function_guard (Bool us_t Int Int us_t) Bool)

(define-fun dynamic_invariant2 ((temp___expr_142 us_t)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_140 true))
                                      (dynamic_property 0 2147483646
                                      (first1 temp___expr_142)
                                      (last1 temp___expr_142)))
                                      (=> (= temp___do_toplevel_141 true)
                                      (=> (= temp___is_init_139 true)
                                      (= (first1 temp___expr_142) 0)))))

(define-fun dynamic_predicate ((temp___145 us_t)) Bool (= (first1 temp___145) 0))

;; is_set__post_axiom
  (assert true)

;; is_set__def_axiom
  (assert
  (forall ((a us_t) (r us_t))
  (forall ((i Int) (v Int))
  (! (= (= (is_set a i v r) true)
     (and
     (and (and (= (first1 r) (first1 a)) (= (last1 r) (last1 a)))
     (= (to_rep (select (to_array r) i)) v))
     (forall ((j Int))
     (=> (and (<= (first1 a) j) (<= j (last1 a)))
     (=> (not (= i j))
     (= (to_rep (select (to_array r) j)) (to_rep (select (to_array a) j)))))))) :pattern (
  (is_set a i v r)) ))))

(declare-fun is_perm (us_t us_t) Bool)

(declare-fun is_perm__function_guard (Bool us_t us_t) Bool)

(declare-fun occ (us_t Int) Int)

(declare-fun occ__function_guard (Int us_t Int) Bool)

;; is_perm__post_axiom
  (assert true)

;; is_perm__def_axiom
  (assert
  (forall ((a us_t) (b us_t))
  (! (= (= (is_perm a b) true)
     (forall ((e Int))
     (=> (and (<= (- 2147483648) e) (<= e 2147483647))
     (= (occ a e) (occ b e))))) :pattern ((is_perm a b)) )))

(declare-const values__first integer)

(declare-const values__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const y Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (integer integer) Bool)

(declare-const dummy3 integer)

(declare-datatypes ((tTinitSP1__ref 0))
(((mk_tTinitSP1__ref (tTinitSP1__content integer)))))
(define-fun tTinitSP1__ref___projection ((a tTinitSP1__ref)) integer
  (tTinitSP1__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern (
  (mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ((us_t1 0))
(((mk___t1 (elts1 (Array Int integer))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))

(define-fun of_array1 ((a (Array Int integer)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int integer)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int integer)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq2 ((x1 us_t1)
  (y1 us_t1)) Bool (bool_eq (elts1 x1) (to_rep (first2 (rt1 x1)))
                   (to_rep (last2 (rt1 x1))) (elts1 y1)
                   (to_rep (first2 (rt1 y1))) (to_rep (last2 (rt1 y1)))))

(declare-fun user_eq4 (us_t1 us_t1) Bool)

(declare-const dummy4 us_t1)

(declare-datatypes ((tinitS__ref 0))
(((mk_tinitS__ref (tinitS__content us_t1)))))
(define-fun tinitS__ref___projection ((a tinitS__ref)) us_t1 (tinitS__content
                                                             a))

(define-fun dynamic_invariant3 ((temp___expr_204 us_t1)
  (temp___is_init_201 Bool) (temp___skip_constant_202 Bool)
  (temp___do_toplevel_203 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_202 true))
                                      (and (dynamic_property2
                                      (to_rep values__first)
                                      (to_rep values__last)
                                      (first3 temp___expr_204)
                                      (last3 temp___expr_204))
                                      (and
                                      (= (first3 temp___expr_204) (to_rep
                                                                  values__first))
                                      (= (last3 temp___expr_204) (to_rep
                                                                 values__last)))))
                                      (=> (= temp___do_toplevel_203 true)
                                      (=> (= temp___is_init_201 true)
                                      (= (first3 temp___expr_204) 0)))))

(define-fun dynamic_predicate1 ((temp___211 us_t1)) Bool (= (first3
                                                            temp___211) 0))

(declare-const init us_t1)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-const dummy5 integer)

(declare-datatypes ((tTintermSP1__ref 0))
(((mk_tTintermSP1__ref (tTintermSP1__content integer)))))
(define-fun tTintermSP1__ref___projection ((a tTintermSP1__ref)) integer
  (tTintermSP1__content a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern (
  (mk2 f l)) )))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property3 range_first range_last low)
                   (dynamic_property3 range_first range_last high))))))

(declare-datatypes ((us_t2 0))
(((mk___t2 (elts2 (Array Int integer))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int integer) (elts2 a))

(define-fun of_array2 ((a (Array Int integer)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-const value__size2 Int)

(declare-fun object__size2 ((Array Int integer)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int integer)) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq3 ((x1 us_t2)
  (y1 us_t2)) Bool (bool_eq (elts2 x1) (to_rep (first4 (rt2 x1)))
                   (to_rep (last4 (rt2 x1))) (elts2 y1)
                   (to_rep (first4 (rt2 y1))) (to_rep (last4 (rt2 y1)))))

(declare-fun user_eq6 (us_t2 us_t2) Bool)

(declare-const dummy6 us_t2)

(declare-datatypes ((tintermS__ref 0))
(((mk_tintermS__ref (tintermS__content us_t2)))))
(define-fun tintermS__ref___projection ((a tintermS__ref)) us_t2 (tintermS__content
                                                                 a))

(define-fun dynamic_invariant4 ((temp___expr_216 us_t2)
  (temp___is_init_213 Bool) (temp___skip_constant_214 Bool)
  (temp___do_toplevel_215 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_214 true))
                                      (and (dynamic_property4
                                      (to_rep values__first)
                                      (to_rep values__last)
                                      (first5 temp___expr_216)
                                      (last5 temp___expr_216))
                                      (and
                                      (= (first5 temp___expr_216) (to_rep
                                                                  values__first))
                                      (= (last5 temp___expr_216) (to_rep
                                                                 values__last)))))
                                      (=> (= temp___do_toplevel_215 true)
                                      (=> (= temp___is_init_213 true)
                                      (= (first5 temp___expr_216) 0)))))

(define-fun dynamic_predicate2 ((temp___223 us_t2)) Bool (= (first5
                                                            temp___223) 0))

(declare-const interm__first integer)

(declare-const interm__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-sort nb_occ 0)

(define-fun in_range3 ((x1 Int)) Bool (and (<= 0 x1) (<= x1 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq7 (nb_occ nb_occ) Bool)

(declare-const dummy7 nb_occ)

(declare-datatypes ((nb_occ__ref 0))
(((mk_nb_occ__ref (nb_occ__content nb_occ)))))
(define-fun nb_occ__ref___projection ((a nb_occ__ref)) nb_occ (nb_occ__content
                                                              a))

(define-fun dynamic_invariant5 ((temp___expr_152 Int)
  (temp___is_init_149 Bool) (temp___skip_constant_150 Bool)
  (temp___do_toplevel_151 Bool)) Bool (=>
                                      (or (= temp___is_init_149 true)
                                      (<= 0 2147483647)) (in_range3
                                      temp___expr_152)))

(declare-fun remove_last (us_t) us_t)

(declare-fun remove_last__function_guard (us_t us_t) Bool)

(define-fun dynamic_property5 ((first_int Int) (last_int Int)
  (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq8 (integer integer) Bool)

(declare-const dummy8 integer)

(declare-datatypes ((t17s__ref 0))
(((mk_t17s__ref (t17s__content integer)))))
(define-fun t17s__ref___projection ((a t17s__ref)) integer (t17s__content a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern (
  (mk3 f l)) )))

(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-datatypes ((us_t3 0))
(((mk___t3 (elts3 (Array Int integer))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int integer) (elts3 a))

(define-fun of_array3 ((a (Array Int integer)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-const value__size3 Int)

(declare-fun object__size3 ((Array Int integer)) Int)

(declare-const value__component__size3 Int)

(declare-fun object__component__size3 ((Array Int integer)) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment3 a))))

(define-fun bool_eq4 ((x1 us_t3)
  (y1 us_t3)) Bool (bool_eq (elts3 x1) (to_rep (first6 (rt3 x1)))
                   (to_rep (last6 (rt3 x1))) (elts3 y1)
                   (to_rep (first6 (rt3 y1))) (to_rep (last6 (rt3 y1)))))

(declare-fun user_eq9 (us_t3 us_t3) Bool)

(declare-const dummy9 us_t3)

(declare-datatypes ((t18s__ref 0)) (((mk_t18s__ref (t18s__content us_t3)))))
(define-fun t18s__ref___projection ((a t18s__ref)) us_t3 (t18s__content a))

;; remove_last__post_axiom
  (assert
  (forall ((a us_t))
  (! (=> (and (dynamic_invariant2 a true true true) (< 0 (length a)))
     (dynamic_invariant2 (remove_last a) true false true)) :pattern (
  (remove_last a)) )))

;; remove_last__def_axiom
  (assert
  (forall ((a us_t))
  (! (=> (dynamic_invariant2 a true true true)
     (= (remove_last a) (let ((temp___164 (let ((temp___163 (- (last1 a) 1)))
                                          (let ((temp___162 (first1 a)))
                                          (of_array3 (to_array a) temp___162
                                          temp___163)))))
                        (of_array (to_array3 temp___164) (first7 temp___164)
                        (last7 temp___164))))) :pattern ((remove_last a)) )))

(declare-fun occ_def (us_t Int) Int)

(declare-fun occ_def__function_guard (Int us_t Int) Bool)

;; occ_def__def_axiom
  (assert
  (forall ((a us_t))
  (forall ((e Int))
  (! (=>
     (and (dynamic_invariant2 a true true true) (dynamic_invariant e true
     true true))
     (= (occ_def a e) (ite (= (length a) 0) 0
                      (ite (= (to_rep (select (to_array a) (last1 a))) e)
                      (+ (occ_def (remove_last a) e) 1)
                      (occ_def (remove_last a) e))))) :pattern ((occ_def a e)) ))))

;; occ__post_axiom
  (assert
  (forall ((a us_t))
  (forall ((e Int))
  (! (=>
     (and (dynamic_invariant2 a true true true) (dynamic_invariant e true
     true true))
     (let ((result (occ a e)))
     (and (<= result (length a)) (dynamic_invariant5 result true false true)))) :pattern (
  (occ a e)) ))))

;; occ__def_axiom
  (assert
  (forall ((a us_t))
  (forall ((e Int))
  (! (=>
     (and (dynamic_invariant2 a true true true) (dynamic_invariant e true
     true true)) (= (occ a e) (occ_def a e))) :pattern ((occ a e)) ))))

(declare-const values (Array Int integer))

(declare-const temp Int)

(declare-const interm (Array Int integer))

(declare-const temp___293 (Array Int integer))

(declare-const temp___2931 t1)

(declare-const pair_insertion_sort__swap__init__assume (Array Int integer))

(declare-const pair_insertion_sort__swap__init__assume1 t1)

(declare-const o Int)

(declare-const o1 integer)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const o4 integer)

(declare-const o5 Int)

(declare-const o6 integer)

(declare-const o7 Int)

(declare-const temp___297 (Array Int integer))

(declare-const o8 (Array Int integer))

(declare-const temp___299 (Array Int integer))

(declare-const temp___2991 t2)

(declare-const temp___300 (Array Int integer))

(declare-const temp___3001 t2)

(declare-const o9 (Array Int integer))

(declare-const o10 t2)

(declare-const o11 (Array Int integer))

(declare-const o12 integer)

(declare-const o13 Int)

(declare-const temp___301 (Array Int integer))

(declare-const result Int)

(declare-const temp1 Int)

(declare-const result1 (Array Int integer))

(declare-const values1 (Array Int integer))

(declare-const result2 (Array Int integer))

(declare-const interm1 (Array Int integer))

(define-fun temp___3002 () us_t2 (mk___t2 temp___300 temp___3001))

(define-fun pair_insertion_sort__swap__init__assume2 () us_t1 (mk___t1
                                                              pair_insertion_sort__swap__init__assume
                                                              pair_insertion_sort__swap__init__assume1))

;; H
  (assert
  (and (dynamic_property 0 2147483646 (to_rep values__first)
  (to_rep values__last)) (= (to_rep values__first) 0)))

;; H
  (assert (in_range2 x))

;; H
  (assert (in_range2 y))

;; H
  (assert
  (and (and (<= (to_rep values__first) x) (<= x (to_rep values__last)))
  (and (and (<= (to_rep values__first) y) (<= y (to_rep values__last)))
  (not (= x y)))))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 temp)))

;; H
  (assert
  (= (slide values (to_rep values__first) (to_rep values__first)) temp___293))

;; H
  (assert (= (mk1 (to_rep values__first) (to_rep values__last)) temp___2931))

;; H
  (assert (= (to_rep (first2 temp___2931)) 0))

;; H
  (assert
  (= pair_insertion_sort__swap__init__assume2 (mk___t1 temp___293
                                              temp___2931)))

;; H
  (assert (= pair_insertion_sort__swap__init__assume2 init))

;; H
  (assert (dynamic_invariant3 init true false true))

;; H
  (assert
  (and (dynamic_property4 (to_rep values__first) (to_rep values__last)
  (to_rep interm__first) (to_rep interm__last))
  (and (= (to_rep interm__first) (to_rep values__first))
  (= (to_rep interm__last) (to_rep values__last)))))

;; H
  (assert (and (<= (to_rep values__first) x) (<= x (to_rep values__last))))

;; H
  (assert (= o x))

;; H
  (assert (= o1 (select values o)))

;; H
  (assert (= o2 (to_rep o1)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref temp)))

;; H
  (assert (= temp1 o2))

;; H
  (assert (and (<= (to_rep values__first) y) (<= y (to_rep values__last))))

;; H
  (assert (= o3 y))

;; H
  (assert (= o4 (select values o3)))

;; H
  (assert (= o5 (to_rep o4)))

;; H
  (assert (= (to_rep o6) o5))

;; H
  (assert (and (<= (to_rep values__first) x) (<= x (to_rep values__last))))

;; H
  (assert (= o7 x))

;; H
  (assert (= temp___297 (store values o7 o6)))

;; H
  (assert (= (to_rep values__first) 0))

;; H
  (assert (= o8 temp___297))

;; H
  (assert (= (mk_map__ref result1) (mk_map__ref values)))

;; H
  (assert (= values1 o8))

;; H
  (assert
  (= (is_set
     (mk___t (elts1 init)
     (mk (to_rep (first2 (rt1 init))) (to_rep (last2 (rt1 init))))) x
     (to_rep (select (elts1 init) y))
     (mk___t values1 (mk (to_rep values__first) (to_rep values__last)))) true))

;; H
  (assert
  (= (slide values1 (to_rep values__first) (to_rep values__first)) temp___299))

;; H
  (assert (= (mk2 (to_rep values__first) (to_rep values__last)) temp___2991))

;; H
  (assert (= (to_rep (first4 temp___2991)) 0))

;; H
  (assert (= temp___3002 (mk___t2 temp___299 temp___2991)))

;; H
  (assert
  (= (ite (<= (to_rep (first4 temp___3001)) (to_rep (last4 temp___3001)))
     (+ (- (to_rep (last4 temp___3001)) (to_rep (first4 temp___3001))) 1) 0)
  (ite (<= (to_rep interm__first) (to_rep interm__last))
  (+ (- (to_rep interm__last) (to_rep interm__first)) 1) 0)))

;; H
  (assert (= (mk___t2 o9 o10) temp___3002))

;; H
  (assert (= o11 o9))

;; H
  (assert (= (mk_map__ref result2) (mk_map__ref interm)))

;; H
  (assert (= interm1 o11))

;; H
  (assert (= (to_rep o12) temp1))

;; H
  (assert (and (<= (to_rep values__first) y) (<= y (to_rep values__last))))

;; H
  (assert (= o13 y))

;; H
  (assert (= temp___301 (store values1 o13 o12)))

(assert
;; WP_parameter_def
 ;; File "pair_insertion_sort.ads", line 13, characters 0-0
  (not (= (to_rep values__first) 0)))
(check-sat)
(exit)
