(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

logic nouser : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic temp___String_Literal_135 : unit -> (int,character) farray

axiom temp___String_Literal_135__def_axiom :
  ((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_135(void)[1])) = 78) and
  (to_rep((temp___String_Literal_135(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_135(void)[3])) = 85)) and
  (to_rep((temp___String_Literal_135(void)[4])) = 115)) and
  (to_rep((temp___String_Literal_135(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_135(void)[6])) = 114)) and
  (to_rep((temp___String_Literal_135(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[23])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[24])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[25])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[26])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[27])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[29])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[30])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[31])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[32])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[33])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[34])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[35])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[37])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[39])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[40])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[41])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[42])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[43])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[44])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[45])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[46])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[47])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[48])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[49])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[50])) = 32))

logic valid_numberlogentries : us_private -> bool

logic valid_numberlogentries__function_guard : bool, us_private -> prop

type msgt

predicate in_range4(x: int) = ((0 <= x) and (x <= 7))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : msgt, msgt -> bool

logic dummy5 : msgt

type msgt__ref = { msgt__content : msgt
}

function msgt__ref___projection(a: msgt__ref) : msgt = (a).msgt__content

type msgtextcount

predicate in_range5(x: int) = ((0 <= x) and (x <= 23))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : msgtextcount, msgtextcount -> bool

logic dummy6 : msgtextcount

type msgtextcount__ref = { msgtextcount__content : msgtextcount
}

function msgtextcount__ref___projection(a: msgtextcount__ref) : msgtextcount =
  (a).msgtextcount__content

logic to_rep2 : msgtextcount -> int

logic of_rep2 : int -> msgtextcount

axiom inversion_axiom2 :
  (forall x:msgtextcount [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:msgtextcount [to_rep2(x)]. in_range5(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range5(x) ->
  (to_rep2(of_rep2(x)) = x)))

logic dummy7 : (int,character) farray

logic value__size1 : int

logic object__size1 : (int,character) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,character) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,character) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,character) farray. (0 <= object__alignment1(a)))

logic user_eq6 : (int,character) farray, (int,character) farray -> bool

type us_split_fields = { rec__display__msglinet__text :
(int,character) farray; rec__display__msglinet__len : msgtextcount
}

function us_split_fields_Text__projection(a: us_split_fields) : (int,character) farray =
  (a).rec__display__msglinet__text

function us_split_fields_Len__projection(a: us_split_fields) : msgtextcount =
  (a).rec__display__msglinet__len

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref_7__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep_8__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq9 : us_rep, us_rep -> bool

axiom bool_eq_def7 :
  (forall a:us_rep. forall b:us_rep [bool_eq9(a, b)].
  ((((bool_eq5(((a).us_split_fields1).rec__display__msglinet__text, 1, 23,
  ((b).us_split_fields1).rec__display__msglinet__text, 1, 23) = true) and
  (to_rep2(((a).us_split_fields1).rec__display__msglinet__len) = to_rep2(((b).us_split_fields1).rec__display__msglinet__len))) ->
  (bool_eq9(a, b) = true)) and
  ((not ((bool_eq5(((a).us_split_fields1).rec__display__msglinet__text, 1,
  23, ((b).us_split_fields1).rec__display__msglinet__text, 1, 23) = true) and
  (to_rep2(((a).us_split_fields1).rec__display__msglinet__len) = to_rep2(((b).us_split_fields1).rec__display__msglinet__len)))) ->
  (bool_eq9(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  (0 <= object__size2({ us_split_fields1 = { rec__display__msglinet__text =
  a; rec__display__msglinet__len = a1 } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  (0 <= object__alignment2({ us_split_fields1 = {
  rec__display__msglinet__text = a; rec__display__msglinet__len = a1 } })))

logic display__msglinet__text__first__bit : int

logic display__msglinet__text__last__bit : int

logic display__msglinet__text__position : int

axiom display__msglinet__text__first__bit_axiom :
  (0 <= display__msglinet__text__first__bit)

axiom display__msglinet__text__last__bit_axiom :
  (display__msglinet__text__first__bit <  display__msglinet__text__last__bit)

axiom display__msglinet__text__position_axiom :
  (0 <= display__msglinet__text__position)

logic display__msglinet__len__first__bit : int

logic display__msglinet__len__last__bit : int

logic display__msglinet__len__position : int

axiom display__msglinet__len__first__bit_axiom :
  (0 <= display__msglinet__len__first__bit)

axiom display__msglinet__len__last__bit_axiom :
  (display__msglinet__len__first__bit <  display__msglinet__len__last__bit)

axiom display__msglinet__len__position_axiom :
  (0 <= display__msglinet__len__position)

logic user_eq7 : us_rep, us_rep -> bool

logic dummy8 : (int,character) farray

logic dummy9 : msgtextcount

type msglinet__ref = { msglinet__content : us_rep
}

function msglinet__ref___projection(a: msglinet__ref) : us_rep =
  (a).msglinet__content

logic blankline : (int,character) farray

logic blankline1 : msgtextcount

logic attr__ATTRIBUTE_ADDRESS1 : int

type us_split_fields2 = { rec__display__msgstrt__top : us_rep;
rec__display__msgstrt__bottom : us_rep
}

function us_split_fields_Top__projection(a: us_split_fields2) : us_rep =
  (a).rec__display__msgstrt__top

function us_split_fields_Bottom__projection(a: us_split_fields2) : us_rep =
  (a).rec__display__msgstrt__bottom

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref_8__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep_9__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq10 : us_rep1, us_rep1 -> bool

axiom bool_eq_def8 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq10(a, b)].
  ((((bool_eq9(((a).us_split_fields3).rec__display__msgstrt__top,
  ((b).us_split_fields3).rec__display__msgstrt__top) = true) and
  (bool_eq9(((a).us_split_fields3).rec__display__msgstrt__bottom,
  ((b).us_split_fields3).rec__display__msgstrt__bottom) = true)) ->
  (bool_eq10(a, b) = true)) and
  ((not ((bool_eq9(((a).us_split_fields3).rec__display__msgstrt__top,
  ((b).us_split_fields3).rec__display__msgstrt__top) = true) and
  (bool_eq9(((a).us_split_fields3).rec__display__msgstrt__bottom,
  ((b).us_split_fields3).rec__display__msgstrt__bottom) = true))) ->
  (bool_eq10(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep1 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep1 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  forall a2:(int,character) farray. forall a3:msgtextcount.
  (0 <= object__size3({ us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = a;
  rec__display__msglinet__len = a1 } }; rec__display__msgstrt__bottom = {
  us_split_fields1 = { rec__display__msglinet__text = a2;
  rec__display__msglinet__len = a3 } } } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  forall a2:(int,character) farray. forall a3:msgtextcount.
  (0 <= object__alignment3({ us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = a; rec__display__msglinet__len = a1 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = a2; rec__display__msglinet__len = a3 } } }
  })))

logic display__msgstrt__top__first__bit : int

logic display__msgstrt__top__last__bit : int

logic display__msgstrt__top__position : int

axiom display__msgstrt__top__first__bit_axiom :
  (0 <= display__msgstrt__top__first__bit)

axiom display__msgstrt__top__last__bit_axiom :
  (display__msgstrt__top__first__bit <  display__msgstrt__top__last__bit)

axiom display__msgstrt__top__position_axiom :
  (0 <= display__msgstrt__top__position)

logic display__msgstrt__bottom__first__bit : int

logic display__msgstrt__bottom__last__bit : int

logic display__msgstrt__bottom__position : int

axiom display__msgstrt__bottom__first__bit_axiom :
  (0 <= display__msgstrt__bottom__first__bit)

axiom display__msgstrt__bottom__last__bit_axiom :
  (display__msgstrt__bottom__first__bit <  display__msgstrt__bottom__last__bit)

axiom display__msgstrt__bottom__position_axiom :
  (0 <= display__msgstrt__bottom__position)

logic user_eq8 : us_rep1, us_rep1 -> bool

logic dummy10 : (int,character) farray

logic dummy11 : msgtextcount

logic dummy12 : (int,character) farray

logic dummy13 : msgtextcount

type msgstrt__ref = { msgstrt__content : us_rep1
}

function msgstrt__ref___projection(a: msgstrt__ref) : us_rep1 =
  (a).msgstrt__content

type scrolltextcount

predicate in_range6(x: int) = ((0 <= x) and (x <= 50))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq9 : scrolltextcount, scrolltextcount -> bool

logic dummy14 : scrolltextcount

type scrolltextcount__ref = { scrolltextcount__content : scrolltextcount
}

function scrolltextcount__ref___projection(a: scrolltextcount__ref) : scrolltextcount =
  (a).scrolltextcount__content

logic to_rep3 : scrolltextcount -> int

logic of_rep3 : int -> scrolltextcount

axiom inversion_axiom3 :
  (forall x:scrolltextcount [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:scrolltextcount [to_rep3(x)]. in_range6(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range6(x) ->
  (to_rep3(of_rep3(x)) = x)))

type scrolltexti

predicate in_range7(x: int) = ((1 <= x) and (x <= 50))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq10 : scrolltexti, scrolltexti -> bool

logic dummy15 : scrolltexti

type scrolltexti__ref = { scrolltexti__content : scrolltexti
}

function scrolltexti__ref___projection(a: scrolltexti__ref) : scrolltexti =
  (a).scrolltexti__content

logic dummy16 : (int,character) farray

logic value__size4 : int

logic object__size4 : (int,character) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,character) farray -> int

logic value__alignment4 : int

logic object__alignment4 : (int,character) farray -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:(int,character) farray. (0 <= object__size4(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:(int,character) farray. (0 <= object__alignment4(a)))

logic user_eq11 : (int,character) farray, (int,character) farray -> bool

type us_split_fields4 = { rec__display__scrollstrt__text :
(int,character) farray; rec__display__scrollstrt__len : scrolltextcount
}

function us_split_fields_Text2__projection(a: us_split_fields4) : (int,character) farray =
  (a).rec__display__scrollstrt__text

function us_split_fields_Len2__projection(a: us_split_fields4) : scrolltextcount =
  (a).rec__display__scrollstrt__len

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref_9__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4
}

function us_rep_10__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq13 : us_rep2, us_rep2 -> bool

axiom bool_eq_def11 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq13(a, b)].
  ((((bool_eq5(((a).us_split_fields5).rec__display__scrollstrt__text, 1, 50,
  ((b).us_split_fields5).rec__display__scrollstrt__text, 1, 50) = true) and
  (to_rep3(((a).us_split_fields5).rec__display__scrollstrt__len) = to_rep3(((b).us_split_fields5).rec__display__scrollstrt__len))) ->
  (bool_eq13(a, b) = true)) and
  ((not ((bool_eq5(((a).us_split_fields5).rec__display__scrollstrt__text, 1,
  50, ((b).us_split_fields5).rec__display__scrollstrt__text, 1,
  50) = true) and
  (to_rep3(((a).us_split_fields5).rec__display__scrollstrt__len) = to_rep3(((b).us_split_fields5).rec__display__scrollstrt__len)))) ->
  (bool_eq13(a, b) = false))))

logic value__size5 : int

logic object__size5 : us_rep2 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep2 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:(int,character) farray. forall a1:scrolltextcount.
  (0 <= object__size5({ us_split_fields5 = { rec__display__scrollstrt__text =
  a; rec__display__scrollstrt__len = a1 } })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:(int,character) farray. forall a1:scrolltextcount.
  (0 <= object__alignment5({ us_split_fields5 = {
  rec__display__scrollstrt__text = a; rec__display__scrollstrt__len = a1 }
  })))

logic display__scrollstrt__text__first__bit : int

logic display__scrollstrt__text__last__bit : int

logic display__scrollstrt__text__position : int

axiom display__scrollstrt__text__first__bit_axiom :
  (0 <= display__scrollstrt__text__first__bit)

axiom display__scrollstrt__text__last__bit_axiom :
  (display__scrollstrt__text__first__bit <  display__scrollstrt__text__last__bit)

axiom display__scrollstrt__text__position_axiom :
  (0 <= display__scrollstrt__text__position)

logic display__scrollstrt__len__first__bit : int

logic display__scrollstrt__len__last__bit : int

logic display__scrollstrt__len__position : int

axiom display__scrollstrt__len__first__bit_axiom :
  (0 <= display__scrollstrt__len__first__bit)

axiom display__scrollstrt__len__last__bit_axiom :
  (display__scrollstrt__len__first__bit <  display__scrollstrt__len__last__bit)

axiom display__scrollstrt__len__position_axiom :
  (0 <= display__scrollstrt__len__position)

logic user_eq12 : us_rep2, us_rep2 -> bool

logic dummy17 : (int,character) farray

logic dummy18 : scrolltextcount

type scrollstrt__ref = { scrollstrt__content : us_rep2
}

function scrollstrt__ref___projection(a: scrollstrt__ref) : us_rep2 =
  (a).scrollstrt__content

logic msg : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

type map__ref1 = { map__content1 : (int,us_rep1) farray
}

logic slide1 : (int,us_rep1) farray, int, int -> (int,us_rep1) farray

axiom slide_eq1 :
  (forall a:(int,us_rep1) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,us_rep1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> (int,us_rep1) farray

axiom concat_def1 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : us_rep1, int -> (int,us_rep1) farray

axiom singleton_def1 :
  (forall v:(int,character) farray. forall v1:msgtextcount.
  forall v2:(int,character) farray. forall v3:msgtextcount.
  (forall i:int [(singleton1({ us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = v; rec__display__msglinet__len = v1 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = v2; rec__display__msglinet__len = v3 } } }
  }, i)[i])]. ((singleton1({ us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = v; rec__display__msglinet__len = v1 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = v2; rec__display__msglinet__len = v3 } } }
  }, i)[i]) = { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = v;
  rec__display__msglinet__len = v1 } }; rec__display__msgstrt__bottom = {
  us_split_fields1 = { rec__display__msglinet__text = v2;
  rec__display__msglinet__len = v3 } } } })))

logic bool_eq14 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> bool

axiom bool_eq_def12 :
  (forall a:(int,us_rep1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep1) farray. forall b__first:int. forall b__last:int
  [bool_eq14(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_150:int. ((((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) and (bool_eq10((a[temp___idx_150]),
  (b[((b__first - a__first) + temp___idx_150)])) = true)) or
  (not ((a__first <= temp___idx_150) and (temp___idx_150 <= a__last)))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) -> (bool_eq10((a[temp___idx_150]),
  (b[((b__first - a__first) + temp___idx_150)])) = true))))) -> (bool_eq14(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq14(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) -> (bool_eq10((a[temp___idx_150]),
  (b[((b__first - a__first) + temp___idx_150)])) = true)))))))

logic msgtostrings : (int,us_rep1) farray

logic attr__ATTRIBUTE_ADDRESS4 : int

logic display__msgtostrings__aggregate_def : us_rep1, us_rep1, us_rep1,
  us_rep1, us_rep1, us_rep1, us_rep1, us_rep1 -> (int,us_rep1) farray

axiom def_axiom :
  (forall temp___152:(int,character) farray. forall temp___1521:msgtextcount.
  forall temp___1522:(int,character) farray. forall temp___1523:msgtextcount.
  forall temp___153:(int,character) farray. forall temp___1531:msgtextcount.
  forall temp___1532:(int,character) farray. forall temp___1533:msgtextcount.
  forall temp___154:(int,character) farray. forall temp___1541:msgtextcount.
  forall temp___1542:(int,character) farray. forall temp___1543:msgtextcount.
  forall temp___155:(int,character) farray. forall temp___1551:msgtextcount.
  forall temp___1552:(int,character) farray. forall temp___1553:msgtextcount.
  forall temp___156:us_rep1. forall temp___157:us_rep1.
  forall temp___158:us_rep1. forall temp___159:us_rep1.
  (((((((((display__msgtostrings__aggregate_def({ us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[0]) = { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___152;
  rec__display__msglinet__len = temp___1521 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }) and ((display__msgtostrings__aggregate_def({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[1]) = { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } })) and ((display__msgtostrings__aggregate_def({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[2]) = { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } })) and ((display__msgtostrings__aggregate_def({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[3]) = { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } })) and ((display__msgtostrings__aggregate_def({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[4]) = temp___156)) and ((display__msgtostrings__aggregate_def({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[5]) = temp___157)) and ((display__msgtostrings__aggregate_def({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[6]) = temp___158)) and ((display__msgtostrings__aggregate_def({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___152; rec__display__msglinet__len =
  temp___1521 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1522; rec__display__msglinet__len =
  temp___1523 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___153;
  rec__display__msglinet__len = temp___1531 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1532; rec__display__msglinet__len =
  temp___1533 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___154;
  rec__display__msglinet__len = temp___1541 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1542; rec__display__msglinet__len =
  temp___1543 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = temp___155;
  rec__display__msglinet__len = temp___1551 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___1552; rec__display__msglinet__len =
  temp___1553 } } } }, temp___156, temp___157, temp___158,
  temp___159)[7]) = temp___159)))

logic temp___String_Literal_161 : unit -> (int,character) farray

axiom temp___String_Literal_161__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_161(void)[1])) = 83) and
  (to_rep((temp___String_Literal_161(void)[2])) = 89)) and
  (to_rep((temp___String_Literal_161(void)[3])) = 83)) and
  (to_rep((temp___String_Literal_161(void)[4])) = 84)) and
  (to_rep((temp___String_Literal_161(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_161(void)[6])) = 77)) and
  (to_rep((temp___String_Literal_161(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_161(void)[8])) = 78)) and
  (to_rep((temp___String_Literal_161(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_161(void)[10])) = 84)) and
  (to_rep((temp___String_Literal_161(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_161(void)[12])) = 79)) and
  (to_rep((temp___String_Literal_161(void)[13])) = 80)) and
  (to_rep((temp___String_Literal_161(void)[14])) = 69)) and
  (to_rep((temp___String_Literal_161(void)[15])) = 82)) and
  (to_rep((temp___String_Literal_161(void)[16])) = 65)) and
  (to_rep((temp___String_Literal_161(void)[17])) = 84)) and
  (to_rep((temp___String_Literal_161(void)[18])) = 73)) and
  (to_rep((temp___String_Literal_161(void)[19])) = 79)) and
  (to_rep((temp___String_Literal_161(void)[20])) = 78)) and
  (to_rep((temp___String_Literal_161(void)[21])) = 65)) and
  (to_rep((temp___String_Literal_161(void)[22])) = 76)) and
  (to_rep((temp___String_Literal_161(void)[23])) = 32))

logic temp___String_Literal_162 : unit -> (int,character) farray

axiom temp___String_Literal_162__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_162(void)[1])) = 87) and
  (to_rep((temp___String_Literal_162(void)[2])) = 69)) and
  (to_rep((temp___String_Literal_162(void)[3])) = 76)) and
  (to_rep((temp___String_Literal_162(void)[4])) = 67)) and
  (to_rep((temp___String_Literal_162(void)[5])) = 79)) and
  (to_rep((temp___String_Literal_162(void)[6])) = 77)) and
  (to_rep((temp___String_Literal_162(void)[7])) = 69)) and
  (to_rep((temp___String_Literal_162(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[9])) = 84)) and
  (to_rep((temp___String_Literal_162(void)[10])) = 79)) and
  (to_rep((temp___String_Literal_162(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[12])) = 84)) and
  (to_rep((temp___String_Literal_162(void)[13])) = 73)) and
  (to_rep((temp___String_Literal_162(void)[14])) = 83)) and
  (to_rep((temp___String_Literal_162(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_162(void)[23])) = 32))

logic temp___String_Literal_163 : unit -> (int,character) farray

axiom temp___String_Literal_163__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_163(void)[1])) = 69) and
  (to_rep((temp___String_Literal_163(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_163(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_163(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_163(void)[5])) = 82)) and
  (to_rep((temp___String_Literal_163(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[7])) = 84)) and
  (to_rep((temp___String_Literal_163(void)[8])) = 79)) and
  (to_rep((temp___String_Literal_163(void)[9])) = 75)) and
  (to_rep((temp___String_Literal_163(void)[10])) = 69)) and
  (to_rep((temp___String_Literal_163(void)[11])) = 78)) and
  (to_rep((temp___String_Literal_163(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_163(void)[23])) = 32))

logic temp___String_Literal_164 : unit -> (int,character) farray

axiom temp___String_Literal_164__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_164(void)[1])) = 65) and
  (to_rep((temp___String_Literal_164(void)[2])) = 85)) and
  (to_rep((temp___String_Literal_164(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_164(void)[4])) = 72)) and
  (to_rep((temp___String_Literal_164(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_164(void)[6])) = 78)) and
  (to_rep((temp___String_Literal_164(void)[7])) = 84)) and
  (to_rep((temp___String_Literal_164(void)[8])) = 73)) and
  (to_rep((temp___String_Literal_164(void)[9])) = 67)) and
  (to_rep((temp___String_Literal_164(void)[10])) = 65)) and
  (to_rep((temp___String_Literal_164(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_164(void)[12])) = 73)) and
  (to_rep((temp___String_Literal_164(void)[13])) = 78)) and
  (to_rep((temp___String_Literal_164(void)[14])) = 71)) and
  (to_rep((temp___String_Literal_164(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[16])) = 85)) and
  (to_rep((temp___String_Literal_164(void)[17])) = 83)) and
  (to_rep((temp___String_Literal_164(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_164(void)[19])) = 82)) and
  (to_rep((temp___String_Literal_164(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[23])) = 32))

logic temp___String_Literal_165 : unit -> (int,character) farray

axiom temp___String_Literal_165__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_165(void)[1])) = 73) and
  (to_rep((temp___String_Literal_165(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_165(void)[3])) = 83)) and
  (to_rep((temp___String_Literal_165(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_165(void)[5])) = 82)) and
  (to_rep((temp___String_Literal_165(void)[6])) = 84)) and
  (to_rep((temp___String_Literal_165(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[8])) = 70)) and
  (to_rep((temp___String_Literal_165(void)[9])) = 73)) and
  (to_rep((temp___String_Literal_165(void)[10])) = 78)) and
  (to_rep((temp___String_Literal_165(void)[11])) = 71)) and
  (to_rep((temp___String_Literal_165(void)[12])) = 69)) and
  (to_rep((temp___String_Literal_165(void)[13])) = 82)) and
  (to_rep((temp___String_Literal_165(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_165(void)[23])) = 32))

logic temp___String_Literal_166 : unit -> (int,character) farray

axiom temp___String_Literal_166__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_166(void)[1])) = 82) and
  (to_rep((temp___String_Literal_166(void)[2])) = 69)) and
  (to_rep((temp___String_Literal_166(void)[3])) = 77)) and
  (to_rep((temp___String_Literal_166(void)[4])) = 79)) and
  (to_rep((temp___String_Literal_166(void)[5])) = 86)) and
  (to_rep((temp___String_Literal_166(void)[6])) = 69)) and
  (to_rep((temp___String_Literal_166(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_166(void)[8])) = 84)) and
  (to_rep((temp___String_Literal_166(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_166(void)[10])) = 75)) and
  (to_rep((temp___String_Literal_166(void)[11])) = 69)) and
  (to_rep((temp___String_Literal_166(void)[12])) = 78)) and
  (to_rep((temp___String_Literal_166(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_166(void)[14])) = 65)) and
  (to_rep((temp___String_Literal_166(void)[15])) = 78)) and
  (to_rep((temp___String_Literal_166(void)[16])) = 68)) and
  (to_rep((temp___String_Literal_166(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_166(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_166(void)[19])) = 78)) and
  (to_rep((temp___String_Literal_166(void)[20])) = 84)) and
  (to_rep((temp___String_Literal_166(void)[21])) = 69)) and
  (to_rep((temp___String_Literal_166(void)[22])) = 82)) and
  (to_rep((temp___String_Literal_166(void)[23])) = 32))

logic temp___String_Literal_167 : unit -> (int,character) farray

axiom temp___String_Literal_167__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_167(void)[1])) = 65) and
  (to_rep((temp___String_Literal_167(void)[2])) = 85)) and
  (to_rep((temp___String_Literal_167(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_167(void)[4])) = 72)) and
  (to_rep((temp___String_Literal_167(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_167(void)[6])) = 78)) and
  (to_rep((temp___String_Literal_167(void)[7])) = 84)) and
  (to_rep((temp___String_Literal_167(void)[8])) = 73)) and
  (to_rep((temp___String_Literal_167(void)[9])) = 67)) and
  (to_rep((temp___String_Literal_167(void)[10])) = 65)) and
  (to_rep((temp___String_Literal_167(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_167(void)[12])) = 73)) and
  (to_rep((temp___String_Literal_167(void)[13])) = 78)) and
  (to_rep((temp___String_Literal_167(void)[14])) = 71)) and
  (to_rep((temp___String_Literal_167(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_167(void)[16])) = 85)) and
  (to_rep((temp___String_Literal_167(void)[17])) = 83)) and
  (to_rep((temp___String_Literal_167(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_167(void)[19])) = 82)) and
  (to_rep((temp___String_Literal_167(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_167(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_167(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_167(void)[23])) = 32))

logic temp___String_Literal_168 : unit -> (int,character) farray

axiom temp___String_Literal_168__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_168(void)[1])) = 80) and
  (to_rep((temp___String_Literal_168(void)[2])) = 76)) and
  (to_rep((temp___String_Literal_168(void)[3])) = 69)) and
  (to_rep((temp___String_Literal_168(void)[4])) = 65)) and
  (to_rep((temp___String_Literal_168(void)[5])) = 83)) and
  (to_rep((temp___String_Literal_168(void)[6])) = 69)) and
  (to_rep((temp___String_Literal_168(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[8])) = 87)) and
  (to_rep((temp___String_Literal_168(void)[9])) = 65)) and
  (to_rep((temp___String_Literal_168(void)[10])) = 73)) and
  (to_rep((temp___String_Literal_168(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_168(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_168(void)[23])) = 32))

logic temp___String_Literal_169 : unit -> (int,character) farray

axiom temp___String_Literal_169__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_169(void)[1])) = 69) and
  (to_rep((temp___String_Literal_169(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_169(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_169(void)[4])) = 82)) and
  (to_rep((temp___String_Literal_169(void)[5])) = 89)) and
  (to_rep((temp___String_Literal_169(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[7])) = 68)) and
  (to_rep((temp___String_Literal_169(void)[8])) = 69)) and
  (to_rep((temp___String_Literal_169(void)[9])) = 78)) and
  (to_rep((temp___String_Literal_169(void)[10])) = 73)) and
  (to_rep((temp___String_Literal_169(void)[11])) = 69)) and
  (to_rep((temp___String_Literal_169(void)[12])) = 68)) and
  (to_rep((temp___String_Literal_169(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_169(void)[23])) = 32))

logic temp___String_Literal_170 : unit -> (int,character) farray

axiom temp___String_Literal_170__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_170(void)[1])) = 82) and
  (to_rep((temp___String_Literal_170(void)[2])) = 69)) and
  (to_rep((temp___String_Literal_170(void)[3])) = 77)) and
  (to_rep((temp___String_Literal_170(void)[4])) = 79)) and
  (to_rep((temp___String_Literal_170(void)[5])) = 86)) and
  (to_rep((temp___String_Literal_170(void)[6])) = 69)) and
  (to_rep((temp___String_Literal_170(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[8])) = 84)) and
  (to_rep((temp___String_Literal_170(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_170(void)[10])) = 75)) and
  (to_rep((temp___String_Literal_170(void)[11])) = 69)) and
  (to_rep((temp___String_Literal_170(void)[12])) = 78)) and
  (to_rep((temp___String_Literal_170(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_170(void)[23])) = 32))

logic temp___String_Literal_171 : unit -> (int,character) farray

axiom temp___String_Literal_171__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_171(void)[1])) = 84) and
  (to_rep((temp___String_Literal_171(void)[2])) = 79)) and
  (to_rep((temp___String_Literal_171(void)[3])) = 75)) and
  (to_rep((temp___String_Literal_171(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_171(void)[5])) = 78)) and
  (to_rep((temp___String_Literal_171(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_171(void)[7])) = 85)) and
  (to_rep((temp___String_Literal_171(void)[8])) = 80)) and
  (to_rep((temp___String_Literal_171(void)[9])) = 68)) and
  (to_rep((temp___String_Literal_171(void)[10])) = 65)) and
  (to_rep((temp___String_Literal_171(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_171(void)[12])) = 69)) and
  (to_rep((temp___String_Literal_171(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_171(void)[14])) = 70)) and
  (to_rep((temp___String_Literal_171(void)[15])) = 65)) and
  (to_rep((temp___String_Literal_171(void)[16])) = 73)) and
  (to_rep((temp___String_Literal_171(void)[17])) = 76)) and
  (to_rep((temp___String_Literal_171(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_171(void)[19])) = 68)) and
  (to_rep((temp___String_Literal_171(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_171(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_171(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_171(void)[23])) = 32))

logic temp___String_Literal_172 : unit -> (int,character) farray

axiom temp___String_Literal_172__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_172(void)[1])) = 69) and
  (to_rep((temp___String_Literal_172(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_172(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_172(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_172(void)[5])) = 82)) and
  (to_rep((temp___String_Literal_172(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[7])) = 69)) and
  (to_rep((temp___String_Literal_172(void)[8])) = 78)) and
  (to_rep((temp___String_Literal_172(void)[9])) = 67)) and
  (to_rep((temp___String_Literal_172(void)[10])) = 76)) and
  (to_rep((temp___String_Literal_172(void)[11])) = 65)) and
  (to_rep((temp___String_Literal_172(void)[12])) = 86)) and
  (to_rep((temp___String_Literal_172(void)[13])) = 69)) and
  (to_rep((temp___String_Literal_172(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[23])) = 32))

logic c27b : (int,character) farray

logic c27b1 : msgtextcount

logic c27b2 : (int,character) farray

logic c27b3 : msgtextcount

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq15 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq15(x, y)]. (((x = y) -> (bool_eq15(x,
  y) = true)) and ((not (x = y)) -> (bool_eq15(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq13 : integer, integer -> bool

logic dummy19 : integer

type t33b__ref = { t33b__content : integer
}

function t33b__ref___projection(a: t33b__ref) : integer = (a).t33b__content

logic attr__ATTRIBUTE_ADDRESS8 : int

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq14 : integer, integer -> bool

logic dummy20 : integer

type t34b__ref = { t34b__content : integer
}

function t34b__ref___projection(a: t34b__ref) : integer = (a).t34b__content

logic attr__ATTRIBUTE_ADDRESS9 : int

logic temp___1015 : int -> (int,character) farray

axiom def_axiom1 :
  (forall temp___1017:int.
  (forall temp___1018:int.
  ((temp___1015(temp___1017)[temp___1018]) = of_rep(temp___1017))))

axiom msgtostrings__def_axiom :
  (msgtostrings = display__msgtostrings__aggregate_def({ us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_161(void);
  rec__display__msglinet__len = of_rep2(22) } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } } } }, { us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text =
  temp___String_Literal_162(void); rec__display__msglinet__len = of_rep2(14)
  } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_163(void);
  rec__display__msglinet__len = of_rep2(11) } } } }, { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_164(void);
  rec__display__msglinet__len = of_rep2(19) } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_165(void);
  rec__display__msglinet__len = of_rep2(13) } } } }, { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_166(void);
  rec__display__msglinet__len = of_rep2(22) } } } }, { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_167(void);
  rec__display__msglinet__len = of_rep2(19) } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_168(void);
  rec__display__msglinet__len = of_rep2(11) } } } }, { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_169(void);
  rec__display__msglinet__len = of_rep2(12) } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_170(void);
  rec__display__msglinet__len = of_rep2(12) } } } }, { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_171(void);
  rec__display__msglinet__len = of_rep2(19) } } } }, { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = temp___String_Literal_172(void);
  rec__display__msglinet__len = of_rep2(13) } } } }))

logic temp___String_Literal_149 : unit -> (int,character) farray

axiom temp___String_Literal_149__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_149(void)[1])) = 32) and
  (to_rep((temp___String_Literal_149(void)[2])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[3])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[4])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[5])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_149(void)[23])) = 32))

axiom blankline__def_axiom :
  ((blankline = temp___String_Literal_149(void)) and
  (blankline1 = of_rep2(0)))

axiom valid_numberlogentries__post_axiom : true

axiom nouser__def_axiom : (nouser = temp___String_Literal_135(void))

 (* File "display.adb", line 93, characters 0-0 *)
goal WP_parameter_def :
  (forall currentdisplay:int.
  forall result____split_fields:(int,character) farray.
  forall result____split_fields1:scrolltextcount. forall i:int.
  forall i1:int. forall o:msgtextcount. forall o1:(int,character) farray.
  forall o2:msgtextcount. forall o3:(int,character) farray.
  forall o4:msgtextcount. forall o5:(int,character) farray.
  forall o6:msgtextcount. forall o7:(int,character) farray.
  forall o8:msgtextcount. forall o9:msgtextcount.
  forall o10:(int,character) farray. forall o11:msgtextcount.
  forall o12:msgtextcount. forall o13:(int,character) farray.
  forall o14:msgtextcount. forall o15:(int,character) farray.
  forall o16:msgtextcount. forall o17:(int,character) farray.
  forall o18:msgtextcount. forall o19:(int,character) farray.
  forall o20:msgtextcount. forall o21:(int,character) farray.
  forall o22:msgtextcount. forall o23:msgtextcount.
  forall o24:(int,character) farray. forall o25:msgtextcount.
  forall o26:msgtextcount. forall o27:(int,character) farray.
  forall o28:msgtextcount. forall o29:(int,character) farray.
  forall o30:msgtextcount. forall o31:(int,character) farray.
  forall o32:msgtextcount. forall o33:(int,character) farray.
  forall o34:msgtextcount. forall o35:(int,character) farray.
  forall o36:msgtextcount. forall o37:msgtextcount.
  forall o38:(int,character) farray. forall o39:msgtextcount.
  forall o40:(int,character) farray. forall o41:msgtextcount.
  forall o42:(int,character) farray. forall o43:msgtextcount.
  forall o44:(int,character) farray. forall o45:msgtextcount.
  forall o46:msgtextcount. forall o47:us_split_fields.
  forall o48:msgtextcount. forall o49:us_split_fields. forall o50:us_rep.
  forall o51:us_rep. forall o52:us_split_fields2. forall o53:msgtextcount.
  forall o54:us_split_fields. forall o55:msgtextcount.
  forall o56:us_split_fields. forall o57:us_rep. forall o58:us_rep.
  forall o59:us_split_fields2. forall o60:msgtextcount.
  forall o61:us_split_fields. forall o62:us_rep. forall o63:us_split_fields2.
  forall o64:msgtextcount. forall o65:us_split_fields. forall o66:us_rep.
  forall o67:us_split_fields2. forall o68:us_rep1. forall o69:us_rep1.
  forall o70:us_rep1. forall o71:us_rep1. forall o72:us_rep1.
  forall o73:us_rep1. forall o74:us_rep1. forall o75:us_rep1.
  forall temp___1019:(int,us_rep1) farray. forall o76:scrolltextcount.
  forall o77:us_split_fields4.
  forall display__setvalue__B30b__result__assume:us_rep2.
  forall temp___981:int. forall temp___979:us_rep2.
  forall temp___982:us_rep1. forall o78:character.
  forall o79:(int,character) farray. forall o80:us_split_fields4.
  forall temp___978:us_rep2. forall o81:scrolltextcount.
  forall o82:us_split_fields4. forall temp___986:us_rep2.
  forall o83:character. forall o84:int. forall o85:(int,character) farray.
  forall o86:us_split_fields4. forall temp___990:us_rep2.
  forall o87:character. forall o88:int. forall o89:(int,character) farray.
  forall o90:us_split_fields4. forall temp___994:us_rep2.
  forall o91:character. forall o92:int. forall o93:(int,character) farray.
  forall o94:us_split_fields4. forall temp___998:us_rep2. forall o95:int.
  forall o96:scrolltextcount. forall o97:us_split_fields4.
  forall temp___1000:us_rep2. forall o98:character.
  forall result:us_split_fields__ref2.
  forall result____split_fields2:us_split_fields4. forall result1:int__ref.
  forall i2:int. forall result____split_fields3:us_split_fields4.
  forall i3:int. forall result2:us_split_fields__ref2.
  forall result____split_fields4:us_split_fields4.
  forall result____split_fields5:us_split_fields__ref2. forall i4:int__ref.
  forall result____split_fields6:us_split_fields4. forall i5:int.
  forall result____split_fields7:us_split_fields__ref2. forall i6:int__ref.
  forall result____split_fields8:us_split_fields4. forall i7:int.
  forall result3:us_split_fields__ref2.
  forall result____split_fields9:us_split_fields4.
  forall result4:us_split_fields__ref2.
  forall result____split_fields10:us_split_fields4.
  forall result5:us_split_fields__ref2.
  forall result____split_fields11:us_split_fields4.
  forall result6:us_split_fields__ref2.
  forall result____split_fields12:us_split_fields4.
  forall result7:us_split_fields__ref2.
  forall result____split_fields13:us_split_fields4. forall result8:int__ref.
  forall i8:int. forall result____split_fields14:us_split_fields4.
  forall i9:int. ((((((((to_rep2(o64) = 13) and (o65 = {
  rec__display__msglinet__text = temp___String_Literal_172(void);
  rec__display__msglinet__len = o64 })) and (o66 = { us_split_fields1 = o65
  })) and (o67 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = o66 })) and (o68 = {
  us_split_fields3 = o67 })) and ((((((to_rep2(o60) = 19) and (o61 = {
  rec__display__msglinet__text = temp___String_Literal_171(void);
  rec__display__msglinet__len = o60 })) and (o62 = { us_split_fields1 = o61
  })) and (o63 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = o62 })) and (o69 = {
  us_split_fields3 = o63 })) and ((((((to_rep2(o55) = 12) and (o56 = {
  rec__display__msglinet__text = temp___String_Literal_170(void);
  rec__display__msglinet__len = o55 })) and (o57 = { us_split_fields1 = o56
  })) and ((((to_rep2(o53) = 12) and (o54 = { rec__display__msglinet__text =
  temp___String_Literal_169(void); rec__display__msglinet__len = o53 })) and
  (o58 = { us_split_fields1 = o54 })) and (o59 = {
  rec__display__msgstrt__top = o58; rec__display__msgstrt__bottom = o57
  }))) and (o70 = { us_split_fields3 = o59 })) and
  ((((((to_rep2(o48) = 11) and (o49 = { rec__display__msglinet__text =
  temp___String_Literal_168(void); rec__display__msglinet__len = o48 })) and
  (o50 = { us_split_fields1 = o49 })) and ((((to_rep2(o46) = 19) and (o47 = {
  rec__display__msglinet__text = temp___String_Literal_167(void);
  rec__display__msglinet__len = o46 })) and (o51 = { us_split_fields1 = o47
  })) and (o52 = { rec__display__msgstrt__top = o51;
  rec__display__msgstrt__bottom = o50 }))) and (o71 = { us_split_fields3 =
  o52 })) and ((((((to_rep2(o37) = 22) and
  ((temp___String_Literal_166(void) = o38) and (o37 = o39))) and
  ((o40 = o38) and (o41 = o39))) and (((blankline = o42) and
  (blankline1 = o43)) and ((o44 = o40) and (o45 = o41)))) and (o72 = {
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = o42; rec__display__msglinet__len = o43 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = o44; rec__display__msglinet__len = o45 } } }
  })) and ((((((to_rep2(o26) = 13) and
  ((temp___String_Literal_165(void) = o27) and (o26 = o28))) and
  ((o29 = o27) and (o30 = o28))) and ((((to_rep2(o23) = 19) and
  ((temp___String_Literal_164(void) = o24) and (o23 = o25))) and
  ((o31 = o24) and (o32 = o25))) and (((o33 = o31) and (o34 = o32)) and
  ((o35 = o29) and (o36 = o30))))) and (o73 = { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = o33; rec__display__msglinet__len = o34 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = o35; rec__display__msglinet__len = o36 } } }
  })) and ((((((to_rep2(o12) = 11) and
  ((temp___String_Literal_163(void) = o13) and (o12 = o14))) and
  ((o15 = o13) and (o16 = o14))) and ((((to_rep2(o9) = 14) and
  ((temp___String_Literal_162(void) = o10) and (o9 = o11))) and
  ((o17 = o10) and (o18 = o11))) and (((o17 = o19) and (o18 = o20)) and
  ((o15 = o21) and (o16 = o22))))) and (o74 = { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = o19; rec__display__msglinet__len = o20 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = o21; rec__display__msglinet__len = o22 } } }
  })) and ((((((to_rep2(o) = 22) and
  ((temp___String_Literal_161(void) = o1) and (o = o2))) and ((o3 = o1) and
  (o4 = o2))) and (((o5 = o3) and (o6 = o4)) and ((blankline = o7) and
  (blankline1 = o8)))) and (o75 = { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = o5; rec__display__msglinet__len = o6 } };
  rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = o7; rec__display__msglinet__len = o8 } } }
  })) and (temp___1019 = display__msgtostrings__aggregate_def(o75, o74, o73,
  o72, o71, o70, o69, o68)))))))))) and (temp___1019 = msgtostrings)) ->
  ((temp___String_Literal_135(void) = nouser) ->
  (in_range4(currentdisplay) -> (in_range4(msg) ->
  ((not (msg = currentdisplay)) -> (((msgtostrings[msg]) = {
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = c27b; rec__display__msglinet__len = c27b1 }
  }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = c27b2; rec__display__msglinet__len = c27b3 }
  } } }) -> (((((to_rep3(o76) = 0) and (o77 = {
  rec__display__scrollstrt__text = temp___1015(32);
  rec__display__scrollstrt__len = o76 })) and
  (display__setvalue__B30b__result__assume = { us_split_fields5 = o77 })) and
  ((result = { us_split_fields__content2 = { rec__display__scrollstrt__text =
  result____split_fields; rec__display__scrollstrt__len =
  result____split_fields1 } }) and
  (result____split_fields2 = (display__setvalue__B30b__result__assume).us_split_fields5))) ->
  ((((result1 = { int__content = i }) and (i2 = 1)) and ((((1 <= i2) and
  (i2 <= to_rep2(c27b1))) and ((((temp___981 = i2) and ((temp___979 = {
  us_split_fields5 = result____split_fields2 }) and ((temp___982 = {
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = c27b; rec__display__msglinet__len = c27b1 }
  }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = c27b2; rec__display__msglinet__len = c27b3 }
  } } }) and ((((1 <= i3) and (i3 <= to_rep2(c27b1))) and (bool_eq10({
  us_split_fields3 = { rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = c27b; rec__display__msglinet__len = c27b1 }
  }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = c27b2; rec__display__msglinet__len = c27b3 }
  } } }, temp___982) = true)) and
  (((((forall temp___980:int. (((1 <= temp___980) and (temp___980 <= 50)) ->
      ((i3 <= temp___980) ->
      (((result____split_fields3).rec__display__scrollstrt__text[temp___980]) = (((temp___979).us_split_fields5).rec__display__scrollstrt__text[temp___980]))))) and
  ((result____split_fields3).rec__display__scrollstrt__len = ((temp___979).us_split_fields5).rec__display__scrollstrt__len)) and
  ((1 <= to_rep2(c27b1)) -> dynamic_property1(1, to_rep2(c27b1), i3))) and
  ((1 <= i3) and (i3 <= to_rep2(c27b1)))) and
  ((((((to_rep(o78) = to_rep((c27b[i3]))) and
  (o79 = ((result____split_fields3).rec__display__scrollstrt__text[i3 <- o78]))) and
  (o80 = { rec__display__scrollstrt__text = o79;
  rec__display__scrollstrt__len =
  (result____split_fields3).rec__display__scrollstrt__len })) and
  (temp___978 = { us_split_fields5 = o80 })) and ((result2 = {
  us_split_fields__content2 = result____split_fields3 }) and
  (result____split_fields4 = (temp___978).us_split_fields5))) and
  (i3 = to_rep2(c27b1)))))))) and (((i4 = { int__content = i3 }) and
  (result____split_fields5 = { us_split_fields__content2 =
  result____split_fields4 })) and ((i5 = i3) and
  (result____split_fields6 = result____split_fields4)))) and (((i6 = i4) and
  (result____split_fields7 = result____split_fields5)) and ((i7 = i5) and
  (result____split_fields8 = result____split_fields6))))) or
  ((not ((1 <= i2) and (i2 <= to_rep2(c27b1)))) and (((i6 = { int__content =
  i2 }) and (result____split_fields7 = { us_split_fields__content2 =
  result____split_fields2 })) and ((i7 = i2) and
  (result____split_fields8 = result____split_fields2)))))) ->
  (((((to_rep3(o81) = to_rep2(c27b1)) and (o82 = {
  rec__display__scrollstrt__text =
  ((result____split_fields7).us_split_fields__content2).rec__display__scrollstrt__text;
  rec__display__scrollstrt__len = o81 })) and (temp___986 = {
  us_split_fields5 = o82 })) and ((result3 = result____split_fields7) and
  (result____split_fields9 = (temp___986).us_split_fields5))) ->
  ((((((to_rep(o83) = 32) and
  ((((1 <= (to_rep3((result____split_fields9).rec__display__scrollstrt__len) + 1)) and
  ((to_rep3((result____split_fields9).rec__display__scrollstrt__len) + 1) <= 50)) and
  (o84 = (to_rep3((result____split_fields9).rec__display__scrollstrt__len) + 1))) and
  (o85 = ((result____split_fields9).rec__display__scrollstrt__text[o84 <- o83])))) and
  (o86 = { rec__display__scrollstrt__text = o85;
  rec__display__scrollstrt__len =
  (result____split_fields9).rec__display__scrollstrt__len })) and
  (temp___990 = { us_split_fields5 = o86 })) and ((result4 = {
  us_split_fields__content2 = result____split_fields9 }) and
  (result____split_fields10 = (temp___990).us_split_fields5))) ->
  ((((((to_rep(o87) = 47) and
  ((((1 <= (to_rep3((result____split_fields10).rec__display__scrollstrt__len) + 2)) and
  ((to_rep3((result____split_fields10).rec__display__scrollstrt__len) + 2) <= 50)) and
  (o88 = (to_rep3((result____split_fields10).rec__display__scrollstrt__len) + 2))) and
  (o89 = ((result____split_fields10).rec__display__scrollstrt__text[o88 <- o87])))) and
  (o90 = { rec__display__scrollstrt__text = o89;
  rec__display__scrollstrt__len =
  (result____split_fields10).rec__display__scrollstrt__len })) and
  (temp___994 = { us_split_fields5 = o90 })) and ((result5 = {
  us_split_fields__content2 = result____split_fields10 }) and
  (result____split_fields11 = (temp___994).us_split_fields5))) ->
  ((((((to_rep(o91) = 32) and
  ((((1 <= (to_rep3((result____split_fields11).rec__display__scrollstrt__len) + 3)) and
  ((to_rep3((result____split_fields11).rec__display__scrollstrt__len) + 3) <= 50)) and
  (o92 = (to_rep3((result____split_fields11).rec__display__scrollstrt__len) + 3))) and
  (o93 = ((result____split_fields11).rec__display__scrollstrt__text[o92 <- o91])))) and
  (o94 = { rec__display__scrollstrt__text = o93;
  rec__display__scrollstrt__len =
  (result____split_fields11).rec__display__scrollstrt__len })) and
  (temp___998 = { us_split_fields5 = o94 })) and ((result6 = {
  us_split_fields__content2 = result____split_fields11 }) and
  (result____split_fields12 = (temp___998).us_split_fields5))) ->
  (((((((o95 = (to_rep3((result____split_fields12).rec__display__scrollstrt__len) + 3)) and
  in_range6((to_rep3((result____split_fields12).rec__display__scrollstrt__len) + 3))) and
  (to_rep3(o96) = o95)) and (o97 = { rec__display__scrollstrt__text =
  (result____split_fields12).rec__display__scrollstrt__text;
  rec__display__scrollstrt__len = o96 })) and (temp___1000 = {
  us_split_fields5 = o97 })) and ((result7 = { us_split_fields__content2 =
  result____split_fields12 }) and
  (result____split_fields13 = (temp___1000).us_split_fields5))) ->
  (((result8 = { int__content = i1 }) and (i8 = 1)) -> (((1 <= i8) and
  (i8 <= to_rep2(c27b3))) -> (((((1 <= i9) and (i9 <= to_rep2(c27b3))) and
  (bool_eq10({ us_split_fields3 = { rec__display__msgstrt__top = {
  us_split_fields1 = { rec__display__msglinet__text = c27b;
  rec__display__msglinet__len = c27b1 } }; rec__display__msgstrt__bottom = {
  us_split_fields1 = { rec__display__msglinet__text = c27b2;
  rec__display__msglinet__len = c27b3 } } } }, { us_split_fields3 = {
  rec__display__msgstrt__top = { us_split_fields1 = {
  rec__display__msglinet__text = c27b; rec__display__msglinet__len = c27b1 }
  }; rec__display__msgstrt__bottom = { us_split_fields1 = {
  rec__display__msglinet__text = c27b2; rec__display__msglinet__len = c27b3 }
  } } }) = true)) and
  (to_rep3((result____split_fields14).rec__display__scrollstrt__len) = (to_rep2(c27b1) + 3))) ->
  (((((result____split_fields14).rec__display__scrollstrt__len = (result____split_fields13).rec__display__scrollstrt__len) and
  ((1 <= to_rep2(c27b3)) -> dynamic_property2(1, to_rep2(c27b3), i9))) and
  ((1 <= i9) and (i9 <= to_rep2(c27b3)))) ->
  ((to_rep(o98) = to_rep((c27b2[i9]))) ->
  in_range1((to_rep3((result____split_fields14).rec__display__scrollstrt__len) + i9)))))))))))))))))))))
