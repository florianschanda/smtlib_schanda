;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.6)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes ((t__ref 0)) (((mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun to_int2 ((_ BitVec 16)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes ((t__ref1 0))
(((mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun to_int3 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort bits_1 0)

(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 1))))

(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))

(declare-fun user_eq (bits_1 bits_1) Bool)

(declare-const dummy bits_1)

(declare-datatypes ((bits_1__ref 0))
(((mk_bits_1__ref (bits_1__content bits_1)))))
(define-fun bits_1__ref___projection ((a bits_1__ref)) bits_1 (bits_1__content
                                                              a))

(declare-fun to_rep (bits_1) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) bits_1)

;; inversion_axiom
  (assert
  (forall ((x bits_1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x bits_1)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 2))))
     (=> (in_range1 y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep
                                                             (of_rep x))) )))

(define-fun to_int4 ((x bits_1)) Int (bv2int (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x bits_1)) (! (in_range_int
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-sort bits_2 0)

(define-fun in_range2 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 3))))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))

(declare-fun user_eq1 (bits_2 bits_2) Bool)

(declare-const dummy1 bits_2)

(declare-datatypes ((bits_2__ref 0))
(((mk_bits_2__ref (bits_2__content bits_2)))))
(define-fun bits_2__ref___projection ((a bits_2__ref)) bits_2 (bits_2__content
                                                              a))

(declare-fun to_rep1 (bits_2) (_ BitVec 8))

(declare-fun of_rep1 ((_ BitVec 8)) bits_2)

;; inversion_axiom
  (assert
  (forall ((x bits_2))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_2)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 4))))
     (=> (in_range2 y) (= (to_rep1 (of_rep1 x)) y))) :pattern ((to_rep1
                                                               (of_rep1 x))) )))

(define-fun to_int5 ((x bits_2)) Int (bv2int (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_2)) (! (in_range_int1
  (to_int5 x)) :pattern ((to_int5 x)) )))

(declare-sort bits_7 0)

(define-fun in_range3 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 127))))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 127)))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (bits_7 bits_7) Bool)

(declare-const dummy2 bits_7)

(declare-datatypes ((bits_7__ref 0))
(((mk_bits_7__ref (bits_7__content bits_7)))))
(define-fun bits_7__ref___projection ((a bits_7__ref)) bits_7 (bits_7__content
                                                              a))

(declare-fun to_rep2 (bits_7) (_ BitVec 8))

(declare-fun of_rep2 ((_ BitVec 8)) bits_7)

;; inversion_axiom
  (assert
  (forall ((x bits_7))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_7)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 128))))
     (=> (in_range3 y) (= (to_rep2 (of_rep2 x)) y))) :pattern ((to_rep2
                                                               (of_rep2 x))) )))

(define-fun to_int6 ((x bits_7)) Int (bv2int (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_7)) (! (in_range_int2
  (to_int6 x)) :pattern ((to_int6 x)) )))

(declare-sort bits_14 0)

(define-fun in_range4 ((x (_ BitVec 16))) Bool (and
                                               (bvule ((_ int2bv 16) 0) x)
                                               (bvule x ((_ int2bv 16) 16383))))

(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 16383)))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 16))

(declare-fun user_eq3 (bits_14 bits_14) Bool)

(declare-const dummy3 bits_14)

(declare-datatypes ((bits_14__ref 0))
(((mk_bits_14__ref (bits_14__content bits_14)))))
(define-fun bits_14__ref___projection ((a bits_14__ref)) bits_14 (bits_14__content
                                                                 a))

(declare-fun to_rep3 (bits_14) (_ BitVec 16))

(declare-fun of_rep3 ((_ BitVec 16)) bits_14)

;; inversion_axiom
  (assert
  (forall ((x bits_14))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_14)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 16)))
  (! (let ((y (bvurem x ((_ int2bv 16) 16384))))
     (=> (in_range4 y) (= (to_rep3 (of_rep3 x)) y))) :pattern ((to_rep3
                                                               (of_rep3 x))) )))

(define-fun to_int7 ((x bits_14)) Int (bv2int (to_rep3 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_14)) (! (in_range_int3
  (to_int7 x)) :pattern ((to_int7 x)) )))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields
  (rec__dw1000__register_types__sys_ctrl_type__sfcst bits_1)(rec__dw1000__register_types__sys_ctrl_type__txstrt bits_1)(rec__dw1000__register_types__sys_ctrl_type__txdlys bits_1)(rec__dw1000__register_types__sys_ctrl_type__cansfcs bits_1)(rec__dw1000__register_types__sys_ctrl_type__trxoff bits_1)(rec__dw1000__register_types__sys_ctrl_type__wait4resp bits_1)(rec__dw1000__register_types__sys_ctrl_type__rxenab bits_1)(rec__dw1000__register_types__sys_ctrl_type__rxdlye bits_1)(rec__dw1000__register_types__sys_ctrl_type__hrbpt bits_1)(rec__dw1000__register_types__sys_ctrl_type__reserved_1 bits_2)(rec__dw1000__register_types__sys_ctrl_type__reserved_2 bits_14)(rec__dw1000__register_types__sys_ctrl_type__reserved_3 bits_7)))))
(define-fun us_split_fields_SFCST__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__sfcst a))

(define-fun us_split_fields_TXSTRT__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__txstrt a))

(define-fun us_split_fields_TXDLYS__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__txdlys a))

(define-fun us_split_fields_CANSFCS__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__cansfcs a))

(define-fun us_split_fields_TRXOFF__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__trxoff a))

(define-fun us_split_fields_WAIT4RESP__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__wait4resp a))

(define-fun us_split_fields_RXENAB__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__rxenab a))

(define-fun us_split_fields_RXDLYE__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__rxdlye a))

(define-fun us_split_fields_HRBPT__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_ctrl_type__hrbpt a))

(define-fun us_split_fields_Reserved_12__projection ((a us_split_fields)) bits_2
  (rec__dw1000__register_types__sys_ctrl_type__reserved_1 a))

(define-fun us_split_fields_Reserved_22__projection ((a us_split_fields)) bits_14
  (rec__dw1000__register_types__sys_ctrl_type__reserved_2 a))

(define-fun us_split_fields_Reserved_3__projection ((a us_split_fields)) bits_7
  (rec__dw1000__register_types__sys_ctrl_type__reserved_3 a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref_10__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep_10__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                               a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__sfcst
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__sfcst
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__txstrt
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__txstrt
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__txdlys
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__txdlys
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__cansfcs
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__cansfcs
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__trxoff
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__trxoff
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__wait4resp
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__wait4resp
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__rxenab
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__rxenab
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__rxdlye
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__rxdlye
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_ctrl_type__hrbpt
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_ctrl_type__hrbpt
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__dw1000__register_types__sys_ctrl_type__reserved_1
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__dw1000__register_types__sys_ctrl_type__reserved_1
                                                  (us_split_fields1 b)))))
                        (= (to_rep3
                           (rec__dw1000__register_types__sys_ctrl_type__reserved_2
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__dw1000__register_types__sys_ctrl_type__reserved_2
                                                  (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__dw1000__register_types__sys_ctrl_type__reserved_3
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__dw1000__register_types__sys_ctrl_type__reserved_3
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const dw1000__register_types__sys_ctrl_type__sfcst__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__sfcst__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__sfcst__position Int)

;; dw1000__register_types__sys_ctrl_type__sfcst__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__sfcst__first__bit))

;; dw1000__register_types__sys_ctrl_type__sfcst__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__sfcst__first__bit dw1000__register_types__sys_ctrl_type__sfcst__last__bit))

;; dw1000__register_types__sys_ctrl_type__sfcst__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__sfcst__position))

(declare-const dw1000__register_types__sys_ctrl_type__txstrt__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__txstrt__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__txstrt__position Int)

;; dw1000__register_types__sys_ctrl_type__txstrt__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__txstrt__first__bit))

;; dw1000__register_types__sys_ctrl_type__txstrt__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__txstrt__first__bit dw1000__register_types__sys_ctrl_type__txstrt__last__bit))

;; dw1000__register_types__sys_ctrl_type__txstrt__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__txstrt__position))

(declare-const dw1000__register_types__sys_ctrl_type__txdlys__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__txdlys__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__txdlys__position Int)

;; dw1000__register_types__sys_ctrl_type__txdlys__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__txdlys__first__bit))

;; dw1000__register_types__sys_ctrl_type__txdlys__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__txdlys__first__bit dw1000__register_types__sys_ctrl_type__txdlys__last__bit))

;; dw1000__register_types__sys_ctrl_type__txdlys__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__txdlys__position))

(declare-const dw1000__register_types__sys_ctrl_type__cansfcs__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__cansfcs__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__cansfcs__position Int)

;; dw1000__register_types__sys_ctrl_type__cansfcs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__cansfcs__first__bit))

;; dw1000__register_types__sys_ctrl_type__cansfcs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__cansfcs__first__bit dw1000__register_types__sys_ctrl_type__cansfcs__last__bit))

;; dw1000__register_types__sys_ctrl_type__cansfcs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__cansfcs__position))

(declare-const dw1000__register_types__sys_ctrl_type__trxoff__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__trxoff__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__trxoff__position Int)

;; dw1000__register_types__sys_ctrl_type__trxoff__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__trxoff__first__bit))

;; dw1000__register_types__sys_ctrl_type__trxoff__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__trxoff__first__bit dw1000__register_types__sys_ctrl_type__trxoff__last__bit))

;; dw1000__register_types__sys_ctrl_type__trxoff__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__trxoff__position))

(declare-const dw1000__register_types__sys_ctrl_type__wait4resp__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__wait4resp__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__wait4resp__position Int)

;; dw1000__register_types__sys_ctrl_type__wait4resp__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_ctrl_type__wait4resp__first__bit))

;; dw1000__register_types__sys_ctrl_type__wait4resp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__wait4resp__first__bit dw1000__register_types__sys_ctrl_type__wait4resp__last__bit))

;; dw1000__register_types__sys_ctrl_type__wait4resp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__wait4resp__position))

(declare-const dw1000__register_types__sys_ctrl_type__rxenab__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__rxenab__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__rxenab__position Int)

;; dw1000__register_types__sys_ctrl_type__rxenab__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__rxenab__first__bit))

;; dw1000__register_types__sys_ctrl_type__rxenab__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__rxenab__first__bit dw1000__register_types__sys_ctrl_type__rxenab__last__bit))

;; dw1000__register_types__sys_ctrl_type__rxenab__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__rxenab__position))

(declare-const dw1000__register_types__sys_ctrl_type__rxdlye__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__rxdlye__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__rxdlye__position Int)

;; dw1000__register_types__sys_ctrl_type__rxdlye__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__rxdlye__first__bit))

;; dw1000__register_types__sys_ctrl_type__rxdlye__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__rxdlye__first__bit dw1000__register_types__sys_ctrl_type__rxdlye__last__bit))

;; dw1000__register_types__sys_ctrl_type__rxdlye__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__rxdlye__position))

(declare-const dw1000__register_types__sys_ctrl_type__hrbpt__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__hrbpt__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__hrbpt__position Int)

;; dw1000__register_types__sys_ctrl_type__hrbpt__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__hrbpt__first__bit))

;; dw1000__register_types__sys_ctrl_type__hrbpt__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__hrbpt__first__bit dw1000__register_types__sys_ctrl_type__hrbpt__last__bit))

;; dw1000__register_types__sys_ctrl_type__hrbpt__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__hrbpt__position))

(declare-const dw1000__register_types__sys_ctrl_type__reserved_1__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__reserved_1__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__reserved_1__position Int)

;; dw1000__register_types__sys_ctrl_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_ctrl_type__reserved_1__first__bit))

;; dw1000__register_types__sys_ctrl_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__reserved_1__first__bit dw1000__register_types__sys_ctrl_type__reserved_1__last__bit))

;; dw1000__register_types__sys_ctrl_type__reserved_1__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_1__position))

(declare-const dw1000__register_types__sys_ctrl_type__reserved_2__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__reserved_2__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__reserved_2__position Int)

;; dw1000__register_types__sys_ctrl_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_ctrl_type__reserved_2__first__bit))

;; dw1000__register_types__sys_ctrl_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__reserved_2__first__bit dw1000__register_types__sys_ctrl_type__reserved_2__last__bit))

;; dw1000__register_types__sys_ctrl_type__reserved_2__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_2__position))

(declare-const dw1000__register_types__sys_ctrl_type__reserved_3__first__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__reserved_3__last__bit Int)

(declare-const dw1000__register_types__sys_ctrl_type__reserved_3__position Int)

;; dw1000__register_types__sys_ctrl_type__reserved_3__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_ctrl_type__reserved_3__first__bit))

;; dw1000__register_types__sys_ctrl_type__reserved_3__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_ctrl_type__reserved_3__first__bit dw1000__register_types__sys_ctrl_type__reserved_3__last__bit))

;; dw1000__register_types__sys_ctrl_type__reserved_3__position_axiom
  (assert (<= 0 dw1000__register_types__sys_ctrl_type__reserved_3__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ((sys_ctrl_type__ref 0))
(((mk_sys_ctrl_type__ref (sys_ctrl_type__content us_rep)))))
(define-fun sys_ctrl_type__ref___projection ((a sys_ctrl_type__ref)) us_rep
  (sys_ctrl_type__content a))

(declare-sort bits_5 0)

(define-fun in_range5 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 31))))

(define-fun in_range_int4 ((x Int)) Bool (and (<= 0 x) (<= x 31)))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 8))

(declare-fun user_eq5 (bits_5 bits_5) Bool)

(declare-const dummy5 bits_5)

(declare-datatypes ((bits_5__ref 0))
(((mk_bits_5__ref (bits_5__content bits_5)))))
(define-fun bits_5__ref___projection ((a bits_5__ref)) bits_5 (bits_5__content
                                                              a))

(declare-fun to_rep4 (bits_5) (_ BitVec 8))

(declare-fun of_rep4 ((_ BitVec 8)) bits_5)

;; inversion_axiom
  (assert
  (forall ((x bits_5))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_5)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 32))))
     (=> (in_range5 y) (= (to_rep4 (of_rep4 x)) y))) :pattern ((to_rep4
                                                               (of_rep4 x))) )))

(define-fun to_int8 ((x bits_5)) Int (bv2int (to_rep4 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_5)) (! (in_range_int4
  (to_int8 x)) :pattern ((to_int8 x)) )))

(declare-datatypes ((us_split_fields2 0))
(((mk___split_fields1
  (rec__dw1000__register_types__sys_status_type__irqs bits_1)(rec__dw1000__register_types__sys_status_type__cplock bits_1)(rec__dw1000__register_types__sys_status_type__esyncr bits_1)(rec__dw1000__register_types__sys_status_type__aat bits_1)(rec__dw1000__register_types__sys_status_type__txfrb bits_1)(rec__dw1000__register_types__sys_status_type__txprs bits_1)(rec__dw1000__register_types__sys_status_type__txphs bits_1)(rec__dw1000__register_types__sys_status_type__txfrs bits_1)(rec__dw1000__register_types__sys_status_type__rxprd bits_1)(rec__dw1000__register_types__sys_status_type__rxsfdd bits_1)(rec__dw1000__register_types__sys_status_type__ldedone bits_1)(rec__dw1000__register_types__sys_status_type__rxphd bits_1)(rec__dw1000__register_types__sys_status_type__rxphe bits_1)(rec__dw1000__register_types__sys_status_type__rxdfr bits_1)(rec__dw1000__register_types__sys_status_type__rxfcg bits_1)(rec__dw1000__register_types__sys_status_type__rxfce bits_1)(rec__dw1000__register_types__sys_status_type__rxrfsl bits_1)(rec__dw1000__register_types__sys_status_type__rxrfto bits_1)(rec__dw1000__register_types__sys_status_type__ldeerr bits_1)(rec__dw1000__register_types__sys_status_type__rxovrr bits_1)(rec__dw1000__register_types__sys_status_type__rxpto bits_1)(rec__dw1000__register_types__sys_status_type__gpioirq bits_1)(rec__dw1000__register_types__sys_status_type__slp2init bits_1)(rec__dw1000__register_types__sys_status_type__rfpll_ll bits_1)(rec__dw1000__register_types__sys_status_type__clkpll_ll bits_1)(rec__dw1000__register_types__sys_status_type__rxsfdto bits_1)(rec__dw1000__register_types__sys_status_type__hpdwarn bits_1)(rec__dw1000__register_types__sys_status_type__txberr bits_1)(rec__dw1000__register_types__sys_status_type__affrej bits_1)(rec__dw1000__register_types__sys_status_type__hsrbp bits_1)(rec__dw1000__register_types__sys_status_type__icrbp bits_1)(rec__dw1000__register_types__sys_status_type__rxrscs bits_1)(rec__dw1000__register_types__sys_status_type__rxprej bits_1)(rec__dw1000__register_types__sys_status_type__txpute bits_1)(rec__dw1000__register_types__sys_status_type__reserved_1 bits_1)(rec__dw1000__register_types__sys_status_type__reserved_2 bits_5)))))
(define-fun us_split_fields_IRQS__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__irqs a))

(define-fun us_split_fields_CPLOCK__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__cplock a))

(define-fun us_split_fields_ESYNCR__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__esyncr a))

(define-fun us_split_fields_AAT__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__aat a))

(define-fun us_split_fields_TXFRB__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__txfrb a))

(define-fun us_split_fields_TXPRS__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__txprs a))

(define-fun us_split_fields_TXPHS__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__txphs a))

(define-fun us_split_fields_TXFRS__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__txfrs a))

(define-fun us_split_fields_RXPRD__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxprd a))

(define-fun us_split_fields_RXSFDD__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxsfdd a))

(define-fun us_split_fields_LDEDONE__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__ldedone a))

(define-fun us_split_fields_RXPHD__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxphd a))

(define-fun us_split_fields_RXPHE__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxphe a))

(define-fun us_split_fields_RXDFR__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxdfr a))

(define-fun us_split_fields_RXFCG__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxfcg a))

(define-fun us_split_fields_RXFCE__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxfce a))

(define-fun us_split_fields_RXRFSL__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxrfsl a))

(define-fun us_split_fields_RXRFTO__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxrfto a))

(define-fun us_split_fields_LDEERR__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__ldeerr a))

(define-fun us_split_fields_RXOVRR__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxovrr a))

(define-fun us_split_fields_RXPTO__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxpto a))

(define-fun us_split_fields_GPIOIRQ__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__gpioirq a))

(define-fun us_split_fields_SLP2INIT__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__slp2init a))

(define-fun us_split_fields_RFPLL_LL__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rfpll_ll a))

(define-fun us_split_fields_CLKPLL_LL__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__clkpll_ll a))

(define-fun us_split_fields_RXSFDTO__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxsfdto a))

(define-fun us_split_fields_HPDWARN__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__hpdwarn a))

(define-fun us_split_fields_TXBERR__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__txberr a))

(define-fun us_split_fields_AFFREJ__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__affrej a))

(define-fun us_split_fields_HSRBP__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__hsrbp a))

(define-fun us_split_fields_ICRBP__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__icrbp a))

(define-fun us_split_fields_RXRSCS__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxrscs a))

(define-fun us_split_fields_RXPREJ__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__rxprej a))

(define-fun us_split_fields_TXPUTE__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__txpute a))

(define-fun us_split_fields_Reserved_14__projection ((a us_split_fields2)) bits_1
  (rec__dw1000__register_types__sys_status_type__reserved_1 a))

(define-fun us_split_fields_Reserved_24__projection ((a us_split_fields2)) bits_5
  (rec__dw1000__register_types__sys_status_type__reserved_2 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_12__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep_12__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                 a))

(define-fun bool_eq1 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__irqs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__irqs
                                                   (us_split_fields3 b))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__cplock
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__cplock
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__esyncr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__esyncr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__aat
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__aat
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__txfrb
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__txfrb
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__txprs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__txprs
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__txphs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__txphs
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__txfrs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__txfrs
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxprd
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxprd
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxsfdd
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxsfdd
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__ldedone
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__ldedone
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxphd
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxphd
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxphe
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxphe
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxdfr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxdfr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxfcg
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxfcg
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxfce
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxfce
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxrfsl
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxrfsl
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxrfto
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxrfto
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__ldeerr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__ldeerr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxovrr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxovrr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxpto
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxpto
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__gpioirq
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__gpioirq
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__slp2init
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__slp2init
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rfpll_ll
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rfpll_ll
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__clkpll_ll
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__clkpll_ll
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxsfdto
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxsfdto
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__hpdwarn
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__hpdwarn
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__txberr
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__txberr
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__affrej
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__affrej
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__hsrbp
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__hsrbp
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__icrbp
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__icrbp
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxrscs
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxrscs
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__rxprej
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__rxprej
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__txpute
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__txpute
                                                   (us_split_fields3 b)))))
                         (= (to_rep
                            (rec__dw1000__register_types__sys_status_type__reserved_1
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_types__sys_status_type__reserved_1
                                                   (us_split_fields3 b)))))
                         (= (to_rep4
                            (rec__dw1000__register_types__sys_status_type__reserved_2
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__dw1000__register_types__sys_status_type__reserved_2
                                                   (us_split_fields3 b)))))
                    true false))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-const dw1000__register_types__sys_status_type__irqs__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__irqs__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__irqs__position Int)

;; dw1000__register_types__sys_status_type__irqs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__irqs__first__bit))

;; dw1000__register_types__sys_status_type__irqs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__irqs__first__bit dw1000__register_types__sys_status_type__irqs__last__bit))

;; dw1000__register_types__sys_status_type__irqs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__irqs__position))

(declare-const dw1000__register_types__sys_status_type__cplock__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__cplock__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__cplock__position Int)

;; dw1000__register_types__sys_status_type__cplock__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__cplock__first__bit))

;; dw1000__register_types__sys_status_type__cplock__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__cplock__first__bit dw1000__register_types__sys_status_type__cplock__last__bit))

;; dw1000__register_types__sys_status_type__cplock__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__cplock__position))

(declare-const dw1000__register_types__sys_status_type__esyncr__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__esyncr__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__esyncr__position Int)

;; dw1000__register_types__sys_status_type__esyncr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__esyncr__first__bit))

;; dw1000__register_types__sys_status_type__esyncr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__esyncr__first__bit dw1000__register_types__sys_status_type__esyncr__last__bit))

;; dw1000__register_types__sys_status_type__esyncr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__esyncr__position))

(declare-const dw1000__register_types__sys_status_type__aat__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__aat__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__aat__position Int)

;; dw1000__register_types__sys_status_type__aat__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__aat__first__bit))

;; dw1000__register_types__sys_status_type__aat__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__aat__first__bit dw1000__register_types__sys_status_type__aat__last__bit))

;; dw1000__register_types__sys_status_type__aat__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__aat__position))

(declare-const dw1000__register_types__sys_status_type__txfrb__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__txfrb__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__txfrb__position Int)

;; dw1000__register_types__sys_status_type__txfrb__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrb__first__bit))

;; dw1000__register_types__sys_status_type__txfrb__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txfrb__first__bit dw1000__register_types__sys_status_type__txfrb__last__bit))

;; dw1000__register_types__sys_status_type__txfrb__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrb__position))

(declare-const dw1000__register_types__sys_status_type__txprs__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__txprs__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__txprs__position Int)

;; dw1000__register_types__sys_status_type__txprs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txprs__first__bit))

;; dw1000__register_types__sys_status_type__txprs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txprs__first__bit dw1000__register_types__sys_status_type__txprs__last__bit))

;; dw1000__register_types__sys_status_type__txprs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txprs__position))

(declare-const dw1000__register_types__sys_status_type__txphs__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__txphs__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__txphs__position Int)

;; dw1000__register_types__sys_status_type__txphs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txphs__first__bit))

;; dw1000__register_types__sys_status_type__txphs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txphs__first__bit dw1000__register_types__sys_status_type__txphs__last__bit))

;; dw1000__register_types__sys_status_type__txphs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txphs__position))

(declare-const dw1000__register_types__sys_status_type__txfrs__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__txfrs__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__txfrs__position Int)

;; dw1000__register_types__sys_status_type__txfrs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrs__first__bit))

;; dw1000__register_types__sys_status_type__txfrs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txfrs__first__bit dw1000__register_types__sys_status_type__txfrs__last__bit))

;; dw1000__register_types__sys_status_type__txfrs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txfrs__position))

(declare-const dw1000__register_types__sys_status_type__rxprd__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxprd__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxprd__position Int)

;; dw1000__register_types__sys_status_type__rxprd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprd__first__bit))

;; dw1000__register_types__sys_status_type__rxprd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxprd__first__bit dw1000__register_types__sys_status_type__rxprd__last__bit))

;; dw1000__register_types__sys_status_type__rxprd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprd__position))

(declare-const dw1000__register_types__sys_status_type__rxsfdd__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxsfdd__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxsfdd__position Int)

;; dw1000__register_types__sys_status_type__rxsfdd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__first__bit))

;; dw1000__register_types__sys_status_type__rxsfdd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxsfdd__first__bit dw1000__register_types__sys_status_type__rxsfdd__last__bit))

;; dw1000__register_types__sys_status_type__rxsfdd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__position))

(declare-const dw1000__register_types__sys_status_type__ldedone__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__ldedone__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__ldedone__position Int)

;; dw1000__register_types__sys_status_type__ldedone__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__ldedone__first__bit))

;; dw1000__register_types__sys_status_type__ldedone__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__ldedone__first__bit dw1000__register_types__sys_status_type__ldedone__last__bit))

;; dw1000__register_types__sys_status_type__ldedone__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__ldedone__position))

(declare-const dw1000__register_types__sys_status_type__rxphd__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxphd__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxphd__position Int)

;; dw1000__register_types__sys_status_type__rxphd__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphd__first__bit))

;; dw1000__register_types__sys_status_type__rxphd__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxphd__first__bit dw1000__register_types__sys_status_type__rxphd__last__bit))

;; dw1000__register_types__sys_status_type__rxphd__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphd__position))

(declare-const dw1000__register_types__sys_status_type__rxphe__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxphe__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxphe__position Int)

;; dw1000__register_types__sys_status_type__rxphe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphe__first__bit))

;; dw1000__register_types__sys_status_type__rxphe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxphe__first__bit dw1000__register_types__sys_status_type__rxphe__last__bit))

;; dw1000__register_types__sys_status_type__rxphe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxphe__position))

(declare-const dw1000__register_types__sys_status_type__rxdfr__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxdfr__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxdfr__position Int)

;; dw1000__register_types__sys_status_type__rxdfr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__first__bit))

;; dw1000__register_types__sys_status_type__rxdfr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxdfr__first__bit dw1000__register_types__sys_status_type__rxdfr__last__bit))

;; dw1000__register_types__sys_status_type__rxdfr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__position))

(declare-const dw1000__register_types__sys_status_type__rxfcg__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxfcg__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxfcg__position Int)

;; dw1000__register_types__sys_status_type__rxfcg__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__first__bit))

;; dw1000__register_types__sys_status_type__rxfcg__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxfcg__first__bit dw1000__register_types__sys_status_type__rxfcg__last__bit))

;; dw1000__register_types__sys_status_type__rxfcg__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__position))

(declare-const dw1000__register_types__sys_status_type__rxfce__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxfce__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxfce__position Int)

;; dw1000__register_types__sys_status_type__rxfce__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfce__first__bit))

;; dw1000__register_types__sys_status_type__rxfce__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxfce__first__bit dw1000__register_types__sys_status_type__rxfce__last__bit))

;; dw1000__register_types__sys_status_type__rxfce__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxfce__position))

(declare-const dw1000__register_types__sys_status_type__rxrfsl__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxrfsl__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxrfsl__position Int)

;; dw1000__register_types__sys_status_type__rxrfsl__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__first__bit))

;; dw1000__register_types__sys_status_type__rxrfsl__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxrfsl__first__bit dw1000__register_types__sys_status_type__rxrfsl__last__bit))

;; dw1000__register_types__sys_status_type__rxrfsl__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__position))

(declare-const dw1000__register_types__sys_status_type__rxrfto__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxrfto__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxrfto__position Int)

;; dw1000__register_types__sys_status_type__rxrfto__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__first__bit))

;; dw1000__register_types__sys_status_type__rxrfto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxrfto__first__bit dw1000__register_types__sys_status_type__rxrfto__last__bit))

;; dw1000__register_types__sys_status_type__rxrfto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__position))

(declare-const dw1000__register_types__sys_status_type__ldeerr__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__ldeerr__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__ldeerr__position Int)

;; dw1000__register_types__sys_status_type__ldeerr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__first__bit))

;; dw1000__register_types__sys_status_type__ldeerr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__ldeerr__first__bit dw1000__register_types__sys_status_type__ldeerr__last__bit))

;; dw1000__register_types__sys_status_type__ldeerr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__position))

(declare-const dw1000__register_types__sys_status_type__rxovrr__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxovrr__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxovrr__position Int)

;; dw1000__register_types__sys_status_type__rxovrr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__first__bit))

;; dw1000__register_types__sys_status_type__rxovrr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxovrr__first__bit dw1000__register_types__sys_status_type__rxovrr__last__bit))

;; dw1000__register_types__sys_status_type__rxovrr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__position))

(declare-const dw1000__register_types__sys_status_type__rxpto__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxpto__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxpto__position Int)

;; dw1000__register_types__sys_status_type__rxpto__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxpto__first__bit))

;; dw1000__register_types__sys_status_type__rxpto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxpto__first__bit dw1000__register_types__sys_status_type__rxpto__last__bit))

;; dw1000__register_types__sys_status_type__rxpto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxpto__position))

(declare-const dw1000__register_types__sys_status_type__gpioirq__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__gpioirq__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__gpioirq__position Int)

;; dw1000__register_types__sys_status_type__gpioirq__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__gpioirq__first__bit))

;; dw1000__register_types__sys_status_type__gpioirq__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__gpioirq__first__bit dw1000__register_types__sys_status_type__gpioirq__last__bit))

;; dw1000__register_types__sys_status_type__gpioirq__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__gpioirq__position))

(declare-const dw1000__register_types__sys_status_type__slp2init__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__slp2init__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__slp2init__position Int)

;; dw1000__register_types__sys_status_type__slp2init__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__slp2init__first__bit))

;; dw1000__register_types__sys_status_type__slp2init__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__slp2init__first__bit dw1000__register_types__sys_status_type__slp2init__last__bit))

;; dw1000__register_types__sys_status_type__slp2init__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__slp2init__position))

(declare-const dw1000__register_types__sys_status_type__rfpll_ll__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rfpll_ll__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rfpll_ll__position Int)

;; dw1000__register_types__sys_status_type__rfpll_ll__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__first__bit))

;; dw1000__register_types__sys_status_type__rfpll_ll__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rfpll_ll__first__bit dw1000__register_types__sys_status_type__rfpll_ll__last__bit))

;; dw1000__register_types__sys_status_type__rfpll_ll__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__position))

(declare-const dw1000__register_types__sys_status_type__clkpll_ll__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__clkpll_ll__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__clkpll_ll__position Int)

;; dw1000__register_types__sys_status_type__clkpll_ll__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__first__bit))

;; dw1000__register_types__sys_status_type__clkpll_ll__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__clkpll_ll__first__bit dw1000__register_types__sys_status_type__clkpll_ll__last__bit))

;; dw1000__register_types__sys_status_type__clkpll_ll__position_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__position))

(declare-const dw1000__register_types__sys_status_type__rxsfdto__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxsfdto__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxsfdto__position Int)

;; dw1000__register_types__sys_status_type__rxsfdto__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__rxsfdto__first__bit))

;; dw1000__register_types__sys_status_type__rxsfdto__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxsfdto__first__bit dw1000__register_types__sys_status_type__rxsfdto__last__bit))

;; dw1000__register_types__sys_status_type__rxsfdto__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxsfdto__position))

(declare-const dw1000__register_types__sys_status_type__hpdwarn__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__hpdwarn__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__hpdwarn__position Int)

;; dw1000__register_types__sys_status_type__hpdwarn__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__hpdwarn__first__bit))

;; dw1000__register_types__sys_status_type__hpdwarn__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__hpdwarn__first__bit dw1000__register_types__sys_status_type__hpdwarn__last__bit))

;; dw1000__register_types__sys_status_type__hpdwarn__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__hpdwarn__position))

(declare-const dw1000__register_types__sys_status_type__txberr__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__txberr__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__txberr__position Int)

;; dw1000__register_types__sys_status_type__txberr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txberr__first__bit))

;; dw1000__register_types__sys_status_type__txberr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txberr__first__bit dw1000__register_types__sys_status_type__txberr__last__bit))

;; dw1000__register_types__sys_status_type__txberr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txberr__position))

(declare-const dw1000__register_types__sys_status_type__affrej__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__affrej__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__affrej__position Int)

;; dw1000__register_types__sys_status_type__affrej__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__affrej__first__bit))

;; dw1000__register_types__sys_status_type__affrej__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__affrej__first__bit dw1000__register_types__sys_status_type__affrej__last__bit))

;; dw1000__register_types__sys_status_type__affrej__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__affrej__position))

(declare-const dw1000__register_types__sys_status_type__hsrbp__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__hsrbp__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__hsrbp__position Int)

;; dw1000__register_types__sys_status_type__hsrbp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__first__bit))

;; dw1000__register_types__sys_status_type__hsrbp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__hsrbp__first__bit dw1000__register_types__sys_status_type__hsrbp__last__bit))

;; dw1000__register_types__sys_status_type__hsrbp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__position))

(declare-const dw1000__register_types__sys_status_type__icrbp__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__icrbp__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__icrbp__position Int)

;; dw1000__register_types__sys_status_type__icrbp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__icrbp__first__bit))

;; dw1000__register_types__sys_status_type__icrbp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__icrbp__first__bit dw1000__register_types__sys_status_type__icrbp__last__bit))

;; dw1000__register_types__sys_status_type__icrbp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__icrbp__position))

(declare-const dw1000__register_types__sys_status_type__rxrscs__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxrscs__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxrscs__position Int)

;; dw1000__register_types__sys_status_type__rxrscs__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__first__bit))

;; dw1000__register_types__sys_status_type__rxrscs__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxrscs__first__bit dw1000__register_types__sys_status_type__rxrscs__last__bit))

;; dw1000__register_types__sys_status_type__rxrscs__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__position))

(declare-const dw1000__register_types__sys_status_type__rxprej__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxprej__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__rxprej__position Int)

;; dw1000__register_types__sys_status_type__rxprej__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprej__first__bit))

;; dw1000__register_types__sys_status_type__rxprej__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__rxprej__first__bit dw1000__register_types__sys_status_type__rxprej__last__bit))

;; dw1000__register_types__sys_status_type__rxprej__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__rxprej__position))

(declare-const dw1000__register_types__sys_status_type__txpute__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__txpute__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__txpute__position Int)

;; dw1000__register_types__sys_status_type__txpute__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txpute__first__bit))

;; dw1000__register_types__sys_status_type__txpute__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__txpute__first__bit dw1000__register_types__sys_status_type__txpute__last__bit))

;; dw1000__register_types__sys_status_type__txpute__position_axiom
  (assert (<= 0 dw1000__register_types__sys_status_type__txpute__position))

(declare-const dw1000__register_types__sys_status_type__reserved_1__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__reserved_1__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__reserved_1__position Int)

;; dw1000__register_types__sys_status_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_1__first__bit))

;; dw1000__register_types__sys_status_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__reserved_1__first__bit
  dw1000__register_types__sys_status_type__reserved_1__last__bit))

;; dw1000__register_types__sys_status_type__reserved_1__position_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_1__position))

(declare-const dw1000__register_types__sys_status_type__reserved_2__first__bit Int)

(declare-const dw1000__register_types__sys_status_type__reserved_2__last__bit Int)

(declare-const dw1000__register_types__sys_status_type__reserved_2__position Int)

;; dw1000__register_types__sys_status_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_2__first__bit))

;; dw1000__register_types__sys_status_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_status_type__reserved_2__first__bit
  dw1000__register_types__sys_status_type__reserved_2__last__bit))

;; dw1000__register_types__sys_status_type__reserved_2__position_axiom
  (assert
  (<= 0 dw1000__register_types__sys_status_type__reserved_2__position))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ((sys_status_type__ref 0))
(((mk_sys_status_type__ref (sys_status_type__content us_rep1)))))
(define-fun sys_status_type__ref___projection ((a sys_status_type__ref)) us_rep1
  (sys_status_type__content a))

(declare-datatypes ((register_type__ref 0))
(((mk_register_type__ref (register_type__content us_rep)))))
(define-fun register_type__ref_10__projection ((a register_type__ref)) us_rep
  (register_type__content a))

(declare-datatypes ((register_type__ref1 0))
(((mk_register_type__ref1 (register_type__content1 us_rep1)))))
(define-fun register_type__ref_12__projection ((a register_type__ref1)) us_rep1
  (register_type__content1 a))

(declare-sort result_type 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (result_type result_type) Bool)

(declare-const dummy7 result_type)

(declare-datatypes ((result_type__ref 0))
(((mk_result_type__ref (result_type__content result_type)))))
(define-fun result_type__ref___projection ((a result_type__ref)) result_type
  (result_type__content a))

(define-fun dynamic_invariant ((temp___expr_3008 Int)
  (temp___is_init_3005 Bool) (temp___skip_constant_3006 Bool)
  (temp___do_toplevel_3007 Bool)) Bool (=>
                                       (or (= temp___is_init_3005 true)
                                       (<= 0 1)) (in_range6
                                       temp___expr_3008)))

(declare-const delayed Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(define-fun dynamic_invariant1 ((temp___expr_274 (_ BitVec 8))
  (temp___is_init_271 Bool) (temp___skip_constant_272 Bool)
  (temp___do_toplevel_273 Bool)) Bool (=>
                                      (or (= temp___is_init_271 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 1)))
                                      (in_range1 temp___expr_274)))

(define-fun dynamic_invariant2 ((temp___expr_280 (_ BitVec 8))
  (temp___is_init_277 Bool) (temp___skip_constant_278 Bool)
  (temp___do_toplevel_279 Bool)) Bool (=>
                                      (or (= temp___is_init_277 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 3)))
                                      (in_range2 temp___expr_280)))

(define-fun dynamic_invariant3 ((temp___expr_298 (_ BitVec 8))
  (temp___is_init_295 Bool) (temp___skip_constant_296 Bool)
  (temp___do_toplevel_297 Bool)) Bool (=>
                                      (or (= temp___is_init_295 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 31)))
                                      (in_range5 temp___expr_298)))

(define-fun dynamic_invariant4 ((temp___expr_310 (_ BitVec 8))
  (temp___is_init_307 Bool) (temp___skip_constant_308 Bool)
  (temp___do_toplevel_309 Bool)) Bool (=>
                                      (or (= temp___is_init_307 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 127)))
                                      (in_range3 temp___expr_310)))

(define-fun dynamic_invariant5 ((temp___expr_352 (_ BitVec 16))
  (temp___is_init_349 Bool) (temp___skip_constant_350 Bool)
  (temp___do_toplevel_351 Bool)) Bool (=>
                                      (or (= temp___is_init_349 true)
                                      (bvule ((_ int2bv 16) 0) ((_ int2bv 16) 16383)))
                                      (in_range4 temp___expr_352)))

(declare-const result__ Int)

(declare-const sys_ctrl_reg__split_fields bits_1)

(declare-const sys_ctrl_reg__split_fields1 bits_1)

(declare-const sys_ctrl_reg__split_fields2 bits_1)

(declare-const sys_ctrl_reg__split_fields3 bits_1)

(declare-const sys_ctrl_reg__split_fields4 bits_1)

(declare-const sys_ctrl_reg__split_fields5 bits_1)

(declare-const sys_ctrl_reg__split_fields6 bits_1)

(declare-const sys_ctrl_reg__split_fields7 bits_1)

(declare-const sys_ctrl_reg__split_fields8 bits_1)

(declare-const sys_ctrl_reg__split_fields9 bits_2)

(declare-const sys_ctrl_reg__split_fields10 bits_14)

(declare-const sys_ctrl_reg__split_fields11 bits_7)

(declare-const sys_status_reg__split_fields us_split_fields__ref1)

(declare-const o bits_7)

(declare-const o1 bits_14)

(declare-const o2 bits_2)

(declare-const o3 bits_1)

(declare-const o4 bits_1)

(declare-const o5 bits_1)

(declare-const o6 bits_1)

(declare-const o7 bits_1)

(declare-const o8 bits_1)

(declare-const o9 bits_1)

(declare-const o10 bits_1)

(declare-const o11 bits_1)

(declare-const o12 bits_1)

(declare-const o13 bits_1)

(declare-const o14 bits_1)

(declare-const o15 bits_1)

(declare-const o16 bits_1)

(declare-const o17 bits_1)

(declare-const o18 bits_1)

(declare-const o19 bits_1)

(declare-const o20 bits_1)

(declare-const o21 bits_2)

(declare-const o22 bits_14)

(declare-const o23 bits_7)

(declare-const temp___3315 bits_1)

(declare-const temp___33151 bits_1)

(declare-const temp___33152 bits_1)

(declare-const temp___33153 bits_1)

(declare-const temp___33154 bits_1)

(declare-const temp___33155 bits_1)

(declare-const temp___33156 bits_1)

(declare-const temp___33157 bits_1)

(declare-const temp___33158 bits_1)

(declare-const temp___33159 bits_2)

(declare-const temp___331510 bits_14)

(declare-const temp___331511 bits_7)

(declare-const o24 bits_1)

(declare-const o25 bits_1)

(declare-const o26 bits_1)

(declare-const o27 bits_1)

(declare-const o28 bits_1)

(declare-const o29 bits_1)

(declare-const o30 bits_1)

(declare-const o31 bits_1)

(declare-const o32 bits_1)

(declare-const o33 bits_1)

(declare-const o34 bits_2)

(declare-const o35 bits_14)

(declare-const o36 bits_7)

(declare-const temp___3317 bits_1)

(declare-const temp___33171 bits_1)

(declare-const temp___33172 bits_1)

(declare-const temp___33173 bits_1)

(declare-const temp___33174 bits_1)

(declare-const temp___33175 bits_1)

(declare-const temp___33176 bits_1)

(declare-const temp___33177 bits_1)

(declare-const temp___33178 bits_1)

(declare-const temp___33179 bits_2)

(declare-const temp___331710 bits_14)

(declare-const temp___331711 bits_7)

(declare-const o37 bits_1)

(declare-const o38 bits_1)

(declare-const o39 bits_1)

(declare-const o40 bits_1)

(declare-const o41 bits_1)

(declare-const o42 bits_1)

(declare-const o43 bits_1)

(declare-const o44 bits_1)

(declare-const o45 bits_1)

(declare-const o46 bits_1)

(declare-const o47 bits_2)

(declare-const o48 bits_14)

(declare-const o49 bits_7)

(declare-const temp___3320 bits_1)

(declare-const temp___33201 bits_1)

(declare-const temp___33202 bits_1)

(declare-const temp___33203 bits_1)

(declare-const temp___33204 bits_1)

(declare-const temp___33205 bits_1)

(declare-const temp___33206 bits_1)

(declare-const temp___33207 bits_1)

(declare-const temp___33208 bits_1)

(declare-const temp___33209 bits_2)

(declare-const temp___332010 bits_14)

(declare-const temp___332011 bits_7)

(declare-const sys_status_reg__split_fields1 us_split_fields2)

(declare-const result bits_1)

(declare-const result1 bits_1)

(declare-const result2 bits_1)

(declare-const result3 bits_1)

(declare-const result4 bits_1)

(declare-const result5 bits_1)

(declare-const result6 bits_1)

(declare-const result7 bits_1)

(declare-const result8 bits_1)

(declare-const result9 bits_2)

(declare-const result10 bits_14)

(declare-const result11 bits_7)

(declare-const sys_ctrl_reg__split_fields12 bits_1)

(declare-const sys_ctrl_reg__split_fields13 bits_1)

(declare-const sys_ctrl_reg__split_fields14 bits_1)

(declare-const sys_ctrl_reg__split_fields15 bits_1)

(declare-const sys_ctrl_reg__split_fields16 bits_1)

(declare-const sys_ctrl_reg__split_fields17 bits_1)

(declare-const sys_ctrl_reg__split_fields18 bits_1)

(declare-const sys_ctrl_reg__split_fields19 bits_1)

(declare-const sys_ctrl_reg__split_fields20 bits_1)

(declare-const sys_ctrl_reg__split_fields21 bits_2)

(declare-const sys_ctrl_reg__split_fields22 bits_14)

(declare-const sys_ctrl_reg__split_fields23 bits_7)

(declare-const result12 bits_1)

(declare-const result13 bits_1)

(declare-const result14 bits_1)

(declare-const result15 bits_1)

(declare-const result16 bits_1)

(declare-const result17 bits_1)

(declare-const result18 bits_1)

(declare-const result19 bits_1)

(declare-const result20 bits_1)

(declare-const result21 bits_2)

(declare-const result22 bits_14)

(declare-const result23 bits_7)

(declare-const sys_ctrl_reg__split_fields24 bits_1)

(declare-const sys_ctrl_reg__split_fields25 bits_1)

(declare-const sys_ctrl_reg__split_fields26 bits_1)

(declare-const sys_ctrl_reg__split_fields27 bits_1)

(declare-const sys_ctrl_reg__split_fields28 bits_1)

(declare-const sys_ctrl_reg__split_fields29 bits_1)

(declare-const sys_ctrl_reg__split_fields30 bits_1)

(declare-const sys_ctrl_reg__split_fields31 bits_1)

(declare-const sys_ctrl_reg__split_fields32 bits_1)

(declare-const sys_ctrl_reg__split_fields33 bits_2)

(declare-const sys_ctrl_reg__split_fields34 bits_14)

(declare-const sys_ctrl_reg__split_fields35 bits_7)

(declare-const device_state us_private)

(declare-const device_state1 us_private)

(declare-const dw1000__registers__sys_status__read__reg__fields us_split_fields2)

(declare-const result24 us_split_fields__ref1)

(declare-const sys_status_reg__split_fields2 us_split_fields2)

(declare-const result25 bits_1)

(declare-const result26 bits_1)

(declare-const result27 bits_1)

(declare-const result28 bits_1)

(declare-const result29 bits_1)

(declare-const result30 bits_1)

(declare-const result31 bits_1)

(declare-const result32 bits_1)

(declare-const result33 bits_1)

(declare-const result34 bits_2)

(declare-const result35 bits_14)

(declare-const result36 bits_7)

(declare-const sys_ctrl_reg__split_fields36 us_split_fields)

(declare-const device_state2 us_private)

(declare-const result37 int__ref)

(declare-const result__1 Int)

(declare-const result38 int__ref)

(declare-const result__2 Int)

(declare-const result39 int__ref)

(declare-const result__3 Int)

(declare-const device_state3 us_private__ref)

(declare-const result__4 int__ref)

(declare-const sys_ctrl_reg__split_fields37 us_split_fields__ref)

(declare-const sys_status_reg__split_fields3 us_split_fields__ref1)

(declare-const device_state4 us_private)

(declare-const result__5 Int)

(declare-const sys_ctrl_reg__split_fields38 us_split_fields)

(declare-const sys_status_reg__split_fields4 us_split_fields2)

(define-fun sys_ctrl_reg__split_fields39 () us_split_fields (mk___split_fields
                                                            sys_ctrl_reg__split_fields24
                                                            sys_ctrl_reg__split_fields25
                                                            sys_ctrl_reg__split_fields26
                                                            sys_ctrl_reg__split_fields27
                                                            sys_ctrl_reg__split_fields28
                                                            sys_ctrl_reg__split_fields29
                                                            sys_ctrl_reg__split_fields30
                                                            sys_ctrl_reg__split_fields31
                                                            sys_ctrl_reg__split_fields32
                                                            sys_ctrl_reg__split_fields33
                                                            sys_ctrl_reg__split_fields34
                                                            sys_ctrl_reg__split_fields35))

(define-fun result__6 () int__ref (mk_int__ref result__))

;; H
  (assert (=> (<= 0 1) (in_range6 result__)))

;; H
  (assert (= (to_rep2 o) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep3 o1) ((_ int2bv 16) 0)))

;; H
  (assert (= (to_rep1 o2) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o3) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o4) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o5) ((_ int2bv 8) 1)))

;; H
  (assert (= (to_rep o6) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o7) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o8) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o9) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o10) ((_ int2bv 8) 0)))

;; H
  (assert (= (to_rep o11) ((_ int2bv 8) 0)))

;; H
  (assert (= o11 o12))

;; H
  (assert (= o10 o13))

;; H
  (assert (= o9 o14))

;; H
  (assert (= o8 o15))

;; H
  (assert (= o7 o16))

;; H
  (assert (= o6 o17))

;; H
  (assert (= o5 o18))

;; H
  (assert (= o4 o19))

;; H
  (assert (= o3 o20))

;; H
  (assert (= o2 o21))

;; H
  (assert (= o1 o22))

;; H
  (assert (= o o23))

;; H
  (assert (= temp___3315 o12))

;; H
  (assert (= temp___33151 o13))

;; H
  (assert (= temp___33152 o14))

;; H
  (assert (= temp___33153 o15))

;; H
  (assert (= temp___33154 o16))

;; H
  (assert (= temp___33155 o17))

;; H
  (assert (= temp___33156 o18))

;; H
  (assert (= temp___33157 o19))

;; H
  (assert (= temp___33158 o20))

;; H
  (assert (= temp___33159 o21))

;; H
  (assert (= temp___331510 o22))

;; H
  (assert (= temp___331511 o23))

;; H
  (assert (= result sys_ctrl_reg__split_fields))

;; H
  (assert (= result1 sys_ctrl_reg__split_fields1))

;; H
  (assert (= result2 sys_ctrl_reg__split_fields2))

;; H
  (assert (= result3 sys_ctrl_reg__split_fields3))

;; H
  (assert (= result4 sys_ctrl_reg__split_fields4))

;; H
  (assert (= result5 sys_ctrl_reg__split_fields5))

;; H
  (assert (= result6 sys_ctrl_reg__split_fields6))

;; H
  (assert (= result7 sys_ctrl_reg__split_fields7))

;; H
  (assert (= result8 sys_ctrl_reg__split_fields8))

;; H
  (assert (= result9 sys_ctrl_reg__split_fields9))

;; H
  (assert (= result10 sys_ctrl_reg__split_fields10))

;; H
  (assert (= result11 sys_ctrl_reg__split_fields11))

;; H
  (assert (= temp___3315 sys_ctrl_reg__split_fields12))

;; H
  (assert (= temp___33151 sys_ctrl_reg__split_fields13))

;; H
  (assert (= temp___33152 sys_ctrl_reg__split_fields14))

;; H
  (assert (= temp___33153 sys_ctrl_reg__split_fields15))

;; H
  (assert (= temp___33154 sys_ctrl_reg__split_fields16))

;; H
  (assert (= temp___33155 sys_ctrl_reg__split_fields17))

;; H
  (assert (= temp___33156 sys_ctrl_reg__split_fields18))

;; H
  (assert (= temp___33157 sys_ctrl_reg__split_fields19))

;; H
  (assert (= temp___33158 sys_ctrl_reg__split_fields20))

;; H
  (assert (= temp___33159 sys_ctrl_reg__split_fields21))

;; H
  (assert (= temp___331510 sys_ctrl_reg__split_fields22))

;; H
  (assert (= temp___331511 sys_ctrl_reg__split_fields23))

;; H
  (assert (=> (= delayed true) (= (to_rep o24) ((_ int2bv 8) 1))))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields12 o25)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields13 o26)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields14 o27)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields15 o28)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields16 o29)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields17 o30)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields18 o31)))

;; H
  (assert (=> (= delayed true) (= o24 o32)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields20 o33)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields21 o34)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields22 o35)))

;; H
  (assert (=> (= delayed true) (= sys_ctrl_reg__split_fields23 o36)))

;; H
  (assert (=> (= delayed true) (= temp___3317 o25)))

;; H
  (assert (=> (= delayed true) (= temp___33171 o26)))

;; H
  (assert (=> (= delayed true) (= temp___33172 o27)))

;; H
  (assert (=> (= delayed true) (= temp___33173 o28)))

;; H
  (assert (=> (= delayed true) (= temp___33174 o29)))

;; H
  (assert (=> (= delayed true) (= temp___33175 o30)))

;; H
  (assert (=> (= delayed true) (= temp___33176 o31)))

;; H
  (assert (=> (= delayed true) (= temp___33177 o32)))

;; H
  (assert (=> (= delayed true) (= temp___33178 o33)))

;; H
  (assert (=> (= delayed true) (= temp___33179 o34)))

;; H
  (assert (=> (= delayed true) (= temp___331710 o35)))

;; H
  (assert (=> (= delayed true) (= temp___331711 o36)))

;; H
  (assert (=> (= delayed true) (= result12 sys_ctrl_reg__split_fields12)))

;; H
  (assert (=> (= delayed true) (= result13 sys_ctrl_reg__split_fields13)))

;; H
  (assert (=> (= delayed true) (= result14 sys_ctrl_reg__split_fields14)))

;; H
  (assert (=> (= delayed true) (= result15 sys_ctrl_reg__split_fields15)))

;; H
  (assert (=> (= delayed true) (= result16 sys_ctrl_reg__split_fields16)))

;; H
  (assert (=> (= delayed true) (= result17 sys_ctrl_reg__split_fields17)))

;; H
  (assert (=> (= delayed true) (= result18 sys_ctrl_reg__split_fields18)))

;; H
  (assert (=> (= delayed true) (= result19 sys_ctrl_reg__split_fields19)))

;; H
  (assert (=> (= delayed true) (= result20 sys_ctrl_reg__split_fields20)))

;; H
  (assert (=> (= delayed true) (= result21 sys_ctrl_reg__split_fields21)))

;; H
  (assert (=> (= delayed true) (= result22 sys_ctrl_reg__split_fields22)))

;; H
  (assert (=> (= delayed true) (= result23 sys_ctrl_reg__split_fields23)))

;; H
  (assert (=> (= delayed true) (= temp___3317 sys_ctrl_reg__split_fields24)))

;; H
  (assert
  (=> (= delayed true) (= temp___33171 sys_ctrl_reg__split_fields25)))

;; H
  (assert
  (=> (= delayed true) (= temp___33172 sys_ctrl_reg__split_fields26)))

;; H
  (assert
  (=> (= delayed true) (= temp___33173 sys_ctrl_reg__split_fields27)))

;; H
  (assert
  (=> (= delayed true) (= temp___33174 sys_ctrl_reg__split_fields28)))

;; H
  (assert
  (=> (= delayed true) (= temp___33175 sys_ctrl_reg__split_fields29)))

;; H
  (assert
  (=> (= delayed true) (= temp___33176 sys_ctrl_reg__split_fields30)))

;; H
  (assert
  (=> (= delayed true) (= temp___33177 sys_ctrl_reg__split_fields31)))

;; H
  (assert
  (=> (= delayed true) (= temp___33178 sys_ctrl_reg__split_fields32)))

;; H
  (assert
  (=> (= delayed true) (= temp___33179 sys_ctrl_reg__split_fields33)))

;; H
  (assert
  (=> (= delayed true) (= temp___331710 sys_ctrl_reg__split_fields34)))

;; H
  (assert
  (=> (= delayed true) (= temp___331711 sys_ctrl_reg__split_fields35)))

;; H
  (assert
  (=> (not (= delayed true))
  (= sys_ctrl_reg__split_fields39 (mk___split_fields
                                  sys_ctrl_reg__split_fields12
                                  sys_ctrl_reg__split_fields13
                                  sys_ctrl_reg__split_fields14
                                  sys_ctrl_reg__split_fields15
                                  sys_ctrl_reg__split_fields16
                                  sys_ctrl_reg__split_fields17
                                  sys_ctrl_reg__split_fields18
                                  sys_ctrl_reg__split_fields19
                                  sys_ctrl_reg__split_fields20
                                  sys_ctrl_reg__split_fields21
                                  sys_ctrl_reg__split_fields22
                                  sys_ctrl_reg__split_fields23))))

;; H
  (assert (=> (= delayed true) (= result24 sys_status_reg__split_fields)))

;; H
  (assert
  (=> (= delayed true)
  (= (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2) dw1000__registers__sys_status__read__reg__fields)))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= (to_rep o37) ((_ int2bv 8) 0)))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields24 o38))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields25 o39))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields26 o40))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields27 o41))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields28 o42))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields29 o43))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields30 o44))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= o37 o45))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields32 o46))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields33 o47))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields34 o48))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields35 o49))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___3320 o38))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33201 o39))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33202 o40))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33203 o41))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33204 o42))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33205 o43))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33206 o44))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33207 o45))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33208 o46))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___33209 o47))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___332010 o48))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= temp___332011 o49))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result25 sys_ctrl_reg__split_fields24))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result26 sys_ctrl_reg__split_fields25))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result27 sys_ctrl_reg__split_fields26))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result28 sys_ctrl_reg__split_fields27))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result29 sys_ctrl_reg__split_fields28))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result30 sys_ctrl_reg__split_fields29))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result31 sys_ctrl_reg__split_fields30))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result32 sys_ctrl_reg__split_fields31))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result33 sys_ctrl_reg__split_fields32))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result34 sys_ctrl_reg__split_fields33))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result35 sys_ctrl_reg__split_fields34))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result36 sys_ctrl_reg__split_fields35))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= sys_ctrl_reg__split_fields36 (mk___split_fields temp___3320 temp___33201
                                  temp___33202 temp___33203 temp___33204
                                  temp___33205 temp___33206 temp___33207
                                  temp___33208 temp___33209 temp___332010
                                  temp___332011)))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result37 result__6))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1))
  (= result__1 1))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1)))
  (= result38 result__6))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1)))
  (= result__2 0))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1)))
  (= sys_ctrl_reg__split_fields36 sys_ctrl_reg__split_fields39))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1)))
  (= result__1 result__2))))

;; H
  (assert
  (=> (= delayed true)
  (=>
  (not
  (= (to_rep
     (rec__dw1000__register_types__sys_status_type__hpdwarn
     (let ((subject sys_status_reg__split_fields))
     sys_status_reg__split_fields2))) ((_ int2bv 8) 1)))
  (= device_state2 device_state1))))

;; H
  (assert (=> (not (= delayed true)) (= result39 result__6)))

;; H
  (assert (=> (not (= delayed true)) (= result__3 0)))

;; H
  (assert
  (=> (not (= delayed true))
  (= (let ((subject sys_status_reg__split_fields))
     (mk___split_fields__ref1 sys_status_reg__split_fields2)) sys_status_reg__split_fields)))

;; H
  (assert
  (=> (not (= delayed true))
  (= sys_ctrl_reg__split_fields36 sys_ctrl_reg__split_fields39)))

;; H
  (assert (=> (not (= delayed true)) (= result__1 result__3)))

;; H
  (assert (=> (not (= delayed true)) (= device_state2 device_state)))

;; H
  (assert
  (=> (not (= delayed true))
  (= sys_status_reg__split_fields2 sys_status_reg__split_fields1)))

;; H
  (assert
  (=> (not (= delayed true))
  (= sys_ctrl_reg__split_fields36 sys_ctrl_reg__split_fields39)))

;; H
  (assert (=> (not (= delayed true)) (= result__1 result__3)))

;; H
  (assert (=> (not (= delayed true)) (= device_state2 device_state)))

;; H
  (assert
  (= sys_status_reg__split_fields3 (let ((subject sys_status_reg__split_fields))
                                   (mk___split_fields__ref1
                                   sys_status_reg__split_fields2))))

;; H
  (assert
  (= sys_ctrl_reg__split_fields37 (mk___split_fields__ref
                                  sys_ctrl_reg__split_fields36)))

;; H
  (assert (= result__4 (mk_int__ref result__1)))

;; H
  (assert (= device_state3 (mk___private__ref device_state2)))

;; H
  (assert (= sys_status_reg__split_fields4 sys_status_reg__split_fields2))

;; H
  (assert (= sys_ctrl_reg__split_fields38 sys_ctrl_reg__split_fields36))

;; H
  (assert (= result__5 result__1))

;; H
  (assert (= device_state4 device_state2))

;; H
  (assert (not (= delayed true)))

(assert
;; WP_parameter_def
 ;; File "dw1000-driver.adb", line 680, characters 0-0
  (not (= (int__content result__4) 0)))
(check-sat)
(exit)
