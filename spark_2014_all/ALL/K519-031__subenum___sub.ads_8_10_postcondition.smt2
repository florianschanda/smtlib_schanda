;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort ext_dir 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (ext_dir ext_dir) Bool)

(declare-const dummy ext_dir)

(declare-datatypes ()
((ext_dir__ref (mk_ext_dir__ref (ext_dir__content ext_dir)))))
(define-fun ext_dir__ref___projection ((a ext_dir__ref)) ext_dir (ext_dir__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= 0 2)) (in_range1 temp___expr_135)))

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const sub__remove_absent__result Int)

(declare-const result Int)

(declare-const sub__remove_absent__result1 Int)

(declare-const result1 Int)

(declare-const sub__remove_absent__result2 Int)

(declare-const sub__remove_absent__result3 Int)

(declare-const sub__remove_absent__result4 Int)

(declare-const sub__remove_absent__result5 Int)

(declare-const sub__remove_absent__result6 Int)

(declare-const sub__remove_absent__result7 Int)

(declare-const sub__remove_absent__result8 Int)

(define-fun sub__remove_absent__result9 () int__ref (mk_int__ref
                                                    sub__remove_absent__result5))

(declare-const result2 Int)

;; H
  (assert (in_range1 x))

;; H
  (assert
  (= sub__remove_absent__result9 (mk_int__ref sub__remove_absent__result3)))

;; H
  (assert (= sub__remove_absent__result6 sub__remove_absent__result4))

;; H
  (assert
  (=> (=> (not (= x 0)) (= x 1))
  (= sub__remove_absent__result1 sub__remove_absent__result3)))

;; H
  (assert
  (=> (=> (not (= x 0)) (= x 1))
  (= sub__remove_absent__result4 sub__remove_absent__result1)))

;; H
  (assert
  (=> (=> (not (= x 0)) (= x 1)) (= result sub__remove_absent__result)))

;; H
  (assert (=> (=> (not (= x 0)) (= x 1)) (= sub__remove_absent__result1 1)))

;; H
  (assert
  (=> (not (=> (not (= x 0)) (= x 1)))
  (= sub__remove_absent__result2 sub__remove_absent__result3)))

;; H
  (assert
  (=> (not (=> (not (= x 0)) (= x 1)))
  (= sub__remove_absent__result4 sub__remove_absent__result2)))

;; H
  (assert
  (=> (not (=> (not (= x 0)) (= x 1)))
  (= result1 sub__remove_absent__result)))

;; H
  (assert
  (=> (not (=> (not (= x 0)) (= x 1))) (= sub__remove_absent__result2 2)))

;; H
  (assert
  (= (mk_int__ref sub__remove_absent__result7) sub__remove_absent__result9))

;; H
  (assert (= sub__remove_absent__result8 sub__remove_absent__result6))

;; H
  (assert (= result2 sub__remove_absent__result7))

;; H
  (assert (= x 2))

(assert
;; WP_parameter_def
 ;; File "sub.ads", line 3, characters 0-0
  (not (= sub__remove_absent__result7 2)))
(check-sat)
(exit)
