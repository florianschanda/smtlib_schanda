;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int
  Int) (Array Int natural))

;; concat_def
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (natural Int) (Array Int natural))

;; singleton_def
  (assert
  (forall ((v natural))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes () ((t3s__ref (mk_t3s__ref (t3s__content integer)))))
(define-fun t3s__ref___projection ((a t3s__ref)) integer (t3s__content a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int natural))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))

(define-fun of_array ((a (Array Int natural)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int natural)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int natural)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content us_t)))))
(define-fun t4s__ref___projection ((a t4s__ref)) us_t (t4s__content a))

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs
 (rec__static_discr__i_holder__unused natural)(rec__static_discr__i_holder__c natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural
  (rec__static_discr__i_holder__unused a))

(define-fun us_split_discrs___2__projection ((a us_split_discrs)) natural
  (rec__static_discr__i_holder__c a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields (rec__static_discr__i_holder__content us_t)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) us_t
  (rec__static_discr__i_holder__content a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__static_discr__i_holder__unused
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__static_discr__i_holder__unused
                                                  (us_split_discrs1 b))))
                        (= (to_rep
                           (rec__static_discr__i_holder__c
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__static_discr__i_holder__c
                                                  (us_split_discrs1 b)))))
                        (= (bool_eq1
                           (rec__static_discr__i_holder__content
                           (us_split_fields1 a))
                           (rec__static_discr__i_holder__content
                           (us_split_fields1 b))) true))
                   true false))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-const static_discr__i_holder__unused__first__bit Int)

(declare-const static_discr__i_holder__unused__last__bit Int)

(declare-const static_discr__i_holder__unused__position Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit static_discr__i_holder__unused__last__bit))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position))

(declare-const static_discr__i_holder__c__first__bit Int)

(declare-const static_discr__i_holder__c__last__bit Int)

(declare-const static_discr__i_holder__c__position Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit static_discr__i_holder__c__last__bit))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position))

(declare-const static_discr__i_holder__content__first__bit Int)

(declare-const static_discr__i_holder__content__last__bit Int)

(declare-const static_discr__i_holder__content__position Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit static_discr__i_holder__content__last__bit))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ()
((i_holder__ref (mk_i_holder__ref (i_holder__content us_rep)))))
(define-fun i_holder__ref___projection ((a i_holder__ref)) us_rep (i_holder__content
                                                                  a))

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-const dummy5 integer)

(declare-datatypes ()
((tT6sP1__ref (mk_tT6sP1__ref (tT6sP1__content integer)))))
(define-fun tT6sP1__ref___projection ((a tT6sP1__ref)) integer (tT6sP1__content
                                                               a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property2 range_first range_last low)
                   (dynamic_property2 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int natural))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))

(define-fun of_array1 ((a (Array Int natural)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size2 Int)

(declare-fun object__size2 ((Array Int natural)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int natural)) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq3 ((x us_t1)
  (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq6 (us_t1 us_t1) Bool)

(declare-const dummy6 us_t1)

(declare-datatypes () ((t6s__ref (mk_t6s__ref (t6s__content us_t1)))))
(define-fun t6s__ref___projection ((a t6s__ref)) us_t1 (t6s__content a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1 (rec__static_discr__i_holder__content1 us_t1)))))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields2)) us_t1
  (rec__static_discr__i_holder__content1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (mk___rep1
 (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs (us_split_discrs2
                                                                 a))

(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)
                                         (mk___split_fields
                                         (let ((temp___134 (rec__static_discr__i_holder__content1
                                                           (us_split_fields3
                                                           a))))
                                         (of_array (to_array1 temp___134)
                                         (first3 temp___134)
                                         (last3 temp___134))))))

(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r)
                                         (mk___split_fields1
                                         (let ((temp___133 (rec__static_discr__i_holder__content
                                                           (us_split_fields1
                                                           r))))
                                         (of_array1 (to_array temp___133)
                                         (first1 temp___133)
                                         (last1 temp___133))))))

(define-fun bool_eq4 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__static_discr__i_holder__unused
                            (us_split_discrs2 a))) (to_rep
                                                   (rec__static_discr__i_holder__unused
                                                   (us_split_discrs2 b))))
                         (= (to_rep
                            (rec__static_discr__i_holder__c
                            (us_split_discrs2 a))) (to_rep
                                                   (rec__static_discr__i_holder__c
                                                   (us_split_discrs2 b)))))
                         (= (bool_eq3
                            (rec__static_discr__i_holder__content1
                            (us_split_fields3 a))
                            (rec__static_discr__i_holder__content1
                            (us_split_fields3 b))) true))
                    true false))

(define-fun in_range3 ((rec__static_discr__i_holder__unused1 Int)
  (rec__static_discr__i_holder__c1 Int)
  (a us_rep)) Bool (and
                   (= rec__static_discr__i_holder__unused1 (to_rep
                                                           (rec__static_discr__i_holder__unused
                                                           (us_split_discrs1
                                                           a))))
                   (= rec__static_discr__i_holder__c1 (to_rep
                                                      (rec__static_discr__i_holder__c
                                                      (us_split_discrs1 a))))))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-const static_discr__i_holder__unused__first__bit1 Int)

(declare-const static_discr__i_holder__unused__last__bit1 Int)

(declare-const static_discr__i_holder__unused__position1 Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit1))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit1 static_discr__i_holder__unused__last__bit1))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position1))

(declare-const static_discr__i_holder__c__first__bit1 Int)

(declare-const static_discr__i_holder__c__last__bit1 Int)

(declare-const static_discr__i_holder__c__position1 Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit1))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit1 static_discr__i_holder__c__last__bit1))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position1))

(declare-const static_discr__i_holder__content__first__bit1 Int)

(declare-const static_discr__i_holder__content__last__bit1 Int)

(declare-const static_discr__i_holder__content__position1 Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit1))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit1 static_discr__i_holder__content__last__bit1))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position1))

(declare-fun user_eq7 (us_rep1 us_rep1) Bool)

(declare-const dummy7 us_rep1)

(declare-datatypes () ((t5s__ref (mk_t5s__ref (t5s__content us_rep1)))))
(define-fun t5s__ref___projection ((a t5s__ref)) us_rep1 (t5s__content a))

(declare-datatypes ()
((us_split_discrs3
 (mk___split_discrs1
 (rec__static_discr__holder__unused natural)(rec__static_discr__holder__c natural)))))
(define-fun us_split_discrs___3__projection ((a us_split_discrs3)) natural
  (rec__static_discr__holder__unused a))

(define-fun us_split_discrs___4__projection ((a us_split_discrs3)) natural
  (rec__static_discr__holder__c a))

(declare-datatypes ()
((us_split_discrs__ref1
 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs3)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs3
  (us_split_discrs__content1 a))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__static_discr__holder__content us_rep1)(rec__static_discr__holder__length natural)))))
(define-fun us_split_fields_Content__3__projection ((a us_split_fields4)) us_rep1
  (rec__static_discr__holder__content a))

(define-fun us_split_fields_Length__projection ((a us_split_fields4)) natural
  (rec__static_discr__holder__length a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2
 (mk___rep2
 (us_split_discrs4 us_split_discrs3)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_discrs3 (us_split_discrs4
                                                                  a))

(define-fun us_rep___6__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                  a))

(define-fun bool_eq5 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (and
                         (= (to_rep
                            (rec__static_discr__holder__unused
                            (us_split_discrs4 a))) (to_rep
                                                   (rec__static_discr__holder__unused
                                                   (us_split_discrs4 b))))
                         (= (to_rep
                            (rec__static_discr__holder__c
                            (us_split_discrs4 a))) (to_rep
                                                   (rec__static_discr__holder__c
                                                   (us_split_discrs4 b)))))
                         (= (bool_eq4
                            (rec__static_discr__holder__content
                            (us_split_fields5 a))
                            (rec__static_discr__holder__content
                            (us_split_fields5 b))) true))
                         (= (to_rep
                            (rec__static_discr__holder__length
                            (us_split_fields5 a))) (to_rep
                                                   (rec__static_discr__holder__length
                                                   (us_split_fields5 b)))))
                    true false))

(declare-const value__size4 Int)

(declare-fun object__size4 (us_rep2) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))

(declare-const static_discr__holder__unused__first__bit Int)

(declare-const static_discr__holder__unused__last__bit Int)

(declare-const static_discr__holder__unused__position Int)

;; static_discr__holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__holder__unused__first__bit))

;; static_discr__holder__unused__last__bit_axiom
  (assert
  (< static_discr__holder__unused__first__bit static_discr__holder__unused__last__bit))

;; static_discr__holder__unused__position_axiom
  (assert (<= 0 static_discr__holder__unused__position))

(declare-const static_discr__holder__c__first__bit Int)

(declare-const static_discr__holder__c__last__bit Int)

(declare-const static_discr__holder__c__position Int)

;; static_discr__holder__c__first__bit_axiom
  (assert (<= 0 static_discr__holder__c__first__bit))

;; static_discr__holder__c__last__bit_axiom
  (assert
  (< static_discr__holder__c__first__bit static_discr__holder__c__last__bit))

;; static_discr__holder__c__position_axiom
  (assert (<= 0 static_discr__holder__c__position))

(declare-const static_discr__holder__content__first__bit Int)

(declare-const static_discr__holder__content__last__bit Int)

(declare-const static_discr__holder__content__position Int)

;; static_discr__holder__content__first__bit_axiom
  (assert (<= 0 static_discr__holder__content__first__bit))

;; static_discr__holder__content__last__bit_axiom
  (assert
  (< static_discr__holder__content__first__bit static_discr__holder__content__last__bit))

;; static_discr__holder__content__position_axiom
  (assert (<= 0 static_discr__holder__content__position))

(declare-const static_discr__holder__length__first__bit Int)

(declare-const static_discr__holder__length__last__bit Int)

(declare-const static_discr__holder__length__position Int)

;; static_discr__holder__length__first__bit_axiom
  (assert (<= 0 static_discr__holder__length__first__bit))

;; static_discr__holder__length__last__bit_axiom
  (assert
  (< static_discr__holder__length__first__bit static_discr__holder__length__last__bit))

;; static_discr__holder__length__position_axiom
  (assert (<= 0 static_discr__holder__length__position))

(declare-fun user_eq8 (us_rep2 us_rep2) Bool)

(declare-const dummy8 us_rep2)

(declare-datatypes ()
((holder__ref (mk_holder__ref (holder__content us_rep2)))))
(define-fun holder__ref___projection ((a holder__ref)) us_rep2 (holder__content
                                                               a))

(define-fun dynamic_invariant1 ((temp___expr_167 us_rep2)
  (temp___is_init_164 Bool) (temp___skip_constant_165 Bool)
  (temp___do_toplevel_166 Bool)) Bool (let ((temp___169 (rec__static_discr__holder__c
                                                        (us_split_discrs4
                                                        temp___expr_167))))
                                      (and (in_range3
                                      (to_rep
                                      (rec__static_discr__holder__unused
                                      (us_split_discrs4 temp___expr_167)))
                                      (to_rep temp___169)
                                      (to_base
                                      (rec__static_discr__holder__content
                                      (us_split_fields5 temp___expr_167))))
                                      (and (dynamic_property3 1
                                      (to_rep temp___169)
                                      (first3
                                      (rec__static_discr__i_holder__content1
                                      (us_split_fields3
                                      (rec__static_discr__holder__content
                                      (us_split_fields5 temp___expr_167)))))
                                      (last3
                                      (rec__static_discr__i_holder__content1
                                      (us_split_fields3
                                      (rec__static_discr__holder__content
                                      (us_split_fields5 temp___expr_167))))))
                                      (and
                                      (= (first3
                                         (rec__static_discr__i_holder__content1
                                         (us_split_fields3
                                         (rec__static_discr__holder__content
                                         (us_split_fields5 temp___expr_167))))) 1)
                                      (= (last3
                                         (rec__static_discr__i_holder__content1
                                         (us_split_fields3
                                         (rec__static_discr__holder__content
                                         (us_split_fields5 temp___expr_167)))))
                                      (to_rep temp___169)))))))

(declare-const e Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const current__split_discrs us_split_discrs3)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const r43b Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const r44b Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq9 (integer integer) Bool)

(declare-const dummy9 integer)

(declare-datatypes ()
((tT45bP1__ref (mk_tT45bP1__ref (tT45bP1__content integer)))))
(define-fun tT45bP1__ref___projection ((a tT45bP1__ref)) integer (tT45bP1__content
                                                                 a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first4 (mk2 f l))) f)
     (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property4 range_first range_last low)
                   (dynamic_property4 range_first range_last high))))))

(declare-datatypes ()
((us_t2 (mk___t2 (elts2 (Array Int natural))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int natural) (elts2 a))

(define-fun of_array2 ((a (Array Int natural)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-const value__size5 Int)

(declare-fun object__size5 ((Array Int natural)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int natural)) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__size5 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__alignment5 a))))

(define-fun bool_eq6 ((x us_t2)
  (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x)))
                  (to_rep1 (last4 (rt2 x))) (elts2 y)
                  (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))

(declare-fun user_eq10 (us_t2 us_t2) Bool)

(declare-const dummy10 us_t2)

(declare-datatypes () ((t45b__ref (mk_t45b__ref (t45b__content us_t2)))))
(define-fun t45b__ref___projection ((a t45b__ref)) us_t2 (t45b__content a))

(declare-datatypes ()
((us_split_fields6
 (mk___split_fields3 (rec__static_discr__i_holder__content2 us_t2)))))
(define-fun us_split_fields_Content__15__projection ((a us_split_fields6)) us_t2
  (rec__static_discr__i_holder__content2 a))

(declare-datatypes ()
((us_split_fields__ref3
 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___15__projection ((a us_split_fields__ref3)) us_split_fields6
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3
 (mk___rep3
 (us_split_discrs5 us_split_discrs)(us_split_fields7 us_split_fields6)))))
(define-fun us_rep___29__projection ((a us_rep3)) us_split_discrs (us_split_discrs5
                                                                  a))

(define-fun us_rep___30__projection ((a us_rep3)) us_split_fields6 (us_split_fields7
                                                                   a))

(define-fun to_base1 ((a us_rep3)) us_rep (mk___rep (us_split_discrs5 a)
                                          (mk___split_fields
                                          (let ((temp___147 (rec__static_discr__i_holder__content2
                                                            (us_split_fields7
                                                            a))))
                                          (of_array (to_array2 temp___147)
                                          (first5 temp___147)
                                          (last5 temp___147))))))

(define-fun of_base1 ((r us_rep)) us_rep3 (mk___rep3 (us_split_discrs1 r)
                                          (mk___split_fields3
                                          (let ((temp___146 (rec__static_discr__i_holder__content
                                                            (us_split_fields1
                                                            r))))
                                          (of_array2 (to_array temp___146)
                                          (first1 temp___146)
                                          (last1 temp___146))))))

(define-fun bool_eq7 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__static_discr__i_holder__unused
                            (us_split_discrs5 a))) (to_rep
                                                   (rec__static_discr__i_holder__unused
                                                   (us_split_discrs5 b))))
                         (= (to_rep
                            (rec__static_discr__i_holder__c
                            (us_split_discrs5 a))) (to_rep
                                                   (rec__static_discr__i_holder__c
                                                   (us_split_discrs5 b)))))
                         (= (bool_eq6
                            (rec__static_discr__i_holder__content2
                            (us_split_fields7 a))
                            (rec__static_discr__i_holder__content2
                            (us_split_fields7 b))) true))
                    true false))

(define-fun in_range4 ((rec__static_discr__i_holder__unused1 Int)
  (rec__static_discr__i_holder__c1 Int)
  (a us_rep)) Bool (and
                   (= rec__static_discr__i_holder__unused1 (to_rep
                                                           (rec__static_discr__i_holder__unused
                                                           (us_split_discrs1
                                                           a))))
                   (= rec__static_discr__i_holder__c1 (to_rep
                                                      (rec__static_discr__i_holder__c
                                                      (us_split_discrs1 a))))))

(declare-const value__size6 Int)

(declare-fun object__size6 (us_rep3) Int)

(declare-const value__alignment6 Int)

(declare-fun object__alignment6 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment6 a))))

(declare-const static_discr__i_holder__unused__first__bit2 Int)

(declare-const static_discr__i_holder__unused__last__bit2 Int)

(declare-const static_discr__i_holder__unused__position2 Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit2))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit2 static_discr__i_holder__unused__last__bit2))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position2))

(declare-const static_discr__i_holder__c__first__bit2 Int)

(declare-const static_discr__i_holder__c__last__bit2 Int)

(declare-const static_discr__i_holder__c__position2 Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit2))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit2 static_discr__i_holder__c__last__bit2))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position2))

(declare-const static_discr__i_holder__content__first__bit2 Int)

(declare-const static_discr__i_holder__content__last__bit2 Int)

(declare-const static_discr__i_holder__content__position2 Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit2))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit2 static_discr__i_holder__content__last__bit2))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position2))

(declare-fun user_eq11 (us_rep3 us_rep3) Bool)

(declare-const dummy11 us_rep3)

(declare-datatypes () ((s42b__ref (mk_s42b__ref (s42b__content us_rep3)))))
(define-fun s42b__ref___projection ((a s42b__ref)) us_rep3 (s42b__content a))

(define-fun dynamic_invariant2 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant3 ((temp___expr_160 us_rep)
  (temp___is_init_157 Bool) (temp___skip_constant_158 Bool)
  (temp___do_toplevel_159 Bool)) Bool (let ((temp___162 (rec__static_discr__i_holder__c
                                                        (us_split_discrs1
                                                        temp___expr_160))))
                                      (and (dynamic_property1 1
                                      (to_rep temp___162)
                                      (first1
                                      (rec__static_discr__i_holder__content
                                      (us_split_fields1 temp___expr_160)))
                                      (last1
                                      (rec__static_discr__i_holder__content
                                      (us_split_fields1 temp___expr_160))))
                                      (and
                                      (= (first1
                                         (rec__static_discr__i_holder__content
                                         (us_split_fields1 temp___expr_160))) 1)
                                      (= (last1
                                         (rec__static_discr__i_holder__content
                                         (us_split_fields1 temp___expr_160)))
                                      (to_rep temp___162))))))

(define-fun dynamic_invariant4 ((temp___expr_272 us_rep3)
  (temp___is_init_269 Bool) (temp___skip_constant_270 Bool)
  (temp___do_toplevel_271 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_270 true))
                                      (in_range4 r43b r44b
                                      (to_base1 temp___expr_272)))
                                      (and (dynamic_property5 1 r44b
                                      (first5
                                      (rec__static_discr__i_holder__content2
                                      (us_split_fields7 temp___expr_272)))
                                      (last5
                                      (rec__static_discr__i_holder__content2
                                      (us_split_fields7 temp___expr_272))))
                                      (and
                                      (= (first5
                                         (rec__static_discr__i_holder__content2
                                         (us_split_fields7 temp___expr_272))) 1)
                                      (= (last5
                                         (rec__static_discr__i_holder__content2
                                         (us_split_fields7 temp___expr_272)))
                                      r44b)))))

(define-fun default_initial_assumption ((temp___expr_276 us_rep3)
  (temp___skip_top_level_277 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__static_discr__i_holder__unused
                                            (us_split_discrs5
                                            temp___expr_276))) r43b)
                                         (= (to_rep
                                            (rec__static_discr__i_holder__c
                                            (us_split_discrs5
                                            temp___expr_276))) r44b)))

(declare-const current__split_fields natural)

(declare-const current__split_fields1 natural)

(declare-const current__split_fields2 (Array Int natural))

(declare-const current__split_fields3 t1)

(declare-const current__split_fields4 natural)

(declare-const result__ Int)

(declare-const us Int)

(declare-const us1 Int)

(declare-const o Int)

(declare-const o1 natural)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const o4 natural)

(declare-const o5 natural)

(declare-const o6 natural)

(declare-const o7 (Array Int natural))

(declare-const o8 t1)

(declare-const o9 natural)

(declare-const temp___407 natural)

(declare-const temp___4071 natural)

(declare-const temp___4072 natural)

(declare-const temp___4073 natural)

(declare-const temp___4074 (Array Int natural))

(declare-const temp___4075 t1)

(declare-const temp___4076 natural)

(declare-const result Bool)

(declare-const result1 Int)

(declare-const result__1 Int)

(declare-const result2 Int)

(declare-const result__2 Int)

(declare-const result3 us_split_fields__ref2)

(declare-const current__split_fields5 us_split_fields4)

(declare-const current__split_fields6 us_split_fields__ref2)

(declare-const result__3 int__ref)

(declare-const current__split_fields7 us_split_fields4)

(declare-const result__4 Int)

(define-fun result__5 () int__ref (mk_int__ref result__))

;; H
  (assert (dynamic_invariant1
  (mk___rep2 current__split_discrs
  (mk___split_fields2
  (mk___rep1 (mk___split_discrs current__split_fields current__split_fields1)
  (mk___split_fields1
  (mk___t1 current__split_fields2 current__split_fields3)))
  current__split_fields4)) true false true))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 result__)))

;; H
  (assert (in_range2 e))

;; H
  (assert
  (and (<= 1 (to_rep current__split_fields4))
  (<= (to_rep current__split_fields4) (to_rep
                                      (rec__static_discr__holder__c
                                      current__split_discrs)))))

;; H
  (assert
  (= (to_rep (rec__static_discr__holder__unused current__split_discrs))
  r43b))

;; H
  (assert (in_range2 r43b))

;; H
  (assert
  (= (to_rep (rec__static_discr__holder__c current__split_discrs)) r44b))

;; H
  (assert (in_range2 r44b))

;; H
  (assert (and (= us r44b) (in_range2 r44b)))

;; H
  (assert (and (= us1 r43b) (in_range2 r43b)))

;; H
  (assert
  (and
  (<= (to_rep1
      (first4
      (rt2
      (rec__static_discr__i_holder__content2
      (us_split_fields7
      (of_base1
      (to_base
      (mk___rep1
      (mk___split_discrs current__split_fields current__split_fields1)
      (mk___split_fields1
      (mk___t1 current__split_fields2 current__split_fields3))))))))))
  (to_rep current__split_fields4))
  (<= (to_rep current__split_fields4) (to_rep1
                                      (last4
                                      (rt2
                                      (rec__static_discr__i_holder__content2
                                      (us_split_fields7
                                      (of_base1
                                      (to_base
                                      (mk___rep1
                                      (mk___split_discrs
                                      current__split_fields
                                      current__split_fields1)
                                      (mk___split_fields1
                                      (mk___t1 current__split_fields2
                                      current__split_fields3)))))))))))))

;; H
  (assert (= o (to_rep current__split_fields4)))

;; H
  (assert
  (= o1 (select (elts2
                (rec__static_discr__i_holder__content2
                (us_split_fields7
                (of_base1
                (to_base
                (mk___rep1
                (mk___split_discrs current__split_fields
                current__split_fields1)
                (mk___split_fields1
                (mk___t1 current__split_fields2 current__split_fields3))))))))
  o)))

;; H
  (assert (= o2 (to_rep o1)))

;; H
  (assert (= result (ite (= o2 e) true false)))

;; H
  (assert (=> (= result true) (= (mk_int__ref result1) result__5)))

;; H
  (assert (=> (= result true) (= result__1 (to_rep current__split_fields4))))

;; H
  (assert (=> (not (= result true)) (= (mk_int__ref result2) result__5)))

;; H
  (assert (=> (not (= result true)) (= result__2 0)))

;; H
  (assert (=> (not (= result true)) (= result__1 result__2)))

;; H
  (assert
  (and (= o3 (- (to_rep current__split_fields4) 1)) (in_range2
  (- (to_rep current__split_fields4) 1))))

;; H
  (assert (= (to_rep o4) o3))

;; H
  (assert (= current__split_fields o5))

;; H
  (assert (= current__split_fields1 o6))

;; H
  (assert (= current__split_fields2 o7))

;; H
  (assert (= current__split_fields3 o8))

;; H
  (assert (= o4 o9))

;; H
  (assert
  (= current__split_discrs (mk___split_discrs1 temp___407 temp___4071)))

;; H
  (assert (= temp___4072 o5))

;; H
  (assert (= temp___4073 o6))

;; H
  (assert (= temp___4074 o7))

;; H
  (assert (= temp___4075 o8))

;; H
  (assert (= temp___4076 o9))

;; H
  (assert
  (= result3 (mk___split_fields__ref2
             (mk___split_fields2
             (mk___rep1
             (mk___split_discrs current__split_fields current__split_fields1)
             (mk___split_fields1
             (mk___t1 current__split_fields2 current__split_fields3)))
             current__split_fields4))))

;; H
  (assert
  (= current__split_fields5 (mk___split_fields2
                            (mk___rep1
                            (mk___split_discrs temp___4072 temp___4073)
                            (mk___split_fields1
                            (mk___t1 temp___4074 temp___4075))) temp___4076)))

;; H
  (assert
  (= current__split_discrs (mk___split_discrs1 temp___407 temp___4071)))

;; H
  (assert (= result__3 (mk_int__ref result__1)))

;; H
  (assert
  (= current__split_fields6 (mk___split_fields__ref2 current__split_fields5)))

;; H
  (assert (= result__4 result__1))

;; H
  (assert (= current__split_fields7 current__split_fields5))

;; H
  (assert
  (= (bool_eq
     (elts1
     (rec__static_discr__i_holder__content1
     (us_split_fields3
     (rec__static_discr__holder__content
     (us_split_fields__content2 current__split_fields6)))))
     (to_rep1
     (first2
     (rt1
     (rec__static_discr__i_holder__content1
     (us_split_fields3
     (rec__static_discr__holder__content
     (us_split_fields__content2 current__split_fields6)))))))
     (to_rep1
     (last2
     (rt1
     (rec__static_discr__i_holder__content1
     (us_split_fields3
     (rec__static_discr__holder__content
     (us_split_fields__content2 current__split_fields6)))))))
     current__split_fields2 (to_rep1 (first2 current__split_fields3))
     (to_rep1 (last2 current__split_fields3))) true))

;; H
  (assert
  (< (to_rep
     (rec__static_discr__holder__length
     (us_split_fields__content2 current__split_fields6))) (to_rep
                                                          current__split_fields4)))

;; H
  (assert (= (int__content result__3) 0))

(assert
;; WP_parameter_def
 ;; File "static_discr.ads", line 31, characters 0-0
  (not (in_range1
  (+ (to_rep
     (rec__static_discr__holder__length
     (us_split_fields__content2 current__split_fields6))) 1))))
(check-sat)
(exit)
