;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const i Int)

(declare-const j Int)

(declare-const temp___169 Int)

(declare-const temp___168 Int)

(declare-const temp___171 Int)

(declare-const temp___170 Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const result Int)

(declare-const i1 Int)

(declare-const result1 Int)

(declare-const j1 Int)

(declare-const result2 Int)

(declare-const j2 Int)

(declare-const result3 Int)

(declare-const j3 Int)

(declare-const result4 Int)

(declare-const i2 Int)

(declare-const i3 Int)

(declare-const j4 Int)

(declare-const temp___1711 Int)

(declare-const temp___1701 Int)

(declare-const result5 Int)

(declare-const temp___1712 Int)

(declare-const result6 Int)

(declare-const temp___1702 Int)

(declare-const i4 Int)

(declare-const j5 Int)

(declare-const i5 Int)

(declare-const j6 Int)

(declare-const i6 Int)

(declare-const j7 int__ref)

(declare-const i7 Int)

(declare-const j8 Int)

(declare-const result7 int__ref)

(declare-const i8 Int)

(declare-const result8 int__ref)

(declare-const j9 Int)

(declare-const result9 int__ref)

(declare-const j10 Int)

(define-fun i9 () int__ref (mk_int__ref i6))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 i)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 j)))

;; H
  (assert (= result i))

;; H
  (assert (= i1 1))

;; H
  (assert (= result1 j))

;; H
  (assert (= j1 3))

;; H
  (assert (=> (< i1 3) (= temp___169 j1)))

;; H
  (assert (=> (< i1 3) (= temp___168 i1)))

;; H
  (assert (=> (< i1 3) (= 0 temp___171)))

;; H
  (assert (=> (< i1 3) (= 0 temp___170)))

;; H
  (assert
  (=> (< i1 3) (=> (< 0 j1) (and (= o (- j1 1)) (in_range1 (- j1 1))))))

;; H
  (assert (=> (< i1 3) (=> (< 0 j1) (= j1 result2))))

;; H
  (assert (=> (< i1 3) (=> (< 0 j1) (= j2 o))))

;; H
  (assert (=> (< i1 3) (=> (< 0 j1) (= i2 i1))))

;; H
  (assert (=> (< i1 3) (=> (not (< 0 j1)) (= j1 result3))))

;; H
  (assert (=> (< i1 3) (=> (not (< 0 j1)) (= j3 3))))

;; H
  (assert
  (=> (< i1 3)
  (=> (not (< 0 j1)) (and (= o1 (+ i1 1)) (in_range1 (+ i1 1))))))

;; H
  (assert (=> (< i1 3) (=> (not (< 0 j1)) (= i1 result4))))

;; H
  (assert (=> (< i1 3) (=> (not (< 0 j1)) (= i2 o1))))

;; H
  (assert (=> (< i1 3) (=> (not (< 0 j1)) (= j2 j3))))

;; H
  (assert
  (=> (< i1 3)
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 i3))
  (=> (<= (- 2147483648) 2147483647) (in_range1 j4)))))

;; H
  (assert (=> (< i1 3) (= temp___1711 result5)))

;; H
  (assert (=> (< i1 3) (= temp___1712 i3)))

;; H
  (assert (=> (< i1 3) (= temp___1701 result6)))

;; H
  (assert (=> (< i1 3) (= temp___1702 j4)))

;; H
  (assert (=> (< i1 3) (not (< i3 3))))

;; H
  (assert (=> (< i1 3) (= j4 j5)))

;; H
  (assert (=> (< i1 3) (= i3 i4)))

;; H
  (assert (=> (< i1 3) (= j6 j4)))

;; H
  (assert (=> (< i1 3) (= i5 i3)))

;; H
  (assert (=> (< i1 3) (= j7 (mk_int__ref j5))))

;; H
  (assert (=> (< i1 3) (= i9 (mk_int__ref i4))))

;; H
  (assert (=> (< i1 3) (= j8 j6)))

;; H
  (assert (=> (< i1 3) (= i7 i5)))

;; H
  (assert (=> (not (< i1 3)) (= j7 (mk_int__ref j1))))

;; H
  (assert (=> (not (< i1 3)) (= i1 i6)))

;; H
  (assert (=> (not (< i1 3)) (= j8 j1)))

;; H
  (assert (=> (not (< i1 3)) (= i7 i1)))

;; H
  (assert (= result7 i9))

;; H
  (assert (= i8 1))

;; H
  (assert (= result8 j7))

;; H
  (assert (= j9 3))

;; H
  (assert (< i8 3))

;; H
  (assert (not (< 0 j9)))

;; H
  (assert (= result9 (mk_int__ref j9)))

;; H
  (assert (= j10 3))

(assert
;; WP_parameter_def
 ;; File "loopvariant.adb", line 3, characters 0-0
  (not (in_range1 (- i8 1))))
(check-sat)
(exit)
